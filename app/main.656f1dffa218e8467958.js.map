{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./jslib/common/src/abstractions/i18n.service.ts","webpack:///./jslib/common/src/abstractions/log.service.ts","webpack:///./jslib/common/src/abstractions/platformUtils.service.ts","webpack:///./jslib/common/src/abstractions/api.service.ts","webpack:///./jslib/common/src/abstractions/user.service.ts","webpack:///./jslib/angular/src/pipes/i18n.pipe.ts","webpack:///./jslib/angular/src/directives/a11y-title.directive.ts","webpack:///./jslib/common/src/abstractions/messaging.service.ts","webpack:///./jslib/common/src/abstractions/crypto.service.ts","webpack:///./jslib/angular/src/directives/api-action.directive.ts","webpack:///./jslib/angular/src/components/callout.component.ts","webpack:///./jslib/angular/src/components/callout.component.html","webpack:///./jslib/angular/src/services/modal.service.ts","webpack:///./jslib/common/src/abstractions/cipher.service.ts","webpack:///./jslib/common/src/models/response/baseResponse.ts","webpack:///./jslib/common/src/abstractions/policy.service.ts","webpack:///./jslib/common/src/misc/utils.ts","webpack:///./jslib/common/src/importers/baseImporter.ts","webpack:///./jslib/common/src/models/domain/importResult.ts","webpack:///./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/common/src/abstractions/state.service.ts","webpack:///./jslib/angular/src/directives/stop-click.directive.ts","webpack:///./jslib/common/src/abstractions/sync.service.ts","webpack:///./jslib/common/src/abstractions/storage.service.ts","webpack:///./jslib/common/src/enums/cipherType.ts","webpack:///./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack:///./jslib/common/src/abstractions/environment.service.ts","webpack:///./jslib/common/src/abstractions/collection.service.ts","webpack:///./jslib/common/src/abstractions/userVerification.service.ts","webpack:///./jslib/angular/src/directives/stop-prop.directive.ts","webpack:///./jslib/angular/src/directives/input-verbatim.directive.ts","webpack:///./jslib/common/src/abstractions/auth.service.ts","webpack:///./jslib/common/src/abstractions/folder.service.ts","webpack:///./jslib/common/src/enums/policyType.ts","webpack:///./jslib/common/src/abstractions/search.service.ts","webpack:///./jslib/common/src/abstractions/event.service.ts","webpack:///./jslib/angular/src/pipes/user-name.pipe.ts","webpack:///./jslib/common/src/services/constants.service.ts","webpack:///./jslib/angular/src/directives/autofocus.directive.ts","webpack:///./jslib/angular/src/components/avatar.component.ts","webpack:///./jslib/common/src/abstractions/keyConnector.service.ts","webpack:///./jslib/common/src/models/domain/domainBase.ts","webpack:///./jslib/angular/src/services/validation.service.ts","webpack:///./jslib/common/src/models/view/cardView.ts","webpack:///./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack:///./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack:///./jslib/common/src/models/domain/encString.ts","webpack:///./jslib/common/src/abstractions/audit.service.ts","webpack:///./jslib/common/src/models/request/secretVerificationRequest.ts","webpack:///./jslib/common/src/models/view/secureNoteView.ts","webpack:///./jslib/common/src/enums/secureNoteType.ts","webpack:///./jslib/angular/src/components/icon.component.ts","webpack:///./jslib/angular/src/components/icon.component.html","webpack:///./jslib/common/src/abstractions/token.service.ts","webpack:///./jslib/common/src/abstractions/export.service.ts","webpack:///./jslib/angular/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/enums/twoFactorProviderType.ts","webpack:///./src/app/organizations/policies/base-policy.component.ts","webpack:///./jslib/angular/src/pipes/search.pipe.ts","webpack:///./jslib/common/src/abstractions/totp.service.ts","webpack:///./jslib/common/src/enums/fieldType.ts","webpack:///./jslib/common/src/abstractions/send.service.ts","webpack:///./src/app/settings/payment.component.ts","webpack:///./src/app/settings/payment.component.html","webpack:///./jslib/common/src/models/view/cipherView.ts","webpack:///./jslib/common/src/models/view/identityView.ts","webpack:///./jslib/common/src/models/view/folderView.ts","webpack:///./src/app/settings/tax-info.component.ts","webpack:///./src/app/settings/tax-info.component.html","webpack:///./src/app/services/event.service.ts","webpack:///./jslib/angular/src/components/verify-master-password.component.ts","webpack:///./jslib/angular/src/components/verify-master-password.component.html","webpack:///./jslib/common/src/models/view/loginView.ts","webpack:///./src/app/settings/organization-plans.component.ts","webpack:///./src/app/settings/organization-plans.component.html","webpack:///./jslib/common/src/models/domain/collection.ts","webpack:///./jslib/common/src/models/view/collectionView.ts","webpack:///./jslib/common/src/models/data/cipherData.ts","webpack:///./jslib/common/src/enums/cipherRepromptType.ts","webpack:///./jslib/common/src/enums/sendType.ts","webpack:///./jslib/common/src/models/response/errorResponse.ts","webpack:///./jslib/common/src/enums/eventType.ts","webpack:///./jslib/common/src/enums/organizationUserStatusType.ts","webpack:///./src/app/components/password-strength.component.ts","webpack:///./src/app/components/password-strength.component.html","webpack:///./jslib/common/src/models/data/collectionData.ts","webpack:///./src/app/settings/two-factor-verify.component.ts","webpack:///./src/app/settings/two-factor-verify.component.html","webpack:///./jslib/common/src/models/domain/cipher.ts","webpack:///./src/app/layouts/navbar.component.ts","webpack:///./src/app/layouts/navbar.component.html","webpack:///./src/app/layouts/footer.component.ts","webpack:///./src/app/layouts/footer.component.html","webpack:///./jslib/common/src/enums/planType.ts","webpack:///./jslib/common/src/models/api/permissionsApi.ts","webpack:///./jslib/common/src/enums/organizationUserType.ts","webpack:///./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/common/src/models/request/cipherRequest.ts","webpack:///./jslib/angular/src/components/modal/modal.ref.ts","webpack:///./jslib/common/src/enums/permissions.ts","webpack:///./bitwarden_license/src/app/providers/services/provider.service.ts","webpack:///./jslib/common/src/enums/paymentMethodType.ts","webpack:///./src/app/services/router.service.ts","webpack:///./jslib/common/src/enums/kdfType.ts","webpack:///./src/app/services/policy-list.service.ts","webpack:///./src/app/settings/two-factor-base.component.ts","webpack:///./src/app/tools/cipher-report.component.ts","webpack:///./jslib/common/src/models/view/fieldView.ts","webpack:///./src/app/vault/add-edit.component.ts","webpack:///./src/app/vault/add-edit.component.html","webpack:///./jslib/common/src/abstractions/import.service.ts","webpack:///./src/app/vault/ciphers.component.ts","webpack:///./src/app/vault/ciphers.component.html","webpack:///./jslib/common/src/models/domain/organization.ts","webpack:///./jslib/angular/src/services/auth-guard.service.ts","webpack:///./jslib/common/src/enums/providerUserType.ts","webpack:///./jslib/common/src/enums/themeType.ts","webpack:///./jslib/common/src/enums/productType.ts","webpack:///./jslib/common/src/models/request/keysRequest.ts","webpack:///./src/app/common/base.accept.component.ts","webpack:///./src/app/organizations/manage/entity-events.component.ts","webpack:///./src/app/organizations/manage/entity-events.component.html","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///./jslib/common/src/enums/hashPurpose.ts","webpack:///./jslib/common/src/models/data/policyData.ts","webpack:///./jslib/angular/src/components/change-password.component.ts","webpack:///./jslib/common/src/models/request/selectionReadOnlyRequest.ts","webpack:///./jslib/common/src/models/response/policyResponse.ts","webpack:///./jslib/common/src/models/view/itemView.ts","webpack:///./jslib/common/src/models/view/loginUriView.ts","webpack:///./jslib/common/src/enums/uriMatchType.ts","webpack:///./src/app/vault/add-edit-custom-fields.component.ts","webpack:///./src/app/vault/add-edit-custom-fields.component.html","webpack:///./src/app/vault/groupings.component.ts","webpack:///./src/app/vault/groupings.component.html","webpack:///./jslib/common/src/models/view/sendFileView.ts","webpack:///./jslib/common/src/models/view/sendTextView.ts","webpack:///./jslib/common/src/models/response/cipherResponse.ts","webpack:///./src/app/settings/organizations.component.ts","webpack:///./src/app/settings/organizations.component.html","webpack:///./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/common/src/enums/encryptionType.ts","webpack:///./jslib/common/src/models/request/organizationKeysRequest.ts","webpack:///./jslib/common/src/enums/deviceType.ts","webpack:///./jslib/common/src/enums/providerUserStatusType.ts","webpack:///./jslib/common/src/models/request/provider/providerUserBulkRequest.ts","webpack:///./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-status.component.html","webpack:///./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack:///./jslib/common/src/models/request/organizationUserBulkRequest.ts","webpack:///./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack:///./src/app/layouts/frontend-layout.component.ts","webpack:///./src/app/layouts/frontend-layout.component.html","webpack:///./src/app/providers/providers.component.ts","webpack:///./src/app/providers/providers.component.html","webpack:///./src/app/oss.module.ts","webpack:///./src/app/layouts/organization-layout.component.ts","webpack:///./src/app/layouts/organization-layout.component.html","webpack:///./jslib/common/src/models/domain/policy.ts","webpack:///./jslib/common/src/services/auth.service.ts","webpack:///./src/app/organizations/manage/entity-users.component.ts","webpack:///./src/app/organizations/manage/entity-users.component.html","webpack:///./src/app/organizations/manage/manage.component.ts","webpack:///./src/app/organizations/manage/manage.component.html","webpack:///./src/app/settings/api-key.component.ts","webpack:///./src/app/settings/api-key.component.html","webpack:///./jslib/common/src/enums/verificationType.ts","webpack:///./src/app/settings/purge-vault.component.ts","webpack:///./src/app/settings/purge-vault.component.html","webpack:///./src/app/organizations/settings/delete-organization.component.ts","webpack:///./src/app/organizations/settings/delete-organization.component.html","webpack:///./src/app/settings/user-billing.component.ts","webpack:///./src/app/settings/user-billing.component.html","webpack:///./src/app/settings/add-credit.component.ts","webpack:///./src/app/settings/add-credit.component.html","webpack:///./src/app/settings/adjust-payment.component.ts","webpack:///./src/app/settings/adjust-payment.component.html","webpack:///./src/app/settings/adjust-storage.component.ts","webpack:///./src/app/settings/adjust-storage.component.html","webpack:///./src/app/settings/update-license.component.ts","webpack:///./src/app/settings/update-license.component.html","webpack:///./src/app/settings/two-factor-duo.component.ts","webpack:///./src/app/settings/two-factor-duo.component.html","webpack:///./src/app/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-setup.component.html","webpack:///./src/app/tools/export.component.ts","webpack:///./src/app/tools/export.component.html","webpack:///./src/app/tools/exposed-passwords-report.component.ts","webpack:///./src/app/tools/exposed-passwords-report.component.html","webpack:///./src/app/organizations/vault/add-edit.component.ts","webpack:///./jslib/common/src/enums/linkedIdType.ts","webpack:///./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack:///./jslib/common/src/models/domain/card.ts","webpack:///./jslib/common/src/models/domain/field.ts","webpack:///./jslib/common/src/models/domain/identity.ts","webpack:///./jslib/common/src/models/domain/login.ts","webpack:///./jslib/common/src/models/domain/loginUri.ts","webpack:///./jslib/common/src/models/view/passwordHistoryView.ts","webpack:///./jslib/common/src/models/domain/secureNote.ts","webpack:///./src/app/tools/import.component.ts","webpack:///./src/app/tools/import.component.html","webpack:///./src/app/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/tools/inactive-two-factor-report.component.html","webpack:///./src/app/tools/reused-passwords-report.component.ts","webpack:///./src/app/tools/reused-passwords-report.component.html","webpack:///./src/app/tools/unsecured-websites-report.component.ts","webpack:///./src/app/tools/unsecured-websites-report.component.html","webpack:///./src/app/tools/weak-passwords-report.component.ts","webpack:///./src/app/tools/weak-passwords-report.component.html","webpack:///./src/app/vault/attachments.component.ts","webpack:///./src/app/vault/attachments.component.html","webpack:///./src/app/organizations/vault/ciphers.component.ts","webpack:///./src/app/vault/collections.component.ts","webpack:///./src/app/vault/collections.component.html","webpack:///./src/app/organizations/vault/groupings.component.ts","webpack:///./src/app/vault/bulk-actions.component.ts","webpack:///./src/app/vault/bulk-actions.component.html","webpack:///./jslib/common/src/models/domain/sendFile.ts","webpack:///./jslib/common/src/models/domain/sendText.ts","webpack:///./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/common/src/models/request/folderRequest.ts","webpack:///./jslib/common/src/models/api/sendFileApi.ts","webpack:///./jslib/common/src/models/api/sendTextApi.ts","webpack:///./jslib/angular/src/directives/select-copy.directive.ts","webpack:///./jslib/angular/src/pipes/color-password.pipe.ts","webpack:///./jslib/common/src/abstractions/notifications.service.ts","webpack:///./jslib/common/src/abstractions/settings.service.ts","webpack:///./src/app/services/organization-guard.service.ts","webpack:///./src/app/services/organization-type-guard.service.ts","webpack:///./jslib/common/src/models/response/profileResponse.ts","webpack:///./jslib/common/src/models/response/sendResponse.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./bitwarden_license/src/app/providers/services/provider-guard.service.ts","webpack:///./bitwarden_license/src/app/providers/services/provider-type-guard.service.ts","webpack:///./bitwarden_license/src/app/providers/providers-layout.component.ts","webpack:///./bitwarden_license/src/app/providers/providers-layout.component.html","webpack:///./bitwarden_license/src/app/providers/clients/clients.component.ts","webpack:///./bitwarden_license/src/app/providers/clients/clients.component.html","webpack:///./bitwarden_license/src/app/providers/clients/add-organization.component.ts","webpack:///./bitwarden_license/src/app/providers/clients/add-organization.component.html","webpack:///./bitwarden_license/src/app/providers/clients/create-organization.component.ts","webpack:///./bitwarden_license/src/app/providers/clients/create-organization.component.html","webpack:///./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack:///./jslib/common/src/models/request/taxInfoUpdateRequest.ts","webpack:///./bitwarden_license/src/app/providers/manage/accept-provider.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/accept-provider.component.html","webpack:///./bitwarden_license/src/app/providers/manage/events.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/events.component.html","webpack:///./src/app/common/base.events.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/manage.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/manage.component.html","webpack:///./bitwarden_license/src/app/providers/manage/people.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/people.component.html","webpack:///./src/app/common/base.people.component.ts","webpack:///./src/app/organizations/manage/user-confirm.component.ts","webpack:///./src/app/organizations/manage/user-confirm.component.html","webpack:///./bitwarden_license/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/user-add-edit.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/user-add-edit.component.html","webpack:///./bitwarden_license/src/app/providers/settings/settings.component.ts","webpack:///./bitwarden_license/src/app/providers/settings/settings.component.html","webpack:///./bitwarden_license/src/app/providers/setup/setup-provider.component.ts","webpack:///./bitwarden_license/src/app/providers/setup/setup-provider.component.html","webpack:///./bitwarden_license/src/app/providers/setup/setup.component.ts","webpack:///./bitwarden_license/src/app/providers/setup/setup.component.html","webpack:///./bitwarden_license/src/app/providers/settings/account.component.ts","webpack:///./bitwarden_license/src/app/providers/settings/account.component.html","webpack:///./src/app/components/nested-checkbox.component.ts","webpack:///./src/app/components/nested-checkbox.component.html","webpack:///./src/app/components/password-reprompt.component.ts","webpack:///./src/app/components/password-reprompt.component.html","webpack:///./jslib/angular/src/components/password-reprompt.component.ts","webpack:///./jslib/angular/src/directives/blur-click.directive.ts","webpack:///./src/app/layouts/user-layout.component.ts","webpack:///./src/app/layouts/user-layout.component.html","webpack:///./src/app/accounts/accept-emergency.component.ts","webpack:///./src/app/accounts/accept-emergency.component.html","webpack:///./src/app/accounts/accept-organization.component.ts","webpack:///./src/app/accounts/accept-organization.component.html","webpack:///./src/app/accounts/hint.component.ts","webpack:///./src/app/accounts/hint.component.html","webpack:///./src/app/accounts/lock.component.ts","webpack:///./src/app/accounts/lock.component.html","webpack:///./src/app/accounts/login.component.ts","webpack:///./src/app/accounts/login.component.html","webpack:///./jslib/angular/src/components/captchaProtected.component.ts","webpack:///./src/app/accounts/recover-delete.component.ts","webpack:///./src/app/accounts/recover-delete.component.html","webpack:///./src/app/accounts/recover-two-factor.component.ts","webpack:///./src/app/accounts/recover-two-factor.component.html","webpack:///./src/app/accounts/register.component.ts","webpack:///./src/app/accounts/register.component.html","webpack:///./src/app/accounts/remove-password.component.ts","webpack:///./src/app/accounts/remove-password.component.html","webpack:///./src/app/accounts/set-password.component.ts","webpack:///./src/app/accounts/set-password.component.html","webpack:///./src/app/accounts/sso.component.ts","webpack:///./src/app/accounts/sso.component.html","webpack:///./jslib/angular/src/components/sso.component.ts","webpack:///./src/app/accounts/two-factor-options.component.ts","webpack:///./src/app/accounts/two-factor-options.component.html","webpack:///./src/app/accounts/two-factor.component.ts","webpack:///./src/app/accounts/two-factor.component.html","webpack:///./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack:///./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///./src/app/accounts/update-temp-password.component.ts","webpack:///./src/app/accounts/update-temp-password.component.html","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///./src/app/accounts/verify-email-token.component.ts","webpack:///./src/app/accounts/verify-email-token.component.html","webpack:///./src/app/accounts/verify-recover-delete.component.ts","webpack:///./src/app/accounts/verify-recover-delete.component.html","webpack:///./src/app/organizations/manage/collection-add-edit.component.ts","webpack:///./src/app/organizations/manage/collection-add-edit.component.html","webpack:///./jslib/common/src/models/request/collectionRequest.ts","webpack:///./src/app/organizations/manage/collections.component.ts","webpack:///./src/app/organizations/manage/collections.component.html","webpack:///./src/app/organizations/manage/events.component.ts","webpack:///./src/app/organizations/manage/events.component.html","webpack:///./src/app/organizations/manage/group-add-edit.component.ts","webpack:///./src/app/organizations/manage/group-add-edit.component.html","webpack:///./src/app/organizations/manage/groups.component.ts","webpack:///./src/app/organizations/manage/groups.component.html","webpack:///./src/app/organizations/manage/people.component.ts","webpack:///./src/app/organizations/manage/people.component.html","webpack:///./src/app/organizations/manage/reset-password.component.ts","webpack:///./src/app/organizations/manage/reset-password.component.html","webpack:///./src/app/organizations/manage/user-add-edit.component.ts","webpack:///./src/app/organizations/manage/user-add-edit.component.html","webpack:///./src/app/organizations/manage/user-groups.component.ts","webpack:///./src/app/organizations/manage/user-groups.component.html","webpack:///./src/app/organizations/manage/policies.component.ts","webpack:///./src/app/organizations/manage/policies.component.html","webpack:///./src/app/organizations/manage/policy-edit.component.ts","webpack:///./src/app/organizations/manage/policy-edit.component.html","webpack:///./src/app/organizations/settings/account.component.ts","webpack:///./src/app/organizations/settings/account.component.html","webpack:///./src/app/organizations/settings/adjust-subscription.component.ts","webpack:///./src/app/organizations/settings/adjust-subscription.component.html","webpack:///./src/app/organizations/settings/change-plan.component.ts","webpack:///./src/app/organizations/settings/change-plan.component.html","webpack:///./src/app/organizations/settings/download-license.component.ts","webpack:///./src/app/organizations/settings/download-license.component.html","webpack:///./src/app/organizations/settings/organization-billing.component.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.html","webpack:///./src/app/organizations/settings/settings.component.ts","webpack:///./src/app/organizations/settings/settings.component.html","webpack:///./src/app/organizations/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.html","webpack:///./src/app/settings/two-factor-email.component.ts","webpack:///./src/app/settings/two-factor-email.component.html","webpack:///./src/app/settings/two-factor-recovery.component.ts","webpack:///./src/app/settings/two-factor-recovery.component.html","webpack:///./src/app/settings/two-factor-webauthn.component.ts","webpack:///./src/app/settings/two-factor-webauthn.component.html","webpack:///./src/app/settings/two-factor-yubikey.component.ts","webpack:///./src/app/settings/two-factor-yubikey.component.html","webpack:///./src/app/organizations/tools/export.component.ts","webpack:///./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack:///./jslib/common/src/models/data/attachmentData.ts","webpack:///./jslib/common/src/models/data/cardData.ts","webpack:///./jslib/common/src/models/data/fieldData.ts","webpack:///./jslib/common/src/models/data/identityData.ts","webpack:///./jslib/common/src/models/data/loginData.ts","webpack:///./jslib/common/src/models/data/loginUriData.ts","webpack:///./jslib/common/src/models/data/passwordHistoryData.ts","webpack:///./jslib/common/src/models/data/secureNoteData.ts","webpack:///./jslib/common/src/models/domain/attachment.ts","webpack:///./jslib/common/src/models/domain/password.ts","webpack:///./jslib/common/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/common/src/models/api/cardApi.ts","webpack:///./jslib/common/src/models/api/fieldApi.ts","webpack:///./jslib/common/src/models/api/identityApi.ts","webpack:///./jslib/common/src/models/api/loginApi.ts","webpack:///./jslib/common/src/models/api/loginUriApi.ts","webpack:///./jslib/common/src/models/api/secureNoteApi.ts","webpack:///./jslib/angular/src/directives/true-false-value.directive.ts","webpack:///./jslib/angular/src/directives/fallback-src.directive.ts","webpack:///./src/app/organizations/tools/import.component.ts","webpack:///./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/organizations/tools/reused-passwords-report.component.ts","webpack:///./src/app/organizations/tools/tools.component.ts","webpack:///./src/app/organizations/tools/tools.component.html","webpack:///./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack:///./src/app/organizations/tools/weak-passwords-report.component.ts","webpack:///./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack:///./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack:///./jslib/common/src/enums/planSponsorshipType.ts","webpack:///./src/app/organizations/vault/attachments.component.ts","webpack:///./jslib/angular/src/components/attachments.component.ts","webpack:///./src/app/organizations/vault/collections.component.ts","webpack:///./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack:///./src/app/organizations/vault/vault.component.ts","webpack:///./src/app/organizations/vault/vault.component.html","webpack:///./src/app/vault/bulk-delete.component.ts","webpack:///./src/app/vault/bulk-delete.component.html","webpack:///./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./src/app/vault/bulk-move.component.ts","webpack:///./src/app/vault/bulk-move.component.html","webpack:///./src/app/vault/bulk-restore.component.ts","webpack:///./src/app/vault/bulk-restore.component.html","webpack:///./src/app/vault/bulk-share.component.ts","webpack:///./src/app/vault/bulk-share.component.html","webpack:///./src/app/send/access.component.ts","webpack:///./src/app/send/access.component.html","webpack:///./src/app/send/add-edit.component.ts","webpack:///./src/app/send/add-edit.component.html","webpack:///./jslib/common/src/models/view/sendView.ts","webpack:///./src/app/send/efflux-dates.component.ts","webpack:///./src/app/send/efflux-dates.component.html","webpack:///./src/app/send/send.component.ts","webpack:///./src/app/send/send.component.html","webpack:///./src/app/settings/account.component.ts","webpack:///./src/app/settings/account.component.html","webpack:///./src/app/settings/deauthorize-sessions.component.ts","webpack:///./src/app/settings/deauthorize-sessions.component.html","webpack:///./src/app/settings/delete-account.component.ts","webpack:///./src/app/settings/delete-account.component.html","webpack:///./src/app/settings/profile.component.ts","webpack:///./src/app/settings/profile.component.html","webpack:///./src/app/settings/change-email.component.ts","webpack:///./src/app/settings/change-email.component.html","webpack:///./jslib/common/src/models/request/emailTokenRequest.ts","webpack:///./src/app/settings/change-password.component.ts","webpack:///./src/app/settings/change-password.component.html","webpack:///./jslib/common/src/enums/emergencyAccessStatusType.ts","webpack:///./jslib/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack:///./jslib/common/src/models/request/folderWithIdRequest.ts","webpack:///./jslib/common/src/models/request/passwordRequest.ts","webpack:///./jslib/common/src/models/request/sendRequest.ts","webpack:///./jslib/common/src/models/request/updateKeyRequest.ts","webpack:///./src/app/settings/change-kdf.component.ts","webpack:///./src/app/settings/change-kdf.component.html","webpack:///./src/app/settings/create-organization.component.ts","webpack:///./src/app/settings/create-organization.component.html","webpack:///./src/app/settings/domain-rules.component.ts","webpack:///./src/app/settings/domain-rules.component.html","webpack:///./src/app/settings/emergency-access-add-edit.component.ts","webpack:///./src/app/settings/emergency-access-add-edit.component.html","webpack:///./jslib/common/src/enums/emergencyAccessType.ts","webpack:///./src/app/settings/emergency-access-attachments.component.ts","webpack:///./src/app/settings/emergency-access-confirm.component.ts","webpack:///./src/app/settings/emergency-access-confirm.component.html","webpack:///./src/app/settings/emergency-access-takeover.component.ts","webpack:///./src/app/settings/emergency-access-takeover.component.html","webpack:///./src/app/settings/emergency-access-view.component.ts","webpack:///./src/app/settings/emergency-access-view.component.html","webpack:///./src/app/settings/emergency-add-edit.component.ts","webpack:///./src/app/settings/emergency-access.component.ts","webpack:///./src/app/settings/emergency-access.component.html","webpack:///./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack:///./jslib/common/src/models/response/attachmentResponse.ts","webpack:///./src/app/settings/link-sso.component.ts","webpack:///./src/app/settings/link-sso.component.html","webpack:///./src/app/settings/options.component.ts","webpack:///./src/app/settings/options.component.html","webpack:///./src/app/settings/vault-timeout-input.component.ts","webpack:///./src/app/settings/vault-timeout-input.component.html","webpack:///./src/app/settings/premium.component.ts","webpack:///./src/app/settings/premium.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/sponsored-families.component.ts","webpack:///./src/app/settings/sponsored-families.component.html","webpack:///./src/app/settings/sponsoring-org-row.component.ts","webpack:///./src/app/settings/sponsoring-org-row.component.html","webpack:///./src/app/settings/update-key.component.ts","webpack:///./src/app/settings/update-key.component.html","webpack:///./src/app/settings/user-subscription.component.ts","webpack:///./src/app/settings/user-subscription.component.html","webpack:///./src/app/settings/verify-email.component.ts","webpack:///./src/app/settings/verify-email.component.html","webpack:///./src/app/tools/breach-report.component.ts","webpack:///./src/app/tools/breach-report.component.html","webpack:///./src/app/tools/password-generator-history.component.ts","webpack:///./src/app/tools/password-generator-history.component.html","webpack:///./src/app/tools/password-generator.component.ts","webpack:///./src/app/tools/password-generator.component.html","webpack:///./src/app/tools/tools.component.ts","webpack:///./src/app/tools/tools.component.html","webpack:///./src/app/vault/folder-add-edit.component.ts","webpack:///./src/app/vault/folder-add-edit.component.html","webpack:///./src/app/vault/share.component.ts","webpack:///./src/app/vault/share.component.html","webpack:///./src/app/vault/vault.component.ts","webpack:///./src/app/vault/vault.component.html","webpack:///./src/app/organizations/policies/disable-send.component.ts","webpack:///./src/app/organizations/policies/disable-send.component.html","webpack:///./src/app/organizations/policies/master-password.component.ts","webpack:///./src/app/organizations/policies/master-password.component.html","webpack:///./src/app/organizations/policies/password-generator.component.ts","webpack:///./src/app/organizations/policies/password-generator.component.html","webpack:///./src/app/organizations/policies/personal-ownership.component.ts","webpack:///./src/app/organizations/policies/personal-ownership.component.html","webpack:///./src/app/organizations/policies/require-sso.component.ts","webpack:///./src/app/organizations/policies/require-sso.component.html","webpack:///./src/app/organizations/policies/reset-password.component.ts","webpack:///./src/app/organizations/policies/reset-password.component.html","webpack:///./src/app/organizations/policies/send-options.component.ts","webpack:///./src/app/organizations/policies/send-options.component.html","webpack:///./src/app/organizations/policies/single-org.component.ts","webpack:///./src/app/organizations/policies/single-org.component.html","webpack:///./src/app/organizations/policies/two-factor-authentication.component.ts","webpack:///./src/app/organizations/policies/two-factor-authentication.component.html","webpack:///./bitwarden_license/src/app/policies/disable-personal-vault-export.component.ts","webpack:///./bitwarden_license/src/app/policies/disable-personal-vault-export.component.html","webpack:///./bitwarden_license/src/app/policies/maximum-vault-timeout.component.ts","webpack:///./bitwarden_license/src/app/policies/maximum-vault-timeout.component.html","webpack:///./bitwarden_license/src/app/organizations/manage/sso.component.ts","webpack:///./bitwarden_license/src/app/organizations/manage/sso.component.html","webpack:///./jslib/angular/src/services/lock-guard.service.ts","webpack:///./jslib/angular/src/services/unauth-guard.service.ts","webpack:///./jslib/common/src/models/response/collectionResponse.ts","webpack:///./jslib/common/src/models/response/domainsResponse.ts","webpack:///./jslib/common/src/models/response/folderResponse.ts","webpack:///./jslib/common/src/models/response/organizationResponse.ts","webpack:///./jslib/common/src/models/response/planResponse.ts","webpack:///./jslib/common/src/models/response/subscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///./jslib/common/src/misc/sequentialize.ts","webpack:///./jslib/common/src/misc/serviceUtils.ts","webpack:///./jslib/common/src/services/consoleLog.service.ts","webpack:///./jslib/common/src/misc/wordlist.ts","webpack:///./jslib/common/src/models/export/cipherWithIds.ts","webpack:///./jslib/common/src/models/export/collectionWithId.ts","webpack:///./jslib/common/src/models/export/folderWithId.ts","webpack:///./jslib/common/src/models/domain/folder.ts","webpack:///./jslib/common/src/models/data/folderData.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordCsvImporter.ts","webpack:///./jslib/common/src/enums/notificationType.ts","webpack:///./jslib/common/src/models/data/sendData.ts","webpack:///./bitwarden_license/src/app/main.ts","webpack:///./src/scss/styles.scss?580e","webpack:///./bitwarden_license/src/app/app.module.ts","webpack:///./bitwarden_license/src/app/app-routing.module.ts","webpack:///./bitwarden_license/src/app/providers/providers.module.ts","webpack:///./jslib/angular/src/components/modal/dynamic-modal.component.ts","webpack:///./jslib/angular/src/components/modal/modal-injector.ts","webpack:///./jslib/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack:///./jslib/common/src/misc/tldjs.noop.ts","webpack:///./bitwarden_license/src/app/providers/providers-routing.module.ts","webpack:///./src/scss/export.module.scss","webpack:///./jslib/common/src/models/request/organizationCreateRequest.ts","webpack:///./jslib/common/src/models/request/organizationUpgradeRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack:///./jslib/common/src/models/view/eventView.ts","webpack:///./jslib/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserInviteRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerSetupRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUpdateRequest.ts","webpack:///./jslib/common/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserAcceptRequest.ts","webpack:///./jslib/angular/src/components/hint.component.ts","webpack:///./jslib/common/src/models/request/passwordHintRequest.ts","webpack:///./jslib/angular/src/components/lock.component.ts","webpack:///./jslib/angular/src/components/login.component.ts","webpack:///./jslib/common/src/misc/captcha_iframe.ts","webpack:///./jslib/common/src/misc/iframe_component.ts","webpack:///./jslib/common/src/models/request/deleteRecoverRequest.ts","webpack:///./jslib/common/src/models/request/twoFactorRecoveryRequest.ts","webpack:///./jslib/angular/src/components/register.component.ts","webpack:///./jslib/common/src/models/request/registerRequest.ts","webpack:///./jslib/common/src/models/request/referenceEventRequest.ts","webpack:///./jslib/angular/src/components/remove-password.component.ts","webpack:///./jslib/angular/src/components/set-password.component.ts","webpack:///./jslib/common/src/models/request/setPasswordRequest.ts","webpack:///./jslib/angular/src/components/two-factor-options.component.ts","webpack:///./jslib/angular/src/components/two-factor.component.ts","webpack:///./jslib/common/src/models/domain/authResult.ts","webpack:///./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///./jslib/common/src/models/request/deviceRequest.ts","webpack:///./jslib/common/src/models/request/preloginRequest.ts","webpack:///./jslib/common/src/models/request/tokenRequest.ts","webpack:///./jslib/common/src/misc/webauthn_iframe.ts","webpack:///./jslib/angular/src/components/update-temp-password.component.ts","webpack:///./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack:///./jslib/common/src/models/request/verifyEmailRequest.ts","webpack:///./jslib/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack:///./jslib/common/src/models/request/groupRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserConfirmRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserInviteRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserUpdateRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack:///./jslib/common/src/models/request/policyRequest.ts","webpack:///./jslib/common/src/models/request/organizationUpdateRequest.ts","webpack:///./jslib/common/src/models/request/organizationSubscriptionUpdateRequest.ts","webpack:///./jslib/common/src/enums/transactionType.ts","webpack:///./jslib/common/src/models/request/verifyBankRequest.ts","webpack:///./jslib/common/src/models/request/bitPayInvoiceRequest.ts","webpack:///./jslib/common/src/models/request/paymentRequest.ts","webpack:///./jslib/common/src/models/request/storageRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack:///./jslib/common/src/models/request/twoFactorProviderRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack:///./jslib/angular/src/components/export.component.ts","webpack:///./jslib/common/src/models/view/attachmentView.ts","webpack:///./jslib/common/src/models/request/attachmentRequest.ts","webpack:///./jslib/angular/src/components/add-edit.component.ts","webpack:///./jslib/angular/src/components/add-edit-custom-fields.component.ts","webpack:///./jslib/common/src/models/request/organization/organizationSponsorshipRedeemRequest.ts","webpack:///./jslib/angular/src/components/ciphers.component.ts","webpack:///./jslib/angular/src/components/collections.component.ts","webpack:///./jslib/angular/src/components/groupings.component.ts","webpack:///./jslib/common/src/models/domain/sendAccess.ts","webpack:///./jslib/common/src/models/view/sendAccessView.ts","webpack:///./jslib/common/src/models/request/sendAccessRequest.ts","webpack:///./jslib/angular/src/components/send/add-edit.component.ts","webpack:///./jslib/angular/src/components/send/efflux-dates.component.ts","webpack:///./jslib/angular/src/components/send/send.component.ts","webpack:///./jslib/common/src/models/request/updateProfileRequest.ts","webpack:///./jslib/common/src/models/request/emailRequest.ts","webpack:///./jslib/common/src/models/request/sendWithIdRequest.ts","webpack:///./jslib/common/src/models/request/kdfRequest.ts","webpack:///./jslib/common/src/models/request/updateDomainsRequest.ts","webpack:///./jslib/common/src/models/request/emergencyAccessInviteRequest.ts","webpack:///./jslib/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack:///./jslib/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack:///./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./jslib/angular/src/components/password-generator-history.component.ts","webpack:///./jslib/angular/src/components/password-generator.component.ts","webpack:///./jslib/angular/src/components/folder-add-edit.component.ts","webpack:///./jslib/angular/src/components/share.component.ts","webpack:///./jslib/angular/src/directives/box-row.directive.ts","webpack:///./jslib/angular/src/pipes/search-ciphers.pipe.ts","webpack:///./bitwarden_license/src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./bitwarden_license/src/app/organizations/organizations.module.ts","webpack:///./jslib/common/src/models/request/organization/organizationSsoRequest.ts","webpack:///./bitwarden_license/src/app/organizations/organizations-routing.module.ts","webpack:///./src/app/oss-routing.module.ts","webpack:///./src/app/services/services.module.ts","webpack:///./src/services/broadcasterMessaging.service.ts","webpack:///./src/services/htmlStorage.service.ts","webpack:///./src/services/i18n.service.ts","webpack:///./jslib/common/src/services/i18n.service.ts","webpack:///./src/services/memoryStorage.service.ts","webpack:///./src/services/passwordReprompt.service.ts","webpack:///./jslib/angular/src/services/passwordReprompt.service.ts","webpack:///./src/services/webPlatformUtils.service.ts","webpack:///./jslib/common/src/services/api.service.ts","webpack:///./jslib/common/src/models/response/apiKeyResponse.ts","webpack:///./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/billingResponse.ts","webpack:///./jslib/common/src/models/response/breachAccountResponse.ts","webpack:///./jslib/common/src/models/response/globalDomainResponse.ts","webpack:///./jslib/common/src/models/response/eventResponse.ts","webpack:///./jslib/common/src/models/response/groupResponse.ts","webpack:///./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack:///./jslib/common/src/models/response/identityTokenResponse.ts","webpack:///./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/common/src/models/response/listResponse.ts","webpack:///./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///./jslib/common/src/models/api/ssoConfigApi.ts","webpack:///./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///./jslib/common/src/models/response/organizationKeysResponse.ts","webpack:///./jslib/common/src/models/response/keysResponse.ts","webpack:///./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserResponse.ts","webpack:///./jslib/common/src/models/response/paymentResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderResponse.ts","webpack:///./jslib/common/src/models/response/preloginResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack:///./jslib/common/src/models/response/sendAccessResponse.ts","webpack:///./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/syncResponse.ts","webpack:///./jslib/common/src/models/response/taxInfoResponse.ts","webpack:///./jslib/common/src/models/response/taxRateResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/common/src/models/response/userKeyResponse.ts","webpack:///./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///./jslib/common/src/services/appId.service.ts","webpack:///./jslib/common/src/services/audit.service.ts","webpack:///./jslib/common/src/misc/throttle.ts","webpack:///./jslib/common/src/services/cipher.service.ts","webpack:///./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/common/src/models/request/cipherShareRequest.ts","webpack:///./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/common/src/services/collection.service.ts","webpack:///./jslib/common/src/models/domain/treeNode.ts","webpack:///./jslib/common/src/enums/logLevelType.ts","webpack:///./jslib/common/src/services/container.service.ts","webpack:///./jslib/common/src/services/crypto.service.ts","webpack:///./jslib/common/src/models/domain/encArrayBuffer.ts","webpack:///./jslib/common/src/models/domain/encryptedObject.ts","webpack:///./jslib/common/src/services/environment.service.ts","webpack:///./jslib/common/src/models/domain/environmentUrls.ts","webpack:///./jslib/common/src/services/event.service.ts","webpack:///./jslib/common/src/models/data/eventData.ts","webpack:///./jslib/common/src/models/request/eventRequest.ts","webpack:///./jslib/common/src/services/export.service.ts","webpack:///./jslib/common/src/models/export/cipher.ts","webpack:///./jslib/common/src/models/export/card.ts","webpack:///./jslib/common/src/models/export/field.ts","webpack:///./jslib/common/src/models/export/identity.ts","webpack:///./jslib/common/src/models/export/login.ts","webpack:///./jslib/common/src/models/export/loginUri.ts","webpack:///./jslib/common/src/models/export/secureNote.ts","webpack:///./jslib/common/src/models/export/collection.ts","webpack:///./jslib/common/src/models/export/event.ts","webpack:///./jslib/common/src/models/export/folder.ts","webpack:///./jslib/common/src/services/fileUpload.service.ts","webpack:///./jslib/common/src/enums/fileUploadType.ts","webpack:///./jslib/common/src/services/azureFileUpload.service.ts","webpack:///./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack:///./jslib/common/src/services/folder.service.ts","webpack:///./jslib/common/src/services/import.service.ts","webpack:///./jslib/common/src/models/request/importCiphersRequest.ts","webpack:///./jslib/common/src/models/request/importOrganizationCiphersRequest.ts","webpack:///./jslib/common/src/models/request/kvpRequest.ts","webpack:///./jslib/common/src/importers/ascendoCsvImporter.ts","webpack:///./jslib/common/src/importers/avastCsvImporter.ts","webpack:///./jslib/common/src/importers/avastJsonImporter.ts","webpack:///./jslib/common/src/importers/aviraCsvImporter.ts","webpack:///./jslib/common/src/importers/bitwardenCsvImporter.ts","webpack:///./jslib/common/src/importers/bitwardenJsonImporter.ts","webpack:///./jslib/common/src/importers/blackBerryCsvImporter.ts","webpack:///./jslib/common/src/importers/blurCsvImporter.ts","webpack:///./jslib/common/src/importers/buttercupCsvImporter.ts","webpack:///./jslib/common/src/importers/chromeCsvImporter.ts","webpack:///./jslib/common/src/importers/clipperzHtmlImporter.ts","webpack:///./jslib/common/src/importers/codebookCsvImporter.ts","webpack:///./jslib/common/src/importers/dashlaneJsonImporter.ts","webpack:///./jslib/common/src/importers/encryptrCsvImporter.ts","webpack:///./jslib/common/src/importers/enpassCsvImporter.ts","webpack:///./jslib/common/src/importers/enpassJsonImporter.ts","webpack:///./jslib/common/src/importers/firefoxCsvImporter.ts","webpack:///./jslib/common/src/importers/fsecureFskImporter.ts","webpack:///./jslib/common/src/importers/gnomeJsonImporter.ts","webpack:///./jslib/common/src/importers/kasperskyTxtImporter.ts","webpack:///./jslib/common/src/importers/keepass2XmlImporter.ts","webpack:///./jslib/common/src/importers/keepassxCsvImporter.ts","webpack:///./jslib/common/src/importers/keeperCsvImporter.ts","webpack:///./jslib/common/src/importers/lastpassCsvImporter.ts","webpack:///./jslib/common/src/importers/logMeOnceCsvImporter.ts","webpack:///./jslib/common/src/importers/meldiumCsvImporter.ts","webpack:///./jslib/common/src/importers/msecureCsvImporter.ts","webpack:///./jslib/common/src/importers/mykiCsvImporter.ts","webpack:///./jslib/common/src/importers/nordpassCsvImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepassword1PifImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordMacCsvImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/cipherImportContext.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordWinCsvImporter.ts","webpack:///./jslib/common/src/importers/padlockCsvImporter.ts","webpack:///./jslib/common/src/importers/passkeepCsvImporter.ts","webpack:///./jslib/common/src/importers/passmanJsonImporter.ts","webpack:///./jslib/common/src/importers/passpackCsvImporter.ts","webpack:///./jslib/common/src/importers/passwordAgentCsvImporter.ts","webpack:///./jslib/common/src/importers/passwordBossJsonImporter.ts","webpack:///./jslib/common/src/importers/passwordDragonXmlImporter.ts","webpack:///./jslib/common/src/importers/passwordSafeXmlImporter.ts","webpack:///./jslib/common/src/importers/passwordWalletTxtImporter.ts","webpack:///./jslib/common/src/importers/rememBearCsvImporter.ts","webpack:///./jslib/common/src/importers/roboformCsvImporter.ts","webpack:///./jslib/common/src/importers/safariCsvImporter.ts","webpack:///./jslib/common/src/importers/safeInCloudXmlImporter.ts","webpack:///./jslib/common/src/importers/saferpassCsvImport.ts","webpack:///./jslib/common/src/importers/secureSafeCsvImporter.ts","webpack:///./jslib/common/src/importers/splashIdCsvImporter.ts","webpack:///./jslib/common/src/importers/stickyPasswordXmlImporter.ts","webpack:///./jslib/common/src/importers/truekeyCsvImporter.ts","webpack:///./jslib/common/src/importers/upmCsvImporter.ts","webpack:///./jslib/common/src/importers/yotiCsvImporter.ts","webpack:///./jslib/common/src/importers/zohoVaultCsvImporter.ts","webpack:///./jslib/common/src/services/keyConnector.service.ts","webpack:///./jslib/common/src/services/notifications.service.ts","webpack:///./jslib/common/src/models/response/notificationResponse.ts","webpack:///./jslib/common/src/services/passwordGeneration.service.ts","webpack:///./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/common/src/services/policy.service.ts","webpack:///./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///./jslib/common/src/services/search.service.ts","webpack:///./jslib/common/src/services/send.service.ts","webpack:///./jslib/common/src/models/data/sendFileData.ts","webpack:///./jslib/common/src/models/data/sendTextData.ts","webpack:///./jslib/common/src/models/domain/send.ts","webpack:///./jslib/common/src/services/settings.service.ts","webpack:///./jslib/common/src/services/state.service.ts","webpack:///./jslib/common/src/services/sync.service.ts","webpack:///./jslib/common/src/models/data/organizationData.ts","webpack:///./jslib/common/src/models/data/providerData.ts","webpack:///./jslib/common/src/services/token.service.ts","webpack:///./jslib/common/src/services/totp.service.ts","webpack:///./jslib/common/src/services/user.service.ts","webpack:///./jslib/common/src/models/domain/provider.ts","webpack:///./jslib/common/src/services/userVerification.service.ts","webpack:///./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack:///./jslib/common/src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/services/webCryptoFunction.service.ts","webpack:///./jslib/common/src/models/domain/decryptParameters.ts","webpack:///./jslib/common/src/abstractions/fileUpload.service.ts","webpack:///./src/app/services/modal.service.ts","webpack:///./src/app/wildcard-routing.module.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","I18nService","LogService","PlatformUtilsService","ApiService","UserService","i18nService","transform","id","p1","p2","p3","this","I18nPipe","Pipe","el","renderer","title","ngOnInit","nativeElement","hasAttribute","setAttribute","A11yTitleDirective","Directive","selector","appA11yTitle","Input","MessagingService","CryptoService","validationService","logService","ngOnChanges","changes","appApiAction","then","loading","response","e","ErrorResponse","constructor","captchaRequired","error","getSingleMessage","showError","ApiActionDirective","type","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","str","minComplexity","CalloutComponent","Component","templateUrl","clickable","allowMultipleModals","ModalConfig","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","Map","document","addEventListener","event","modalCount","topModal","instance","close","openViewRef","componentType","viewContainerRef","setComponentParameters","openInternal","modalRef","modalComponentRef","insert","hostView","onCreated","pipe","first","toPromise","componentRef","open","config","registerComponentFactoryResolver","set","resolveComponentFactory","has","attachToDom","createModalComponent","childComponentType","attachView","domElem","rootNodes","body","appendChild","onClosed","subscribe","detachView","destroy","pop","getFocus","setupHandlers","backdrop","classList","add","modalEl","querySelector","dialogEl","createElement","className","style","zIndex","prepend","stopPropagation","Array","from","querySelectorAll","onClose","closed","remove","ModalRef","map","WeakMap","DynamicModalComponent","ModalInjector","ModalService","Injectable","CipherService","getResponseProperty","propertyName","exactName","Error","otherCasePropertyName","charAt","toUpperCase","toLowerCase","BaseResponse","PolicyService","nodeURL","init","Utils","inited","isNode","process","release","isBrowser","isNativeScript","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","fromB64ToArray","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromUrlB64ToArray","fromUrlB64ToB64","fromHexToArray","parseInt","substr","fromUtf8ToArray","strUtf8","unescape","encodeURIComponent","arr","fromByteStringToArray","fromBufferToB64","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromBufferToUrlB64","fromB64toUrlB64","b64Str","replace","fromBufferToUtf8","encodedString","decodeURIComponent","escape","fromBufferToByteString","fromBufferToHex","x","join","urlB64Str","output","fromUrlB64ToUtf8","fromB64ToUtf8","fromUtf8ToB64","utfStr","fromUtf8ToUrlB64","newGuid","Math","random","isGuid","RegExp","test","getHostname","uriString","url","getUrl","hostname","getHost","host","getDomain","trim","startsWith","httpUrl","indexOf","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","domain","getQueryParams","search","split","forEach","pair","parts","getSortFunction","prop","a","b","collator","compare","localeCompare","isNullOrWhitespace","nameOf","assign","target","source","iterateEnum","obj","keys","filter","k","Number","isNaN","camelToPascalCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","parse","hasProtocol","anchor","href","regexpEmojiPresentation","organizationId","ConsoleLogService","newLineRegex","passwordFieldNames","usernameFieldNames","notesFieldNames","uriFieldNames","parseCsvOptions","encoding","skipEmptyLines","parseXml","doc","DOMParser","parseFromString","parseCsv","header","options","parseOptions","splitNewLine","papa","errors","row","warning","message","parseSingleRowCsv","rowData","parsedRow","makeUriArray","uri","loginUri","LoginUriView","fixUri","u","substring","nameFromUrl","getValueOrDefault","defaultValue","getCardBrand","cardNum","re","setCardExpiration","cipher","expiration","month","year","card","expMonth","expYear","moveFoldersToCollections","folderRelationships","collectionRelationships","collections","folders","f","collection","CollectionView","querySelectorDirectChild","parentEl","query","els","querySelectorAllDirectChild","parentNode","initLoginCipher","CipherView","favorite","notes","fields","login","LoginView","CipherType","Login","cleanupCipher","processKvp","FieldType","Text","field","FieldView","processFolder","folderName","folderIndex","hasFolder","addFolder","FolderView","ciphers","convertToNoteIfNeeded","username","password","uris","SecureNote","secureNote","SecureNoteView","SecureNoteType","Generic","BaseImporter","success","ImportResult","PasswordGenerationService","StateService","onClick","$event","preventDefault","StopClickDirective","HostListener","SyncService","StorageService","PasswordRepromptService","EnvironmentService","CollectionService","UserVerificationService","StopPropDirective","condition","disableComplete","InputVerbatimDirective","appInputVerbatim","AuthService","FolderService","PolicyType","indexedEntityId","SearchService","EventService","user","email","UserNamePipe","environmentUrlsKey","ConstantsService","disableGaKey","disableAddLoginNotificationKey","disableContextMenuItemKey","disableFaviconKey","disableBadgeCounterKey","disableAutoTotpCopyKey","disableAutoBiometricsPromptKey","enableAutoFillOnPageLoadKey","autoFillOnPageLoadDefaultKey","vaultTimeoutKey","vaultTimeoutActionKey","lastActiveKey","neverDomainsKey","installedVersionKey","localeKey","themeKey","collapsedGroupingsKey","autoConfirmFingerprints","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","defaultUriMatch","pinProtectedKey","protectedPin","clearClipboardKey","eventCollectionKey","ssoCodeVerifierKey","ssoStateKey","biometricUnlockKey","biometricText","biometricAwaitingAcceptance","biometricFingerprintValidated","disableChangedPasswordNotificationKey","ngZone","autofocus","isStable","focus","onStable","take","AutofocusDirective","appAutofocus","KeyConnectorService","buildDomainModel","dataObj","alreadyEncrypted","notEncList","objProp","EncString","buildDataModel","notEncStringList","encryptedString","decryptObj","viewModel","orgId","promises","self","theProp","Promise","resolve","mapProp","decrypt","val","all","platformUtilsService","defaultErrorMessage","validationErrors","concat","getAllMessages","showToast","timeout","ValidationService","cardholderName","code","_brand","_number","_subTitle","repeat","number","brand","count","exp","formatYear","linkedFieldOption","CardholderName","ExpMonth","ExpYear","Code","Brand","ItemView","CardView","CryptoFunctionService","VaultTimeoutService","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","EncryptionType","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decryptedValue","containerService","bitwardenContainerService","cryptoService","getCryptoService","getOrgKey","decryptToUtf8","AuditService","SecretVerificationRequest","IconMap","environmentService","stateService","iconsUrl","getIconsUrl","image","fallbackImage","imageEnabled","load","setLoginIcon","Card","Identity","hostnameUri","isWebsite","IconComponent","TokenService","ExportService","BroadcasterService","TwoFactorProviderType","display","organization","BasePolicy","enabled","FormControl","setValue","policyResponse","loadData","patchValue","buildRequestData","buildRequest","policiesEnabledMap","request","PolicyRequest","policy","BasePolicyComponent","items","searchText","prop1","prop2","prop3","SearchPipe","TotpService","SendService","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","apiService","showMethods","showOptions","method","PaymentMethodType","hideBank","hidePaypal","hideCredit","bank","routing_number","account_number","account_holder_name","account_holder_type","currency","country","paymentMethodType","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","src","async","onload","Stripe","elements","setStripeElement","btScript","StripeElementStyle","base","color","fontFamily","fontSize","fontSmoothing","invalid","StripeElementClasses","empty","PayPal","BankAccount","Credit","setTheme","head","ngOnDestroy","removeChild","setTimeout","btStylesheet","changeMethod","braintree","dropin","authorization","container","paymentOptionPriority","paypal","flow","buttonStyle","label","size","shape","tagline","createErr","console","createPaymentToken","reject","requestPaymentMethod","payload","nonce","catch","err","postSetupPayment","clientSecret","handleCardSetup","setupIntent","status","payment_method","createToken","token","handleStripeCardPayment","successCallback","paymentIntent","classes","placeholder","mount","getEffectiveTheme","ThemeType","Dark","PaymentComponent","folderId","organizationUseTotp","edit","viewPassword","identity","IdentityView","attachments","passwordHistory","collectionIds","revisionDate","deletedDate","reprompt","CipherRepromptType","None","localData","item","subTitle","hasAttachments","passwordRevisionDate","linkedFieldOptions","linkedFieldValue","propertyKey","linkedFieldI18nKey","i18nKey","middleName","address1","address2","address3","city","state","postalCode","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","address","addressPart2","Title","MiddleName","Address1","Address2","Address3","City","State","PostalCode","Country","Company","Email","Phone","Ssn","Username","PassportNumber","LicenseNumber","FirstName","LastName","FullName","route","onCountryChanged","EventEmitter","taxInfo","taxId","line1","line2","includeTaxId","pristine","parent","params","getOrganizationTaxInfo","getTaxInfo","emit","getTaxRates","taxRates","localTaxRate","find","rate","getTaxInfoRequest","OrganizationTaxInfoUpdateRequest","TaxInfoUpdateRequest","submitTaxInfo","hasChanged","putOrganizationTaxInfo","putTaxInfo","changeCountry","TaxInfoComponent","Output","policyService","getDefaultDateFilters","Date","end","getFullYear","getMonth","getDate","setDate","start","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","getTime","toISOString","getEventInfo","ev","EventOptions","appInfo","getAppInfo","deviceType","getEventMessage","humanReadableMessage","appIcon","appName","msg","humanReadableMsg","EventType","User_LoggedIn","User_ChangedPassword","User_Updated2fa","User_Disabled2fa","User_Recovered2fa","User_FailedLogIn","User_FailedLogIn2fa","User_ClientExportedVault","User_UpdatedTempPassword","User_MigratedKeyToKeyConnector","Cipher_Created","Cipher_Updated","Cipher_Deleted","Cipher_SoftDeleted","Cipher_Restored","Cipher_AttachmentCreated","Cipher_AttachmentDeleted","Cipher_Shared","Cipher_ClientViewed","Cipher_ClientToggledPasswordVisible","Cipher_ClientToggledHiddenFieldVisible","Cipher_ClientToggledCardCodeVisible","Cipher_ClientCopiedHiddenField","Cipher_ClientCopiedPassword","Cipher_ClientCopiedCardCode","Cipher_ClientAutofilled","Cipher_UpdatedCollections","Collection_Created","Collection_Updated","Collection_Deleted","Group_Created","Group_Updated","Group_Deleted","OrganizationUser_Invited","OrganizationUser_Confirmed","OrganizationUser_Updated","OrganizationUser_Removed","OrganizationUser_UpdatedGroups","OrganizationUser_UnlinkedSso","OrganizationUser_ResetPassword_Enroll","OrganizationUser_ResetPassword_Withdraw","OrganizationUser_AdminResetPassword","OrganizationUser_ResetSsoLink","OrganizationUser_FirstSsoLogin","Organization_Updated","Organization_PurgedVault","Organization_VaultAccessed","Organization_EnabledSso","Organization_DisabledSso","Organization_EnabledKeyConnector","Organization_DisabledKeyConnector","Policy_Updated","ProviderUser_Invited","ProviderUser_Confirmed","ProviderUser_Updated","ProviderUser_Removed","ProviderOrganization_Created","ProviderOrganization_Added","ProviderOrganization_Removed","ProviderOrganization_VaultAccessed","formatCipherId","getShortId","cipherId","formatCollectionId","collectionId","formatGroupId","groupId","formatOrgUserId","organizationUserId","formatPolicyId","getAll","policies","policyId","formatProviderUserId","providerUserId","formatProviderOrganizationId","providerOrganizationId","DeviceType","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","WindowsDesktop","MacOsDesktop","LinuxDesktop","ChromeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","VivaldiBrowser","EdgeBrowser","IEBrowser","UnknownBrowser","shortId","cipherInfo","makeAnchor","outerHTML","providerId","innerHTML","date","pad","getHours","getMinutes","num","norm","floor","abs","EventInfo","keyConnectorService","userVerificationService","usesKeyConnector","disableRequestOTP","sentCode","secret","getUsesKeyConnector","processChanges","valueChanges","requestOTP","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","disable","enable","VerificationType","OTP","MasterPassword","VerifyMasterPasswordComponent","provide","NG_VALUE_ACCESSOR","multi","useExisting","trigger","transition","opacity","animate","providers","animations","totp","autofillOnPageLoad","hasUris","some","canLaunch","launchUri","Password","toasterService","router","syncService","userService","showFree","showCancel","acceptingSponsorship","product","ProductType","Free","plan","PlanType","onSuccess","onCanceled","selfHosted","ownedBusiness","premiumAccessAddon","additionalStorage","additionalSeats","productTypes","singleOrgPolicyBlock","discount","isSelfHost","getPlans","plans","Enterprise","Teams","changedOwnedBusiness","selectedPlan","isAnnual","validPlans","Custom","canBeUsedByBusiness","legacyYear","disabled","familyPlan","FamiliesAnnually","basePrice","additionalStoragePriceMonthly","additionalStoragePricePerGb","seatPriceMonthly","seatPrice","additionalStorageTotal","hasAdditionalStorageOption","seatTotal","hasAdditionalSeatsOption","subTotal","hasPremiumAccessOption","premiumAccessOptionPrice","trialPeriodDays","taxComponent","taxRate","subtotal","taxCharges","freeTrial","createOrganization","selectedPlanInterval","changedProduct","selectablePlans","baseSeats","TeamsAnnually","changedCountry","paymentComponent","cancel","submit","userHasBlockingSingleOrgPolicy","doSubmit","makeShareKey","shareKey","encrypt","collectionCt","makeKeyPair","orgKeys","createSelfHosted","createCloudHosted","popAsync","updateOrganization","refreshIdentityToken","fullSync","navigate","formPromise","policyAppliesToUser","SingleOrg","OrganizationUpgradeRequest","businessName","additionalStorageGb","planType","billingAddressCountry","billingAddressPostalCode","getOrganization","hasPublicAndPrivateKeys","orgShareKey","OrganizationKeysRequest","postOrganizationUpgrade","paymentIntentClientSecret","orgKey","OrganizationCreateRequest","collectionName","billingEmail","tokenResult","paymentToken","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","getProviderKey","providerKey","organizationCreateRequest","postProviderCreateOrganization","postOrganization","fileEl","getElementById","files","fd","FormData","append","postOrganizationLicense","postOrganizationKeys","OrganizationPlansComponent","ViewChild","externalId","readOnly","hidePasswords","Collection","userId","LoginData","SecureNoteData","CardData","IdentityData","FieldData","AttachmentData","ph","PasswordHistoryData","CipherData","SendType","identityResponse","errorModel","responseErrorModel","captchaSiteKey","HCaptcha_SiteKey","statusCode","messages","prefix","lastSep","lastIndexOf","OrganizationUserStatusType","showText","scoreWidth","score","text","PasswordStrengthComponent","CollectionData","onAuthed","hashedSecret","masterPasswordHash","otp","apiCall","verificationType","getTwoFactorRecover","Duo","OrganizationDuo","getTwoFactorOrganizationDuo","getTwoFactorDuo","getTwoFactorEmail","WebAuthn","getTwoFactorWebAuthn","Authenticator","getTwoFactorAuthenticator","Yubikey","getTwoFactorYubiKey","TwoFactorVerifyComponent","Attachment","Field","encKey","model","reduce","promise","attachment","decAttachment","decField","decPh","toCipherData","toLoginData","toSecureNoteData","toCardData","toIdentityData","toFieldData","toAttachmentData","toPasswordHistoryData","Cipher","messagingService","tokenService","getName","getEmail","getLastSync","getAllProviders","lock","send","logOut","NavbarComponent","getApplicationVersion","version","FooterComponent","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","PermissionsApi","OrganizationUserType","macKey","keyB64","encKeyB64","macKeyB64","SymmetricCryptoKey","lastKnownRevisionDate","LoginApi","LoginUriApi","SecureNoteApi","CardApi","IdentityApi","FieldApi","linkedId","lastUsedDate","attachments2","fileName","attachmentRequest","AttachmentRequest","CipherRequest","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","asObservable","onShow","onShown","show","next","shown","lastResult","created","onClosedPromise","Permissions","addOrganizationToProvider","encryptedOrgKey","ProviderAddOrganizationRequest","postProviderAddOrganization","detachOrganizastion","deleteProviderOrganization","ProviderService","activatedRoute","titleService","previousUrl","currentUrl","events","NavigationEnd","titleId","rawTitle","child","firstChild","snapshot","newTitle","setTitle","getPreviousUrl","setPreviousUrl","RouterService","KdfType","addPolicies","getPolicies","PolicyListService","onUpdated","twoFactorProviderType","authed","auth","authResponse","enableFunction","showDialog","buildRequestModel","TwoFactorProviderRequest","putTwoFactorOrganizationDisable","putTwoFactorDisable","requestClass","TwoFactorBaseComponent","modalService","passwordRepromptService","requiresPaid","hasLoaded","setCiphers","selectCipher","repromptCipher","AddEditComponent","cipherAddEditModalRef","comp","onSavedCipher","modal","onDeletedCipher","onRestoredCipher","checkAccess","useTotp","canAccessPremium","accessPremium","showPasswordPrompt","CipherReportComponent","ViewContainerRef","read","static","newField","showValue","cipherService","folderService","auditService","collectionService","totpService","passwordGenerationService","eventService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","getTimeInterval","totpTick","totpInterval","setInterval","toggleFavorite","launch","copy","typeI18nKey","aType","copyToClipboard","editMode","collect","generatePassword","confirmed","getOptions","premiumRequired","upgradeOrganization","viewHistory","clearInterval","getCode","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","cloneMode","ownershipOptions","allowPersonal","intervalSeconds","epoch","round","mod","totpSec","totpDash","totpLow","ImportService","searchService","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","pagedCiphers","pageSize","cipherType","userHasPremiumAccess","didScroll","pagedCiphersCount","refreshing","selectAll","loadMore","pagedLength","pagedSize","refresh","reload","deleted","isPaging","searching","isSearching","resetPaging","doSearch","indexedCiphers","searchCiphers","deletedFilter","share","clone","delete","actionPromise","permanent","isDeleted","deleteCipher","restore","restoreWithServer","protectedFields","includes","displayTotpCopyButton","select","selectCount","checkCipher","checked","getSelected","getSelectedIds","hasTotp","deleteWithServer","softDeleteWithServer","showFixOldAttachments","hasOldAttachments","CiphersComponent","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useSso","useKeyConnector","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","ssoBound","identifier","permissions","resetPasswordEnrolled","providerName","isProviderUser","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","keyConnectorUrl","Owner","Confirmed","Manager","Admin","isAdmin","isManager","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canDeleteAssignedCollections","canEditAssignedCollections","canManagePolicies","Organization","vaultTimeoutService","canActivate","routerState","isAuthenticated","isLocked","queryParams","promptBiometric","getConvertAccountRequired","AuthGuardService","ProviderUserType","publicKey","encryptedPrivateKey","KeysRequest","requiredParameters","failedShortMessage","failedMessage","qParams","errorMessage","authedHandler","save","getRedirectRoute","unauthedHandler","toast","urlTree","parseUrl","BaseAcceptComponent","userNamePipe","showUser","loaded","orgUsersUserIdMap","orgUsersIdMap","defaultDates","getOrganizationUsers","loadEvents","clearExisting","refreshPromise","morePromise","dates","entity","getEventsProviderUser","entityId","continuationToken","getEventsOrganizationUser","getEventsCipher","actingUserId","eventInfo","userName","userEmail","ip","ipAddress","EntityEventsComponent","OrganizationUserResetPasswordEnrollmentRequest","HashPurpose","PolicyData","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","kdf","getKdf","kdfIterations","getKdfIterations","makeKey","masterPassword","hashPassword","getEncKey","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordRetype","strengthResult","passwordStrength","getPasswordStrengthUserInput","evaluateMasterPassword","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","masterPasswordScore","userInput","atPosition","ChangePasswordComponent","SelectionReadOnlyRequest","PolicyResponse","CanLaunchWhitelist","_uri","_domain","_hostname","_host","_canLaunch","UriMatchType","RegularExpression","AddEditCustomFieldsComponent","storageService","onSearchTextChanged","searchPlaceholder","searchTextChanged","GroupingsComponent","selectType","sizeName","SendFileView","hidden","SendTextView","AttachmentResponse","h","PasswordHistoryResponse","CipherResponse","vault","getAllOrganizations","orgs","sort","organizations","ResetPassword","allowEnrollmentChanges","org","autoEnrollEnabled","showEnrolledStatus","unlinkSso","deleteSsoUser","leave","postLeaveOrganization","toggleResetPasswordEnrollment","keyString","toastStringRef","getOrganizationKeys","rsaEncrypt","encryptedKey","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","OrganizationsComponent","SelectionReadOnlyResponse","ProviderUserStatusType","ids","ProviderUserBulkRequest","BulkStatusComponent","publicKeys","fingerprints","statuses","done","excludedUsers","users","isAccepted","filteredUsers","getPublicKeys","entry","getFingerprint","fingerprint","getCryptoKey","userIdsWithKeys","postConfirmRequest","Accepted","OrganizationUserBulkRequest","postOrganizationUsersPublicKey","OrganizationUserBulkConfirmRequest","postOrganizationUserBulkConfirm","BulkConfirmComponent","deleteUsers","deleteManyOrganizationUsers","BulkRemoveComponent","FrontendLayoutComponent","ProvidersComponent","registerLocaleData","OssModule","DatePipe","CommonModule","FormsModule","InfiniteScrollModule","DragDropModule","ToasterModule","forChild","ReactiveFormsModule","RouterModule","AcceptEmergencyComponent","AccessComponent","AcceptOrganizationComponent","AccountComponent","SetPasswordComponent","AddCreditComponent","AdjustPaymentComponent","AdjustSubscription","AdjustStorageComponent","ApiKeyComponent","AttachmentsComponent","AvatarComponent","BlurClickDirective","BoxRowDirective","BreachReportComponent","BulkActionsComponent","BulkDeleteComponent","BulkMoveComponent","BulkRestoreComponent","BulkShareComponent","ChangeEmailComponent","ChangeKdfComponent","ChangePlanComponent","CollectionsComponent","ColorPasswordPipe","CreateOrganizationComponent","DeauthorizeSessionsComponent","DeleteAccountComponent","DeleteOrganizationComponent","DomainRulesComponent","DownloadLicenseComponent","EmergencyAccessAddEditComponent","EmergencyAccessAttachmentsComponent","EmergencyAccessComponent","EmergencyAccessConfirmComponent","EmergencyAccessTakeoverComponent","EmergencyAccessViewComponent","EmergencyAddEditComponent","ExportComponent","ExposedPasswordsReportComponent","FallbackSrcDirective","FamiliesForEnterpriseSetupComponent","FolderAddEditComponent","HintComponent","ImportComponent","InactiveTwoFactorReportComponent","LinkSsoComponent","LockComponent","LoginComponent","NestedCheckboxComponent","OptionsComponent","OrganizationBillingComponent","OrganizationSubscriptionComponent","OrganizationLayoutComponent","PasswordGeneratorComponent","PasswordGeneratorHistoryComponent","PasswordRepromptComponent","PremiumComponent","ProfileComponent","PurgeVaultComponent","RecoverDeleteComponent","RecoverTwoFactorComponent","RegisterComponent","ReusedPasswordsReportComponent","SearchCiphersPipe","SelectCopyDirective","SendComponent","SettingsComponent","ShareComponent","SponsoredFamiliesComponent","SponsoringOrgRowComponent","SsoComponent","ToolsComponent","TrueFalseValueDirective","TwoFactorAuthenticatorComponent","TwoFactorComponent","TwoFactorDuoComponent","TwoFactorEmailComponent","TwoFactorOptionsComponent","TwoFactorRecoveryComponent","TwoFactorSetupComponent","TwoFactorWebAuthnComponent","TwoFactorYubiKeyComponent","UnsecuredWebsitesReportComponent","UpdateKeyComponent","UpdateLicenseComponent","UpdateTempPasswordComponent","UserBillingComponent","UserLayoutComponent","UserSubscriptionComponent","VaultComponent","VerifyEmailComponent","VerifyEmailTokenComponent","VerifyRecoverDeleteComponent","WeakPasswordsReportComponent","TwoFactorAuthenticationPolicyComponent","MasterPasswordPolicyComponent","SingleOrgPolicyComponent","PasswordGeneratorPolicyComponent","RequireSsoPolicyComponent","PersonalOwnershipPolicyComponent","DisableSendPolicyComponent","SendOptionsPolicyComponent","ResetPasswordPolicyComponent","VaultTimeoutInputComponent","RemovePasswordComponent","NgModule","imports","declarations","bootstrap","BroadcasterSubscriptionId","broadcasterService","run","command","unsubscribe","showManageTab","showToolsTab","isOwner","canManageUsers","canViewAllCollections","canViewAssignedCollections","canManageGroups","canAccessEventLogs","canAccessImportExport","canAccessReports","Policy","TwoFactorProviders","description","priority","premium","appIdService","cryptoFunctionService","setCryptoKeys","selectedTwoFactorProviderType","logIn","captchaToken","makePreloginKey","hashedPassword","LocalAuthorization","localHashedPassword","logInHelper","logInSso","codeVerifier","redirectUrl","logInApiKey","clientId","logInTwoFactor","twoFactorProvider","twoFactorToken","remember","localMasterPasswordHash","ssoRedirectUrl","logInComplete","logInSsoComplete","logInApiKeyComplete","callback","getSupportedTwoFactorProviders","twoFactorProvidersData","supportsDuo","supportsWebAuthn","getDefaultTwoFactorProvider","webAuthnSupported","providerType","providerPriority","provider","postPrelogin","PreloginRequest","preloginResponse","authingWithApiKey","authingWithSso","authingWithPassword","getTwoFactorToken","storedTwoFactorToken","getAppId","appId","deviceRequest","DeviceRequest","emailPassword","codeCodeVerifier","clientIdClientSecret","TokenRequest","Remember","postIdentityToken","clearState","AuthResult","siteKey","twoFactor","twoFactorProviders2","twoFactorResponse","twoFactorProviders","tokenResponse","resetMasterPassword","forcePasswordReset","setTwoFactorToken","setTokens","accessToken","refreshToken","setInformation","getUserId","setKey","setKeyHash","getAndSetKey","apiUseKeyConnector","getKeyConnectorUrl","setEncKey","privateKey","keyPair","postAccountKeys","setEncPrivateKey","randomBytes","keyConnectorRequest","KeyConnectorUserKeyRequest","pubKey","privKey","postUserKeyToKeyConnector","setPasswordRequest","SetKeyConnectorKeyRequest","postSetKeyConnectorKey","biometricLocked","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","getGroupUsers","getCollectionUsers","accessAll","check","selectedChanged","filterSelected","selections","putGroupUsers","putCollectionUsers","EntityUsersComponent","entityName","accessPolicies","accessGroups","accessEvents","accessSso","ManageComponent","postKey","apiKey","keyType","postPurgeCiphers","descriptionKey","deleteOrganization","firstLoaded","showAdjustPayment","showAddCredit","transactionType","TransactionType","getOrganizationBilling","billing","getUserBilling","verifyBank","VerifyBankRequest","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","postOrganizationVerifyBank","addCredit","paymentSourceInApp","closeAddCredit","changePayment","closePayment","balance","paymentSource","AppleInApp","GoogleInApp","invoices","transactions","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","location","ppButtonFormRef","BitPay","req","BitPayInvoiceRequest","credit","amount","creditAmountNumber","postBitPayInvoice","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","ElementRef","onAdjusted","PaymentRequest","taxInfoComponent","postAccountPayment","postOrganizationPayment","currentType","storageGbPrice","interval","storageAdjustment","StorageRequest","storageGbAdjustment","action","postAccountStorage","postOrganizationStorage","relativeTo","updatePromise","postAccountLicense","postOrganizationLicenseUpdate","processResponse","UpdateTwoFactorDuoRequest","integrationKey","ikey","secretKey","skey","putTwoFactorOrganizationDuo","putTwoFactorDuo","showPolicyWarning","filterProvider","getTwoFactorProviders","evaluatePolicies","manage","openModal","authenticatorModalRef","updateStatus","yubikeyModalRef","duoModalRef","emailModalRef","webAuthnModalRef","recoveryCode","recoveryModalRef","ref","childComponent","TwoFactorAuthentication","exportService","fb","saved","exposedPasswordMap","getAllCiphers","allCiphers","exposedPasswordCiphers","passwordLeaked","exposedCount","getAllDecrypted","canManageCipher","originalCipher","loadCollections","loadCipher","getCipherAdmin","encryptCipher","saveCipher","putCipherAdmin","CipherCreateRequest","postCipherAdmin","deleteCipherAdmin","putDeleteCipherAdmin","LoginLinkedId","CardLinkedId","IdentityLinkedId","_i18nKey","LinkedMetadata","LoginUri","view","toLoginUriData","LoginUriData","PasswordHistoryView","importService","format","importBlockedByPolicy","successNavigate","setImportOptions","importOptions","PersonalOwnership","importer","getImporter","fileContents","getFileContents","content","import","getFormatInstructionTitle","results","featuredImportOptions","regularImportOptions","fire","heightAuto","buttonsStyling","iconHtml","input","inputValue","inputAttributes","titleText","showConfirmButton","confirmButtonText","onOpen","popupEl","scrollTo","file","reader","FileReader","readAsText","evt","pre","textContent","onerror","services","cipherDocs","load2fa","fetch","Request","json","categoryName","responseJson","serviceName","category","service","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","unsecuredCiphers","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","cacheKey","scoreKey","reupload","reuploadCipherAttachment","onEventsClicked","getAllFromApiForOrganization","indexCiphers","applyFilter","getCollections","collectionDomains","decryptMany","unassignedCollection","getAllNested","nestedCollections","collapse","grouping","isCollapsed","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","cipherIds","onDeleted","bulkRestore","bulkRestoreModalRef","onRestored","bulkShare","selectedCiphers","bulkShareModalRef","onShared","bulkMove","bulkMoveModalRef","onMoved","notProtected","SendFile","SendText","CipherWithIdRequest","folder","FolderRequest","SendFileApi","SendTextApi","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","passwordArray","colorizedPassword","character","isSpecial","NotificationsService","SettingsService","OrganizationGuardService","AccessEventLogs","AccessImportExport","AccessReports","CreateNewCollections","EditAnyCollection","DeleteAnyCollection","EditAssignedCollections","DeleteAssignedCollections","ManageGroups","ManageOrganization","ManagePolicies","ManageUsers","ManageUsersPassword","canManageUsersPassword","ManageSso","canManageSso","OrganizationTypeGuardService","providerOrganizations","emailVerified","masterPasswordHint","culture","twoFactorEnabled","securityStamp","ProfileOrganizationResponse","ProfileProviderResponse","ProfileProviderOrganizationResponse","ProfileResponse","accessId","maxAccessCount","accessCount","expirationDate","deletionDate","hideEmail","SendResponse","webpackEmptyAsyncContext","getProvider","isProviderAdmin","ProviderGuardService","ManageProvider","ProviderTypeGuardService","showSettingsTab","ProvidersLayoutComponent","DisallowedPlanTypes","FamiliesAnnually2019","providerService","manageOrganizations","showAddExisting","pagedClientsCount","getProviderClients","clients","ProviderAdmin","candidateOrgs","allowedOrgsIds","addableOrganizations","isSearchable","pagedClients","addExistingOrganization","AddOrganizationComponent","addModalRef","onAddedOrganization","organizationName","ClientsComponent","orgPlansComponent","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","MasterPasswordPolicyOptions","ProviderUserAcceptRequest","postProviderUserAccept","AcceptProviderComponent","exportFileName","providerUsersUserIdMap","providerUsersIdMap","getProviderUsers","requestEvents","startDate","endDate","getEventsProvider","getUserName","EventsComponent","exportEvents","BaseEventsComponent","dirtyDates","appApiPromiseUnfulfilled","parseDates","exportPromise","export","loadAndParseEvents","EventView","getEventExport","getFileName","saveFile","searchPipe","userType","userStatusType","viewEvents","getUsers","deleteUser","deleteProviderUser","reinviteUser","postProviderUserReinvite","confirmUser","ProviderUserConfirmRequest","postProviderUserConfirm","UserAddEditComponent","addEditModalRef","onSavedUser","onDeletedUser","removeUser","eventsModalRef","bulkRemove","bulkRemoveModalRef","getCheckedUsers","bulkReinvite","Invited","postManyProviderUserReinvite","showBulkStatus","bulkConfirm","bulkConfirmModalRef","successfullMessage","bulkStatusModalRef","PeopleComponent","invite","BasePeopleComponent","groupsModalRef","statusMap","pagedUsers","pagedUsersCount","confirmedCount","acceptedCount","clear","checkUser","deleteWarningMessage","reinvite","confirm","mapIndex","updateUser","getUserPublicKey","publicKeyResponse","autoConfirm","UserConfirmComponent","confirmModalRef","onConfirmedUser","info","index","dontAskAgain","postProviderUsersPublicKey","ProviderUserBulkConfirmRequest","postProviderUserBulkConfirm","deleteManyProviderUsers","ServiceUser","showCustom","access","getProviderUser","ProviderUserUpdateRequest","putProviderUser","ProviderUserInviteRequest","emails","postProviderUserInvite","deletePromise","SetupProviderComponent","replaceUrl","ProviderSetupRequest","postProviderSetup","SetupComponent","ProviderUpdateRequest","putProvider","parentChecked","checkboxes","every","pascalize","parentId","togglePassword","showPassword","compareAndUpdateKeyHash","blur","EmergencyAccessAcceptRequest","postEmergencyAccessAccept","OrganizationUserAcceptRequest","performResetPasswordAutoEnroll","postOrganizationUserAccept","resetRequest","orgName","policyList","getPoliciesByToken","mapPoliciesFromToken","getResetPasswordPolicyOptions","routerService","onSuccessfulSubmit","successRoute","authService","showResetPasswordAutoEnrollWarning","onSuccessfulLoginNavigate","goAfterLogIn","sponsorshipToken","loginRedirect","setupCaptcha","webVaultUrl","getWebVaultUrl","captcha","CaptchaIFrame","showCaptcha","handleCaptchaRequired","CaptchaProtectedComponent","DeleteRecoverRequest","postAccountRecoverDelete","TwoFactorRecoveryRequest","postTwoFactorRecover","showCreateOrgMessage","layout","referenceData","ReferenceEventRequest","reference","cookie","policiesData","IdentifierStorageKey","redirectUri","origin","storedIdentifier","loggingIn","twoFactorRoute","changePasswordRoute","forcePasswordResetRoute","checkState","getOrgIdentifierFromState","codeChallenge","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","buildAuthorizeUrl","authorizeUrl","sameWindow","preValidateSso","passwordOptions","uppercase","lowercase","numbers","special","hash","codeVerifierHash","getIdentityUrl","getSsoUserIdentifier","userIdentifier","orgIdFromState","onSuccessfulLoginTwoFactorNavigate","sso","onSuccessfulLoginChangePasswordNavigate","onSuccessfulLoginForceResetNavigate","disableFavicon","onSuccessfulLogin","stateSplit","checkStateSplit","recover","anotherMethod","twoFactorOptionsModal","onProviderSelected","selectedProviderType","onRecoverSelected","TwoFactorEmailRequest","OrganizationUserResetPasswordRequest","postAccountVerifyEmailToken","VerifyEmailRequest","VerifyDeleteRecoverRequest","postAccountRecoverDeleteToken","onSavedCollection","onDeletedCollection","groups","getGroups","groupsResponse","getCollectionDetails","group","g","CollectionRequest","putCollection","postCollection","deleteCollection","CollectionAddEditComponent","canSave","canDelete","canCreate","pagedCollectionsCount","decryptCollections","getUserCollections","assignedCollections","pagedCollections","canEdit","removeCollection","usersModalRef","getEventsOrganization","onSavedGroup","onDeletedGroup","getGroupDetails","GroupRequest","putGroup","postGroup","deleteGroup","GroupAddEditComponent","pagedGroupsCount","pagedGroups","removeGroup","GroupsComponent","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","getPolicyForOrganization","resetPasswordPolicy","deleteOrganizationUser","postOrganizationUserReinvite","OrganizationUserConfirmRequest","postOrganizationUserConfirm","allowResetPassword","orgUser","callingUserHasPermission","UserGroupsComponent","postManyOrganizationUserReinvite","resetPassword","ResetPasswordComponent","resetPasswordModalRef","onPasswordReset","newPassword","getOrganizationUserResetPasswordDetails","kdfType","orgSymKey","decryptToBytes","decPrivateKey","rsaDecrypt","decValue","userEncKey","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putOrganizationUserResetPassword","newPasswordStrengthTimeout","User","manageAllCollectionsCheckboxes","v","manageAssignedCollectionsCheckboxes","getOrganizationUser","setRequestPermissions","clearPermissions","handleDependentPermissions","OrganizationUserUpdateRequest","putOrganizationUser","OrganizationUserInviteRequest","postOrganizationUserInvite","getOrganizationUserGroups","userGroups","ug","OrganizationUserUpdateGroupsRequest","groupIds","putOrganizationUserGroups","policyListService","policyIdFromEvents","orgPolicies","orgPolicy","op","PolicyEditComponent","editModalRef","onSavedPolicy","PoliciesComponent","cdr","policyType","ngAfterViewInit","factory","component","policyComponent","policyFormRef","createComponent","detectChanges","getPolicy","Enabled","putPolicy","canUseApi","OrganizationUpdateRequest","putOrganization","taxFormPromise","deleteModalRef","purgeVault","purgeModalRef","viewApiKey","apiKeyModalRef","postOrganizationApiKey","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKey","rotateApiKeyModalRef","isRotation","postOrganizationRotateApiKey","limitSubscription","maxAutoscaleSeats","newSeatCount","currentSeatCount","newMaxSeats","seatAdjustment","OrganizationSubscriptionUpdateRequest","postOrganizationUpdateSubscription","limitSubscriptionChanged","onChanged","defaultUpgradePlan","defaultUpgradeProduct","Families","onDownloaded","installationId","getOrganizationLicense","license","licenseString","JSON","stringify","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showDownloadLicense","showChangePlan","userOrg","getOrganizationSubscription","sub","reinstate","reinstatePromise","postOrganizationReinstate","cancelPromise","postOrganizationCancel","changePlan","closeChangePlan","changed","downloadLicense","closeDownloadLicense","updateLicense","closeUpdateLicense","updated","subscriptionAdjusted","adjustStorage","closeStorage","removeSponsorship","removeSponsorshipPromise","deleteRemoveSponsorship","subscription","cancelled","cancelAtEndDate","upcomingInvoice","storageGb","storagePercentage","sponsoredSubscriptionItem","isSponsoredSubscription","access2fa","duoComp","getTwoFactorOrganizationProviders","qrScript","UpdateTwoFactorAuthenticatorRequest","putTwoFactorAuthenticator","QRious","element","sendEmail","emailPromise","postTwoFactorEmailSetup","sentEmail","UpdateTwoFactorEmailRequest","putTwoFactorEmail","print","w","write","onafterprint","formatString","keyIdAvailable","keysConfiguredCount","webAuthnResponse","UpdateTwoFactorWebAuthnRequest","deviceResponse","putTwoFactorWebAuthn","removePromise","UpdateTwoFactorWebAuthnDeleteRequest","deleteTwoFactorWebAuthn","readKey","challengePromise","getTwoFactorWebAuthnChallenge","challenge","readDevice","webAuthnChallenge","log","resetWebAuthn","credentials","webAuthnListening","webAuthnError","listening","configured","migrated","nfc","UpdateTwoFactorYubioOtpRequest","key1","key2","key3","key4","key5","putTwoFactorYubiKey","disablePromise","existingKey","padRight","max","checkExportDisabled","getExportData","getOrganizationExport","collectEvent","manageableCiphers","AttachmentView","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","setProperty","forwardRef","onError","appFallbackSrc","badToken","showNewOrganization","_selectedFamilyOrganizationId","onOrganizationCreateSuccess","postPreValidateSponsorshipToken","existingFamilyOrganizations","selectedFamilyOrganizationId","OrganizationSponsorshipRedeemRequest","planSponsorshipType","PlanSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","postRedeemSponsorship","organizationPlansComponent","saveCipherAttachment","saveAttachmentWithServer","cipherDomain","deleteCipherAttachment","attachmentId","deleteCipherAttachmentAdmin","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","download","downloading","canAccessAttachments","getAttachmentData","attachmentDownloadResponse","cache","arrayBuffer","buf","decryptFromBytes","decBuf","hasEncKey","admin","saveAttachmentRawWithServer","foundAttachment","a2","deleteAttachmentWithServer","Window","allowSelectNone","loadCipherCollections","saveCollections","CipherCollectionsRequest","putCipherCollectionsAdmin","changeDetectorRef","trashCleanupWarning","groupingsComponent","successfully","selectedAll","selectedTrash","filterDeleted","selectedType","filterCipherType","selectedCollectionId","filterCollection","clearGroupingFilters","clearFilters","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","editCipherCollections","collectionsModalRef","onSavedCollections","addCipher","editCipher","cloneCipher","deleteCiphers","deleteCiphersAdmin","deleteManyWithServer","softDeleteManyWithServer","deleteRequest","CipherBulkDeleteRequest","deleteManyCiphersAdmin","putDeleteManyCiphersAdmin","moveManyWithServer","restoreManyWithServer","nonShareableCount","shareableCiphers","writeableCollections","allCollections","filterCollections","checkedCollectionIds","shareManyWithServer","sendType","passwordRequired","unavailable","maskedText","creatorIdentifier","sendId","decKey","getSendFileDownloadData","accessRequest","downloadData","toggleText","keyArray","SendAccessRequest","pbkdf2","passwordHash","sendResponse","postSendAccess","sendAccess","SendAccess","makeSendKey","datePipe","sendService","copyLinkToClipboard","link","SendView","EffluxDatesComponent","ControlContainer","NgForm","viewProviders","addSend","disableSend","editSend","sendAddEditModalRef","onSavedSend","onDeletedSend","showChangePassword","showChangeKdf","showChangeEmail","deauthorizeSessions","deauthModalRef","deleteAccount","viewUserApiKey","viewUserApiKeyModalRef","postUserApiKey","rotateUserApiKey","rotateUserApiKeyModalRef","postUserRotateApiKey","postSecurityStamp","hidePasswordHint","getProfile","profile","UpdateProfileRequest","putProfile","tokenSent","showTwoFactorEmailWarning","newEmail","EmailTokenRequest","postEmailToken","EmailRequest","postEmail","reset","rotateEncKey","rotateEncKeyClicked","currentMasterPassword","PasswordRequest","postPassword","updateKey","getPrivateKey","encPrivateKey","UpdateKeyRequest","FolderWithIdRequest","sends","cryptoKey","SendWithIdRequest","postAccountKey","updateEmergencyAccesses","updateAllResetPasswordKeys","getEmergencyAccessTrusted","emergencyAccess","allowedStatuses","EmergencyAccessStatusType","RecoveryInitiated","RecoveryApproved","filteredAccesses","details","granteeId","updateRequest","EmergencyAccessUpdateRequest","waitTimeDays","keyEncrypted","putEmergencyAccess","fileLength","File","SendRequest","PBKDF2_SHA256","kdfOptions","KdfRequest","postAccountKdf","EnterpriseAnnually","custom","getSettingsDomains","equivalentDomains","globalEquivalentDomains","domains","excluded","toggleExcluded","globalDomain","customize","UpdateDomainsRequest","excludedGlobalEquivalentDomains","d2","putSettingsDomains","indexTrackBy","onSaved","EmergencyAccessType","View","emergencyAccessType","waitTimes","getEmergencyAccess","waitTime","EmergencyAccessInviteRequest","postEmergencyAccessInvite","onConfirmed","onDone","getEmergencyGrantorPolicies","postEmergencyAccessTakeover","takeoverResponse","oldKeyBuffer","oldEncKey","EmergencyAccessPasswordRequest","postEmergencyAccessPassword","postEmergencyAccessView","viewAttachments","decCiphers","cipherResponse","cipherData","getLocaleSortingFunction","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","getEmergencyAccessGranted","grantedContacts","contact","postEmergencyAccessReinvite","doConfirmation","deleteEmergencyAccess","EmergencyAccessGranteeDetailsResponse","removeGrantee","removeGrantor","requestAccess","postEmergencyAccessInitiate","approve","postEmergencyAccessApprove","postEmergencyAccessReject","takeover","takeoverModalRef","debug","EmergencyAccessConfirmRequest","postEmergencyAccessConfirm","creationDate","grantorId","EmergencyAccessGrantorDetailsResponse","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","ngAfterContentInit","vaultTimeoutAction","theme","vaultTimeout","vaultTimeouts","isDev","localeOptions","supportedTranslationLocales","locale","localeNames","themeOptions","System","getVaultTimeout","disableIcons","enableGravatars","enableFullWidth","startingLocale","startingTheme","valid","setVaultTimeoutOptions","effectiveTheme","htmlEl","documentElement","Light","vaultTimeoutActionChanged","newValue","NG_VALIDATORS","premiumPrice","getPremium","getEmailVerified","finalizePremium","postPremium","paymentResponse","canManageSponsorships","hasFamilySponsorshipAvailable","availableSponsorshipOrgs","activeSponsorshipOrgs","selectedSponsorshipOrgId","sponsorshipEmail","postCreateSponsorship","sponsoredEmail","friendlyName","resetForm","forceReload","allOrgs","sponsoringOrg","sponsorshipRemoved","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmail","resendEmailPromise","postResendSponsorshipOffer","deleteRevokeSponsorship","makeRequest","getKey","getUserSubscription","usingInAppPurchase","postReinstatePremium","postCancelPremium","postAccountVerifyEmail","breachedAccounts","checkedUsername","history","historyModalRef","lengthChanged","minNumberChanged","minSpecialChanged","regenerate","favorites","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","showRedeemSponsorship","showProviders","organizationsComponent","selectedFavorites","filterFavorites","selectedFolder","selectedFolderId","filterFolder","shareCipher","shareModalRef","onSharedCipher","folderAddEditModalRef","onSavedFolder","loadFolders","editFolder","onDeletedFolder","updateKeyModalRef","DisableSend","DisableSendPolicy","MasterPasswordPolicy","showKeyConnectorInfo","passwordScores","PasswordGenerator","PasswordGeneratorPolicy","defaultType","useUpper","useLower","useNumbers","useSpecial","minNumbers","minSpecial","minNumberWords","capitalize","includeNumber","defaultTypes","PersonalOwnershipPolicy","RequireSso","RequireSsoPolicy","singleOrgEnabled","ResetPasswordPolicy","SendOptions","SendOptionsPolicy","disableHideEmail","SingleOrgPolicy","MaximumVaultTimeout","TwoFactorAuthenticationPolicy","DisablePersonalVaultExport","DisablePersonalVaultExportPolicyComponent","DisablePersonalVaultExportPolicy","MaximumVaultTimeoutPolicyComponent","MaximumVaultTimeoutPolicy","hours","minutes","samlSigningAlgorithms","control","configType","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpArtifactResolutionServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","getOrganizationSso","ssoSettings","callbackPath","urls","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","markAsDirty","postData","validateKeyConnectorUrl","hasError","OrganizationSsoRequest","postOrganizationSso","markAsPending","getKeyConnectorAlive","updateValueAndValidity","setErrors","invalidUrl","markAsPristine","homepage","LockGuardService","UnauthGuardService","CollectionResponse","CollectionDetailsResponse","CollectionGroupDetailsResponse","GlobalDomainResponse","DomainsResponse","FolderResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","PlanResponse","OrganizationResponse","nameLocalizationKey","descriptionLocalizationKey","baseStorageGb","maxUsers","maxAdditionalSeats","maxAdditionalStorage","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","storageName","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","SubscriptionResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","BillingSubscriptionItemResponse","quantity","OrganizationUserBulkPublicKeyResponse","KeyResponse","TwoFactorWebAuthnResponse","attestation","authenticatorSelection","excludeCredentials","extensions","pubKeyCredParams","rp","ChallengeResponse","descriptor","originalMethod","caches","getCache","argsCacheKey","args","onFinally","nestedTraverse","nodeTree","partIndex","delimiter","partName","node","TreeNode","ServiceUtils","children","newPartName","getTreeNodeObject","timersMap","LogLevelType","Debug","Info","Warning","level","warn","time","hrtime","timeEnd","elapsed","EEFLongWordList","build","CipherWithIds","CollectionWithId","Folder","FolderWithId","FolderData","IgnoredProperties","loginPropertyParsers","setLoginUsername","setLoginPassword","setLoginUris","creditCardPropertyParsers","setCreditCardNumber","setCreditCardVerification","setCreditCardCardholderName","setCreditCardExpiry","identityPropertyParsers","setIdentityFirstName","setIdentityInitial","setIdentityLastName","setIdentityUserName","setIdentityEmail","setIdentityPhone","setIdentityCompany","quoteChar","escapeChar","getProp","setNotes","setCipherType","altUsername","context","CipherImportContext","setKnownLoginValue","setKnownCreditCardValue","setKnownIdentityValue","setUnknownValue","entries","agg","getPropByRegexp","regexp","matchingKeys","getPropIncluding","includesMap","importRecord","func","lowerProperty","readableDate","toUTCString","Hidden","OnePasswordCsvImporter","NotificationType","SendTextData","SendFileData","SendData","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","AppModule","AppComponent","BrowserAnimationsModule","ServicesModule","forRoot","AppRoutingModule","OssRoutingModule","OrganizationsModule","WildcardRoutingModule","routes","path","loadChildren","ProvidersModule","ProvidersRoutingModule","cd","focusTrapFactory","loadChildComponent","focusTrap","focusFirstTabbableElementWhenReady","componentFactory","modalContentRef","autoFocusEl","template","_parentInjector","_additionalTokens","notFoundValue","flags","pathMatch","redirectTo","subscribers","messageCallback","postPasswordHint","PasswordHintRequest","pin","pinLock","webVaultHostname","invalidPinAttempts","isPinLockSet","pinSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricLock","hideInput","vaultUrl","failed","makeKeyFromPin","decPin","setKeyAndContinue","getKeyHash","storedKeyHash","passwordValid","ServerAuthorization","serverKeyHash","postAccountVerifyPassword","localKeyHash","makePinKey","pinKey","unlockBiometric","doContinue","everBeenUnlocked","Keys","rememberEmail","focusInput","launchSsoBrowser","ssoRedirectUri","ssoCodeVerifier","webUrl","errorCallback","infoCallback","parsedMessage","iframe","height","width","initComponent","createParams","translationLocale","IFrameComponent","iframeId","parseFunction","parseMessage","connectorLink","stop","sendMessage","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","URLSearchParams","validMessage","confirmMasterPassword","hint","showTerms","acceptPolicies","useLowerKdf","isIE","RegisterRequest","orgInvite","postRegister","confirmField","captchaResponse","continuing","leaving","getManagingOrganization","convert","migrateUser","removeConvertAccountRequired","syncLoading","resetPasswordAutoEnroll","getOrganizationAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","SetPasswordRequest","setPassword","onSetPasswordSuccess","onSuccessfulChangePassword","orgIdentifier","choose","webAuthnReady","webAuthnNewTab","webAuthn","twoFactorEmail","loginRoute","authing","needsLock","WebAuthnIFrame","cleanupWebAuthn","providerData","authWebAuthn","DuoWebSDK","Host","sig_request","Signature","submit_callback","sig","doToast","postTwoFactorEmail","getDevice","getDeviceString","pushToken","codes","device","toIdentityToken","client_id","grant_type","client_secret","code_verifier","redirect_uri","deviceIdentifier","deviceName","twoFactorRemember","alterIdentityTokenHeaders","headers","btnText","allow","UpdateTempPasswordRequest","putUpdateTempPassword","disabledByPolicy","exportForm","formatOptions","warningDialog","verifyUser","downloadFile","encryptedFormat","getExport","extension","csv","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","showCardNumber","showCardCode","currentDate","canUseReprompt","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","Domain","StartsWith","Exact","Never","autofillOnPageLoadOptions","myEmail","addEditCipherInfo","organizationChanged","previousCipherId","addUri","removeUri","trackByFunction","editCollections","restorePromise","restoreCipher","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","toggleUriOptions","loginUriMatchChanged","checkPassword","checkPasswordPromise","matches","repromptChanged","saveWithServer","addFieldType","fieldType","eventType","addFieldTypeOptions","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","toggleFieldValue","drop","moveItemInArray","previousIndex","currentIndex","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPending","searchTimeout","rightClickCipher","addCipherOptions","selectedCollectionIds","saveCollectionsWithServer","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","setLoaded","collapsedGroupings","Set","nestedFolders","clearSelections","selectFavorites","selectTrash","selectFolder","selectCollection","idPrefix","SendAccessView","copyLink","alertShown","sendLinkBaseUrl","getSendUrl","urlB64Key","isSafari","isFirefox","setDates","loadSend","hasPassword","encryptSend","encSend","copySuccess","typeChanged","toggleOptions","sendData","togglePasswordVisible","BrowserPath","DateField","DatePreset","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","expirationDatePresets","Firefox","Safari","Default","formattedDeletionDate","browserPath","now","miliseconds","setTime","safariTimePresetOptions","DeletionDate","ExpriationDate","nextWeek","setInitialFormValues","emitDates","onDeletionDatePresetSelect","clearExpiration","formattedExpirationDate","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","previousValue","expired","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchSends","form","CUSTOM_VALUE","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","validatorChange","current","onTouched","validate","policyError","registerOnValidatorChange","getHistory","copyOptions","showSelect","onSelected","avoidAmbiguous","passTypeOptions","optionsResponse","ambiguous","addHistory","sliderChanged","saveOptions","sliderInput","normalizeOptions","cipherView","shareWithServer","elRef","formEls","formEl","contains","tagName","inputEl","click","settingsService","sanitizer","notificationsService","toasterConfig","ToasterConfig","showCloseButton","mouseoverTimerStop","animation","limit","lastActivity","idleTimer","isIdle","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","updateConnection","setFullWidth","setConvertAccountRequired","jq","uploadEvents","clearEvents","setLastSync","clearToken","clearKeys","purge","clearIndex","idleStateChanged","sanitize","SecurityContext","HTML","bodyOutputType","BodyOutputType","TrustedHtml","trustedHtml","disconnectFromInactivity","reconnectFromActivity","OrganizationsRoutingModule","useHash","paramsInheritanceStrategy","language","BroadcasterMessagingService","consoleLogService","WebPlatformUtilsService","HtmlStorageService","secureStorageService","MemoryStorageService","WebCryptoFunctionService","AppIdService","fileUploadService","FileUploadService","ContainerService","eventLoggingService","initFactory","setUrls","onDefaultSystemThemeChange","sysTheme","attachToWindow","useClass","useValue","APP_INITIALIZER","useFactory","deps","LOCALE_ID","subscriber","arg","localStorageKeys","localStorageStartsWithKeys","memoryStorageStartsWithKeys","memoryStorage","isLocalStorage","localStorage","getItem","isMemoryStorage","sessionStorage","setItem","removeItem","swKey","systemLanguage","localesDirectory","formattedLocale","filePath","getLocalesJson","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","locales","placeholders","placeProp","replaceToken","replaceContent","store","identityClientId","browserCache","prefersColorSchemeDark","matchMedia","chrome","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","isViewOpen","rel","blobData","blobOptions","blob","fileNameLower","doDownload","endsWith","Blob","msSaveOrOpenBlob","msSaveBlob","createObjectURL","position","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","html","showCancelButton","cancelButtonText","clipboardData","setData","queryCommandSupported","textarea","copyEl","execCommand","readFromClipboard","authenticateBiometric","getDefaultSystemTheme","addListener","logoutCallback","customUserAgent","isWebClient","isDesktopClient","Headers","qsStringify","getCredentials","isJsonResponse","IdentityTokenResponse","TwoFactorProviders2","clearTwoFactorToken","IdentityTwoFactorResponse","IdentityCaptchaResponse","doAuthRefresh","BillingResponse","TaxInfoResponse","PreloginResponse","getAccountRevisionDate","PaymentResponse","postIapCheck","ApiKeyResponse","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getFolder","postFolder","putFolder","deleteFolder","getSend","apiUrl","addSendIdHeader","SendAccessResponse","SendFileDownloadDataResponse","getSends","ListResponse","postSend","postFileTypeSend","SendFileUploadDataResponse","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCiphersOrganization","postCipher","postCipherCreate","putCipher","deleteManyCiphers","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteManyCiphers","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","AttachmentUploadDataResponse","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","dr","deleteCollectionUser","GroupDetailsResponse","GroupResponse","deleteGroupUser","getPoliciesByInvitedUser","OrganizationUserDetailsResponse","OrganizationUserUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","OrganizationAutoEnrollStatusResponse","OrganizationUserBulkResponse","postImportDirectory","postPublicImportDirectory","TaxRateResponse","getSync","SyncResponse","TwoFactorProviderResponse","TwoFactorAuthenticatorResponse","TwoFactorEmailResponse","TwoFactorDuoResponse","TwoFactorYubiKeyResponse","TwoFactorRecoverResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","OrganizationSubscriptionResponse","OrganizationSsoResponse","postOrganizationSeat","OrganizationKeysResponse","ProviderResponse","ProviderUserUserDetailsResponse","ProviderUserResponse","ProviderUserBulkResponse","ProviderUserBulkPublicKeyResponse","ProviderOrganizationOrganizationDetailsResponse","ProviderOrganizationResponse","getEvents","addEventParameters","EventResponse","postEventsCollect","getActiveBearerToken","authHeader","getEventsUrl","UserKeyResponse","getHibpBreach","BreachAccountResponse","getUserKeyFromKeyConnector","handleError","KeyConnectorUserKeyResponse","getToken","tokenNeedsRefresh","nativeFetch","sponsoredOrgId","sponsoringOrganizationId","sponsoringOrgId","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","apiKeyRefresh","decodedToken","decodeToken","refresh_token","hasResponse","alterHeaders","getApiUrl","requestUrl","requestInit","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","fileUploadType","cipherMiniResponse","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","createdDate","refunded","partiallyRefunded","refundedAmount","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","access_token","expiresIn","expires_in","tokenType","token_type","SsoConfigApi","SsoUrls","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","KeysResponse","OrganizationUserResponse","userProfile","settings","taxIdType","makeAndGetAppId","getAnonymousAppId","existingId","guid","hashBytes","hashStart","hashEnding","leakedHashes","throttle","throttleKey","allThrottles","getThrottles","throttles","argsThrottleKey","queue","exec","DomainMatchBlacklist","sortedCiphersCache","SortedCiphersCache","sortCiphersByLastUsed","_decryptedCipherCache","clearCache","decryptedCipherCache","existingCipher","hasFields","existingHiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encryptField","encField","fieldModel","phModels","encPhs","encryptPasswordHistory","encPh","phModel","hasKey","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","domainUrlHost","urlHost","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedIndex","updateLastUsedDate","ciphersLocalData","cached","updateLastLaunchedDate","lastLaunched","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","CipherShareRequest","encCiphers","CipherBulkShareRequest","unencryptedFile","readAsArrayBuffer","cData","filename","encFileName","dataEncKey","encryptToBytes","encData","fileSize","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","filepath","contentType","CipherBulkMoveRequest","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","clearDeletedDate","CipherBulkRestoreRequest","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","isCached","addCiphers","getLastLaunched","getLastUsed","getNext","sequentialize","comparator","sortedCiphersByUrl","timeouts","Ciphers","resetTimer","lastUsedIndex","y","valueOf","getNextIndex","decryptedCollectionCache","decCollections","nodes","collectionCopy","getNested","attachToGlobal","encOrgKeys","encProviderKeys","keyHash","platformUtilService","storeKey","setOrgKeys","providerOrgs","providerOrg","setProviderKeys","providerKeys","keySuffix","getKeyFromStorage","symmetricKey","retrieveKeyFromStorage","validateKey","encKeyCipher","decEncKey","stretchKey","getPublicKey","rsaExtractPublicKey","keyFingerprint","hkdfExpand","userFingerprint","hashPhrase","getOrgKeys","getProviderKeys","hasKeyInMemory","clearKey","clearSecretStorage","legacyEtmKey","clearStoredKey","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","toggleKey","salt","protectedKeyCs","rsaGenerateKeyPair","publicB64","privateEnc","keyMaterial","hkdf","sendKey","hashPurpose","iterations","getKeyForEncryption","theKey","buildEncKey","plainValue","plainBuf","aesEncrypt","encObj","encValue","macLen","encBytes","EncArrayBuffer","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","aesDecryptToBytes","decipher","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","biometricUnlock","EncryptedObject","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","hmacFast","computedMac","compareFast","aesDecryptFast","aesDecrypt","minimumEntropy","entropyPerWord","numWords","hashArr","entropyAvailable","phrase","hashNumber","bigInt","fromArray","remainder","divide","encKeyEnc","urlsSubject","baseUrl","getNotificationsUrl","notificationsUrl","identityUrl","eventsUrl","setUrlsFromStorage","urlsObj","api","icons","notifications","webVault","keyConnector","envUrls","EnvironmentUrls","saveSettings","formatUrl","getUrls","checkOnInterval","uploadImmediately","orgIds","eventCollection","EventData","EventRequest","getEncryptedExport","getDecryptedExport","getOrganizationEncryptedExport","getOrganizationDecryptedExport","unparse","Event","padNumber","getSeconds","decFolders","buildCommonCipher","encrypted","encKeyValidation","jsonDoc","encKeyValidation_DO_NOT_EDIT","collectionPromises","decCol","cipherPromises","decCipher","padCharacter","numString","login_uri","login_username","login_password","login_totp","toView","values","toDomain","azureFileUploadService","AzureFileUploadService","bitwardenFileUploadService","BitwardenFileUploadService","uploadSendFile","uploadData","encryptedFileData","FileUploadType","Direct","Azure","upload","renewalCallback","encryptedFileName","azureUploadBlob","azureUploadBlocks","urlObject","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","blockIdList","xml","Version","day","compareTo","decryptedFolderCache","noneFolder","folderCopy","cId","updates","getImportOptions","importResult","halfway","last","badData","postImport","errorResponse","handleServerError","getImporterInstance","BitwardenCsvImporter","BitwardenJsonImporter","LastPassCsvImporter","KeePassXCsvImporter","AviraCsvImporter","BlurCsvImporter","SafeInCloudXmlImporter","PadlockCsvImporter","KeePass2XmlImporter","ChromeCsvImporter","FirefoxCsvImporter","UpmCsvImporter","SaferPassCsvImporter","SafariCsvImporter","MeldiumCsvImporter","OnePassword1PifImporter","OnePasswordWinCsvImporter","OnePasswordMacCsvImporter","KeeperCsvImporter","PasswordDragonXmlImporter","EnpassCsvImporter","EnpassJsonImporter","PasswordSafeXmlImporter","DashlaneJsonImporter","MSecureCsvImporter","StickyPasswordXmlImporter","TrueKeyCsvImporter","ClipperzHtmlImporter","RoboFormCsvImporter","AscendoCsvImporter","PasswordBossJsonImporter","ZohoVaultCsvImporter","SplashIdCsvImporter","PassKeepCsvImporter","GnomeJsonImporter","PasswordAgentCsvImporter","PasspackCsvImporter","PassmanJsonImporter","AvastCsvImporter","AvastJsonImporter","FSecureFskImporter","KasperskyTxtImporter","RememBearCsvImporter","PasswordWalletTxtImporter","MykiCsvImporter","SecureSafeCsvImporter","LogMeOnceCsvImporter","BlackBerryCsvImporter","ButtercupCsvImporter","CodebookCsvImporter","EncryptrCsvImporter","YotiCsvImporter","NordPassCsvImporter","ImportCiphersRequest","KvpRequest","ImportOrganizationCiphersRequest","itemType","fieldLower","web","logins","custName","note","pwd","loginName","cards","holderName","cardNumber","cvv","website","secondary_username","col","addCollection","collectionIndex","delimPosition","parseEncrypted","parseDecrypted","groupingsMap","fav","extra","OfficialProps","processingCustomFields","currentVersion","actionType","labelLower","Category","Favorite","Entry","Note","TOTP","Website","PIN","Account","HandledResults","ADDRESS","processAddress","AUTHENTIFIANT","processAuth","BANKSTATEMENT","processNote","IDCARD","PAYMENTMEANS_CREDITCARD","processCard","IDENTITY","processIdentity","credential","secondaryLogin","fullName","nameParts","pseudo","addressName","addressFull","zipcode","owner","nameProperty","Label","Notes","CVV","Expiry","expParts","firstRow","containsField","fieldValue","fieldName","fieldNameLower","foldersMap","foldersIndexMap","folderTree","buildFolderTree","flattenFolderTree","template_type","processLogin","sensitive","uuid","parent_uuid","titlePrefix","tree","creditNumber","creditCvv","creditExpiry","keyRing","display_name","attributes","attr","username_value","NotesHeader","ApplicationsHeader","WebsitesHeader","Delimiter","notesData","applicationsData","websitesData","workingData","parseDataCategory","applications","websites","nameKey","itemComment","itemCommentKey","colonIndex","rootGroup","traverse","isRootNode","groupPrefixName","groupName","nameEl","cipherIndex","entryString","valueEl","keyEl","attrs","ProtectInMemory","Group","buildBaseCipher","parseSecureNote","parseCard","parseIdentity","ccnum","cardCipher","profilename","firstname","lastname","ccname","cccsc","ccexp","ccexpParts","middlename","zip","extraParts","processedNote","typeParts","mappedData","parseSecureNoteMapping","monthString","processingNotes","extraPart","DisplayName","UserName","Url","nickname","additionalInfo","twoFactAuthToken","cardName","exp_month","exp_year","firstAddressLine","secondAddressLine","zipCode","record","recordType","evaluateType","cardholdername","cardnumber","cvc","expirydate","processName","full_name","phone_number","line","trashed","processStandardItem","processWinOpVaultItem","overview","URLs","parsePasswordHistory","notesPlain","parseFields","sections","section","openContents","faveIndex","typeName","secureContents","maxSize","designationKey","valueKey","fieldDesignation","street","setIdentityAddress","expSplit","tags","tag","getValue","custom_fields","customField","field_type","tagsJson","Tags","tagJson","__parsed_extra","fieldsJson","extraFields","fieldJson","newVersion","altFormat","login_url","identifiers","valObj","expDate","cf","records","categoryText","accountName","passwordSafe","notesDelimiter","getAttribute","groupText","trash","cardholder","verification","expiryMonth","expMonthNumber","expiryYear","expYearNumber","Name","Pwd","Rf_fields","OTPAuth","labelEl","cardEl","labelIdEl","labelId","fieldEl","notesEl","candidates","choice","Comment","parseFieldsToNotes","startIndex","loginNodes","loginNode","accountId","usernameText","passwordText","linkText","notesText","accountLogin","account","parentElement","buildGroupText","PropertiesToIgnore","memo","kind","expiryDate","document_content","ChamberName","parseData","SecretData","CustomData","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","userKeyResponse","keyArr","connected","inactive","reconnectTimer","signalrConnection","off","signalR","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","withHubProtocol","signalRMsgPack","MessagePackHubProtocol","on","processNotification","NotificationResponse","onclose","reconnect","isAuthedAndUnlocked","sync","notification","contextId","payloadUserId","UserId","myUserId","SyncCipherCreate","SyncCipherUpdate","SyncCipherDelete","SyncLoginDelete","SyncFolderCreate","SyncFolderUpdate","SyncFolderDelete","SyncVault","SyncCiphers","SyncSettings","SyncOrgKeys","LogOut","SyncSendCreate","SyncSendUpdate","SyncSendDelete","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","SyncCipherNotification","SyncFolderNotification","UserNotification","SyncSendNotification","DefaultOptions","minNumber","minUppercase","minLowercase","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","optionsCache","enforcePasswordGeneratorPoliciesOnOptions","enforcedOptions","getPasswordGeneratorPolicyOptions","useUppercase","useLowercase","numberCount","specialCount","PasswordGeneratorPolicyOptions","currentPolicy","decryptHistory","currentHistory","matchesPrevious","unshift","GeneratedPasswordHistory","encryptHistory","newHistory","userInputs","globalUserInputs","finalUserInputs","zxcvbn","decrypted","array","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","inEffect","policyCache","toLocaleLowerCase","toLocaleUpperCase","resetPasswordPolicyOptions","ResetPasswordPolicyOptions","policiesResponse","policyFilter","filteredPolicies","policySet","isExcemptFromPolicies","isExemptFromPolicies","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","decryptedSendCache","fileData","Send","ArrayBuffer","encryptFileData","parseFile","decSends","legacyServerSendFileUpload","encFileData","settingsCache","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","syncInProgress","lastSync","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","getSecurityStamp","stamp","setSecurityStamp","setEmailVerified","setForcePasswordReset","OrganizationData","ProviderData","replaceOrganizations","replaceProviders","setToken","setRefreshToken","setClientId","setClientSecret","storeTokenValue","toggleTokens","decoded","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getIssuer","iss","amr","skipTokenStorage","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","fullCode","trunc","isAutoCopyEnabled","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","getForcePasswordReset","clearOrganizations","clearProviders","getOrganizationByIdentifier","Provider","alreadyHashed","validateInput","VerifyOTPRequest","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","lastActive","vaultTimeoutSeconds","allowSoftLock","crypto","subtle","ua","isOldSafari","algorithm","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","forge","wcLen","passwordBuf","toBuf","saltBuf","pbkdf2Params","toWebCryptoAlgorithm","importKey","impKey","deriveBits","ikm","outputByteSize","infoBuf","hkdfParams","prk","hashLen","infoArr","runningOkmLength","previousT","okm","md","md5","sha1","valueBytes","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","util","createBuffer","putInt32","DecryptParameters","meta","encKeyByteString","macKeyByteString","decode64","parameters","dataBuffer","createDecipher","finish","rsaParams","impPrivateKey","exportKey","jwkPrivateKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","encodeUtf8","modalOpen","modals"],"mappings":"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A,GAAAC,gBACA,EAAAC,4BACA,GAAAC,iBACA,EAAAC,qBACA,GAAAC,mBACA,GAAA5U,iBACA,GAAAuP,6BACA,GAAAsF,uBACA,GAAAC,mBACA,GAAAC,uBACA,GAAAv+C,mBACA,GAAAw+C,gBACA,GAAAC,qBACA,GAAArmC,mBACA,GAAAsmC,gBACA,GAAAC,mBACA,GAAAC,gBACA,GAAAC,sBACA,GAAAC,qBACA,GAAAC,oBACA,GAAAC,kBACA,GAAAC,qBACA,GAAAC,mBACA,GAAAv+C,iBACA,GAAAw+C,qBACA,GAAAC,mBACA,GAAAhH,wBACA,GAAAiH,oBACA,GAAAvO,iBACA,GAAAwO,qBACA,GAAAC,kBACA,GAAAC,4BACA,GAAAC,6BACA,GAAAC,uBACA,GAAAC,4BACA,GAAAC,qBACA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,oCACA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,iCACA,GAAAC,6BACA,GAAAC,0BACA,GAAAC,gBACA,GAAAC,gCACA,GAAAC,qBACA,GAAAC,oCACA,GAAAC,uBACA,EAAAtd,gBACA,EAAA+Z,wBACA,GAAA9D,mBACA,EAAAsH,cACA,GAAAziD,SACA,GAAA4f,cACA,GAAA8iC,gBACA,GAAAC,iCACA,GAAA3rC,uBACA,GAAA4rC,iBACA,EAAAC,cACA,EAAAC,eACA,EAAA/d,gBACA,EAAAge,wBACA,GAAAC,iBACA,mBACA,oBACA,GAAAC,6BACA,GAAAnjB,2BACA,GAAAojB,kCACA,wBACA,sBACA,uBACA,sBACA,oBACA,6BACA,wBACA,wBACA,uBACA,kBACA,mBACA,mCACA,mBACA,oCACA,wBACA,sBACA,kBACA,uBACA,kBACA,kBACA,sBACA,oBACA,yBACA,kCACA,qBACA,kBACA,2BACA,uBACA,uBACA,sBACA,GAAA/F,uBACA,EAAAgG,4BACA,oCACA,kBACA,gCACA,GAAAC,2BACA,GAAAC,kCACA,EAAAvhB,0BACA,EAAAwhB,0BACA,GAAAl8B,iBACA,GAAAm8B,iBACA,GAAAC,iBACA,GAAAC,oBACA,EAAAC,uBACA,EAAAC,0BACA,EAAAC,kBACA,GAAAC,+BACA,GAAAC,kBACA,GAAAxiC,WACA,GAAAyiC,oBACA,oBACA,wBACA,GAAAC,cACA,GAAAC,kBACA,GAAAC,eACA,GAAAC,2BACA,GAAAC,0BACA,EAAAC,aACA,GAAAhuC,mBACA,GAAAQ,kBACA,GAAAgW,iBACA,GAAAy3B,eACA,GAAAC,wBACA,GAAAC,gCACA,EAAAC,mBACA,GAAAC,sBACA,GAAAC,wBACA,EAAAC,0BACA,GAAAC,2BACA,GAAAC,wBACA,GAAA5hB,yBACA,GAAA6hB,2BACA,GAAAC,0BACA,GAAAC,iCACA,GAAAC,mBACA,GAAAC,uBACA,EAAAC,4BACA,GAAAC,qBACA,EAAAC,oBACA,GAAAC,0BACA,GAAA7tC,aACA,GAAA8tC,eACA,GAAAC,qBACA,EAAAC,0BACA,EAAAC,6BACA,GAAAC,6BACA,GAAA1G,mBACA,GAAA2G,uCACA,GAAAC,8BACA,GAAAC,yBACA,GAAAC,iCACA,GAAAC,0BACA,GAAAC,iCACA,GAAAC,2BACA,GAAAC,2BACA,GAAAC,6BACA,GAAAC,2BACA,GAAAxL,6BACA,GAAA5jB,8BACA,EAAAqvB,yBAAuB,SAnLvB,EAAAjH,aACA,EAAAC,YACA,EAAAC,qBACA,EAAAC,eAAc,iBAEd,EAAAG,oBACA,EAAAC,cAAY,SAgLZ,GAAAp/C,mBACA,GAAAggD,gBACA,GAAA/9C,iBACA,GAAAX,mBACA,GAAAsU,mBACA,GAAAQ,kBACA,GAAA7W,SACA,GAAAshB,WACA,GAAA5J,aACA,EAAAqtB,gBACA,EAAAG,gBACA,GAAApF,+B,gEAKKsf,GAAS,E,KAxMrB,EAAAoH,S,MAAS,CACNC,QAAS,CACL,EAAAnH,aACA,EAAAC,YACA,EAAAC,qBACA,EAAAC,eACA,EAAAC,cAAcC,WACd,EAAAC,oBACA,EAAAC,cAEJ6G,aAAc,CACV,GAAAjmD,mBACA,EAAAq/C,yBACA,GAAAC,gBACA,EAAAC,4BACA,GAAAC,iBACA,EAAAC,qBACA,GAAAC,mBACA,GAAA5U,iBACA,GAAAuP,6BACA,GAAAsF,uBACA,GAAAC,mBACA,GAAAC,uBACA,GAAAv+C,mBACA,GAAAw+C,gBACA,GAAAC,qBACA,GAAArmC,mBACA,GAAAsmC,gBACA,GAAAC,mBACA,GAAAC,gBACA,GAAAC,sBACA,GAAAC,qBACA,GAAAC,oBACA,GAAAC,kBACA,GAAAC,qBACA,GAAAC,mBACA,GAAAv+C,iBACA,GAAAw+C,qBACA,GAAAC,mBACA,GAAAhH,wBACA,GAAAiH,oBACA,GAAAvO,iBACA,GAAAwO,qBACA,GAAAC,kBACA,GAAAC,4BACA,GAAAC,6BACA,GAAAC,uBACA,GAAAC,4BACA,GAAAC,qBACA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,oCACA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,iCACA,GAAAC,6BACA,GAAAC,0BACA,GAAAC,gBACA,GAAAC,gCACA,GAAAC,qBACA,GAAAC,oCACA,GAAAC,uBACA,EAAAtd,gBACA,EAAA+Z,wBACA,GAAA9D,mBACA,EAAAsH,cACA,GAAAziD,SACA,GAAA4f,cACA,GAAA8iC,gBACA,GAAAC,iCACA,GAAA3rC,uBACA,GAAA4rC,iBACA,EAAAC,cACA,EAAAC,eACA,EAAA/d,gBACA,EAAAge,wBACA,GAAAC,iBACA,mBACA,oBACA,GAAAC,6BACA,GAAAnjB,2BACA,GAAAojB,kCACA,wBACA,sBACA,uBACA,sBACA,oBACA,6BACA,wBACA,wBACA,uBACA,kBACA,mBACA,mCACA,mBACA,oCACA,wBACA,sBACA,kBACA,uBACA,kBACA,kBACA,sBACA,oBACA,yBACA,kCACA,qBACA,kBACA,2BACA,uBACA,uBACA,sBACA,GAAA/F,uBACA,EAAAgG,4BACA,oCACA,kBACA,gCACA,GAAAC,2BACA,GAAAC,kCACA,EAAAvhB,0BACA,EAAAwhB,0BACA,GAAAl8B,iBACA,GAAAm8B,iBACA,GAAAC,iBACA,GAAAC,oBACA,EAAAC,uBACA,EAAAC,0BACA,EAAAC,kBACA,GAAAC,+BACA,GAAAC,kBACA,GAAAxiC,WACA,GAAAyiC,oBACA,oBACA,wBACA,GAAAC,cACA,GAAAC,kBACA,GAAAC,eACA,GAA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","file":"app/main.656f1dffa218e8467958.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([990,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export abstract class I18nService {\n    locale: string;\n    supportedTranslationLocales: string[];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames: Map<string, string>;\n    t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n    translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { LogLevelType } from '../enums/logLevelType';\n\nexport abstract class LogService {\n    debug: (message: string) => void;\n    info: (message: string) => void;\n    warning: (message: string) => void;\n    error: (message: string) => void;\n    write: (level: LogLevelType, message: string) => void;\n    time: (label: string) => void;\n    timeEnd: (label: string) => [number, number];\n}\n","import { DeviceType } from '../enums/deviceType';\nimport { ThemeType } from '../enums/themeType';\n\nexport abstract class PlatformUtilsService {\n    identityClientId: string;\n    getDevice: () => DeviceType;\n    getDeviceString: () => string;\n    isFirefox: () => boolean;\n    isChrome: () => boolean;\n    isEdge: () => boolean;\n    isOpera: () => boolean;\n    isVivaldi: () => boolean;\n    isSafari: () => boolean;\n    isIE: () => boolean;\n    isMacAppStore: () => boolean;\n    isViewOpen: () => Promise<boolean>;\n    launchUri: (uri: string, options?: any) => void;\n    saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n    getApplicationVersion: () => Promise<string>;\n    supportsWebAuthn: (win: Window) => boolean;\n    supportsDuo: () => boolean;\n    showToast: (type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any) => void;\n    showDialog: (body: string, title?: string, confirmText?: string, cancelText?: string,\n        type?: string, bodyIsHtml?: boolean) => Promise<boolean>;\n    isDev: () => boolean;\n    isSelfHost: () => boolean;\n    copyToClipboard: (text: string, options?: any) => void | boolean;\n    readFromClipboard: (options?: any) => Promise<string>;\n    supportsBiometric: () => Promise<boolean>;\n    authenticateBiometric: () => Promise<boolean>;\n    getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n    onDefaultSystemThemeChange: (callback: ((theme: ThemeType.Light | ThemeType.Dark) => unknown)) => unknown;\n    getEffectiveTheme: () => Promise<ThemeType>;\n    supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from '../enums/policyType';\nimport { SetKeyConnectorKeyRequest } from '../models/request/account/setKeyConnectorKeyRequest';\nimport { VerifyOTPRequest } from '../models/request/account/verifyOTPRequest';\n\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\n\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EmergencyAccessAcceptRequest } from '../models/request/emergencyAccessAcceptRequest';\nimport { EmergencyAccessConfirmRequest } from '../models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessInviteRequest } from '../models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessPasswordRequest } from '../models/request/emergencyAccessPasswordRequest';\nimport { EmergencyAccessUpdateRequest } from '../models/request/emergencyAccessUpdateRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeyConnectorUserKeyRequest } from '../models/request/keyConnectorUserKeyRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationSponsorshipCreateRequest } from '../models/request/organization/organizationSponsorshipCreateRequest';\nimport { OrganizationSponsorshipRedeemRequest } from '../models/request/organization/organizationSponsorshipRedeemRequest';\nimport { OrganizationSsoRequest } from '../models/request/organization/organizationSsoRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationImportRequest } from '../models/request/organizationImportRequest';\nimport { OrganizationKeysRequest } from '../models/request/organizationKeysRequest';\nimport { OrganizationSubscriptionUpdateRequest } from '../models/request/organizationSubscriptionUpdateRequest';\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserBulkConfirmRequest } from '../models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from '../models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from '../models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { OrganizationUserResetPasswordRequest } from '../models/request/organizationUserResetPasswordRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PolicyRequest } from '../models/request/policyRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { ProviderAddOrganizationRequest } from '../models/request/provider/providerAddOrganizationRequest';\nimport { ProviderOrganizationCreateRequest } from '../models/request/provider/providerOrganizationCreateRequest';\nimport { ProviderSetupRequest } from '../models/request/provider/providerSetupRequest';\nimport { ProviderUpdateRequest } from '../models/request/provider/providerUpdateRequest';\nimport { ProviderUserAcceptRequest } from '../models/request/provider/providerUserAcceptRequest';\nimport { ProviderUserBulkConfirmRequest } from '../models/request/provider/providerUserBulkConfirmRequest';\nimport { ProviderUserBulkRequest } from '../models/request/provider/providerUserBulkRequest';\nimport { ProviderUserConfirmRequest } from '../models/request/provider/providerUserConfirmRequest';\nimport { ProviderUserInviteRequest } from '../models/request/provider/providerUserInviteRequest';\nimport { ProviderUserUpdateRequest } from '../models/request/provider/providerUserUpdateRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SecretVerificationRequest } from '../models/request/secretVerificationRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { SendAccessRequest } from '../models/request/sendAccessRequest';\nimport { SendRequest } from '../models/request/sendRequest';\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTempPasswordRequest } from '../models/request/updateTempPasswordRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from '../models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from '../models/request/updateTwoFactorWebAuthnRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { AttachmentResponse } from '../models/response/attachmentResponse';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport {\n    EmergencyAccessGranteeDetailsResponse,\n    EmergencyAccessGrantorDetailsResponse,\n    EmergencyAccessTakeoverResponse,\n    EmergencyAccessViewResponse\n} from '../models/response/emergencyAccessResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityCaptchaResponse } from '../models/response/identityCaptchaResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { KeyConnectorUserKeyResponse } from '../models/response/keyConnectorUserKeyResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationSsoResponse } from '../models/response/organization/organizationSsoResponse';\nimport { OrganizationAutoEnrollStatusResponse } from '../models/response/organizationAutoEnrollStatusResponse';\nimport { OrganizationKeysResponse } from '../models/response/organizationKeysResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport { OrganizationUserBulkPublicKeyResponse } from '../models/response/organizationUserBulkPublicKeyResponse';\nimport { OrganizationUserBulkResponse } from '../models/response/organizationUserBulkResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserResetPasswordDetailsReponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PlanResponse } from '../models/response/planResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { ProviderOrganizationOrganizationDetailsResponse, ProviderOrganizationResponse } from '../models/response/provider/providerOrganizationResponse';\nimport { ProviderResponse } from '../models/response/provider/providerResponse';\nimport { ProviderUserBulkPublicKeyResponse } from '../models/response/provider/providerUserBulkPublicKeyResponse';\nimport { ProviderUserBulkResponse } from '../models/response/provider/providerUserBulkResponse';\nimport { ProviderUserResponse, ProviderUserUserDetailsResponse } from '../models/response/provider/providerUserResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SendAccessResponse } from '../models/response/sendAccessResponse';\nimport { SendFileDownloadDataResponse } from '../models/response/sendFileDownloadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\nimport { SendResponse } from '../models/response/sendResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\nimport { TaxRateResponse } from '../models/response/taxRateResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport { ChallengeResponse, TwoFactorWebAuthnResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nimport { SendAccessView } from '../models/view/sendAccessView';\n\nexport abstract class ApiService {\n    postIdentityToken: (request: TokenRequest) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n    refreshIdentityToken: () => Promise<any>;\n\n    getProfile: () => Promise<ProfileResponse>;\n    getUserBilling: () => Promise<BillingResponse>;\n    getUserSubscription: () => Promise<SubscriptionResponse>;\n    getTaxInfo: () => Promise<TaxInfoResponse>;\n    putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n    putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n    postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n    postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n    postEmail: (request: EmailRequest) => Promise<any>;\n    postPassword: (request: PasswordRequest) => Promise<any>;\n    setPassword: (request: SetPasswordRequest) => Promise<any>;\n    postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n    postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n    deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n    getAccountRevisionDate: () => Promise<number>;\n    postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n    postRegister: (request: RegisterRequest) => Promise<any>;\n    postPremium: (data: FormData) => Promise<PaymentResponse>;\n    postIapCheck: (request: IapCheckRequest) => Promise<any>;\n    postReinstatePremium: () => Promise<any>;\n    postCancelPremium: () => Promise<any>;\n    postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n    postAccountPayment: (request: PaymentRequest) => Promise<any>;\n    postAccountLicense: (data: FormData) => Promise<any>;\n    postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n    postAccountKeys: (request: KeysRequest) => Promise<any>;\n    postAccountVerifyEmail: () => Promise<any>;\n    postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n    postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n    postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n    postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n    postAccountKdf: (request: KdfRequest) => Promise<any>;\n    postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n    postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n    putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n    postAccountRequestOTP: () => Promise<void>;\n    postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n    postConvertToKeyConnector: () => Promise<void>;\n\n    getFolder: (id: string) => Promise<FolderResponse>;\n    postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n    putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n    deleteFolder: (id: string) => Promise<any>;\n\n    getSend: (id: string) => Promise<SendResponse>;\n    postSendAccess: (id: string, request: SendAccessRequest, apiUrl?: string) => Promise<SendAccessResponse>;\n    getSends: () => Promise<ListResponse<SendResponse>>;\n    postSend: (request: SendRequest) => Promise<SendResponse>;\n    postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n    postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n    putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n    putSendRemovePassword: (id: string) => Promise<SendResponse>;\n    deleteSend: (id: string) => Promise<any>;\n    getSendFileDownloadData: (send: SendAccessView, request: SendAccessRequest, apiUrl?: string) => Promise<SendFileDownloadDataResponse>;\n    renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n    getCipher: (id: string) => Promise<CipherResponse>;\n    getCipherAdmin: (id: string) => Promise<CipherResponse>;\n    getAttachmentData: (cipherId: string, attachmentId: string, emergencyAccessId?: string) => Promise<AttachmentResponse>;\n    getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n    postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n    postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    deleteCipher: (id: string) => Promise<any>;\n    deleteCipherAdmin: (id: string) => Promise<any>;\n    deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n    putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n    putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n    putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n    postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n    postImportOrganizationCiphers: (organizationId: string, request: ImportOrganizationCiphersRequest) => Promise<any>;\n    putDeleteCipher: (id: string) => Promise<any>;\n    putDeleteCipherAdmin: (id: string) => Promise<any>;\n    putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putRestoreCipher: (id: string) => Promise<CipherResponse>;\n    putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n    putRestoreManyCiphers: (request: CipherBulkRestoreRequest) => Promise<ListResponse<CipherResponse>>;\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n    postCipherAttachment: (id: string, request: AttachmentRequest) => Promise<AttachmentUploadDataResponse>;\n    deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n    deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n    postShareCipherAttachment: (id: string, attachmentId: string, data: FormData,\n        organizationId: string) => Promise<any>;\n    renewAttachmentUploadUrl: (id: string, attachmentId: string) => Promise<AttachmentUploadDataResponse>;\n    postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n    getCollectionDetails: (organizationId: string, id: string) => Promise<CollectionGroupDetailsResponse>;\n    getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n    getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n    getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n    postCollection: (organizationId: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    putCollectionUsers: (organizationId: string, id: string, request: SelectionReadOnlyRequest[]) => Promise<any>;\n    putCollection: (organizationId: string, id: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    deleteCollection: (organizationId: string, id: string) => Promise<any>;\n    deleteCollectionUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n    getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n    getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n    postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n    deleteGroup: (organizationId: string, id: string) => Promise<any>;\n    deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n    getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n    getPoliciesByToken: (organizationId: string, token: string, email: string, organizationUserId: string) =>\n        Promise<ListResponse<PolicyResponse>>;\n    getPoliciesByInvitedUser: (\n      organizationId: string,\n      userId: string\n    ) => Promise<ListResponse<PolicyResponse>>;\n    putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<PolicyResponse>;\n\n    getOrganizationUser: (organizationId: string, id: string) => Promise<OrganizationUserDetailsResponse>;\n    getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n    getOrganizationUsers: (organizationId: string) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n    getOrganizationUserResetPasswordDetails: (organizationId: string, id: string)\n        => Promise<OrganizationUserResetPasswordDetailsReponse>;\n    postOrganizationUserInvite: (organizationId: string, request: OrganizationUserInviteRequest) => Promise<any>;\n    postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n    postManyOrganizationUserReinvite: (organizationId: string, request: OrganizationUserBulkRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n    postOrganizationUserAccept: (organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest) => Promise<any>;\n    postOrganizationUserConfirm: (organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest) => Promise<any>;\n    postOrganizationUsersPublicKey: (organizationId: string, request: OrganizationUserBulkRequest) =>\n        Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n    postOrganizationUserBulkConfirm: (organizationId: string, request: OrganizationUserBulkConfirmRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n    putOrganizationUser: (organizationId: string, id: string, request: OrganizationUserUpdateRequest) => Promise<any>;\n    putOrganizationUserGroups: (organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest) => Promise<any>;\n    putOrganizationUserResetPasswordEnrollment: (organizationId: string, userId: string,\n        request: OrganizationUserResetPasswordEnrollmentRequest) => Promise<any>;\n    putOrganizationUserResetPassword: (organizationId: string, id: string,\n        request: OrganizationUserResetPasswordRequest) => Promise<any>;\n    deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n    deleteManyOrganizationUsers: (organizationId: string, request: OrganizationUserBulkRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n    getSync: () => Promise<SyncResponse>;\n    postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n    postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n    getSettingsDomains: () => Promise<DomainsResponse>;\n    putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n    getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorOrganizationProviders: (organizationId: string) => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorAuthenticator: (request: SecretVerificationRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n    getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorOrganizationDuo: (organizationId: string,\n        request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n    getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n    getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n    getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n    putTwoFactorAuthenticator: (\n        request: UpdateTwoFactorAuthenticatorRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n    putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorOrganizationDuo: (organizationId: string,\n        request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorYubiKey: (request: UpdateTwoFactorYubioOtpRequest) => Promise<TwoFactorYubiKeyResponse>;\n    putTwoFactorWebAuthn: (request: UpdateTwoFactorWebAuthnRequest) => Promise<TwoFactorWebAuthnResponse>;\n    deleteTwoFactorWebAuthn: (request: UpdateTwoFactorWebAuthnDeleteRequest) => Promise<TwoFactorWebAuthnResponse>;\n    putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    putTwoFactorOrganizationDisable: (organizationId: string,\n        request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n    postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n    postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n    getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n    getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n    getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n    getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n    putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n    deleteEmergencyAccess: (id: string) => Promise<any>;\n    postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n    postEmergencyAccessReinvite: (id: string) => Promise<any>;\n    postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n    postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n    postEmergencyAccessInitiate: (id: string) => Promise<any>;\n    postEmergencyAccessApprove: (id: string) => Promise<any>;\n    postEmergencyAccessReject: (id: string) => Promise<any>;\n    postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n    postEmergencyAccessPassword: (id: string, request: EmergencyAccessPasswordRequest) => Promise<any>;\n    postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n    getOrganization: (id: string) => Promise<OrganizationResponse>;\n    getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n    getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n    getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n    getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n    getOrganizationAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n    getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n    postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n    putOrganization: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n    putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n    postLeaveOrganization: (id: string) => Promise<any>;\n    postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n    postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n    postOrganizationApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n    postOrganizationUpgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n    postOrganizationUpdateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n    postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n    postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n    postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n    postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n    postOrganizationCancel: (id: string) => Promise<any>;\n    postOrganizationReinstate: (id: string) => Promise<any>;\n    deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n    getPlans: () => Promise<ListResponse<PlanResponse>>;\n    getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n    getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n    postOrganizationKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n\n    postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n    getProvider: (id: string) => Promise<ProviderResponse>;\n    putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n    getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n    getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n    postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n    postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n    postManyProviderUserReinvite: (providerId: string, request: ProviderUserBulkRequest) => Promise<ListResponse<ProviderUserBulkResponse>>;\n    postProviderUserAccept: (providerId: string, id: string, request: ProviderUserAcceptRequest) => Promise<any>;\n    postProviderUserConfirm: (providerId: string, id: string, request: ProviderUserConfirmRequest) => Promise<any>;\n    postProviderUsersPublicKey: (providerId: string, request: ProviderUserBulkRequest) =>\n        Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n    postProviderUserBulkConfirm: (providerId: string, request: ProviderUserBulkConfirmRequest) => Promise<ListResponse<ProviderUserBulkResponse>>;\n    putProviderUser: (providerId: string, id: string, request: ProviderUserUpdateRequest) => Promise<any>;\n    deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n    deleteManyProviderUsers: (providerId: string, request: ProviderUserBulkRequest) => Promise<ListResponse<ProviderUserBulkResponse>>;\n    getProviderClients: (providerId: string) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n    postProviderAddOrganization: (providerId: string, request: ProviderAddOrganizationRequest) => Promise<any>;\n    postProviderCreateOrganization: (providerId: string, request: ProviderOrganizationCreateRequest) => Promise<ProviderOrganizationResponse>;\n    deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n    getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsCipher: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganization: (id: string, start: string, end: string,\n        token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganizationUser: (organizationId: string, id: string,\n        start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsProvider: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsProviderUser: (providerId: string, id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n    deleteSsoUser: (organizationId: string) => Promise<any>;\n    getSsoUserIdentifier: () => Promise<string>;\n\n    getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n    getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n    postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n    postSetupPayment: () => Promise<string>;\n\n    getActiveBearerToken: () => Promise<string>;\n    fetch: (request: Request) => Promise<Response>;\n    nativeFetch: (request: Request) => Promise<Response>;\n\n    preValidateSso: (identifier: string) => Promise<boolean>;\n\n    postCreateSponsorship: (sponsorshipOrgId: string, request: OrganizationSponsorshipCreateRequest) => Promise<void>;\n    deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n    deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n    postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n    postRedeemSponsorship: (sponsorshipToken: string, request: OrganizationSponsorshipRedeemRequest) => Promise<void>;\n    postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n    getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n    postUserKeyToKeyConnector: (keyConnectorUrl: string, request: KeyConnectorUserKeyRequest) => Promise<void>;\n    getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","import { OrganizationData } from '../models/data/organizationData';\nimport { ProviderData } from '../models/data/providerData';\n\nimport { Organization } from '../models/domain/organization';\nimport { Provider } from '../models/domain/provider';\n\nimport { KdfType } from '../enums/kdfType';\n\nexport abstract class UserService {\n    setInformation: (userId: string, email: string, kdf: KdfType, kdfIterations: number) => Promise<any>;\n    setEmailVerified: (emailVerified: boolean) => Promise<any>;\n    setSecurityStamp: (stamp: string) => Promise<any>;\n    setForcePasswordReset: (forcePasswordReset: boolean) => Promise<any>;\n    getUserId: () => Promise<string>;\n    getEmail: () => Promise<string>;\n    getSecurityStamp: () => Promise<string>;\n    getKdf: () => Promise<KdfType>;\n    getKdfIterations: () => Promise<number>;\n    getEmailVerified: () => Promise<boolean>;\n    getForcePasswordReset: () => Promise<boolean>;\n    clear: () => Promise<any>;\n    isAuthenticated: () => Promise<boolean>;\n    canAccessPremium: () => Promise<boolean>;\n    canManageSponsorships: () => Promise<boolean>;\n    getOrganization: (id: string) => Promise<Organization>;\n    getOrganizationByIdentifier: (identifier: string) => Promise<Organization>;\n    getAllOrganizations: () => Promise<Organization[]>;\n    replaceOrganizations: (organizations: { [id: string]: OrganizationData; }) => Promise<any>;\n    clearOrganizations: (userId: string) => Promise<any>;\n    getProvider: (id: string) => Promise<Provider>;\n    getAllProviders: () => Promise<Provider[]>;\n    replaceProviders: (providers: { [id: string]: ProviderData; }) => Promise<any>;\n    clearProviders: (userId: string) => Promise<any>;\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Pipe({\n    name: 'i18n',\n})\nexport class I18nPipe implements PipeTransform {\n    constructor(private i18nService: I18nService) { }\n\n    transform(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.i18nService.t(id, p1, p2, p3);\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appA11yTitle]',\n})\nexport class A11yTitleDirective {\n    @Input() set appA11yTitle(title: string) {\n        this.title = title;\n    }\n\n    private title: string;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (!this.el.nativeElement.hasAttribute('title')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'title', this.title);\n        }\n        if (!this.el.nativeElement.hasAttribute('aria-label')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'aria-label', this.title);\n        }\n    }\n}\n","export abstract class MessagingService {\n    send: (subscriber: string, arg?: any) => void;\n}\n","import { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\nimport { ProfileProviderOrganizationResponse } from '../models/response/profileProviderOrganizationResponse';\nimport { ProfileProviderResponse } from '../models/response/profileProviderResponse';\n\nimport { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\n\nimport { KeySuffixOptions } from './storage.service';\n\nexport abstract class CryptoService {\n    setKey: (key: SymmetricCryptoKey) => Promise<any>;\n    setKeyHash: (keyHash: string) => Promise<{}>;\n    setEncKey: (encKey: string) => Promise<{}>;\n    setEncPrivateKey: (encPrivateKey: string) => Promise<{}>;\n    setOrgKeys: (orgs: ProfileOrganizationResponse[], providerOrgs: ProfileProviderOrganizationResponse[]) => Promise<{}>;\n    setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<{}>;\n    getKey: (keySuffix?: KeySuffixOptions) => Promise<SymmetricCryptoKey>;\n    getKeyFromStorage: (keySuffix: KeySuffixOptions) => Promise<SymmetricCryptoKey>;\n    getKeyHash: () => Promise<string>;\n    compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n    getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n    getPublicKey: () => Promise<ArrayBuffer>;\n    getPrivateKey: () => Promise<ArrayBuffer>;\n    getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n    getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n    getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n    getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n    hasKey: () => Promise<boolean>;\n    hasKeyInMemory: () => boolean;\n    hasKeyStored: (keySuffix?: KeySuffixOptions) => Promise<boolean>;\n    hasEncKey: () => Promise<boolean>;\n    clearKey: (clearSecretStorage?: boolean) => Promise<any>;\n    clearKeyHash: () => Promise<any>;\n    clearEncKey: (memoryOnly?: boolean) => Promise<any>;\n    clearKeyPair: (memoryOnly?: boolean) => Promise<any>;\n    clearOrgKeys: (memoryOnly?: boolean) => Promise<any>;\n    clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n    clearPinProtectedKey: () => Promise<any>;\n    clearKeys: () => Promise<any>;\n    toggleKey: () => Promise<any>;\n    makeKey: (password: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    makeKeyFromPin: (pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs?: EncString) => Promise<SymmetricCryptoKey>;\n    makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n    makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n    makePinKey: (pin: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n    hashPassword: (password: string, key: SymmetricCryptoKey, hashPurpose?: HashPurpose) => Promise<string>;\n    makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n    remakeEncKey: (key: SymmetricCryptoKey, encKey?: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n    encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n    encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n    rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n    decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n    decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    randomNumber: (min: number, max: number) => Promise<number>;\n    validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    OnChanges,\n} from '@angular/core';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\nimport { ValidationService } from '../services/validation.service';\n\n@Directive({\n    selector: '[appApiAction]',\n})\nexport class ApiActionDirective implements OnChanges {\n    @Input() appApiAction: Promise<any>;\n\n    constructor(private el: ElementRef, private validationService: ValidationService,\n        private logService: LogService) { }\n\n    ngOnChanges(changes: any) {\n        if (this.appApiAction == null || this.appApiAction.then == null) {\n            return;\n        }\n\n        this.el.nativeElement.loading = true;\n\n        this.appApiAction.then((response: any) => {\n            this.el.nativeElement.loading = false;\n        }, (e: any) => {\n            this.el.nativeElement.loading = false;\n\n            if ((e instanceof ErrorResponse || e.constructor.name === 'ErrorResponse') && (e as ErrorResponse).captchaRequired) {\n                this.logService.error('Captcha required error response: ' + e.getSingleMessage());\n                return;\n            }\n            this.logService?.error(`Received API exception: ${e}`);\n            this.validationService.showError(e);\n        });\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\n\n@Component({\n    selector: 'app-callout',\n    templateUrl: 'callout.component.html',\n})\nexport class CalloutComponent implements OnInit {\n    @Input() type = 'info';\n    @Input() icon: string;\n    @Input() title: string;\n    @Input() clickable: boolean;\n    @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n    @Input() enforcedPolicyMessage: string;\n    @Input() useAlertRole = false;\n\n    calloutStyle: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnInit() {\n        this.calloutStyle = this.type;\n\n        if (this.enforcedPolicyMessage === undefined) {\n            this.enforcedPolicyMessage = this.i18nService.t('masterPasswordPolicyInEffect');\n        }\n\n        if (this.type === 'warning' || this.type === 'danger') {\n            if (this.type === 'danger') {\n                this.calloutStyle = 'danger';\n            }\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('warning');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-warning';\n            }\n        } else if (this.type === 'error') {\n            this.calloutStyle = 'danger';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('error');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-bolt';\n            }\n        } else if (this.type === 'tip') {\n            this.calloutStyle = 'success';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('tip');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-lightbulb-o';\n            }\n        }\n    }\n\n    getPasswordScoreAlertDisplay() {\n        if (this.enforcedPolicyOptions == null) {\n            return '';\n        }\n\n        let str: string;\n        switch (this.enforcedPolicyOptions.minComplexity) {\n            case 4:\n                str = this.i18nService.t('strong');\n                break;\n            case 3:\n                str = this.i18nService.t('good');\n                break;\n            default:\n                str = this.i18nService.t('weak');\n                break;\n        }\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\n    }\n}\n","<div #callout class=\"callout callout-{{calloutStyle}}\" [ngClass]=\"{'clickable': clickable}\" [attr.role]=\"useAlertRole ? 'alert' : null\"> <h3 class=\"callout-heading\" *ngIf=\"title\"> <i class=\"fa {{icon}}\" *ngIf=\"icon\" aria-hidden=\"true\"></i> {{title}} </h3> <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\"> {{enforcedPolicyMessage}} <ul> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </div> <ng-content></ng-content> </div> ","import {\n    ApplicationRef,\n    ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EmbeddedViewRef,\n    Injectable,\n    Injector,\n    Type,\n    ViewContainerRef\n} from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { DynamicModalComponent } from '../components/modal/dynamic-modal.component';\nimport { ModalInjector } from '../components/modal/modal-injector';\nimport { ModalRef } from '../components/modal/modal.ref';\n\nexport class ModalConfig<D = any> {\n    data?: D;\n    allowMultipleModals: boolean = false;\n}\n\n@Injectable()\nexport class ModalService {\n    protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n    // Lazy loaded modules are not available in componentFactoryResolver,\n    // therefore modules needs to manually initialize their resolvers.\n    private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private applicationRef: ApplicationRef,\n        private injector: Injector) {\n        document.addEventListener('keyup', event => {\n            if (event.key === 'Escape' && this.modalCount > 0) {\n                this.topModal.instance.close();\n            }\n        });\n    }\n\n    get modalCount() {\n        return this.modalList.length;\n    }\n\n    private get topModal() {\n        return this.modalList[this.modalCount - 1];\n    }\n\n    async openViewRef<T>(componentType: Type<T>, viewContainerRef: ViewContainerRef,\n        setComponentParameters: (component: T) => void = null): Promise<[ModalRef, T]> {\n\n        const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n        modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n        viewContainerRef.insert(modalComponentRef.hostView);\n\n        await modalRef.onCreated.pipe(first()).toPromise();\n\n        return [modalRef, modalComponentRef.instance.componentRef.instance];\n    }\n\n    open(componentType: Type<any>, config?: ModalConfig) {\n        if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n            return;\n        }\n\n        const [modalRef, _] = this.openInternal(componentType, config, true);\n\n        return modalRef;\n    }\n\n    registerComponentFactoryResolver<T>(componentType: Type<T>, componentFactoryResolver: ComponentFactoryResolver): void {\n        this.factoryResolvers.set(componentType, componentFactoryResolver);\n    }\n\n    resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n        if (this.factoryResolvers.has(componentType)) {\n            return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n        }\n\n        return this.componentFactoryResolver.resolveComponentFactory(componentType);\n    }\n\n    protected openInternal(componentType: Type<any>, config?: ModalConfig, attachToDom?: boolean):\n        [ModalRef, ComponentRef<DynamicModalComponent>] {\n\n        const [modalRef, componentRef] = this.createModalComponent(config);\n        componentRef.instance.childComponentType = componentType;\n\n        if (attachToDom) {\n            this.applicationRef.attachView(componentRef.hostView);\n            const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n            document.body.appendChild(domElem);\n        }\n\n        modalRef.onClosed.pipe(first()).subscribe(() => {\n            if (attachToDom) {\n                this.applicationRef.detachView(componentRef.hostView);\n            }\n            componentRef.destroy();\n\n            this.modalList.pop();\n            if (this.modalCount > 0) {\n                this.topModal.instance.getFocus();\n            }\n        });\n\n        this.setupHandlers(modalRef);\n\n        this.modalList.push(componentRef);\n\n        return [modalRef, componentRef];\n    }\n\n    protected setupHandlers(modalRef: ModalRef) {\n        let backdrop: HTMLElement = null;\n\n        // Add backdrop, setup [data-dismiss] handler.\n        modalRef.onCreated.pipe(first()).subscribe(el => {\n            document.body.classList.add('modal-open');\n\n            const modalEl: HTMLElement = el.querySelector('.modal');\n            const dialogEl = modalEl.querySelector('.modal-dialog') as HTMLElement;\n\n            backdrop = document.createElement('div');\n            backdrop.className = 'modal-backdrop fade';\n            backdrop.style.zIndex = `${this.modalCount}040`;\n            modalEl.prepend(backdrop);\n\n            dialogEl.addEventListener('click', (e: Event) => {\n                e.stopPropagation();\n            });\n            dialogEl.style.zIndex = `${this.modalCount}050`;\n\n            const modals = Array.from(el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]'));\n            for (const closeElement of modals) {\n                closeElement.addEventListener('click', event => {\n                    modalRef.close();\n                });\n            }\n        });\n\n        // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n        modalRef.onClose.pipe(first()).subscribe(() => {\n            modalRef.closed();\n\n            if (this.modalCount === 0) {\n                document.body.classList.remove('modal-open');\n            }\n        });\n    }\n\n    protected createModalComponent(config: ModalConfig): [ModalRef, ComponentRef<DynamicModalComponent>] {\n        const modalRef = new ModalRef();\n\n        const map = new WeakMap();\n        map.set(ModalConfig, config);\n        map.set(ModalRef, modalRef);\n\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n        const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n        return [modalRef, componentRef];\n    }\n}\n","import { CipherType } from '../enums/cipherType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Field } from '../models/domain/field';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\n\nexport abstract class CipherService {\n    decryptedCipherCache: CipherView[];\n\n    clearCache: () => void;\n    encrypt: (model: CipherView, key?: SymmetricCryptoKey, originalCipher?: Cipher) => Promise<Cipher>;\n    encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n    encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n    get: (id: string) => Promise<Cipher>;\n    getAll: () => Promise<Cipher[]>;\n    getAllDecrypted: () => Promise<CipherView[]>;\n    getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n    getAllDecryptedForUrl: (url: string, includeOtherTypes?: CipherType[],\n        defaultMatch?: UriMatchType) => Promise<CipherView[]>;\n    getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n    getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n    getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n    getNextCipherForUrl: (url: string) => Promise<CipherView>;\n    updateLastUsedIndexForUrl: (url: string) => void;\n    updateLastUsedDate: (id: string) => Promise<void>;\n    updateLastLaunchedDate: (id: string) => Promise<void>;\n    saveNeverDomain: (domain: string) => Promise<void>;\n    saveWithServer: (cipher: Cipher) => Promise<any>;\n    shareWithServer: (cipher: CipherView, organizationId: string, collectionIds: string[]) => Promise<any>;\n    shareManyWithServer: (ciphers: CipherView[], organizationId: string, collectionIds: string[]) => Promise<any>;\n    saveAttachmentWithServer: (cipher: Cipher, unencryptedFile: any, admin?: boolean) => Promise<Cipher>;\n    saveAttachmentRawWithServer: (cipher: Cipher, filename: string, data: ArrayBuffer,\n        admin?: boolean) => Promise<Cipher>;\n    saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n    upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n    replace: (ciphers: { [id: string]: CipherData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    deleteManyWithServer: (ids: string[]) => Promise<any>;\n    deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n    deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n    sortCiphersByLastUsed: (a: any, b: any) => number;\n    sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n    getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n    softDelete: (id: string | string[]) => Promise<any>;\n    softDeleteWithServer: (id: string) => Promise<any>;\n    softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n    restore: (cipher: { id: string, revisionDate: string; } | { id: string, revisionDate: string; }[]) => Promise<any>;\n    restoreWithServer: (id: string) => Promise<any>;\n    restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","export abstract class BaseResponse {\n    private response: any;\n\n    constructor(response: any) {\n        this.response = response;\n    }\n\n    protected getResponseProperty(propertyName: string, response: any = null, exactName = false): any {\n        if (propertyName == null || propertyName === '') {\n            throw new Error('propertyName must not be null/empty.');\n        }\n        if (response == null && this.response != null) {\n            response = this.response;\n        }\n        if (response == null) {\n            return null;\n        }\n        if (!exactName && response[propertyName] === undefined) {\n            let otherCasePropertyName: string = null;\n            if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n                otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n            } else {\n                otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n            }\n            if (propertyName.length > 1) {\n                otherCasePropertyName += propertyName.slice(1);\n            }\n\n            propertyName = otherCasePropertyName;\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toLowerCase();\n            }\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toUpperCase();\n            }\n        }\n        return response[propertyName];\n    }\n}\n","import { PolicyData } from '../models/data/policyData';\n\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\nimport { Policy } from '../models/domain/policy';\nimport { ResetPasswordPolicyOptions } from '../models/domain/resetPasswordPolicyOptions';\n\nimport { ListResponse } from '../models/response/listResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\n\nimport { PolicyType } from '../enums/policyType';\n\nexport abstract class PolicyService {\n    policyCache: Policy[];\n\n    clearCache: () => void;\n    getAll: (type?: PolicyType) => Promise<Policy[]>;\n    getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n    replace: (policies: { [id: string]: PolicyData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n    getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n    evaluateMasterPassword: (passwordStrength: number, newPassword: string,\n        enforcedPolicyOptions?: MasterPasswordPolicyOptions) => boolean;\n    getResetPasswordPolicyOptions: (policies: Policy[], orgId: string) => [ResetPasswordPolicyOptions, boolean];\n    mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n    policyAppliesToUser: (policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) => Promise<boolean>;\n}\n","import * as tldjs from 'tldjs';\n\nimport { I18nService } from '../abstractions/i18n.service';\n\n// tslint:disable-next-line\nconst nodeURL = typeof window === 'undefined' ? require('url') : null;\n\nexport class Utils {\n    static inited = false;\n    static isNativeScript = false;\n    static isNode = false;\n    static isBrowser = true;\n    static isMobileBrowser = false;\n    static isAppleMobileBrowser = false;\n    static global: any = null;\n    static tldEndingRegex = /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n    // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n    static regexpEmojiPresentation =  /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n    static init() {\n        if (Utils.inited) {\n            return;\n        }\n\n        Utils.inited = true;\n        Utils.isNode = typeof process !== 'undefined' && (process as any).release != null &&\n            (process as any).release.name === 'node';\n        Utils.isBrowser = typeof window !== 'undefined';\n        Utils.isNativeScript = !Utils.isNode && !Utils.isBrowser;\n        Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n        Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n        Utils.global = Utils.isNativeScript ? global : (Utils.isNode && !Utils.isBrowser ? global : window);\n    }\n\n    static fromB64ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'base64'));\n        } else {\n            const binaryString = window.atob(str);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUrlB64ToArray(str: string): Uint8Array {\n        return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n    }\n\n    static fromHexToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'hex'));\n        } else {\n            const bytes = new Uint8Array(str.length / 2);\n            for (let i = 0; i < str.length; i += 2) {\n                bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUtf8ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'utf8'));\n        } else {\n            const strUtf8 = unescape(encodeURIComponent(str));\n            const arr = new Uint8Array(strUtf8.length);\n            for (let i = 0; i < strUtf8.length; i++) {\n                arr[i] = strUtf8.charCodeAt(i);\n            }\n            return arr;\n        }\n    }\n\n    static fromByteStringToArray(str: string): Uint8Array {\n        const arr = new Uint8Array(str.length);\n        for (let i = 0; i < str.length; i++) {\n            arr[i] = str.charCodeAt(i);\n        }\n        return arr;\n    }\n\n    static fromBufferToB64(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('base64');\n        } else {\n            let binary = '';\n            const bytes = new Uint8Array(buffer);\n            for (let i = 0; i < bytes.byteLength; i++) {\n                binary += String.fromCharCode(bytes[i]);\n            }\n            return window.btoa(binary);\n        }\n    }\n\n    static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n        return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n    }\n\n    static fromB64toUrlB64(b64Str: string) {\n        return b64Str.replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=/g, '');\n    }\n\n    static fromBufferToUtf8(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('utf8');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            const encodedString = String.fromCharCode.apply(null, bytes);\n            return decodeURIComponent(escape(encodedString));\n        }\n    }\n\n    static fromBufferToByteString(buffer: ArrayBuffer): string {\n        return String.fromCharCode.apply(null, new Uint8Array(buffer));\n    }\n\n    // ref: https://stackoverflow.com/a/40031979/1090359\n    static fromBufferToHex(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('hex');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            return Array.prototype.map.call(bytes, (x: number) => ('00' + x.toString(16)).slice(-2)).join('');\n        }\n    }\n\n    static fromUrlB64ToB64(urlB64Str: string): string {\n        let output = urlB64Str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw new Error('Illegal base64url string!');\n        }\n\n        return output;\n    }\n\n    static fromUrlB64ToUtf8(urlB64Str: string): string {\n        return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n    }\n\n    static fromUtf8ToB64(utfStr: string): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(utfStr, 'utf8').toString('base64');\n        } else {\n            return decodeURIComponent(escape(window.btoa(utfStr)));\n        }\n    }\n\n    static fromUtf8ToUrlB64(utfStr: string): string {\n        return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n    }\n\n    static fromB64ToUtf8(b64Str: string): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(b64Str, 'base64').toString('utf8');\n        } else {\n            return decodeURIComponent(escape(window.atob(b64Str)));\n        }\n    }\n\n    // ref: http://stackoverflow.com/a/2117523/1090359\n    static newGuid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n            // tslint:disable-next-line\n            const r = Math.random() * 16 | 0;\n            // tslint:disable-next-line\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    static isGuid(id: string) {\n        return RegExp(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/, 'i').test(id);\n    }\n\n    static getHostname(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null && url.hostname !== '' ? url.hostname : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getHost(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null && url.host !== '' ? url.host : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getDomain(uriString: string): string {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        if (uriString.startsWith('data:')) {\n            return null;\n        }\n\n        let httpUrl = uriString.startsWith('http://') || uriString.startsWith('https://');\n        if (!httpUrl && uriString.indexOf('://') < 0 && Utils.tldEndingRegex.test(uriString) &&\n            uriString.indexOf('@') < 0) {\n            uriString = 'http://' + uriString;\n            httpUrl = true;\n        }\n\n        if (httpUrl) {\n            try {\n                const url = Utils.getUrlObject(uriString);\n                const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n                if (!validHostname) {\n                    return null;\n                }\n\n                if (url.hostname === 'localhost' || Utils.validIpAddress(url.hostname)) {\n                    return url.hostname;\n                }\n\n                const urlDomain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n                return urlDomain != null ? urlDomain : url.hostname;\n            } catch (e) {\n                // Invalid domain, try another approach below.\n            }\n        }\n\n        try {\n            const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n            if (domain != null) {\n                return domain;\n            }\n        } catch {\n            return null;\n        }\n\n        return null;\n    }\n\n    static getQueryParams(uriString: string): Map<string, string> {\n        const url = Utils.getUrl(uriString);\n        if (url == null || url.search == null || url.search === '') {\n            return null;\n        }\n        const map = new Map<string, string>();\n        const pairs = (url.search[0] === '?' ? url.search.substr(1) : url.search).split('&');\n        pairs.forEach(pair => {\n            const parts = pair.split('=');\n            if (parts.length < 1) {\n                return;\n            }\n            map.set(decodeURIComponent(parts[0]).toLowerCase(), parts[1] == null ? '' : decodeURIComponent(parts[1]));\n        });\n        return map;\n    }\n\n    static getSortFunction(i18nService: I18nService, prop: string) {\n        return (a: any, b: any) => {\n            if (a[prop] == null && b[prop] != null) {\n                return -1;\n            }\n            if (a[prop] != null && b[prop] == null) {\n                return 1;\n            }\n            if (a[prop] == null && b[prop] == null) {\n                return 0;\n            }\n\n            return i18nService.collator ? i18nService.collator.compare(a[prop], b[prop]) :\n                a[prop].localeCompare(b[prop]);\n        };\n    }\n\n    static isNullOrWhitespace(str: string): boolean {\n        return str == null || typeof str !== 'string' || str.trim() === '';\n    }\n\n    static nameOf<T>(name: string & keyof T) {\n        return name;\n    }\n\n    static assign<T>(target: T, source: Partial<T>): T {\n        return Object.assign(target, source);\n    }\n\n    static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n        return (Object.keys(obj).filter(k => Number.isNaN(+k)) as K[]).map(k => obj[k]);\n    }\n\n\n    static getUrl(uriString: string): URL {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        let url = Utils.getUrlObject(uriString);\n        if (url == null) {\n            const hasHttpProtocol = uriString.indexOf('http://') === 0 || uriString.indexOf('https://') === 0;\n            if (!hasHttpProtocol && uriString.indexOf('.') > -1) {\n                url = Utils.getUrlObject('http://' + uriString);\n            }\n        }\n        return url;\n    }\n\n    static camelToPascalCase(s: string) {\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n\n    private static validIpAddress(ipString: string): boolean {\n        // tslint:disable-next-line\n        const ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n        return ipRegex.test(ipString);\n    }\n\n    private static isMobile(win: Window) {\n        let mobile = false;\n        (a => {\n            // tslint:disable-next-line\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n                mobile = true;\n            }\n        })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n        return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static isAppleMobile(win: Window) {\n        return win.navigator.userAgent.match(/iPhone/i) != null || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static getUrlObject(uriString: string): URL {\n        try {\n            if (nodeURL != null) {\n                return nodeURL.URL ? new nodeURL.URL(uriString) : nodeURL.parse(uriString);\n            } else if (typeof URL === 'function') {\n                return new URL(uriString);\n            } else if (window != null) {\n                const hasProtocol = uriString.indexOf('://') > -1;\n                if (!hasProtocol && uriString.indexOf('.') > -1) {\n                    uriString = 'http://' + uriString;\n                } else if (!hasProtocol) {\n                    return null;\n                }\n                const anchor = window.document.createElement('a');\n                anchor.href = uriString;\n                return anchor as any;\n            }\n        } catch (e) {\n            // Ignore error\n        }\n\n        return null;\n    }\n}\n\nUtils.init();\n","import * as papa from 'papaparse';\n\nimport { LogService } from '../abstractions/log.service';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { LoginUriView } from '../models/view/loginUriView';\n\nimport { Utils } from '../misc/utils';\n\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherRepromptType } from '../enums/cipherRepromptType';\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { ConsoleLogService } from '../services/consoleLog.service';\n\nexport abstract class BaseImporter {\n    organizationId: string = null;\n\n    protected logService: LogService = new ConsoleLogService(false);\n\n    protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n    protected passwordFieldNames = [\n        'password', 'pass word', 'passphrase', 'pass phrase',\n        'pass', 'code', 'code word', 'codeword',\n        'secret', 'secret word', 'personpwd',\n        'key', 'keyword', 'key word', 'keyphrase', 'key phrase',\n        'form_pw', 'wppassword', 'pin', 'pwd', 'pw', 'pword', 'passwd',\n        'p', 'serial', 'serial#', 'license key', 'reg #',\n\n        // Non-English names\n        'passwort',\n    ];\n\n    protected usernameFieldNames = [\n        'user', 'name', 'user name', 'username', 'login name',\n        'email', 'e-mail', 'id', 'userid', 'user id',\n        'login', 'form_loginname', 'wpname', 'mail',\n        'loginid', 'login id', 'log', 'personlogin',\n        'first name', 'last name', 'card#', 'account #',\n        'member', 'member #',\n\n        // Non-English names\n        'nom', 'benutzername',\n    ];\n\n    protected notesFieldNames = [\n        'note', 'notes', 'comment', 'comments', 'memo',\n        'description', 'free form', 'freeform',\n        'free text', 'freetext', 'free',\n\n        // Non-English names\n        'kommentar',\n    ];\n\n    protected uriFieldNames: string[] = [\n        'url', 'hyper link', 'hyperlink', 'link',\n        'host', 'hostname', 'host name', 'server', 'address',\n        'hyper ref', 'href', 'web', 'website', 'web site', 'site',\n        'web-site', 'uri',\n\n        // Non-English names\n        'ort', 'adresse',\n    ];\n\n    protected parseCsvOptions = {\n        encoding: 'UTF-8',\n        skipEmptyLines: false,\n    };\n\n    protected get organization() {\n        return this.organizationId != null;\n    }\n\n    protected parseXml(data: string): Document {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(data, 'application/xml');\n        return doc != null && doc.querySelector('parsererror') == null ? doc : null;\n    }\n\n    protected parseCsv(data: string, header: boolean, options: any = {}): any[] {\n        const parseOptions = Object.assign({ header: header }, this.parseCsvOptions, options);\n        data = this.splitNewLine(data).join('\\n').trim();\n        const result = papa.parse(data, parseOptions);\n        if (result.errors != null && result.errors.length > 0) {\n            result.errors.forEach(e => {\n                if (e.row != null) {\n                    // tslint:disable-next-line\n                    this.logService.warning('Error parsing row ' + e.row + ': ' + e.message);\n                }\n            });\n        }\n        return result.data && result.data.length > 0 ? result.data : null;\n    }\n\n    protected parseSingleRowCsv(rowData: string) {\n        if (this.isNullOrWhitespace(rowData)) {\n            return null;\n        }\n        const parsedRow = this.parseCsv(rowData, false);\n        if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n            return parsedRow[0];\n        }\n        return null;\n    }\n\n    protected makeUriArray(uri: string | string[]): LoginUriView[] {\n        if (uri == null) {\n            return null;\n        }\n\n        if (typeof uri === 'string') {\n            const loginUri = new LoginUriView();\n            loginUri.uri = this.fixUri(uri);\n            if (this.isNullOrWhitespace(loginUri.uri)) {\n                return null;\n            }\n            loginUri.match = null;\n            return [loginUri];\n        }\n\n        if (uri.length > 0) {\n            const returnArr: LoginUriView[] = [];\n            uri.forEach(u => {\n                const loginUri = new LoginUriView();\n                loginUri.uri = this.fixUri(u);\n                if (this.isNullOrWhitespace(loginUri.uri)) {\n                    return;\n                }\n                loginUri.match = null;\n                returnArr.push(loginUri);\n            });\n            return returnArr.length === 0 ? null : returnArr;\n        }\n\n        return null;\n    }\n\n    protected fixUri(uri: string) {\n        if (uri == null) {\n            return null;\n        }\n        uri = uri.trim();\n        if (uri.indexOf('://') === -1 && uri.indexOf('.') >= 0) {\n            uri = 'http://' + uri;\n        }\n        if (uri.length > 1000) {\n            return uri.substring(0, 1000);\n        }\n        return uri;\n    }\n\n    protected nameFromUrl(url: string) {\n        const hostname = Utils.getHostname(url);\n        if (this.isNullOrWhitespace(hostname)) {\n            return null;\n        }\n        return hostname.startsWith('www.') ? hostname.replace('www.', '') : hostname;\n    }\n\n    protected isNullOrWhitespace(str: string): boolean {\n        return Utils.isNullOrWhitespace(str);\n    }\n\n    protected getValueOrDefault(str: string, defaultValue: string = null): string {\n        if (this.isNullOrWhitespace(str)) {\n            return defaultValue;\n        }\n        return str;\n    }\n\n    protected splitNewLine(str: string): string[] {\n        return str.split(this.newLineRegex);\n    }\n\n    // ref https://stackoverflow.com/a/5911300\n    protected getCardBrand(cardNum: string) {\n        if (this.isNullOrWhitespace(cardNum)) {\n            return null;\n        }\n\n        // Visa\n        let re = new RegExp('^4');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        // Mastercard\n        // Updated for Mastercard 2017 BINs expansion\n        if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/\n            .test(cardNum)) {\n            return 'Mastercard';\n        }\n\n        // AMEX\n        re = new RegExp('^3[47]');\n        if (cardNum.match(re) != null) {\n            return 'Amex';\n        }\n\n        // Discover\n        re = new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)');\n        if (cardNum.match(re) != null) {\n            return 'Discover';\n        }\n\n        // Diners\n        re = new RegExp('^36');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // Diners - Carte Blanche\n        re = new RegExp('^30[0-5]');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // JCB\n        re = new RegExp('^35(2[89]|[3-8][0-9])');\n        if (cardNum.match(re) != null) {\n            return 'JCB';\n        }\n\n        // Visa Electron\n        re = new RegExp('^(4026|417500|4508|4844|491(3|7))');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        return null;\n    }\n\n    protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\n        if (!this.isNullOrWhitespace(expiration)) {\n            expiration = expiration.replace(/\\s/g, '');\n            const parts = expiration.split('/');\n            if (parts.length === 2) {\n                let month: string = null;\n                let year: string = null;\n                if (parts[0].length === 1 || parts[0].length === 2) {\n                    month = parts[0];\n                    if (month.length === 2 && month[0] === '0') {\n                        month = month.substr(1, 1);\n                    }\n                }\n                if (parts[1].length === 2 || parts[1].length === 4) {\n                    year = month.length === 2 ? '20' + parts[1] : parts[1];\n                }\n                if (month != null && year != null) {\n                    cipher.card.expMonth = month;\n                    cipher.card.expYear = year;\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    protected moveFoldersToCollections(result: ImportResult) {\n        result.folderRelationships.forEach(r => result.collectionRelationships.push(r));\n        result.collections = result.folders.map(f => {\n            const collection = new CollectionView();\n            collection.name = f.name;\n            return collection;\n        });\n        result.folderRelationships = [];\n        result.folders = [];\n    }\n\n    protected querySelectorDirectChild(parentEl: Element, query: string) {\n        const els = this.querySelectorAllDirectChild(parentEl, query);\n        return els.length === 0 ? null : els[0];\n    }\n\n    protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n        return Array.from(parentEl.querySelectorAll(query)).filter(el => el.parentNode === parentEl);\n    }\n\n    protected initLoginCipher() {\n        const cipher = new CipherView();\n        cipher.favorite = false;\n        cipher.notes = '';\n        cipher.fields = [];\n        cipher.login = new LoginView();\n        cipher.type = CipherType.Login;\n        return cipher;\n    }\n\n    protected cleanupCipher(cipher: CipherView) {\n        if (cipher == null) {\n            return;\n        }\n        if (cipher.type !== CipherType.Login) {\n            cipher.login = null;\n        }\n        if (this.isNullOrWhitespace(cipher.name)) {\n            cipher.name = '--';\n        }\n        if (this.isNullOrWhitespace(cipher.notes)) {\n            cipher.notes = null;\n        } else {\n            cipher.notes = cipher.notes.trim();\n        }\n        if (cipher.fields != null && cipher.fields.length === 0) {\n            cipher.fields = null;\n        }\n    }\n\n    protected processKvp(cipher: CipherView, key: string, value: string, type: FieldType = FieldType.Text) {\n        if (this.isNullOrWhitespace(value)) {\n            return;\n        }\n        if (this.isNullOrWhitespace(key)) {\n            key = '';\n        }\n        if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n            if (cipher.notes == null) {\n                cipher.notes = '';\n            }\n            cipher.notes += (key + ': ' + this.splitNewLine(value).join('\\n') + '\\n');\n        } else {\n            if (cipher.fields == null) {\n                cipher.fields = [];\n            }\n            const field = new FieldView();\n            field.type = type;\n            field.name = key;\n            field.value = value;\n            cipher.fields.push(field);\n        }\n    }\n\n    protected processFolder(result: ImportResult, folderName: string) {\n        let folderIndex = result.folders.length;\n        const hasFolder = !this.isNullOrWhitespace(folderName);\n        let addFolder = hasFolder;\n\n        if (hasFolder) {\n            for (let i = 0; i < result.folders.length; i++) {\n                if (result.folders[i].name === folderName) {\n                    addFolder = false;\n                    folderIndex = i;\n                    break;\n                }\n            }\n        }\n\n        if (addFolder) {\n            const f = new FolderView();\n            f.name = folderName;\n            result.folders.push(f);\n        }\n        if (hasFolder) {\n            result.folderRelationships.push([result.ciphers.length, folderIndex]);\n        }\n    }\n\n    protected convertToNoteIfNeeded(cipher: CipherView) {\n        if (cipher.type === CipherType.Login && this.isNullOrWhitespace(cipher.login.username) &&\n            this.isNullOrWhitespace(cipher.login.password) &&\n            (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        }\n    }\n}\n","import { CipherView } from '../view/cipherView';\nimport { CollectionView } from '../view/collectionView';\nimport { FolderView } from '../view/folderView';\n\nexport class ImportResult {\n    success = false;\n    errorMessage: string;\n    ciphers: CipherView[] = [];\n    folders: FolderView[] = [];\n    folderRelationships: [number, number][] = [];\n    collections: CollectionView[] = [];\n    collectionRelationships: [number, number][] = [];\n}\n","import * as zxcvbn from 'zxcvbn';\n\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\n\nexport abstract class PasswordGenerationService {\n    generatePassword: (options: any) => Promise<string>;\n    generatePassphrase: (options: any) => Promise<string>;\n    getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n    enforcePasswordGeneratorPoliciesOnOptions: (options: any) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n    getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n    saveOptions: (options: any) => Promise<any>;\n    getHistory: () => Promise<GeneratedPasswordHistory[]>;\n    addHistory: (password: string) => Promise<any>;\n    clear: () => Promise<any>;\n    passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n    normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class StateService {\n    get: <T>(key: string) => Promise<T>;\n    save: (key: string, obj: any) => Promise<any>;\n    remove: (key: string) => Promise<any>;\n    purge: () => Promise<any>;\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopClick]',\n})\nexport class StopClickDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.preventDefault();\n    }\n}\n","import {\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\n\nexport abstract class SyncService {\n    syncInProgress: boolean;\n\n    getLastSync: () => Promise<Date>;\n    setLastSync: (date: Date) => Promise<any>;\n    fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n    syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n    syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n    syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","export abstract class StorageService {\n    get: <T>(key: string, options?: StorageServiceOptions) => Promise<T>;\n    has: (key: string, options?: StorageServiceOptions) => Promise<boolean>;\n    save: (key: string, obj: any, options?: StorageServiceOptions) => Promise<any>;\n    remove: (key: string, options?: StorageServiceOptions) => Promise<any>;\n}\n\nexport interface StorageServiceOptions {\n    keySuffix: KeySuffixOptions;\n}\n\nexport type KeySuffixOptions = 'auto' | 'biometric';\n","export enum CipherType {\n    Login = 1,\n    SecureNote = 2,\n    Card = 3,\n    Identity = 4,\n}\n","export abstract class PasswordRepromptService {\n    protectedFields: () => string[];\n    showPasswordPrompt: () => Promise<boolean>;\n    enabled: () => Promise<boolean>;\n}\n","import { Observable } from 'rxjs';\n\nexport type Urls = {\n    base?: string;\n    webVault?: string;\n    api?: string;\n    identity?: string;\n    icons?: string;\n    notifications?: string;\n    events?: string;\n    keyConnector?: string;\n};\n\nexport type PayPalConfig = {\n    businessId?: string;\n    buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n    urls: Observable<Urls>;\n\n    hasBaseUrl: () => boolean;\n    getNotificationsUrl: () => string;\n    getWebVaultUrl: () => string;\n    getSendUrl: () => string;\n    getIconsUrl: () => string;\n    getApiUrl: () => string;\n    getIdentityUrl: () => string;\n    getEventsUrl: () => string;\n    getKeyConnectorUrl: () => string;\n    setUrlsFromStorage: () => Promise<void>;\n    setUrls: (urls: any, saveSettings?: boolean) => Promise<Urls>;\n    getUrls: () => Urls;\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport abstract class CollectionService {\n    decryptedCollectionCache: CollectionView[];\n\n    clearCache: () => void;\n    encrypt: (model: CollectionView) => Promise<Collection>;\n    decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n    get: (id: string) => Promise<Collection>;\n    getAll: () => Promise<Collection[]>;\n    getAllDecrypted: () => Promise<CollectionView[]>;\n    getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n    getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n    upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n    replace: (collections: { [id: string]: CollectionData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n}\n","import { SecretVerificationRequest } from '../models/request/secretVerificationRequest';\n\nimport { Verification } from '../types/verification';\n\nexport abstract class UserVerificationService {\n    buildRequest: <T extends SecretVerificationRequest> (verification: Verification,\n        requestClass?: new () => T, alreadyHashed?: boolean) => Promise<T>;\n    verifyUser: (verification: Verification) => Promise<boolean>;\n    requestOTP: () => Promise<void>;\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopProp]',\n})\nexport class StopPropDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appInputVerbatim]',\n})\nexport class InputVerbatimDirective {\n    @Input() set appInputVerbatim(condition: boolean | string) {\n        this.disableComplete = condition === '' || condition === true;\n    }\n\n    private disableComplete: boolean;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (this.disableComplete && !this.el.nativeElement.hasAttribute('autocomplete')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocomplete', 'off');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocapitalize')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocapitalize', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocorrect')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocorrect', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('spellcheck')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'spellcheck', 'false');\n        }\n        if (!this.el.nativeElement.hasAttribute('inputmode')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'inputmode', 'verbatim');\n        }\n    }\n}\n","import { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class AuthService {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    ssoRedirectUrl: string;\n    clientId: string;\n    clientSecret: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType;\n\n    logIn: (email: string, masterPassword: string, captchaToken?: string) => Promise<AuthResult>;\n    logInSso: (code: string, codeVerifier: string, redirectUrl: string, orgId: string) => Promise<AuthResult>;\n    logInApiKey: (clientId: string, clientSecret: string) => Promise<AuthResult>;\n    logInTwoFactor: (twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean) => Promise<AuthResult>;\n    logInComplete: (email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean, captchaToken?: string) => Promise<AuthResult>;\n    logInSsoComplete: (code: string, codeVerifier: string, redirectUrl: string,\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logInApiKeyComplete: (clientId: string, clientSecret: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logOut: (callback: Function) => void;\n    getSupportedTwoFactorProviders: (win: Window) => any[];\n    getDefaultTwoFactorProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n    makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n    authingWithApiKey: () => boolean;\n    authingWithSso: () => boolean;\n    authingWithPassword: () => boolean;\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport abstract class FolderService {\n    decryptedFolderCache: FolderView[];\n\n    clearCache: () => void;\n    encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n    get: (id: string) => Promise<Folder>;\n    getAll: () => Promise<Folder[]>;\n    getAllDecrypted: () => Promise<FolderView[]>;\n    getAllNested: () => Promise<TreeNode<FolderView>[]>;\n    getNested: (id: string) => Promise<TreeNode<FolderView>>;\n    saveWithServer: (folder: Folder) => Promise<any>;\n    upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n    replace: (folders: { [id: string]: FolderData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n}\n","export enum PolicyType {\n    TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n    MasterPassword = 1, // Sets minimum requirements for master password complexity\n    PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n    SingleOrg = 3, // Allows users to only be apart of one organization\n    RequireSso = 4, // Requires users to authenticate with SSO\n    PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n    DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n    SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n    ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n    MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n    DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","import { CipherView } from '../models/view/cipherView';\nimport { SendView } from '../models/view/sendView';\n\nexport abstract class SearchService {\n    indexedEntityId?: string = null;\n    clearIndex: () => void;\n    isSearchable: (query: string) => boolean;\n    indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n    searchCiphers: (query: string,\n        filter?: ((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[]),\n        ciphers?: CipherView[]) => Promise<CipherView[]>;\n    searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n    searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { EventType } from '../enums/eventType';\n\nexport abstract class EventService {\n    collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n    uploadEvents: () => Promise<any>;\n    clearEvents: () => Promise<any>;\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\ninterface User {\n    name?: string;\n    email: string;\n}\n\n@Pipe({\n    name: 'userName',\n})\nexport class UserNamePipe implements PipeTransform {\n    transform(user?: User): string {\n        if (user == null) {\n            return null;\n        }\n\n        return user.name == null || user.name.trim() === '' ? user.email : user.name;\n    }\n}\n","export class ConstantsService {\n    static readonly environmentUrlsKey: string = 'environmentUrls';\n    static readonly disableGaKey: string = 'disableGa';\n    static readonly disableAddLoginNotificationKey: string = 'disableAddLoginNotification';\n    static readonly disableChangedPasswordNotificationKey: string = 'disableChangedPasswordNotification';\n    static readonly disableContextMenuItemKey: string = 'disableContextMenuItem';\n    static readonly disableFaviconKey: string = 'disableFavicon';\n    static readonly disableBadgeCounterKey: string = 'disableBadgeCounter';\n    static readonly disableAutoTotpCopyKey: string = 'disableAutoTotpCopy';\n    static readonly disableAutoBiometricsPromptKey: string = 'noAutoPromptBiometrics';\n    static readonly enableAutoFillOnPageLoadKey: string = 'enableAutoFillOnPageLoad';\n    static readonly autoFillOnPageLoadDefaultKey: string = 'autoFillOnPageLoadDefault';\n    static readonly vaultTimeoutKey: string = 'lockOption';\n    static readonly vaultTimeoutActionKey: string = 'vaultTimeoutAction';\n    static readonly lastActiveKey: string = 'lastActive';\n    static readonly neverDomainsKey: string = 'neverDomains';\n    static readonly installedVersionKey: string = 'installedVersion';\n    static readonly localeKey: string = 'locale';\n    static readonly themeKey: string = 'theme';\n    static readonly collapsedGroupingsKey: string = 'collapsedGroupings';\n    static readonly autoConfirmFingerprints: string = 'autoConfirmFingerprints';\n    static readonly dontShowCardsCurrentTab: string = 'dontShowCardsCurrentTab';\n    static readonly dontShowIdentitiesCurrentTab: string = 'dontShowIdentitiesCurrentTab';\n    static readonly defaultUriMatch: string = 'defaultUriMatch';\n    static readonly pinProtectedKey: string = 'pinProtectedKey';\n    static readonly protectedPin: string = 'protectedPin';\n    static readonly clearClipboardKey: string = 'clearClipboardKey';\n    static readonly eventCollectionKey: string = 'eventCollection';\n    static readonly ssoCodeVerifierKey: string = 'ssoCodeVerifier';\n    static readonly ssoStateKey: string = 'ssoState';\n    static readonly biometricUnlockKey: string = 'biometric';\n    static readonly biometricText: string = 'biometricText';\n    static readonly biometricAwaitingAcceptance: string = 'biometricAwaitingAcceptance';\n    static readonly biometricFingerprintValidated: string = 'biometricFingerprintValidated';\n\n    readonly environmentUrlsKey: string = ConstantsService.environmentUrlsKey;\n    readonly disableGaKey: string = ConstantsService.disableGaKey;\n    readonly disableAddLoginNotificationKey: string = ConstantsService.disableAddLoginNotificationKey;\n    readonly disableContextMenuItemKey: string = ConstantsService.disableContextMenuItemKey;\n    readonly disableFaviconKey: string = ConstantsService.disableFaviconKey;\n    readonly disableBadgeCounterKey: string = ConstantsService.disableBadgeCounterKey;\n    readonly disableAutoTotpCopyKey: string = ConstantsService.disableAutoTotpCopyKey;\n    readonly disableAutoBiometricsPromptKey: string = ConstantsService.disableAutoBiometricsPromptKey;\n    readonly enableAutoFillOnPageLoadKey: string = ConstantsService.enableAutoFillOnPageLoadKey;\n    readonly autoFillOnPageLoadDefaultKey: string = ConstantsService.autoFillOnPageLoadDefaultKey;\n    readonly vaultTimeoutKey: string = ConstantsService.vaultTimeoutKey;\n    readonly vaultTimeoutActionKey: string = ConstantsService.vaultTimeoutActionKey;\n    readonly lastActiveKey: string = ConstantsService.lastActiveKey;\n    readonly neverDomainsKey: string = ConstantsService.neverDomainsKey;\n    readonly installedVersionKey: string = ConstantsService.installedVersionKey;\n    readonly localeKey: string = ConstantsService.localeKey;\n    readonly themeKey: string = ConstantsService.themeKey;\n    readonly collapsedGroupingsKey: string = ConstantsService.collapsedGroupingsKey;\n    readonly autoConfirmFingerprints: string = ConstantsService.autoConfirmFingerprints;\n    readonly dontShowCardsCurrentTab: string = ConstantsService.dontShowCardsCurrentTab;\n    readonly dontShowIdentitiesCurrentTab: string = ConstantsService.dontShowIdentitiesCurrentTab;\n    readonly defaultUriMatch: string = ConstantsService.defaultUriMatch;\n    readonly pinProtectedKey: string = ConstantsService.pinProtectedKey;\n    readonly protectedPin: string = ConstantsService.protectedPin;\n    readonly clearClipboardKey: string = ConstantsService.clearClipboardKey;\n    readonly eventCollectionKey: string = ConstantsService.eventCollectionKey;\n    readonly ssoCodeVerifierKey: string = ConstantsService.ssoCodeVerifierKey;\n    readonly ssoStateKey: string = ConstantsService.ssoStateKey;\n    readonly biometricUnlockKey: string = ConstantsService.biometricUnlockKey;\n    readonly biometricText: string = ConstantsService.biometricText;\n    readonly biometricAwaitingAcceptance: string = ConstantsService.biometricAwaitingAcceptance;\n    readonly biometricFingerprintValidated: string = ConstantsService.biometricFingerprintValidated;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    NgZone,\n} from '@angular/core';\n\nimport { take } from 'rxjs/operators';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive({\n    selector: '[appAutofocus]',\n})\nexport class AutofocusDirective {\n    @Input() set appAutofocus(condition: boolean | string) {\n        this.autofocus = condition === '' || condition === true;\n    }\n\n    private autofocus: boolean;\n\n    constructor(private el: ElementRef, private ngZone: NgZone) { }\n\n    ngOnInit() {\n        if (!Utils.isMobileBrowser && this.autofocus) {\n            if (this.ngZone.isStable) {\n                this.el.nativeElement.focus();\n            } else {\n                this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n            }\n        }\n    }\n}\n","<img [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" [ngClass]=\"{'rounded-circle': circle}\">","import { Organization } from '../models/domain/organization';\n\nexport abstract class KeyConnectorService {\n    getAndSetKey: (url?: string) => Promise<void>;\n    getManagingOrganization: () => Promise<Organization>;\n    getUsesKeyConnector: () => Promise<boolean>;\n    migrateUser: () => Promise<void>;\n    userNeedsMigration: () => Promise<boolean>;\n    setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n    setConvertAccountRequired: (status: boolean) => Promise<void>;\n    getConvertAccountRequired: () => Promise<boolean>;\n    removeConvertAccountRequired: () => Promise<void>;\n    clear: () => Promise<void>;\n}\n","import { EncString } from './encString';\n\nimport { View } from '../view/view';\n\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport default class Domain {\n    protected buildDomainModel<D extends Domain>(domain: D, dataObj: any, map: any,\n        alreadyEncrypted: boolean, notEncList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = dataObj[(map[prop] || prop)];\n            if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n                (domain as any)[prop] = objProp ? objProp : null;\n            } else {\n                (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n            }\n        }\n    }\n    protected buildDataModel<D extends Domain>(domain: D, dataObj: any, map: any, notEncStringList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = (domain as any)[(map[prop] || prop)];\n            if (notEncStringList.indexOf(prop) > -1) {\n                (dataObj as any)[prop] = objProp != null ? objProp : null;\n            } else {\n                (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n            }\n        }\n    }\n\n    protected async decryptObj<T extends View>(viewModel: T, map: any, orgId: string,\n        key: SymmetricCryptoKey = null): Promise<T> {\n        const promises = [];\n        const self: any = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp) {\n                const p = Promise.resolve().then(() => {\n                    const mapProp = map[theProp] || theProp;\n                    if (self[mapProp]) {\n                        return self[mapProp].decrypt(orgId, key);\n                    }\n                    return null;\n                }).then((val: any) => {\n                    (viewModel as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop);\n        }\n\n        await Promise.all(promises);\n        return viewModel;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\n@Injectable()\nexport class ValidationService {\n    constructor(private i18nService: I18nService, private platformUtilsService: PlatformUtilsService) { }\n\n    showError(data: any): string[] {\n        const defaultErrorMessage = this.i18nService.t('unexpectedError');\n        let errors: string[] = [];\n\n        if (data != null && typeof data === 'string') {\n            errors.push(data);\n        } else if (data == null || typeof data !== 'object') {\n            errors.push(defaultErrorMessage);\n        } else if (data.validationErrors != null) {\n            errors = errors.concat((data as ErrorResponse).getAllMessages());\n        } else {\n            errors.push(data.message ? data.message : defaultErrorMessage);\n        }\n\n        if (errors.length === 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors[0]);\n        } else if (errors.length > 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors, {\n                timeout: 5000 * errors.length,\n            });\n        }\n\n        return errors;\n    }\n}\n","import { ItemView } from './itemView';\n\nimport { Card } from '../domain/card';\n\nimport { CardLinkedId as LinkedId } from '../../enums/linkedIdType';\n\nimport { linkedFieldOption } from '../../misc/linkedFieldOption.decorator';\n\nexport class CardView extends ItemView {\n    @linkedFieldOption(LinkedId.CardholderName)\n    cardholderName: string = null;\n    @linkedFieldOption(LinkedId.ExpMonth, 'expirationMonth')\n    expMonth: string = null;\n    @linkedFieldOption(LinkedId.ExpYear, 'expirationYear')\n    expYear: string = null;\n    @linkedFieldOption(LinkedId.Code, 'securityCode')\n    code: string = null;\n\n    // tslint:disable\n    private _brand: string = null;\n    private _number: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(c?: Card) {\n        super();\n    }\n\n    get maskedCode(): string {\n        return this.code != null ? '•'.repeat(this.code.length) : null;\n    }\n\n    get maskedNumber(): string {\n        return this.number != null ? '•'.repeat(this.number.length) : null;\n    }\n\n    @linkedFieldOption(LinkedId.Brand)\n    get brand(): string {\n        return this._brand;\n    }\n    set brand(value: string) {\n        this._brand = value;\n        this._subTitle = null;\n    }\n\n    @linkedFieldOption(LinkedId.Number)\n    get number(): string {\n        return this._number;\n    }\n    set number(value: string) {\n        this._number = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null) {\n            this._subTitle = this.brand;\n            if (this.number != null && this.number.length >= 4) {\n                if (this._subTitle != null && this._subTitle !== '') {\n                    this._subTitle += ', ';\n                } else {\n                    this._subTitle = '';\n                }\n\n                // Show last 5 on amex, last 4 for all others\n                const count = this.number.length >= 5 && this.number.match(new RegExp('^3[47]')) != null ? 5 : 4;\n                this._subTitle += ('*' + this.number.substr(this.number.length - count));\n            }\n        }\n        return this._subTitle;\n    }\n\n    get expiration(): string {\n        if (!this.expMonth && !this.expYear) {\n            return null;\n        }\n\n        let exp = this.expMonth != null ? ('0' + this.expMonth).slice(-2) : '__';\n        exp += (' / ' + (this.expYear != null ? this.formatYear(this.expYear) : '____'));\n        return exp;\n    }\n\n    private formatYear(year: string): string {\n        return year.length === 2 ? '20' + year : year;\n    }\n}\n","import { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class CryptoFunctionService {\n    pbkdf2: (password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number) => Promise<ArrayBuffer>;\n    hkdf: (ikm: ArrayBuffer, salt: string | ArrayBuffer, info: string | ArrayBuffer,\n        outputByteSize: number, algorithm: 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    hkdfExpand: (prk: ArrayBuffer, info: string | ArrayBuffer, outputByteSize: number,\n        algorithm: 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    hash: (value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5') => Promise<ArrayBuffer>;\n    hmac: (value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n    hmacFast: (value: ArrayBuffer | string, key: ArrayBuffer | string, algorithm: 'sha1' | 'sha256' | 'sha512') =>\n        Promise<ArrayBuffer | string>;\n    compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n    aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    aesDecryptFastParameters: (data: string, iv: string, mac: string, key: SymmetricCryptoKey) =>\n        DecryptParameters<ArrayBuffer | string>;\n    aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n    aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaDecrypt: (data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n    randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { EncString } from '../models/domain/encString';\n\nexport abstract class VaultTimeoutService {\n    biometricLocked: boolean;\n    everBeenUnlocked: boolean;\n    pinProtectedKey: EncString;\n    isLocked: () => Promise<boolean>;\n    checkVaultTimeout: () => Promise<void>;\n    lock: (allowSoftLock?: boolean) => Promise<void>;\n    logOut: () => Promise<void>;\n    setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n    getVaultTimeout: () => Promise<number>;\n    isPinLockSet: () => Promise<[boolean, boolean]>;\n    isBiometricLockSet: () => Promise<boolean>;\n    clear: () => Promise<any>;\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncString {\n    encryptedString?: string;\n    encryptionType?: EncryptionType;\n    decryptedValue?: string;\n    data?: string;\n    iv?: string;\n    mac?: string;\n\n    constructor(encryptedStringOrType: string | EncryptionType, data?: string, iv?: string, mac?: string) {\n        if (data != null) {\n            // data and header\n            const encType = encryptedStringOrType as EncryptionType;\n\n            if (iv != null) {\n                this.encryptedString = encType + '.' + iv + '|' + data;\n            } else {\n                this.encryptedString = encType + '.' + data;\n            }\n\n            // mac\n            if (mac != null) {\n                this.encryptedString += ('|' + mac);\n            }\n\n            this.encryptionType = encType;\n            this.data = data;\n            this.iv = iv;\n            this.mac = mac;\n\n            return;\n        }\n\n        this.encryptedString = encryptedStringOrType as string;\n        if (!this.encryptedString) {\n            return;\n        }\n\n        const headerPieces = this.encryptedString.split('.');\n        let encPieces: string[] = null;\n\n        if (headerPieces.length === 2) {\n            try {\n                this.encryptionType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) {\n                return;\n            }\n        } else {\n            encPieces = this.encryptedString.split('|');\n            this.encryptionType = encPieces.length === 3 ? EncryptionType.AesCbc128_HmacSha256_B64 :\n                EncryptionType.AesCbc256_B64;\n        }\n\n        switch (this.encryptionType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encPieces.length !== 3) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                this.mac = encPieces[2];\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encPieces.length !== 2) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                break;\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n                if (encPieces.length !== 1) {\n                    return;\n                }\n\n                this.data = encPieces[0];\n                break;\n            default:\n                return;\n        }\n    }\n\n    async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n        if (this.decryptedValue != null) {\n            return this.decryptedValue;\n        }\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            if (key == null) {\n                key = await cryptoService.getOrgKey(orgId);\n            }\n            this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n        } catch (e) {\n            this.decryptedValue = '[error: cannot decrypt]';\n        }\n        return this.decryptedValue;\n    }\n}\n","import { BreachAccountResponse } from '../models/response/breachAccountResponse';\n\nexport abstract class AuditService {\n    passwordLeaked: (password: string) => Promise<number>;\n    breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","export class SecretVerificationRequest {\n    masterPasswordHash: string;\n    otp: string;\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { ItemView } from './itemView';\n\nimport { SecureNote } from '../domain/secureNote';\n\nexport class SecureNoteView extends ItemView {\n    type: SecureNoteType = null;\n\n    constructor(n?: SecureNote) {\n        super();\n        if (!n) {\n            return;\n        }\n\n        this.type = n.type;\n    }\n\n    get subTitle(): string {\n        return null;\n    }\n}\n","export enum SecureNoteType {\n    Generic = 0,\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nconst IconMap: any = {\n    'fa-globe': String.fromCharCode(0xf0ac),\n    'fa-sticky-note-o': String.fromCharCode(0xf24a),\n    'fa-id-card-o': String.fromCharCode(0xf2c3),\n    'fa-credit-card': String.fromCharCode(0xf09d),\n    'fa-android': String.fromCharCode(0xf17b),\n    'fa-apple': String.fromCharCode(0xf179),\n};\n\n@Component({\n    selector: 'app-vault-icon',\n    templateUrl: 'icon.component.html',\n})\nexport class IconComponent implements OnChanges {\n    @Input() cipher: CipherView;\n    icon: string;\n    image: string;\n    fallbackImage: string;\n    imageEnabled: boolean;\n\n    private iconsUrl: string;\n\n    constructor(environmentService: EnvironmentService, protected stateService: StateService) {\n        this.iconsUrl = environmentService.getIconsUrl();\n    }\n\n    async ngOnChanges() {\n        // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n        // to avoid this we reset all state variables.\n        this.image = null;\n        this.fallbackImage = null;\n        this.imageEnabled = !(await this.stateService.get<boolean>(ConstantsService.disableFaviconKey));\n        this.load();\n    }\n\n    get iconCode(): string {\n        return IconMap[this.icon];\n    }\n\n    protected load() {\n        switch (this.cipher.type) {\n            case CipherType.Login:\n                this.icon = 'fa-globe';\n                this.setLoginIcon();\n                break;\n            case CipherType.SecureNote:\n                this.icon = 'fa-sticky-note-o';\n                break;\n            case CipherType.Card:\n                this.icon = 'fa-credit-card';\n                break;\n            case CipherType.Identity:\n                this.icon = 'fa-id-card-o';\n                break;\n            default:\n                break;\n        }\n    }\n\n    private setLoginIcon() {\n        if (this.cipher.login.uri) {\n            let hostnameUri = this.cipher.login.uri;\n            let isWebsite = false;\n\n            if (hostnameUri.indexOf('androidapp://') === 0) {\n                this.icon = 'fa-android';\n                this.image = null;\n            } else if (hostnameUri.indexOf('iosapp://') === 0) {\n                this.icon = 'fa-apple';\n                this.image = null;\n            } else if (this.imageEnabled && hostnameUri.indexOf('://') === -1 && hostnameUri.indexOf('.') > -1) {\n                hostnameUri = 'http://' + hostnameUri;\n                isWebsite = true;\n            } else if (this.imageEnabled) {\n                isWebsite = hostnameUri.indexOf('http') === 0 && hostnameUri.indexOf('.') > -1;\n            }\n\n            if (this.imageEnabled && isWebsite) {\n                try {\n                    this.image = this.iconsUrl + '/' + Utils.getHostname(hostnameUri) + '/icon.png';\n                    this.fallbackImage = 'images/fa-globe.png';\n                } catch (e) {\n                    // Ignore error since the fallback icon will be shown if image is null.\n                }\n            }\n        } else {\n            this.image = null;\n        }\n    }\n}\n","<div class=\"icon\" aria-hidden=\"true\"> <img [src]=\"image\" appFallbackSrc=\"{{fallbackImage}}\" *ngIf=\"imageEnabled && image\" alt=\"\"/> <i class=\"fa fa-fw fa-lg {{icon}}\" *ngIf=\"!imageEnabled || !image\"></i> </div> ","export abstract class TokenService {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n    setTokens: (accessToken: string, refreshToken: string, clientIdClientSecret: [string, string]) => Promise<any>;\n    setToken: (token: string) => Promise<any>;\n    getToken: () => Promise<string>;\n    setRefreshToken: (refreshToken: string) => Promise<any>;\n    getRefreshToken: () => Promise<string>;\n    setClientId: (clientId: string) => Promise<any>;\n    getClientId: () => Promise<string>;\n    setClientSecret: (clientSecret: string) => Promise<any>;\n    getClientSecret: () => Promise<string>;\n    toggleTokens: () => Promise<any>;\n    setTwoFactorToken: (token: string, email: string) => Promise<any>;\n    getTwoFactorToken: (email: string) => Promise<string>;\n    clearTwoFactorToken: (email: string) => Promise<any>;\n    clearToken: () => Promise<any>;\n    decodeToken: () => any;\n    getTokenExpirationDate: () => Date;\n    tokenSecondsRemaining: (offsetSeconds?: number) => number;\n    tokenNeedsRefresh: (minutes?: number) => boolean;\n    getUserId: () => string;\n    getEmail: () => string;\n    getEmailVerified: () => boolean;\n    getName: () => string;\n    getPremium: () => boolean;\n    getIssuer: () => string;\n    getIsExternal: () => boolean;\n}\n","import { EventView } from '../models/view/eventView';\n\nexport abstract class ExportService {\n    getExport: (format?: 'csv' | 'json' | 'encrypted_json') => Promise<string>;\n    getOrganizationExport: (organizationId: string, format?: 'csv' | 'json' | 'encrypted_json') => Promise<string>;\n    getEventExport: (events: EventView[]) => Promise<string>;\n    getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { Injectable } from '@angular/core';\n\nimport { BroadcasterService as BaseBroadcasterService } from 'jslib-common/services/broadcaster.service';\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {\n}\n","export enum TwoFactorProviderType {\n    Authenticator = 0,\n    Email = 1,\n    Duo = 2,\n    Yubikey = 3,\n    U2f = 4,\n    Remember = 5,\n    OrganizationDuo = 6,\n    WebAuthn = 7,\n}\n","import {\n    Directive,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nexport abstract class BasePolicy {\n    abstract name: string;\n    abstract description: string;\n    abstract type: PolicyType;\n    abstract component: any;\n\n    display(organization: Organization) {\n        return true;\n    }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n    @Input() policyResponse: PolicyResponse;\n    @Input() policy: BasePolicy;\n\n    enabled = new FormControl(false);\n    data: FormGroup = null;\n\n    ngOnInit(): void {\n        this.enabled.setValue(this.policyResponse.enabled);\n\n        if (this.policyResponse.data != null) {\n            this.loadData();\n        }\n    }\n\n    loadData() {\n        this.data.patchValue(this.policyResponse.data ?? {});\n    }\n\n    buildRequestData() {\n        if (this.data != null) {\n            return this.data.value;\n        }\n\n        return null;\n    }\n\n    buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n        const request = new PolicyRequest();\n        request.enabled = this.enabled.value;\n        request.type = this.policy.type;\n        request.data = this.buildRequestData();\n\n        return Promise.resolve(request);\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\n@Pipe({\n    name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n    transform(items: any[], searchText: string, prop1?: string, prop2?: string, prop3?: string): any[] {\n        if (items == null || items.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return items;\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return items.filter(i => {\n            if (prop1 != null && i[prop1] != null && i[prop1].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop2 != null && i[prop2] != null && i[prop2].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop3 != null && i[prop3] != null && i[prop3].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n}\n","export abstract class TotpService {\n    getCode: (key: string) => Promise<string>;\n    getTimeInterval: (key: string) => number;\n    isAutoCopyEnabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n    Text = 0,\n    Hidden = 1,\n    Boolean = 2,\n    Linked = 3,\n}\n","import { SendData } from '../models/data/sendData';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { Send } from '../models/domain/send';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { SendView } from '../models/view/sendView';\n\nexport abstract class SendService {\n    decryptedSendCache: SendView[];\n\n    clearCache: () => void;\n    encrypt: (model: SendView, file: File | ArrayBuffer, password: string, key?: SymmetricCryptoKey) => Promise<[Send, EncArrayBuffer]>;\n    get: (id: string) => Promise<Send>;\n    getAll: () => Promise<Send[]>;\n    getAllDecrypted: () => Promise<SendView[]>;\n    saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n    upsert: (send: SendData | SendData[]) => Promise<any>;\n    replace: (sends: { [id: string]: SendData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ThemeType } from 'jslib-common/enums/themeType';\n\nimport ThemeVariables from 'src/scss/export.module.scss';\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n    selector: 'app-payment',\n    templateUrl: 'payment.component.html',\n})\nexport class PaymentComponent implements OnInit {\n    @Input() showMethods = true;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.Card;\n    @Input() hideBank = false;\n    @Input() hidePaypal = false;\n    @Input() hideCredit = false;\n\n    bank: any = {\n        routing_number: null,\n        account_number: null,\n        account_holder_name: null,\n        account_holder_type: '',\n        currency: 'USD',\n        country: 'US',\n    };\n\n    paymentMethodType = PaymentMethodType;\n\n    private btScript: HTMLScriptElement;\n    private btInstance: any = null;\n    private stripeScript: HTMLScriptElement;\n    private stripe: any = null;\n    private stripeElements: any = null;\n    private stripeCardNumberElement: any = null;\n    private stripeCardExpiryElement: any = null;\n    private stripeCardCvcElement: any = null;\n    private StripeElementStyle: any;\n    private StripeElementClasses: any;\n\n    constructor(private platformUtilsService: PlatformUtilsService, private apiService: ApiService,\n        private logService: LogService) {\n        this.stripeScript = window.document.createElement('script');\n        this.stripeScript.src = 'https://js.stripe.com/v3/';\n        this.stripeScript.async = true;\n        this.stripeScript.onload = () => {\n            this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n            this.stripeElements = this.stripe.elements();\n            this.setStripeElement();\n        };\n        this.btScript = window.document.createElement('script');\n        this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n        this.btScript.async = true;\n        this.StripeElementStyle = {\n            base: {\n                color: null,\n                fontFamily: '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n                    '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n                fontSize: '14px',\n                fontSmoothing: 'antialiased',\n                '::placeholder': {\n                    color: null,\n                },\n            },\n            invalid: {\n                color: null,\n\n            },\n        };\n        this.StripeElementClasses = {\n            focus: 'is-focused',\n            empty: 'is-empty',\n            invalid: 'is-invalid',\n        };\n    }\n\n    async ngOnInit() {\n        if (!this.showOptions) {\n            this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n            this.hideBank = this.method !== PaymentMethodType.BankAccount;\n            this.hideCredit = this.method !== PaymentMethodType.Credit;\n        }\n        await this.setTheme();\n        window.document.head.appendChild(this.stripeScript);\n        if (!this.hidePaypal) {\n            window.document.head.appendChild(this.btScript);\n        }\n    }\n\n    ngOnDestroy() {\n        window.document.head.removeChild(this.stripeScript);\n        window.setTimeout(() => {\n            Array.from(window.document.querySelectorAll('iframe')).forEach(el => {\n                if (el.src != null && el.src.indexOf('stripe') > -1) {\n                    try {\n                        window.document.body.removeChild(el);\n                    } catch (e) {\n                        this.logService.error(e);\n                    }\n                }\n            });\n        }, 500);\n        if (!this.hidePaypal) {\n            window.document.head.removeChild(this.btScript);\n            window.setTimeout(() => {\n                Array.from(window.document.head.querySelectorAll('script')).forEach(el => {\n                    if (el.src != null && el.src.indexOf('paypal') > -1) {\n                        try {\n                            window.document.head.removeChild(el);\n                        } catch (e) {\n                            this.logService.error(e);\n                        }\n                    }\n                });\n                const btStylesheet = window.document.head.querySelector('#braintree-dropin-stylesheet');\n                if (btStylesheet != null) {\n                    try {\n                        window.document.head.removeChild(btStylesheet);\n                    } catch (e) {\n                        this.logService.error(e);\n                    }\n                }\n            }, 500);\n        }\n    }\n\n    changeMethod() {\n        this.btInstance = null;\n\n        if (this.method === PaymentMethodType.PayPal) {\n            window.setTimeout(() => {\n                (window as any).braintree.dropin.create({\n                    authorization: process.env.BRAINTREE_KEY,\n                    container: '#bt-dropin-container',\n                    paymentOptionPriority: ['paypal'],\n                    paypal: {\n                        flow: 'vault',\n                        buttonStyle: {\n                            label: 'pay',\n                            size: 'medium',\n                            shape: 'pill',\n                            color: 'blue',\n                            tagline: 'false',\n                        },\n                    },\n                }, (createErr: any, instance: any) => {\n                    if (createErr != null) {\n                        // tslint:disable-next-line\n                        console.error(createErr);\n                        return;\n                    }\n                    this.btInstance = instance;\n                });\n            }, 250);\n        } else {\n            this.setStripeElement();\n        }\n    }\n\n    createPaymentToken(): Promise<[string, PaymentMethodType]> {\n        return new Promise((resolve, reject) => {\n            if (this.method === PaymentMethodType.Credit) {\n                resolve([null, this.method]);\n            } else if (this.method === PaymentMethodType.PayPal) {\n                this.btInstance.requestPaymentMethod().then((payload: any) => {\n                    resolve([payload.nonce, this.method]);\n                }).catch((err: any) => {\n                    reject(err.message);\n                });\n            } else if (this.method === PaymentMethodType.Card || this.method === PaymentMethodType.BankAccount) {\n                if (this.method === PaymentMethodType.Card) {\n                    this.apiService.postSetupPayment().then(clientSecret =>\n                        this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement))\n                        .then((result: any) => {\n                            if (result.error) {\n                                reject(result.error.message);\n                            } else if (result.setupIntent && result.setupIntent.status === 'succeeded') {\n                                resolve([result.setupIntent.payment_method, this.method]);\n                            } else {\n                                reject();\n                            }\n                        });\n                } else {\n                    this.stripe.createToken('bank_account', this.bank).then((result: any) => {\n                        if (result.error) {\n                            reject(result.error.message);\n                        } else if (result.token && result.token.id != null) {\n                            resolve([result.token.id, this.method]);\n                        } else {\n                            reject();\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n        return new Promise<void>((resolve, reject) => {\n            if (this.showMethods && this.stripeCardNumberElement == null) {\n                reject();\n                return;\n            }\n            const handleCardPayment = () => this.showMethods ?\n                this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement) :\n                this.stripe.handleCardSetup(clientSecret);\n            return handleCardPayment().then(async (result: any) => {\n                if (result.error) {\n                    reject(result.error.message);\n                } else if (result.paymentIntent && result.paymentIntent.status === 'succeeded') {\n                    if (successCallback != null) {\n                        await successCallback();\n                    }\n                    resolve();\n                } else {\n                    reject();\n                }\n            });\n        });\n    }\n\n    private setStripeElement() {\n        window.setTimeout(() => {\n            if (this.showMethods && this.method === PaymentMethodType.Card) {\n                if (this.stripeCardNumberElement == null) {\n                    this.stripeCardNumberElement = this.stripeElements.create('cardNumber', {\n                        style: this.StripeElementStyle,\n                        classes: this.StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                if (this.stripeCardExpiryElement == null) {\n                    this.stripeCardExpiryElement = this.stripeElements.create('cardExpiry', {\n                        style: this.StripeElementStyle,\n                        classes: this.StripeElementClasses,\n                    });\n                }\n                if (this.stripeCardCvcElement == null) {\n                    this.stripeCardCvcElement = this.stripeElements.create('cardCvc', {\n                        style: this.StripeElementStyle,\n                        classes: this.StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                this.stripeCardNumberElement.mount('#stripe-card-number-element');\n                this.stripeCardExpiryElement.mount('#stripe-card-expiry-element');\n                this.stripeCardCvcElement.mount('#stripe-card-cvc-element');\n            }\n        }, 50);\n    }\n\n    private async setTheme() {\n        const theme = await this.platformUtilsService.getEffectiveTheme();\n        if (theme === ThemeType.Dark) {\n            this.StripeElementStyle.base.color = darkInputColor;\n            this.StripeElementStyle.base['::placeholder'].color = darkInputPlaceholderColor;\n            this.StripeElementStyle.invalid.color = darkInputColor;\n        } else {\n            this.StripeElementStyle.base.color = lightInputColor;\n            this.StripeElementStyle.base['::placeholder'].color = lightInputPlaceholderColor;\n            this.StripeElementStyle.invalid.color = lightInputColor;\n        }\n    }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\"> <div class=\"form-check form-check-inline mr-4\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-card\" [value]=\"paymentMethodType.Card\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-card\"> <i class=\"fa fa-fw fa-credit-card\" aria-hidden=\"true\"></i> {{'creditCard' | i18n}}</label> </div> <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-bank\" [value]=\"paymentMethodType.BankAccount\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-bank\"> <i class=\"fa fa-fw fa-university\" aria-hidden=\"true\"></i> {{'bankAccount' | i18n}}</label> </div> <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-paypal\" [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-paypal\"> <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label> </div> <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-credit\" [value]=\"paymentMethodType.Credit\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-credit\"> <i class=\"fa fa-fw fa-dollar\" aria-hidden=\"true\"></i> {{'accountCredit' | i18n}}</label> </div> </div> <ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"stripe-card-number-element\">{{'number' | i18n}}</label> <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div> </div> <div class=\"form-group col-8 d-flex align-items-end\"> <img src=\"images/cards.png\" alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\" width=\"323\" height=\"32\"> </div> <div class=\"form-group col-4\"> <label for=\"stripe-card-expiry-element\">{{'expiration' | i18n}}</label> <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div> </div> <div class=\"form-group col-4\"> <div class=\"d-flex\"> <label for=\"stripe-card-cvc-element\"> {{'securityCode' | i18n}} </label> <a href=\"https://www.cvvnumber.com/cvv.html\" tabindex=\"-1\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"ml-auto\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div> </div> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\"> <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\"> {{'verifyBankAccountInitialDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}} </app-callout> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"routing_number\">{{'routingNumber' | i18n}}</label> <input id=\"routing_number\" class=\"form-control\" type=\"text\" name=\"routing_number\" [(ngModel)]=\"bank.routing_number\" required appInputVerbatim> </div> <div class=\"form-group col-6\"> <label for=\"account_number\">{{'accountNumber' | i18n}}</label> <input id=\"account_number\" class=\"form-control\" type=\"text\" name=\"account_number\" [(ngModel)]=\"bank.account_number\" required appInputVerbatim> </div> <div class=\"form-group col-6\"> <label for=\"account_holder_name\">{{'accountHolderName' | i18n}}</label> <input id=\"account_holder_name\" class=\"form-control\" type=\"text\" name=\"account_holder_name\" [(ngModel)]=\"bank.account_holder_name\" required> </div> <div class=\"form-group col-6\"> <label for=\"account_holder_type\">{{'bankAccountType' | i18n}}</label> <select id=\"account_holder_type\" class=\"form-control\" name=\"account_holder_type\" [(ngModel)]=\"bank.account_holder_type\" required> <option value=\"\">-- {{'select' | i18n}} --</option> <option value=\"company\">{{'bankAccountTypeCompany' | i18n}}</option> <option value=\"individual\">{{'bankAccountTypeIndividual' | i18n}}</option> </select> </div> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\"> <div class=\"mb-3\"> <div id=\"bt-dropin-container\" class=\"mb-1\"></div> <small class=\"text-muted\">{{'paypalClickSubmit' | i18n}}</small> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\"> <app-callout type=\"note\"> {{'makeSureEnoughCredit' | i18n}} </app-callout> </ng-container> ","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\nimport { LinkedIdType } from '../../enums/linkedIdType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { AttachmentView } from './attachmentView';\nimport { CardView } from './cardView';\nimport { FieldView } from './fieldView';\nimport { IdentityView } from './identityView';\nimport { ItemView } from './itemView';\nimport { LoginView } from './loginView';\nimport { PasswordHistoryView } from './passwordHistoryView';\nimport { SecureNoteView } from './secureNoteView';\nimport { View } from './view';\n\nexport class CipherView implements View {\n    id: string = null;\n    organizationId: string = null;\n    folderId: string = null;\n    name: string = null;\n    notes: string = null;\n    type: CipherType = null;\n    favorite = false;\n    organizationUseTotp = false;\n    edit = false;\n    viewPassword = true;\n    localData: any;\n    login = new LoginView();\n    identity = new IdentityView();\n    card = new CardView();\n    secureNote = new SecureNoteView();\n    attachments: AttachmentView[] = null;\n    fields: FieldView[] = null;\n    passwordHistory: PasswordHistoryView[] = null;\n    collectionIds: string[] = null;\n    revisionDate: Date = null;\n    deletedDate: Date = null;\n    reprompt: CipherRepromptType = CipherRepromptType.None;\n\n    constructor(c?: Cipher) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.folderId = c.folderId;\n        this.favorite = c.favorite;\n        this.organizationUseTotp = c.organizationUseTotp;\n        this.edit = c.edit;\n        this.viewPassword = c.viewPassword;\n        this.type = c.type;\n        this.localData = c.localData;\n        this.collectionIds = c.collectionIds;\n        this.revisionDate = c.revisionDate;\n        this.deletedDate = c.deletedDate;\n        // Old locally stored ciphers might have reprompt == null. If so set it to None.\n        this.reprompt = c.reprompt ?? CipherRepromptType.None;\n    }\n\n    private get item() {\n        switch (this.type) {\n            case CipherType.Login:\n                return this.login;\n            case CipherType.SecureNote:\n                return this.secureNote;\n            case CipherType.Card:\n                return this.card;\n            case CipherType.Identity:\n                return this.identity;\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    get subTitle(): string {\n        return this.item.subTitle;\n    }\n\n    get hasPasswordHistory(): boolean {\n        return this.passwordHistory && this.passwordHistory.length > 0;\n    }\n\n    get hasAttachments(): boolean {\n        return this.attachments && this.attachments.length > 0;\n    }\n\n    get hasOldAttachments(): boolean {\n        if (this.hasAttachments) {\n            for (let i = 0; i < this.attachments.length; i++) {\n                if (this.attachments[i].key == null) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    get hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    get passwordRevisionDisplayDate(): Date {\n        if (this.type !== CipherType.Login || this.login == null) {\n            return null;\n        } else if (this.login.password == null || this.login.password === '') {\n            return null;\n        }\n        return this.login.passwordRevisionDate;\n    }\n\n    get isDeleted(): boolean {\n        return this.deletedDate != null;\n    }\n\n    get linkedFieldOptions() {\n        return this.item.linkedFieldOptions;\n    }\n\n    linkedFieldValue(id: LinkedIdType) {\n        const linkedFieldOption = this.linkedFieldOptions?.get(id);\n        if (linkedFieldOption == null) {\n            return null;\n        }\n\n        const item = this.item;\n        return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n    }\n\n    linkedFieldI18nKey(id: LinkedIdType): string {\n        return this.linkedFieldOptions.get(id)?.i18nKey;\n    }\n}\n","import { ItemView } from './itemView';\n\nimport { Identity } from '../domain/identity';\n\nimport { Utils } from '../../misc/utils';\n\nimport { IdentityLinkedId as LinkedId } from '../../enums/linkedIdType';\n\nimport { linkedFieldOption } from '../../misc/linkedFieldOption.decorator';\n\nexport class IdentityView extends ItemView {\n    @linkedFieldOption(LinkedId.Title)\n    title: string = null;\n    @linkedFieldOption(LinkedId.MiddleName)\n    middleName: string = null;\n    @linkedFieldOption(LinkedId.Address1)\n    address1: string = null;\n    @linkedFieldOption(LinkedId.Address2)\n    address2: string = null;\n    @linkedFieldOption(LinkedId.Address3)\n    address3: string = null;\n    @linkedFieldOption(LinkedId.City, 'cityTown')\n    city: string = null;\n    @linkedFieldOption(LinkedId.State, 'stateProvince')\n    state: string = null;\n    @linkedFieldOption(LinkedId.PostalCode, 'zipPostalCode')\n    postalCode: string = null;\n    @linkedFieldOption(LinkedId.Country)\n    country: string = null;\n    @linkedFieldOption(LinkedId.Company)\n    company: string = null;\n    @linkedFieldOption(LinkedId.Email)\n    email: string = null;\n    @linkedFieldOption(LinkedId.Phone)\n    phone: string = null;\n    @linkedFieldOption(LinkedId.Ssn)\n    ssn: string = null;\n    @linkedFieldOption(LinkedId.Username)\n    username: string = null;\n    @linkedFieldOption(LinkedId.PassportNumber)\n    passportNumber: string = null;\n    @linkedFieldOption(LinkedId.LicenseNumber)\n    licenseNumber: string = null;\n\n    // tslint:disable\n    private _firstName: string = null;\n    private _lastName: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(i?: Identity) {\n        super();\n    }\n\n    @linkedFieldOption(LinkedId.FirstName)\n    get firstName(): string {\n        return this._firstName;\n    }\n    set firstName(value: string) {\n        this._firstName = value;\n        this._subTitle = null;\n    }\n\n    @linkedFieldOption(LinkedId.LastName)\n    get lastName(): string {\n        return this._lastName;\n    }\n    set lastName(value: string) {\n        this._lastName = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n            this._subTitle = '';\n            if (this.firstName != null) {\n                this._subTitle = this.firstName;\n            }\n            if (this.lastName != null) {\n                if (this._subTitle !== '') {\n                    this._subTitle += ' ';\n                }\n                this._subTitle += this.lastName;\n            }\n        }\n\n        return this._subTitle;\n    }\n\n    @linkedFieldOption(LinkedId.FullName)\n    get fullName(): string {\n        if (this.title != null || this.firstName != null || this.middleName != null || this.lastName != null) {\n            let name = '';\n            if (this.title != null) {\n                name += (this.title + ' ');\n            }\n            if (this.firstName != null) {\n                name += (this.firstName + ' ');\n            }\n            if (this.middleName != null) {\n                name += (this.middleName + ' ');\n            }\n            if (this.lastName != null) {\n                name += this.lastName;\n            }\n            return name.trim();\n        }\n\n        return null;\n    }\n\n    get fullAddress(): string {\n        let address = this.address1;\n        if (!Utils.isNullOrWhitespace(this.address2)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address2;\n        }\n        if (!Utils.isNullOrWhitespace(this.address3)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address3;\n        }\n        return address;\n    }\n\n    get fullAddressPart2(): string {\n        if (this.city == null && this.state == null && this.postalCode == null) {\n            return null;\n        }\n        const city = this.city || '-';\n        const state = this.state;\n        const postalCode = this.postalCode || '-';\n        let addressPart2 = city;\n        if (!Utils.isNullOrWhitespace(state)) {\n            addressPart2 += ', ' + state;\n        }\n        addressPart2 += ', ' + postalCode;\n        return addressPart2;\n    }\n}\n","import { View } from './view';\n\nimport { Folder } from '../domain/folder';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nexport class FolderView implements View, ITreeNodeObject {\n    id: string = null;\n    name: string = null;\n    revisionDate: Date = null;\n\n    constructor(f?: Folder) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n        this.revisionDate = f.revisionDate;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { OrganizationTaxInfoUpdateRequest } from 'jslib-common/models/request/organizationTaxInfoUpdateRequest';\nimport { TaxInfoUpdateRequest } from 'jslib-common/models/request/taxInfoUpdateRequest';\nimport { TaxRateResponse } from 'jslib-common/models/response/taxRateResponse';\n\n@Component({\n    selector: 'app-tax-info',\n    templateUrl: 'tax-info.component.html',\n})\nexport class TaxInfoComponent {\n    @Output() onCountryChanged = new EventEmitter();\n\n    loading: boolean = true;\n    organizationId: string;\n    taxInfo: any = {\n        taxId: null,\n        line1: null,\n        line2: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: 'US',\n        includeTaxId: false,\n    };\n\n    taxRates: TaxRateResponse[];\n\n    private pristine: any = {\n        taxId: null,\n        line1: null,\n        line2: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: 'US',\n        includeTaxId: false,\n    };\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute, private logService: LogService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            if (this.organizationId) {\n                try {\n                    const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\n                    if (taxInfo) {\n                        this.taxInfo.taxId = taxInfo.taxId;\n                        this.taxInfo.state = taxInfo.state;\n                        this.taxInfo.line1 = taxInfo.line1;\n                        this.taxInfo.line2 = taxInfo.line2;\n                        this.taxInfo.city = taxInfo.city;\n                        this.taxInfo.state = taxInfo.state;\n                        this.taxInfo.postalCode = taxInfo.postalCode;\n                        this.taxInfo.country = taxInfo.country || 'US';\n                        this.taxInfo.includeTaxId = this.taxInfo.country !== 'US' && (\n                            !!taxInfo.taxId\n                            || !!taxInfo.line1\n                            || !!taxInfo.line2\n                            || !!taxInfo.city\n                            || !!taxInfo.state);\n                    }\n                }  catch (e) {\n                    this.logService.error(e);\n                }\n            } else {\n                const taxInfo = await this.apiService.getTaxInfo();\n                if (taxInfo) {\n                    this.taxInfo.postalCode = taxInfo.postalCode;\n                    this.taxInfo.country = taxInfo.country || 'US';\n                }\n            }\n            this.pristine = Object.assign({}, this.taxInfo);\n            // If not the default (US) then trigger onCountryChanged\n            if (this.taxInfo.country !== 'US') {\n                this.onCountryChanged.emit();\n            }\n        });\n\n        const taxRates = await this.apiService.getTaxRates();\n        this.taxRates = taxRates.data;\n        this.loading = false;\n    }\n\n    get taxRate() {\n        if (this.taxRates != null) {\n            const localTaxRate = this.taxRates.find(x =>\n                x.country === this.taxInfo.country &&\n                x.postalCode === this.taxInfo.postalCode\n            );\n            return localTaxRate?.rate ?? null;\n        }\n    }\n\n    getTaxInfoRequest(): TaxInfoUpdateRequest {\n        if (this.organizationId) {\n            const request = new OrganizationTaxInfoUpdateRequest();\n            request.taxId = this.taxInfo.taxId;\n            request.state = this.taxInfo.state;\n            request.line1 = this.taxInfo.line1;\n            request.line2 = this.taxInfo.line2;\n            request.city = this.taxInfo.city;\n            request.state = this.taxInfo.state;\n            request.postalCode = this.taxInfo.postalCode;\n            request.country = this.taxInfo.country;\n            return request;\n        } else {\n            const request = new TaxInfoUpdateRequest();\n            request.postalCode = this.taxInfo.postalCode;\n            request.country = this.taxInfo.country;\n            return request;\n        }\n    }\n\n    submitTaxInfo(): Promise<any> {\n        if (!this.hasChanged()) {\n            return new Promise<void>(resolve => { resolve(); });\n        }\n        const request = this.getTaxInfoRequest();\n        return this.organizationId ? this.apiService.putOrganizationTaxInfo(this.organizationId,\n            request as OrganizationTaxInfoUpdateRequest) : this.apiService.putTaxInfo(request);\n    }\n\n    changeCountry() {\n        if (this.taxInfo.country === 'US') {\n            this.taxInfo.includeTaxId = false;\n            this.taxInfo.taxId = null;\n            this.taxInfo.line1 = null;\n            this.taxInfo.line2 = null;\n            this.taxInfo.city = null;\n            this.taxInfo.state = null;\n        }\n        this.onCountryChanged.emit();\n    }\n\n    private hasChanged(): boolean {\n        for (const key in this.taxInfo) {\n            if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressCountry\">{{'country' | i18n}}</label> <select id=\"addressCountry\" class=\"form-control\" [(ngModel)]=\"taxInfo.country\" required name=\"addressCountry\" autocomplete=\"country\" (change)=\"changeCountry()\"> <option value=\"\">-- Select --</option> <option value=\"US\">United States</option> <option value=\"CN\">China</option> <option value=\"FR\">France</option> <option value=\"DE\">Germany</option> <option value=\"CA\">Canada</option> <option value=\"GB\">United Kingdom</option> <option value=\"AU\">Australia</option> <option value=\"IN\">India</option> <option value=\"-\" disabled=\"disabled\"></option> <option value=\"AF\">Afghanistan</option> <option value=\"AX\">Åland Islands</option> <option value=\"AL\">Albania</option> <option value=\"DZ\">Algeria</option> <option value=\"AS\">American Samoa</option> <option value=\"AD\">Andorra</option> <option value=\"AO\">Angola</option> <option value=\"AI\">Anguilla</option> <option value=\"AQ\">Antarctica</option> <option value=\"AG\">Antigua and Barbuda</option> <option value=\"AR\">Argentina</option> <option value=\"AM\">Armenia</option> <option value=\"AW\">Aruba</option> <option value=\"AT\">Austria</option> <option value=\"AZ\">Azerbaijan</option> <option value=\"BS\">Bahamas</option> <option value=\"BH\">Bahrain</option> <option value=\"BD\">Bangladesh</option> <option value=\"BB\">Barbados</option> <option value=\"BY\">Belarus</option> <option value=\"BE\">Belgium</option> <option value=\"BZ\">Belize</option> <option value=\"BJ\">Benin</option> <option value=\"BM\">Bermuda</option> <option value=\"BT\">Bhutan</option> <option value=\"BO\">Bolivia, Plurinational State of</option> <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option> <option value=\"BA\">Bosnia and Herzegovina</option> <option value=\"BW\">Botswana</option> <option value=\"BV\">Bouvet Island</option> <option value=\"BR\">Brazil</option> <option value=\"IO\">British Indian Ocean Territory</option> <option value=\"BN\">Brunei Darussalam</option> <option value=\"BG\">Bulgaria</option> <option value=\"BF\">Burkina Faso</option> <option value=\"BI\">Burundi</option> <option value=\"KH\">Cambodia</option> <option value=\"CM\">Cameroon</option> <option value=\"CV\">Cape Verde</option> <option value=\"KY\">Cayman Islands</option> <option value=\"CF\">Central African Republic</option> <option value=\"TD\">Chad</option> <option value=\"CL\">Chile</option> <option value=\"CX\">Christmas Island</option> <option value=\"CC\">Cocos (Keeling) Islands</option> <option value=\"CO\">Colombia</option> <option value=\"KM\">Comoros</option> <option value=\"CG\">Congo</option> <option value=\"CD\">Congo, the Democratic Republic of the</option> <option value=\"CK\">Cook Islands</option> <option value=\"CR\">Costa Rica</option> <option value=\"CI\">Côte d'Ivoire</option> <option value=\"HR\">Croatia</option> <option value=\"CU\">Cuba</option> <option value=\"CW\">Curaçao</option> <option value=\"CY\">Cyprus</option> <option value=\"CZ\">Czech Republic</option> <option value=\"DK\">Denmark</option> <option value=\"DJ\">Djibouti</option> <option value=\"DM\">Dominica</option> <option value=\"DO\">Dominican Republic</option> <option value=\"EC\">Ecuador</option> <option value=\"EG\">Egypt</option> <option value=\"SV\">El Salvador</option> <option value=\"GQ\">Equatorial Guinea</option> <option value=\"ER\">Eritrea</option> <option value=\"EE\">Estonia</option> <option value=\"ET\">Ethiopia</option> <option value=\"FK\">Falkland Islands (Malvinas)</option> <option value=\"FO\">Faroe Islands</option> <option value=\"FJ\">Fiji</option> <option value=\"FI\">Finland</option> <option value=\"GF\">French Guiana</option> <option value=\"PF\">French Polynesia</option> <option value=\"TF\">French Southern Territories</option> <option value=\"GA\">Gabon</option> <option value=\"GM\">Gambia</option> <option value=\"GE\">Georgia</option> <option value=\"GH\">Ghana</option> <option value=\"GI\">Gibraltar</option> <option value=\"GR\">Greece</option> <option value=\"GL\">Greenland</option> <option value=\"GD\">Grenada</option> <option value=\"GP\">Guadeloupe</option> <option value=\"GU\">Guam</option> <option value=\"GT\">Guatemala</option> <option value=\"GG\">Guernsey</option> <option value=\"GN\">Guinea</option> <option value=\"GW\">Guinea-Bissau</option> <option value=\"GY\">Guyana</option> <option value=\"HT\">Haiti</option> <option value=\"HM\">Heard Island and McDonald Islands</option> <option value=\"VA\">Holy See (Vatican City State)</option> <option value=\"HN\">Honduras</option> <option value=\"HK\">Hong Kong</option> <option value=\"HU\">Hungary</option> <option value=\"IS\">Iceland</option> <option value=\"ID\">Indonesia</option> <option value=\"IR\">Iran, Islamic Republic of</option> <option value=\"IQ\">Iraq</option> <option value=\"IE\">Ireland</option> <option value=\"IM\">Isle of Man</option> <option value=\"IL\">Israel</option> <option value=\"IT\">Italy</option> <option value=\"JM\">Jamaica</option> <option value=\"JP\">Japan</option> <option value=\"JE\">Jersey</option> <option value=\"JO\">Jordan</option> <option value=\"KZ\">Kazakhstan</option> <option value=\"KE\">Kenya</option> <option value=\"KI\">Kiribati</option> <option value=\"KP\">Korea, Democratic People's Republic of</option> <option value=\"KR\">Korea, Republic of</option> <option value=\"KW\">Kuwait</option> <option value=\"KG\">Kyrgyzstan</option> <option value=\"LA\">Lao People's Democratic Republic</option> <option value=\"LV\">Latvia</option> <option value=\"LB\">Lebanon</option> <option value=\"LS\">Lesotho</option> <option value=\"LR\">Liberia</option> <option value=\"LY\">Libya</option> <option value=\"LI\">Liechtenstein</option> <option value=\"LT\">Lithuania</option> <option value=\"LU\">Luxembourg</option> <option value=\"MO\">Macao</option> <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option> <option value=\"MG\">Madagascar</option> <option value=\"MW\">Malawi</option> <option value=\"MY\">Malaysia</option> <option value=\"MV\">Maldives</option> <option value=\"ML\">Mali</option> <option value=\"MT\">Malta</option> <option value=\"MH\">Marshall Islands</option> <option value=\"MQ\">Martinique</option> <option value=\"MR\">Mauritania</option> <option value=\"MU\">Mauritius</option> <option value=\"YT\">Mayotte</option> <option value=\"MX\">Mexico</option> <option value=\"FM\">Micronesia, Federated States of</option> <option value=\"MD\">Moldova, Republic of</option> <option value=\"MC\">Monaco</option> <option value=\"MN\">Mongolia</option> <option value=\"ME\">Montenegro</option> <option value=\"MS\">Montserrat</option> <option value=\"MA\">Morocco</option> <option value=\"MZ\">Mozambique</option> <option value=\"MM\">Myanmar</option> <option value=\"NA\">Namibia</option> <option value=\"NR\">Nauru</option> <option value=\"NP\">Nepal</option> <option value=\"NL\">Netherlands</option> <option value=\"NC\">New Caledonia</option> <option value=\"NZ\">New Zealand</option> <option value=\"NI\">Nicaragua</option> <option value=\"NE\">Niger</option> <option value=\"NG\">Nigeria</option> <option value=\"NU\">Niue</option> <option value=\"NF\">Norfolk Island</option> <option value=\"MP\">Northern Mariana Islands</option> <option value=\"NO\">Norway</option> <option value=\"OM\">Oman</option> <option value=\"PK\">Pakistan</option> <option value=\"PW\">Palau</option> <option value=\"PS\">Palestinian Territory, Occupied</option> <option value=\"PA\">Panama</option> <option value=\"PG\">Papua New Guinea</option> <option value=\"PY\">Paraguay</option> <option value=\"PE\">Peru</option> <option value=\"PH\">Philippines</option> <option value=\"PN\">Pitcairn</option> <option value=\"PL\">Poland</option> <option value=\"PT\">Portugal</option> <option value=\"PR\">Puerto Rico</option> <option value=\"QA\">Qatar</option> <option value=\"RE\">Réunion</option> <option value=\"RO\">Romania</option> <option value=\"RU\">Russian Federation</option> <option value=\"RW\">Rwanda</option> <option value=\"BL\">Saint Barthélemy</option> <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option> <option value=\"KN\">Saint Kitts and Nevis</option> <option value=\"LC\">Saint Lucia</option> <option value=\"MF\">Saint Martin (French part)</option> <option value=\"PM\">Saint Pierre and Miquelon</option> <option value=\"VC\">Saint Vincent and the Grenadines</option> <option value=\"WS\">Samoa</option> <option value=\"SM\">San Marino</option> <option value=\"ST\">Sao Tome and Principe</option> <option value=\"SA\">Saudi Arabia</option> <option value=\"SN\">Senegal</option> <option value=\"RS\">Serbia</option> <option value=\"SC\">Seychelles</option> <option value=\"SL\">Sierra Leone</option> <option value=\"SG\">Singapore</option> <option value=\"SX\">Sint Maarten (Dutch part)</option> <option value=\"SK\">Slovakia</option> <option value=\"SI\">Slovenia</option> <option value=\"SB\">Solomon Islands</option> <option value=\"SO\">Somalia</option> <option value=\"ZA\">South Africa</option> <option value=\"GS\">South Georgia and the South Sandwich Islands</option> <option value=\"SS\">South Sudan</option> <option value=\"ES\">Spain</option> <option value=\"LK\">Sri Lanka</option> <option value=\"SD\">Sudan</option> <option value=\"SR\">Suriname</option> <option value=\"SJ\">Svalbard and Jan Mayen</option> <option value=\"SZ\">Swaziland</option> <option value=\"SE\">Sweden</option> <option value=\"CH\">Switzerland</option> <option value=\"SY\">Syrian Arab Republic</option> <option value=\"TW\">Taiwan</option> <option value=\"TJ\">Tajikistan</option> <option value=\"TZ\">Tanzania, United Republic of</option> <option value=\"TH\">Thailand</option> <option value=\"TL\">Timor-Leste</option> <option value=\"TG\">Togo</option> <option value=\"TK\">Tokelau</option> <option value=\"TO\">Tonga</option> <option value=\"TT\">Trinidad and Tobago</option> <option value=\"TN\">Tunisia</option> <option value=\"TR\">Turkey</option> <option value=\"TM\">Turkmenistan</option> <option value=\"TC\">Turks and Caicos Islands</option> <option value=\"TV\">Tuvalu</option> <option value=\"UG\">Uganda</option> <option value=\"UA\">Ukraine</option> <option value=\"AE\">United Arab Emirates</option> <option value=\"UM\">United States Minor Outlying Islands</option> <option value=\"UY\">Uruguay</option> <option value=\"UZ\">Uzbekistan</option> <option value=\"VU\">Vanuatu</option> <option value=\"VE\">Venezuela, Bolivarian Republic of</option> <option value=\"VN\">Viet Nam</option> <option value=\"VG\">Virgin Islands, British</option> <option value=\"VI\">Virgin Islands, U.S.</option> <option value=\"WF\">Wallis and Futuna</option> <option value=\"EH\">Western Sahara</option> <option value=\"YE\">Yemen</option> <option value=\"ZM\">Zambia</option> <option value=\"ZW\">Zimbabwe</option> </select> </div> </div> <div class=\"col-3\"> <div class=\"form-group\"> <label for=\"addressPostalCode\">{{'zipPostalCode' | i18n}}</label> <input id=\"addressPostalCode\" class=\"form-control\" type=\"text\" name=\"addressPostalCode\" [(ngModel)]=\"taxInfo.postalCode\" [required]=\"taxInfo.country === 'US'\" autocomplete=\"postal-code\"> </div> </div> <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\"> <div class=\"form-group form-check\"> <input class=\"form-check-input\" id=\"addressIncludeTaxId\" name=\"addressIncludeTaxId\" type=\"checkbox\" [(ngModel)]=\"taxInfo.includeTaxId\"> <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{'includeVAT' | i18n}}</label> </div> </div> </div> <div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"taxId\">{{'taxIdNumber' | i18n}}</label> <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\"> </div> </div> </div> <div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressLine1\">{{'address1' | i18n}}</label> <input id=\"addressLine1\" class=\"form-control\" type=\"text\" name=\"addressLine1\" [(ngModel)]=\"taxInfo.line1\" autocomplete=\"address-line1\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressLine2\">{{'address2' | i18n}}</label> <input id=\"addressLine2\" class=\"form-control\" type=\"text\" name=\"addressLine2\" [(ngModel)]=\"taxInfo.line2\" autocomplete=\"address-line2\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressCity\">{{'cityTown' | i18n}}</label> <input id=\"addressCity\" class=\"form-control\" type=\"text\" name=\"addressCity\" [(ngModel)]=\"taxInfo.city\" autocomplete=\"address-level2\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressState\">{{'stateProvince' | i18n}}</label> <input id=\"addressState\" class=\"form-control\" type=\"text\" name=\"addressState\" [(ngModel)]=\"taxInfo.state\" autocomplete=\"address-level1\"> </div> </div> </div> ","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { DeviceType } from 'jslib-common/enums/deviceType';\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\n\n@Injectable()\nexport class EventService {\n    constructor(private i18nService: I18nService, private policyService: PolicyService) { }\n\n    getDefaultDateFilters() {\n        const d = new Date();\n        const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n        d.setDate(d.getDate() - 30);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n        return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n    }\n\n    formatDateFilters(filterStart: string, filterEnd: string) {\n        const start: Date = new Date(filterStart);\n        const end: Date = new Date(filterEnd + ':59.999');\n        if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n            throw new Error('Invalid date range.');\n        }\n        return [start.toISOString(), end.toISOString()];\n    }\n\n    async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n        const appInfo = this.getAppInfo(ev.deviceType);\n        const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n        return {\n            message: message,\n            humanReadableMessage: humanReadableMessage,\n            appIcon: appInfo[0],\n            appName: appInfo[1],\n        };\n    }\n\n    private async getEventMessage(ev: EventResponse, options: EventOptions) {\n        let msg = '';\n        let humanReadableMsg = '';\n        switch (ev.type) {\n            // User\n            case EventType.User_LoggedIn:\n                msg = humanReadableMsg = this.i18nService.t('loggedIn');\n                break;\n            case EventType.User_ChangedPassword:\n                msg = humanReadableMsg = this.i18nService.t('changedPassword');\n                break;\n            case EventType.User_Updated2fa:\n                msg = humanReadableMsg = this.i18nService.t('enabledUpdated2fa');\n                break;\n            case EventType.User_Disabled2fa:\n                msg = humanReadableMsg = this.i18nService.t('disabled2fa');\n                break;\n            case EventType.User_Recovered2fa:\n                msg = humanReadableMsg = this.i18nService.t('recovered2fa');\n                break;\n            case EventType.User_FailedLogIn:\n                msg = humanReadableMsg = this.i18nService.t('failedLogin');\n                break;\n            case EventType.User_FailedLogIn2fa:\n                msg = humanReadableMsg = this.i18nService.t('failedLogin2fa');\n                break;\n            case EventType.User_ClientExportedVault:\n                msg = humanReadableMsg = this.i18nService.t('exportedVault');\n                break;\n            case EventType.User_UpdatedTempPassword:\n                msg = humanReadableMsg = this.i18nService.t('updatedMasterPassword');\n                break;\n            case EventType.User_MigratedKeyToKeyConnector:\n                msg = humanReadableMsg = this.i18nService.t('migratedKeyConnector');\n                break;\n            // Cipher\n            case EventType.Cipher_Created:\n                msg = this.i18nService.t('createdItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('createdItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Updated:\n                msg = this.i18nService.t('editedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('editedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Deleted:\n                msg = this.i18nService.t('permanentlyDeletedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('permanentlyDeletedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_SoftDeleted:\n                msg = this.i18nService.t('deletedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('deletedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Restored:\n                msg = this.i18nService.t('restoredItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('restoredItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_AttachmentCreated:\n                msg = this.i18nService.t('createdAttachmentForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('createdAttachmentForItem', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_AttachmentDeleted:\n                msg = this.i18nService.t('deletedAttachmentForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('deletedAttachmentForItem', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Shared:\n                msg = this.i18nService.t('movedItemIdToOrg', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('movedItemIdToOrg', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientViewed:\n                msg = this.i18nService.t('viewedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledPasswordVisible:\n                msg = this.i18nService.t('viewedPasswordItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedPasswordItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledHiddenFieldVisible:\n                msg = this.i18nService.t('viewedHiddenFieldItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedHiddenFieldItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledCardCodeVisible:\n                msg = this.i18nService.t('viewedSecurityCodeItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedSecurityCodeItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedHiddenField:\n                msg = this.i18nService.t('copiedHiddenFieldItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedHiddenFieldItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedPassword:\n                msg = this.i18nService.t('copiedPasswordItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedPasswordItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedCardCode:\n                msg = this.i18nService.t('copiedSecurityCodeItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedSecurityCodeItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientAutofilled:\n                msg = this.i18nService.t('autofilledItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('autofilledItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_UpdatedCollections:\n                msg = this.i18nService.t('editedCollectionsForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('editedCollectionsForItem', this.getShortId(ev.cipherId));\n                break;\n            // Collection\n            case EventType.Collection_Created:\n                msg = this.i18nService.t('createdCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('createdCollectionId', this.getShortId(ev.collectionId));\n                break;\n            case EventType.Collection_Updated:\n                msg = this.i18nService.t('editedCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('editedCollectionId', this.getShortId(ev.collectionId));\n                break;\n            case EventType.Collection_Deleted:\n                msg = this.i18nService.t('deletedCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('deletedCollectionId', this.getShortId(ev.collectionId));\n                break;\n            // Group\n            case EventType.Group_Created:\n                msg = this.i18nService.t('createdGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('createdGroupId', this.getShortId(ev.groupId));\n                break;\n            case EventType.Group_Updated:\n                msg = this.i18nService.t('editedGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('editedGroupId', this.getShortId(ev.groupId));\n                break;\n            case EventType.Group_Deleted:\n                msg = this.i18nService.t('deletedGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('deletedGroupId', this.getShortId(ev.groupId));\n                break;\n            // Org user\n            case EventType.OrganizationUser_Invited:\n                msg = this.i18nService.t('invitedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('invitedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Confirmed:\n                msg = this.i18nService.t('confirmedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('confirmedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Updated:\n                msg = this.i18nService.t('editedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Removed:\n                msg = this.i18nService.t('removedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('removedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_UpdatedGroups:\n                msg = this.i18nService.t('editedGroupsForUser', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedGroupsForUser', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_UnlinkedSso:\n                msg = this.i18nService.t('unlinkedSsoUser', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('unlinkedSsoUser', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_ResetPassword_Enroll:\n                msg = this.i18nService.t('eventEnrollPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventEnrollPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_ResetPassword_Withdraw:\n                msg = this.i18nService.t('eventWithdrawPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventWithdrawPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_AdminResetPassword:\n                msg = this.i18nService.t('eventAdminPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventAdminPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_ResetSsoLink:\n                msg = this.i18nService.t('eventResetSsoLink', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventResetSsoLink', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_FirstSsoLogin:\n                msg = this.i18nService.t('firstSsoLogin', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('firstSsoLogin', this.getShortId(ev.organizationUserId));\n                break;\n            // Org\n            case EventType.Organization_Updated:\n                msg = humanReadableMsg = this.i18nService.t('editedOrgSettings');\n                break;\n            case EventType.Organization_PurgedVault:\n                msg = humanReadableMsg = this.i18nService.t('purgedOrganizationVault');\n                break;\n            /*\n            case EventType.Organization_ClientExportedVault:\n                msg = this.i18nService.t('exportedOrganizationVault');\n                break;\n            */\n            case EventType.Organization_VaultAccessed:\n                msg = humanReadableMsg = this.i18nService.t('vaultAccessedByProvider');\n                break;\n            case EventType.Organization_EnabledSso:\n                msg = humanReadableMsg = this.i18nService.t('enabledSso');\n                break;\n            case EventType.Organization_DisabledSso:\n                msg = humanReadableMsg = this.i18nService.t('disabledSso');\n                break;\n            case EventType.Organization_EnabledKeyConnector:\n                msg = humanReadableMsg = this.i18nService.t('enabledKeyConnector');\n                break;\n            case EventType.Organization_DisabledKeyConnector:\n                msg = humanReadableMsg = this.i18nService.t('disabledKeyConnector');\n                break;\n            // Policies\n            case EventType.Policy_Updated:\n                msg = this.i18nService.t('modifiedPolicyId', this.formatPolicyId(ev));\n\n                const policies = await this.policyService.getAll();\n                const policy = policies.filter(p => p.id === ev.policyId)[0];\n                let p1 = this.getShortId(ev.policyId);\n                if (policy != null) {\n                    p1 = PolicyType[policy.type];\n                }\n\n                humanReadableMsg = this.i18nService.t('modifiedPolicyId', p1);\n                break;\n            // Provider users:\n            case EventType.ProviderUser_Invited:\n                msg = this.i18nService.t('invitedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('invitedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderUser_Confirmed:\n                msg = this.i18nService.t('confirmedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('confirmedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderUser_Updated:\n                msg = this.i18nService.t('editedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderUser_Removed:\n                msg = this.i18nService.t('removedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('removedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderOrganization_Created:\n                msg = this.i18nService.t('createdOrganizationId', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('createdOrganizationId', this.getShortId(ev.providerOrganizationId));\n                break;\n            case EventType.ProviderOrganization_Added:\n                msg = this.i18nService.t('addedOrganizationId', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('addedOrganizationId', this.getShortId(ev.providerOrganizationId));\n                break;\n            case EventType.ProviderOrganization_Removed:\n                msg = this.i18nService.t('removedOrganizationId', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('removedOrganizationId', this.getShortId(ev.providerOrganizationId));\n                break;\n            case EventType.ProviderOrganization_VaultAccessed:\n                msg = this.i18nService.t('accessedClientVault', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('accessedClientVault', this.getShortId(ev.providerOrganizationId));\n                break;\n            default:\n                break;\n        }\n        return {\n            message: msg === '' ? null : msg,\n            humanReadableMessage: humanReadableMsg === '' ? null : humanReadableMsg,\n        };\n    }\n\n    private getAppInfo(deviceType: DeviceType): [string, string] {\n        switch (deviceType) {\n            case DeviceType.Android:\n                return ['fa-android', this.i18nService.t('mobile') + ' - Android'];\n            case DeviceType.iOS:\n                return ['fa-apple', this.i18nService.t('mobile') + ' - iOS'];\n            case DeviceType.UWP:\n                return ['fa-windows', this.i18nService.t('mobile') + ' - Windows'];\n            case DeviceType.ChromeExtension:\n                return ['fa-chrome', this.i18nService.t('extension') + ' - Chrome'];\n            case DeviceType.FirefoxExtension:\n                return ['fa-firefox', this.i18nService.t('extension') + ' - Firefox'];\n            case DeviceType.OperaExtension:\n                return ['fa-opera', this.i18nService.t('extension') + ' - Opera'];\n            case DeviceType.EdgeExtension:\n                return ['fa-edge', this.i18nService.t('extension') + ' - Edge'];\n            case DeviceType.VivaldiExtension:\n                return ['fa-puzzle-piece', this.i18nService.t('extension') + ' - Vivaldi'];\n            case DeviceType.SafariExtension:\n                return ['fa-safari', this.i18nService.t('extension') + ' - Safari'];\n            case DeviceType.WindowsDesktop:\n                return ['fa-windows', this.i18nService.t('desktop') + ' - Windows'];\n            case DeviceType.MacOsDesktop:\n                return ['fa-apple', this.i18nService.t('desktop') + ' - macOS'];\n            case DeviceType.LinuxDesktop:\n                return ['fa-linux', this.i18nService.t('desktop') + ' - Linux'];\n            case DeviceType.ChromeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Chrome'];\n            case DeviceType.FirefoxBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Firefox'];\n            case DeviceType.OperaBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Opera'];\n            case DeviceType.SafariBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Safari'];\n            case DeviceType.VivaldiBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Vivaldi'];\n            case DeviceType.EdgeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Edge'];\n            case DeviceType.IEBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - IE'];\n            case DeviceType.UnknownBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - ' + this.i18nService.t('unknown')];\n            default:\n                return ['fa-globe', this.i18nService.t('unknown')];\n        }\n    }\n\n    private formatCipherId(ev: EventResponse, options: EventOptions) {\n        const shortId = this.getShortId(ev.cipherId);\n        if (ev.organizationId == null || !options.cipherInfo) {\n            return '<code>' + shortId + '</code>';\n        }\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/vault?search=' + shortId +\n            '&viewEvents=' + ev.cipherId);\n        return a.outerHTML;\n    }\n\n    private formatGroupId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.groupId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/groups?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatCollectionId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.collectionId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/collections?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatOrgUserId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.organizationUserId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/people?search=' + shortId +\n            '&viewEvents=' + ev.organizationUserId);\n        return a.outerHTML;\n    }\n\n    private formatProviderUserId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.providerUserId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/providers/' + ev.providerId + '/manage/people?search=' + shortId +\n            '&viewEvents=' + ev.providerUserId);\n        return a.outerHTML;\n    }\n\n    private formatProviderOrganizationId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.providerOrganizationId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/providers/' + ev.providerId + '/clients?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatPolicyId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.policyId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/policies?policyId=' + ev.policyId);\n        return a.outerHTML;\n    }\n\n    private makeAnchor(shortId: string) {\n        const a = document.createElement('a');\n        a.title = this.i18nService.t('view');\n        a.innerHTML = '<code>' + shortId + '</code>';\n        return a;\n    }\n\n    private getShortId(id: string) {\n        return id?.substring(0, 8);\n    }\n\n    private toDateTimeLocalString(date: Date) {\n        return date.getFullYear() +\n            '-' + this.pad(date.getMonth() + 1) +\n            '-' + this.pad(date.getDate()) +\n            'T' + this.pad(date.getHours()) +\n            ':' + this.pad(date.getMinutes());\n    }\n\n    private pad(num: number) {\n        const norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n    }\n}\n\nexport class EventInfo {\n    message: string;\n    humanReadableMessage: string;\n    appIcon: string;\n    appName: string;\n}\n\nexport class EventOptions {\n    cipherInfo = true;\n}\n","import {\n    animate,\n    style,\n    transition,\n    trigger,\n} from '@angular/animations';\nimport {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nimport { KeyConnectorService } from 'jslib-common/abstractions/keyConnector.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { VerificationType } from 'jslib-common/enums/verificationType';\n\nimport { Verification } from 'jslib-common/types/verification';\n\n@Component({\n    selector: 'app-verify-master-password',\n    templateUrl: 'verify-master-password.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: VerifyMasterPasswordComponent,\n        },\n    ],\n    animations: [\n        trigger('sent', [\n            transition(':enter', [\n                style({ opacity: 0 }),\n                animate('100ms', style({ opacity: 1 })),\n            ]),\n        ]),\n    ],\n})\nexport class VerifyMasterPasswordComponent implements ControlValueAccessor, OnInit {\n    usesKeyConnector: boolean = false;\n    disableRequestOTP: boolean = false;\n    sentCode: boolean = false;\n\n    secret = new FormControl('');\n\n    private onChange: (value: Verification) => void;\n\n    constructor(private keyConnectorService: KeyConnectorService,\n        private userVerificationService: UserVerificationService) { }\n\n    async ngOnInit() {\n        this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n        this.processChanges(this.secret.value);\n\n        this.secret.valueChanges.subscribe(secret => this.processChanges(secret));\n    }\n\n    async requestOTP() {\n        if (this.usesKeyConnector) {\n            this.disableRequestOTP = true;\n            try {\n                await this.userVerificationService.requestOTP();\n                this.sentCode = true;\n            } finally {\n                this.disableRequestOTP = false;\n            }\n        }\n    }\n\n    writeValue(obj: any): void {\n        this.secret.setValue(obj);\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        // Not implemented\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disableRequestOTP = isDisabled;\n        if (isDisabled) {\n            this.secret.disable();\n        } else {\n            this.secret.enable();\n        }\n    }\n\n    private processChanges(secret: string) {\n        if (this.onChange == null) {\n            return;\n        }\n\n        this.onChange({\n            type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n            secret: secret,\n        });\n    }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [formControl]=\"secret\" required appAutofocus appInputVerbatim> <small class=\"form-text text-muted\">{{'confirmIdentity' | i18n}}</small> </ng-container> <ng-container *ngIf=\"usesKeyConnector\"> <div class=\"form-group\"> <label class=\"d-block\">{{'sendVerificationCode' | i18n}}</label> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"requestOTP()\" [disabled]=\"disableRequestOTP\"> {{'sendCode' | i18n}} </button> <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\"> <i class=\"fa fa-check-circle-o\" aria-hidden=\"true\"></i> {{'codeSent' | i18n}} </span> </div> <div class=\"form-group\"> <label for=\"verificationCode\">{{'verificationCode' | i18n}}</label> <input id=\"verificationCode\" type=\"input\" name=\"verificationCode\" class=\"form-control\" [formControl]=\"secret\" required appAutofocus appInputVerbatim> <small class=\"form-text text-muted\">{{'confirmIdentity' | i18n}}</small> </div> </ng-container> ","import { ItemView } from './itemView';\nimport { LoginUriView } from './loginUriView';\n\nimport { Utils } from '../../misc/utils';\n\nimport { Login } from '../domain/login';\n\nimport { LoginLinkedId as LinkedId } from '../../enums/linkedIdType';\n\nimport { linkedFieldOption } from '../../misc/linkedFieldOption.decorator';\n\nexport class LoginView extends ItemView {\n    @linkedFieldOption(LinkedId.Username)\n    username: string = null;\n    @linkedFieldOption(LinkedId.Password)\n    password: string = null;\n\n    passwordRevisionDate?: Date = null;\n    totp: string = null;\n    uris: LoginUriView[] = null;\n    autofillOnPageLoad: boolean = null;\n\n    constructor(l?: Login) {\n        super();\n        if (!l) {\n            return;\n        }\n\n        this.passwordRevisionDate = l.passwordRevisionDate;\n        this.autofillOnPageLoad = l.autofillOnPageLoad;\n    }\n\n    get uri(): string {\n        return this.hasUris ? this.uris[0].uri : null;\n    }\n\n    get maskedPassword(): string {\n        return this.password != null ? '••••••••' : null;\n    }\n\n    get subTitle(): string {\n        return this.username;\n    }\n\n    get canLaunch(): boolean {\n        return this.hasUris && this.uris.some(u => u.canLaunch);\n    }\n\n    get hasTotp(): boolean {\n        return !Utils.isNullOrWhitespace(this.totp);\n    }\n\n    get launchUri(): string {\n        if (this.hasUris) {\n            const uri = this.uris.find(u => u.canLaunch);\n            if (uri != null) {\n                return uri.launchUri;\n            }\n        }\n        return null;\n    }\n\n    get hasUris(): boolean {\n        return this.uris != null && this.uris.length > 0;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\nimport { OrganizationCreateRequest } from 'jslib-common/models/request/organizationCreateRequest';\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUpgradeRequest } from 'jslib-common/models/request/organizationUpgradeRequest';\nimport { ProviderOrganizationCreateRequest } from 'jslib-common/models/request/provider/providerOrganizationCreateRequest';\n\nimport { PlanResponse } from 'jslib-common/models/response/planResponse';\n\n@Component({\n    selector: 'app-organization-plans',\n    templateUrl: 'organization-plans.component.html',\n})\nexport class OrganizationPlansComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n    @Input() organizationId: string;\n    @Input() showFree = true;\n    @Input() showCancel = false;\n    @Input() acceptingSponsorship = false;\n    @Input() product: ProductType = ProductType.Free;\n    @Input() plan: PlanType = PlanType.Free;\n    @Input() providerId: string;\n    @Output() onSuccess = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    loading: boolean = true;\n    selfHosted: boolean = false;\n    ownedBusiness: boolean = false;\n    premiumAccessAddon: boolean = false;\n    additionalStorage: number = 0;\n    additionalSeats: number = 0;\n    name: string;\n    billingEmail: string;\n    clientOwnerEmail: string;\n    businessName: string;\n    productTypes = ProductType;\n    formPromise: Promise<any>;\n    singleOrgPolicyBlock: boolean = false;\n    discount = 0;\n\n    plans: PlanResponse[];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService, private router: Router, private syncService: SyncService,\n        private policyService: PolicyService, private userService: UserService, private logService: LogService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        if (!this.selfHosted) {\n            const plans = await this.apiService.getPlans();\n            this.plans = plans.data;\n            if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n                this.ownedBusiness = true;\n            }\n        }\n\n        if (this.providerId) {\n            this.ownedBusiness = true;\n            this.changedOwnedBusiness();\n        }\n\n        this.loading = false;\n    }\n\n    get createOrganization() {\n        return this.organizationId == null;\n    }\n\n    get selectedPlan() {\n        return this.plans.find(plan => plan.type === this.plan);\n    }\n\n    get selectedPlanInterval() {\n        return this.selectedPlan.isAnnual\n            ? 'year'\n            : 'month';\n    }\n\n    get selectableProducts() {\n        let validPlans = this.plans.filter(plan => plan.type !== PlanType.Custom);\n\n        if (this.ownedBusiness) {\n            validPlans = validPlans.filter(plan => plan.canBeUsedByBusiness);\n        }\n\n        if (!this.showFree) {\n            validPlans = validPlans.filter(plan => plan.product !== ProductType.Free);\n        }\n\n        validPlans = validPlans\n        .filter(plan => !plan.legacyYear\n            && !plan.disabled\n            && (plan.isAnnual || plan.product === this.productTypes.Free));\n\n        if (this.acceptingSponsorship) {\n            const familyPlan = this.plans.find(plan => plan.type === PlanType.FamiliesAnnually);\n            this.discount = familyPlan.basePrice;\n            validPlans = [\n                familyPlan,\n            ];\n        }\n\n        return validPlans;\n    }\n\n    get selectablePlans() {\n        return this.plans.filter(plan => !plan.legacyYear && !plan.disabled && plan.product === this.product);\n    }\n\n    additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n        if (!selectedPlan.isAnnual) {\n            return selectedPlan.additionalStoragePricePerGb;\n        }\n        return selectedPlan.additionalStoragePricePerGb / 12;\n    }\n\n    seatPriceMonthly(selectedPlan: PlanResponse) {\n        if (!selectedPlan.isAnnual) {\n            return selectedPlan.seatPrice;\n        }\n        return selectedPlan.seatPrice / 12;\n    }\n\n    additionalStorageTotal(plan: PlanResponse): number {\n        if (!plan.hasAdditionalStorageOption) {\n            return 0;\n        }\n\n        return plan.additionalStoragePricePerGb * Math.abs(this.additionalStorage || 0);\n    }\n\n    seatTotal(plan: PlanResponse): number {\n        if (!plan.hasAdditionalSeatsOption) {\n            return 0;\n        }\n\n        return plan.seatPrice * Math.abs(this.additionalSeats || 0);\n    }\n\n    get subtotal() {\n        let subTotal = this.selectedPlan.basePrice;\n        if (this.selectedPlan.hasAdditionalSeatsOption && this.additionalSeats) {\n            subTotal += this.seatTotal(this.selectedPlan);\n        }\n        if (this.selectedPlan.hasAdditionalStorageOption && this.additionalStorage) {\n            subTotal += this.additionalStorageTotal(this.selectedPlan);\n        }\n        if (this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon) {\n            subTotal += this.selectedPlan.premiumAccessOptionPrice;\n        }\n        return subTotal - this.discount;\n    }\n\n    get freeTrial() {\n        return this.selectedPlan.trialPeriodDays != null;\n    }\n\n    get taxCharges() {\n        return this.taxComponent != null && this.taxComponent.taxRate != null ?\n            (this.taxComponent.taxRate / 100) * this.subtotal :\n            0;\n    }\n\n    get total() {\n        return (this.subtotal + this.taxCharges) || 0;\n    }\n\n    get paymentDesc() {\n        if (this.acceptingSponsorship) {\n            return this.i18nService.t('paymentSponsored');\n        } else if (this.freeTrial && this.createOrganization) {\n            return this.i18nService.t('paymentChargedWithTrial');\n        } else {\n            return this.i18nService.t('paymentCharged', this.i18nService.t(this.selectedPlanInterval));\n        }\n    }\n\n    changedProduct() {\n        this.plan = this.selectablePlans[0].type;\n        if (!this.selectedPlan.hasPremiumAccessOption) {\n            this.premiumAccessAddon = false;\n        }\n        if (!this.selectedPlan.hasAdditionalStorageOption) {\n            this.additionalStorage = 0;\n        }\n        if (!this.selectedPlan.hasAdditionalSeatsOption) {\n            this.additionalSeats = 0;\n        } else if (!this.additionalSeats && !this.selectedPlan.baseSeats &&\n            this.selectedPlan.hasAdditionalSeatsOption) {\n            this.additionalSeats = 1;\n        }\n    }\n\n    changedOwnedBusiness() {\n        if (!this.ownedBusiness || this.selectedPlan.canBeUsedByBusiness) {\n            return;\n        }\n        this.product = ProductType.Teams;\n        this.plan = PlanType.TeamsAnnually;\n    }\n\n    changedCountry() {\n        this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== 'US';\n        // Bank Account payments are only available for US customers\n        if (this.paymentComponent.hideBank &&\n            this.paymentComponent.method === PaymentMethodType.BankAccount) {\n            this.paymentComponent.method = PaymentMethodType.Card;\n            this.paymentComponent.changeMethod();\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    async submit() {\n        this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n        if (this.singleOrgPolicyBlock) {\n            return;\n        }\n\n        try {\n            const doSubmit = async (): Promise<string> => {\n                let orgId: string = null;\n                if (this.createOrganization) {\n                    const shareKey = await this.cryptoService.makeShareKey();\n                    const key = shareKey[0].encryptedString;\n                    const collection = await this.cryptoService.encrypt(\n                        this.i18nService.t('defaultCollection'), shareKey[1]);\n                    const collectionCt = collection.encryptedString;\n                    const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n                    if (this.selfHosted) {\n                        orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n                    } else {\n                        orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n                    }\n\n                    this.toasterService.popAsync('success', this.i18nService.t('organizationCreated'), this.i18nService.t('organizationReadyToGo'));\n                } else {\n                    orgId = await this.updateOrganization(orgId);\n                    this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpgraded'));\n                }\n\n                await this.apiService.refreshIdentityToken();\n                await this.syncService.fullSync(true);\n                if (!this.acceptingSponsorship) {\n                    this.router.navigate(['/organizations/' + orgId]);\n                }\n\n                return orgId;\n            };\n\n            this.formPromise = doSubmit();\n            const orgId = await this.formPromise;\n            this.onSuccess.emit({ organizationId: orgId });\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    private async userHasBlockingSingleOrgPolicy() {\n        return this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n    }\n\n    private async updateOrganization(orgId: string) {\n        const request = new OrganizationUpgradeRequest();\n        request.businessName = this.ownedBusiness ? this.businessName : null;\n        request.additionalSeats = this.additionalSeats;\n        request.additionalStorageGb = this.additionalStorage;\n        request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon;\n        request.planType = this.selectedPlan.type;\n        request.billingAddressCountry = this.taxComponent.taxInfo.country;\n        request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n        // Retrieve org info to backfill pub/priv key if necessary\n        const org = await this.userService.getOrganization(this.organizationId);\n        if (!org.hasPublicAndPrivateKeys) {\n            const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n            request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        }\n\n        const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n        if (!result.success && result.paymentIntentClientSecret != null) {\n            await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n        }\n        return this.organizationId;\n    }\n\n    private async createCloudHosted(key: string, collectionCt: string, orgKeys: [string, EncString], orgKey: SymmetricCryptoKey) {\n        const request = new OrganizationCreateRequest();\n        request.key = key;\n        request.collectionName = collectionCt;\n        request.name = this.name;\n        request.billingEmail = this.billingEmail;\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n        if (this.selectedPlan.type === PlanType.Free) {\n            request.planType = PlanType.Free;\n        } else {\n            const tokenResult = await this.paymentComponent.createPaymentToken();\n\n            request.paymentToken = tokenResult[0];\n            request.paymentMethodType = tokenResult[1];\n            request.businessName = this.ownedBusiness ? this.businessName : null;\n            request.additionalSeats = this.additionalSeats;\n            request.additionalStorageGb = this.additionalStorage;\n            request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption &&\n                this.premiumAccessAddon;\n            request.planType = this.selectedPlan.type;\n            request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n            request.billingAddressCountry = this.taxComponent.taxInfo.country;\n            if (this.taxComponent.taxInfo.includeTaxId) {\n                request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n                request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n                request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n                request.billingAddressCity = this.taxComponent.taxInfo.city;\n                request.billingAddressState = this.taxComponent.taxInfo.state;\n            }\n        }\n\n        if (this.providerId) {\n            const providerRequest = new ProviderOrganizationCreateRequest(this.clientOwnerEmail, request);\n            const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n            providerRequest.organizationCreateRequest.key = (await this.cryptoService.encrypt(orgKey.key, providerKey)).encryptedString;\n            const orgId = (await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)).organizationId;\n\n            return orgId;\n        } else {\n            return (await this.apiService.postOrganization(request)).id;\n        }\n    }\n\n    private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            throw new Error(this.i18nService.t('selectFile'));\n        }\n\n        const fd = new FormData();\n        fd.append('license', files[0]);\n        fd.append('key', key);\n        fd.append('collectionName', collectionCt);\n        const response = await this.apiService.postOrganizationLicense(fd);\n        const orgId = response.id;\n\n        // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        await this.apiService.postOrganizationKeys(orgId, request);\n\n        return orgId;\n    }\n}\n","<ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"createOrganization && selfHosted\"> <p>{{'uploadLicenseFileOrg' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_organization_license.json'}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> </ng-container> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!loading && !selfHosted && this.plans\"> <h2 class=\"mt-5\">{{'generalInformation' | i18n}}</h2> <div class=\"row\" *ngIf=\"createOrganization\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'organizationName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group col-6\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"billingEmail\" required> </div> <div class=\"form-group col-6\" *ngIf=\"!!providerId\"> <label for=\"email\">{{'clientOwnerEmail' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"clientOwnerEmail\" required> <small class=\"text-muted\">{{'clientOwnerDesc' | i18n : '20'}}</small> </div> </div> <div *ngIf=\"!providerId && !acceptingSponsorship\"> <div class=\"form-group form-check\"> <input id=\"ownedBusiness\" class=\"form-check-input\" type=\"checkbox\" name=\"OwnedBusiness\" [(ngModel)]=\"ownedBusiness\" (change)=\"changedOwnedBusiness()\"> <label for=\"ownedBusiness\" class=\"form-check-label\">{{'accountOwnedBusiness' | i18n}}</label> </div> <div class=\"row\" *ngIf=\"ownedBusiness\"> <div class=\"form-group col-6\"> <label for=\"businessName\">{{'businessName' | i18n}}</label> <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"businessName\"> </div> </div> </div> <h2 class=\"mt-5\">{{'chooseYourPlan' | i18n}}</h2> <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"product\" id=\"product{{selectableProduct.product}}\" [value]=\"selectableProduct.product\" [(ngModel)]=\"product\" (change)=\"changedProduct()\"> <label class=\"form-check-label\" for=\"product{{selectableProduct.product}}\"> {{ selectableProduct.nameLocalizationKey | i18n}} <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n : '1'}}</small> <ng-container *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"> <small>• {{'includeAllTeamsFeatures' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSso\">• {{'includeSsoAuthentication' | i18n}}</small> <small *ngIf=\"selectableProduct.hasPolicies\">• {{'includeEnterprisePolicies' | i18n}}</small> <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\">• {{'xDayFreeTrial' | i18n : selectableProduct.trialPeriodDays }} </small> </ng-container> <ng-template #fullFeatureList> <small *ngIf=\"selectableProduct.product == productTypes.Free\">• {{'limitedUsers' | i18n : selectableProduct.maxUsers }}</small> <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\">• {{'addShareLimitedUsers' | i18n : selectableProduct.maxUsers}}</small> <small *ngIf=\"!selectableProduct.maxUsers\">• {{'addShareUnlimitedUsers' | i18n}}</small> <small *ngIf=\"selectableProduct.maxCollections\">• {{'limitedCollections' | i18n : selectableProduct.maxCollections }}</small> <small *ngIf=\"selectableProduct.maxAdditionalSeats\">• {{'addShareLimitedUsers' | i18n : selectableProduct.maxAdditionalSeats }}</small> <small *ngIf=\"!selectableProduct.maxCollections\">• {{'createUnlimitedCollections' | i18n}}</small> <small *ngIf=\"selectableProduct.baseStorageGb\">• {{'gbEncryptedFileStorage' | i18n : selectableProduct.baseStorageGb + 'GB'}}</small> <small *ngIf=\"selectableProduct.hasGroups\">• {{'controlAccessWithGroups' | i18n}}</small> <small *ngIf=\"selectableProduct.hasApi\">• {{'trackAuditLogs' | i18n}}</small> <small *ngIf=\"selectableProduct.hasDirectory\">• {{'syncUsersFromDirectory' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small> <small *ngIf=\"selectableProduct.usersGetPremium\">• {{'usersGetPremium' | i18n}}</small> <small *ngIf=\"selectableProduct.product != productTypes.Free\">• {{'priorityCustomerSupport' | i18n}}</small> <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\">• {{'xDayFreeTrial' | i18n : selectableProduct.trialPeriodDays }} </small> </ng-template> <span *ngIf=\"selectableProduct.product != productTypes.Free\"> <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\"> {{selectableProduct.basePrice / 12 | currency:'$'}} /{{'month' | i18n}}, {{'includesXUsers' | i18n : selectableProduct.baseSeats}} <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\"> {{('additionalUsers' | i18n).toLowerCase()}} {{selectableProduct.seatPrice / 12 | currency:'$'}} /{{'month' | i18n}} </ng-container> </ng-container> </span> <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\"> {{'costPerUser' | i18n : (selectableProduct.seatPrice / 12 | currency:'$')}} /{{'month' | i18n}} </span> <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{'freeForever' | i18n}}</span> </label> </div> <div *ngIf=\"product !== productTypes.Free\"> <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\"> <h2 class=\"mt-5\">{{'users' | i18n}}</h2> <div class=\"row\"> <div class=\"col-6\"> <label for=\"additionalSeats\">{{'userSeats' | i18n}}</label> <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\" [(ngModel)]=\"additionalSeats\" min=\"1\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\" required> <small class=\"text-muted form-text\">{{'userSeatsHowManyDesc' | i18n}}</small> </div> </div> </ng-container> <h2 class=\"mt-5\">{{'addons' | i18n}}</h2> <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\"> <div class=\"form-group col-6\"> <label for=\"additionalSeats\">{{'additionalUserSeats' | i18n}}</label> <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\" [(ngModel)]=\"additionalSeats\" min=\"0\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'userSeatsAdditionalDesc' | i18n : selectedPlan.baseSeats : (seatPriceMonthly(selectedPlan) | currency:'$')}}</small> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label> <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\" [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\" placeholder=\"{{'additionalStorageGbDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (additionalStoragePriceMonthly(selectedPlan) | currency:'$') : ('month' | i18n)}}</small> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\"> <div class=\"form-check\"> <input id=\"premiumAccess\" class=\"form-check-input\" type=\"checkbox\" name=\"PremiumAccessAddon\" [(ngModel)]=\"premiumAccessAddon\"> <label for=\"premiumAccess\" class=\"form-check-label bold\">{{'premiumAccess' | i18n}}</label> </div> <small class=\"text-muted form-text\">{{'premiumAccessDesc' | i18n : (3.33 | currency:'$') : ('month' | i18n)}}</small> </div> </div> <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2> <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\"> <input class=\"form-check-input\" type=\"radio\" name=\"BillingInterval\" id=\"interval{{selectablePlan.type}}\" [value]=\"selectablePlan.type\" [(ngModel)]=\"plan\"> <label class=\"form-check-label\" for=\"interval{{selectablePlan.type}}\"> <ng-container *ngIf=\"selectablePlan.isAnnual\"> {{'annually' | i18n}} <small *ngIf=\"selectablePlan.basePrice\"> {{'basePrice' | i18n}}: {{ selectablePlan.basePrice / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\"> <span style=\"text-decoration:line-through\">{{selectablePlan.basePrice | currency:'$'}}</span> {{'freeWithSponsorship' | i18n}} </ng-container> <ng-template #notAcceptingSponsorship> {{selectablePlan.basePrice | currency:'$'}} /{{'year' | i18n}} </ng-template> </small> <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\"> <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span> <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span> {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan) | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\"> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times; {{selectablePlan.additionalStoragePricePerGb / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\"> {{'premiumAccess' | i18n}}: {{selectablePlan.premiumAccessOptionCost / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{40 | currency:'$'}} /{{'year' | i18n}} </small> </ng-container> <ng-container *ngIf=\"!selectablePlan.isAnnual\"> {{'monthly' | i18n}} <small *ngIf=\"selectablePlan.basePrice\"> {{'basePrice' | i18n}}: {{selectablePlan.basePrice | currency:'$'}} {{'monthAbbr' | i18n}} = {{selectablePlan.basePrice | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\"> <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span> <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span> {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice | currency:'$'}} {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan) | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\"> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times; {{selectablePlan.additionalStoragePricePerGb | currency:'$'}} {{'monthAbbr' | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\"> {{'premiumAccess' | i18n}}: {{selectablePlan.premiumAccessOptionCost | currency:'$'}} {{'monthAbbr' | i18n}} = {{40 | currency:'$'}} /{{'month' | i18n}} </small> </ng-container> </label> </div> <hr class=\"my-3\"> <h2 class=\"spaced-header mb-4\">{{ (createOrganization ? 'paymentInformation' : 'billingInformation') | i18n}} </h2> <small class=\"text-muted font-italic mb-3 d-block\"> {{paymentDesc}} </small> <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment> <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info> <div id=\"price\" class=\"my-4\"> <div class=\"text-muted text-sm\"> {{ 'planPrice' | i18n }}: {{ subtotal | currency: 'USD $' }} <br/> <ng-container> {{ 'estimatedTax' | i18n }}: {{ taxCharges | currency: 'USD $' }} </ng-container> </div> <hr class=\"my-1 col-3 ml-0\"> <p class=\"text-lg\"><strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}}/{{selectedPlanInterval | i18n}}</p> </div> <ng-container *ngIf=\"!createOrganization\"> <app-payment [showMethods]=\"false\"></app-payment> </ng-container> </div> <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\"> <app-callout [type]=\"'error'\">{{'singleOrgBlockCreateMessage' | i18n}}</app-callout> </div> <div class=\"mt-4\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\"> {{'cancel' | i18n}} </button> </div> </form> ","import { CollectionData } from '../data/collectionData';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nexport class Collection extends Domain {\n    id: string;\n    organizationId: string;\n    name: EncString;\n    externalId: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            organizationId: null,\n            name: null,\n            externalId: null,\n            readOnly: null,\n            hidePasswords: null,\n        }, alreadyEncrypted, ['id', 'organizationId', 'externalId', 'readOnly', 'hidePasswords']);\n    }\n\n    decrypt(): Promise<CollectionView> {\n        return this.decryptObj(new CollectionView(this), {\n            name: null,\n        }, this.organizationId);\n    }\n}\n","import { View } from './view';\n\nimport { Collection } from '../domain/collection';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nimport { CollectionGroupDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionView implements View, ITreeNodeObject {\n    id: string = null;\n    organizationId: string = null;\n    name: string = null;\n    externalId: string = null;\n    readOnly: boolean = null;\n    hidePasswords: boolean = null;\n\n    constructor(c?: Collection | CollectionGroupDetailsResponse) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.externalId = c.externalId;\n        if (c instanceof Collection) {\n            this.readOnly = c.readOnly;\n            this.hidePasswords = c.hidePasswords;\n        }\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { AttachmentData } from './attachmentData';\nimport { CardData } from './cardData';\nimport { FieldData } from './fieldData';\nimport { IdentityData } from './identityData';\nimport { LoginData } from './loginData';\nimport { PasswordHistoryData } from './passwordHistoryData';\nimport { SecureNoteData } from './secureNoteData';\n\nimport { CipherResponse } from '../response/cipherResponse';\n\nexport class CipherData {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    userId: string;\n    edit: boolean;\n    viewPassword: boolean;\n    organizationUseTotp: boolean;\n    favorite: boolean;\n    revisionDate: string;\n    type: CipherType;\n    sizeName: string;\n    name: string;\n    notes: string;\n    login?: LoginData;\n    secureNote?: SecureNoteData;\n    card?: CardData;\n    identity?: IdentityData;\n    fields?: FieldData[];\n    attachments?: AttachmentData[];\n    passwordHistory?: PasswordHistoryData[];\n    collectionIds?: string[];\n    deletedDate: string;\n    reprompt: CipherRepromptType;\n\n    constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.folderId = response.folderId;\n        this.userId = userId;\n        this.edit = response.edit;\n        this.viewPassword = response.viewPassword;\n        this.organizationUseTotp = response.organizationUseTotp;\n        this.favorite = response.favorite;\n        this.revisionDate = response.revisionDate;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n        this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n        this.deletedDate = response.deletedDate;\n        this.reprompt = response.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginData(response.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteData(response.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new CardData(response.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityData(response.identity);\n                break;\n            default:\n                break;\n        }\n\n        if (response.fields != null) {\n            this.fields = response.fields.map(f => new FieldData(f));\n        }\n        if (response.attachments != null) {\n            this.attachments = response.attachments.map(a => new AttachmentData(a));\n        }\n        if (response.passwordHistory != null) {\n            this.passwordHistory = response.passwordHistory.map(ph => new PasswordHistoryData(ph));\n        }\n    }\n}\n","export enum CipherRepromptType {\n    None = 0,\n    Password = 1,\n}\n","export enum SendType {\n    Text = 0,\n    File = 1,\n}\n","import { Utils } from '../../misc/utils';\n\nimport { BaseResponse } from './baseResponse';\n\nexport class ErrorResponse extends BaseResponse {\n    message: string;\n    validationErrors: { [key: string]: string[]; };\n    statusCode: number;\n    captchaRequired: boolean;\n    captchaSiteKey: string;\n\n    constructor(response: any, status: number, identityResponse?: boolean) {\n        super(response);\n        let errorModel = null;\n        if (response != null) {\n            const responseErrorModel = this.getResponseProperty('ErrorModel');\n            if (responseErrorModel && identityResponse) {\n                errorModel = responseErrorModel;\n            } else {\n                errorModel = response;\n            }\n        }\n\n        if (errorModel) {\n            this.message = this.getResponseProperty('Message', errorModel);\n            this.validationErrors = this.getResponseProperty('ValidationErrors', errorModel);\n            this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n            this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n        } else {\n            if (status === 429) {\n                this.message = 'Rate limit exceeded. Try again later.';\n            }\n        }\n        this.statusCode = status;\n    }\n\n    getSingleMessage(): string {\n        if (this.validationErrors == null) {\n            return this.message;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            if (this.validationErrors[key].length) {\n                return this.validationErrors[key][0];\n            }\n        }\n        return this.message;\n    }\n\n    getAllMessages(): string[] {\n        const messages: string[] = [];\n        if (this.validationErrors == null) {\n            return messages;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            this.validationErrors[key].forEach((item: string) => {\n                let prefix = '';\n                if (key.indexOf('[') > -1 && key.indexOf(']') > -1) {\n                    const lastSep = key.lastIndexOf('.');\n                    prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + ': ';\n                }\n                messages.push(prefix + item);\n            });\n        }\n        return messages;\n    }\n}\n","export enum EventType {\n    User_LoggedIn = 1000,\n    User_ChangedPassword = 1001,\n    User_Updated2fa = 1002,\n    User_Disabled2fa = 1003,\n    User_Recovered2fa = 1004,\n    User_FailedLogIn = 1005,\n    User_FailedLogIn2fa = 1006,\n    User_ClientExportedVault = 1007,\n    User_UpdatedTempPassword = 1008,\n    User_MigratedKeyToKeyConnector = 1009,\n\n    Cipher_Created = 1100,\n    Cipher_Updated = 1101,\n    Cipher_Deleted = 1102,\n    Cipher_AttachmentCreated = 1103,\n    Cipher_AttachmentDeleted = 1104,\n    Cipher_Shared = 1105,\n    Cipher_UpdatedCollections = 1106,\n    Cipher_ClientViewed = 1107,\n    Cipher_ClientToggledPasswordVisible = 1108,\n    Cipher_ClientToggledHiddenFieldVisible = 1109,\n    Cipher_ClientToggledCardCodeVisible = 1110,\n    Cipher_ClientCopiedPassword = 1111,\n    Cipher_ClientCopiedHiddenField = 1112,\n    Cipher_ClientCopiedCardCode = 1113,\n    Cipher_ClientAutofilled = 1114,\n    Cipher_SoftDeleted = 1115,\n    Cipher_Restored = 1116,\n    Cipher_ClientToggledCardNumberVisible = 1117,\n\n    Collection_Created = 1300,\n    Collection_Updated = 1301,\n    Collection_Deleted = 1302,\n\n    Group_Created = 1400,\n    Group_Updated = 1401,\n    Group_Deleted = 1402,\n\n    OrganizationUser_Invited = 1500,\n    OrganizationUser_Confirmed = 1501,\n    OrganizationUser_Updated = 1502,\n    OrganizationUser_Removed = 1503,\n    OrganizationUser_UpdatedGroups = 1504,\n    OrganizationUser_UnlinkedSso = 1505,\n    OrganizationUser_ResetPassword_Enroll = 1506,\n    OrganizationUser_ResetPassword_Withdraw = 1507,\n    OrganizationUser_AdminResetPassword = 1508,\n    OrganizationUser_ResetSsoLink = 1509,\n    OrganizationUser_FirstSsoLogin = 1510,\n\n    Organization_Updated = 1600,\n    Organization_PurgedVault = 1601,\n    // Organization_ClientExportedVault = 1602,\n    Organization_VaultAccessed = 1603,\n    Organization_EnabledSso = 1604,\n    Organization_DisabledSso = 1605,\n    Organization_EnabledKeyConnector = 1606,\n    Organization_DisabledKeyConnector = 1607,\n\n    Policy_Updated = 1700,\n\n    ProviderUser_Invited = 1800,\n    ProviderUser_Confirmed = 1801,\n    ProviderUser_Updated = 1802,\n    ProviderUser_Removed = 1803,\n\n    ProviderOrganization_Created = 1900,\n    ProviderOrganization_Added = 1901,\n    ProviderOrganization_Removed = 1902,\n    ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum OrganizationUserStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-password-strength',\n    templateUrl: 'password-strength.component.html',\n})\nexport class PasswordStrengthComponent implements OnChanges {\n    @Input() score?: number;\n    @Input() showText = false;\n\n    scoreWidth = 0;\n    color = 'bg-danger';\n    text: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnChanges(): void {\n        this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\n        switch (this.score) {\n            case 4:\n                this.color = 'bg-success';\n                this.text = this.i18nService.t('strong');\n                break;\n            case 3:\n                this.color = 'bg-primary';\n                this.text = this.i18nService.t('good');\n                break;\n            case 2:\n                this.color = 'bg-warning';\n                this.text = this.i18nService.t('weak');\n                break;\n            default:\n                this.color = 'bg-danger';\n                this.text = this.score != null ? this.i18nService.t('weak') : null;\n                break;\n        }\n    }\n}\n","<div class=\"progress\"> <div class=\"progress-bar {{color}}\" role=\"progressbar\" [ngStyle]=\"{width: (scoreWidth + '%')}\" attr.aria-valuenow=\"{{scoreWidth}}\" aria-valuemin=\"0\" aria-valuemax=\"100\"> <ng-container *ngIf=\"showText && text\"> {{text}} </ng-container> </div> </div> ","import { CollectionDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionData {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n    readOnly: boolean;\n\n    constructor(response: CollectionDetailsResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.name = response.name;\n        this.externalId = response.externalId;\n        this.readOnly = response.readOnly;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { VerificationType } from 'jslib-common/enums/verificationType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { Verification } from 'jslib-common/types/verification';\n\nimport { TwoFactorAuthenticatorResponse } from 'jslib-common/models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from 'jslib-common/models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from 'jslib-common/models/response/twoFactorEmailResponse';\nimport { TwoFactorRecoverResponse } from 'jslib-common/models/response/twoFactorRescoverResponse';\nimport { TwoFactorWebAuthnResponse } from 'jslib-common/models/response/twoFactorWebAuthnResponse';\nimport { TwoFactorYubiKeyResponse } from 'jslib-common/models/response/twoFactorYubiKeyResponse';\n\nimport { SecretVerificationRequest } from 'jslib-common/models/request/secretVerificationRequest';\n\ntype TwoFactorResponse = TwoFactorRecoverResponse | TwoFactorDuoResponse | TwoFactorEmailResponse |\n    TwoFactorWebAuthnResponse | TwoFactorAuthenticatorResponse | TwoFactorYubiKeyResponse;\n\n@Component({\n    selector: 'app-two-factor-verify',\n    templateUrl: 'two-factor-verify.component.html',\n})\nexport class TwoFactorVerifyComponent {\n    @Input() type: TwoFactorProviderType;\n    @Input() organizationId: string;\n    @Output() onAuthed = new EventEmitter<any>();\n\n    secret: Verification;\n    formPromise: Promise<TwoFactorResponse>;\n\n    constructor(private apiService: ApiService, private logService: LogService,\n        private userVerificationService: UserVerificationService) { }\n\n    async submit() {\n        let hashedSecret: string;\n\n        try {\n            this.formPromise = this.userVerificationService.buildRequest(this.secret)\n                .then(request => {\n                    hashedSecret = this.secret.type === VerificationType.MasterPassword\n                        ? request.masterPasswordHash\n                        : request.otp;\n                    return this.apiCall(request);\n                });\n\n            const response = await this.formPromise;\n            this.onAuthed.emit({\n                response: response,\n                secret: hashedSecret,\n                verificationType: this.secret.type,\n            });\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n        switch (this.type) {\n            case -1:\n                return this.apiService.getTwoFactorRecover(request);\n            case TwoFactorProviderType.Duo:\n            case TwoFactorProviderType.OrganizationDuo:\n                if (this.organizationId != null) {\n                    return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n                } else {\n                    return this.apiService.getTwoFactorDuo(request);\n                }\n            case TwoFactorProviderType.Email:\n                return this.apiService.getTwoFactorEmail(request);\n            case TwoFactorProviderType.WebAuthn:\n                return this.apiService.getTwoFactorWebAuthn(request);\n            case TwoFactorProviderType.Authenticator:\n                return this.apiService.getTwoFactorAuthenticator(request);\n            case TwoFactorProviderType.Yubikey:\n                return this.apiService.getTwoFactorYubiKey(request);\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-body\"> <p>{{'twoStepLoginAuthDesc' | i18n}}</p> <app-verify-master-password [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\"> </app-verify-master-password> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'continue' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> ","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CipherData } from '../data/cipherData';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Attachment } from './attachment';\nimport { Card } from './card';\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { Password } from './password';\nimport { SecureNote } from './secureNote';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Cipher extends Domain {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    name: EncString;\n    notes: EncString;\n    type: CipherType;\n    favorite: boolean;\n    organizationUseTotp: boolean;\n    edit: boolean;\n    viewPassword: boolean;\n    revisionDate: Date;\n    localData: any;\n    login: Login;\n    identity: Identity;\n    card: Card;\n    secureNote: SecureNote;\n    attachments: Attachment[];\n    fields: Field[];\n    passwordHistory: Password[];\n    collectionIds: string[];\n    deletedDate: Date;\n    reprompt: CipherRepromptType;\n\n    constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            userId: null,\n            organizationId: null,\n            folderId: null,\n            name: null,\n            notes: null,\n        }, alreadyEncrypted, ['id', 'userId', 'organizationId', 'folderId']);\n\n        this.type = obj.type;\n        this.favorite = obj.favorite;\n        this.organizationUseTotp = obj.organizationUseTotp;\n        this.edit = obj.edit;\n        if (obj.viewPassword != null) {\n            this.viewPassword = obj.viewPassword;\n        } else {\n            this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n        }\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n        this.collectionIds = obj.collectionIds;\n        this.localData = localData;\n        this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n        this.reprompt = obj.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new Login(obj.login, alreadyEncrypted);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\n                break;\n            case CipherType.Card:\n                this.card = new Card(obj.card, alreadyEncrypted);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(obj.identity, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n\n        if (obj.attachments != null) {\n            this.attachments = obj.attachments.map(a => new Attachment(a, alreadyEncrypted));\n        } else {\n            this.attachments = null;\n        }\n\n        if (obj.fields != null) {\n            this.fields = obj.fields.map(f => new Field(f, alreadyEncrypted));\n        } else {\n            this.fields = null;\n        }\n\n        if (obj.passwordHistory != null) {\n            this.passwordHistory = obj.passwordHistory.map(ph => new Password(ph, alreadyEncrypted));\n        } else {\n            this.passwordHistory = null;\n        }\n    }\n\n    async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n        const model = new CipherView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, this.organizationId, encKey);\n\n        switch (this.type) {\n            case CipherType.Login:\n                model.login = await this.login.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.SecureNote:\n                model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.Card:\n                model.card = await this.card.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.Identity:\n                model.identity = await this.identity.decrypt(this.organizationId, encKey);\n                break;\n            default:\n                break;\n        }\n\n        const orgId = this.organizationId;\n\n        if (this.attachments != null && this.attachments.length > 0) {\n            const attachments: any[] = [];\n            await this.attachments.reduce((promise, attachment) => {\n                return promise.then(() => {\n                    return attachment.decrypt(orgId, encKey);\n                }).then(decAttachment => {\n                    attachments.push(decAttachment);\n                });\n            }, Promise.resolve());\n            model.attachments = attachments;\n        }\n\n        if (this.fields != null && this.fields.length > 0) {\n            const fields: any[] = [];\n            await this.fields.reduce((promise, field) => {\n                return promise.then(() => {\n                    return field.decrypt(orgId, encKey);\n                }).then(decField => {\n                    fields.push(decField);\n                });\n            }, Promise.resolve());\n            model.fields = fields;\n        }\n\n        if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n            const passwordHistory: any[] = [];\n            await this.passwordHistory.reduce((promise, ph) => {\n                return promise.then(() => {\n                    return ph.decrypt(orgId, encKey);\n                }).then(decPh => {\n                    passwordHistory.push(decPh);\n                });\n            }, Promise.resolve());\n            model.passwordHistory = passwordHistory;\n        }\n\n        return model;\n    }\n\n    toCipherData(userId: string): CipherData {\n        const c = new CipherData();\n        c.id = this.id;\n        c.organizationId = this.organizationId;\n        c.folderId = this.folderId;\n        c.userId = this.organizationId != null ? userId : null;\n        c.edit = this.edit;\n        c.viewPassword = this.viewPassword;\n        c.organizationUseTotp = this.organizationUseTotp;\n        c.favorite = this.favorite;\n        c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n        c.type = this.type;\n        c.collectionIds = this.collectionIds;\n        c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n        c.reprompt = this.reprompt;\n\n        this.buildDataModel(this, c, {\n            name: null,\n            notes: null,\n        });\n\n        switch (c.type) {\n            case CipherType.Login:\n                c.login = this.login.toLoginData();\n                break;\n            case CipherType.SecureNote:\n                c.secureNote = this.secureNote.toSecureNoteData();\n                break;\n            case CipherType.Card:\n                c.card = this.card.toCardData();\n                break;\n            case CipherType.Identity:\n                c.identity = this.identity.toIdentityData();\n                break;\n            default:\n                break;\n        }\n\n        if (this.fields != null) {\n            c.fields = this.fields.map(f => f.toFieldData());\n        }\n        if (this.attachments != null) {\n            c.attachments = this.attachments.map(a => a.toAttachmentData());\n        }\n        if (this.passwordHistory != null) {\n            c.passwordHistory = this.passwordHistory.map(ph => ph.toPasswordHistoryData());\n        }\n        return c;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: 'navbar.component.html',\n})\nexport class NavbarComponent implements OnInit {\n    selfHosted = false;\n    name: string;\n    email: string;\n    providers: Provider[] = [];\n\n    constructor(private messagingService: MessagingService, private platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService, private userService: UserService, private syncService: SyncService) {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.name = await this.tokenService.getName();\n        this.email = await this.tokenService.getEmail();\n        if (this.name == null || this.name.trim() === '') {\n            this.name = this.email;\n        }\n\n        // Ensure provides are loaded\n        if (await this.syncService.getLastSync() == null) {\n            await this.syncService.fullSync(false);\n        }\n        this.providers = await this.userService.getAllProviders();\n    }\n\n    lock() {\n        this.messagingService.send('lockVault');\n    }\n\n    logOut() {\n        this.messagingService.send('logout');\n    }\n}\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{'nav-background-alt': selfHosted}\"> <div class=\"container\"> <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{'pageTitle' | i18n : 'Bitwarden'}}\"> <i class=\"fa fa-shield\" aria-hidden=\"true\"></i> </a> <div class=\"collapse navbar-collapse\"> <ul class=\"navbar-nav\"> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/vault\">{{'myVault' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/sends\">{{'send' | i18n}}</a> </li> <ng-container *ngIf=\"providers.length >= 1\"> <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\"> <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{'provider' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\"> <a class=\"nav-link\" routerLink=\"/providers\">{{'provider' | i18n}}</a> </li> </ng-container> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/tools\">{{'tools' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/settings\">{{'settings' | i18n}}</a> </li> </ul> </div> <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\"> <li class=\"nav-item dropdown\"> <a class=\"nav-item nav-link dropdown-toggle\" href=\"#\" id=\"nav-profile\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"fa fa-user-circle fa-lg\" aria-hidden=\"true\"></i> </a> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"nav-profile\"> <div class=\"dropdown-item-text d-flex align-items-center\" *ngIf=\"name\" appStopProp> <app-avatar [data]=\"name\" [email]=\"email\" size=\"25\" fontSize=\"14\" [circle]=\"true\"></app-avatar> <div class=\"ml-2 overflow-hidden\"> <span>{{'loggedInAs' | i18n}}</span> <small class=\"text-muted\">{{name}}</small> </div> </div> <div class=\"dropdown-divider\"></div> <a class=\"dropdown-item\" href=\"#\" routerLink=\"/settings/account\"> <i class=\"fa fa-fw fa-user\" aria-hidden=\"true\"></i> {{'myAccount' | i18n}} </a> <a class=\"dropdown-item\" href=\"https://help.bitwarden.com\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-fw fa-question-circle\" aria-hidden=\"true\"></i> {{'getHelp' | i18n}} </a> <a class=\"dropdown-item\" href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-fw fa-download\" aria-hidden=\"true\"></i> {{'getApps' | i18n}} </a> <div class=\"dropdown-divider\"></div> <button type=\"button\" class=\"dropdown-item\" (click)=\"lock()\"> <i class=\"fa fa-fw fa-lock\" aria-hidden=\"true\"></i> {{'lockNow' | i18n}} </button> <button type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\"> <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i> {{'logOut' | i18n}} </button> </div> </li> </ul> </div> </nav> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: 'footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = await this.platformUtilsService.getApplicationVersion();\n    }\n}\n","<div class=\"container footer text-muted\"> <div class=\"row\"> <div class=\"col\"> &copy; {{year}}, Bitwarden Inc. </div> <div class=\"col text-center\"></div> <div class=\"col text-right\"> {{'versionNumber' | i18n : version}} </div> </div> </div> ","export enum PlanType {\n    Free = 0,\n    FamiliesAnnually2019 = 1,\n    TeamsMonthly2019 = 2,\n    TeamsAnnually2019 = 3,\n    EnterpriseMonthly2019 = 4,\n    EnterpriseAnnually2019 = 5,\n    Custom = 6,\n    FamiliesAnnually = 7,\n    TeamsMonthly = 8,\n    TeamsAnnually = 9,\n    EnterpriseMonthly = 10,\n    EnterpriseAnnually = 11,\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class PermissionsApi extends BaseResponse {\n    accessEventLogs: boolean;\n    accessImportExport: boolean;\n    accessReports: boolean;\n    /**\n     * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n     * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n     */\n    manageAllCollections: boolean;\n    createNewCollections: boolean;\n    editAnyCollection: boolean;\n    deleteAnyCollection: boolean;\n    /**\n     * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n     * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n     */\n    manageAssignedCollections: boolean;\n    editAssignedCollections: boolean;\n    deleteAssignedCollections: boolean;\n    manageCiphers: boolean;\n    manageGroups: boolean;\n    manageSso: boolean;\n    managePolicies: boolean;\n    manageUsers: boolean;\n    manageResetPassword: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return this;\n        }\n        this.accessEventLogs = this.getResponseProperty('AccessEventLogs');\n        this.accessImportExport = this.getResponseProperty('AccessImportExport');\n        this.accessReports = this.getResponseProperty('AccessReports');\n\n        // For backwards compatibility with Server <= 1.43.0\n        this.manageAllCollections = this.getResponseProperty('ManageAllCollections');\n        this.manageAssignedCollections = this.getResponseProperty('ManageAssignedCollections');\n\n        this.createNewCollections = this.getResponseProperty('CreateNewCollections');\n        this.editAnyCollection = this.getResponseProperty('EditAnyCollection');\n        this.deleteAnyCollection = this.getResponseProperty('DeleteAnyCollection');\n        this.editAssignedCollections = this.getResponseProperty('EditAssignedCollections');\n        this.deleteAssignedCollections = this.getResponseProperty('DeleteAssignedCollections');\n\n        this.manageCiphers = this.getResponseProperty('ManageCiphers');\n        this.manageGroups = this.getResponseProperty('ManageGroups');\n        this.manageSso = this.getResponseProperty('ManageSso');\n        this.managePolicies = this.getResponseProperty('ManagePolicies');\n        this.manageUsers = this.getResponseProperty('ManageUsers');\n        this.manageResetPassword = this.getResponseProperty('ManageResetPassword');\n    }\n}\n","export enum OrganizationUserType {\n    Owner = 0,\n    Admin = 1,\n    User = 2,\n    Manager = 3,\n    Custom = 4,\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { Utils } from '../../misc/utils';\n\nexport class SymmetricCryptoKey {\n    key: ArrayBuffer;\n    encKey?: ArrayBuffer;\n    macKey?: ArrayBuffer;\n    encType: EncryptionType;\n\n    keyB64: string;\n    encKeyB64: string;\n    macKeyB64: string;\n\n    meta: any;\n\n    constructor(key: ArrayBuffer, encType?: EncryptionType) {\n        if (key == null) {\n            throw new Error('Must provide key');\n        }\n\n        if (encType == null) {\n            if (key.byteLength === 32) {\n                encType = EncryptionType.AesCbc256_B64;\n            } else if (key.byteLength === 64) {\n                encType = EncryptionType.AesCbc256_HmacSha256_B64;\n            } else {\n                throw new Error('Unable to determine encType.');\n            }\n        }\n\n        this.key = key;\n        this.encType = encType;\n\n        if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n            this.encKey = key;\n            this.macKey = null;\n        } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n            this.encKey = key.slice(0, 16);\n            this.macKey = key.slice(16, 32);\n        } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n            this.encKey = key.slice(0, 32);\n            this.macKey = key.slice(32, 64);\n        } else {\n            throw new Error('Unsupported encType/key length.');\n        }\n\n        if (this.key != null) {\n            this.keyB64 = Utils.fromBufferToB64(this.key);\n        }\n        if (this.encKey != null) {\n            this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n        }\n        if (this.macKey != null) {\n            this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n        }\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { LoginUriApi } from '../api/loginUriApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nimport { AttachmentRequest } from './attachmentRequest';\nimport { PasswordHistoryRequest } from './passwordHistoryRequest';\n\nexport class CipherRequest {\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    name: string;\n    notes: string;\n    favorite: boolean;\n    login: LoginApi;\n    secureNote: SecureNoteApi;\n    card: CardApi;\n    identity: IdentityApi;\n    fields: FieldApi[];\n    passwordHistory: PasswordHistoryRequest[];\n    // Deprecated, remove at some point and rename attachments2 to attachments\n    attachments: { [id: string]: string; };\n    attachments2: { [id: string]: AttachmentRequest; };\n    lastKnownRevisionDate: Date;\n    reprompt: CipherRepromptType;\n\n    constructor(cipher: Cipher) {\n        this.type = cipher.type;\n        this.folderId = cipher.folderId;\n        this.organizationId = cipher.organizationId;\n        this.name = cipher.name ? cipher.name.encryptedString : null;\n        this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n        this.favorite = cipher.favorite;\n        this.lastKnownRevisionDate = cipher.revisionDate;\n        this.reprompt = cipher.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginApi();\n                this.login.uris = null;\n                this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n                this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n                this.login.passwordRevisionDate = cipher.login.passwordRevisionDate != null ?\n                    cipher.login.passwordRevisionDate.toISOString() : null;\n                this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n                this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n                if (cipher.login.uris != null) {\n                    this.login.uris = cipher.login.uris.map(u => {\n                        const uri = new LoginUriApi();\n                        uri.uri = u.uri != null ? u.uri.encryptedString : null;\n                        uri.match = u.match != null ? u.match : null;\n                        return uri;\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteApi();\n                this.secureNote.type = cipher.secureNote.type;\n                break;\n            case CipherType.Card:\n                this.card = new CardApi();\n                this.card.cardholderName = cipher.card.cardholderName != null ?\n                    cipher.card.cardholderName.encryptedString : null;\n                this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n                this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n                this.card.expMonth = cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n                this.card.expYear = cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n                this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityApi();\n                this.identity.title = cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n                this.identity.firstName = cipher.identity.firstName != null ?\n                    cipher.identity.firstName.encryptedString : null;\n                this.identity.middleName = cipher.identity.middleName != null ?\n                    cipher.identity.middleName.encryptedString : null;\n                this.identity.lastName = cipher.identity.lastName != null ?\n                    cipher.identity.lastName.encryptedString : null;\n                this.identity.address1 = cipher.identity.address1 != null ?\n                    cipher.identity.address1.encryptedString : null;\n                this.identity.address2 = cipher.identity.address2 != null ?\n                    cipher.identity.address2.encryptedString : null;\n                this.identity.address3 = cipher.identity.address3 != null ?\n                    cipher.identity.address3.encryptedString : null;\n                this.identity.city = cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n                this.identity.state = cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n                this.identity.postalCode = cipher.identity.postalCode != null ?\n                    cipher.identity.postalCode.encryptedString : null;\n                this.identity.country = cipher.identity.country != null ?\n                    cipher.identity.country.encryptedString : null;\n                this.identity.company = cipher.identity.company != null ?\n                    cipher.identity.company.encryptedString : null;\n                this.identity.email = cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n                this.identity.phone = cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n                this.identity.ssn = cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n                this.identity.username = cipher.identity.username != null ?\n                    cipher.identity.username.encryptedString : null;\n                this.identity.passportNumber = cipher.identity.passportNumber != null ?\n                    cipher.identity.passportNumber.encryptedString : null;\n                this.identity.licenseNumber = cipher.identity.licenseNumber != null ?\n                    cipher.identity.licenseNumber.encryptedString : null;\n                break;\n            default:\n                break;\n        }\n\n        if (cipher.fields != null) {\n            this.fields = cipher.fields.map(f => {\n                const field = new FieldApi();\n                field.type = f.type;\n                field.name = f.name ? f.name.encryptedString : null;\n                field.value = f.value ? f.value.encryptedString : null;\n                field.linkedId = f.linkedId;\n                return field;\n            });\n        }\n\n        if (cipher.passwordHistory != null) {\n            this.passwordHistory = [];\n            cipher.passwordHistory.forEach(ph => {\n                this.passwordHistory.push({\n                    lastUsedDate: ph.lastUsedDate,\n                    password: ph.password ? ph.password.encryptedString : null,\n                });\n            });\n        }\n\n        if (cipher.attachments != null) {\n            this.attachments = {};\n            this.attachments2 = {};\n            cipher.attachments.forEach(attachment => {\n                const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n                this.attachments[attachment.id] = fileName;\n                const attachmentRequest = new AttachmentRequest();\n                attachmentRequest.fileName = fileName;\n                if (attachment.key != null) {\n                    attachmentRequest.key = attachment.key.encryptedString;\n                }\n                this.attachments2[attachment.id] = attachmentRequest;\n            });\n        }\n    }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nexport class ModalRef {\n\n    onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n    onClose: Observable<any>;           // Initiated close.\n    onClosed: Observable<any>;          // Modal was closed (Remove element from DOM)\n    onShow: Observable<any>;            // Start showing modal\n    onShown: Observable<any>;           // Modal is fully visible\n\n    private readonly _onCreated = new Subject<HTMLElement>();\n    private readonly _onClose = new Subject<any>();\n    private readonly _onClosed = new Subject<any>();\n    private readonly _onShow = new Subject<any>();\n    private readonly _onShown = new Subject<any>();\n    private lastResult: any;\n\n    constructor() {\n        this.onCreated = this._onCreated.asObservable();\n        this.onClose = this._onClose.asObservable();\n        this.onClosed = this._onClosed.asObservable();\n        this.onShow = this._onShow.asObservable();\n        this.onShown = this._onShow.asObservable();\n    }\n\n    show() {\n        this._onShow.next();\n    }\n\n    shown() {\n        this._onShown.next();\n    }\n\n    close(result?: any) {\n        this.lastResult = result;\n        this._onClose.next(result);\n    }\n\n    closed() {\n        this._onClosed.next(this.lastResult);\n    }\n\n    created(el: HTMLElement) {\n        this._onCreated.next(el);\n    }\n\n    onClosedPromise(): Promise<any> {\n        return this.onClosed.pipe(first()).toPromise();\n    }\n}\n","export enum Permissions {\n    AccessEventLogs,\n    AccessImportExport,\n    AccessReports,\n    /**\n     * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n     * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n     */\n    ManageAllCollections,\n    /**\n     * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n     * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n     */\n    ManageAssignedCollections,\n    ManageGroups,\n    ManageOrganization ,\n    ManagePolicies,\n    ManageProvider,\n    ManageUsers,\n    ManageUsersPassword,\n    CreateNewCollections,\n    EditAnyCollection,\n    DeleteAnyCollection,\n    EditAssignedCollections,\n    DeleteAssignedCollections,\n    ManageSso,\n}\n","import { Injectable } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { ProviderAddOrganizationRequest } from 'jslib-common/models/request/provider/providerAddOrganizationRequest';\n\n@Injectable()\nexport class ProviderService {\n    constructor(private cryptoService: CryptoService, private syncService: SyncService, private apiService: ApiService) {}\n\n    async addOrganizationToProvider(providerId: string, organizationId: string) {\n        const orgKey = await this.cryptoService.getOrgKey(organizationId);\n        const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n        const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n        const request = new ProviderAddOrganizationRequest();\n        request.organizationId = organizationId;\n        request.key = encryptedOrgKey.encryptedString;\n\n        const response = await this.apiService.postProviderAddOrganization(providerId, request);\n        await this.syncService.fullSync(true);\n        return response;\n    }\n\n    async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n        await this.apiService.deleteProviderOrganization(providerId, organizationId);\n        await this.syncService.fullSync(true);\n    }\n}\n","export enum PaymentMethodType {\n    Card = 0,\n    BankAccount = 1,\n    PayPal = 2,\n    BitPay = 3,\n    Credit = 4,\n    WireTransfer = 5,\n    AppleInApp = 6,\n    GoogleInApp = 7,\n    Check = 8,\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n    ActivatedRoute,\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Injectable()\nexport class RouterService {\n    private previousUrl: string = undefined;\n    private currentUrl: string = undefined;\n\n    constructor(private router: Router, private activatedRoute: ActivatedRoute,\n        private titleService: Title, i18nService: I18nService) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n\n                let title = i18nService.t('pageTitle', 'Bitwarden');\n                let titleId: string = null;\n                let rawTitle: string = null;\n                let child = this.activatedRoute.firstChild;\n                while (child != null) {\n                    if (child.firstChild != null) {\n                        child = child.firstChild;\n                    } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\n                        rawTitle = child.snapshot.data.title;\n                        break;\n                    } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\n                        titleId = child.snapshot.data.titleId;\n                        break;\n                    } else {\n                        titleId = null;\n                        rawTitle = null;\n                        break;\n                    }\n                }\n\n                if (titleId != null || rawTitle != null) {\n                    const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n                    if (newTitle != null && newTitle !== '') {\n                        title = (newTitle + ' | ' + title);\n                    }\n                }\n                this.titleService.setTitle(title);\n            }\n        });\n    }\n\n    getPreviousUrl() {\n        return this.previousUrl;\n    }\n\n    setPreviousUrl(url: string) {\n        this.previousUrl = url;\n    }\n}\n","export enum KdfType {\n    PBKDF2_SHA256 = 0,\n}\n","import { BasePolicy } from '../organizations/policies/base-policy.component';\n\nexport class PolicyListService {\n    private policies: BasePolicy[] = [];\n\n    addPolicies(policies: BasePolicy[]) {\n        this.policies.push(...policies);\n    }\n\n    getPolicies(): BasePolicy[] {\n        return this.policies;\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { VerificationType } from 'jslib-common/enums/verificationType';\n\nimport { SecretVerificationRequest } from 'jslib-common/models/request/secretVerificationRequest';\nimport { TwoFactorProviderRequest } from 'jslib-common/models/request/twoFactorProviderRequest';\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n    @Output() onUpdated = new EventEmitter<boolean>();\n\n    type: TwoFactorProviderType;\n    organizationId: string;\n    twoFactorProviderType = TwoFactorProviderType;\n    enabled = false;\n    authed = false;\n\n    protected hashedSecret: string;\n    protected verificationType: VerificationType;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected platformUtilsService: PlatformUtilsService,\n        protected logService: LogService, protected userVerificationService: UserVerificationService) { }\n\n    protected auth(authResponse: any) {\n        this.hashedSecret = authResponse.secret;\n        this.verificationType = authResponse.verificationType;\n        this.authed = true;\n    }\n\n    protected async enable(enableFunction: () => Promise<void>) {\n        try {\n            await enableFunction();\n            this.onUpdated.emit(true);\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    protected async disable(promise: Promise<any>) {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('twoStepDisableDesc'),\n            this.i18nService.t('disable'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            const request = await this.buildRequestModel(TwoFactorProviderRequest);\n            request.type = this.type;\n            if (this.organizationId != null) {\n                promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n            } else {\n                promise = this.apiService.putTwoFactorDisable(request);\n            }\n            await promise;\n            this.enabled = false;\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepDisabled'));\n            this.onUpdated.emit(false);\n        }  catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    protected async buildRequestModel<T extends SecretVerificationRequest>(requestClass: new() => T)  {\n        return this.userVerificationService.buildRequest({\n            secret: this.hashedSecret,\n            type: this.verificationType,\n        }, requestClass, true);\n    }\n}\n","import {\n    Directive,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { AddEditComponent as OrgAddEditComponent } from '../organizations/vault/add-edit.component';\nimport { AddEditComponent } from '../vault/add-edit.component';\n\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\n@Directive()\nexport class CipherReportComponent {\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n\n    loading = false;\n    hasLoaded = false;\n    ciphers: CipherView[] = [];\n    organization: Organization;\n\n    constructor(private modalService: ModalService, protected userService: UserService,\n        protected messagingService: MessagingService, protected passwordRepromptService: PasswordRepromptService,\n        public requiresPaid: boolean) { }\n\n    async load() {\n        this.loading = true;\n        await this.setCiphers();\n        this.loading = false;\n        this.hasLoaded = true;\n    }\n\n    async selectCipher(cipher: CipherView) {\n        if (!await this.repromptCipher(cipher)) {\n            return;\n        }\n\n        const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n        const [modal, childComponent] = await this.modalService.openViewRef(type, this.cipherAddEditModalRef, (comp: OrgAddEditComponent | AddEditComponent) => {\n            if (this.organization != null) {\n                (comp as OrgAddEditComponent).organization = this.organization;\n                comp.organizationId = this.organization.id;\n            }\n\n            comp.cipherId = cipher == null ? null : cipher.id;\n            comp.onSavedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.load();\n            });\n            comp.onDeletedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.load();\n            });\n            comp.onRestoredCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.load();\n            });\n\n        });\n\n        return childComponent;\n    }\n\n    protected async checkAccess(): Promise<boolean> {\n        if (this.organization != null) {\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            if (this.requiresPaid && !this.organization.useTotp) {\n                this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n                return false;\n            }\n        } else {\n            const accessPremium = await this.userService.canAccessPremium();\n            if (this.requiresPaid && !accessPremium) {\n                this.messagingService.send('premiumRequired');\n                this.loading = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    protected async setCiphers() {\n        this.ciphers = [];\n    }\n\n    protected async repromptCipher(c: CipherView) {\n        return c.reprompt === CipherRepromptType.None || await this.passwordRepromptService.showPasswordPrompt();\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\nimport { LinkedIdType } from '../../enums/linkedIdType';\n\nimport { View } from './view';\n\nimport { Field } from '../domain/field';\n\nexport class FieldView implements View {\n    name: string = null;\n    value: string = null;\n    type: FieldType = null;\n    newField: boolean = false; // Marks if the field is new and hasn't been saved\n    showValue: boolean = false;\n    linkedId: LinkedIdType = null;\n\n    constructor(f?: Field) {\n        if (!f) {\n            return;\n        }\n\n        this.type = f.type;\n        this.linkedId = f.linkedId;\n    }\n\n    get maskedValue(): string {\n        return this.value != null ? '••••••••' : null;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib-angular/components/add-edit.component';\nimport { LoginUriView } from 'jslib-common/models/view/loginUriView';\n\n@Component({\n    selector: 'app-vault-add-edit',\n    templateUrl: 'add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    canAccessPremium: boolean;\n    totpCode: string;\n    totpCodeFormatted: string;\n    totpDash: number;\n    totpSec: number;\n    totpLow: boolean;\n    showRevisionDate = false;\n    hasPasswordHistory = false;\n    viewingPasswordHistory = false;\n    viewOnly = false;\n\n    protected totpInterval: number;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        protected totpService: TotpService, protected passwordGenerationService: PasswordGenerationService,\n        protected messagingService: MessagingService, eventService: EventService,\n        protected policyService: PolicyService, passwordRepromptService: PasswordRepromptService,\n        logService: LogService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, messagingService, eventService, policyService, passwordRepromptService,\n            logService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        await this.load();\n        this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n        this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n        this.cleanUp();\n\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        if (this.cipher.type === CipherType.Login && this.cipher.login.totp &&\n            (this.cipher.organizationUseTotp || this.canAccessPremium)) {\n            await this.totpUpdateCode();\n            const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n            await this.totpTick(interval);\n\n            this.totpInterval = window.setInterval(async () => {\n                await this.totpTick(interval);\n            }, 1000);\n        }\n    }\n\n    toggleFavorite() {\n        this.cipher.favorite = !this.cipher.favorite;\n    }\n\n    launch(uri: LoginUriView) {\n        if (!uri.canLaunch) {\n            return;\n        }\n\n        this.platformUtilsService.launchUri(uri.launchUri);\n    }\n\n    copy(value: string, typeI18nKey: string, aType: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (this.editMode) {\n            if (typeI18nKey === 'password') {\n                this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n            } else if (typeI18nKey === 'securityCode') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n            } else if (aType === 'H_Field') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n            }\n        }\n    }\n\n    async generatePassword(): Promise<boolean> {\n        const confirmed = await super.generatePassword();\n        if (confirmed) {\n            const options = (await this.passwordGenerationService.getOptions())[0];\n            this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n        }\n        return confirmed;\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.cipher.organizationId });\n    }\n\n    viewHistory() {\n        this.viewingPasswordHistory = !this.viewingPasswordHistory;\n    }\n\n    protected cleanUp() {\n        if (this.totpInterval) {\n            window.clearInterval(this.totpInterval);\n        }\n    }\n\n    protected async totpUpdateCode() {\n        if (this.cipher == null || this.cipher.type !== CipherType.Login || this.cipher.login.totp == null) {\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n            return;\n        }\n\n        this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n        if (this.totpCode != null) {\n            if (this.totpCode.length > 4) {\n                const half = Math.floor(this.totpCode.length / 2);\n                this.totpCodeFormatted = this.totpCode.substring(0, half) + ' ' + this.totpCode.substring(half);\n            } else {\n                this.totpCodeFormatted = this.totpCode;\n            }\n        } else {\n            this.totpCodeFormatted = null;\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n        }\n    }\n\n    protected allowOwnershipAssignment() {\n        return (!this.editMode || this.cloneMode) && this.ownershipOptions != null\n            && (this.ownershipOptions.length > 1 || !this.allowPersonal);\n    }\n\n    private async totpTick(intervalSeconds: number) {\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const mod = epoch % intervalSeconds;\n\n        this.totpSec = intervalSeconds - mod;\n        this.totpDash = +(Math.round((((78.6 / intervalSeconds) * mod) + 'e+2') as any) + 'e-2');\n        this.totpLow = this.totpSec <= 7;\n        if (mod === 0) {\n            await this.totpUpdateCode();\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"cipher\"> <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\"> {{'personalOwnershipPolicyInEffect' | i18n}} </app-callout> <div class=\"row\" *ngIf=\"!editMode && !viewOnly\"> <div class=\"col-6 form-group\"> <label for=\"type\">{{'whatTypeOfItem' | i18n}}</label> <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\" class=\"form-control\" [disabled]=\"cipher.isDeleted\" appAutofocus> <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" required [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\" *ngIf=\"!organization\"> <label for=\"folder\">{{'folder' | i18n}}</label> <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\" class=\"form-control\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option> </select> </div> </div> <ng-container *ngIf=\"cipher.type === cipherType.Login\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"loginUsername\">{{'username' | i18n}}</label> <div class=\"input-group\"> <input id=\"loginUsername\" class=\"form-control\" type=\"text\" name=\"Login.Username\" [(ngModel)]=\"cipher.login.username\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyUsername' | i18n}}\" (click)=\"copy(cipher.login.username, 'username', 'Username')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col-6 form-group\"> <div class=\"d-flex\"> <label for=\"loginPassword\">{{'password' | i18n}}</label> <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <a href=\"#\" class=\"d-block mr-2 fa-icon-above-input\" appStopClick appA11yTitle=\"{{'generatePassword' | i18n}}\" (click)=\"generatePassword()\" *ngIf=\"cipher.viewPassword\"> <i class=\"fa fa-lg fa-fw fa-refresh\" aria-hidden=\"true\"></i> </a> <a href=\"#\" class=\"d-block fa-icon-above-input\" #checkPasswordBtn appStopClick appA11yTitle=\"{{'checkPassword' | i18n}}\" (click)=\"checkPassword()\" [appApiAction]=\"checkPasswordPromise\"> <i class=\"fa fa-lg fa-fw fa-check-circle\" [hidden]=\"checkPasswordBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-lg fa-fw fa-spinner fa-spin\" aria-hidden=\"true\" [hidden]=\"!checkPasswordBtn.loading\" title=\"{{'loading' | i18n}}\"></i> </a> </div> </div> <div class=\"input-group\"> <input id=\"loginPassword\" class=\"form-control text-monospace\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Login.Password\" [(ngModel)]=\"cipher.login.password\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\" [disabled]=\"!cipher.viewPassword\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(cipher.login.password, 'password', 'Password')\" [disabled]=\"!cipher.viewPassword\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"loginTotp\">{{'authenticatorKeyTotp' | i18n}}</label> <input id=\"loginTotp\" type=\"{{cipher.viewPassword ? 'text' : 'password'}}\" name=\"Login.Totp\" class=\"form-control text-monospace\" [(ngModel)]=\"cipher.login.totp\" appInputVerbatim [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"> </div> <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{'low': totpLow}\"> <div *ngIf=\"!cipher.login.totp || !totpCode\"> <img src=\"images/totp-countdown.png\" id=\"totpImage\" title=\"{{'verificationCodeTotp' | i18n}}\" class=\"ml-2\"> <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"premiumRequired()\" *ngIf=\"!organization && !cipher.organizationId && !canAccessPremium\"> {{'premium' | i18n}} </a> <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"upgradeOrganization()\" *ngIf=\"(organization && !organization.useTotp) || (!organization && !canAccessPremium && cipher.organizationId && !cipher.organizationUseTotp)\"> {{'upgrade' | i18n}} </a> </div> <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\"> <span class=\"totp-countdown mr-3 ml-2\"> <span class=\"totp-sec\">{{totpSec}}</span> <svg> <g> <circle class=\"totp-circle inner\" r=\"12.6\" cy=\"16\" cx=\"16\" [ngStyle]=\"{'stroke-dashoffset.px': totpDash}\"></circle> <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle> </g> </svg> </span> <span class=\"totp-code mr-2\" title=\"{{'verificationCodeTotp' | i18n}}\">{{totpCodeFormatted}}</span> <button type=\"button\" class=\"btn btn-link\" appA11yTitle=\"{{'copyVerificationCode' | i18n}}\" (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"> <i class=\"fa fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <ng-container *ngIf=\"cipher.login.hasUris\"> <div class=\"row\" *ngFor=\"let u of cipher.login.uris; let i = index; trackBy:trackByFunction\"> <div class=\"col-7 form-group\"> <label for=\"loginUri{{i}}\">{{'uriPosition' | i18n : (i + 1)}}</label> <div class=\"input-group\"> <input class=\"form-control\" id=\"loginUri{{i}}\" type=\"text\" name=\"Login.Uris[{{i}}].Uri\" [(ngModel)]=\"u.uri\" [disabled]=\"cipher.isDeleted || viewOnly\" placeholder=\"{{'ex' | i18n}} https://google.com\" appInputVerbatim> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'launch' | i18n}}\" (click)=\"launch(u)\" [disabled]=\"!u.canLaunch\"> <i class=\"fa fa-lg fa-share\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyUri' | i18n}}\" (click)=\"copy(u.uri, 'uri', 'URI')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col-5 form-group\"> <div class=\"d-flex\"> <label for=\"loginUriMatch{{i}}\"> {{'matchDetection' | i18n}} </label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/uri-match-detection/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"d-flex\"> <select class=\"form-control overflow-hidden\" id=\"loginUriMatch{{i}}\" name=\"Login.Uris[{{i}}].Match\" [(ngModel)]=\"u.match\" (change)=\"loginUriMatchChanged(u)\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeUri(u)\" appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </ng-container> <a href=\"#\" appStopClick (click)=\"addUri()\" class=\"d-inline-block mb-3\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newUri' | i18n}} </a> </ng-container> <ng-container *ngIf=\"cipher.type === cipherType.Card\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardCardholderName\">{{'cardholderName' | i18n}}</label> <input id=\"cardCardholderName\" class=\"form-control\" type=\"text\" name=\"Card.CardCardholderName\" [(ngModel)]=\"cipher.card.cardholderName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"cardBrand\">{{'brand' | i18n}}</label> <select id=\"cardBrand\" class=\"form-control\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardNumber\">{{'number' | i18n}}</label> <div class=\"input-group\"> <input id=\"cardNumber\" class=\"form-control text-monospace\" type=\"{{showCardNumber ? 'text' : 'password'}}\" name=\"Card.Number\" [(ngModel)]=\"cipher.card.number\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardNumber()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showCardNumber, 'fa-eye-slash': showCardNumber}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyNumber' | i18n}}\" (click)=\"copy(cipher.card.number, 'number', 'Number')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col form-group\"> <label for=\"cardExpMonth\">{{'expirationMonth' | i18n}}</label> <select id=\"cardExpMonth\" class=\"form-control\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> <div class=\"col form-group\"> <label for=\"cardExpYear\">{{'expirationYear' | i18n}}</label> <input id=\"cardExpYear\" class=\"form-control\" type=\"text\" name=\"Card.ExpYear\" [(ngModel)]=\"cipher.card.expYear\" placeholder=\"{{'ex' | i18n}} 2019\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardCode\">{{'securityCode' | i18n}}</label> <div class=\"input-group\"> <input id=\"cardCode\" class=\"form-control text-monospace\" type=\"{{showCardCode ? 'text' : 'password'}}\" name=\"Card.Code\" [(ngModel)]=\"cipher.card.code\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardCode()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showCardCode, 'fa-eye-slash': showCardCode}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'securityCode' | i18n}}\" (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> </ng-container> <ng-container *ngIf=\"cipher.type === cipherType.Identity\"> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idTitle\">{{'title' | i18n}}</label> <select id=\"idTitle\" class=\"form-control\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idFirstName\">{{'firstName' | i18n}}</label> <input id=\"idFirstName\" class=\"form-control\" type=\"text\" name=\"Identity.FirstName\" [(ngModel)]=\"cipher.identity.firstName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idMiddleName\">{{'middleName' | i18n}}</label> <input id=\"idMiddleName\" class=\"form-control\" type=\"text\" name=\"Identity.MiddleName\" [(ngModel)]=\"cipher.identity.middleName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idLastName\">{{'lastName' | i18n}}</label> <input id=\"idLastName\" class=\"form-control\" type=\"text\" name=\"Identity.LastName\" [(ngModel)]=\"cipher.identity.lastName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idUsername\">{{'username' | i18n}}</label> <input id=\"idUsername\" class=\"form-control\" type=\"text\" name=\"Identity.Username\" [(ngModel)]=\"cipher.identity.username\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idCompany\">{{'company' | i18n}}</label> <input id=\"idCompany\" class=\"form-control\" type=\"text\" name=\"Identity.Company\" [(ngModel)]=\"cipher.identity.company\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idSsn\">{{'ssn' | i18n}}</label> <input id=\"idSsn\" class=\"form-control\" type=\"text\" name=\"Identity.SSN\" [(ngModel)]=\"cipher.identity.ssn\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idPassportNumber\">{{'passportNumber' | i18n}}</label> <input id=\"idPassportNumber\" class=\"form-control\" type=\"text\" name=\"Identity.PassportNumber\" [(ngModel)]=\"cipher.identity.passportNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idLicenseNumber\">{{'licenseNumber' | i18n}}</label> <input id=\"idLicenseNumber\" class=\"form-control\" type=\"text\" name=\"Identity.LicenseNumber\" [(ngModel)]=\"cipher.identity.licenseNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idEmail\">{{'email' | i18n}}</label> <input id=\"idEmail\" class=\"form-control\" type=\"text\" name=\"Identity.Email\" [(ngModel)]=\"cipher.identity.email\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idPhone\">{{'phone' | i18n}}</label> <input id=\"idPhone\" class=\"form-control\" type=\"text\" name=\"Identity.Phone\" [(ngModel)]=\"cipher.identity.phone\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idAddress1\">{{'address1' | i18n}}</label> <input id=\"idAddress1\" class=\"form-control\" type=\"text\" name=\"Identity.Address1\" [(ngModel)]=\"cipher.identity.address1\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idAddress2\">{{'address2' | i18n}}</label> <input id=\"idAddress2\" class=\"form-control\" type=\"text\" name=\"Identity.Address2\" [(ngModel)]=\"cipher.identity.address2\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idAddress3\">{{'address3' | i18n}}</label> <input id=\"idAddress3\" class=\"form-control\" type=\"text\" name=\"Identity.Address3\" [(ngModel)]=\"cipher.identity.address3\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idCity\">{{'cityTown' | i18n}}</label> <input id=\"idCity\" class=\"form-control\" type=\"text\" name=\"Identity.City\" [(ngModel)]=\"cipher.identity.city\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idState\">{{'stateProvince' | i18n}}</label> <input id=\"idState\" class=\"form-control\" type=\"text\" name=\"Identity.State\" [(ngModel)]=\"cipher.identity.state\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idPostalCode\">{{'zipPostalCode' | i18n}}</label> <input id=\"idPostalCode\" class=\"form-control\" type=\"text\" name=\"Identity.PostalCode\" [(ngModel)]=\"cipher.identity.postalCode\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idCountry\">{{'country' | i18n}}</label> <input id=\"idCountry\" class=\"form-control\" type=\"text\" name=\"Identity.Country\" [(ngModel)]=\"cipher.identity.country\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> </ng-container> <div class=\"form-group\"> <label for=\"notes\">{{'notes' | i18n}}</label> <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\" [disabled]=\"cipher.isDeleted || viewOnly\" class=\"form-control\"></textarea> </div> <app-vault-add-edit-custom-fields [cipher]=\"cipher\" [thisCipherType]=\"cipher.type\" [viewOnly]=\"viewOnly\" [copy]=\"copy.bind(this)\"></app-vault-add-edit-custom-fields> <ng-container *ngIf=\"allowOwnershipAssignment()\"> <h3 class=\"mt-4\">{{'ownership' | i18n}}</h3> <div class=\"row\"> <div class=\"col-5\"> <label for=\"organizationId\">{{'whoOwnsThisItem' | i18n}}</label> <select id=\"organizationId\" class=\"form-control\" name=\"OrganizationId\" [(ngModel)]=\"cipher.organizationId\" (change)=\"organizationChanged()\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> </ng-container> <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\"> <h3 class=\"mt-4\">{{'collections' | i18n}}</h3> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <ng-container *ngIf=\"collections && collections.length\"> <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"c.checked\" id=\"collection-{{i}}\" name=\"Collection[{{i}}].Checked\" [disabled]=\"cipher.isDeleted || viewOnly\"> <label class=\"form-check-label\" for=\"collection-{{i}}\">{{c.name}}</label> </div> </ng-container> </ng-container> <ng-container *ngIf=\"editMode\"> <div class=\"small text-muted mt-4\"> <div> <b class=\"font-weight-semibold\">{{'dateUpdated' | i18n}}:</b> {{cipher.revisionDate | date:'medium'}} </div> <div *ngIf=\"showRevisionDate\"> <b class=\"font-weight-semibold\">{{'datePasswordUpdated' | i18n}}:</b> {{cipher.passwordRevisionDisplayDate | date:'medium'}} </div> <div *ngIf=\"hasPasswordHistory\"> <b class=\"font-weight-semibold\">{{'passwordHistory' | i18n}}:</b> <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{'view' | i18n}}\"> {{cipher.passwordHistory.length}} </a> </div> <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\"> <div *ngFor=\"let ph of cipher.passwordHistory\"> {{ph.lastUsedDate | date:'short'}} - <span class=\"password-wrapper text-monospace ml-2\">{{ph.password}}</span> </div> </div> </div> </ng-container> <ng-container *ngIf=\"canUseReprompt\"> <h3 class=\"mt-4\">{{'options' | i18n}}</h3> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [ngModel]=\"reprompt\" (change)=\"repromptChanged()\" id=\"passwordPrompt\" name=\"passwordPrompt\" [disabled]=\"cipher.isDeleted || viewOnly\"> <label class=\"form-check-label\" for=\"passwordPrompt\">{{'passwordPrompt' | i18n}}</label> <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/managing-items/#protect-individual-items\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!viewOnly\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(cipher?.isDeleted ? 'restore' : 'save') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{(viewOnly ? 'close' : 'cancel') | i18n}} </button> <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\"> <button *ngIf=\"!organization && !cipher.isDeleted\" type=\"button\" (click)=\"toggleFavorite()\" class=\"btn btn-link\" appA11yTitle=\"{{(cipher.favorite ? 'unfavorite' : 'favorite') | i18n}}\"> <i class=\"fa fa-lg\" [ngClass]=\"{'fa-star': cipher.favorite, 'fa-star-o': !cipher.favorite}\" aria-hidden=\"true\"></i> </button> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{(cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}}\" *ngIf=\"editMode && !cloneMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Importer } from '../importers/importer';\n\nexport interface ImportOption {\n    id: string;\n    name: string;\n}\nexport abstract class ImportService {\n    featuredImportOptions: ImportOption[];\n    regularImportOptions: ImportOption[];\n    getImportOptions: () => ImportOption[];\n    import: (importer: Importer, fileContents: string, organizationId?: string) => Promise<Error>;\n    getImporter: (format: string, organizationId: string) => Importer;\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CiphersComponent as BaseCiphersComponent } from 'jslib-angular/components/ciphers.component';\n\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nconst MaxCheckedCount = 500;\n\n@Component({\n    selector: 'app-vault-ciphers',\n    templateUrl: 'ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n    @Input() showAddNew = true;\n    @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n    @Output() onShareClicked = new EventEmitter<CipherView>();\n    @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n    @Output() onCloneClicked = new EventEmitter<CipherView>();\n\n    pagedCiphers: CipherView[] = [];\n    pageSize = 200;\n    cipherType = CipherType;\n    actionPromise: Promise<any>;\n    userHasPremiumAccess = false;\n\n    private didScroll = false;\n    private pagedCiphersCount = 0;\n    private refreshing = false;\n\n    constructor(searchService: SearchService, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected cipherService: CipherService, protected eventService: EventService,\n        protected totpService: TotpService, protected userService: UserService,\n        protected passwordRepromptService: PasswordRepromptService, private logService: LogService) {\n        super(searchService);\n    }\n\n    async ngOnInit() {\n        this.userHasPremiumAccess = await this.userService.canAccessPremium();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    loadMore() {\n        if (this.ciphers.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCiphers.length;\n        let pagedSize = this.pageSize;\n        if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n            pagedSize = this.pagedCiphersCount;\n        }\n        if (this.ciphers.length > pagedLength) {\n            this.pagedCiphers = this.pagedCiphers.concat(this.ciphers.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCiphersCount = this.pagedCiphers.length;\n        this.didScroll = this.pagedCiphers.length > this.pageSize;\n    }\n\n    async refresh() {\n        try {\n            this.refreshing = true;\n            await this.reload(this.filter, this.deleted);\n        } finally {\n            this.refreshing = false;\n        }\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.ciphers.length > this.pageSize;\n    }\n\n    async resetPaging() {\n        this.pagedCiphers = [];\n        this.loadMore();\n    }\n\n    async doSearch(indexedCiphers?: CipherView[]) {\n        this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, this.deletedFilter], indexedCiphers);\n        this.resetPaging();\n    }\n\n    launch(uri: string) {\n        this.platformUtilsService.launchUri(uri);\n    }\n\n    async attachments(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onAttachmentsClicked.emit(c);\n    }\n\n    async share(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onShareClicked.emit(c);\n    }\n\n    collections(c: CipherView) {\n        this.onCollectionsClicked.emit(c);\n    }\n\n    async clone(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onCloneClicked.emit(c);\n    }\n\n    async delete(c: CipherView): Promise<boolean> {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        if (this.actionPromise != null) {\n            return;\n        }\n        const permanent = c.isDeleted;\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(permanent ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\n            this.i18nService.t(permanent ? 'permanentlyDeleteItem' : 'deleteItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.deleteCipher(c.id, permanent);\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t(permanent ? 'permanentlyDeletedItem'\n                : 'deletedItem'));\n            this.refresh();\n        } catch (e) {\n            this.logService.error(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async restore(c: CipherView): Promise<boolean> {\n        if (this.actionPromise != null || !c.isDeleted) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('restoreItemConfirmation'),\n            this.i18nService.t('restoreItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.cipherService.restoreWithServer(c.id);\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('restoredItem'));\n            this.refresh();\n        } catch (e) {\n            this.logService.error(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n        if (this.passwordRepromptService.protectedFields().includes(aType) && !await this.repromptCipher(cipher)) {\n            return;\n        }\n\n        if (value == null || aType === 'TOTP' && !this.displayTotpCopyButton(cipher)) {\n            return;\n        } else if (value === cipher.login.totp) {\n            value = await this.totpService.getCode(value);\n        }\n\n        if (!cipher.viewPassword) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.toasterService.popAsync('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (typeI18nKey === 'password' || typeI18nKey === 'verificationCodeTotp') {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n        } else if (typeI18nKey === 'securityCode') {\n            this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n        }\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n        const selectCount = select && this.ciphers.length > MaxCheckedCount\n            ? MaxCheckedCount\n            : this.ciphers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkCipher(this.ciphers[i], select);\n        }\n    }\n\n    checkCipher(c: CipherView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    getSelected(): CipherView[] {\n        if (this.ciphers == null) {\n            return [];\n        }\n        return this.ciphers.filter(c => !!(c as any).checked);\n    }\n\n    getSelectedIds(): string[] {\n        return this.getSelected().map(c => c.id);\n    }\n\n    displayTotpCopyButton(cipher: CipherView) {\n        return (cipher?.login?.hasTotp ?? false) &&\n            (cipher.organizationUseTotp || this.userHasPremiumAccess);\n    }\n\n    async selectCipher(cipher: CipherView) {\n        if (await this.repromptCipher(cipher)) {\n            super.selectCipher(cipher);\n        }\n    }\n\n    protected deleteCipher(id: string, permanent: boolean) {\n        return permanent ? this.cipherService.deleteWithServer(id) : this.cipherService.softDeleteWithServer(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return c.hasOldAttachments && c.organizationId == null;\n    }\n\n    protected async repromptCipher(c: CipherView) {\n        return c.reprompt === CipherRepromptType.None || await this.passwordRepromptService.showPasswordPrompt();\n    }\n}\n","<ng-container *ngIf=\"(isPaging() ? pagedCiphers : ciphers) as filteredCiphers\"> <table class=\"table table-hover table-list table-ciphers\" *ngIf=\"filteredCiphers.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let c of filteredCiphers\"> <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp> </td> <td (click)=\"checkCipher(c)\" class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick appStopProp (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> <ng-container *ngIf=\"showFixOldAttachments(c)\"> <i class=\"fa fa-exclamation-triangle text-warning\" appStopProp title=\"{{'attachmentsNeedFix' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachmentsNeedFix' | i18n}}</span> </ng-container> </ng-container> <br> <small appStopProp>{{c.subTitle}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.username, 'username', 'Username')\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyUsername' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.password, 'password', 'Password')\" *ngIf=\"c.viewPassword\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyPassword' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\" *ngIf=\"displayTotpCopyButton(c)\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyVerificationCode' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\"> <i class=\"fa fa-fw fa-share-square-o\" aria-hidden=\"true\"></i> {{'launch' | i18n}} </a> </ng-container> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"attachments(c)\"> <i class=\"fa fa-fw fa-paperclip\" aria-hidden=\"true\"></i> {{'attachments' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\" (click)=\"clone(c)\"> <i class=\"fa fa-fw fa-files-o\" aria-hidden=\"true\"></i> {{'clone' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"!organization && !c.organizationId && !c.isDeleted\" (click)=\"share(c)\"> <i class=\"fa fa-fw fa-arrow-circle-o-right\" aria-hidden=\"true\"></i> {{'moveToOrganization' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\"> <i class=\"fa fa-fw fa-cubes\" aria-hidden=\"true\"></i> {{'collections' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"restore(c)\" *ngIf=\"c.isDeleted\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'restore' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{(c.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\"> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p>{{'noItemsInList' | i18n}}</p> <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\"> <i class=\"fa fa-plus fa-fw\"></i>{{'addItem' | i18n}}</button> </ng-container> </div> </ng-container> ","import { OrganizationData } from '../data/organizationData';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { ProductType } from '../../enums/productType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\n\nexport class Organization {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useSso: boolean;\n    useKeyConnector: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    hasPublicAndPrivateKeys: boolean;\n    providerId: string;\n    providerName: string;\n    isProviderUser: boolean;\n    familySponsorshipFriendlyName: string;\n    familySponsorshipAvailable: boolean;\n    planProductType: ProductType;\n    keyConnectorEnabled: boolean;\n    keyConnectorUrl: string;\n\n    constructor(obj?: OrganizationData) {\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.name = obj.name;\n        this.status = obj.status;\n        this.type = obj.type;\n        this.enabled = obj.enabled;\n        this.usePolicies = obj.usePolicies;\n        this.useGroups = obj.useGroups;\n        this.useDirectory = obj.useDirectory;\n        this.useEvents = obj.useEvents;\n        this.useTotp = obj.useTotp;\n        this.use2fa = obj.use2fa;\n        this.useApi = obj.useApi;\n        this.useSso = obj.useSso;\n        this.useKeyConnector = obj.useKeyConnector;\n        this.useResetPassword = obj.useResetPassword;\n        this.selfHost = obj.selfHost;\n        this.usersGetPremium = obj.usersGetPremium;\n        this.seats = obj.seats;\n        this.maxCollections = obj.maxCollections;\n        this.maxStorageGb = obj.maxStorageGb;\n        this.ssoBound = obj.ssoBound;\n        this.identifier = obj.identifier;\n        this.permissions = obj.permissions;\n        this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n        this.userId = obj.userId;\n        this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n        this.providerId = obj.providerId;\n        this.providerName = obj.providerName;\n        this.isProviderUser = obj.isProviderUser;\n        this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n        this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n        this.planProductType = obj.planProductType;\n        this.keyConnectorEnabled = obj.keyConnectorEnabled;\n        this.keyConnectorUrl = obj.keyConnectorUrl;\n    }\n\n    get canAccess() {\n        if (this.type === OrganizationUserType.Owner) {\n            return true;\n        }\n        return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    get isManager() {\n        return this.type === OrganizationUserType.Manager || this.type === OrganizationUserType.Owner ||\n            this.type === OrganizationUserType.Admin;\n    }\n\n    get isAdmin() {\n        return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n    }\n\n    get isOwner() {\n        return this.type === OrganizationUserType.Owner || this.isProviderUser;\n    }\n\n    get canAccessEventLogs() {\n        return this.isAdmin || this.permissions.accessEventLogs;\n    }\n\n    get canAccessImportExport() {\n        return this.isAdmin || this.permissions.accessImportExport;\n    }\n\n    get canAccessReports() {\n        return this.isAdmin || this.permissions.accessReports;\n    }\n\n    get canCreateNewCollections() {\n        return this.isManager || (this.permissions.createNewCollections ?? this.permissions.manageAllCollections);\n    }\n\n    get canEditAnyCollection() {\n        return this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections);\n    }\n\n    get canDeleteAnyCollection() {\n        return this.isAdmin || (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections);\n    }\n\n    get canViewAllCollections() {\n        return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n    }\n\n    get canEditAssignedCollections() {\n        return this.isManager || (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections);\n    }\n\n    get canDeleteAssignedCollections() {\n        return this.isManager || (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections);\n    }\n\n    get canViewAssignedCollections() {\n        return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n    }\n\n    get canManageGroups() {\n        return this.isAdmin || this.permissions.manageGroups;\n    }\n\n    get canManageSso() {\n        return this.isAdmin || this.permissions.manageSso;\n    }\n\n    get canManagePolicies() {\n        return this.isAdmin || this.permissions.managePolicies;\n    }\n\n    get canManageUsers() {\n        return this.isAdmin || this.permissions.manageUsers;\n    }\n\n    get canManageUsersPassword() {\n        return this.isAdmin || this.permissions.manageResetPassword;\n    }\n\n    get isExemptFromPolicies() {\n        return this.canManagePolicies;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\n\nimport { KeyConnectorService } from 'jslib-common/abstractions/keyConnector.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router, private messagingService: MessagingService, private keyConnectorService: KeyConnectorService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (!isAuthed) {\n            this.messagingService.send('authBlocked');\n            return false;\n        }\n\n        const locked = await this.vaultTimeoutService.isLocked();\n        if (locked) {\n            if (routerState != null) {\n                this.messagingService.send('lockedUrl', { url: routerState.url });\n            }\n            this.router.navigate(['lock'], { queryParams: { promptBiometric: true }});\n            return false;\n        }\n\n        if (!routerState.url.includes('remove-password') && await this.keyConnectorService.getConvertAccountRequired()) {\n            this.router.navigate(['/remove-password']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","export enum ProviderUserType {\n    ProviderAdmin = 0,\n    ServiceUser = 1,\n}\n","export enum ThemeType {\n    System = 'system',\n    Light = 'light',\n    Dark = 'dark',\n    Nord = 'nord',\n    SolarizedDark = 'solarizedDark',\n}\n","export enum ProductType {\n    Free = 0,\n    Families = 1,\n    Teams = 2,\n    Enterprise = 3,\n}\n","export class KeysRequest {\n    publicKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        this.publicKey = publicKey;\n        this.encryptedPrivateKey = encryptedPrivateKey;\n    }\n}\n","import {\n    Directive,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { first } from 'rxjs/operators';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n    loading = true;\n    authed = false;\n    email: string;\n    actionPromise: Promise<any>;\n\n    protected requiredParameters: string[] = [];\n    protected failedShortMessage = 'inviteAcceptFailedShort';\n    protected failedMessage = 'inviteAcceptFailed';\n\n    constructor(protected router: Router, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected route: ActivatedRoute,\n        protected userService: UserService, protected stateService: StateService) { }\n\n    abstract authedHandler(qParams: any): Promise<void>;\n    abstract unauthedHandler(qParams: any): Promise<void>;\n\n    ngOnInit() {\n        this.route.queryParams.pipe(first()).subscribe(async qParams => {\n            await this.stateService.remove('loginRedirect');\n\n            let error = this.requiredParameters.some(e => qParams?.[e] == null || qParams[e] === '');\n            let errorMessage: string = null;\n            if (!error) {\n                this.authed = await this.userService.isAuthenticated();\n\n                if (this.authed) {\n                    try {\n                        await this.authedHandler(qParams);\n                    } catch (e) {\n                        error = true;\n                        errorMessage = e.message;\n                    }\n                } else {\n                    await this.stateService.save('loginRedirect', {\n                        route: this.getRedirectRoute(),\n                        qParams: qParams,\n                    });\n\n                    this.email = qParams.email;\n                    await this.unauthedHandler(qParams);\n                }\n            }\n\n            if (error) {\n                const toast: Toast = {\n                    type: 'error',\n                    title: null,\n                    body: errorMessage != null ? this.i18nService.t(this.failedShortMessage, errorMessage) :\n                        this.i18nService.t(this.failedMessage),\n                    timeout: 10000,\n                };\n                this.toasterService.popAsync(toast);\n                this.router.navigate(['/']);\n            }\n\n            this.loading = false;\n        });\n    }\n\n    getRedirectRoute() {\n        const urlTree = this.router.parseUrl(this.router.url);\n        urlTree.queryParams = {};\n        return urlTree.toString();\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { EventService } from '../../services/event.service';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\n\n@Component({\n    selector: 'app-entity-events',\n    templateUrl: 'entity-events.component.html',\n})\nexport class EntityEventsComponent implements OnInit {\n    @Input() name: string;\n    @Input() entity: 'user' | 'cipher';\n    @Input() entityId: string;\n    @Input() organizationId: string;\n    @Input() providerId: string;\n    @Input() showUser = false;\n\n    loading = true;\n    loaded = false;\n    events: any[];\n    start: string;\n    end: string;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private eventService: EventService, private toasterService: ToasterService,\n        private userNamePipe: UserNamePipe, private logService: LogService) { }\n\n    async ngOnInit() {\n        const defaultDates = this.eventService.getDefaultDateFilters();\n        this.start = defaultDates[0];\n        this.end = defaultDates[1];\n        await this.load();\n    }\n\n    async load() {\n        if (this.showUser) {\n            const response = await this.apiService.getOrganizationUsers(this.organizationId);\n            response.data.forEach(u => {\n                const name = this.userNamePipe.transform(u);\n                this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n                this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n            });\n        }\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.refreshPromise != null || this.morePromise != null) {\n            return;\n        }\n\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return;\n        }\n\n        this.loading = true;\n        let response: ListResponse<EventResponse>;\n        try {\n            let promise: Promise<any>;\n            if (this.entity === 'user' && this.providerId) {\n                promise = this.apiService.getEventsProviderUser(this.providerId, this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            } else if (this.entity === 'user') {\n                promise = this.apiService.getEventsOrganizationUser(this.organizationId, this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            } else {\n                promise = this.apiService.getEventsCipher(this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            }\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            response = await promise;\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        this.continuationToken = response.continuationToken;\n        const events = await Promise.all(response.data.map(async r => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = await this.eventService.getEventInfo(r);\n            const user = this.showUser && userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return {\n                message: eventInfo.message,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.showUser ? this.i18nService.t('unknown') : null,\n                userEmail: user != null ? user.email : this.showUser ? '' : null,\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            };\n        }));\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"eventLogsTitle\"> {{'eventLogs' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"loaded\"> <div class=\"d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\"> </div> <button #refreshBtn [appApiAction]=\"refreshPromise\" type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshBtn.loading\"> <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loaded && refreshBtn.loading}\" aria-hidden=\"true\"></i> {{'refresh' | i18n}} </button> </div> <hr> <div *ngIf=\"!events || !events.length\"> {{'noEventsInList' | i18n}} </div> <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td *ngIf=\"showUser\"> <span appA11yTitle=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","export class OrganizationUserResetPasswordEnrollmentRequest {\n    resetPasswordKey: string;\n}\n","export enum HashPurpose {\n    ServerAuthorization = 1,\n    LocalAuthorization = 2,\n}\n","import { PolicyResponse } from '../response/policyResponse';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class PolicyData {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(response: PolicyResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.type = response.type;\n        this.data = response.data;\n        this.enabled = response.enabled;\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n    masterPassword: string;\n    masterPasswordRetype: string;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n    protected email: string;\n    protected kdf: KdfType;\n    protected kdfIterations: number;\n\n    private masterPasswordStrengthTimeout: any;\n\n    constructor(protected i18nService: I18nService, protected cryptoService: CryptoService,\n        protected messagingService: MessagingService, protected userService: UserService,\n        protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.email = await this.userService.getEmail();\n        this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n    }\n\n    async submit() {\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        if (!await this.setupSubmitActions()) {\n            return;\n        }\n\n        const email = await this.userService.getEmail();\n        if (this.kdf == null) {\n            this.kdf = await this.userService.getKdf();\n        }\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.userService.getKdfIterations();\n        }\n        const key = await this.cryptoService.makeKey(this.masterPassword, email.trim().toLowerCase(),\n            this.kdf, this.kdfIterations);\n        const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n        let encKey: [SymmetricCryptoKey, EncString] = null;\n        const existingEncKey = await this.cryptoService.getEncKey();\n        if (existingEncKey == null) {\n            encKey = await this.cryptoService.makeEncKey(key);\n        } else {\n            encKey = await this.cryptoService.remakeEncKey(key);\n        }\n\n        await this.performSubmitActions(masterPasswordHash, key, encKey);\n    }\n\n    async setupSubmitActions(): Promise<boolean> {\n        // Override in sub-class\n        // Can be used for additional validation and/or other processes the should occur before changing passwords\n        return true;\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        // Override in sub-class\n    }\n\n    async strongPassword(): Promise<boolean> {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return false;\n        }\n        if (this.masterPassword !== this.masterPasswordRetype) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return false;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(\n                strengthResult.score,\n                this.masterPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return false;\n        }\n\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        return userInput;\n    }\n}\n","export class SelectionReadOnlyRequest {\n    id: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n        this.id = id;\n        this.readOnly = readOnly;\n        this.hidePasswords = hidePasswords;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class PolicyResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.type = this.getResponseProperty('Type');\n        this.data = this.getResponseProperty('Data');\n        this.enabled = this.getResponseProperty('Enabled');\n    }\n}\n","import { View } from './view';\n\nimport { LinkedMetadata } from '../../misc/linkedFieldOption.decorator';\n\nexport abstract class ItemView implements View {\n    linkedFieldOptions: Map<number, LinkedMetadata>;\n    abstract get subTitle(): string;\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { View } from './view';\n\nimport { LoginUri } from '../domain/loginUri';\n\nimport { Utils } from '../../misc/utils';\n\nconst CanLaunchWhitelist = [\n    'https://',\n    'http://',\n    'ssh://',\n    'ftp://',\n    'sftp://',\n    'irc://',\n    'vnc://',\n    // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n    'rdp://', // Legacy RDP URI scheme\n    'ms-rd:', // Preferred RDP URI scheme\n    'chrome://',\n    'iosapp://',\n    'androidapp://',\n];\n\nexport class LoginUriView implements View {\n    match: UriMatchType = null;\n\n    // tslint:disable\n    private _uri: string = null;\n    private _domain: string = null;\n    private _hostname: string = null;\n    private _host: string = null;\n    private _canLaunch: boolean = null;\n    // tslint:enable\n\n    constructor(u?: LoginUri) {\n        if (!u) {\n            return;\n        }\n\n        this.match = u.match;\n    }\n\n    get uri(): string {\n        return this._uri;\n    }\n    set uri(value: string) {\n        this._uri = value;\n        this._domain = null;\n        this._canLaunch = null;\n    }\n\n    get domain(): string {\n        if (this._domain == null && this.uri != null) {\n            this._domain = Utils.getDomain(this.uri);\n            if (this._domain === '') {\n                this._domain = null;\n            }\n        }\n\n        return this._domain;\n    }\n\n    get hostname(): string {\n        if (this.match === UriMatchType.RegularExpression) {\n            return null;\n        }\n        if (this._hostname == null && this.uri != null) {\n            this._hostname = Utils.getHostname(this.uri);\n            if (this._hostname === '') {\n                this._hostname = null;\n            }\n        }\n\n        return this._hostname;\n    }\n\n    get host(): string {\n        if (this.match === UriMatchType.RegularExpression) {\n            return null;\n        }\n        if (this._host == null && this.uri != null) {\n            this._host = Utils.getHost(this.uri);\n            if (this._host === '') {\n                this._host = null;\n            }\n        }\n\n        return this._host;\n    }\n\n    get hostnameOrUri(): string {\n        return this.hostname != null ? this.hostname : this.uri;\n    }\n\n    get hostOrUri(): string {\n        return this.host != null ? this.host : this.uri;\n    }\n\n    get isWebsite(): boolean {\n        return this.uri != null && (this.uri.indexOf('http://') === 0 || this.uri.indexOf('https://') === 0 ||\n            (this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri)));\n    }\n\n    get canLaunch(): boolean {\n        if (this._canLaunch != null) {\n            return this._canLaunch;\n        }\n        if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n            const uri = this.launchUri;\n            for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n                if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n                    this._canLaunch = true;\n                    return this._canLaunch;\n                }\n            }\n        }\n        this._canLaunch = false;\n        return this._canLaunch;\n    }\n\n    get launchUri(): string {\n        return this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri) ? ('http://' + this.uri) : this.uri;\n    }\n}\n","export enum UriMatchType {\n    Domain = 0,\n    Host = 1,\n    StartsWith = 2,\n    Exact = 3,\n    RegularExpression = 4,\n    Never = 5,\n}\n","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport {\n    AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent\n} from 'jslib-angular/components/add-edit-custom-fields.component';\n\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-vault-add-edit-custom-fields',\n    templateUrl: 'add-edit-custom-fields.component.html',\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n    @Input() viewOnly: boolean;\n    @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n    constructor(i18nService: I18nService, eventService: EventService) {\n        super(i18nService, eventService);\n    }\n}\n","<ng-container> <h3 class=\"mt-4\">{{'customFields' | i18n}}</h3> <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\"> <div class=\"row\" cdkDrag *ngFor=\"let f of cipher.fields; let i = index; trackBy:trackByFunction\"> <div class=\"col-5 form-group\"> <div class=\"d-flex\"> <label for=\"fieldName{{i}}\">{{'name' | i18n}}</label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/custom-fields/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <input id=\"fieldName{{i}}\" type=\"text\" name=\"Field.Name{{i}}\" [(ngModel)]=\"f.name\" class=\"form-control\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-7 form-group\"> <label for=\"fieldValue{{i}}\">{{'value' | i18n}}</label> <div class=\"d-flex align-items-center\"> <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\"> <input id=\"fieldValue{{i}}\" class=\"form-control\" type=\"text\" name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(f.value, 'value', 'Field')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\"> <input id=\"fieldValue{{i}}\" type=\"{{f.showValue ? 'text' : 'password'}}\" name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\" class=\"form-control text-monospace\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleFieldValue(f)\" [disabled]=\"!cipher.viewPassword && !f.newField\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !f.showValue, 'fa-eye-slash': f.showValue}\"> </i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\" [disabled]=\"!cipher.viewPassword && !f.newField\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\"> <select id=\"fieldValue{{i}}\" name=\"Field.Value{{i}}\" class=\"form-control\" [(ngModel)]=\"f.linkedId\" *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> <div class=\"flex-fill\"> <input id=\"fieldValue{{i}}\" name=\"Field.Value{{i}}\" type=\"checkbox\" [(ngModel)]=\"f.value\" *ngIf=\"f.type === fieldType.Boolean\" appTrueFalseValue trueValue=\"true\" falseValue=\"false\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeField(f)\" appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-link text-muted cursor-move\" appA11yTitle=\"{{'dragToSort' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-bars fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> <a href=\"#\" appStopClick (click)=\"addField()\" class=\"d-inline-block mb-2\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newCustomField' | i18n}} </a> <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <div class=\"col-5\"> <label for=\"addFieldType\" class=\"sr-only\">{{'type' | i18n}}</label> <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\"> <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> <option *ngIf=\"cipher.linkedFieldOptions != null\" [ngValue]=\"addFieldLinkedTypeOption.value\"> {{addFieldLinkedTypeOption.name}} </option> </select> </div> </div> </ng-container> ","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from 'jslib-angular/components/groupings.component';\n\n@Component({\n    selector: 'app-vault-groupings',\n    templateUrl: 'groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    @Output() onSearchTextChanged = new EventEmitter<string>();\n\n    searchText: string = '';\n    searchPlaceholder: string = null;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    searchTextChanged() {\n        this.onSearchTextChanged.emit(this.searchText);\n    }\n}\n","<div class=\"card vault-filters\"> <div class=\"card-header d-flex\"> {{'filters' | i18n}} <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/searching-vault/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchVault' | i18n)}}\" id=\"search\" class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\" appAutofocus> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedAll}\"> <a href=\"#\" appStopClick (click)=\"selectAll()\"> <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allItems' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedFavorites}\" *ngIf=\"showFavorites\"> <a href=\"#\" appStopClick (click)=\"selectFavorites()\"> <i class=\"fa-li fa fa-fw fa-star\"></i>{{'favorites' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedTrash}\" *ngIf=\"showTrash\"> <a href=\"#\" appStopClick (click)=\"selectTrash()\"> <i class=\"fa-li fa fa-fw fa-trash-o\"></i>{{'trash' | i18n}} </a> </li> </ul> <h3>{{'types' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedType === cipherType.Login}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Login)\"> <i class=\"fa-li fa fa-fw fa-globe\"></i>{{'typeLogin' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.Card}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Card)\"> <i class=\"fa-li fa fa-fw fa-credit-card\"></i>{{'typeCard' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.Identity}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Identity)\"> <i class=\"fa-li fa fa-fw fa-id-card-o\"></i>{{'typeIdentity' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.SecureNote}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.SecureNote)\"> <i class=\"fa-li fa fa-fw fa-sticky-note-o\"></i>{{'typeSecureNote' | i18n}} </a> </li> </ul> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ng-container *ngIf=\"showFolders\"> <h3 class=\"d-flex\"> {{'folders' | i18n}} <a href=\"#\" class=\"text-muted ml-auto\" appStopClick (click)=\"addFolder()\" appA11yTitle=\"{{'addFolder' | i18n}}\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> </a> </h3> <ul class=\"fa-ul card-ul\"> <ng-template #recursiveFolders let-folders> <li *ngFor=\"let f of folders\" [ngClass]=\"{active: selectedFolder && f.node.id === selectedFolderId}\"> <div class=\"d-flex\"> <i *ngIf=\"f.children.length\" class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\" [ngClass]=\"{'fa-caret-right': isCollapsed(f.node), 'fa-caret-down': !isCollapsed(f.node)}\" (click)=\"collapse(f.node)\"></i> <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectFolder(f.node)\"> <i *ngIf=\"f.children.length === 0\" class=\"fa-li fa fa-folder-o\" aria-hidden=\"true\"></i>{{f.node.name}} </a> <a href=\"#\" class=\"text-muted ml-auto show-active\" appStopClick (click)=\"editFolder(f.node)\" appA11yTitle=\"{{'editFolder' | i18n}}\" *ngIf=\"f.node.id\"> <i class=\"fa fa-pencil fa-fw\" aria-hidden=\"true\"></i> </a> </div> <ul class=\"fa-ul card-ul carets\" *ngIf=\"f.children.length && !isCollapsed(f.node)\"> <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: f.children }\"> </ng-container> </ul> </li> </ng-template> <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: nestedFolders }\"> </ng-container> </ul> </ng-container> <ng-container *ngIf=\"showCollections && collections && collections.length\"> <h3>{{'collections' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <ng-template #recursiveCollections let-collections> <li *ngFor=\"let c of collections\" [ngClass]=\"{active: c.node.id === selectedCollectionId}\"> <i *ngIf=\"c.children.length\" class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\" [ngClass]=\"{'fa-caret-right': isCollapsed(c.node), 'fa-caret-down': !isCollapsed(c.node)}\" (click)=\"collapse(c.node)\"></i> <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectCollection(c.node)\"> <i *ngIf=\"c.children.length === 0\" class=\"fa-li fa fa-cube\" aria-hidden=\"true\"></i>{{c.node.name}} </a> <ul class=\"fa-ul card-ul carets\" *ngIf=\"c.children.length && !isCollapsed(c.node)\"> <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: c.children }\"> </ng-container> </ul> </li> </ng-template> <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: nestedCollections }\"> </ng-container> </ul> </ng-container> </ng-container> </div> </div> ","import { View } from './view';\n\nimport { SendFile } from '../domain/sendFile';\n\nexport class SendFileView implements View {\n    id: string = null;\n    size: string = null;\n    sizeName: string = null;\n    fileName: string = null;\n\n    constructor(f?: SendFile) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n        this.size = f.size;\n        this.sizeName = f.sizeName;\n    }\n\n    get fileSize(): number {\n        try {\n            if (this.size != null) {\n                return parseInt(this.size, null);\n            }\n        } catch {\n            // Invalid file size.\n        }\n        return 0;\n    }\n}\n","import { View } from './view';\n\nimport { SendText } from '../domain/sendText';\n\nexport class SendTextView implements View {\n    text: string = null;\n    hidden: boolean;\n\n    constructor(t?: SendText) {\n        if (!t) {\n            return;\n        }\n\n        this.hidden = t.hidden;\n    }\n\n    get maskedText(): string {\n        return this.text != null ? '••••••••' : null;\n    }\n}\n","import { AttachmentResponse } from './attachmentResponse';\nimport { BaseResponse } from './baseResponse';\nimport { PasswordHistoryResponse } from './passwordHistoryResponse';\n\nimport { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class CipherResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    type: number;\n    name: string;\n    notes: string;\n    fields: FieldApi[];\n    login: LoginApi;\n    card: CardApi;\n    identity: IdentityApi;\n    secureNote: SecureNoteApi;\n    favorite: boolean;\n    edit: boolean;\n    viewPassword: boolean;\n    organizationUseTotp: boolean;\n    revisionDate: string;\n    attachments: AttachmentResponse[];\n    passwordHistory: PasswordHistoryResponse[];\n    collectionIds: string[];\n    deletedDate: string;\n    reprompt: CipherRepromptType;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.folderId = this.getResponseProperty('FolderId') || null;\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.notes = this.getResponseProperty('Notes');\n        this.favorite = this.getResponseProperty('Favorite') || false;\n        this.edit = !!this.getResponseProperty('Edit');\n        if (this.getResponseProperty('ViewPassword') == null) {\n            this.viewPassword = true;\n        } else {\n            this.viewPassword = this.getResponseProperty('ViewPassword');\n        }\n        this.organizationUseTotp = this.getResponseProperty('OrganizationUseTotp');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.deletedDate = this.getResponseProperty('DeletedDate');\n\n        const login = this.getResponseProperty('Login');\n        if (login != null) {\n            this.login = new LoginApi(login);\n        }\n\n        const card = this.getResponseProperty('Card');\n        if (card != null) {\n            this.card = new CardApi(card);\n        }\n\n        const identity = this.getResponseProperty('Identity');\n        if (identity != null) {\n            this.identity = new IdentityApi(identity);\n        }\n\n        const secureNote = this.getResponseProperty('SecureNote');\n        if (secureNote != null) {\n            this.secureNote = new SecureNoteApi(secureNote);\n        }\n\n        const fields = this.getResponseProperty('Fields');\n        if (fields != null) {\n            this.fields = fields.map((f: any) => new FieldApi(f));\n        }\n\n        const attachments = this.getResponseProperty('Attachments');\n        if (attachments != null) {\n            this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n        }\n\n        const passwordHistory = this.getResponseProperty('PasswordHistory');\n        if (passwordHistory != null) {\n            this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n        }\n\n        this.reprompt = this.getResponseProperty('Reprompt') || CipherRepromptType.None;\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { Policy } from 'jslib-common/models/domain/policy';\n\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\n@Component({\n    selector: 'app-organizations',\n    templateUrl: 'organizations.component.html',\n})\nexport class OrganizationsComponent implements OnInit {\n    @Input() vault = false;\n\n    organizations: Organization[];\n    policies: Policy[];\n    loaded: boolean = false;\n    actionPromise: Promise<any>;\n\n    constructor(private userService: UserService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private apiService: ApiService,\n        private toasterService: ToasterService, private syncService: SyncService,\n        private cryptoService: CryptoService, private policyService: PolicyService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        if (!this.vault) {\n            await this.syncService.fullSync(true);\n            await this.load();\n        }\n    }\n\n    async load() {\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.organizations = orgs;\n        this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n        this.loaded = true;\n    }\n\n    allowEnrollmentChanges(org: Organization): boolean {\n        if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n            const policy = this.policies.find(p => p.organizationId === org.id);\n            if (policy != null && policy.enabled) {\n                return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n            }\n        }\n\n        return false;\n    }\n\n    showEnrolledStatus(org: Organization): boolean {\n        return org.useResetPassword && org.resetPasswordEnrolled && this.policies.some(p => p.organizationId === org.id && p.enabled);\n    }\n\n    async unlinkSso(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            'Are you sure you want to unlink SSO for this organization?', org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, 'Unlinked SSO');\n            await this.load();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async leave(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('leaveOrganizationConfirmation'), org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('leftOrganization'));\n            await this.load();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async toggleResetPasswordEnrollment(org: Organization) {\n        // Set variables\n        let keyString: string = null;\n        let toastStringRef = 'withdrawPasswordResetSuccess';\n\n        // Enrolling\n        if (!org.resetPasswordEnrolled) {\n            // Alert user about enrollment\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('resetPasswordEnrollmentWarning'), null,\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n            if (!confirmed) {\n                return;\n            }\n\n            // Retrieve Public Key\n            this.actionPromise = this.apiService.getOrganizationKeys(org.id)\n                .then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                    }\n\n                    const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n                    // RSA Encrypt user's encKey.key with organization public key\n                    const encKey = await this.cryptoService.getEncKey();\n                    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n                    keyString = encryptedKey.encryptedString;\n                    toastStringRef = 'enrollPasswordResetSuccess';\n\n                    // Create request and execute enrollment\n                    const request = new OrganizationUserResetPasswordEnrollmentRequest();\n                    request.resetPasswordKey = keyString;\n                    return this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n                })\n                .then(() => {\n                    return this.syncService.fullSync(true);\n                });\n        } else {\n            // Withdrawal\n            const request = new OrganizationUserResetPasswordEnrollmentRequest();\n            request.resetPasswordKey = keyString;\n            this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request)\n                .then(() => {\n                    return this.syncService.fullSync(true);\n                });\n        }\n\n        try {\n            await this.actionPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t(toastStringRef));\n            await this.load();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<ng-container *ngIf=\"vault\"> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ul class=\"fa-ul card-ul carets\" *ngIf=\"organizations && organizations.length\"> <li *ngFor=\"let o of organizations\"> <a [routerLink]=\"['/organizations', o.id]\" class=\"text-body\"> <i class=\"fa-li fa fa-caret-right\" aria-hidden=\"true\"></i> {{o.name}} <ng-container *ngIf=\"!o.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'organizationIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span> </ng-container> </a> </li> </ul> <p *ngIf=\"!organizations || !organizations.length\">{{'noOrganizationsList' | i18n}}</p> </ng-container> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-block btn-outline-primary\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </ng-container> <ng-container *ngIf=\"!vault\"> <div class=\"page-header d-flex\"> <h1> {{'organizations' | i18n}} <small [appApiAction]=\"actionPromise\" #action> <ng-container *ngIf=\"action.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"!loaded || (organizations && organizations.length)\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <ng-container *ngIf=\"!organizations || !organizations.length\"> <p>{{'noOrganizationsList' | i18n}}</p> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-outline-primary\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </ng-container> <table class=\"table table-hover table-list\" *ngIf=\"organizations && organizations.length\"> <tbody> <tr *ngFor=\"let o of organizations\"> <td width=\"30\"> <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" [routerLink]=\"['/organizations', o.id]\">{{o.name}}</a> <ng-container *ngIf=\"!o.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'organizationIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span> </ng-container> <ng-container *ngIf=\"showEnrolledStatus(o)\"> <i class=\"fa fa-key\" appStopProp title=\"{{'enrolledPasswordReset' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enrolledPasswordReset' | i18n}}</span> </ng-container> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a *ngIf=\"allowEnrollmentChanges(o) && !o.resetPasswordEnrolled\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleResetPasswordEnrollment(o)\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'enrollPasswordReset' | i18n}} </a> <a *ngIf=\"allowEnrollmentChanges(o) && o.resetPasswordEnrolled\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleResetPasswordEnrollment(o)\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'withdrawPasswordReset' | i18n}} </a> <ng-container *ngIf=\"o.useSso && o.identifier\"> <a *ngIf=\"o.ssoBound; else linkSso\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"unlinkSso(o)\"> <i class=\"fa fa-fw fa-chain-broken\" aria-hidden=\"true\"></i> {{'unlinkSso' | i18n}} </a> <ng-template #linkSso> <app-link-sso [organization]=\"o\"> </app-link-sso> </ng-template> </ng-container> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"leave(o)\"> <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i> {{'leave' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> ","import { BaseResponse } from './baseResponse';\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n    id: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.readOnly = this.getResponseProperty('ReadOnly');\n        this.hidePasswords = this.getResponseProperty('HidePasswords');\n    }\n}\n","export enum EncryptionType {\n    AesCbc256_B64 = 0,\n    AesCbc128_HmacSha256_B64 = 1,\n    AesCbc256_HmacSha256_B64 = 2,\n    Rsa2048_OaepSha256_B64 = 3,\n    Rsa2048_OaepSha1_B64 = 4,\n    Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n    Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { KeysRequest } from './keysRequest';\n\nexport class OrganizationKeysRequest extends KeysRequest {\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        super(publicKey, encryptedPrivateKey);\n    }\n}\n","export enum DeviceType {\n    Android = 0,\n    iOS = 1,\n    ChromeExtension = 2,\n    FirefoxExtension = 3,\n    OperaExtension = 4,\n    EdgeExtension = 5,\n    WindowsDesktop = 6,\n    MacOsDesktop = 7,\n    LinuxDesktop = 8,\n    ChromeBrowser = 9,\n    FirefoxBrowser = 10,\n    OperaBrowser = 11,\n    EdgeBrowser = 12,\n    IEBrowser = 13,\n    UnknownBrowser = 14,\n    AndroidAmazon = 15,\n    UWP = 16,\n    SafariBrowser = 17,\n    VivaldiBrowser = 18,\n    VivaldiExtension = 19,\n    SafariExtension = 20,\n}\n","export enum ProviderUserStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n}\n","export class ProviderUserBulkRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\n\nexport interface BulkUserDetails {\n    id: string;\n    name: string;\n    email: string;\n    status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n    user: BulkUserDetails,\n    error: boolean,\n    message: string,\n};\n\n@Component({\n    selector: 'app-bulk-status',\n    templateUrl: 'bulk-status.component.html',\n})\nexport class BulkStatusComponent {\n\n    users: BulkStatusEntry[];\n    loading: boolean = false;\n\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'bulkConfirmStatus' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <table class=\"table table-hover table-list\" *ngIf=\"!loading\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let item of users\"> <td width=\"30\"> <app-avatar [data]=\"item.user | userName\" [email]=\"item.user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{item.user.email}} <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{item.user.name}}</small> </td> <td class=\"text-danger\" *ngIf=\"item.error\"> {{item.message}} </td> <td *ngIf=\"!item.error\"> {{item.message}} </td> </tr> </table> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { OrganizationUserBulkConfirmRequest } from 'jslib-common/models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\n\nimport { Utils } from 'jslib-common/misc/utils';\nimport { BulkUserDetails } from './bulk-status.component';\n\n@Component({\n    selector: 'app-bulk-confirm',\n    templateUrl: 'bulk-confirm.component.html',\n})\nexport class BulkConfirmComponent implements OnInit {\n\n    @Input() organizationId: string;\n    @Input() users: BulkUserDetails[];\n\n    excludedUsers: BulkUserDetails[];\n    filteredUsers: BulkUserDetails[];\n    publicKeys: Map<string, Uint8Array> = new Map();\n    fingerprints: Map<string, string> = new Map();\n    statuses: Map<string, string> = new Map();\n\n    loading: boolean = true;\n    done: boolean = false;\n    error: string;\n\n    constructor(protected cryptoService: CryptoService, protected apiService: ApiService,\n      private i18nService: I18nService) { }\n\n    async ngOnInit() {\n        this.excludedUsers = this.users.filter(u => !this.isAccepted(u));\n        this.filteredUsers = this.users.filter(u => this.isAccepted(u));\n\n        if (this.filteredUsers.length <= 0) {\n            this.done = true;\n        }\n\n        const response = await this.getPublicKeys();\n\n        for (const entry of response.data) {\n            const publicKey = Utils.fromB64ToArray(entry.key);\n            const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n            if (fingerprint != null) {\n                this.publicKeys.set(entry.id, publicKey);\n                this.fingerprints.set(entry.id, fingerprint.join('-'));\n            }\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        this.loading = true;\n        try {\n            const key = await this.getCryptoKey();\n            const userIdsWithKeys: any[] = [];\n            for (const user of this.filteredUsers) {\n                const publicKey = this.publicKeys.get(user.id);\n                if (publicKey == null) {\n                    continue;\n                }\n                const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n                userIdsWithKeys.push({\n                    id: user.id,\n                    key: encryptedKey.encryptedString,\n                });\n            }\n            const response = await this.postConfirmRequest(userIdsWithKeys);\n\n            response.data.forEach(entry => {\n                const error = entry.error !== '' ? entry.error : this.i18nService.t('bulkConfirmMessage');\n                this.statuses.set(entry.id, error);\n            });\n\n            this.done = true;\n        } catch (e) {\n            this.error = e.message;\n        }\n        this.loading = false;\n    }\n\n    protected isAccepted(user: BulkUserDetails) {\n        return user.status === OrganizationUserStatusType.Accepted;\n    }\n\n    protected async getPublicKeys() {\n        const request = new OrganizationUserBulkRequest(this.filteredUsers.map(user => user.id));\n        return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n    }\n\n    protected getCryptoKey() {\n        return this.cryptoService.getOrgKey(this.organizationId);\n    }\n\n    protected async postConfirmRequest(userIdsWithKeys: any[]) {\n        const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n        return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'confirmUsers' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\"> {{'noSelectedUsersApplicable' | i18n}} </app-callout> <app-callout type=\"error\" *ngIf=\"error\"> {{error}} </app-callout> <ng-container *ngIf=\"!loading && !done\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'fingerprint' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of filteredUsers\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td> {{fingerprints.get(user.id)}} </td> </tr> <tr *ngFor=\"let user of excludedUsers\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> <ng-container *ngIf=\"!loading && done\"> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of filteredUsers\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td *ngIf=\"statuses.has(user.id)\"> {{statuses.get(user.id)}} </td> <td *ngIf=\"!statuses.has(user.id)\"> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" *ngIf=\"!done\" [disabled]=\"loading\" (click)=\"submit()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","export class OrganizationUserBulkRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\n\nimport { BulkUserDetails } from './bulk-status.component';\n\n@Component({\n    selector: 'app-bulk-remove',\n    templateUrl: 'bulk-remove.component.html',\n})\nexport class BulkRemoveComponent {\n\n    @Input() organizationId: string;\n    @Input() users: BulkUserDetails[];\n\n    statuses: Map<string, string> = new Map();\n\n    loading: boolean = false;\n    done: boolean = false;\n    error: string;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService) { }\n\n    async submit() {\n        this.loading = true;\n        try {\n            const response = await this.deleteUsers();\n\n            response.data.forEach(entry => {\n                const error = entry.error !== '' ? entry.error : this.i18nService.t('bulkRemovedMessage');\n                this.statuses.set(entry.id, error);\n            });\n            this.done = true;\n        } catch (e) {\n            this.error = e.message;\n        }\n\n        this.loading = false;\n    }\n\n    protected async deleteUsers() {\n        const request = new OrganizationUserBulkRequest(this.users.map(user => user.id));\n        return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'removeUsers' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"danger\" *ngIf=\"users.length <= 0\"> {{'noSelectedUsersApplicable' | i18n}} </app-callout> <app-callout type=\"error\" *ngIf=\"error\"> {{error}} </app-callout> <ng-container *ngIf=\"!done\"> <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\"> {{'removeUsersWarning' | i18n}} </app-callout> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of users\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> </tr> </table> </ng-container> <ng-container *ngIf=\"done\"> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of users\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td *ngIf=\"statuses.has(user.id)\"> {{statuses.get(user.id)}} </td> <td *ngIf=\"!statuses.has(user.id)\"> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" *ngIf=\"!done && users.length > 0\" [disabled]=\"loading\" (click)=\"submit()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'removeUsers' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-frontend-layout',\n    templateUrl: 'frontend-layout.component.html',\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = await this.platformUtilsService.getApplicationVersion();\n        document.body.classList.add('layout_frontend');\n    }\n\n    ngOnDestroy() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","<router-outlet></router-outlet> <div class=\"container my-5 text-muted text-center\"> &copy; {{year}}, Bitwarden Inc. <br> {{'versionNumber' | i18n : version}} </div> ","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-providers',\n    templateUrl: 'providers.component.html',\n})\nexport class ProvidersComponent implements OnInit {\n    @Input() vault = false;\n\n    providers: Provider[];\n    loaded: boolean = false;\n    actionPromise: Promise<any>;\n\n    constructor(private userService: UserService, private i18nService: I18nService) { }\n\n    async ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        await this.load();\n    }\n\n    async load() {\n        const providers = await this.userService.getAllProviders();\n        providers.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.providers = providers;\n        this.loaded = true;\n    }\n}\n","<ng-container *ngIf=\"vault\"> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ul class=\"fa-ul card-ul carets\" *ngIf=\"providers && providers.length\"> <li *ngFor=\"let p of providers\"> <a [routerLink]=\"['/providers', p.id]\" class=\"text-body\"> <i class=\"fa-li fa fa-caret-right\" aria-hidden=\"true\"></i> {{p.name}} <ng-container *ngIf=\"!p.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'providerIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'providerIsDisabled' | i18n}}</span> </ng-container> </a> </li> </ul> </ng-container> </ng-container> <ng-container *ngIf=\"!vault\"> <app-navbar></app-navbar> <div class=\"container page-content\"> <div class=\"page-header d-flex\"> <h1>{{'providers' | i18n}}</h1> </div> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\"> <tbody> <tr *ngFor=\"let p of providers\"> <td width=\"30\"> <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{p.name}}</a> <ng-container *ngIf=\"!p.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'providerIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'providerIsDisabled' | i18n}}</span> </ng-container> </td> </tr> </tbody> </table> </ng-container> </div> <app-footer></app-footer> </ng-container> ","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport {\n    DatePipe,\n    registerLocaleData,\n} from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ToasterModule } from 'angular2-toaster';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { NestedCheckboxComponent } from './components/nested-checkbox.component';\nimport { PasswordRepromptComponent } from './components/password-reprompt.component';\nimport { PasswordStrengthComponent } from './components/password-strength.component';\n\nimport { FooterComponent } from './layouts/footer.component';\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { NavbarComponent } from './layouts/navbar.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptEmergencyComponent } from './accounts/accept-emergency.component';\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { RemovePasswordComponent } from './accounts/remove-password.component';\nimport { SetPasswordComponent } from './accounts/set-password.component';\nimport { SsoComponent } from './accounts/sso.component';\nimport { TwoFactorOptionsComponent } from './accounts/two-factor-options.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { UpdateTempPasswordComponent } from './accounts/update-temp-password.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from './organizations/manage/bulk/bulk-confirm.component';\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from './organizations/manage/bulk/bulk-remove.component';\nimport { BulkStatusComponent as OrgBulkStatusComponent } from './organizations/manage/bulk/bulk-status.component';\nimport {\n    CollectionAddEditComponent as OrgCollectionAddEditComponent,\n} from './organizations/manage/collection-add-edit.component';\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EntityEventsComponent as OrgEntityEventsComponent } from './organizations/manage/entity-events.component';\nimport { EntityUsersComponent as OrgEntityUsersComponent } from './organizations/manage/entity-users.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from './organizations/manage/group-add-edit.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\nimport { PolicyEditComponent as OrgPolicyEditComponent } from './organizations/manage/policy-edit.component';\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from './organizations/manage/reset-password.component';\nimport { UserAddEditComponent as OrgUserAddEditComponent } from './organizations/manage/user-add-edit.component';\nimport { UserConfirmComponent as OrgUserConfirmComponent } from './organizations/manage/user-confirm.component';\nimport { UserGroupsComponent as OrgUserGroupsComponent } from './organizations/manage/user-groups.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { AdjustSubscription } from './organizations/settings/adjust-subscription.component';\nimport { ChangePlanComponent } from './organizations/settings/change-plan.component';\nimport { DeleteOrganizationComponent } from './organizations/settings/delete-organization.component';\nimport { DownloadLicenseComponent } from './organizations/settings/download-license.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { SettingsComponent as OrgSettingComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { FamiliesForEnterpriseSetupComponent } from './organizations/sponsorships/families-for-enterprise-setup.component';\nimport { AddEditComponent as OrgAddEditComponent } from './organizations/vault/add-edit.component';\nimport { AttachmentsComponent as OrgAttachmentsComponent } from './organizations/vault/attachments.component';\nimport { CiphersComponent as OrgCiphersComponent } from './organizations/vault/ciphers.component';\nimport { CollectionsComponent as OrgCollectionsComponent } from './organizations/vault/collections.component';\nimport { GroupingsComponent as OrgGroupingsComponent } from './organizations/vault/groupings.component';\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccessComponent } from './send/access.component';\nimport { AddEditComponent as SendAddEditComponent } from './send/add-edit.component';\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from './send/efflux-dates.component';\nimport { SendComponent } from './send/send.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { AddCreditComponent } from './settings/add-credit.component';\nimport { AdjustPaymentComponent } from './settings/adjust-payment.component';\nimport { AdjustStorageComponent } from './settings/adjust-storage.component';\nimport { ApiKeyComponent } from './settings/api-key.component';\nimport { ChangeEmailComponent } from './settings/change-email.component';\nimport { ChangeKdfComponent } from './settings/change-kdf.component';\nimport { ChangePasswordComponent } from './settings/change-password.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DeauthorizeSessionsComponent } from './settings/deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './settings/delete-account.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { EmergencyAccessAddEditComponent } from './settings/emergency-access-add-edit.component';\nimport { EmergencyAccessAttachmentsComponent } from './settings/emergency-access-attachments.component';\nimport { EmergencyAccessConfirmComponent } from './settings/emergency-access-confirm.component';\nimport { EmergencyAccessTakeoverComponent } from './settings/emergency-access-takeover.component';\nimport { EmergencyAccessViewComponent } from './settings/emergency-access-view.component';\nimport { EmergencyAccessComponent } from './settings/emergency-access.component';\nimport { EmergencyAddEditComponent } from './settings/emergency-add-edit.component';\nimport { LinkSsoComponent } from './settings/link-sso.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationPlansComponent } from './settings/organization-plans.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PaymentComponent } from './settings/payment.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { ProfileComponent } from './settings/profile.component';\nimport { PurgeVaultComponent } from './settings/purge-vault.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { SponsoredFamiliesComponent } from './settings/sponsored-families.component';\nimport { SponsoringOrgRowComponent } from './settings/sponsoring-org-row.component';\nimport { TaxInfoComponent } from './settings/tax-info.component';\nimport { TwoFactorAuthenticatorComponent } from './settings/two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './settings/two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './settings/two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './settings/two-factor-recovery.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { TwoFactorVerifyComponent } from './settings/two-factor-verify.component';\nimport { TwoFactorWebAuthnComponent } from './settings/two-factor-webauthn.component';\nimport { TwoFactorYubiKeyComponent } from './settings/two-factor-yubikey.component';\nimport { UpdateKeyComponent } from './settings/update-key.component';\nimport { UpdateLicenseComponent } from './settings/update-license.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\nimport { VaultTimeoutInputComponent } from './settings/vault-timeout-input.component';\nimport { VerifyEmailComponent } from './settings/verify-email.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorHistoryComponent } from './tools/password-generator-history.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { AddEditCustomFieldsComponent } from './vault/add-edit-custom-fields.component';\nimport { AddEditComponent } from './vault/add-edit.component';\nimport { AttachmentsComponent } from './vault/attachments.component';\nimport { BulkActionsComponent } from './vault/bulk-actions.component';\nimport { BulkDeleteComponent } from './vault/bulk-delete.component';\nimport { BulkMoveComponent } from './vault/bulk-move.component';\nimport { BulkRestoreComponent } from './vault/bulk-restore.component';\nimport { BulkShareComponent } from './vault/bulk-share.component';\nimport { CiphersComponent } from './vault/ciphers.component';\nimport { CollectionsComponent } from './vault/collections.component';\nimport { FolderAddEditComponent } from './vault/folder-add-edit.component';\nimport { GroupingsComponent } from './vault/groupings.component';\nimport { ShareComponent } from './vault/share.component';\nimport { VaultComponent } from './vault/vault.component';\n\nimport { ProvidersComponent } from './providers/providers.component';\n\nimport { AvatarComponent } from 'jslib-angular/components/avatar.component';\nimport { CalloutComponent } from 'jslib-angular/components/callout.component';\nimport { IconComponent } from 'jslib-angular/components/icon.component';\nimport { VerifyMasterPasswordComponent } from 'jslib-angular/components/verify-master-password.component';\n\nimport { A11yTitleDirective } from 'jslib-angular/directives/a11y-title.directive';\nimport { ApiActionDirective } from 'jslib-angular/directives/api-action.directive';\nimport { AutofocusDirective } from 'jslib-angular/directives/autofocus.directive';\nimport { BlurClickDirective } from 'jslib-angular/directives/blur-click.directive';\nimport { BoxRowDirective } from 'jslib-angular/directives/box-row.directive';\nimport { FallbackSrcDirective } from 'jslib-angular/directives/fallback-src.directive';\nimport { InputVerbatimDirective } from 'jslib-angular/directives/input-verbatim.directive';\nimport { SelectCopyDirective } from 'jslib-angular/directives/select-copy.directive';\nimport { StopClickDirective } from 'jslib-angular/directives/stop-click.directive';\nimport { StopPropDirective } from 'jslib-angular/directives/stop-prop.directive';\nimport { TrueFalseValueDirective } from 'jslib-angular/directives/true-false-value.directive';\n\nimport { ColorPasswordPipe } from 'jslib-angular/pipes/color-password.pipe';\nimport { I18nPipe } from 'jslib-angular/pipes/i18n.pipe';\nimport { SearchCiphersPipe } from 'jslib-angular/pipes/search-ciphers.pipe';\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport localeAz from '@angular/common/locales/az';\nimport localeBg from '@angular/common/locales/bg';\nimport localeCa from '@angular/common/locales/ca';\nimport localeCs from '@angular/common/locales/cs';\nimport localeDa from '@angular/common/locales/da';\nimport localeDe from '@angular/common/locales/de';\nimport localeEl from '@angular/common/locales/el';\nimport localeEnGb from '@angular/common/locales/en-GB';\nimport localeEnIn from '@angular/common/locales/en-IN';\nimport localeEo from '@angular/common/locales/eo';\nimport localeEs from '@angular/common/locales/es';\nimport localeEt from '@angular/common/locales/et';\nimport localeFi from '@angular/common/locales/fi';\nimport localeFr from '@angular/common/locales/fr';\nimport localeHe from '@angular/common/locales/he';\nimport localeHr from '@angular/common/locales/hr';\nimport localeHu from '@angular/common/locales/hu';\nimport localeId from '@angular/common/locales/id';\nimport localeIt from '@angular/common/locales/it';\nimport localeJa from '@angular/common/locales/ja';\nimport localeKn from '@angular/common/locales/kn';\nimport localeKo from '@angular/common/locales/ko';\nimport localeLv from '@angular/common/locales/lv';\nimport localeMl from '@angular/common/locales/ml';\nimport localeNb from '@angular/common/locales/nb';\nimport localeNl from '@angular/common/locales/nl';\nimport localePl from '@angular/common/locales/pl';\nimport localePtBr from '@angular/common/locales/pt';\nimport localePtPt from '@angular/common/locales/pt-PT';\nimport localeRo from '@angular/common/locales/ro';\nimport localeRu from '@angular/common/locales/ru';\nimport localeSk from '@angular/common/locales/sk';\nimport localeSr from '@angular/common/locales/sr';\nimport localeSv from '@angular/common/locales/sv';\nimport localeTr from '@angular/common/locales/tr';\nimport localeUk from '@angular/common/locales/uk';\nimport localeZhCn from '@angular/common/locales/zh-Hans';\nimport localeZhTw from '@angular/common/locales/zh-Hant';\n\nimport { DisableSendPolicyComponent } from './organizations/policies/disable-send.component';\nimport { MasterPasswordPolicyComponent } from './organizations/policies/master-password.component';\nimport { PasswordGeneratorPolicyComponent } from './organizations/policies/password-generator.component';\nimport { PersonalOwnershipPolicyComponent } from './organizations/policies/personal-ownership.component';\nimport { RequireSsoPolicyComponent } from './organizations/policies/require-sso.component';\nimport { ResetPasswordPolicyComponent } from './organizations/policies/reset-password.component';\nimport { SendOptionsPolicyComponent } from './organizations/policies/send-options.component';\nimport { SingleOrgPolicyComponent } from './organizations/policies/single-org.component';\nimport { TwoFactorAuthenticationPolicyComponent } from './organizations/policies/two-factor-authentication.component';\n\nregisterLocaleData(localeAz, 'az');\nregisterLocaleData(localeBg, 'bg');\nregisterLocaleData(localeCa, 'ca');\nregisterLocaleData(localeCs, 'cs');\nregisterLocaleData(localeDa, 'da');\nregisterLocaleData(localeDe, 'de');\nregisterLocaleData(localeEl, 'el');\nregisterLocaleData(localeEnGb, 'en-GB');\nregisterLocaleData(localeEnIn, 'en-IN');\nregisterLocaleData(localeEs, 'es');\nregisterLocaleData(localeEt, 'et');\nregisterLocaleData(localeEo, 'eo');\nregisterLocaleData(localeFi, 'fi');\nregisterLocaleData(localeFr, 'fr');\nregisterLocaleData(localeHe, 'he');\nregisterLocaleData(localeHr, 'hr');\nregisterLocaleData(localeHu, 'hu');\nregisterLocaleData(localeId, 'id');\nregisterLocaleData(localeIt, 'it');\nregisterLocaleData(localeJa, 'ja');\nregisterLocaleData(localeKn, 'kn');\nregisterLocaleData(localeKo, 'ko');\nregisterLocaleData(localeLv, 'lv');\nregisterLocaleData(localeMl, 'ml');\nregisterLocaleData(localeNb, 'nb');\nregisterLocaleData(localeNl, 'nl');\nregisterLocaleData(localePl, 'pl');\nregisterLocaleData(localePtBr, 'pt-BR');\nregisterLocaleData(localePtPt, 'pt-PT');\nregisterLocaleData(localeRo, 'ro');\nregisterLocaleData(localeRu, 'ru');\nregisterLocaleData(localeSk, 'sk');\nregisterLocaleData(localeSr, 'sr');\nregisterLocaleData(localeSv, 'sv');\nregisterLocaleData(localeTr, 'tr');\nregisterLocaleData(localeUk, 'uk');\nregisterLocaleData(localeZhCn, 'zh-CN');\nregisterLocaleData(localeZhTw, 'zh-TW');\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        DragDropModule,\n        ToasterModule.forChild(),\n        ReactiveFormsModule,\n        RouterModule,\n    ],\n    declarations: [\n        A11yTitleDirective,\n        AcceptEmergencyComponent,\n        AccessComponent,\n        AcceptOrganizationComponent,\n        AccountComponent,\n        SetPasswordComponent,\n        AddCreditComponent,\n        AddEditComponent,\n        AddEditCustomFieldsComponent,\n        AdjustPaymentComponent,\n        AdjustSubscription,\n        AdjustStorageComponent,\n        ApiActionDirective,\n        ApiKeyComponent,\n        AttachmentsComponent,\n        AutofocusDirective,\n        AvatarComponent,\n        BlurClickDirective,\n        BoxRowDirective,\n        BreachReportComponent,\n        BulkActionsComponent,\n        BulkDeleteComponent,\n        BulkMoveComponent,\n        BulkRestoreComponent,\n        BulkShareComponent,\n        CalloutComponent,\n        ChangeEmailComponent,\n        ChangeKdfComponent,\n        ChangePasswordComponent,\n        ChangePlanComponent,\n        CiphersComponent,\n        CollectionsComponent,\n        ColorPasswordPipe,\n        CreateOrganizationComponent,\n        DeauthorizeSessionsComponent,\n        DeleteAccountComponent,\n        DeleteOrganizationComponent,\n        DomainRulesComponent,\n        DownloadLicenseComponent,\n        EmergencyAccessAddEditComponent,\n        EmergencyAccessAttachmentsComponent,\n        EmergencyAccessComponent,\n        EmergencyAccessConfirmComponent,\n        EmergencyAccessTakeoverComponent,\n        EmergencyAccessViewComponent,\n        EmergencyAddEditComponent,\n        ExportComponent,\n        ExposedPasswordsReportComponent,\n        FallbackSrcDirective,\n        FamiliesForEnterpriseSetupComponent,\n        FolderAddEditComponent,\n        FooterComponent,\n        FrontendLayoutComponent,\n        GroupingsComponent,\n        HintComponent,\n        I18nPipe,\n        IconComponent,\n        ImportComponent,\n        InactiveTwoFactorReportComponent,\n        InputVerbatimDirective,\n        LinkSsoComponent,\n        LockComponent,\n        LoginComponent,\n        NavbarComponent,\n        NestedCheckboxComponent,\n        OptionsComponent,\n        OrgAccountComponent,\n        OrgAddEditComponent,\n        OrganizationBillingComponent,\n        OrganizationPlansComponent,\n        OrganizationSubscriptionComponent,\n        OrgAttachmentsComponent,\n        OrgBulkStatusComponent,\n        OrgBulkConfirmComponent,\n        OrgBulkRemoveComponent,\n        OrgCiphersComponent,\n        OrgCollectionAddEditComponent,\n        OrgCollectionsComponent,\n        OrgEntityEventsComponent,\n        OrgEntityUsersComponent,\n        OrgEventsComponent,\n        OrgExportComponent,\n        OrgExposedPasswordsReportComponent,\n        OrgImportComponent,\n        OrgInactiveTwoFactorReportComponent,\n        OrgGroupAddEditComponent,\n        OrgGroupingsComponent,\n        OrgGroupsComponent,\n        OrgManageCollectionsComponent,\n        OrgManageComponent,\n        OrgPeopleComponent,\n        OrgPolicyEditComponent,\n        OrgPoliciesComponent,\n        OrgResetPasswordComponent,\n        OrgReusedPasswordsReportComponent,\n        OrgSettingComponent,\n        OrgToolsComponent,\n        OrgTwoFactorSetupComponent,\n        OrgUserAddEditComponent,\n        OrgUserConfirmComponent,\n        OrgUserGroupsComponent,\n        OrganizationsComponent,\n        OrganizationLayoutComponent,\n        OrgUnsecuredWebsitesReportComponent,\n        OrgVaultComponent,\n        OrgWeakPasswordsReportComponent,\n        PasswordGeneratorComponent,\n        PasswordGeneratorHistoryComponent,\n        PasswordStrengthComponent,\n        PasswordRepromptComponent,\n        PaymentComponent,\n        PremiumComponent,\n        ProfileComponent,\n        PurgeVaultComponent,\n        RecoverDeleteComponent,\n        RecoverTwoFactorComponent,\n        RegisterComponent,\n        ReusedPasswordsReportComponent,\n        SearchCiphersPipe,\n        SearchPipe,\n        SelectCopyDirective,\n        SendAddEditComponent,\n        SendEffluxDatesComponent,\n        SendComponent,\n        SettingsComponent,\n        ShareComponent,\n        SponsoredFamiliesComponent,\n        SponsoringOrgRowComponent,\n        SsoComponent,\n        StopClickDirective,\n        StopPropDirective,\n        TaxInfoComponent,\n        ToolsComponent,\n        TrueFalseValueDirective,\n        TwoFactorAuthenticatorComponent,\n        TwoFactorComponent,\n        TwoFactorDuoComponent,\n        TwoFactorEmailComponent,\n        TwoFactorOptionsComponent,\n        TwoFactorRecoveryComponent,\n        TwoFactorSetupComponent,\n        TwoFactorVerifyComponent,\n        TwoFactorWebAuthnComponent,\n        TwoFactorYubiKeyComponent,\n        UnsecuredWebsitesReportComponent,\n        UpdateKeyComponent,\n        UpdateLicenseComponent,\n        UpdateTempPasswordComponent,\n        UserBillingComponent,\n        UserLayoutComponent,\n        UserSubscriptionComponent,\n        UserNamePipe,\n        VaultComponent,\n        VerifyEmailComponent,\n        VerifyEmailTokenComponent,\n        VerifyRecoverDeleteComponent,\n        WeakPasswordsReportComponent,\n        ProvidersComponent,\n        TwoFactorAuthenticationPolicyComponent,\n        MasterPasswordPolicyComponent,\n        SingleOrgPolicyComponent,\n        PasswordGeneratorPolicyComponent,\n        RequireSsoPolicyComponent,\n        PersonalOwnershipPolicyComponent,\n        DisableSendPolicyComponent,\n        SendOptionsPolicyComponent,\n        ResetPasswordPolicyComponent,\n        VaultTimeoutInputComponent,\n        AddEditCustomFieldsComponent,\n        VerifyMasterPasswordComponent,\n        RemovePasswordComponent,\n    ],\n    exports: [\n        A11yTitleDirective,\n        AvatarComponent,\n        CalloutComponent,\n        ApiActionDirective,\n        StopClickDirective,\n        StopPropDirective,\n        I18nPipe,\n        SearchPipe,\n        UserNamePipe,\n        NavbarComponent,\n        FooterComponent,\n        OrganizationPlansComponent,\n    ],\n    providers: [DatePipe, SearchPipe, UserNamePipe],\n    bootstrap: [],\n})\nexport class OssModule { }\n","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nconst BroadcasterSubscriptionId = 'OrganizationLayoutComponent';\n\n@Component({\n    selector: 'app-organization-layout',\n    templateUrl: 'organization-layout.component.html',\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n    organization: Organization;\n    businessTokenPromise: Promise<any>;\n    private organizationId: string;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone) { }\n\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        this.route.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n        });\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'updatedOrgLicense':\n                        await this.load();\n                        break;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.organization = await this.userService.getOrganization(this.organizationId);\n    }\n\n    get showMenuBar() {\n        return this.showManageTab || this.showToolsTab || this.organization.isOwner;\n    }\n\n    get showManageTab(): boolean {\n        return this.organization.canManageUsers ||\n            this.organization.canViewAllCollections ||\n            this.organization.canViewAssignedCollections ||\n            this.organization.canManageGroups ||\n            this.organization.canManagePolicies ||\n            this.organization.canAccessEventLogs;\n    }\n\n    get showToolsTab(): boolean {\n        return this.organization.canAccessImportExport || this.organization.canAccessReports;\n    }\n\n    get toolsRoute(): string {\n        return this.organization.canAccessImportExport ?\n            'tools/import' :\n            'tools/exposed-passwords-report';\n    }\n\n    get manageRoute(): string {\n        let route: string;\n        switch (true) {\n            case this.organization.canManageUsers:\n                route = 'manage/people';\n                break;\n            case this.organization.canViewAssignedCollections || this.organization.canViewAllCollections:\n                route = 'manage/collections';\n                break;\n            case this.organization.canManageGroups:\n                route = 'manage/groups';\n                break;\n            case this.organization.canManagePolicies:\n                route = 'manage/policies';\n                break;\n            case this.organization.canAccessEventLogs:\n                route = 'manage/events';\n                break;\n        }\n        return route;\n    }\n}\n","<app-navbar></app-navbar> <div class=\"org-nav\" *ngIf=\"organization\"> <div class=\"container d-flex\"> <div class=\"d-flex flex-column\"> <div class=\"my-auto d-flex align-items-center pl-1\"> <app-avatar [data]=\"organization.name\" size=\"45\" [circle]=\"true\"></app-avatar> <div class=\"org-name ml-3\"> <span>{{organization.name}}</span> <small class=\"text-muted\">{{'organization' | i18n}}</small> </div> <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!organization.enabled\"> <div class=\"card-body py-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'organizationIsDisabled' | i18n}} </div> </div> <div class=\"ml-3 card border-info text-info bg-transparent\" *ngIf=\"organization.isProviderUser\"> <div class=\"card-body py-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'accessingUsingProvider' | i18n : organization.providerName}} </div> </div> </div> <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\"> <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\"> <i class=\"fa fa-lock\" aria-hidden=\"true\"></i> {{'vault' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showManageTab\"> <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i> {{'manage' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showToolsTab\"> <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-wrench\" aria-hidden=\"true\"></i> {{'tools' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"organization.isOwner\"> <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\"> <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i> {{'settings' | i18n}} </a> </li> </ul> </div> </div> </div> <router-outlet></router-outlet> <app-footer></app-footer> ","import { PolicyData } from '../data/policyData';\n\nimport Domain from './domainBase';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class Policy extends Domain {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(obj?: PolicyData) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.organizationId = obj.organizationId;\n        this.type = obj.type;\n        this.data = obj.data;\n        this.enabled = obj.enabled;\n    }\n}\n","import { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\nimport { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { SetKeyConnectorKeyRequest } from '../models/request/account/setKeyConnectorKeyRequest';\nimport { DeviceRequest } from '../models/request/deviceRequest';\nimport { KeyConnectorUserKeyRequest } from '../models/request/keyConnectorUserKeyRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\n\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { AuthService as AuthServiceAbstraction } from '../abstractions/auth.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { EnvironmentService } from '../abstractions/environment.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { KeyConnectorService } from '../abstractions/keyConnector.service';\nimport { LogService } from '../abstractions/log.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\n\nimport { Utils } from '../misc/utils';\n\nexport const TwoFactorProviders = {\n    [TwoFactorProviderType.Authenticator]: {\n        type: TwoFactorProviderType.Authenticator,\n        name: null as string,\n        description: null as string,\n        priority: 1,\n        sort: 1,\n        premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n        type: TwoFactorProviderType.Yubikey,\n        name: null as string,\n        description: null as string,\n        priority: 3,\n        sort: 2,\n        premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n        type: TwoFactorProviderType.Duo,\n        name: 'Duo',\n        description: null as string,\n        priority: 2,\n        sort: 3,\n        premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n        type: TwoFactorProviderType.OrganizationDuo,\n        name: 'Duo (Organization)',\n        description: null as string,\n        priority: 10,\n        sort: 4,\n        premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n        type: TwoFactorProviderType.Email,\n        name: null as string,\n        description: null as string,\n        priority: 0,\n        sort: 6,\n        premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n        type: TwoFactorProviderType.WebAuthn,\n        name: null as string,\n        description: null as string,\n        priority: 4,\n        sort: 5,\n        premium: true,\n    },\n};\n\nexport class AuthService implements AuthServiceAbstraction {\n    email: string;\n    masterPasswordHash: string;\n    localMasterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    ssoRedirectUrl: string;\n    clientId: string;\n    clientSecret: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType = null;\n    captchaToken: string;\n\n    private key: SymmetricCryptoKey;\n\n    constructor(private cryptoService: CryptoService, protected apiService: ApiService,\n        private userService: UserService, protected tokenService: TokenService,\n        protected appIdService: AppIdService, private i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, private messagingService: MessagingService,\n        private vaultTimeoutService: VaultTimeoutService, private logService: LogService,\n        private cryptoFunctionService: CryptoFunctionService, private environmentService: EnvironmentService,\n        private keyConnectorService: KeyConnectorService, private setCryptoKeys = true) {\n    }\n\n    init() {\n        TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t('emailTitle');\n        TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t('emailDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].name = this.i18nService.t('authenticatorAppTitle');\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n            this.i18nService.t('authenticatorAppDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t('duoDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n            'Duo (' + this.i18nService.t('organization') + ')';\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n            this.i18nService.t('duoOrganizationDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t('webAuthnTitle');\n        TwoFactorProviders[TwoFactorProviderType.WebAuthn].description = this.i18nService.t('webAuthnDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t('yubiKeyTitle');\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].description = this.i18nService.t('yubiKeyDesc');\n    }\n\n    async logIn(email: string, masterPassword: string, captchaToken?: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        const localHashedPassword = await this.cryptoService.hashPassword(masterPassword, key,\n            HashPurpose.LocalAuthorization);\n        return await this.logInHelper(email, hashedPassword, localHashedPassword, null, null, null, null, null,\n            key, null, null, null, captchaToken, null);\n    }\n\n    async logInSso(code: string, codeVerifier: string, redirectUrl: string, orgId: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, code, codeVerifier, redirectUrl, null, null,\n            null, null, null, null, null, orgId);\n    }\n\n    async logInApiKey(clientId: string, clientSecret: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, null, null, null, clientId, clientSecret,\n            null, null, null, null, null, null);\n    }\n\n    async logInTwoFactor(twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean): Promise<AuthResult> {\n        return await this.logInHelper(this.email, this.masterPasswordHash, this.localMasterPasswordHash, this.code,\n            this.codeVerifier, this.ssoRedirectUrl, this.clientId, this.clientSecret, this.key, twoFactorProvider,\n            twoFactorToken, remember, this.captchaToken, null);\n    }\n\n    async logInComplete(email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean, captchaToken?: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        const localHashedPassword = await this.cryptoService.hashPassword(masterPassword, key,\n            HashPurpose.LocalAuthorization);\n        return await this.logInHelper(email, hashedPassword, localHashedPassword, null, null, null, null, null, key,\n            twoFactorProvider, twoFactorToken, remember, captchaToken, null);\n    }\n\n    async logInSsoComplete(code: string, codeVerifier: string, redirectUrl: string,\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, code, codeVerifier, redirectUrl, null,\n            null, null, twoFactorProvider, twoFactorToken, remember, null, null);\n    }\n\n    async logInApiKeyComplete(clientId: string, clientSecret: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, null, null, null, clientId, clientSecret, null,\n            twoFactorProvider, twoFactorToken, remember, null, null);\n    }\n\n    logOut(callback: Function) {\n        callback();\n        this.messagingService.send('loggedOut');\n    }\n\n    getSupportedTwoFactorProviders(win: Window): any[] {\n        const providers: any[] = [];\n        if (this.twoFactorProvidersData == null) {\n            return providers;\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n            this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) && this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) && this.platformUtilsService.supportsWebAuthn(win)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n        }\n\n        return providers;\n    }\n\n    getDefaultTwoFactorProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n        if (this.twoFactorProvidersData == null) {\n            return null;\n        }\n\n        if (this.selectedTwoFactorProviderType != null &&\n            this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)) {\n            return this.selectedTwoFactorProviderType;\n        }\n\n        let providerType: TwoFactorProviderType = null;\n        let providerPriority = -1;\n        this.twoFactorProvidersData.forEach((value, type) => {\n            const provider = (TwoFactorProviders as any)[type];\n            if (provider != null && provider.priority > providerPriority) {\n                if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n                    return;\n                }\n\n                providerType = type;\n                providerPriority = provider.priority;\n            }\n        });\n\n        return providerType;\n    }\n\n    async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n        email = email.trim().toLowerCase();\n        let kdf: KdfType = null;\n        let kdfIterations: number = null;\n        try {\n            const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n            if (preloginResponse != null) {\n                kdf = preloginResponse.kdf;\n                kdfIterations = preloginResponse.kdfIterations;\n            }\n        } catch (e) {\n            if (e == null || e.statusCode !== 404) {\n                throw e;\n            }\n        }\n        return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    }\n\n    authingWithApiKey(): boolean {\n        return this.clientId != null && this.clientSecret != null;\n    }\n\n    authingWithSso(): boolean {\n        return this.code != null && this.codeVerifier != null && this.ssoRedirectUrl != null;\n    }\n\n    authingWithPassword(): boolean {\n        return this.email != null && this.masterPasswordHash != null;\n    }\n\n    private async logInHelper(email: string, hashedPassword: string, localHashedPassword: string, code: string,\n        codeVerifier: string, redirectUrl: string, clientId: string, clientSecret: string, key: SymmetricCryptoKey,\n        twoFactorProvider?: TwoFactorProviderType, twoFactorToken?: string, remember?: boolean, captchaToken?: string,\n        orgId?: string): Promise<AuthResult> {\n        const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\n        const appId = await this.appIdService.getAppId();\n        const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n        let emailPassword: string[] = [];\n        let codeCodeVerifier: string[] = [];\n        let clientIdClientSecret: [string, string] = [null, null];\n\n        if (email != null && hashedPassword != null) {\n            emailPassword = [email, hashedPassword];\n        } else {\n            emailPassword = null;\n        }\n        if (code != null && codeVerifier != null && redirectUrl != null) {\n            codeCodeVerifier = [code, codeVerifier, redirectUrl];\n        } else {\n            codeCodeVerifier = null;\n        }\n        if (clientId != null && clientSecret != null) {\n            clientIdClientSecret = [clientId, clientSecret];\n        } else {\n            clientIdClientSecret = null;\n        }\n\n        let request: TokenRequest;\n        if (twoFactorToken != null && twoFactorProvider != null) {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, twoFactorProvider,\n                twoFactorToken, remember, captchaToken, deviceRequest);\n        } else if (storedTwoFactorToken != null) {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret,\n                TwoFactorProviderType.Remember, storedTwoFactorToken, false, captchaToken, deviceRequest);\n        } else {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, null,\n                null, false, captchaToken, deviceRequest);\n        }\n\n        const response = await this.apiService.postIdentityToken(request);\n\n        this.clearState();\n        const result = new AuthResult();\n        result.captchaSiteKey = (response as any).siteKey;\n        if (!!result.captchaSiteKey) {\n            return result;\n        }\n        result.twoFactor = !!(response as any).twoFactorProviders2;\n\n        if (result.twoFactor) {\n            // two factor required\n            this.email = email;\n            this.masterPasswordHash = hashedPassword;\n            this.localMasterPasswordHash = localHashedPassword;\n            this.code = code;\n            this.codeVerifier = codeVerifier;\n            this.ssoRedirectUrl = redirectUrl;\n            this.clientId = clientId;\n            this.clientSecret = clientSecret;\n            this.key = this.setCryptoKeys ? key : null;\n            const twoFactorResponse = response as IdentityTwoFactorResponse;\n            this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;\n            result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n            this.captchaToken = twoFactorResponse.captchaToken;\n            return result;\n        }\n\n        const tokenResponse = response as IdentityTokenResponse;\n        result.resetMasterPassword = tokenResponse.resetMasterPassword;\n        result.forcePasswordReset = tokenResponse.forcePasswordReset;\n        if (tokenResponse.twoFactorToken != null) {\n            await this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\n        }\n\n        await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken, clientIdClientSecret);\n        await this.userService.setInformation(this.tokenService.getUserId(), this.tokenService.getEmail(),\n            tokenResponse.kdf, tokenResponse.kdfIterations);\n        if (this.setCryptoKeys) {\n            if (key != null) {\n                await this.cryptoService.setKey(key);\n            }\n            if (localHashedPassword != null) {\n                await this.cryptoService.setKeyHash(localHashedPassword);\n            }\n\n            // Skip this step during SSO new user flow. No key is returned from server.\n            if (code == null || tokenResponse.key != null) {\n\n                if (tokenResponse.keyConnectorUrl != null) {\n                    await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n                } else if (tokenResponse.apiUseKeyConnector) {\n                    const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n                    await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n                }\n\n                await this.cryptoService.setEncKey(tokenResponse.key);\n\n                // User doesn't have a key pair yet (old account), let's generate one for them\n                if (tokenResponse.privateKey == null) {\n                    try {\n                        const keyPair = await this.cryptoService.makeKeyPair();\n                        await this.apiService.postAccountKeys(new KeysRequest(keyPair[0], keyPair[1].encryptedString));\n                        tokenResponse.privateKey = keyPair[1].encryptedString;\n                    } catch (e) {\n                        this.logService.error(e);\n                    }\n                }\n\n                await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\n            } else if (tokenResponse.keyConnectorUrl != null) {\n                const password = await this.cryptoFunctionService.randomBytes(64);\n\n                const k = await this.cryptoService.makeKey(Utils.fromBufferToB64(password), this.tokenService.getEmail(), tokenResponse.kdf, tokenResponse.kdfIterations);\n                const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n                await this.cryptoService.setKey(k);\n\n                const encKey = await this.cryptoService.makeEncKey(k);\n                await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n                const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n                try {\n                    await this.apiService.postUserKeyToKeyConnector(tokenResponse.keyConnectorUrl, keyConnectorRequest);\n                } catch (e) {\n                    throw new Error('Unable to reach key connector');\n                }\n\n                const keys = new KeysRequest(pubKey, privKey.encryptedString);\n                const setPasswordRequest = new SetKeyConnectorKeyRequest(\n                    encKey[1].encryptedString, tokenResponse.kdf, tokenResponse.kdfIterations, orgId, keys\n                );\n                await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n            }\n        }\n\n        if (this.vaultTimeoutService != null) {\n            this.vaultTimeoutService.biometricLocked = false;\n        }\n        this.messagingService.send('loggedIn');\n        return result;\n    }\n\n    private clearState(): void {\n        this.key = null;\n        this.email = null;\n        this.masterPasswordHash = null;\n        this.localMasterPasswordHash = null;\n        this.code = null;\n        this.codeVerifier = null;\n        this.ssoRedirectUrl = null;\n        this.clientId = null;\n        this.clientSecret = null;\n        this.twoFactorProvidersData = null;\n        this.selectedTwoFactorProviderType = null;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-entity-users',\n    templateUrl: 'entity-users.component.html',\n})\nexport class EntityUsersComponent implements OnInit {\n    @Input() entity: 'group' | 'collection';\n    @Input() entityId: string;\n    @Input() entityName: string;\n    @Input() organizationId: string;\n    @Output() onEditedUsers = new EventEmitter();\n\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n\n    showSelected = false;\n    loading = true;\n    formPromise: Promise<any>;\n    selectedCount = 0;\n    searchText: string;\n\n    private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private logService: LogService) { }\n\n    async ngOnInit() {\n        await this.loadUsers();\n        this.loading = false;\n    }\n\n    get users() {\n        if (this.showSelected) {\n            return this.allUsers.filter(u => (u as any).checked);\n        } else {\n            return this.allUsers;\n        }\n    }\n\n    async loadUsers() {\n        const users = await this.apiService.getOrganizationUsers(this.organizationId);\n        this.allUsers = users.data.map(r => r).sort(Utils.getSortFunction(this.i18nService, 'email'));\n        if (this.entity === 'group') {\n            const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach(s => {\n                    const user = users.data.filter(u => u.id === s);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                    }\n                });\n            }\n        } else if (this.entity === 'collection') {\n            const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach(s => {\n                    const user = users.data.filter(u => !u.accessAll && u.id === s.id);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                        (user[0] as any).readOnly = s.readOnly;\n                        (user[0] as any).hidePasswords = s.hidePasswords;\n                    }\n                });\n            }\n        }\n\n        this.allUsers.forEach(u => {\n            if (this.entity === 'collection' && u.accessAll) {\n                (u as any).checked = true;\n            }\n            if ((u as any).checked) {\n                this.selectedCount++;\n            }\n        });\n    }\n\n    check(u: OrganizationUserUserDetailsResponse) {\n        if (this.entity === 'collection' && u.accessAll) {\n            return;\n        }\n        (u as any).checked = !(u as any).checked;\n        this.selectedChanged(u);\n    }\n\n    selectedChanged(u: OrganizationUserUserDetailsResponse) {\n        if ((u as any).checked) {\n            this.selectedCount++;\n        } else {\n            if (this.entity === 'collection') {\n                (u as any).readOnly = false;\n                (u as any).hidePasswords = false;\n            }\n            this.selectedCount--;\n        }\n    }\n\n    filterSelected(showSelected: boolean) {\n        this.showSelected = showSelected;\n    }\n\n    async submit() {\n        try {\n            if (this.entity === 'group') {\n                const selections = this.users.filter(u => (u as any).checked).map(u => u.id);\n                this.formPromise = this.apiService.putGroupUsers(this.organizationId, this.entityId, selections);\n            } else {\n                const selections = this.users.filter(u => (u as any).checked && !u.accessAll)\n                    .map(u => new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords));\n                this.formPromise = this.apiService.putCollectionUsers(this.organizationId, this.entityId, selections);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedUsers'));\n            this.onEditedUsers.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAccessTitle\"> {{'userAccess' | i18n}} <small>{{entityName}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading || !users\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading && users && (users | search:searchText:'name':'email':'id') as searchedUsers\"> <div class=\"d-flex\"> <div class=\"mr-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" name=\"SearchText\" [(ngModel)]=\"searchText\"> </div> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: !showSelected}\" (click)=\"filterSelected(false)\"> {{'all' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: showSelected}\" (click)=\"filterSelected(true)\"> {{'selected' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"selectedCount\">{{selectedCount}}</span> </button> </div> </div> <ng-container *ngIf=\"!searchedUsers.length\"> <hr> {{'noUsersInList' | i18n}} </ng-container> <ng-container *ngIf=\"searchedUsers.length\"> <table class=\"table table-hover table-list mb-0\"> <thead> <tr> <th>&nbsp;</th> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th *ngIf=\"entity === 'collection'\">&nbsp;</th> <th>{{'userType' | i18n}}</th> <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td class=\"table-list-checkbox\" (click)=\"check(u)\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" name=\"{{u.id.substr(0,8)}}_Checked\" [disabled]=\"entity === 'collection' && u.accessAll\" (change)=\"selectedChanged(u)\" appStopProp> </td> <td width=\"30\" (click)=\"check(u)\"> <app-avatar [data]=\"u | userName\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{u.email}} <span class=\"badge badge-secondary\" *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td *ngIf=\"entity === 'collection'\"> <ng-container *ngIf=\"u.accessAll\"> <i class=\"fa fa-th\" title=\"{{'userAccessAllItems' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userAccessAllItems' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"text-center\" *ngIf=\"entity === 'collection'\"> <input type=\"checkbox\" [(ngModel)]=\"u.hidePasswords\" name=\"{{u.id.substr(0,8)}}_HidePasswords\" [disabled]=\"u.accessAll || !u.checked\"> </td> <td class=\"text-center\" *ngIf=\"entity === 'collection'\"> <input type=\"checkbox\" [(ngModel)]=\"u.readOnly\" name=\"{{u.id.substr(0,8)}}_ReadOnly\" [disabled]=\"u.accessAll || !u.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-org-manage',\n    templateUrl: 'manage.component.html',\n})\nexport class ManageComponent implements OnInit {\n    organization: Organization;\n    accessPolicies: boolean = false;\n    accessGroups: boolean = false;\n    accessEvents: boolean = false;\n    accessSso: boolean = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) {}\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.accessPolicies = this.organization.usePolicies;\n            this.accessSso = this.organization.useSso;\n            this.accessEvents = this.organization.useEvents;\n            this.accessGroups = this.organization.useGroups;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\" *ngIf=\"organization\"> <div class=\"card-header\">{{'manage' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"people\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageUsers\"> {{'people' | i18n}} </a> <a routerLink=\"collections\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"> {{'collections' | i18n}} </a> <a routerLink=\"groups\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageGroups && accessGroups\"> {{'groups' | i18n}} </a> <a routerLink=\"policies\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManagePolicies && accessPolicies\"> {{'policies' | i18n}} </a> <a routerLink=\"sso\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageSso && accessSso\"> {{'singleSignOn' | i18n}} </a> <a routerLink=\"events\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canAccessEventLogs && accessEvents\"> {{'eventLogs' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { SecretVerificationRequest } from 'jslib-common/models/request/secretVerificationRequest';\n\nimport { ApiKeyResponse } from 'jslib-common/models/response/apiKeyResponse';\n\nimport { Verification } from 'jslib-common/types/verification';\n\n@Component({\n    selector: 'app-api-key',\n    templateUrl: 'api-key.component.html',\n})\nexport class ApiKeyComponent {\n    keyType: string;\n    isRotation: boolean;\n    postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n    entityId: string;\n    scope: string;\n    grantType: string;\n    apiKeyTitle: string;\n    apiKeyWarning: string;\n    apiKeyDescription: string;\n\n    masterPassword: Verification;\n    formPromise: Promise<ApiKeyResponse>;\n    clientId: string;\n    clientSecret: string;\n\n    constructor(private userVerificationService: UserVerificationService, private logService: LogService) { }\n\n    async submit() {\n        try {\n            this.formPromise = this.userVerificationService.buildRequest(this.masterPassword)\n                .then(request => this.postKey(this.entityId, request));\n            const response = await this.formPromise;\n            this.clientSecret = response.apiKey;\n            this.clientId = `${this.keyType}.${this.entityId}`;\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{apiKeyTitle | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{apiKeyDescription | i18n}}</p> <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\" *ngIf=\"!clientSecret\"> </app-verify-master-password> <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{apiKeyWarning | i18n}}</app-callout> <app-callout type=\"info\" title=\"{{'oauth2ClientCredentials' | i18n}}\" icon=\"fa-key\" *ngIf=\"clientSecret\"> <p class=\"mb-1\"> <strong>client_id:</strong><br> <code>{{clientId}}</code> </p> <p class=\"mb-1\"> <strong>client_secret:</strong><br> <code>{{clientSecret}}</code> </p> <p class=\"mb-1\"> <strong>scope:</strong><br> <code>{{scope}}</code> </p> <p class=\"mb-0\"> <strong>grant_type:</strong><br> <code>{{grantType}}</code> </p> </app-callout> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!clientSecret\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(isRotation ? 'rotateApiKey' : 'viewApiKey') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","export enum VerificationType {\n    MasterPassword = 0,\n    OTP = 1,\n}\n","import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { Verification } from 'jslib-common/types/verification';\n\n@Component({\n    selector: 'app-purge-vault',\n    templateUrl: 'purge-vault.component.html',\n})\nexport class PurgeVaultComponent {\n    @Input() organizationId?: string = null;\n\n    masterPassword: Verification;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userVerificationService: UserVerificationService,\n        private router: Router, private logService: LogService) { }\n\n    async submit() {\n        try {\n            this.formPromise = this.userVerificationService.buildRequest(this.masterPassword)\n                .then(request => this.apiService.postPurgeCiphers(request, this.organizationId));\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('vaultPurged'));\n            if (this.organizationId != null) {\n                this.router.navigate(['organizations', this.organizationId, 'vault']);\n            } else {\n                this.router.navigate(['vault']);\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{'purgeVault' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{(organizationId ? 'purgeOrgVaultDesc' : 'purgeVaultDesc') | i18n}}</p> <app-callout type=\"warning\">{{'purgeVaultWarning' | i18n}}</app-callout> <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\"> </app-verify-master-password> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'purgeVault' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { Verification } from 'jslib-common/types/verification';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\n@Component({\n    selector: 'app-delete-organization',\n    templateUrl: 'delete-organization.component.html',\n})\nexport class DeleteOrganizationComponent {\n    organizationId: string;\n    descriptionKey = 'deleteOrganizationDesc';\n    @Output() onSuccess: EventEmitter<any> = new EventEmitter();\n\n    masterPassword: Verification;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userVerificationService: UserVerificationService,\n        private logService: LogService) { }\n\n    async submit() {\n        try {\n            this.formPromise = this.userVerificationService.buildRequest(this.masterPassword)\n                .then(request => this.apiService.deleteOrganization(this.organizationId, request));\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('organizationDeleted'),\n                this.i18nService.t('organizationDeletedDesc'));\n            this.onSuccess.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{'deleteOrganization' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{descriptionKey | i18n}}</p> <app-callout type=\"warning\">{{'deleteOrganizationWarning' | i18n}}</app-callout> <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\"> </app-verify-master-password> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deleteOrganization' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { BillingResponse } from 'jslib-common/models/response/billingResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\nimport { TransactionType } from 'jslib-common/enums/transactionType';\nimport { VerifyBankRequest } from 'jslib-common/models/request/verifyBankRequest';\n\n@Component({\n    selector: 'app-user-billing',\n    templateUrl: 'user-billing.component.html',\n})\nexport class UserBillingComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    showAdjustPayment = false;\n    showAddCredit = false;\n    billing: BillingResponse;\n    paymentMethodType = PaymentMethodType;\n    transactionType = TransactionType;\n    organizationId: string;\n    verifyAmount1: number;\n    verifyAmount2: number;\n\n    verifyBankPromise: Promise<any>;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected platformUtilsService: PlatformUtilsService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        if (this.organizationId != null) {\n            this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n        } else {\n            this.billing = await this.apiService.getUserBilling();\n        }\n        this.loading = false;\n    }\n\n    async verifyBank() {\n        if (this.loading) {\n            return;\n        }\n\n        try {\n            const request = new VerifyBankRequest();\n            request.amount1 = this.verifyAmount1;\n            request.amount2 = this.verifyAmount2;\n            this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(this.organizationId, request);\n            await this.verifyBankPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('verifiedBankAccount'));\n            this.load();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    addCredit() {\n        if (this.paymentSourceInApp) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t('addCredit'), null, null, 'warning');\n            return;\n        }\n        this.showAddCredit = true;\n    }\n\n    closeAddCredit(load: boolean) {\n        this.showAddCredit = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    changePayment() {\n        if (this.paymentSourceInApp) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t('changePaymentMethod'), null, null, 'warning');\n            return;\n        }\n        this.showAdjustPayment = true;\n    }\n\n    closePayment(load: boolean) {\n        this.showAdjustPayment = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isCreditBalance() {\n        return this.billing == null || this.billing.balance <= 0;\n    }\n\n    get creditOrBalance() {\n        return Math.abs(this.billing != null ? this.billing.balance : 0);\n    }\n\n    get paymentSource() {\n        return this.billing != null ? this.billing.paymentSource : null;\n    }\n\n    get paymentSourceInApp() {\n        return this.paymentSource != null &&\n            (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n                this.paymentSource.type === PaymentMethodType.GoogleInApp);\n    }\n\n    get invoices() {\n        return this.billing != null ? this.billing.invoices : null;\n    }\n\n    get transactions() {\n        return this.billing != null ? this.billing.transactions : null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1> {{'billing' | i18n}} </h1> <button (click)=\"load()\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"firstLoaded\" [disabled]=\"loading\"> <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loading}\" aria-hidden=\"true\"></i> {{'refresh' | i18n}} </button> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"billing\"> <h2>{{(isCreditBalance ? 'accountCredit' : 'accountBalance') | i18n}}</h2> <p class=\"text-lg\"><strong>{{creditOrBalance | currency:'$'}}</strong></p> <p>{{'creditAppliedDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\"> {{'addCredit' | i18n}} </button> <app-add-credit [organizationId]=\"organizationId\" (onAdded)=\"closeAddCredit(true)\" (onCanceled)=\"closeAddCredit(false)\" *ngIf=\"showAddCredit\"> </app-add-credit> <h2 class=\"spaced-header\">{{'paymentMethod' | i18n}}</h2> <p *ngIf=\"!paymentSource\">{{'noPaymentMethod' | i18n}}</p> <ng-container *ngIf=\"paymentSource\"> <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\" *ngIf=\"paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\"> <p>{{'verifyBankAccountDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}</p> <form #verifyForm class=\"form-inline\" (ngSubmit)=\"verifyBank()\" [appApiAction]=\"verifyBankPromise\" ngNativeValidate> <label class=\"sr-only\" for=\"verifyAmount1\">{{'amount' | i18n : '1'}}</label> <div class=\"input-group mr-2\"> <div class=\"input-group-prepend\"> <div class=\"input-group-text\">$0.</div> </div> <input type=\"number\" class=\"form-control\" id=\"verifyAmount1\" placeholder=\"xx\" name=\"Amount1\" [(ngModel)]=\"verifyAmount1\" min=\"1\" max=\"99\" step=\"1\" required> </div> <label class=\"sr-only\" for=\"verifyAmount2\">{{'amount' | i18n : '2'}}</label> <div class=\"input-group mr-2\"> <div class=\"input-group-prepend\"> <div class=\"input-group-text\">$0.</div> </div> <input type=\"number\" class=\"form-control\" id=\"verifyAmount2\" placeholder=\"xx\" name=\"Amount2\" [(ngModel)]=\"verifyAmount2\" min=\"1\" max=\"99\" step=\"1\" required> </div> <button type=\"submit\" class=\"btn btn-outline-primary btn-submit\" [disabled]=\"verifyForm.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'verifyBankAccount' | i18n}}</span> </button> </form> </app-callout> <p> <i class=\"fa fa-fw\" [ngClass]=\"{'fa-credit-card': paymentSource.type === paymentMethodType.Card,\n                    'fa-university': paymentSource.type === paymentMethodType.BankAccount,\n                    'fa-money': paymentSource.type === paymentMethodType.Check,\n                    'fa-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n                    'fa-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n                    'fa-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp}\"></i> <span *ngIf=\"paymentSourceInApp\">{{'inAppPurchase' | i18n}}</span> {{paymentSource.description}} </p> </ng-container> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\"> {{(paymentSource ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}} </button> <app-adjust-payment [currentType]=\"paymentSource != null ? paymentSource.type : null\" [organizationId]=\"organizationId\" (onAdjusted)=\"closePayment(true)\" (onCanceled)=\"closePayment(false)\" *ngIf=\"showAdjustPayment\"> </app-adjust-payment> <h2 class=\"spaced-header\">{{'invoices' | i18n}}</h2> <p *ngIf=\"!invoices || !invoices.length\">{{'noInvoices' | i18n}}</p> <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\"> <tbody> <tr *ngFor=\"let i of invoices\"> <td>{{i.date | date:'mediumDate'}}</td> <td> <a href=\"{{i.pdfUrl}}\" target=\"_blank\" rel=\"noopener\" class=\"mr-2\" appA11yTitle=\"{{'downloadInvoice' | i18n}}\"> <i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i></a> <a href=\"{{i.url}}\" target=\"_blank\" rel=\"noopener\" title=\"{{'viewInvoice' | i18n}}\"> {{'invoiceNumber' | i18n : i.number}}</a> </td> <td>{{i.amount | currency:'$'}}</td> <td> <span *ngIf=\"i.paid\"> <i class=\"fa fa-check text-success\" aria-hidden=\"true\"></i> {{'paid' | i18n}} </span> <span *ngIf=\"!i.paid\"> <i class=\"fa fa-exclamation-circle text-muted\" aria-hidden=\"true\"></i> {{'unpaid' | i18n}} </span> </td> </tr> </tbody> </table> <h2 class=\"spaced-header\">{{'transactions' | i18n}}</h2> <p *ngIf=\"!transactions || !transactions.length\">{{'noTransactions' | i18n}}</p> <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\"> <tbody> <tr *ngFor=\"let t of transactions\"> <td>{{t.createdDate | date:'mediumDate'}}</td> <td> <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\"> {{'chargeNoun' | i18n}} </span> <span *ngIf=\"t.type === transactionType.Refund\">{{'refundNoun' | i18n}}</span> </td> <td> <i class=\"fa fa-fw\" *ngIf=\"t.paymentMethodType\" aria-hidden=\"true\" [ngClass]=\"{\n                            'fa-credit-card': t.paymentMethodType === paymentMethodType.Card,\n                            'fa-university': t.paymentMethodType === paymentMethodType.BankAccount ||\n                                t.paymentMethodType === paymentMethodType.WireTransfer,\n                            'fa-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n                            'fa-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n                        }\"></i> {{t.details}} </td> <td [ngClass]=\"{'text-strike': t.refunded}\" title=\"{{(t.refunded ? 'refunded' : '') | i18n}}\"> {{t.amount | currency:'$'}}</td> </tr> </tbody> </table> <small class=\"text-muted\">* {{'chargesStatement' | i18n : 'BITWARDEN'}}</small> </ng-container> ","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PayPalConfig } from 'jslib-common/abstractions/environment.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { BitPayInvoiceRequest } from 'jslib-common/models/request/bitPayInvoiceRequest';\n\n@Component({\n    selector: 'app-add-credit',\n    templateUrl: 'add-credit.component.html',\n})\nexport class AddCreditComponent implements OnInit {\n    @Input() creditAmount: string;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.PayPal;\n    @Input() organizationId: string;\n    @Output() onAdded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild('ppButtonForm', { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n    paymentMethodType = PaymentMethodType;\n    ppButtonFormAction: string;\n    ppButtonBusinessId: string;\n    ppButtonCustomField: string;\n    ppLoading = false;\n    subject: string;\n    returnUrl: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private name: string;\n    private email: string;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private logService: LogService) {\n        const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n        this.ppButtonFormAction = payPalConfig.buttonAction;\n        this.ppButtonBusinessId = payPalConfig.businessId;\n    }\n\n    async ngOnInit() {\n        if (this.organizationId != null) {\n            if (this.creditAmount == null) {\n                this.creditAmount = '20.00';\n            }\n            this.ppButtonCustomField = 'organization_id:' + this.organizationId;\n            const org = await this.userService.getOrganization(this.organizationId);\n            if (org != null) {\n                this.subject = org.name;\n                this.name = org.name;\n            }\n        } else {\n            if (this.creditAmount == null) {\n                this.creditAmount = '10.00';\n            }\n            this.userId = await this.userService.getUserId();\n            this.subject = await this.userService.getEmail();\n            this.email = this.subject;\n            this.ppButtonCustomField = 'user_id:' + this.userId;\n        }\n        this.ppButtonCustomField += ',account_credit:1';\n        this.returnUrl = window.location.href;\n    }\n\n    async submit() {\n        if (this.creditAmount == null || this.creditAmount === '') {\n            return;\n        }\n\n        if (this.method === PaymentMethodType.PayPal) {\n            this.ppButtonFormRef.nativeElement.submit();\n            this.ppLoading = true;\n            return;\n        }\n        if (this.method === PaymentMethodType.BitPay) {\n            try {\n                const req = new BitPayInvoiceRequest();\n                req.email = this.email;\n                req.name = this.name;\n                req.credit = true;\n                req.amount = this.creditAmountNumber;\n                req.organizationId = this.organizationId;\n                req.userId = this.userId;\n                req.returnUrl = this.returnUrl;\n                this.formPromise = this.apiService.postBitPayInvoice(req);\n                const bitPayUrl: string = await this.formPromise;\n                this.platformUtilsService.launchUri(bitPayUrl);\n            } catch (e) {\n                this.logService.error(e);\n            }\n            return;\n        }\n        try {\n            this.onAdded.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    formatAmount() {\n        try {\n            if (this.creditAmount != null && this.creditAmount !== '') {\n                const floatAmount = Math.abs(parseFloat(this.creditAmount));\n                if (floatAmount > 0) {\n                    this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n                        .toFixed(2).toString();\n                    return;\n                }\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n        this.creditAmount = '';\n    }\n\n    get creditAmountNumber(): number {\n        if (this.creditAmount != null && this.creditAmount !== '') {\n            try {\n                return parseFloat(this.creditAmount);\n            } catch (e) {\n                this.logService.error(e);\n            }\n        }\n        return null;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'addCredit' | i18n}}</h3> <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\"> <div class=\"form-check form-check-inline\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-paypal\" [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\"> <label class=\"form-check-label\" for=\"credit-method-paypal\"> <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label> </div> <div class=\"form-check form-check-inline\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-bitcoin\" [value]=\"paymentMethodType.BitPay\" [(ngModel)]=\"method\"> <label class=\"form-check-label\" for=\"credit-method-bitcoin\"> <i class=\"fa fa-fw fa-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label> </div> </div> <div class=\"form-group\"> <div class=\"row\"> <div class=\"col-4\"> <label for=\"creditAmount\">{{'amount' | i18n}}</label> <div class=\"input-group\"> <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div> <input id=\"creditAmount\" class=\"form-control\" type=\"text\" name=\"CreditAmount\" [(ngModel)]=\"creditAmount\" (blur)=\"formatAmount()\" required> </div> </div> </div> <small class=\"form-text text-muted\">{{'creditDelayed' | i18n}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> <form #ppButtonForm action=\"{{ppButtonFormAction}}\" method=\"post\" target=\"_top\"> <input type=\"hidden\" name=\"cmd\" value=\"_xclick\"> <input type=\"hidden\" name=\"business\" value=\"{{ppButtonBusinessId}}\"> <input type=\"hidden\" name=\"button_subtype\" value=\"services\"> <input type=\"hidden\" name=\"no_note\" value=\"1\"> <input type=\"hidden\" name=\"no_shipping\" value=\"1\"> <input type=\"hidden\" name=\"rm\" value=\"1\"> <input type=\"hidden\" name=\"return\" value=\"{{returnUrl}}\"> <input type=\"hidden\" name=\"cancel_return\" value=\"{{returnUrl}}\"> <input type=\"hidden\" name=\"currency_code\" value=\"USD\"> <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\"> <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\"> <input type=\"hidden\" name=\"amount\" value=\"{{creditAmount}}\"> <input type=\"hidden\" name=\"custom\" value=\"{{ppButtonCustomField}}\"> <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\"> <input type=\"hidden\" name=\"item_number\" value=\"{{subject}}\"> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { PaymentRequest } from 'jslib-common/models/request/paymentRequest';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\n@Component({\n    selector: 'app-adjust-payment',\n    templateUrl: 'adjust-payment.component.html',\n})\nexport class AdjustPaymentComponent {\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n    @Input() currentType?: PaymentMethodType;\n    @Input() organizationId: string;\n    @Output() onAdjusted = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    paymentMethodType = PaymentMethodType;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private logService: LogService) { }\n\n    async submit() {\n        try {\n            const request = new PaymentRequest();\n            this.formPromise = this.paymentComponent.createPaymentToken().then(result => {\n                request.paymentToken = result[0];\n                request.paymentMethodType = result[1];\n                request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n                request.country = this.taxInfoComponent.taxInfo.country;\n                if (this.organizationId == null) {\n                    return this.apiService.postAccountPayment(request);\n                } else {\n                    request.taxId = this.taxInfoComponent.taxInfo.taxId;\n                    request.state = this.taxInfoComponent.taxInfo.state;\n                    request.line1 = this.taxInfoComponent.taxInfo.line1;\n                    request.line2 = this.taxInfoComponent.taxInfo.line2;\n                    request.city = this.taxInfoComponent.taxInfo.city;\n                    request.state = this.taxInfoComponent.taxInfo.state;\n                    return this.apiService.postOrganizationPayment(this.organizationId, request);\n                }\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedPaymentMethod'));\n            this.onAdjusted.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    changeCountry() {\n        if (this.taxInfoComponent.taxInfo.country === 'US') {\n            this.paymentComponent.hideBank = !this.organizationId;\n        } else {\n            this.paymentComponent.hideBank = true;\n            if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n                this.paymentComponent.method = PaymentMethodType.Card;\n                this.paymentComponent.changeMethod();\n            }\n        }\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{(currentType != null ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}</h3> <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment> <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { StorageRequest } from 'jslib-common/models/request/storageRequest';\n\nimport { PaymentResponse } from 'jslib-common/models/response/paymentResponse';\n\nimport { PaymentComponent } from './payment.component';\n\n@Component({\n    selector: 'app-adjust-storage',\n    templateUrl: 'adjust-storage.component.html',\n})\nexport class AdjustStorageComponent {\n    @Input() storageGbPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n    storageAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private router: Router,\n        private activatedRoute: ActivatedRoute, private logService: LogService) { }\n\n    async submit() {\n        try {\n            const request = new StorageRequest();\n            request.storageGbAdjustment = this.storageAdjustment;\n            if (!this.add) {\n                request.storageGbAdjustment *= -1;\n            }\n\n            let paymentFailed = false;\n            const action = async () => {\n                let response: Promise<PaymentResponse>;\n                if (this.organizationId == null) {\n                    response = this.formPromise = this.apiService.postAccountStorage(request);\n                } else {\n                    response = this.formPromise = this.apiService.postOrganizationStorage(this.organizationId, request);\n                }\n                const result = await response;\n                if (result != null && result.paymentIntentClientSecret != null) {\n                    try {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    } catch {\n                        paymentFailed = true;\n                    }\n                }\n            };\n            this.formPromise = action();\n            await this.formPromise;\n            this.onAdjusted.emit(this.storageAdjustment);\n            if (paymentFailed) {\n                this.toasterService.popAsync({\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\n                    type: 'warning',\n                    timeout: 10000,\n                });\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\n            } else {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('adjustedStorage', request.storageGbAdjustment.toString()));\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedStorageTotal(): number {\n        return this.storageGbPrice * this.storageAdjustment;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{(add ? 'addStorage' : 'removeStorage') | i18n}}</h3> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"storageAdjustment\">{{(add ? 'gbStorageAdd' : 'gbStorageRemove') | i18n}}</label> <input id=\"storageAdjustment\" class=\"form-control\" type=\"number\" name=\"StroageGbAdjustment\" [(ngModel)]=\"storageAdjustment\" min=\"0\" max=\"99\" step=\"1\" required> </div> </div> <div *ngIf=\"add\" class=\"mb-3\"> <strong>{{'total' | i18n}}:</strong> {{storageAdjustment || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{adjustedStorageTotal | currency:'$'}} /{{interval | i18n}} </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> <small class=\"d-block text-muted mt-3\"> {{(add ? 'storageAddNote' : 'storageRemoveNote') | i18n}} </small> </div> </form> <app-payment [showMethods]=\"false\"></app-payment> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\n@Component({\n    selector: 'app-update-license',\n    templateUrl: 'update-license.component.html',\n})\nexport class UpdateLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onUpdated = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private logService: LogService) { }\n\n    async submit() {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        try {\n            const fd = new FormData();\n            fd.append('license', files[0]);\n\n            let updatePromise: Promise<any> = null;\n            if (this.organizationId == null) {\n                updatePromise = this.apiService.postAccountLicense(fd);\n            } else {\n                updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n            }\n\n            this.formPromise = updatePromise.then(() => {\n                return this.apiService.refreshIdentityToken();\n            });\n\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedLicense'));\n            this.onUpdated.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\" class=\"sr-only\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : (!organizationId ? 'bitwarden_premium_license.json' : 'bitwarden_organization_license.json')}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </form> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { UpdateTwoFactorDuoRequest } from 'jslib-common/models/request/updateTwoFactorDuoRequest';\nimport { TwoFactorDuoResponse } from 'jslib-common/models/response/twoFactorDuoResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-duo',\n    templateUrl: 'two-factor-duo.component.html',\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Duo;\n    ikey: string;\n    skey: string;\n    host: string;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        logService: LogService, userVerificationService: UserVerificationService) {\n        super(apiService, i18nService, toasterService, platformUtilsService, logService, userVerificationService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected async enable() {\n        const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n        request.integrationKey = this.ikey;\n        request.secretKey = this.skey;\n        request.host = this.host;\n\n        return super.enable(async () => {\n            if (this.organizationId != null) {\n                this.formPromise = this.apiService.putTwoFactorOrganizationDuo(this.organizationId, request);\n            } else {\n                this.formPromise = this.apiService.putTwoFactorDuo(request);\n            }\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private processResponse(response: TwoFactorDuoResponse) {\n        this.ikey = response.integrationKey;\n        this.skey = response.secretKey;\n        this.host = response.host;\n        this.enabled = response.enabled;\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" title=\"2faDuoTitle\"> {{'twoStepLogin' | i18n}} <small>Duo</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\" autocomplete=\"off\"> <div class=\"modal-body\"> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\"> <strong>{{'twoFactorDuoIntegrationKey' | i18n}}:</strong> {{ikey}} <br> <strong>{{'twoFactorDuoSecretKey' | i18n}}:</strong> {{skey}} <br> <strong>{{'twoFactorDuoApiHostname' | i18n}}:</strong> {{host}} </ng-container> <ng-container *ngIf=\"!enabled\"> <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\"> <p>{{'twoFactorDuoDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"ikey\">{{'twoFactorDuoIntegrationKey' | i18n}}</label> <input id=\"ikey\" type=\"text\" name=\"IntegrationKey\" class=\"form-control\" [(ngModel)]=\"ikey\" required appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"skey\">{{'twoFactorDuoSecretKey' | i18n}}</label> <input id=\"skey\" type=\"password\" name=\"SecretKey\" class=\"form-control\" [(ngModel)]=\"skey\" required appInputVerbatim autocomplete=\"new-password\"> </div> <div class=\"form-group\"> <label for=\"host\">{{'twoFactorDuoApiHostname' | i18n}}</label> <input id=\"host\" type=\"text\" name=\"Host\" class=\"form-control\" [(ngModel)]=\"host\" placeholder=\"{{'ex' | i18n}} api-xxxxxxxx.duosecurity.com\" required appInputVerbatim> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { TwoFactorProviders } from 'jslib-common/services/auth.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { ModalRef } from 'jslib-angular/components/modal/modal.ref';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorAuthenticatorComponent } from './two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './two-factor-recovery.component';\nimport { TwoFactorWebAuthnComponent } from './two-factor-webauthn.component';\nimport { TwoFactorYubiKeyComponent } from './two-factor-yubikey.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: 'two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent implements OnInit {\n    @ViewChild('recoveryTemplate', { read: ViewContainerRef, static: true }) recoveryModalRef: ViewContainerRef;\n    @ViewChild('authenticatorTemplate', { read: ViewContainerRef, static: true }) authenticatorModalRef: ViewContainerRef;\n    @ViewChild('yubikeyTemplate', { read: ViewContainerRef, static: true }) yubikeyModalRef: ViewContainerRef;\n    @ViewChild('duoTemplate', { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n    @ViewChild('emailTemplate', { read: ViewContainerRef, static: true }) emailModalRef: ViewContainerRef;\n    @ViewChild('webAuthnTemplate', { read: ViewContainerRef, static: true }) webAuthnModalRef: ViewContainerRef;\n\n    organizationId: string;\n    providers: any[] = [];\n    canAccessPremium: boolean;\n    showPolicyWarning = false;\n    loading = true;\n    modal: ModalRef;\n\n    constructor(protected apiService: ApiService, protected userService: UserService,\n        protected modalService: ModalService, protected messagingService: MessagingService,\n        protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n\n        for (const key in TwoFactorProviders) {\n            if (!TwoFactorProviders.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const p = (TwoFactorProviders as any)[key];\n            if (this.filterProvider(p.type)) {\n                continue;\n            }\n\n            this.providers.push({\n                type: p.type,\n                name: p.name,\n                description: p.description,\n                enabled: false,\n                premium: p.premium,\n                sort: p.sort,\n            });\n        }\n\n        this.providers.sort((a: any, b: any) => a.sort - b.sort);\n        await this.load();\n    }\n\n    async load() {\n        this.loading = true;\n        const providerList = await this.getTwoFactorProviders();\n        providerList.data.forEach(p => {\n            this.providers.forEach(p2 => {\n                if (p.type === p2.type) {\n                    p2.enabled = p.enabled;\n                }\n            });\n        });\n        this.evaluatePolicies();\n        this.loading = false;\n    }\n\n    async manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.Authenticator:\n                const authComp = await this.openModal(this.authenticatorModalRef, TwoFactorAuthenticatorComponent);\n                authComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n                });\n                break;\n            case TwoFactorProviderType.Yubikey:\n                const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n                yubiComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n                });\n                break;\n            case TwoFactorProviderType.Duo:\n                const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Duo);\n                });\n                break;\n            case TwoFactorProviderType.Email:\n                const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n                emailComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Email);\n                });\n                break;\n            case TwoFactorProviderType.WebAuthn:\n                const webAuthnComp = await this.openModal(this.webAuthnModalRef, TwoFactorWebAuthnComponent);\n                webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    recoveryCode() {\n        this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n    }\n\n    async premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorProviders();\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type === TwoFactorProviderType.OrganizationDuo;\n    }\n\n    protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n        const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n        this.modal = modal;\n\n        return childComponent;\n    }\n\n    protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n        if (!enabled && this.modal != null) {\n            this.modal.close();\n        }\n        this.providers.forEach(p => {\n            if (p.type === type) {\n                p.enabled = enabled;\n            }\n        });\n        this.evaluatePolicies();\n    }\n\n    private async evaluatePolicies() {\n        if (this.organizationId == null && this.providers.filter(p => p.enabled).length === 1) {\n            this.showPolicyWarning = await this.policyService.policyAppliesToUser(PolicyType.TwoFactorAuthentication);\n        } else {\n            this.showPolicyWarning = false;\n        }\n    }\n}\n","<div class=\"page-header\"> <h1>{{'twoStepLogin' | i18n}}</h1> </div> <p *ngIf=\"!organizationId\">{{'twoStepLoginDesc' | i18n}}</p> <p *ngIf=\"organizationId\">{{'twoStepLoginOrganizationDesc' | i18n}}</p> <app-callout type=\"warning\" *ngIf=\"!organizationId\"> <p>{{'twoStepLoginRecoveryWarning' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"recoveryCode()\">{{'viewRecoveryCode' | i18n}}</button> </app-callout> <h2 [ngClass]=\"{'mt-5':!organizationId}\"> {{'providers' | i18n}} <small *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin fa-fw text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h2> <app-callout type=\"warning\" *ngIf=\"showPolicyWarning\"> {{'twoStepLoginPolicyUserWarning' | i18n}} </app-callout> <ul class=\"list-group list-group-2fa\"> <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\"> <div class=\"logo-2fa d-flex justify-content-center\"> <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\"> </div> <div class=\"mx-4\"> <h3 class=\"mb-0\"> {{p.name}} <ng-container *ngIf=\"p.enabled\"> <i class=\"fa fa-check text-success fa-fw\" title=\"{{'enabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enabled' | i18n}}</span> </ng-container> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium && p.premium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </h3> {{p.description}} </div> <div class=\"ml-auto\"> <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" [disabled]=\"!canAccessPremium && p.premium\" (click)=\"manage(p.type)\"> {{'manage' | i18n}} </button> </div> </li> </ul> <ng-template #authenticatorTemplate></ng-template> <ng-template #recoveryTemplate></ng-template> <ng-template #duoTemplate></ng-template> <ng-template #emailTemplate></ng-template> <ng-template #yubikeyTemplate></ng-template> <ng-template #webAuthnTemplate></ng-template> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { ExportComponent as BaseExportComponent } from 'jslib-angular/components/export.component';\n\n@Component({\n    selector: 'app-export',\n    templateUrl: 'export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    organizationId: string;\n\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService, policyService: PolicyService, logService: LogService,\n        userVerificationService: UserVerificationService, fb: FormBuilder) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService,\n            policyService, window, logService, userVerificationService, fb);\n    }\n\n    protected saved() {\n        super.saved();\n        this.platformUtilsService.showToast('success', null, this.i18nService.t('exportSuccess'));\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" ngNativeValidate [appApiAction]=\"formPromise\" [formGroup]=\"exportForm\"> <div class=\"page-header\"> <h1>{{'exportVault' | i18n}}</h1> </div> <app-callout type=\"error\" title=\"{{'vaultExportDisabled' | i18n}}\" *ngIf=\"disabledByPolicy\"> {{'personalVaultExportPolicyInEffect' | i18n}} </app-callout> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"format\">{{'fileFormat' | i18n}}</label> <select class=\"form-control\" id=\"format\" name=\"Format\" formControlName=\"format\"> <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{f.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\"> <app-verify-master-password ngDefaultControl formControlName=\"secret\" name=\"secret\"> </app-verify-master-password> </div> </div> <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || exportForm.disabled\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\" *ngIf=\"form.loading\"></i> <span *ngIf=\"!form.loading\">{{'exportVault' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: 'exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    exposedPasswordMap = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected auditService: AuditService,\n        modalService: ModalService, messagingService: MessagingService,\n        userService: UserService, passwordRepromptService: PasswordRepromptService) {\n        super(modalService, userService, messagingService, passwordRepromptService, true);\n    }\n\n    ngOnInit() {\n        this.checkAccess();\n    }\n\n    async load() {\n        if (await this.checkAccess()) {\n            super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const exposedPasswordCiphers: CipherView[] = [];\n        const promises: Promise<void>[] = [];\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            const promise = this.auditService.passwordLeaked(c.login.password).then(exposedCount => {\n                if (exposedCount > 0) {\n                    exposedPasswordCiphers.push(c);\n                    this.exposedPasswordMap.set(c.id, exposedCount);\n                }\n            });\n            promises.push(promise);\n        });\n        await Promise.all(promises);\n        this.ciphers = exposedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from the org view;\n        return true;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'exposedPasswordsReport' | i18n}}</h1> </div> <p>{{'exposedPasswordsReportDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\" (click)=\"load()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'checkExposedPasswords' | i18n}}</span> </button> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noExposedPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'exposedPasswordsFound' | i18n}}\" [useAlertRole]=\"true\"> {{'exposedPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-warning\"> {{'exposedXTimes' | i18n : (exposedPasswordMap.get(c.id) | number)}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherCreateRequest } from 'jslib-common/models/request/cipherCreateRequest';\nimport { CipherRequest } from 'jslib-common/models/request/cipherRequest';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    templateUrl: '../../vault/add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    organization: Organization;\n    originalCipher: Cipher = null;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\n        private apiService: ApiService, messagingService: MessagingService,\n        eventService: EventService, policyService: PolicyService, logService: LogService,\n        passwordRepromptService: PasswordRepromptService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\n            eventService, policyService, passwordRepromptService, logService);\n    }\n\n    protected allowOwnershipAssignment() {\n        if (this.ownershipOptions != null && (this.ownershipOptions.length > 1 || !this.allowPersonal)) {\n            if (this.organization != null) {\n                return this.cloneMode && this.organization.canEditAnyCollection;\n            } else {\n                return !this.editMode || this.cloneMode;\n            }\n        }\n        return false;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.canEditAnyCollection) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canEditAnyCollection) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        const data = new CipherData(response);\n        this.originalCipher = new Cipher(data);\n        return new Cipher(data);\n    }\n\n    protected encryptCipher() {\n        if (!this.organization.canEditAnyCollection) {\n            return super.encryptCipher();\n        }\n        return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n    }\n\n    protected async saveCipher(cipher: Cipher) {\n        if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n            return super.saveCipher(cipher);\n        }\n        if (this.editMode && !this.cloneMode) {\n            const request = new CipherRequest(cipher);\n            return this.apiService.putCipherAdmin(this.cipherId, request);\n        } else {\n            const request = new CipherCreateRequest(cipher);\n            return this.apiService.postCipherAdmin(request);\n        }\n    }\n\n    protected async deleteCipher() {\n        if (!this.organization.canEditAnyCollection) {\n            return super.deleteCipher();\n        }\n        return this.cipher.isDeleted ? this.apiService.deleteCipherAdmin(this.cipherId)\n            : this.apiService.putDeleteCipherAdmin(this.cipherId);\n    }\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n    Username = 100,\n    Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n    CardholderName = 300,\n    ExpMonth = 301,\n    ExpYear = 302,\n    Code = 303,\n    Brand = 304,\n    Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n    Title = 400,\n    MiddleName = 401,\n    Address1 = 402,\n    Address2 = 403,\n    Address3 = 404,\n    City = 405,\n    State = 406,\n    PostalCode = 407,\n    Country = 408,\n    Company = 409,\n    Email = 410,\n    Phone = 411,\n    Ssn = 412,\n    Username = 413,\n    PassportNumber = 414,\n    LicenseNumber = 415,\n    FirstName = 416,\n    LastName = 417,\n    FullName = 418,\n}\n","import { ItemView } from '../models/view/itemView';\n\nimport { LinkedIdType } from '../enums/linkedIdType';\n\nexport class LinkedMetadata {\n    constructor(readonly propertyKey: string, private readonly _i18nKey?: string) { }\n\n    get i18nKey() {\n        return this._i18nKey ?? this.propertyKey;\n    }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n    return (prototype: ItemView, propertyKey: string) => {\n        if (prototype.linkedFieldOptions == null) {\n            prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n        }\n\n        prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n    };\n}\n","import { CardData } from '../data/cardData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { CardView } from '../view/cardView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Card extends Domain {\n    cardholderName: EncString;\n    brand: EncString;\n    number: EncString;\n    expMonth: EncString;\n    expYear: EncString;\n    code: EncString;\n\n    constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n        return this.decryptObj(new CardView(this), {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, orgId, encKey);\n    }\n\n    toCardData(): CardData {\n        const c = new CardData();\n        this.buildDataModel(this, c, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        });\n        return c;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\nimport { LinkedIdType } from '../../enums/linkedIdType';\n\nimport { FieldData } from '../data/fieldData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { FieldView } from '../view/fieldView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Field extends Domain {\n    name: EncString;\n    value: EncString;\n    type: FieldType;\n    linkedId: LinkedIdType;\n\n    constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n        this.linkedId = obj.linkedId;\n        this.buildDomainModel(this, obj, {\n            name: null,\n            value: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n        return this.decryptObj(new FieldView(this), {\n            name: null,\n            value: null,\n        }, orgId, encKey);\n    }\n\n    toFieldData(): FieldData {\n        const f = new FieldData();\n        this.buildDataModel(this, f, {\n            name: null,\n            value: null,\n            type: null,\n            linkedId: null,\n        }, ['type', 'linkedId']);\n        return f;\n    }\n}\n","import { IdentityData } from '../data/identityData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { IdentityView } from '../view/identityView';\n\nexport class Identity extends Domain {\n    title: EncString;\n    firstName: EncString;\n    middleName: EncString;\n    lastName: EncString;\n    address1: EncString;\n    address2: EncString;\n    address3: EncString;\n    city: EncString;\n    state: EncString;\n    postalCode: EncString;\n    country: EncString;\n    company: EncString;\n    email: EncString;\n    phone: EncString;\n    ssn: EncString;\n    username: EncString;\n    passportNumber: EncString;\n    licenseNumber: EncString;\n\n    constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n        return this.decryptObj(new IdentityView(this), {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, orgId, encKey);\n    }\n\n    toIdentityData(): IdentityData {\n        const i = new IdentityData();\n        this.buildDataModel(this, i, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        });\n        return i;\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginData } from '../data/loginData';\n\nimport { LoginView } from '../view/loginView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Login extends Domain {\n    uris: LoginUri[];\n    username: EncString;\n    password: EncString;\n    passwordRevisionDate?: Date;\n    totp: EncString;\n    autofillOnPageLoad: boolean;\n\n    constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.passwordRevisionDate = obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n        this.autofillOnPageLoad = obj.autofillOnPageLoad;\n        this.buildDomainModel(this, obj, {\n            username: null,\n            password: null,\n            totp: null,\n        }, alreadyEncrypted, []);\n\n        if (obj.uris) {\n            this.uris = [];\n            obj.uris.forEach(u => {\n                this.uris.push(new LoginUri(u, alreadyEncrypted));\n            });\n        }\n    }\n\n    async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n        const view = await this.decryptObj(new LoginView(this), {\n            username: null,\n            password: null,\n            totp: null,\n        }, orgId, encKey);\n\n        if (this.uris != null) {\n            view.uris = [];\n            for (let i = 0; i < this.uris.length; i++) {\n                const uri = await this.uris[i].decrypt(orgId, encKey);\n                view.uris.push(uri);\n            }\n        }\n\n        return view;\n    }\n\n    toLoginData(): LoginData {\n        const l = new LoginData();\n        l.passwordRevisionDate = this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n        l.autofillOnPageLoad = this.autofillOnPageLoad;\n        this.buildDataModel(this, l, {\n            username: null,\n            password: null,\n            totp: null,\n        });\n\n        if (this.uris != null && this.uris.length > 0) {\n            l.uris = [];\n            this.uris.forEach(u => {\n                l.uris.push(u.toLoginUriData());\n            });\n        }\n\n        return l;\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriData } from '../data/loginUriData';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class LoginUri extends Domain {\n    uri: EncString;\n    match: UriMatchType;\n\n    constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.match = obj.match;\n        this.buildDomainModel(this, obj, {\n            uri: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n        return this.decryptObj(new LoginUriView(this), {\n            uri: null,\n        }, orgId, encKey);\n    }\n\n    toLoginUriData(): LoginUriData {\n        const u = new LoginUriData();\n        this.buildDataModel(this, u, {\n            uri: null,\n        }, ['match']);\n        return u;\n    }\n}\n","import { View } from './view';\n\nimport { Password } from '../domain/password';\n\nexport class PasswordHistoryView implements View {\n    password: string = null;\n    lastUsedDate: Date = null;\n\n    constructor(ph?: Password) {\n        if (!ph) {\n            return;\n        }\n\n        this.lastUsedDate = ph.lastUsedDate;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteData } from '../data/secureNoteData';\n\nimport Domain from './domainBase';\n\nimport { SecureNoteView } from '../view/secureNoteView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class SecureNote extends Domain {\n    type: SecureNoteType;\n\n    constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n        return Promise.resolve(new SecureNoteView(this));\n    }\n\n    toSecureNoteData(): SecureNoteData {\n        const n = new SecureNoteData();\n        n.type = this.type;\n        return n;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { ImportOption, ImportService } from 'jslib-common/abstractions/import.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport Swal, { SweetAlertIcon } from 'sweetalert2';\n\n@Component({\n    selector: 'app-import',\n    templateUrl: 'import.component.html',\n})\nexport class ImportComponent implements OnInit {\n    featuredImportOptions: ImportOption[];\n    importOptions: ImportOption[];\n    format: string = null;\n    fileContents: string;\n    formPromise: Promise<Error>;\n    loading: boolean = false;\n    importBlockedByPolicy: boolean = false;\n\n    protected organizationId: string = null;\n    protected successNavigate: any[] = ['vault'];\n\n    constructor(protected i18nService: I18nService, protected toasterService: ToasterService,\n        protected importService: ImportService, protected router: Router,\n        protected platformUtilsService: PlatformUtilsService, protected policyService: PolicyService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        this.setImportOptions();\n        this.importOptions.sort((a, b) => {\n            if (a.name == null && b.name != null) {\n                return -1;\n            }\n            if (a.name != null && b.name == null) {\n                return 1;\n            }\n            if (a.name == null && b.name == null) {\n                return 0;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(a.name, b.name) :\n                a.name.localeCompare(b.name);\n        });\n\n        this.importBlockedByPolicy = await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n    }\n\n    async submit() {\n        if (this.importBlockedByPolicy) {\n            this.platformUtilsService.showToast('error', null,\n                this.i18nService.t('personalOwnershipPolicyInEffectImports'));\n            return;\n        }\n\n        this.loading = true;\n\n        const importer = this.importService.getImporter(this.format, this.organizationId);\n        if (importer === null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFormat'));\n            this.loading = false;\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if ((files == null || files.length === 0) && (this.fileContents == null || this.fileContents === '')) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            this.loading = false;\n            return;\n        }\n\n        let fileContents = this.fileContents;\n        if (files != null && files.length > 0) {\n            try {\n                const content = await this.getFileContents(files[0]);\n                if (content != null) {\n                    fileContents = content;\n                }\n            } catch (e) {\n                this.logService.error(e);\n            }\n        }\n\n        if (fileContents == null || fileContents === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            this.loading = false;\n            return;\n        }\n\n        try {\n            this.formPromise = this.importService.import(importer, fileContents, this.organizationId);\n            const error = await this.formPromise;\n            if (error != null) {\n                this.error(error);\n                this.loading = false;\n                return;\n            }\n            this.toasterService.popAsync('success', null, this.i18nService.t('importSuccess'));\n            this.router.navigate(this.successNavigate);\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        this.loading = false;\n    }\n\n    getFormatInstructionTitle() {\n        if (this.format == null) {\n            return null;\n        }\n\n        const results = this.featuredImportOptions.concat(this.importOptions).filter(o => o.id === this.format);\n        if (results.length > 0) {\n            return this.i18nService.t('instructionsFor', results[0].name);\n        }\n        return null;\n    }\n\n    protected setImportOptions() {\n        this.featuredImportOptions = [{\n            id: null,\n            name: '-- ' + this.i18nService.t('select') + ' --',\n        }, ...this.importService.featuredImportOptions];\n        this.importOptions = this.importService.regularImportOptions;\n    }\n\n    private async error(error: Error) {\n        await Swal.fire({\n            heightAuto: false,\n            buttonsStyling: false,\n            icon: 'error' as SweetAlertIcon,\n            iconHtml: `<i class=\"swal-custom-icon fa fa-bolt text-danger\"></i>`,\n            input: 'textarea',\n            inputValue: error.message,\n            inputAttributes: {\n                'readonly': 'true',\n            },\n            titleText: this.i18nService.t('importError'),\n            text: this.i18nService.t('importErrorDesc'),\n            showConfirmButton: true,\n            confirmButtonText: this.i18nService.t('ok'),\n            onOpen: popupEl => {\n                popupEl.querySelector('.swal2-textarea').scrollTo(0, 0);\n             },\n        });\n    }\n\n    private getFileContents(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = evt => {\n                if (this.format === 'lastpasscsv' && file.type === 'text/html') {\n                    const parser = new DOMParser();\n                    const doc = parser.parseFromString((evt.target as any).result, 'text/html');\n                    const pre = doc.querySelector('pre');\n                    if (pre != null) {\n                        resolve(pre.textContent);\n                        return;\n                    }\n                    reject();\n                    return;\n                }\n\n                resolve((evt.target as any).result);\n            };\n            reader.onerror = () => {\n                reject();\n            };\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'importData' | i18n}}</h1> </div> <app-callout type=\"info\" *ngIf=\"importBlockedByPolicy\"> {{'personalOwnershipPolicyInEffectImports' | i18n}} </app-callout> <form #form (ngSubmit)=\"submit()\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"type\">1. {{'selectFormat' | i18n}}</label> <select id=\"type\" name=\"Format\" [(ngModel)]=\"format\" class=\"form-control\" [disabled]=\"importBlockedByPolicy\" required> <option *ngFor=\"let o of featuredImportOptions\" [ngValue]=\"o.id\">{{o.name}}</option> <ng-container *ngIf=\"importOptions && importOptions.length\"> <option value=\"-\" disabled=\"disabled\"></option> <option *ngFor=\"let o of importOptions\" [ngValue]=\"o.id\">{{o.name}}</option> </ng-container> </select> </div> </div> </div> <app-callout type=\"info\" title=\"{{getFormatInstructionTitle()}}\" *ngIf=\"format\"> <ng-container *ngIf=\"format === 'bitwardencsv' || format === 'bitwardenjson'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/export-your-data/\"> https://help.bitwarden.com/article/export-your-data/</a> </ng-container> <ng-container *ngIf=\"format === 'lastpasscsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-lastpass/\"> https://help.bitwarden.com/article/import-from-lastpass/</a> </ng-container> <ng-container *ngIf=\"format === 'keepassxcsv'\"> Using the KeePassX desktop application, navigate to \"Database\" &rarr; \"Export to CSV file\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'aviracsv'\"> In the Avira web vault, go to \"Settings\" &rarr; \"My Data\" &rarr; \"Export data\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'blurcsv'\"> In the Blur web vault, click your username at the top and go to \"Settings\" &rarr; \"Export Data\", then click \"Export CSV\" for your \"Accounts\". </ng-container> <ng-container *ngIf=\"format === 'safeincloudxml'\"> Using the SaveInCloud desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As XML\" and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'padlockcsv'\"> Using the Padlock desktop application, click the hamburger icon in the top left corner and navigate to \"Settings\" &rarr; \"Export\" button and save the file \"As CSV\". </ng-container> <ng-container *ngIf=\"format === 'keepass2xml'\"> Using the KeePass 2 desktop application, navigate to \"File\" &rarr; \"Export\" and select the \"KeePass XML (2.x)\" option. </ng-container> <ng-container *ngIf=\"format === 'upmcsv'\"> Using the Universal Password Manager desktop application, navigate to \"Database\" &rarr; \"Export\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'saferpasscsv'\"> Using the SaferPass browser extension, click the hamburger icon in the top left corner and navigate to \"Settings\". Click the \"Export accounts\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'meldiumcsv'\"> Using the Meldium web vault, navigate to \"Settings\". Locate the \"Export data\" function and click \"Show me my data\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'keepercsv'\"> Log into the Keeper web vault (keepersecurity.com/vault). Navigate to \"Backup\" (top right) and find the \"Export to .csv File\" option. Click \"Export Now\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\"> <span *ngIf=\"format !== 'chromecsv'\"> The process is exactly the same as importing from Google Chrome. </span> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-chrome/\"> https://help.bitwarden.com/article/import-from-chrome/</a> </ng-container> <ng-container *ngIf=\"format === 'firefoxcsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/article/import-from-firefox/\"> https://bitwarden.com/help/article/import-from-firefox/</a>. </ng-container> <ng-container *ngIf=\"format === 'safaricsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/article/import-from-safari/\"> https://bitwarden.com/help/article/import-from-safari/</a>. </ng-container> <ng-container *ngIf=\"format === '1password1pif' || format === '1passwordwincsv' || format === '1passwordmaccsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-1password/\"> https://help.bitwarden.com/article/import-from-1password/</a>. </ng-container> <ng-container *ngIf=\"format === 'passworddragonxml'\"> Using the Password Dragon desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"To XML\". In the dialog that pops up select \"All Rows\" and check all fields. Click the \"Export\" button and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'enpasscsv'\"> Using the Enpass desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As CSV\". Select \"OK\" to the warning alert and save the CSV file. Note that the importer only supports files exported while Enpass is set to the English language, so adjust your settings accordingly. </ng-container> <ng-container *ngIf=\"format === 'enpassjson'\"> Using the Enpass 6 desktop application, click the menu button and navigate to \"File\" &rarr; \"Export\". Select the \".json\" file format option and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'pwsafexml'\"> Using the Password Safe desktop application, navigate to \"File\" &rarr; \"Export To\" &rarr; \"XML format...\" and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'dashlanejson'\"> Using the Dashlane desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"Unsecured archive (readable) in JSON format\" and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'msecurecsv'\"> Using the mSecure desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"CSV File...\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'stickypasswordxml'\"> Using the Sticky Password desktop application, navigate to \"Menu\" (top right) &rarr; \"Export\" &rarr; \"Export all\". Select the unencrypted format XML option and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'truekeycsv'\"> Using the True Key desktop application, click the gear icon (top right) and then navigate to \"App Settings\". Click the \"Export\" button, enter your password and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'clipperzhtml'\"> Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the top right to expand the navigation bar. Navigate to \"Data\" &rarr; \"Export\". Click the \"download HTML+JSON\" button to save the HTML file. </ng-container> <ng-container *ngIf=\"format === 'roboformcsv'\"> Using the RoboForm Editor desktop application, navigate to \"RoboForm\" (top left) &rarr; \"Options\" &rarr; \"Account &amp; Data\" and click the \"Export\" button. Select all of your data, change the \"Format\" to \"CSV file\" and then click the \"Export\" button to save the CSV file. Note: RoboForm only allows you to export Logins. Other items will not be exported. </ng-container> <ng-container *ngIf=\"format === 'passboltcsv'\"> Log into the Passbolt web vault and navigate to the \"Passwords\" listing. Select all of the passwords you would like to export and click the \"Export\" button at the top of the listing. Choose the \"csv (lastpass)\" export format and click the \"Export\" button. </ng-container> <ng-container *ngIf=\"format === 'ascendocsv'\"> Using the Ascendo DataVault desktop application, navigate to \"Tools\" &rarr; \"Export\". In the dialog that pops up, select the \"All Items (DVX, CSV)\" option. Click the \"Ok\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passwordbossjson'\"> Using the Password Boss desktop application, navigate to \"File\" &rarr; \"Export data\" &rarr; \"Password Boss JSON - not encrypted\" and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'zohovaultcsv'\"> Log into the Zoho web vault (vault.zoho.com). Navigate to \"Tools\" &rarr; \"Export Secrets\". Select \"All Secrets\" and click the \"Zoho Vault Format CSV\" button. Highlight and copy the data from the textarea. Open a text editor like Notepad and paste the data. Save the data from the text editor as <code>zoho_export.csv</code>. </ng-container> <ng-container *ngIf=\"format === 'splashidcsv'\"> Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top right corner. Navigate to \"Export\" &rarr; \"Export as CSV\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passkeepcsv'\"> Using the PassKeep mobile app, navigate to \"Backup/Restore\". Locate the \"CSV Backup/Restore\" section and click \"Backup to CSV\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'gnomejson'\"> Make sure you have python-keyring and python-gnomekeyring installed. Save the <a target=\"_blank\" rel=\"noopener\" href=\"https://bit.ly/2GpOMTg\">GNOME Keyring Import/Export</a> python script to your desktop as <code>pw_helper.py</code>. Open terminal and run <code>chmod +rx Desktop/pw_helper.py</code> and then <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the resulting <code>my_passwords.json</code> file here to Bitwarden. </ng-container> <ng-container *ngIf=\"format === 'passwordagentcsv'\"> Using the Password Agent desktop application navigate to \"File\" &rarr; \"Export\", select the \"Fields to export\" button and check all of the fields, change the \"Output format\" to \"CSV\", and then click the \"Start\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passpackcsv'\"> Log into the Passpack website vault and navigate to \"Settings\" &rarr; \"Export\", then click the \"Download\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passmanjson'\"> Open your Passman vault and click on \"Settings\" in the bottom left corner. In the \"Settings\" window switch to the \"Export credentials\" tab and choose \"JSON\" as the export type. Enter your vault's passphrase and click the \"Export\" button to save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'avastcsv'\"> Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select the \"Export\" button for the \"Export to CSV file\" option to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'avastjson'\"> Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select the \"Export\" button for the \"Export to JSON file\" option to save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'fsecurefsk'\"> Open the F-Secure KEY desktop application and navigate to \"Settings\" &rarr; \"Export Passwords\". Select the \"Export\" button, enter your master password, and save the FSK file. </ng-container> <ng-container *ngIf=\"format === 'kasperskytxt'\"> Open the Kaspersky Password Manager desktop application and navigate to \"Settings\" &rarr; \"Import/Export\". Locate the \"Export to text file\" section and select the \"Export\" button to save the TXT file. </ng-container> <ng-container *ngIf=\"format === 'remembearcsv'\"> Open the RememBear desktop application and navigate to \"Settings\" &rarr; \"Account\" &rarr; \"Export\". Enter your master password and select the \"Export Anyway\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passwordwallettxt'\"> Open the PasswordWallet desktop application and navigate to \"File\" &rarr; \"Export\" &rarr; \"Visible entries to text file\". Enter your password and select the \"Ok\" button to save the TXT file. </ng-container> <ng-container *ngIf=\"format === 'mykicsv'\"> Open the Myki desktop browser extension and navigate to \"Advanced\" &rarr; \"Export Accounts\" and then scan the QR code with your mobile device. Various CSV files will then be saved to your computer's downloads folder. </ng-container> <ng-container *ngIf=\"format === 'securesafecsv'\"> Export your SecureSafe password safe to a CSV file with a comma delimiter. </ng-container> <ng-container *ngIf=\"format === 'logmeoncecsv'\"> Open the LogMeOnce browser extension, then navigate to \"Open Menu\" &rarr; \"Export To\" and select \"CSV File\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'blackberrycsv'\"> Open the BlackBerry Password Keeper application, then navigate to \"Settings\" &rarr; \"Import/Export\". Select \"Export Passwords\" and follow the instructions on screen to save the unencrypted CSV file. </ng-container> <ng-container *ngIf=\"format === 'buttercupcsv'\"> Open the Buttercup desktop application and unlock your vault. Right click on your vault's icon and select \"Export\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'codebookcsv'\"> Open the Codebook desktop application and log in. Navigate to \"File\" &rarr; \"Export all\", then click \"Yes\" on the dialog and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'encryptrcsv'\"> Open the newest version of the Encryptr desktop application and allow all of your data to sync. Once syncing of your data is complete, the download icon in the top right corner will turn pink. Click the download icon and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'yoticsv'\"> From the Yoti browser extension, click on \"Settings\", then \"Export Saved Logins\" and save the CSV file. </ng-container> </app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"file\">2. {{'selectImportFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" [disabled]=\"importBlockedByPolicy\"> </div> </div> </div> <div class=\"form-group\"> <label for=\"fileContents\">{{'orCopyPasteFileContents' | i18n}}</label> <textarea id=\"fileContents\" class=\"form-control\" name=\"FileContents\" [(ngModel)]=\"fileContents\" [disabled]=\"importBlockedByPolicy\"></textarea> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading || importBlockedByPolicy\" [ngClass]=\"{manual:importBlockedByPolicy}\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'importData' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: 'inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n    services = new Map<string, string>();\n    cipherDocs = new Map<string, string>();\n\n    constructor(protected cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService, private logService: LogService,\n        passwordRepromptService: PasswordRepromptService) {\n        super(modalService, userService, messagingService, passwordRepromptService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        try {\n            await this.load2fa();\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        if (this.services.size > 0) {\n            const allCiphers = await this.getAllCiphers();\n            const inactive2faCiphers: CipherView[] = [];\n            const promises: Promise<void>[] = [];\n            const docs = new Map<string, string>();\n            allCiphers.forEach(c => {\n                if (c.type !== CipherType.Login || (c.login.totp != null && c.login.totp !== '') || !c.login.hasUris ||\n                    c.isDeleted) {\n                    return;\n                }\n                for (let i = 0; i < c.login.uris.length; i++) {\n                    const u = c.login.uris[i];\n                    if (u.uri != null && u.uri !== '') {\n                        const hostname = Utils.getHostname(u.uri);\n                        if (hostname != null && this.services.has(hostname)) {\n                            if (this.services.get(hostname) != null) {\n                                docs.set(c.id, this.services.get(hostname));\n                            }\n                            inactive2faCiphers.push(c);\n                            break;\n                        }\n                    }\n                }\n            });\n            await Promise.all(promises);\n            this.ciphers = inactive2faCiphers;\n            this.cipherDocs = docs;\n        }\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    private async load2fa() {\n        if (this.services.size > 0) {\n            return;\n        }\n        const response = await fetch(new Request('https://2fa.directory/api/v2/totp.json'));\n        if (response.status !== 200) {\n            throw new Error();\n        }\n        const responseJson = await response.json();\n        for (const categoryName in responseJson) {\n            if (responseJson.hasOwnProperty(categoryName)) {\n                const category = responseJson[categoryName];\n                for (const serviceName in category) {\n                    if (category.hasOwnProperty(serviceName)) {\n                        const service = category[serviceName];\n                        if (service.url != null) {\n                            const hostname = Utils.getHostname(service.url);\n                            if (hostname != null) {\n                                this.services.set(hostname, service.doc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","<div class=\"page-header\"> <h1> {{'inactive2faReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'inactive2faReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noInactive2fa' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'inactive2faFound' | i18n}}\"> {{'inactive2faFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <a class=\"badge badge-primary\" href=\"{{cipherDocs.get(c.id)}}\" target=\"_blank\" rel=\"noopener\" *ngIf=\"cipherDocs.has(c.id)\"> {{'instructions' | i18n}}</a> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: 'reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    passwordUseMap: Map<string, number>;\n\n    constructor(protected cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService,\n        passwordRepromptService: PasswordRepromptService) {\n        super(modalService, userService, messagingService, passwordRepromptService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const ciphersWithPasswords: CipherView[] = [];\n        this.passwordUseMap = new Map<string, number>();\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            ciphersWithPasswords.push(c);\n            if (this.passwordUseMap.has(c.login.password)) {\n                this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n            } else {\n                this.passwordUseMap.set(c.login.password, 1);\n            }\n        });\n        const reusedPasswordCiphers = ciphersWithPasswords.filter(c =>\n            this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1);\n        this.ciphers = reusedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from an organization view\n        return true;\n    }\n}\n","<div class=\"page-header\"> <h1> {{'reusedPasswordsReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'reusedPasswordsReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noReusedPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'reusedPasswordsFound' | i18n}}\"> {{'reusedPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-warning\"> {{'reusedXTimes' | i18n : passwordUseMap.get(c.login.password)}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: 'unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n    constructor(protected cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService, passwordRepromptService: PasswordRepromptService) {\n        super(modalService, userService, messagingService, passwordRepromptService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const unsecuredCiphers = allCiphers.filter(c => {\n            if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n                return false;\n            }\n            return c.login.uris.some(u => u.uri != null && u.uri.indexOf('http://') === 0);\n        });\n        this.ciphers = unsecuredCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n}\n","<div class=\"page-header\"> <h1> {{'unsecuredWebsitesReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'unsecuredWebsitesReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noUnsecuredWebsites' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'unsecuredWebsitesFound' | i18n}}\"> {{'unsecuredWebsitesFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: 'weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n\n    passwordStrengthMap = new Map<string, [string, string]>();\n\n    private passwordStrengthCache = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected passwordGenerationService: PasswordGenerationService,\n        modalService: ModalService, messagingService: MessagingService, userService: UserService,\n        passwordRepromptService: PasswordRepromptService) {\n        super(modalService, userService, messagingService, passwordRepromptService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const weakPasswordCiphers: CipherView[] = [];\n        const isUserNameNotEmpty = (c: CipherView): boolean => {\n            return c.login.username != null && c.login.username.trim() !== '';\n        };\n        const getCacheKey = (c: CipherView): string => {\n            return c.login.password + '_____' + (isUserNameNotEmpty(c) ? c.login.username : '');\n        };\n\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            const hasUserName = isUserNameNotEmpty(c);\n            const cacheKey = getCacheKey(c);\n            if (!this.passwordStrengthCache.has(cacheKey)) {\n                let userInput: string[] = [];\n                if (hasUserName) {\n                    const atPosition = c.login.username.indexOf('@');\n                    if (atPosition > -1) {\n                        userInput = userInput.concat(\n                            c.login.username.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/))\n                            .filter(i => i.length >= 3);\n                    } else {\n                        userInput = c.login.username.trim().toLowerCase().split(/[^A-Za-z0-9]/)\n                            .filter(i => i.length >= 3);\n                    }\n                }\n                const result = this.passwordGenerationService.passwordStrength(c.login.password,\n                    userInput.length > 0 ? userInput : null);\n                this.passwordStrengthCache.set(cacheKey, result.score);\n            }\n            const score = this.passwordStrengthCache.get(cacheKey);\n            if (score != null && score <= 2) {\n                this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n                weakPasswordCiphers.push(c);\n            }\n        });\n        weakPasswordCiphers.sort((a, b) => {\n            return this.passwordStrengthCache.get(getCacheKey(a)) -\n                this.passwordStrengthCache.get(getCacheKey(b));\n        });\n        this.ciphers = weakPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from the org view;\n        return true;\n    }\n\n    private scoreKey(score: number): [string, string] {\n        switch (score) {\n            case 4:\n                return ['strong', 'success'];\n            case 3:\n                return ['good', 'primary'];\n            case 2:\n                return ['weak', 'warning'];\n            default:\n                return ['veryWeak', 'danger'];\n        }\n    }\n}\n","<div class=\"page-header\"> <h1> {{'weakPasswordsReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'weakPasswordsReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noWeakPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'weakPasswordsFound' | i18n}}\"> {{'weakPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-{{passwordStrengthMap.get(c.id)[1]}}\"> {{passwordStrengthMap.get(c.id)[0] | i18n}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib-angular/components/attachments.component';\n\n@Component({\n    selector: 'app-vault-attachments',\n    templateUrl: 'attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = false;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService,\n        logService: LogService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, window,\n            logService);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.showFixOldAttachments(attachment)) {\n            await this.reuploadCipherAttachment(attachment, false);\n        }\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.cipher.organizationId == null;\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"attachmentsTitle\"> {{'attachments' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\"> <tbody> <tr *ngFor=\"let a of cipher.attachments\"> <td class=\"table-list-icon\"> <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-lg fa-fw fa-spin\" *ngIf=\"a.downloading\" aria-hidden=\"true\"></i> </td> <td class=\"wrap\"> <div class=\"d-flex\"> <a href=\"#\" appStopClick (click)=\"download(a)\">{{a.fileName}}</a> <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\"> <a href=\"https://help.bitwarden.com/article/attachments/#fixing-old-attachments\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-exclamation-triangle text-warning\" title=\"{{'attachmentFixDesc' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachmentFixDesc' | i18n}}</span></a> <button type=\"button\" class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\" (click)=\"reupload(a)\" #reuploadBtn [appApiAction]=\"reuploadPromises[a.id]\" [disabled]=\"reuploadBtn.loading\">{{'fix' | i18n}}</button> </div> </div> <small>{{a.sizeName}}</small> </td> <td class=\"table-list-options\" *ngIf=\"!viewOnly\"> <button class=\"btn btn-outline-danger\" type=\"button\" appStopClick appA11yTitle=\"{{'delete' | i18n}}\" (click)=\"delete(a)\" #deleteBtn [appApiAction]=\"deletePromises[a.id]\" [disabled]=\"deleteBtn.loading\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </td> </tr> </tbody> </table> <div *ngIf=\"!viewOnly\"> <h3>{{'newAttachment' | i18n}}</h3> <label for=\"file\" class=\"sr-only\">{{'file' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'maxFileSize' | i18n}}</small> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!viewOnly\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CiphersComponent as BaseCiphersComponent } from '../../vault/ciphers.component';\n\n@Component({\n    selector: 'app-org-vault-ciphers',\n    templateUrl: '../../vault/ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n    @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n    organization: Organization;\n    accessEvents = false;\n\n    protected allCiphers: CipherView[] = [];\n\n    constructor(searchService: SearchService, toasterService: ToasterService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, cipherService: CipherService,\n        private apiService: ApiService, eventService: EventService, totpService: TotpService,\n        userService: UserService, passwordRepromptService: PasswordRepromptService,\n        logService: LogService) {\n        super(searchService, toasterService, i18nService, platformUtilsService, cipherService,\n            eventService, totpService, userService, passwordRepromptService, logService);\n    }\n\n    async load(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.canEditAnyCollection) {\n            this.accessEvents = this.organization.useEvents;\n            this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n        } else {\n            this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(c => c.organizationId === this.organization.id);\n        }\n        await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n        await this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.canViewAllCollections) {\n            await super.applyFilter(filter);\n        } else {\n            const f = (c: CipherView) => c.organizationId === this.organization.id && (filter == null || filter(c));\n            await super.applyFilter(f);\n        }\n    }\n\n    async search(timeout: number = null) {\n        await super.search(timeout, this.allCiphers);\n    }\n    events(c: CipherView) {\n        this.onEventsClicked.emit(c);\n    }\n\n    protected deleteCipher(id: string) {\n        if (!this.organization.canEditAnyCollection) {\n            return super.deleteCipher(id, this.deleted);\n        }\n        return this.deleted ? this.apiService.deleteCipherAdmin(id) : this.apiService.putDeleteCipherAdmin(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return this.organization.canEditAnyCollection && c.hasOldAttachments;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from 'jslib-angular/components/collections.component';\n\n@Component({\n    selector: 'app-vault-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService, logService: LogService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"collectionsTitle\"> {{'collections' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'collectionsDesc' | i18n}}</p> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from '../../vault/groupings.component';\n\n@Component({\n    selector: 'app-org-vault-groupings',\n    templateUrl: '../../vault/groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService,\n        private apiService: ApiService, private i18nService: I18nService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    async loadCollections() {\n        if (!this.organization.canEditAnyCollection) {\n            await super.loadCollections(this.organization.id);\n            return;\n        }\n\n        const collections = await this.apiService.getCollections(this.organization.id);\n        if (collections != null && collections.data != null && collections.data.length) {\n            const collectionDomains = collections.data.map(r =>\n                new Collection(new CollectionData(r as CollectionDetailsResponse)));\n            this.collections = await this.collectionService.decryptMany(collectionDomains);\n        } else {\n            this.collections = [];\n        }\n\n        const unassignedCollection = new CollectionView();\n        unassignedCollection.name = this.i18nService.t('unassigned');\n        unassignedCollection.id = 'unassigned';\n        unassignedCollection.organizationId = this.organization.id;\n        unassignedCollection.readOnly = true;\n        this.collections.push(unassignedCollection);\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    collapse(grouping: CollectionView) {\n        super.collapse(grouping, 'org_');\n    }\n\n    isCollapsed(grouping: CollectionView) {\n        return super.isCollapsed(grouping, 'org_');\n    }\n}\n","import {\n    Component,\n    Input,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { BulkDeleteComponent } from './bulk-delete.component';\nimport { BulkMoveComponent } from './bulk-move.component';\nimport { BulkRestoreComponent } from './bulk-restore.component';\nimport { BulkShareComponent } from './bulk-share.component';\nimport { CiphersComponent } from './ciphers.component';\n\n@Component({\n    selector: 'app-vault-bulk-actions',\n    templateUrl: 'bulk-actions.component.html',\n})\nexport class BulkActionsComponent {\n    @Input() ciphersComponent: CiphersComponent;\n    @Input() deleted: boolean;\n    @Input() organization: Organization;\n\n    @ViewChild('bulkDeleteTemplate', { read: ViewContainerRef, static: true }) bulkDeleteModalRef: ViewContainerRef;\n    @ViewChild('bulkRestoreTemplate', { read: ViewContainerRef, static: true }) bulkRestoreModalRef: ViewContainerRef;\n    @ViewChild('bulkMoveTemplate', { read: ViewContainerRef, static: true }) bulkMoveModalRef: ViewContainerRef;\n    @ViewChild('bulkShareTemplate', { read: ViewContainerRef, static: true }) bulkShareModalRef: ViewContainerRef;\n\n    constructor(private toasterService: ToasterService, private i18nService: I18nService,\n        private modalService: ModalService, private passwordRepromptService: PasswordRepromptService) { }\n\n    async bulkDelete() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkDeleteComponent, this.bulkDeleteModalRef, comp => {\n            comp.permanent = this.deleted;\n            comp.cipherIds = selectedIds;\n            comp.organization = this.organization;\n            comp.onDeleted.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async bulkRestore() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkRestoreComponent, this.bulkRestoreModalRef, comp => {\n            comp.cipherIds = selectedIds;\n            comp.onRestored.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async bulkShare() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        if (selectedCiphers.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkShareComponent, this.bulkShareModalRef, comp => {\n            comp.ciphers = selectedCiphers;\n            comp.onShared.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async bulkMove() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkMoveComponent, this.bulkMoveModalRef, comp => {\n            comp.cipherIds = selectedIds;\n            comp.onMoved.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    selectAll(select: boolean) {\n        this.ciphersComponent.selectAll(select);\n    }\n\n    private async promptPassword() {\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        const notProtected = !selectedCiphers.find(cipher => cipher.reprompt !== CipherRepromptType.None);\n\n        return notProtected || await this.passwordRepromptService.showPasswordPrompt();\n    }\n}\n","<div class=\"dropdown mr-2\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkMove()\" *ngIf=\"!deleted && !organization\"> <i class=\"fa fa-fw fa-share\" aria-hidden=\"true\"></i> {{'moveSelected' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"bulkShare()\" *ngIf=\"!deleted && !organization\"> <i class=\"fa fa-fw fa-arrow-circle-o-right\" aria-hidden=\"true\"></i> {{'moveSelectedToOrg' | i18n}} </button> <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'restoreSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{(deleted ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <ng-template #bulkDeleteTemplate></ng-template> <ng-template #bulkRestoreTemplate></ng-template> <ng-template #bulkMoveTemplate></ng-template> <ng-template #bulkShareTemplate></ng-template> ","import Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { SendFileData } from '../data/sendFileData';\n\nimport { SendFileView } from '../view/sendFileView';\n\nexport class SendFile extends Domain {\n    id: string;\n    size: string;\n    sizeName: string;\n    fileName: EncString;\n\n    constructor(obj?: SendFileData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            sizeName: null,\n            fileName: null,\n        }, alreadyEncrypted, ['id', 'sizeName']);\n    }\n\n    async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n        const view = await this.decryptObj(new SendFileView(this), {\n            fileName: null,\n        }, null, key);\n        return view;\n    }\n}\n","import Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { SendTextData } from '../data/sendTextData';\n\nimport { SendTextView } from '../view/sendTextView';\n\nexport class SendText extends Domain {\n    text: EncString;\n    hidden: boolean;\n\n    constructor(obj?: SendTextData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.hidden = obj.hidden;\n        this.buildDomainModel(this, obj, {\n            text: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n        return this.decryptObj(new SendTextView(this), {\n            text: null,\n        }, null, key);\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherWithIdRequest extends CipherRequest {\n    id: string;\n\n    constructor(cipher: Cipher) {\n        super(cipher);\n        this.id = cipher.id;\n    }\n}\n","import { Folder } from '../domain/folder';\n\nexport class FolderRequest {\n    name: string;\n\n    constructor(folder: Folder) {\n        this.name = folder.name ? folder.name.encryptedString : null;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class SendFileApi extends BaseResponse {\n    id: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.id = this.getResponseProperty('Id');\n        this.fileName = this.getResponseProperty('FileName');\n        this.key = this.getResponseProperty('Key');\n        this.size = this.getResponseProperty('Size');\n        this.sizeName = this.getResponseProperty('SizeName');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class SendTextApi extends BaseResponse {\n    text: string;\n    hidden: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.text = this.getResponseProperty('Text');\n        this.hidden = this.getResponseProperty('Hidden') || false;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Directive({\n    selector: '[appSelectCopy]',\n})\nexport class SelectCopyDirective {\n    constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) { }\n\n    @HostListener('copy') onCopy() {\n        if (window == null) {\n            return;\n        }\n        let copyText = '';\n        const selection = window.getSelection();\n        for (let i = 0; i < selection.rangeCount; i++) {\n            const range = selection.getRangeAt(i);\n            const text = range.toString();\n\n            // The selection should only contain one line of text. In some cases however, the\n            // selection contains newlines and space characters from the indentation of following\n            // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n            // that aren't part of the password, the selection has to be trimmed.\n            let stringEndPos = text.length;\n            const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n            if (newLinePos > -1) {\n                const otherPart = text.substr(newLinePos).trim();\n                if (otherPart === '') {\n                    stringEndPos = newLinePos;\n                }\n            }\n            copyText += text.substring(0, stringEndPos);\n        }\n        this.platformUtilsService.copyToClipboard(copyText, { window: window });\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\nimport { Utils } from 'jslib-common/misc/utils';\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: 'colorPassword' })\nexport class ColorPasswordPipe implements PipeTransform {\n    transform(password: string) {\n        // Convert to an array to handle cases that stings have special characters, ie: emoji.\n        const passwordArray = Array.from(password);\n        let colorizedPassword = '';\n        for (let i = 0; i < passwordArray.length; i++) {\n            let character = passwordArray[i];\n            let isSpecial = false;\n            // Sanitize HTML first.\n            switch (character) {\n                case '&':\n                    character = '&amp;';\n                    isSpecial = true;\n                    break;\n                case '<':\n                    character = '&lt;';\n                    isSpecial = true;\n                    break;\n                case '>':\n                    character = '&gt;';\n                    isSpecial = true;\n                    break;\n                case ' ':\n                    character = '&nbsp;';\n                    isSpecial = true;\n                    break;\n                default:\n                    break;\n            }\n            let type = 'letter';\n            if (character.match(Utils.regexpEmojiPresentation)) {\n                type = 'emoji';\n            } else if (isSpecial || character.match(/[^\\w ]/)) {\n                type = 'special';\n            } else if (character.match(/\\d/)) {\n                type = 'number';\n            }\n            colorizedPassword += '<span class=\"password-' + type + '\">' + character + '</span>';\n        }\n        return colorizedPassword;\n    }\n}\n","export abstract class NotificationsService {\n    init: () => Promise<void>;\n    updateConnection: (sync?: boolean) => Promise<void>;\n    reconnectFromActivity: () => Promise<void>;\n    disconnectFromInactivity: () => Promise<void>;\n}\n","export abstract class SettingsService {\n    clearCache: () => void;\n    getEquivalentDomains: () => Promise<any>;\n    setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n    clear: (userId: string) => Promise<void>;\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Injectable()\nexport class OrganizationGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        if (org == null) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        if (!org.isOwner && !org.enabled) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('organizationIsDisabled'));\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\n@Injectable()\nexport class OrganizationTypeGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        const permissions = route.data == null ? null : route.data.permissions as Permissions[];\n\n        if (\n            (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && org.canAccessEventLogs) ||\n            (permissions.indexOf(Permissions.AccessImportExport) !== -1 && org.canAccessImportExport) ||\n            (permissions.indexOf(Permissions.AccessReports) !== -1 && org.canAccessReports) ||\n            (permissions.indexOf(Permissions.CreateNewCollections) !== -1 && org.canCreateNewCollections) ||\n            (permissions.indexOf(Permissions.EditAnyCollection) !== -1 && org.canEditAnyCollection) ||\n            (permissions.indexOf(Permissions.DeleteAnyCollection) !== -1 && org.canDeleteAnyCollection) ||\n            (permissions.indexOf(Permissions.EditAssignedCollections) !== -1 && org.canEditAssignedCollections) ||\n            (permissions.indexOf(Permissions.DeleteAssignedCollections) !== -1 && org.canDeleteAssignedCollections) ||\n            (permissions.indexOf(Permissions.ManageGroups) !== -1 && org.canManageGroups) ||\n            (permissions.indexOf(Permissions.ManageOrganization) !== -1 && org.isOwner) ||\n            (permissions.indexOf(Permissions.ManagePolicies) !== -1 && org.canManagePolicies) ||\n            (permissions.indexOf(Permissions.ManageUsers) !== -1 && org.canManageUsers) ||\n            (permissions.indexOf(Permissions.ManageUsersPassword) !== -1 && org.canManageUsersPassword) ||\n            (permissions.indexOf(Permissions.ManageSso) !== -1 && org.canManageSso)\n        ) {\n            return true;\n        }\n\n        this.router.navigate(['/organizations', org.id]);\n        return false;\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileOrganizationResponse } from './profileOrganizationResponse';\nimport { ProfileProviderOrganizationResponse } from './profileProviderOrganizationResponse';\nimport { ProfileProviderResponse } from './profileProviderResponse';\n\nexport class ProfileResponse extends BaseResponse {\n    id: string;\n    name: string;\n    email: string;\n    emailVerified: boolean;\n    masterPasswordHint: string;\n    premium: boolean;\n    culture: string;\n    twoFactorEnabled: boolean;\n    key: string;\n    privateKey: string;\n    securityStamp: string;\n    forcePasswordReset: boolean;\n    usesKeyConnector: boolean;\n    organizations: ProfileOrganizationResponse[] = [];\n    providers: ProfileProviderResponse[] = [];\n    providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.emailVerified = this.getResponseProperty('EmailVerified');\n        this.masterPasswordHint = this.getResponseProperty('MasterPasswordHint');\n        this.premium = this.getResponseProperty('Premium');\n        this.culture = this.getResponseProperty('Culture');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n        this.key = this.getResponseProperty('Key');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.securityStamp = this.getResponseProperty('SecurityStamp');\n        this.forcePasswordReset = this.getResponseProperty('ForcePasswordReset') ?? false;\n        this.usesKeyConnector = this.getResponseProperty('UsesKeyConnector') ?? false;\n\n        const organizations = this.getResponseProperty('Organizations');\n        if (organizations != null) {\n            this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n        }\n        const providers = this.getResponseProperty('Providers');\n        if (providers != null) {\n            this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n        }\n        const providerOrganizations = this.getResponseProperty('ProviderOrganizations');\n        if (providerOrganizations != null) {\n            this.providerOrganizations = providerOrganizations.map((o: any) => new ProfileProviderOrganizationResponse(o));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nexport class SendResponse extends BaseResponse {\n    id: string;\n    accessId: string;\n    type: SendType;\n    name: string;\n    notes: string;\n    file: SendFileApi;\n    text: SendTextApi;\n    key: string;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: string;\n    expirationDate: string;\n    deletionDate: string;\n    password: string;\n    disable: boolean;\n    hideEmail: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.accessId = this.getResponseProperty('AccessId');\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.notes = this.getResponseProperty('Notes');\n        this.key = this.getResponseProperty('Key');\n        this.maxAccessCount = this.getResponseProperty('MaxAccessCount');\n        this.accessCount = this.getResponseProperty('AccessCount');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n        this.expirationDate = this.getResponseProperty('ExpirationDate');\n        this.deletionDate = this.getResponseProperty('DeletionDate');\n        this.password = this.getResponseProperty('Password');\n        this.disable = this.getResponseProperty('Disabled') || false;\n        this.hideEmail = this.getResponseProperty('HideEmail') || false;\n\n        const text = this.getResponseProperty('Text');\n        if (text != null) {\n            this.text = new SendTextApi(text);\n        }\n\n        const file = this.getResponseProperty('File');\n        if (file != null) {\n            this.file = new SendFileApi(file);\n        }\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 506;","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Injectable()\nexport class ProviderGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const provider = await this.userService.getProvider(route.params.providerId);\n        if (provider == null) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        if (!provider.isProviderAdmin && !provider.enabled) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('providerIsDisabled'));\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\n@Injectable()\nexport class ProviderTypeGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const provider = await this.userService.getProvider(route.params.providerId);\n        const permissions = route.data == null ? null : route.data.permissions as Permissions[];\n\n        if (\n            (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && provider.canAccessEventLogs) ||\n            (permissions.indexOf(Permissions.ManageProvider) !== -1 && provider.isProviderAdmin) ||\n            (permissions.indexOf(Permissions.ManageUsers) !== -1 && provider.canManageUsers)\n        ) {\n            return true;\n        }\n\n        this.router.navigate(['/providers', provider.id]);\n        return false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\n@Component({\n    selector: 'providers-layout',\n    templateUrl: 'providers-layout.component.html',\n})\nexport class ProvidersLayoutComponent {\n\n    provider: Provider;\n    private providerId: string;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        this.route.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            await this.load();\n        });\n    }\n\n    async load() {\n        this.provider = await this.userService.getProvider(this.providerId);\n    }\n\n    get showMenuBar() {\n        return this.showManageTab || this.showSettingsTab;\n    }\n\n    get showManageTab() {\n        return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n    }\n\n    get showSettingsTab() {\n        return this.provider.isProviderAdmin;\n    }\n\n    get manageRoute(): string {\n        switch (true) {\n            case this.provider.canManageUsers:\n                return 'manage/people';\n            case this.provider.canAccessEventLogs:\n                return 'manage/events';\n        }\n    }\n}\n","<app-navbar></app-navbar> <div class=\"org-nav\" *ngIf=\"provider\"> <div class=\"container d-flex\"> <div class=\"d-flex flex-column\"> <div class=\"my-auto d-flex align-items-center pl-1\"> <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar> <div class=\"org-name ml-3\"> <span>{{provider.name}}</span> <small class=\"text-muted\">{{'provider' | i18n}}</small> </div> <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\"> <div class=\"card-body py-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'providerIsDisabled' | i18n}} </div> </div> </div> <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\"> <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\"> <i class=\"fa fa-university\" aria-hidden=\"true\"></i> {{'clients' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showManageTab\"> <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i> {{'manage' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showSettingsTab\"> <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\"> <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i> {{'settings' | i18n}} </a> </li> </ul> </div> </div> </div> <div class=\"container page-content\"> <router-outlet></router-outlet> </div> <app-footer></app-footer> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { first } from 'rxjs/operators';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport {\n    ProviderOrganizationOrganizationDetailsResponse\n} from 'jslib-common/models/response/provider/providerOrganizationResponse';\n\nimport { ProviderService } from '../services/provider.service';\n\nimport { AddOrganizationComponent } from './add-organization.component';\n\nconst DisallowedPlanTypes = [PlanType.Free, PlanType.FamiliesAnnually2019, PlanType.FamiliesAnnually];\n\n@Component({\n    templateUrl: 'clients.component.html',\n})\nexport class ClientsComponent implements OnInit {\n\n    @ViewChild('add', { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n    providerId: any;\n    searchText: string;\n    addableOrganizations: Organization[];\n    loading = true;\n    manageOrganizations = false;\n    showAddExisting = false;\n\n    clients: ProviderOrganizationOrganizationDetailsResponse[];\n    pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n    protected didScroll = false;\n    protected pageSize = 100;\n    protected actionPromise: Promise<any>;\n    private pagedClientsCount = 0;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private apiService: ApiService, private searchService: SearchService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private toasterService: ToasterService, private validationService: ValidationService,\n        private providerService: ProviderService, private logService: LogService,\n        private modalService: ModalService) { }\n\n    async ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n\n            await this.load();\n\n            this.route.queryParams.pipe(first()).subscribe(async qParams => {\n                this.searchText = qParams.search;\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getProviderClients(this.providerId);\n        this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n        this.manageOrganizations = (await this.userService.getProvider(this.providerId)).type === ProviderUserType.ProviderAdmin;\n        const candidateOrgs = (await this.userService.getAllOrganizations()).filter(o => o.isOwner && o.providerId == null);\n        const allowedOrgsIds = await Promise.all(candidateOrgs.map(o => this.apiService.getOrganization(o.id))).then(orgs =>\n            orgs.filter(o => !DisallowedPlanTypes.includes(o.planType))\n                .map(o => o.id));\n        this.addableOrganizations = candidateOrgs.filter(o => allowedOrgsIds.includes(o.id));\n\n        this.showAddExisting = this.addableOrganizations.length !== 0;\n        this.loading = false;\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.clients && this.clients.length > this.pageSize;\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    async resetPaging() {\n        this.pagedClients = [];\n        this.loadMore();\n    }\n\n\n    loadMore() {\n        if (!this.clients || this.clients.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedClients.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n            pagedSize = this.pagedClientsCount;\n        }\n        if (this.clients.length > pagedLength) {\n            this.pagedClients = this.pagedClients.concat(this.clients.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedClientsCount = this.pagedClients.length;\n        this.didScroll = this.pagedClients.length > this.pageSize;\n    }\n\n    async addExistingOrganization() {\n        const [modal] = await this.modalService.openViewRef(AddOrganizationComponent, this.addModalRef, comp => {\n            comp.providerId = this.providerId;\n            comp.organizations = this.addableOrganizations;\n            comp.onAddedOrganization.subscribe(async () => {\n                try {\n                    await this.load();\n                    modal.close();\n                } catch (e) {\n                    this.logService.error(`Handled exception: ${e}`);\n                }\n            });\n        });\n    }\n\n    async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('detachOrganizationConfirmation'), organization.organizationName,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n\n        if (!confirmed) {\n            return false;\n        }\n\n        this.actionPromise = this.providerService.detachOrganizastion(this.providerId, organization.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('detachedOrganization', organization.organizationName));\n            await this.load();\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'clients' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newClientOrganization' | i18n}} </a> <button class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"addExistingOrganization()\" *ngIf=\"manageOrganizations && showAddExisting\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'addExistingOrganization' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (clients | search:searchText:'organizationName':'id') as searchedClients\"> <p *ngIf=\"!searchedClients.length\">{{'noClientsInList' | i18n}}</p> <ng-container *ngIf=\"searchedClients.length\"> <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let o of searchedClients\"> <td width=\"30\"> <app-avatar [data]=\"o.organizationName\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a [routerLink]=\"['/organizations', o.organizationId]\">{{o.organizationName}}</a> </td> <td class=\"table-list-options\" *ngIf=\"manageOrganizations\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> <ng-template #add></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ProviderService } from '../services/provider.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { Provider } from 'jslib-common/models/domain/provider';\n\nimport { PlanType } from 'jslib-common/enums/planType';\n\n@Component({\n    selector: 'provider-add-organization',\n    templateUrl: 'add-organization.component.html',\n})\nexport class AddOrganizationComponent implements OnInit {\n\n    @Input() providerId: string;\n    @Input() organizations: Organization[];\n    @Output() onAddedOrganization = new EventEmitter();\n\n    provider: Provider;\n    formPromise: Promise<any>;\n    loading = true;\n\n    constructor(private userService: UserService, private providerService: ProviderService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private validationService: ValidationService,\n        private apiService: ApiService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        if (this.providerId == null) {\n            return;\n        }\n\n        this.provider = await this.userService.getProvider(this.providerId);\n\n        this.loading = false;\n    }\n\n    async add(organization: Organization) {\n        if (this.formPromise) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('addOrganizationConfirmation', organization.name, this.provider.name), organization.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.formPromise = this.providerService.addOrganizationToProvider(this.providerId, organization.id);\n            await this.formPromise;\n        } catch (e) {\n            this.validationService.showError(e);\n            return;\n        } finally {\n            this.formPromise = null;\n        }\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('organizationJoinedProvider'));\n        this.onAddedOrganization.emit();\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"addTitle\"> {{'addExistingOrganization' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <ng-container *ngIf=\"!loading\"> <table class=\"table table-hover table-list\"> <tr *ngFor=\"let o of organizations\"> <td width=\"30\"> <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{o.name}} </td> <td> <button class=\"btn btn-outline-secondary pull-right\" (click)=\"add(o)\" [disabled]=\"formPromise\">Add</button> </td> </tr> </table> </ng-container> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { OrganizationPlansComponent } from 'src/app/settings/organization-plans.component';\n\n@Component({\n    selector: 'app-create-organization',\n    templateUrl: 'create-organization.component.html',\n})\nexport class CreateOrganizationComponent implements OnInit {\n    @ViewChild(OrganizationPlansComponent, { static: true }) orgPlansComponent: OrganizationPlansComponent;\n\n    providerId: string;\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'newClientOrganization' | i18n}}</h1> </div> <p>{{'newClientOrganizationDesc' | i18n}}</p> <app-organization-plans [providerId]=\"providerId\"></app-organization-plans> ","import Domain from './domainBase';\n\nexport class MasterPasswordPolicyOptions extends Domain {\n    minComplexity: number = 0;\n    minLength: number = 0;\n    requireUpper: boolean = false;\n    requireLower: boolean = false;\n    requireNumbers: boolean = false;\n    requireSpecial: boolean = false;\n}\n","import { TaxInfoUpdateRequest } from './taxInfoUpdateRequest';\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n    taxId: string;\n    line1: string;\n    line2: string;\n    city: string;\n    state: string;\n}\n","export class TaxInfoUpdateRequest {\n    country: string;\n    postalCode: string;\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Toast, ToasterService } from 'angular2-toaster';\n\nimport { BaseAcceptComponent } from 'src/app/common/base.accept.component';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { ProviderUserAcceptRequest } from 'jslib-common/models/request/provider/providerUserAcceptRequest';\n\n@Component({\n    selector: 'app-accept-provider',\n    templateUrl: 'accept-provider.component.html',\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n    providerName: string;\n\n    failedMessage = 'providerInviteAcceptFailed';\n\n    requiredParameters = ['providerId', 'providerUserId', 'token'];\n\n    constructor(router: Router, toasterService: ToasterService, i18nService: I18nService, route: ActivatedRoute,\n        userService: UserService, stateService: StateService, private apiService: ApiService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any) {\n        const request = new ProviderUserAcceptRequest();\n        request.token = qParams.token;\n\n        await this.apiService.postProviderUserAccept(qParams.providerId, qParams.providerUserId, request);\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('providerInviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any) {\n        this.providerName = qParams.providerName;\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'joinProvider' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{providerName}} <strong class=\"d-block mt-2\">{{email}}</strong> </p> <p>{{'joinProviderDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\nimport { EventService } from 'src/app/services/event.service';\n\nimport { BaseEventsComponent } from 'src/app/common/base.events.component';\n\n@Component({\n    selector: 'provider-events',\n    templateUrl: 'events.component.html',\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n    exportFileName: string = 'provider-events';\n    providerId: string;\n\n    private providerUsersUserIdMap = new Map<string, any>();\n    private providerUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute, eventService: EventService,\n        i18nService: I18nService, toasterService: ToasterService, private userService: UserService,\n        exportService: ExportService, platformUtilsService: PlatformUtilsService, private router: Router,\n        logService: LogService, private userNamePipe: UserNamePipe) {\n        super(eventService, i18nService, toasterService, exportService, platformUtilsService, logService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            const provider = await this.userService.getProvider(this.providerId);\n            if (provider == null || !provider.useEvents) {\n                this.router.navigate(['/providers', this.providerId]);\n                return;\n            }\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getProviderUsers(this.providerId);\n        response.data.forEach(u => {\n            const name = this.userNamePipe.transform(u);\n            this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n            this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n        });\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n        return this.apiService.getEventsProvider(this.providerId, startDate, endDate, continuationToken);\n    }\n\n    protected getUserName(r: EventResponse, userId: string) {\n        return userId != null && this.providerUsersUserIdMap.has(userId) ? this.providerUsersUserIdMap.get(userId) : null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'eventLogs' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> </div> <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshForm.loading\"> <i class=\"fa fa-refresh fa-fw\" aria-hidden=\"true\" [ngClass]=\"{'fa-spin': loaded && refreshForm.loading}\"></i> {{'refresh' | i18n}} </button> </form> <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\" [ngClass]=\"{loading:exportForm.loading}\" (click)=\"exportEvents()\" [disabled]=\"loaded && exportForm.loading || dirtyDates\"> <i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i> <span>{{'export' | i18n}}</span> </button> </form> </div> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p *ngIf=\"!events || !events.length\">{{'noEventsInList' | i18n}}</p> <table class=\"table table-hover\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td> <span title=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </ng-container> ","import { Directive } from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { EventView } from 'jslib-common/models/view/eventView';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\n\nimport { EventService } from 'src/app/services/event.service';\n\n@Directive()\nexport abstract class BaseEventsComponent {\n    loading = true;\n    loaded = false;\n    events: EventView[];\n    start: string;\n    end: string;\n    dirtyDates: boolean = true;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    exportPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    abstract readonly exportFileName: string;\n\n    constructor(protected eventService: EventService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected exportService: ExportService,\n        protected platformUtilsService: PlatformUtilsService, protected logService: LogService) {\n        const defaultDates = this.eventService.getDefaultDateFilters();\n        this.start = defaultDates[0];\n        this.end = defaultDates[1];\n    }\n\n    async exportEvents() {\n        if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n            return;\n        }\n\n        this.loading = true;\n\n        const dates = this.parseDates();\n        if (dates == null) {\n            return;\n        }\n\n        try {\n            this.exportPromise = this.export(dates[0], dates[1]);\n\n            await this.exportPromise;\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n\n        this.exportPromise = null;\n        this.loading = false;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.appApiPromiseUnfulfilled()) {\n            return;\n        }\n\n        const dates = this.parseDates();\n        if (dates == null) {\n            return;\n        }\n\n        this.loading = true;\n        let events: EventView[] = [];\n        try {\n            const promise = this.loadAndParseEvents(dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            const result = await promise;\n            this.continuationToken = result.continuationToken;\n            events = result.events;\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.dirtyDates = false;\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n\n    protected abstract requestEvents(startDate: string, endDate: string, continuationToken: string): Promise<ListResponse<EventResponse>>;\n    protected abstract getUserName(r: EventResponse, userId: string): { name: string, email: string };\n\n    protected async loadAndParseEvents(startDate: string, endDate: string, continuationToken: string) {\n        const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n        const events = await Promise.all(response.data.map(async r => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = await this.eventService.getEventInfo(r);\n            const user = this.getUserName(r, userId);\n            return new EventView({\n                message: eventInfo.message,\n                humanReadableMessage: eventInfo.humanReadableMessage,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.i18nService.t('unknown'),\n                userEmail: user != null ? user.email : '',\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            });\n        }));\n        return { continuationToken: response.continuationToken, events: events };\n    }\n\n    protected parseDates() {\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return null;\n        }\n        return dates;\n    }\n\n    protected appApiPromiseUnfulfilled() {\n        return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n    }\n\n    private async export(start: string, end: string) {\n        let continuationToken = this.continuationToken;\n        let events = [].concat(this.events);\n\n        while (continuationToken != null) {\n            const result = await this.loadAndParseEvents(start, end, continuationToken);\n            continuationToken = result.continuationToken;\n            events = events.concat(result.events);\n        }\n\n        const data = await this.exportService.getEventExport(events);\n        const fileName = this.exportService.getFileName(this.exportFileName, 'csv');\n        this.platformUtilsService.saveFile(window, data, { type: 'text/plain' }, fileName);\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\n@Component({\n    selector: 'provider-manage',\n    templateUrl: 'manage.component.html',\n})\nexport class ManageComponent implements OnInit {\n    provider: Provider;\n    accessEvents = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.provider = await this.userService.getProvider(params.providerId);\n            this.accessEvents = this.provider.useEvents;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\" *ngIf=\"provider\"> <div class=\"card-header\">{{'manage' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"people\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"provider.canManageUsers\"> {{'people' | i18n}} </a> <a routerLink=\"events\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"provider.canAccessEventLogs && accessEvents\"> {{'eventLogs' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { first } from 'rxjs/operators';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\n\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { ProviderUserUserDetailsResponse } from 'jslib-common/models/response/provider/providerUserResponse';\n\nimport { ProviderUserBulkRequest } from 'jslib-common/models/request/provider/providerUserBulkRequest';\nimport { ProviderUserConfirmRequest } from 'jslib-common/models/request/provider/providerUserConfirmRequest';\nimport { ProviderUserBulkResponse } from 'jslib-common/models/response/provider/providerUserBulkResponse';\n\nimport { BasePeopleComponent } from 'src/app/common/base.people.component';\nimport { BulkStatusComponent } from 'src/app/organizations/manage/bulk/bulk-status.component';\nimport { EntityEventsComponent } from 'src/app/organizations/manage/entity-events.component';\nimport { BulkConfirmComponent } from './bulk/bulk-confirm.component';\nimport { BulkRemoveComponent } from './bulk/bulk-remove.component';\nimport { UserAddEditComponent } from './user-add-edit.component';\n\n@Component({\n    selector: 'provider-people',\n    templateUrl: 'people.component.html',\n})\nexport class PeopleComponent extends BasePeopleComponent<ProviderUserUserDetailsResponse> implements OnInit {\n\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('groupsTemplate', { read: ViewContainerRef, static: true }) groupsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n    @ViewChild('bulkStatusTemplate', { read: ViewContainerRef, static: true }) bulkStatusModalRef: ViewContainerRef;\n    @ViewChild('bulkConfirmTemplate', { read: ViewContainerRef, static: true }) bulkConfirmModalRef: ViewContainerRef;\n    @ViewChild('bulkRemoveTemplate', { read: ViewContainerRef, static: true }) bulkRemoveModalRef: ViewContainerRef;\n\n    userType = ProviderUserType;\n    userStatusType = ProviderUserStatusType;\n    providerId: string;\n    accessEvents = false;\n\n    constructor(apiService: ApiService, private route: ActivatedRoute,\n        i18nService: I18nService, modalService: ModalService,\n        platformUtilsService: PlatformUtilsService, toasterService: ToasterService,\n        cryptoService: CryptoService, private userService: UserService, private router: Router,\n        storageService: StorageService, searchService: SearchService, validationService: ValidationService,\n        logService: LogService, searchPipe: SearchPipe, userNamePipe: UserNamePipe) {\n        super(apiService, searchService, i18nService, platformUtilsService, toasterService, cryptoService,\n            storageService, validationService, modalService, logService, searchPipe, userNamePipe);\n    }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            const provider = await this.userService.getProvider(this.providerId);\n\n            if (!provider.canManageUsers) {\n                this.router.navigate(['../'], { relativeTo: this.route });\n                return;\n            }\n\n            this.accessEvents = provider.useEvents;\n\n            await this.load();\n\n            this.route.queryParams.pipe(first()).subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const user = this.users.filter(u => u.id === qParams.viewEvents);\n                    if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n                        this.events(user[0]);\n                    }\n                }\n            });\n        });\n    }\n\n    getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n        return this.apiService.getProviderUsers(this.providerId);\n    }\n\n    deleteUser(id: string): Promise<any> {\n        return this.apiService.deleteProviderUser(this.providerId, id);\n    }\n\n    reinviteUser(id: string): Promise<any> {\n        return this.apiService.postProviderUserReinvite(this.providerId, id);\n    }\n\n    async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n        const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n        const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n        const request = new ProviderUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n    }\n\n    async edit(user: ProviderUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(UserAddEditComponent, this.addEditModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.providerId = this.providerId;\n            comp.providerUserId = user != null ? user.id : null;\n            comp.onSavedUser.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n            comp.onDeletedUser.subscribe(() => {\n                modal.close();\n                this.removeUser(user);\n            });\n        });\n    }\n\n    async events(user: ProviderUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.providerId = this.providerId;\n            comp.entityId = user.id;\n            comp.showUser = false;\n            comp.entity = 'user';\n        });\n    }\n\n    async bulkRemove() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkRemoveComponent, this.bulkRemoveModalRef, comp => {\n            comp.providerId = this.providerId;\n            comp.users = this.getCheckedUsers();\n        });\n\n        await modal.onClosedPromise();\n        await this.load();\n    }\n\n    async bulkReinvite() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const users = this.getCheckedUsers();\n        const filteredUsers = users.filter(u => u.status === ProviderUserStatusType.Invited);\n\n        if (filteredUsers.length <= 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('noSelectedUsersApplicable'));\n            return;\n        }\n\n        try {\n            const request = new ProviderUserBulkRequest(filteredUsers.map(user => user.id));\n            const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n            this.showBulkStatus(users, filteredUsers, response, this.i18nService.t('bulkReinviteMessage'));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async bulkConfirm() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkConfirmComponent, this.bulkConfirmModalRef, comp => {\n            comp.providerId = this.providerId;\n            comp.users = this.getCheckedUsers();\n        });\n\n        await modal.onClosedPromise();\n        await this.load();\n    }\n\n    private async showBulkStatus(users: ProviderUserUserDetailsResponse[], filteredUsers: ProviderUserUserDetailsResponse[],\n        request: Promise<ListResponse<ProviderUserBulkResponse>>, successfullMessage: string) {\n\n        const [modal, childComponent] = await this.modalService.openViewRef(BulkStatusComponent, this.bulkStatusModalRef, comp => {\n            comp.loading = true;\n        });\n\n        // Workaround to handle closing the modal shortly after it has been opened\n        let close = false;\n        modal.onShown.subscribe(() => {\n            if (close) {\n                modal.close();\n            }\n        });\n\n        try {\n            const response = await request;\n\n            if (modal) {\n                const keyedErrors: any = response.data.filter(r => r.error !== '').reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n                const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n                childComponent.users = users.map(user => {\n                    let message = keyedErrors[user.id] ?? successfullMessage;\n                    if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n                        message = this.i18nService.t('bulkFilteredMessage');\n                    }\n\n                    return {\n                        user: user,\n                        error: keyedErrors.hasOwnProperty(user.id),\n                        message: message,\n                    };\n                });\n                childComponent.loading = false;\n            }\n        } catch {\n            close = true;\n            modal.close();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'people' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == null}\" (click)=\"filter(null)\"> {{'all' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{allCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Invited}\" (click)=\"filter(userStatusType.Invited)\"> {{'invited' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{invitedCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Accepted}\" (click)=\"filter(userStatusType.Accepted)\"> {{'accepted' | i18n}} <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{acceptedCount}}</span> </button> </div> <div class=\"ml-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <div class=\"dropdown ml-3\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'reinviteSelected' | i18n}} </button> <button class=\"dropdown-item text-success\" appStopClick (click)=\"bulkConfirm()\" *ngIf=\"showBulkConfirmUsers\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirmSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'inviteUser' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedUsers : users | search:searchText:'name':'email':'id') as searchedUsers\"> <p *ngIf=\"!searchedUsers.length\">{{'noUsersInList' | i18n}}</p> <ng-container *ngIf=\"searchedUsers.length\"> <app-callout type=\"info\" title=\"{{'confirmUsers' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"showConfirmUsers\"> {{'providerUsersNeedConfirmed' | i18n}} </app-callout> <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp> </td> <td width=\"30\"> <app-avatar [data]=\"u | userName\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(u)\">{{u.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td> <ng-container *ngIf=\"u.twoFactorEnabled\"> <i class=\"fa fa-lock\" title=\"{{'userUsingTwoStep' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userUsingTwoStep' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === userType.ProviderAdmin\">{{'providerAdmin' | i18n}}</span> <span *ngIf=\"u.type === userType.ServiceUser\">{{'serviceUser' | i18n}}</span> <span *ngIf=\"u.type === userType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(u)\" *ngIf=\"u.status === userStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(u)\" *ngIf=\"u.status === userStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"groups(u)\" *ngIf=\"accessGroups\"> <i class=\"fa fa-fw fa-sitemap\" aria-hidden=\"true\"></i> {{'groups' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"events(u)\" *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> <ng-template #addEdit></ng-template> <ng-template #eventsTemplate></ng-template> <ng-template #confirmTemplate></ng-template> <ng-template #bulkStatusTemplate></ng-template> <ng-template #bulkConfirmTemplate></ng-template> <ng-template #bulkRemoveTemplate></ng-template> ","import {\n    Directive,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\n\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\nimport { ProviderUserUserDetailsResponse } from 'jslib-common/models/response/provider/providerUserResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { UserConfirmComponent } from '../organizations/manage/user-confirm.component';\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse>  {\n\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n\n    get allCount() {\n        return this.allUsers != null ? this.allUsers.length : 0;\n    }\n\n    get invitedCount() {\n        return this.statusMap.has(this.userStatusType.Invited) ?\n            this.statusMap.get(this.userStatusType.Invited).length : 0;\n    }\n\n    get acceptedCount() {\n        return this.statusMap.has(this.userStatusType.Accepted) ?\n            this.statusMap.get(this.userStatusType.Accepted).length : 0;\n    }\n\n    get confirmedCount() {\n        return this.statusMap.has(this.userStatusType.Confirmed) ?\n            this.statusMap.get(this.userStatusType.Confirmed).length : 0;\n    }\n\n    get showConfirmUsers(): boolean {\n        return this.allUsers != null && this.statusMap != null && this.allUsers.length > 1 &&\n            this.confirmedCount > 0 && this.confirmedCount < 3 && this.acceptedCount > 0;\n    }\n\n    get showBulkConfirmUsers(): boolean {\n        return this.acceptedCount > 0;\n    }\n\n    abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n    abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n    loading = true;\n    statusMap = new Map<StatusType, UserType[]>();\n    status: StatusType;\n    users: UserType[] = [];\n    pagedUsers: UserType[] = [];\n    searchText: string;\n    actionPromise: Promise<any>;\n\n    protected allUsers: UserType[] = [];\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedUsersCount = 0;\n\n    constructor(protected apiService: ApiService, private searchService: SearchService,\n        protected i18nService: I18nService, private platformUtilsService: PlatformUtilsService,\n        protected toasterService: ToasterService, protected cryptoService: CryptoService,\n        private storageService: StorageService, protected validationService: ValidationService,\n        protected modalService: ModalService, private logService: LogService,\n        private searchPipe: SearchPipe, protected userNamePipe: UserNamePipe ) { }\n\n    abstract edit(user: UserType): void;\n    abstract getUsers(): Promise<ListResponse<UserType>>;\n    abstract deleteUser(id: string): Promise<any>;\n    abstract reinviteUser(id: string): Promise<any>;\n    abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<any>;\n\n    async load() {\n        const response = await this.getUsers();\n        this.statusMap.clear();\n        for (const status of Utils.iterateEnum(this.userStatusType)) {\n            this.statusMap.set(status, []);\n        }\n\n        this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n        this.allUsers.sort(Utils.getSortFunction(this.i18nService, 'email'));\n        this.allUsers.forEach(u => {\n            if (!this.statusMap.has(u.status)) {\n                this.statusMap.set(u.status, [u]);\n            } else {\n                this.statusMap.get(u.status).push(u);\n            }\n        });\n        this.filter(this.status);\n        this.loading = false;\n    }\n\n    filter(status: StatusType) {\n        this.status = status;\n        if (this.status != null) {\n            this.users = this.statusMap.get(this.status);\n        } else {\n            this.users = this.allUsers;\n        }\n        // Reset checkbox selecton\n        this.selectAll(false);\n        this.resetPaging();\n    }\n\n    loadMore() {\n        if (!this.users || this.users.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedUsers.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n            pagedSize = this.pagedUsersCount;\n        }\n        if (this.users.length > pagedLength) {\n            this.pagedUsers = this.pagedUsers.concat(this.users.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedUsersCount = this.pagedUsers.length;\n        this.didScroll = this.pagedUsers.length > this.pageSize;\n    }\n\n    checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n        (user as any).checked = select == null ? !(user as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n\n        const filteredUsers = this.searchPipe.transform(this.users, this.searchText, 'name', 'email', 'id');\n\n        const selectCount = select && filteredUsers.length > MaxCheckedCount\n            ? MaxCheckedCount\n            : filteredUsers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkUser(filteredUsers[i], select);\n        }\n    }\n\n    async resetPaging() {\n        this.pagedUsers = [];\n        this.loadMore();\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    async remove(user: UserType) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.deleteWarningMessage(user), this.userNamePipe.transform(user),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n\n        if (!confirmed) {\n            return false;\n        }\n\n        this.actionPromise = this.deleteUser(user.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.userNamePipe.transform(user)));\n            this.removeUser(user);\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async reinvite(user: UserType) {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        this.actionPromise = this.reinviteUser(user.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', this.userNamePipe.transform(user)));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async confirm(user: UserType) {\n        function updateUser(self: BasePeopleComponent<UserType>) {\n            user.status = self.userStatusType.Confirmed;\n            const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n            if (mapIndex > -1) {\n                self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n                self.statusMap.get(self.userStatusType.Confirmed).push(user);\n            }\n        }\n\n        const confirmUser = async (publicKey: Uint8Array) => {\n            try {\n                this.actionPromise = this.confirmUser(user, publicKey);\n                await this.actionPromise;\n                updateUser(this);\n                this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.userNamePipe.transform(user)));\n            } catch (e) {\n                this.validationService.showError(e);\n                throw e;\n            } finally {\n                this.actionPromise = null;\n            }\n        };\n\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n            const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n            const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\n            if (autoConfirm == null || !autoConfirm) {\n                const [modal] = await this.modalService.openViewRef(UserConfirmComponent, this.confirmModalRef, comp => {\n                    comp.name = this.userNamePipe.transform(user);\n                    comp.userId = user != null ? user.userId : null;\n                    comp.publicKey = publicKey;\n                    comp.onConfirmedUser.subscribe(async () => {\n                        try {\n                            comp.formPromise = confirmUser(publicKey);\n                            await comp.formPromise;\n                            modal.close();\n                        } catch (e) {\n                            this.logService.error(e);\n                        }\n                    });\n                });\n                return;\n            }\n\n            try {\n                const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n                this.logService.info(`User's fingerprint: ${fingerprint.join('-')}`);\n            } catch (e) {\n                this.logService.error(e);\n            }\n            await confirmUser(publicKey);\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.users && this.users.length > this.pageSize;\n    }\n\n    protected deleteWarningMessage(user: UserType): string {\n        return this.i18nService.t('removeUserConfirmation');\n    }\n\n    protected getCheckedUsers() {\n        return this.users.filter(u => (u as any).checked);\n    }\n\n    protected removeUser(user: UserType) {\n        let index = this.users.indexOf(user);\n        if (index > -1) {\n            this.users.splice(index, 1);\n            this.resetPaging();\n        }\n        if (this.statusMap.has(user.status)) {\n            index = this.statusMap.get(user.status).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(user.status).splice(index, 1);\n            }\n        }\n    }\n\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\n@Component({\n    selector: 'app-user-confirm',\n    templateUrl: 'user-confirm.component.html',\n})\nexport class UserConfirmComponent implements OnInit {\n    @Input() name: string;\n    @Input() userId: string;\n    @Input() publicKey: Uint8Array;\n    @Output() onConfirmedUser = new EventEmitter();\n\n    dontAskAgain = false;\n    loading = true;\n    fingerprint: string;\n    formPromise: Promise<any>;\n\n    constructor(private cryptoService: CryptoService, private storageService: StorageService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        try {\n            if (this.publicKey != null) {\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, this.publicKey.buffer);\n                if (fingerprint != null) {\n                    this.fingerprint = fingerprint.join('-');\n                }\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n        this.loading = false;\n    }\n\n    async submit() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.dontAskAgain) {\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\n        }\n\n        this.onConfirmedUser.emit();\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"confirmUserTitle\"> {{'confirmUser' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <p><code>{{fingerprint}}</code></p> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\" [(ngModel)]=\"dontAskAgain\"> <label class=\"form-check-label\" for=\"dontAskAgain\"> {{'dontAskFingerprintAgain' | i18n}} </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport { ProviderUserBulkConfirmRequest } from 'jslib-common/models/request/provider/providerUserBulkConfirmRequest';\nimport { ProviderUserBulkRequest } from 'jslib-common/models/request/provider/providerUserBulkRequest';\n\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\n\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from 'src/app/organizations/manage/bulk/bulk-confirm.component';\nimport { BulkUserDetails } from 'src/app/organizations/manage/bulk/bulk-status.component';\n\n@Component({\n    templateUrl: '/src/app/organizations/manage/bulk/bulk-confirm.component.html',\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n\n    @Input() providerId: string;\n\n    protected isAccepted(user: BulkUserDetails) {\n        return user.status === ProviderUserStatusType.Accepted;\n    }\n\n    protected async getPublicKeys() {\n        const request = new ProviderUserBulkRequest(this.filteredUsers.map(user => user.id));\n        return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n    }\n\n    protected getCryptoKey() {\n        return this.cryptoService.getProviderKey(this.providerId);\n    }\n\n    protected async postConfirmRequest(userIdsWithKeys: any[]) {\n        const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n        return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n    }\n}\n","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport { ProviderUserBulkRequest } from 'jslib-common/models/request/provider/providerUserBulkRequest';\n\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from 'src/app/organizations/manage/bulk/bulk-remove.component';\n\n@Component({\n    templateUrl: '/src/app/organizations/manage/bulk/bulk-remove.component.html',\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n\n    @Input() providerId: string;\n\n    async deleteUsers() {\n        const request = new ProviderUserBulkRequest(this.users.map(user => user.id));\n        return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ProviderUserInviteRequest } from 'jslib-common/models/request/provider/providerUserInviteRequest';\n\nimport { PermissionsApi } from 'jslib-common/models/api/permissionsApi';\n\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\nimport { ProviderUserUpdateRequest } from 'jslib-common/models/request/provider/providerUserUpdateRequest';\n\n@Component({\n    selector: 'provider-user-add-edit',\n    templateUrl: 'user-add-edit.component.html',\n})\nexport class UserAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() providerUserId: string;\n    @Input() providerId: string;\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    emails: string;\n    type: ProviderUserType = ProviderUserType.ServiceUser;\n    permissions = new PermissionsApi();\n    showCustom = false;\n    access: 'all' | 'selected' = 'selected';\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    userType = ProviderUserType;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.providerUserId != null;\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editUser');\n            try {\n                const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n                this.type = user.type;\n            } catch (e) {\n                this.logService.error(e);\n            }\n        } else {\n            this.title = this.i18nService.t('inviteUser');\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            if (this.editMode) {\n                const request = new ProviderUserUpdateRequest();\n                request.type = this.type;\n                this.formPromise = this.apiService.putProviderUser(this.providerId, this.providerUserId, request);\n            } else {\n                const request = new ProviderUserInviteRequest();\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\n                request.type = this.type;\n                this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSavedUser.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\n            this.onDeletedUser.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'providerInviteUserDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"emails\">{{'email' | i18n}}</label> <input id=\"emails\" class=\"form-control\" type=\"text\" name=\"Emails\" [(ngModel)]=\"emails\" required appAutoFocus> <small class=\"text-muted\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small> </div> </ng-container> <h3> {{'userType' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#user-types\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeServiceUser\" [value]=\"userType.ServiceUser\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeServiceUser\"> {{'serviceUser' | i18n}} <small>{{'serviceUserDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeProviderAdmin\" [value]=\"userType.ProviderAdmin\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeProviderAdmin\"> {{'providerAdmin' | i18n}} <small>{{'providerAdminDesc' | i18n}}</small> </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'provider-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent {\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            const provider = await this.userService.getProvider(params.providerId);\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myProvider' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { BaseAcceptComponent } from 'src/app/common/base.accept.component';\n\n@Component({\n    selector: 'app-setup-provider',\n    templateUrl: 'setup-provider.component.html',\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n\n    failedShortMessage = 'inviteAcceptFailedShort';\n    failedMessage = 'inviteAcceptFailed';\n\n    requiredParameters = ['providerId', 'email', 'token'];\n\n    async authedHandler(qParams: any) {\n        this.router.navigate(['/providers/setup'], {queryParams: qParams});\n    }\n\n    // tslint:disable-next-line\n    async unauthedHandler(qParams: any) {}\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'setupProvider' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p>{{'setupProviderLoginDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { first } from 'rxjs/operators';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { ProviderSetupRequest } from 'jslib-common/models/request/provider/providerSetupRequest';\n\n@Component({\n    selector: 'provider-setup',\n    templateUrl: 'setup.component.html',\n})\nexport class SetupComponent implements OnInit {\n    loading = true;\n    authed = false;\n    email: string;\n    formPromise: Promise<any>;\n\n    providerId: string;\n    token: string;\n    name: string;\n    billingEmail: string;\n\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private cryptoService: CryptoService, private apiService: ApiService,\n        private syncService: SyncService, private validationService: ValidationService) { }\n\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        this.route.queryParams.pipe(first()).subscribe(async qParams => {\n            const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n            if (error) {\n                const toast: Toast = {\n                    type: 'error',\n                    title: null,\n                    body: this.i18nService.t('emergencyInviteAcceptFailed'),\n                    timeout: 10000,\n                };\n                this.toasterService.popAsync(toast);\n                this.router.navigate(['/']);\n                return;\n            }\n\n            this.providerId = qParams.providerId;\n            this.token = qParams.token;\n\n            // Check if provider exists, redirect if it does\n            try {\n                const provider = await this.apiService.getProvider(this.providerId);\n                if (provider.name != null) {\n                    this.router.navigate(['/providers', provider.id], { replaceUrl: true });\n                }\n            } catch (e) {\n                this.validationService.showError(e);\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n    async submit() {\n        this.formPromise = this.doSubmit();\n        await this.formPromise;\n        this.formPromise = null;\n    }\n\n    async doSubmit() {\n        try {\n            const shareKey = await this.cryptoService.makeShareKey();\n            const key = shareKey[0].encryptedString;\n\n            const request = new ProviderSetupRequest();\n            request.name = this.name;\n            request.billingEmail = this.billingEmail;\n            request.token = this.token;\n            request.key = key;\n\n            const provider = await this.apiService.postProviderSetup(this.providerId, request);\n            this.toasterService.popAsync('success', null, this.i18nService.t('providerSetup'));\n            await this.syncService.fullSync(true);\n\n            this.router.navigate(['/providers', provider.id]);\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n    }\n}\n","<app-navbar></app-navbar> <div class=\"container page-content\"> <div class=\"page-header\"> <h1>{{'setupProvider' | i18n}}</h1> </div> <p>{{'setupProviderDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\"> <h2 class=\"mt-5\">{{'generalInformation' | i18n}}</h2> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'providerName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group col-6\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"billingEmail\" required> </div> </div> <div class=\"mt-4\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\"> {{'cancel' | i18n}} </button> </div> </form> </div> <app-footer></app-footer> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { ProviderUpdateRequest } from 'jslib-common/models/request/provider/providerUpdateRequest';\n\nimport { ProviderResponse } from 'jslib-common/models/response/provider/providerResponse';\n\n@Component({\n    selector: 'provider-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    selfHosted = false;\n    loading = true;\n    provider: ProviderResponse;\n    formPromise: Promise<any>;\n    taxFormPromise: Promise<any>;\n\n    private providerId: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private route: ActivatedRoute,\n        private syncService: SyncService, private platformUtilsService: PlatformUtilsService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n        this.route.parent.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            try {\n                this.provider = await this.apiService.getProvider(this.providerId);\n            } catch (e) {\n                this.logService.error(`Handled exception: ${e}`);\n            }\n        });\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new ProviderUpdateRequest();\n            request.name = this.provider.name;\n            request.businessName = this.provider.businessName;\n            request.billingEmail = this.provider.billingEmail;\n\n            this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('providerUpdated'));\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myProvider' | i18n}}</h1> </div> <div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"provider && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'providerName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"provider.name\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"provider.billingEmail\" [disabled]=\"selfHosted\"> </div> </div> <div class=\"col-6\"> <app-avatar data=\"{{provider.name}}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-nested-checkbox',\n    templateUrl: 'nested-checkbox.component.html',\n})\nexport class NestedCheckboxComponent {\n    @Input() parentId: string;\n    @Input() checkboxes: { id: string, get: () => boolean, set: (v: boolean) => void; }[];\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    get parentIndeterminate() {\n        return !this.parentChecked &&\n            this.checkboxes.some(c => c.get());\n    }\n\n    get parentChecked() {\n        return this.checkboxes.every(c => c.get());\n    }\n\n    set parentChecked(value: boolean) {\n        this.checkboxes.forEach(c => {\n            c.set(value);\n        });\n    }\n\n    pascalize(s: string) {\n        return Utils.camelToPascalCase(s);\n    }\n}\n","<div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" [name]=\"pascalize(parentId)\" [id]=\"parentId\" [(ngModel)]=\"parentChecked\" [indeterminate]=\"parentIndeterminate\"> <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\"> {{parentId | i18n}} </label> </div> <div class=\"form-group form-group-child-check mb-0\"> <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\"> <input class=\"form-check-input\" type=\"checkbox\" [name]=\"pascalize(c.id)\" [id]=\"c.id\" [ngModel]=\"c.get()\" (ngModelChange)=\"c.set($event)\"> <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\"> {{c.id | i18n}} </label> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from 'jslib-angular/components/password-reprompt.component';\n\n@Component({\n    templateUrl: 'password-reprompt.component.html',\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"confirmUserTitle\"> {{'passwordConfirmation' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> {{'passwordConfirmationDesc' | i18n}} <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick> <span>{{'ok' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> </div> </form> </div> </div> ","import { Directive } from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { ModalRef } from './modal/modal.ref';\n\n@Directive()\nexport class PasswordRepromptComponent {\n\n    showPassword = false;\n    masterPassword = '';\n\n    constructor(private modalRef: ModalRef, private cryptoService: CryptoService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService) {}\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n    }\n\n    async submit() {\n        if (!await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n            return;\n        }\n\n        this.modalRef.close(true);\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBlurClick]',\n})\nexport class BlurClickDirective {\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('click') onClick() {\n        this.el.nativeElement.blur();\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-user-layout',\n    templateUrl: 'user-layout.component.html',\n})\nexport class UserLayoutComponent implements OnInit {\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","<app-navbar></app-navbar> <router-outlet></router-outlet> <app-footer></app-footer> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { EmergencyAccessAcceptRequest } from 'jslib-common/models/request/emergencyAccessAcceptRequest';\nimport { BaseAcceptComponent } from '../common/base.accept.component';\n\n@Component({\n    selector: 'app-accept-emergency',\n    templateUrl: 'accept-emergency.component.html',\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n\n    name: string;\n\n    protected requiredParameters: string[] = ['id', 'name', 'email', 'token'];\n    protected failedShortMessage = 'emergencyInviteAcceptFailedShort';\n    protected failedMessage = 'emergencyInviteAcceptFailed';\n\n    constructor(router: Router, toasterService: ToasterService,\n        i18nService: I18nService, route: ActivatedRoute,\n        private apiService: ApiService, userService: UserService,\n        stateService: StateService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any): Promise<void> {\n        const request = new EmergencyAccessAcceptRequest();\n        request.token = qParams.token;\n        this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n        await this.actionPromise;\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('emergencyInviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any): Promise<void> {\n        this.name = qParams.name;\n        if (this.name != null) {\n            // Fix URL encoding of space issue with Angular\n            this.name = this.name.replace(/\\+/g, ' ');\n        }\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'emergencyAccess' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{name}} </p> <p>{{'acceptEmergencyAccess' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { OrganizationUserAcceptRequest } from 'jslib-common/models/request/organizationUserAcceptRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\nimport { Policy } from 'jslib-common/models/domain/policy';\nimport { BaseAcceptComponent } from '../common/base.accept.component';\n\n@Component({\n    selector: 'app-accept-organization',\n    templateUrl: 'accept-organization.component.html',\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n    orgName: string;\n\n    protected requiredParameters: string[] = ['organizationId', 'organizationUserId', 'token'];\n\n    constructor(router: Router, toasterService: ToasterService,\n        i18nService: I18nService, route: ActivatedRoute,\n        private apiService: ApiService, userService: UserService,\n        stateService: StateService, private cryptoService: CryptoService,\n        private policyService: PolicyService, private logService: LogService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any): Promise<void> {\n        const request = new OrganizationUserAcceptRequest();\n        request.token = qParams.token;\n        if (await this.performResetPasswordAutoEnroll(qParams)) {\n            this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                qParams.organizationUserId, request).then(() => {\n                    // Retrieve Public Key\n                    return this.apiService.getOrganizationKeys(qParams.organizationId);\n                }).then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                    }\n\n                    const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n                    // RSA Encrypt user's encKey.key with organization public key\n                    const encKey = await this.cryptoService.getEncKey();\n                    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n                    // Create request and execute enrollment\n                    const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n                    resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n                    // Get User Id\n                    const userId = await this.userService.getUserId();\n\n                    return this.apiService.putOrganizationUserResetPasswordEnrollment(qParams.organizationId, userId, resetRequest);\n                });\n        } else {\n            this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                qParams.organizationUserId, request);\n        }\n\n        await this.actionPromise;\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('inviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n\n        await this.stateService.remove('orgInvitation');\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any): Promise<void> {\n        this.orgName = qParams.organizationName;\n        if (this.orgName != null) {\n            // Fix URL encoding of space issue with Angular\n            this.orgName = this.orgName.replace(/\\+/g, ' ');\n        }\n        await this.stateService.save('orgInvitation', qParams);\n    }\n\n    private async performResetPasswordAutoEnroll(qParams: any): Promise<boolean> {\n        let policyList: Policy[] = null;\n        try {\n            const policies = await this.apiService.getPoliciesByToken(qParams.organizationId, qParams.token,\n                qParams.email, qParams.organizationUserId);\n            policyList = this.policyService.mapPoliciesFromToken(policies);\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        if (policyList != null) {\n            const result = this.policyService.getResetPasswordPolicyOptions(policyList, qParams.organizationId);\n            // Return true if policy enabled and auto-enroll enabled\n            return result[1] && result[0].autoEnrollEnabled;\n        }\n\n        return false;\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'joinOrganization' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{orgName}} <strong class=\"d-block mt-2\">{{email}}</strong> </p> <p>{{'joinOrganizationDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { HintComponent as BaseHintComponent } from 'jslib-angular/components/hint.component';\n\n@Component({\n    selector: 'app-hint',\n    templateUrl: 'hint.component.html',\n})\nexport class HintComponent extends BaseHintComponent {\n    constructor(router: Router, i18nService: I18nService,\n        apiService: ApiService, platformUtilsService: PlatformUtilsService,\n        logService: LogService) {\n        super(router, i18nService, apiService, platformUtilsService, logService);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'passwordHint' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> <small class=\"form-text text-muted\">{{'enterEmailToGetHint' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span [hidden]=\"form.loading\">{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { KeyConnectorService } from 'jslib-common/abstractions/keyConnector.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { RouterService } from '../services/router.service';\n\nimport { LockComponent as BaseLockComponent } from 'jslib-angular/components/lock.component';\n\n@Component({\n    selector: 'app-lock',\n    templateUrl: 'lock.component.html',\n})\nexport class LockComponent extends BaseLockComponent {\n    constructor(router: Router, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, messagingService: MessagingService,\n        userService: UserService, cryptoService: CryptoService,\n        storageService: StorageService, vaultTimeoutService: VaultTimeoutService,\n        environmentService: EnvironmentService, private routerService: RouterService,\n        stateService: StateService, apiService: ApiService, logService: LogService,\n        keyConnectorService: KeyConnectorService) {\n        super(router, i18nService, platformUtilsService, messagingService, userService, cryptoService,\n            storageService, vaultTimeoutService, environmentService, stateService, apiService, logService,\n            keyConnectorService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        this.onSuccessfulSubmit = () => {\n            const previousUrl = this.routerService.getPreviousUrl();\n            if (previousUrl !== '/' && previousUrl.indexOf('lock') === -1) {\n                this.successRoute = previousUrl;\n            }\n            this.router.navigate([this.successRoute]);\n        };\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"text-center mb-4\"> <i class=\"fa fa-lock fa-4x text-muted\" aria-hidden=\"true\"></i> </p> <p class=\"lead text-center mx-4 mb-4\">{{'yourVaultIsLocked' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> <small class=\"text-muted form-text\"> {{'loggedInAsEmailOn' | i18n : email : webVaultHostname}} </small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-unlock-alt\" aria-hidden=\"true\"></i> {{'unlock' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { LoginComponent as BaseLoginComponent } from 'jslib-angular/components/login.component';\n\nimport { Policy } from 'jslib-common/models/domain/policy';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.component.html',\n})\nexport class LoginComponent extends BaseLoginComponent {\n\n    showResetPasswordAutoEnrollWarning = false;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, private route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService, environmentService: EnvironmentService,\n        passwordGenerationService: PasswordGenerationService, cryptoFunctionService: CryptoFunctionService,\n        private apiService: ApiService, private policyService: PolicyService, logService: LogService) {\n        super(authService, router,\n            platformUtilsService, i18nService,\n            stateService, environmentService,\n            passwordGenerationService, cryptoFunctionService,\n            storageService, logService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    async ngOnInit() {\n        this.route.queryParams.pipe(first()).subscribe(async qParams => {\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n\n            // Are they coming from an email for sponsoring a families organization\n            if (qParams.sponsorshipToken != null) {\n                // After logging in redirect them to setup the families sponsorship\n                this.stateService.save('loginRedirect', {\n                    route: '/setup/families-for-enterprise',\n                    qParams: { token: qParams.sponsorshipToken },\n                });\n            }\n            await super.ngOnInit();\n        });\n\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            let policyList: Policy[] = null;\n            try {\n                const policies = await this.apiService.getPoliciesByToken(invite.organizationId, invite.token,\n                    invite.email, invite.organizationUserId);\n                policyList = this.policyService.mapPoliciesFromToken(policies);\n            } catch (e) {\n                this.logService.error(e);\n            }\n\n            if (policyList != null) {\n                const result = this.policyService.getResetPasswordPolicyOptions(policyList, invite.organizationId);\n                // Set to true if policy enabled and auto-enroll enabled\n                this.showResetPasswordAutoEnrollWarning = result[1] && result[0].autoEnrollEnabled;\n            }\n        }\n    }\n\n    async goAfterLogIn() {\n        const loginRedirect = await this.stateService.get<any>('loginRedirect');\n        if (loginRedirect != null) {\n            this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n            await this.stateService.remove('loginRedirect');\n        } else {\n            this.router.navigate([this.successRoute]);\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <img class=\"mb-2 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"lead text-center mx-4 mb-4\">{{'loginOrCreateNewAccount' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout type=\"warning\" title=\"{{'resetPasswordPolicyAutoEnroll' | i18n}}\" *ngIf=\"showResetPasswordAutoEnrollWarning\"> {{'resetPasswordAutoEnrollInviteWarning' | i18n}} </app-callout> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> <small class=\"form-text\"> <a routerLink=\"/hint\">{{'getMasterPasswordHint' | i18n}}</a> </small> </div> <div class=\"form-check mb-3\"> <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberEmail\" name=\"RememberEmail\" [(ngModel)]=\"rememberEmail\"> <label class=\"form-check-label\" for=\"rememberEmail\">{{'rememberEmail' | i18n}}</label> </div> <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'createAccount' | i18n}} </a> </div> <div class=\"d-flex\"> <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\"> <i class=\"fa fa-bank\" aria-hidden=\"true\"></i> {{'enterpriseSingleSignOn' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Directive, Input } from '@angular/core';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CaptchaIFrame } from 'jslib-common/misc/captcha_iframe';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n    @Input() captchaSiteKey: string = null;\n    captchaToken: string = null;\n    captcha: CaptchaIFrame;\n\n    constructor(protected environmentService: EnvironmentService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    async setupCaptcha() {\n        const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n        this.captcha = new CaptchaIFrame(window, webVaultUrl,\n            this.i18nService, (token: string) => {\n                this.captchaToken = token;\n            }, (error: string) => {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);\n            }, (info: string) => {\n                this.platformUtilsService.showToast('info', this.i18nService.t('info'), info);\n            }\n        );\n    }\n\n    showCaptcha() {\n        return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n\n    protected handleCaptchaRequired(response: { captchaSiteKey: string; }): boolean {\n        if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n            return false;\n        }\n\n        this.captchaSiteKey = response.captchaSiteKey;\n        this.captcha.init(response.captchaSiteKey);\n        return true;\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { DeleteRecoverRequest } from 'jslib-common/models/request/deleteRecoverRequest';\n\n@Component({\n    selector: 'app-recover-delete',\n    templateUrl: 'recover-delete.component.html',\n})\nexport class RecoverDeleteComponent {\n    email: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private logService: LogService) {\n    }\n\n    async submit() {\n        try {\n            const request = new DeleteRecoverRequest();\n            request.email = this.email.trim().toLowerCase();\n            this.formPromise = this.apiService.postAccountRecoverDelete(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deleteRecoverEmailSent'));\n            this.router.navigate(['/']);\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <p>{{'deleteRecoverDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { TwoFactorRecoveryRequest } from 'jslib-common/models/request/twoFactorRecoveryRequest';\n\n@Component({\n    selector: 'app-recover-two-factor',\n    templateUrl: 'recover-two-factor.component.html',\n})\nexport class RecoverTwoFactorComponent {\n    email: string;\n    masterPassword: string;\n    recoveryCode: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private cryptoService: CryptoService, private authService: AuthService,\n        private logService: LogService) { }\n\n    async submit() {\n        try {\n            const request = new TwoFactorRecoveryRequest();\n            request.recoveryCode = this.recoveryCode.replace(/\\s/g, '').toLowerCase();\n            request.email = this.email.trim().toLowerCase();\n            const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n            this.formPromise = this.apiService.postTwoFactorRecover(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepRecoverDisabled'));\n            this.router.navigate(['/']);\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'recoverAccountTwoStep' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <p>{{'recoverAccountTwoStepDesc' | i18n}} <a href=\"https://help.bitwarden.com/article/lost-two-step-device/\" target=\"_blank\" rel=\"noopener\">{{'learnMore' | i18n}}</a> </p> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"recoveryCode\">{{'recoveryCodeTitle' | i18n}}</label> <input id=\"recoveryCode\" class=\"text-monospace form-control\" type=\"text\" name=\"RecoveryCode\" [(ngModel)]=\"recoveryCode\" required appInputVerbatim> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { RegisterComponent as BaseRegisterComponent } from 'jslib-angular/components/register.component';\n\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { Policy } from 'jslib-common/models/domain/policy';\n\nimport { PolicyData } from 'jslib-common/models/data/policyData';\nimport { ReferenceEventRequest } from 'jslib-common/models/request/referenceEventRequest';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: 'register.component.html',\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n    showCreateOrgMessage = false;\n    layout = '';\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n    private policies: Policy[];\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, cryptoService: CryptoService,\n        apiService: ApiService, private route: ActivatedRoute,\n        stateService: StateService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, private policyService: PolicyService,\n        environmentService: EnvironmentService, logService: LogService) {\n        super(authService, router, i18nService, cryptoService, apiService, stateService, platformUtilsService,\n            passwordGenerationService, environmentService, logService);\n    }\n\n    async ngOnInit() {\n        this.route.queryParams.pipe(first()).subscribe(qParams => {\n            this.referenceData = new ReferenceEventRequest();\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.showCreateOrgMessage = true;\n                this.referenceData.flow = qParams.org;\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            if (qParams.layout != null) {\n                this.layout = this.referenceData.layout = qParams.layout;\n            }\n            if (qParams.reference != null) {\n                this.referenceData.id = qParams.reference;\n            } else {\n                this.referenceData.id = ('; ' + document.cookie).split('; reference=').pop().split(';').shift();\n            }\n            // Are they coming from an email for sponsoring a families organization\n            if (qParams.sponsorshipToken != null) {\n                // After logging in redirect them to setup the families sponsorship\n                this.stateService.save('loginRedirect', {\n                    route: '/setup/families-for-enterprise',\n                    qParams: { token: qParams.sponsorshipToken },\n                });\n            }\n            if (this.referenceData.id === '') {\n                this.referenceData.id = null;\n            }\n        });\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            try {\n                const policies = await this.apiService.getPoliciesByToken(invite.organizationId, invite.token,\n                    invite.email, invite.organizationUserId);\n                if (policies.data != null) {\n                    const policiesData = policies.data.map(p => new PolicyData(p));\n                    this.policies = policiesData.map(p => new Policy(p));\n                }\n            } catch (e) {\n                this.logService.error(e);\n            }\n        }\n\n        if (this.policies != null) {\n            this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(this.policies);\n        }\n\n        await super.ngOnInit();\n    }\n\n    async submit() {\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(this.masterPasswordScore, this.masterPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return;\n        }\n\n        await super.submit();\n    }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\"> <header class=\"header\" *ngIf=\"layout === 'enterprise2'\"> <div class=\"container\"> <div class=\"row\"> <div class=\"col-7\"> <img alt=\"Bitwarden\" class=\"logo mb-2\" src=\"images/logo-horizontal-white.png\"> </div> </div> </div> </header> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row\"> <div class=\"col-7\" *ngIf=\"layout\"> <div class=\"mt-5\"> <div *ngIf=\"layout === 'enterprise2'\"> <h2>Companies globally trust Bitwarden for password management.</h2> <p>Start your 7-day free trial!</p> <p class=\"highlight\">Quickly deploy your <b>organization</b></p> <p>Use Bitwarden across all platforms</p> <p>Collaborate and share securely</p> <figure> <figcaption> <cite> <img src=\"images/wired-logo.png\" alt=\"Wired\"> </cite> </figcaption> <blockquote> \"Bitwarden has become a popular choice among open-source software advocates. After using it for a few months, I can see why.\" - February 2020 </blockquote> </figure> </div> <div *ngIf=\"layout === 'enterprise3'\"> <p>Enterprise 3 layout</p> </div> <div *ngIf=\"layout === 'enterprise4'\"> <p>Enterprise 4 layout</p> </div> </div> </div> <div [ngClass]=\"{'col-5': layout, 'col-12': !layout}\"> <div class=\"row justify-content-md-center mt-5\"> <div [ngClass]=\"{'col-5': !layout, 'col-12': layout}\"> <p class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{'createAccount' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout title=\"{{'createOrganizationStep1' | i18n}}\" type=\"info\" icon=\"fa-thumb-tack\" *ngIf=\"showCreateOrgMessage\"> {{'createOrganizationCreatePersonalAccount' | i18n}} </app-callout> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required [appAutofocus]=\"email === ''\" inputmode=\"email\" appInputVerbatim=\"false\"> <small class=\"form-text text-muted\">{{'emailAddressDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"name\">{{'yourName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" [appAutofocus]=\"email !== ''\"> <small class=\"form-text text-muted\">{{'yourNameDesc' | i18n}}</small> </div> <div class=\"form-group\"> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"confirmMasterPassword\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div> <div class=\"form-group\" *ngIf=\"showTerms\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"acceptPolicies\" [(ngModel)]=\"acceptPolicies\" name=\"AcceptPolicies\"> <label class=\"form-check-label small text-muted\" for=\"acceptPolicies\"> {{'acceptPolicies' | i18n}}<br> <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{'termsOfService' | i18n}}</a>, <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{'privacyPolicy' | i18n}}</a> </label> </div> </div> <hr> <div class=\"d-flex mb-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </div> </div> </form> </div> ","import { Component } from '@angular/core';\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from 'jslib-angular/components/remove-password.component';\n\n@Component({\n    selector: 'app-remove-password',\n    templateUrl: 'remove-password.component.html',\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'removeMasterPassword' | i18n}}</p> <hr> <div class=\"card d-block\"> <div class=\"card-body\"> <p>{{'convertOrganizationEncryptionDesc' | i18n : organization.name}}</p> <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"convert()\" [disabled]=\"actionPromise\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\" *ngIf=\"continuing\"></i> {{'removeMasterPassword' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block\" (click)=\"leave()\" [disabled]=\"actionPromise\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\" *ngIf=\"leaving\"></i> {{'leaveOrganization' | i18n}} </button> </div> </div> </div> </div> </div> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    SetPasswordComponent as BaseSetPasswordComponent,\n} from 'jslib-angular/components/set-password.component';\n\n@Component({\n    selector: 'app-set-password',\n    templateUrl: 'set-password.component.html',\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n    constructor(apiService: ApiService, i18nService: I18nService,\n        cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, router: Router,\n        syncService: SyncService, route: ActivatedRoute) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService, router, apiService, syncService, route);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'setMasterPassword' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body text-center\" *ngIf=\"syncLoading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!syncLoading\"> <app-callout type=\"info\">{{'ssoCompleteRegistration' | i18n}}</app-callout> <app-callout type=\"warning\" title=\"{{'resetPasswordPolicyAutoEnroll' | i18n}}\" *ngIf=\"resetPasswordAutoEnroll\"> {{'resetPasswordAutoEnrollInviteWarning' | i18n}} </app-callout> <div class=\"form-group\"> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordHash\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { SsoComponent as BaseSsoComponent } from 'jslib-angular/components/sso.component';\n\nconst IdentifierStorageKey = 'ssoOrgIdentifier';\n\n@Component({\n    selector: 'app-sso',\n    templateUrl: 'sso.component.html',\n})\nexport class SsoComponent extends BaseSsoComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService,\n        cryptoFunctionService: CryptoFunctionService, environmentService: EnvironmentService,\n        passwordGenerationService: PasswordGenerationService, logService: LogService) {\n        super(authService, router, i18nService, route, storageService, stateService, platformUtilsService,\n            apiService, cryptoFunctionService, environmentService, passwordGenerationService, logService);\n        this.redirectUri = window.location.origin + '/sso-connector.html';\n        this.clientId = 'web';\n    }\n\n    async ngOnInit() {\n        super.ngOnInit();\n        this.route.queryParams.pipe(first()).subscribe(async qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            } else {\n                const storedIdentifier = await this.storageService.get<string>(IdentifierStorageKey);\n                if (storedIdentifier != null) {\n                    this.identifier = storedIdentifier;\n                }\n            }\n        });\n    }\n\n    async submit() {\n        await this.storageService.save(IdentifierStorageKey, this.identifier);\n        if (this.clientId === 'browser') {\n            document.cookie = `ssoHandOffMessage=${this.i18nService.t('ssoHandOff')};SameSite=strict`;\n        }\n        super.submit();\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" class=\"container\" [appApiAction]=\"initiateSsoFormPromise\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\"> <div class=\"card d-block mt-4\"> <div class=\"card-body\" *ngIf=\"loggingIn\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loggingIn\"> <p>{{'ssoLogInWithOrgIdentifier' | i18n}}</p> <div class=\"form-group\"> <label for=\"identifier\">{{'organizationIdentifier' | i18n}}</label> <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\" [(ngModel)]=\"identifier\" required appAutofocus> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Directive } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { AuthResult } from 'jslib-common/models/domain/authResult';\n\n@Directive()\nexport class SsoComponent {\n    identifier: string;\n    loggingIn = false;\n\n    formPromise: Promise<AuthResult>;\n    initiateSsoFormPromise: Promise<any>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n    onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n    onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'lock';\n    protected changePasswordRoute = 'set-password';\n    protected forcePasswordResetRoute = 'update-temp-password';\n    protected clientId: string;\n    protected redirectUri: string;\n    protected state: string;\n    protected codeChallenge: string;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected route: ActivatedRoute,\n        protected storageService: StorageService, protected stateService: StateService,\n        protected platformUtilsService: PlatformUtilsService, protected apiService: ApiService,\n        protected cryptoFunctionService: CryptoFunctionService, protected environmentService: EnvironmentService,\n        protected passwordGenerationService: PasswordGenerationService, protected logService: LogService) { }\n\n    async ngOnInit() {\n        this.route.queryParams.pipe(first()).subscribe(async qParams => {\n            if (qParams.code != null && qParams.state != null) {\n                const codeVerifier = await this.storageService.get<string>(ConstantsService.ssoCodeVerifierKey);\n                const state = await this.storageService.get<string>(ConstantsService.ssoStateKey);\n                await this.storageService.remove(ConstantsService.ssoCodeVerifierKey);\n                await this.storageService.remove(ConstantsService.ssoStateKey);\n                if (qParams.code != null && codeVerifier != null && state != null && this.checkState(state, qParams.state)) {\n                    await this.logIn(qParams.code, codeVerifier, this.getOrgIdentifierFromState(qParams.state));\n                }\n            } else if (qParams.clientId != null && qParams.redirectUri != null && qParams.state != null &&\n                qParams.codeChallenge != null) {\n                this.redirectUri = qParams.redirectUri;\n                this.state = qParams.state;\n                this.codeChallenge = qParams.codeChallenge;\n                this.clientId = qParams.clientId;\n            }\n        });\n    }\n\n    async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n        this.initiateSsoFormPromise = this.preValidate();\n        if (await this.initiateSsoFormPromise) {\n            const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n            this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n        }\n    }\n\n    async preValidate(): Promise<boolean> {\n        if (this.identifier == null || this.identifier === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('ssoValidationFailed'),\n                this.i18nService.t('ssoIdentifierRequired'));\n            return false;\n        }\n        return await this.apiService.preValidateSso(this.identifier);\n    }\n\n    protected async buildAuthorizeUrl(returnUri?: string, includeUserIdentifier?: boolean): Promise<string> {\n        let codeChallenge = this.codeChallenge;\n        let state = this.state;\n\n        const passwordOptions: any = {\n            type: 'password',\n            length: 64,\n            uppercase: true,\n            lowercase: true,\n            numbers: true,\n            special: false,\n        };\n\n        if (codeChallenge == null) {\n            const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n            const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, 'sha256');\n            codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n            await this.storageService.save(ConstantsService.ssoCodeVerifierKey, codeVerifier);\n        }\n\n        if (state == null) {\n            state = await this.passwordGenerationService.generatePassword(passwordOptions);\n            if (returnUri) {\n                state += `_returnUri='${returnUri}'`;\n            }\n        }\n\n        // Add Organization Identifier to state\n        state += `_identifier=${this.identifier}`;\n\n        // Save state (regardless of new or existing)\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\n\n        let authorizeUrl = this.environmentService.getIdentityUrl() + '/connect/authorize?' +\n            'client_id=' + this.clientId + '&redirect_uri=' + encodeURIComponent(this.redirectUri) + '&' +\n            'response_type=code&scope=api offline_access&' +\n            'state=' + state + '&code_challenge=' + codeChallenge + '&' +\n            'code_challenge_method=S256&response_mode=query&' +\n            'domain_hint=' + encodeURIComponent(this.identifier);\n\n        if (includeUserIdentifier) {\n            const userIdentifier = await this.apiService.getSsoUserIdentifier();\n            authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n        }\n\n        return authorizeUrl;\n    }\n\n    private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n        this.loggingIn = true;\n        try {\n            this.formPromise = this.authService.logInSso(code, codeVerifier, this.redirectUri, orgIdFromState);\n            const response = await this.formPromise;\n            if (response.twoFactor) {\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute], {\n                        queryParams: {\n                            identifier: orgIdFromState,\n                            sso: 'true',\n                        },\n                    });\n                }\n            } else if (response.resetMasterPassword) {\n                if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n                    this.onSuccessfulLoginChangePasswordNavigate();\n                } else {\n                    this.router.navigate([this.changePasswordRoute], {\n                        queryParams: {\n                            identifier: orgIdFromState,\n                        },\n                    });\n                }\n            } else if (response.forcePasswordReset) {\n                if (this.onSuccessfulLoginForceResetNavigate != null) {\n                    this.onSuccessfulLoginForceResetNavigate();\n                } else {\n                    this.router.navigate([this.forcePasswordResetRoute]);\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch (e) {\n            this.logService.error(e);\n            if (e.message === 'Unable to reach key connector') {\n                this.platformUtilsService.showToast('error', null, this.i18nService.t('ssoKeyConnectorUnavailable'));\n            }\n        }\n        this.loggingIn = false;\n    }\n\n    private getOrgIdentifierFromState(state: string): string {\n        if (state === null || state === undefined) {\n            return null;\n        }\n\n        const stateSplit = state.split('_identifier=');\n        return stateSplit.length > 1 ? stateSplit[1] : null;\n    }\n\n    private checkState(state: string, checkState: string): boolean {\n        if (state === null || state === undefined) {\n            return false;\n        }\n        if (checkState === null || checkState === undefined) {\n            return false;\n        }\n\n        const stateSplit = state.split('_identifier=');\n        const checkStateSplit = checkState.split('_identifier=');\n        return stateSplit[0] === checkStateSplit[0];\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent,\n} from 'jslib-angular/components/two-factor-options.component';\n\n@Component({\n    selector: 'app-two-factor-options',\n    templateUrl: 'two-factor-options.component.html',\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService) {\n        super(authService, router, i18nService, platformUtilsService, window);\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{'twoStepOptions' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"list-group list-group-flush-2fa\"> <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\"> <div class=\"two-factor-content\"> <div class=\"logo-col\"> <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\"> </div> <div class=\"text-col\"> <h3>{{p.name}}</h3> {{p.description}} </div> <div class=\"btn-col\"> <button [attr.aria-describedby]=\"p.name\" type=\"button\" class=\"btn btn-outline-secondary btn-sm\" (click)=\"choose(p)\"> {{'select' | i18n}} </button> </div> </div> </div> <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\"> <div class=\"two-factor-content\"> <div class=\"logo-col\"> <img class=\"recovery-code-img\" alt=\"rc logo\"> </div> <div class=\"text-col\"> <h3>{{'recoveryCodeTitle' | i18n}}</h3> {{'recoveryCodeDesc' | i18n}} </div> <div class=\"btn-col\"> <button [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\" type=\"button\" class=\"btn btn-outline-secondary btn-sm\" (click)=\"recover()\"> {{'select' | i18n}} </button> </div> </div> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    Component,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from 'jslib-angular/components/two-factor.component';\n\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { TwoFactorOptionsComponent } from './two-factor-options.component';\n\n@Component({\n    selector: 'app-two-factor',\n    templateUrl: 'two-factor.component.html',\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n    @ViewChild('twoFactorOptions', { read: ViewContainerRef, static: true }) twoFactorOptionsModal: ViewContainerRef;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, apiService: ApiService,\n        platformUtilsService: PlatformUtilsService, stateService: StateService,\n        environmentService: EnvironmentService, private modalService: ModalService,\n        storageService: StorageService, route: ActivatedRoute, logService: LogService) {\n        super(authService, router, i18nService, apiService, platformUtilsService, window, environmentService,\n            stateService, storageService, route, logService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    async anotherMethod() {\n        const [modal] = await this.modalService.openViewRef(TwoFactorOptionsComponent, this.twoFactorOptionsModal, comp => {\n            comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n                modal.close();\n                this.selectedProviderType = provider;\n                await this.init();\n            });\n            comp.onRecoverSelected.subscribe(() => {\n                modal.close();\n            });\n        });\n    }\n\n    async goAfterLogIn() {\n        const loginRedirect = await this.stateService.get<any>('loginRedirect');\n        if (loginRedirect != null) {\n            this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n            await this.stateService.remove('loginRedirect');\n        } else {\n            this.router.navigate([this.successRoute], {\n                queryParams: {\n                    identifier: this.identifier,\n                },\n            });\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\" [ngClass]=\"{'col-9': selectedProviderType === providerType.Duo || selectedProviderType === providerType.OrganizationDuo}\"> <p class=\"lead text-center mb-4\">{{title}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <ng-container *ngIf=\"selectedProviderType === providerType.Email || selectedProviderType === providerType.Authenticator\"> <p *ngIf=\"selectedProviderType === providerType.Authenticator\"> {{'enterVerificationCodeApp' | i18n}}</p> <p *ngIf=\"selectedProviderType === providerType.Email\"> {{'enterVerificationCodeEmail' | i18n : twoFactorEmail}} </p> <div class=\"form-group\"> <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label> <input id=\"code\" type=\"text\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required appAutofocus inputmode=\"tel\" appInputVerbatim> <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\"> <a href=\"#\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\" *ngIf=\"selectedProviderType === providerType.Email\"> {{'sendVerificationCodeEmailAgain' | i18n}} </a> </small> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\"> <p class=\"text-center\">{{'insertYubiKey' | i18n}}</p> <img src=\"images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\"> <div class=\"form-group\"> <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label> <input id=\"code\" type=\"password\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required appAutofocus appInputVerbatim autocomplete=\"new-password\"> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\"> <div id=\"web-authn-frame\" class=\"mb-3\"> <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.Duo ||\n                        selectedProviderType === providerType.OrganizationDuo\"> <div id=\"duo-frame\" class=\"mb-3\"> <iframe id=\"duo_iframe\"></iframe> </div> </ng-container> <i class=\"fa fa-spinner text-muted fa-spin pull-right\" title=\"{{'loading' | i18n}}\" *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\" aria-hidden=\"true\"></i> <div class=\"form-check\" *ngIf=\"selectedProviderType != null\"> <input id=\"remember\" type=\"checkbox\" name=\"Remember\" class=\"form-check-input\" [(ngModel)]=\"remember\"> <label for=\"remember\" class=\"form-check-label\">{{'rememberMe' | i18n}}</label> </div> <ng-container *ngIf=\"selectedProviderType == null\"> <p>{{'noTwoStepProviders' | i18n}}</p> <p>{{'noTwoStepProviders2' | i18n}}</p> </ng-container> <hr> <div class=\"d-flex mb-3\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\" *ngIf=\"selectedProviderType != null && selectedProviderType !== providerType.Duo && \n                        selectedProviderType !== providerType.OrganizationDuo && selectedProviderType !== providerType.WebAuthn\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> <div class=\"text-center\"> <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{'useAnotherTwoStepMethod' | i18n}}</a> </div> </div> </div> </div> </div> </form> <ng-template #twoFactorOptions></ng-template> ","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n    email: string;\n}\n","export class KeyConnectorUserKeyRequest {\n    key: string;\n\n    constructor(key: string) {\n        this.key = key;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from 'jslib-angular/components/update-temp-password.component';\n\n@Component({\n    selector: 'app-update-temp-password',\n    templateUrl: 'update-temp-password.component.html',\n})\n\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n    constructor(i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, policyService: PolicyService,\n        cryptoService: CryptoService, userService: UserService,\n        messagingService: MessagingService, apiService: ApiService,\n        syncService: SyncService, logService: LogService) {\n        super(i18nService, platformUtilsService, passwordGenerationService, policyService, cryptoService,\n            userService, messagingService, apiService, syncService, logService);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-4\"> <p class=\"lead text-center mb-4\">{{'updateMasterPassword' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout type=\"warning\">{{'updateMasterPasswordWarning' | i18n}} </app-callout> <div class=\"form-group\"> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordHash\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","export class OrganizationUserResetPasswordRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { VerifyEmailRequest } from 'jslib-common/models/request/verifyEmailRequest';\n\n@Component({\n    selector: 'app-verify-email-token',\n    templateUrl: 'verify-email-token.component.html',\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private userService: UserService,\n        private logService: LogService) { }\n\n    ngOnInit() {\n        this.route.queryParams.pipe(first()).subscribe(async qParams => {\n            if (qParams.userId != null && qParams.token != null) {\n                try {\n                    await this.apiService.postAccountVerifyEmailToken(\n                        new VerifyEmailRequest(qParams.userId, qParams.token));\n                    const authed = await this.userService.isAuthenticated();\n                    if (authed) {\n                        await this.apiService.refreshIdentityToken();\n                    }\n                    this.toasterService.popAsync('success', null, this.i18nService.t('emailVerified'));\n                    this.router.navigate(['/']);\n                    return;\n                } catch (e) {\n                    this.logService.error(e);\n                }\n            }\n            this.toasterService.popAsync('error', null, this.i18nService.t('emailVerifiedFailed'));\n            this.router.navigate(['/']);\n        });\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\"> <div> <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { VerifyDeleteRecoverRequest } from 'jslib-common/models/request/verifyDeleteRecoverRequest';\n\n@Component({\n    selector: 'app-verify-recover-delete',\n    templateUrl: 'verify-recover-delete.component.html',\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n    email: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private token: string;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private route: ActivatedRoute, private logService: LogService) {\n    }\n\n    ngOnInit() {\n        this.route.queryParams.pipe(first()).subscribe(async qParams => {\n            if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n                this.userId = qParams.userId;\n                this.token = qParams.token;\n                this.email = qParams.email;\n            } else {\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n    async submit() {\n        try {\n            const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n            this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout> <p class=\"text-center\"> <strong>{{email}}</strong> </p> <p>{{'deleteRecoverConfirmDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-danger btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'deleteAccount' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { CollectionRequest } from 'jslib-common/models/request/collectionRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-collection-add-edit',\n    templateUrl: 'collection-add-edit.component.html',\n})\nexport class CollectionAddEditComponent implements OnInit {\n    @Input() collectionId: string;\n    @Input() organizationId: string;\n    @Input() canSave: boolean;\n    @Input() canDelete: boolean;\n    @Output() onSavedCollection = new EventEmitter();\n    @Output() onDeletedCollection = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    accessGroups: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    private orgKey: SymmetricCryptoKey;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService, private userService: UserService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        const organization = await this.userService.getOrganization(this.organizationId);\n        this.accessGroups = organization.useGroups;\n        this.editMode = this.loading = this.collectionId != null;\n        if (this.accessGroups) {\n            const groupsResponse = await this.apiService.getGroups(this.organizationId);\n            this.groups = groupsResponse.data.map(r => r).sort(Utils.getSortFunction(this.i18nService, 'name'));\n        }\n        this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editCollection');\n            try {\n                const collection = await this.apiService.getCollectionDetails(this.organizationId, this.collectionId);\n                this.name = await this.cryptoService.decryptToUtf8(new EncString(collection.name), this.orgKey);\n                this.externalId = collection.externalId;\n                if (collection.groups != null && this.groups.length > 0) {\n                    collection.groups.forEach(s => {\n                        const group = this.groups.filter(g => !g.accessAll && g.id === s.id);\n                        if (group != null && group.length > 0) {\n                            (group[0] as any).checked = true;\n                            (group[0] as any).readOnly = s.readOnly;\n                            (group[0] as any).hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch (e) {\n                this.logService.error(e);\n            }\n        } else {\n            this.title = this.i18nService.t('addCollection');\n        }\n\n        this.groups.forEach(g => {\n            if (g.accessAll) {\n                (g as any).checked = true;\n            }\n        });\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        if (g.accessAll) {\n            return;\n        }\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n            (g as any).hidePasswords = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach(g => this.check(g, select));\n    }\n\n    async submit() {\n        if (this.orgKey == null) {\n            throw new Error('No encryption key for this organization.');\n        }\n\n        const request = new CollectionRequest();\n        request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n        request.externalId = this.externalId;\n        request.groups = this.groups.filter(g => (g as any).checked && !g.accessAll)\n            .map(g => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords));\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putCollection(this.organizationId, this.collectionId, request);\n            } else {\n                this.formPromise = this.apiService.postCollection(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedCollectionId' : 'createdCollectionId', this.name));\n            this.onSavedCollection.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', this.name));\n            this.onDeletedCollection.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required appAutofocus [disabled]=\"!this.canSave\"> </div> <div class=\"form-group\"> <label for=\"externalId\">{{'externalId' | i18n}}</label> <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\" [disabled]=\"!this.canSave\"> <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small> </div> <ng-container *ngIf=\"accessGroups\"> <h3 class=\"mt-4 d-flex mb-0\"> {{'groupAccess' | i18n}} <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div *ngIf=\"!groups || !groups.length\"> {{'noGroupsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let g of groups; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(g)\"> <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" [disabled]=\"g.accessAll || !this.canSave\" appStopProp> </td> <td (click)=\"check(g)\"> {{g.name}} <ng-container *ngIf=\"g.accessAll\"> <i class=\"fa fa-th text-muted fa-fw\" title=\"{{'groupAccessAllItems' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'groupAccessAllItems' | i18n}}</span> </ng-container> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"g.hidePasswords\" name=\"Groups[{{i}}].HidePasswords\" [disabled]=\"!g.checked || g.accessAll || !this.canSave\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"g.readOnly\" name=\"Groups[{{i}}].ReadOnly\" [disabled]=\"!g.checked || g.accessAll || !this.canSave\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"this.canSave\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\" *ngIf=\"this.canDelete\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Collection } from '../domain/collection';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class CollectionRequest {\n    name: string;\n    externalId: string;\n    groups: SelectionReadOnlyRequest[] = [];\n\n    constructor(collection?: Collection) {\n        if (collection == null) {\n            return;\n        }\n        this.name = collection.name ? collection.name.encryptedString : null;\n        this.externalId = collection.externalId;\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { first } from 'rxjs/operators';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport {\n    CollectionDetailsResponse,\n    CollectionResponse,\n} from 'jslib-common/models/response/collectionResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { CollectionAddEditComponent } from './collection-add-edit.component';\nimport { EntityUsersComponent } from './entity-users.component';\n\n@Component({\n    selector: 'app-org-manage-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organization: Organization;\n    canCreate: boolean = false;\n    organizationId: string;\n    collections: CollectionView[];\n    assignedCollections: CollectionView[];\n    pagedCollections: CollectionView[];\n    searchText: string;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedCollectionsCount = 0;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private collectionService: CollectionService, private modalService: ModalService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\n        private searchService: SearchService, private logService: LogService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.route.queryParams.pipe(first()).subscribe(async qParams => {\n                this.searchText = qParams.search;\n            });\n        });\n    }\n\n    async load() {\n        this.organization = await this.userService.getOrganization(this.organizationId);\n        this.canCreate = this.organization.canCreateNewCollections;\n\n        const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n            const collections = r.data.filter(c => c.organizationId === this.organizationId).map(d =>\n                new Collection(new CollectionData(d as CollectionDetailsResponse)));\n            return await this.collectionService.decryptMany(collections);\n        };\n\n        if (this.organization.canViewAssignedCollections) {\n            const response = await this.apiService.getUserCollections();\n            this.assignedCollections = await decryptCollections(response);\n        }\n\n        if (this.organization.canViewAllCollections) {\n            const response = await this.apiService.getCollections(this.organizationId);\n            this.collections = await decryptCollections(response);\n        } else {\n            this.collections = this.assignedCollections;\n        }\n\n        this.resetPaging();\n        this.loading = false;\n    }\n\n    loadMore() {\n        if (!this.collections || this.collections.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCollections.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n            pagedSize = this.pagedCollectionsCount;\n        }\n        if (this.collections.length > pagedLength) {\n            this.pagedCollections =\n                this.pagedCollections.concat(this.collections.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCollectionsCount = this.pagedCollections.length;\n        this.didScroll = this.pagedCollections.length > this.pageSize;\n    }\n\n    async edit(collection: CollectionView) {\n        const canCreate = collection == null && this.canCreate;\n        const canEdit = collection != null && this.canEdit(collection);\n        const canDelete = collection != null && this.canDelete(collection);\n\n        if (!(canCreate || canEdit || canDelete)) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('missingPermissions'));\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(CollectionAddEditComponent, this.addEditModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.collectionId = collection != null ? collection.id : null;\n            comp.canSave = canCreate || canEdit;\n            comp.canDelete = canDelete;\n            comp.onSavedCollection.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n            comp.onDeletedCollection.subscribe(() => {\n                modal.close();\n                this.removeCollection(collection);\n            });\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(collection: CollectionView) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), collection.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteCollection(this.organizationId, collection.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', collection.name));\n            this.removeCollection(collection);\n        } catch (e) {\n            this.logService.error(e);\n            this.toasterService.popAsync('error', null, this.i18nService.t('missingPermissions'));\n        }\n    }\n\n    async users(collection: CollectionView) {\n        const [modal] = await this.modalService.openViewRef(EntityUsersComponent, this.usersModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.entity = 'collection';\n            comp.entityId = collection.id;\n            comp.entityName = collection.name;\n\n            comp.onEditedUsers.subscribe(() => {\n                this.load();\n                modal.close();\n            });\n        });\n    }\n\n    async resetPaging() {\n        this.pagedCollections = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.collections && this.collections.length > this.pageSize;\n    }\n\n    canEdit(collection: CollectionView) {\n        if (this.organization.canEditAnyCollection) {\n            return true;\n        }\n\n        if (this.organization.canEditAssignedCollections && this.assignedCollections.some(c => c.id === collection.id)) {\n            return true;\n        }\n        return false;\n    }\n\n    canDelete(collection: CollectionView) {\n        if (this.organization.canDeleteAnyCollection) {\n            return true;\n        }\n\n        if (this.organization.canDeleteAssignedCollections && this.assignedCollections.some(c => c.id === collection.id)) {\n            return true;\n        }\n        return false;\n    }\n\n    private removeCollection(collection: CollectionView) {\n        const index = this.collections.indexOf(collection);\n        if (index > -1) {\n            this.collections.splice(index, 1);\n            this.resetPaging();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'collections' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <button type=\"button\" *ngIf=\"this.canCreate\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newCollection' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedCollections : collections | search:searchText:'name':'id') as searchedCollections\"> <p *ngIf=\"!searchedCollections.length\">{{'noCollectionsInList' | i18n}}</p> <table class=\"table table-hover table-list\" *ngIf=\"searchedCollections.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let c of searchedCollections\"> <td> <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.name}}</a> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\"> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"this.canEdit(c)\" (click)=\"users(c)\"> <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i> {{'users' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick *ngIf=\"this.canDelete(c)\" (click)=\"delete(c)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> <ng-template #addEdit></ng-template> <ng-template #usersTemplate></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\nimport { EventService } from '../../services/event.service';\n\nimport { BaseEventsComponent } from '../../common/base.events.component';\n\n@Component({\n    selector: 'app-org-events',\n    templateUrl: 'events.component.html',\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n    exportFileName: string = 'org-events';\n    organizationId: string;\n    organization: Organization;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute, eventService: EventService,\n        i18nService: I18nService, toasterService: ToasterService, private userService: UserService,\n        exportService: ExportService, platformUtilsService: PlatformUtilsService, private router: Router,\n        logService: LogService, private userNamePipe: UserNamePipe) {\n        super(eventService, i18nService, toasterService, exportService, platformUtilsService, logService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            this.organization = await this.userService.getOrganization(this.organizationId);\n            if (this.organization == null || !this.organization.useEvents) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        response.data.forEach(u => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n        });\n\n        if (this.organization.providerId != null) {\n            try {\n                const provider = await this.userService.getProvider(this.organization.providerId);\n                if (provider != null && (await this.userService.getProvider(this.organization.providerId)).canManageUsers) {\n                    const providerUsersResponse = await this.apiService.getProviderUsers(this.organization.providerId);\n                    providerUsersResponse.data.forEach(u => {\n                        const name = this.userNamePipe.transform(u);\n                        this.orgUsersUserIdMap.set(u.userId, { name: `${name} (${this.organization.providerName})`, email: u.email });\n                    });\n                }\n            } catch (e) {\n                this.logService.warning(e);\n            }\n        }\n\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n        return this.apiService.getEventsOrganization(this.organizationId, startDate, endDate, continuationToken);\n    }\n\n    protected getUserName(r: EventResponse, userId: string) {\n        if (userId == null) {\n            return null;\n        }\n\n        if (this.orgUsersUserIdMap.has(userId)) {\n            return this.orgUsersUserIdMap.get(userId);\n        }\n\n        if (r.providerId != null && r.providerId === this.organization.providerId) {\n            return {\n                'name': this.organization.providerName,\n            };\n        }\n\n        return null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'eventLogs' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> </div> <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshForm.loading\"> <i class=\"fa fa-refresh fa-fw\" aria-hidden=\"true\" [ngClass]=\"{'fa-spin': loaded && refreshForm.loading}\"></i> {{'refresh' | i18n}} </button> </form> <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\" [ngClass]=\"{loading:exportForm.loading}\" (click)=\"exportEvents()\" [disabled]=\"loaded && exportForm.loading || dirtyDates\"> <i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i> <span>{{'export' | i18n}}</span> </button> </form> </div> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p *ngIf=\"!events || !events.length\">{{'noEventsInList' | i18n}}</p> <table class=\"table table-hover\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td> <span title=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </ng-container> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { GroupRequest } from 'jslib-common/models/request/groupRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\n@Component({\n    selector: 'app-group-add-edit',\n    templateUrl: 'group-add-edit.component.html',\n})\nexport class GroupAddEditComponent implements OnInit {\n    @Input() groupId: string;\n    @Input() organizationId: string;\n    @Output() onSavedGroup = new EventEmitter();\n    @Output() onDeletedGroup = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private collectionService: CollectionService,\n        private platformUtilsService: PlatformUtilsService, private logService: LogService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.groupId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editGroup');\n            try {\n                const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n                this.access = group.accessAll ? 'all' : 'selected';\n                this.name = group.name;\n                this.externalId = group.externalId;\n                if (group.collections != null && this.collections != null) {\n                    group.collections.forEach(s => {\n                        const collection = this.collections.filter(c => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                            collection[0].hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch (e) {\n                this.logService.error(e);\n            }\n        } else {\n            this.title = this.i18nService.t('addGroup');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map(r =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n\n    async submit() {\n        const request = new GroupRequest();\n        request.name = this.name;\n        request.externalId = this.externalId;\n        request.accessAll = this.access === 'all';\n        if (!request.accessAll) {\n            request.collections = this.collections.filter(c => (c as any).checked)\n                .map(c => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n        }\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n            } else {\n                this.formPromise = this.apiService.postGroup(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedGroupId' : 'createdGroupId', this.name));\n            this.onSavedGroup.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', this.name));\n            this.onDeletedGroup.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group\"> <label for=\"externalId\">{{'externalId' | i18n}}</label> <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\"> <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small> </div> <h3 class=\"mt-4 d-flex\"> <div class=\"mb-2\"> {{'accessControl' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessAll\"> {{'groupAccessAllItems' | i18n}} </label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessSelected\"> {{'groupAccessSelectedCollections' | i18n}} </label> </div> </div> <ng-container *ngIf=\"access === 'selected'\"> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let c of collections; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(c)\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(c)\"> {{c.name}} </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\" name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\" [disabled]=\"!c.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" aria-hidden=\"true\" title=\"{{'loading' | i18n}}\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { EntityUsersComponent } from './entity-users.component';\nimport { GroupAddEditComponent } from './group-add-edit.component';\n\n@Component({\n    selector: 'app-org-groups',\n    templateUrl: 'groups.component.html',\n})\nexport class GroupsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    groups: GroupResponse[];\n    pagedGroups: GroupResponse[];\n    searchText: string;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedGroupsCount = 0;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private modalService: ModalService,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService,\n        private userService: UserService, private router: Router,\n        private searchService: SearchService, private logService: LogService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useGroups) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            await this.load();\n            this.route.queryParams.pipe(first()).subscribe(async qParams => {\n                this.searchText = qParams.search;\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getGroups(this.organizationId);\n        const groups = response.data != null && response.data.length > 0 ? response.data : [];\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n        this.resetPaging();\n        this.loading = false;\n    }\n\n    loadMore() {\n        if (!this.groups || this.groups.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedGroups.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n            pagedSize = this.pagedGroupsCount;\n        }\n        if (this.groups.length > pagedLength) {\n            this.pagedGroups = this.pagedGroups.concat(this.groups.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedGroupsCount = this.pagedGroups.length;\n        this.didScroll = this.pagedGroups.length > this.pageSize;\n    }\n\n    async edit(group: GroupResponse) {\n        const [modal] = await this.modalService.openViewRef(GroupAddEditComponent, this.addEditModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.groupId = group != null ? group.id : null;\n            comp.onSavedGroup.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n            comp.onDeletedGroup.subscribe(() => {\n                modal.close();\n                this.removeGroup(group);\n            });\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(group: GroupResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), group.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteGroup(this.organizationId, group.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', group.name));\n            this.removeGroup(group);\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async users(group: GroupResponse) {\n        const [modal] = await this.modalService.openViewRef(EntityUsersComponent, this.usersModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.entity = 'group';\n            comp.entityId = group.id;\n            comp.entityName = group.name;\n\n            comp.onEditedUsers.subscribe(() => {\n                modal.close();\n            });\n        });\n    }\n\n    async resetPaging() {\n        this.pagedGroups = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.groups && this.groups.length > this.pageSize;\n    }\n\n    private removeGroup(group: GroupResponse) {\n        const index = this.groups.indexOf(group);\n        if (index > -1) {\n            this.groups.splice(index, 1);\n            this.resetPaging();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'groups' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newGroup' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedGroups : groups | search:searchText:'name':'id') as searchedGroups\"> <p *ngIf=\"!searchedGroups.length\">{{'noGroupsInList' | i18n}}</p> <table class=\"table table-hover table-list\" *ngIf=\"searchedGroups.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let g of searchedGroups\"> <td> <a href=\"#\" appStopClick (click)=\"edit(g)\">{{g.name}}</a> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\"> <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i> {{'users' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> <ng-template #addEdit></ng-template> <ng-template #usersTemplate></ng-template> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { first } from 'rxjs/operators';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from 'jslib-common/models/request/organizationUserConfirmRequest';\n\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { OrganizationUserBulkResponse } from 'jslib-common/models/response/organizationUserBulkResponse';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { BasePeopleComponent } from '../../common/base.people.component';\nimport { BulkConfirmComponent } from './bulk/bulk-confirm.component';\nimport { BulkRemoveComponent } from './bulk/bulk-remove.component';\nimport { BulkStatusComponent } from './bulk/bulk-status.component';\nimport { EntityEventsComponent } from './entity-events.component';\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { UserAddEditComponent } from './user-add-edit.component';\nimport { UserGroupsComponent } from './user-groups.component';\n\n@Component({\n    selector: 'app-org-people',\n    templateUrl: 'people.component.html',\n})\nexport class PeopleComponent extends BasePeopleComponent<OrganizationUserUserDetailsResponse> implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('groupsTemplate', { read: ViewContainerRef, static: true }) groupsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n    @ViewChild('resetPasswordTemplate', { read: ViewContainerRef, static: true }) resetPasswordModalRef: ViewContainerRef;\n    @ViewChild('bulkStatusTemplate', { read: ViewContainerRef, static: true }) bulkStatusModalRef: ViewContainerRef;\n    @ViewChild('bulkConfirmTemplate', { read: ViewContainerRef, static: true }) bulkConfirmModalRef: ViewContainerRef;\n    @ViewChild('bulkRemoveTemplate', { read: ViewContainerRef, static: true }) bulkRemoveModalRef: ViewContainerRef;\n\n    userType = OrganizationUserType;\n    userStatusType = OrganizationUserStatusType;\n\n    organizationId: string;\n    status: OrganizationUserStatusType = null;\n    accessEvents = false;\n    accessGroups = false;\n    canResetPassword = false; // User permission (admin/custom)\n    orgUseResetPassword = false; // Org plan ability\n    orgHasKeys = false; // Org public/private keys\n    orgResetPasswordPolicyEnabled = false;\n    callingUserType: OrganizationUserType = null;\n\n    constructor(apiService: ApiService, private route: ActivatedRoute,\n        i18nService: I18nService, modalService: ModalService,\n        platformUtilsService: PlatformUtilsService, toasterService: ToasterService,\n        cryptoService: CryptoService, private userService: UserService, private router: Router,\n        storageService: StorageService, searchService: SearchService,\n        validationService: ValidationService, private policyService: PolicyService,\n        logService: LogService, searchPipe: SearchPipe, userNamePipe: UserNamePipe, private syncService: SyncService) {\n            super(apiService, searchService, i18nService, platformUtilsService, toasterService, cryptoService,\n                storageService, validationService, modalService, logService, searchPipe, userNamePipe);\n        }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (!organization.canManageUsers) {\n                this.router.navigate(['../collections'], { relativeTo: this.route });\n                return;\n            }\n            this.accessEvents = organization.useEvents;\n            this.accessGroups = organization.useGroups;\n            this.canResetPassword = organization.canManageUsersPassword;\n            this.orgUseResetPassword = organization.useResetPassword;\n            this.callingUserType = organization.type;\n            this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n            // Backfill pub/priv key if necessary\n            if (this.canResetPassword && !this.orgHasKeys) {\n                const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n                const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n                const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n                const response = await this.apiService.postOrganizationKeys(this.organizationId, request);\n                if (response != null) {\n                    this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n                    await this.syncService.fullSync(true); // Replace oganizations with new data\n                } else {\n                    throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                }\n            }\n\n            await this.load();\n\n            this.route.queryParams.pipe(first()).subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const user = this.users.filter(u => u.id === qParams.viewEvents);\n                    if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n                        this.events(user[0]);\n                    }\n                }\n            });\n        });\n    }\n\n    async load() {\n        const resetPasswordPolicy = await this.policyService.getPolicyForOrganization(PolicyType.ResetPassword,\n            this.organizationId);\n        this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n        super.load();\n    }\n\n    getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n        return this.apiService.getOrganizationUsers(this.organizationId);\n    }\n\n    deleteUser(id: string): Promise<any> {\n        return this.apiService.deleteOrganizationUser(this.organizationId, id);\n    }\n\n    reinviteUser(id: string): Promise<any> {\n        return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n    }\n\n    async confirmUser(user: OrganizationUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n        const request = new OrganizationUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n    }\n\n    allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n        // Hierarchy check\n        let callingUserHasPermission = false;\n\n        switch (this.callingUserType) {\n            case OrganizationUserType.Owner:\n                callingUserHasPermission = true;\n                break;\n            case OrganizationUserType.Admin:\n                callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n                break;\n            case OrganizationUserType.Custom:\n                callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner\n                    && orgUser.type !== OrganizationUserType.Admin;\n                break;\n        }\n\n        // Final\n        return this.canResetPassword && callingUserHasPermission && this.orgUseResetPassword && this.orgHasKeys\n            && orgUser.resetPasswordEnrolled && this.orgResetPasswordPolicyEnabled\n            && orgUser.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n        return this.orgUseResetPassword && orgUser.resetPasswordEnrolled && this.orgResetPasswordPolicyEnabled;\n    }\n\n    async edit(user: OrganizationUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(UserAddEditComponent, this.addEditModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.organizationId = this.organizationId;\n            comp.organizationUserId = user != null ? user.id : null;\n            comp.usesKeyConnector = user?.usesKeyConnector;\n            comp.onSavedUser.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n            comp.onDeletedUser.subscribe(() => {\n                modal.close();\n                this.removeUser(user);\n            });\n        });\n    }\n\n    async groups(user: OrganizationUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(UserGroupsComponent, this.groupsModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.organizationId = this.organizationId;\n            comp.organizationUserId = user != null ? user.id : null;\n            comp.onSavedUser.subscribe(() => {\n                modal.close();\n            });\n        });\n    }\n\n    async bulkRemove() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkRemoveComponent, this.bulkRemoveModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.users = this.getCheckedUsers();\n        });\n\n        await modal.onClosedPromise();\n        await this.load();\n    }\n\n    async bulkReinvite() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const users = this.getCheckedUsers();\n        const filteredUsers = users.filter(u => u.status === OrganizationUserStatusType.Invited);\n\n        if (filteredUsers.length <= 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('noSelectedUsersApplicable'));\n            return;\n        }\n\n        try {\n            const request = new OrganizationUserBulkRequest(filteredUsers.map(user => user.id));\n            const response = this.apiService.postManyOrganizationUserReinvite(this.organizationId, request);\n            this.showBulkStatus(users, filteredUsers, response, this.i18nService.t('bulkReinviteMessage'));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async bulkConfirm() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkConfirmComponent, this.bulkConfirmModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.users = this.getCheckedUsers();\n        });\n\n        await modal.onClosedPromise();\n        await this.load();\n    }\n\n    async events(user: OrganizationUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.organizationId = this.organizationId;\n            comp.entityId = user.id;\n            comp.showUser = false;\n            comp.entity = 'user';\n        });\n    }\n\n    async resetPassword(user: OrganizationUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(ResetPasswordComponent, this.resetPasswordModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.email = user != null ? user.email : null;\n            comp.organizationId = this.organizationId;\n            comp.id = user != null ? user.id : null;\n\n            comp.onPasswordReset.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n        });\n    }\n\n    protected deleteWarningMessage(user: OrganizationUserUserDetailsResponse): string {\n        if (user.usesKeyConnector) {\n            return this.i18nService.t('removeUserConfirmationKeyConnector');\n        }\n\n        return super.deleteWarningMessage(user);\n    }\n\n    private async showBulkStatus(users: OrganizationUserUserDetailsResponse[], filteredUsers: OrganizationUserUserDetailsResponse[],\n        request: Promise<ListResponse<OrganizationUserBulkResponse>>, successfullMessage: string) {\n\n        const [modal, childComponent] = await this.modalService.openViewRef(BulkStatusComponent, this.bulkStatusModalRef, comp => {\n            comp.loading = true;\n        });\n\n        // Workaround to handle closing the modal shortly after it has been opened\n        let close = false;\n        modal.onShown.subscribe(() => {\n            if (close) {\n                modal.close();\n            }\n        });\n\n        try {\n            const response = await request;\n\n            if (modal) {\n                const keyedErrors: any = response.data.filter(r => r.error !== '').reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n                const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n                childComponent.users = users.map(user => {\n                    let message = keyedErrors[user.id] ?? successfullMessage;\n                    if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n                        message = this.i18nService.t('bulkFilteredMessage');\n                    }\n\n                    return {\n                        user: user,\n                        error: keyedErrors.hasOwnProperty(user.id),\n                        message: message,\n                    };\n                });\n                childComponent.loading = false;\n            }\n        } catch {\n            close = true;\n            modal.close();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'people' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == null}\" (click)=\"filter(null)\"> {{'all' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{allCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Invited}\" (click)=\"filter(userStatusType.Invited)\"> {{'invited' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{invitedCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Accepted}\" (click)=\"filter(userStatusType.Accepted)\"> {{'accepted' | i18n}} <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{acceptedCount}}</span> </button> </div> <div class=\"ml-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <div class=\"dropdown ml-3\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'reinviteSelected' | i18n}} </button> <button class=\"dropdown-item text-success\" appStopClick (click)=\"bulkConfirm()\" *ngIf=\"showBulkConfirmUsers\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirmSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'inviteUser' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedUsers : users | search:searchText:'name':'email':'id') as searchedUsers\"> <p *ngIf=\"!searchedUsers.length\">{{'noUsersInList' | i18n}}</p> <ng-container *ngIf=\"searchedUsers.length\"> <app-callout type=\"info\" title=\"{{'confirmUsers' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"showConfirmUsers\"> {{'usersNeedConfirmed' | i18n}} </app-callout> <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp> </td> <td width=\"30\"> <app-avatar [data]=\"u | userName\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(u)\">{{u.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td> <ng-container *ngIf=\"u.twoFactorEnabled\"> <i class=\"fa fa-lock\" title=\"{{'userUsingTwoStep' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userUsingTwoStep' | i18n}}</span> </ng-container> <ng-container *ngIf=\"showEnrolledStatus(u)\"> <i class=\"fa fa-key\" title=\"{{'enrolledPasswordReset' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enrolledPasswordReset' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === userType.Owner\">{{'owner' | i18n}}</span> <span *ngIf=\"u.type === userType.Admin\">{{'admin' | i18n}}</span> <span *ngIf=\"u.type === userType.Manager\">{{'manager' | i18n}}</span> <span *ngIf=\"u.type === userType.User\">{{'user' | i18n}}</span> <span *ngIf=\"u.type === userType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(u)\" *ngIf=\"u.status === userStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(u)\" *ngIf=\"u.status === userStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"groups(u)\" *ngIf=\"accessGroups\"> <i class=\"fa fa-fw fa-sitemap\" aria-hidden=\"true\"></i> {{'groups' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"events(u)\" *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"resetPassword(u)\" *ngIf=\"allowResetPassword(u)\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'resetPassword' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> <ng-template #addEdit></ng-template> <ng-template #groupsTemplate></ng-template> <ng-template #eventsTemplate></ng-template> <ng-template #confirmTemplate></ng-template> <ng-template #resetPasswordTemplate></ng-template> <ng-template #bulkStatusTemplate></ng-template> <ng-template #bulkConfirmTemplate></ng-template> <ng-template #bulkRemoveTemplate></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { OrganizationUserResetPasswordRequest } from 'jslib-common/models/request/organizationUserResetPasswordRequest';\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: 'reset-password.component.html',\n})\nexport class ResetPasswordComponent implements OnInit {\n    @Input() name: string;\n    @Input() email: string;\n    @Input() id: string;\n    @Input() organizationId: string;\n    @Output() onPasswordReset = new EventEmitter();\n\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n    newPassword: string = null;\n    showPassword: boolean = false;\n    masterPasswordScore: number;\n    formPromise: Promise<any>;\n    private newPasswordStrengthTimeout: any;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private passwordGenerationService: PasswordGenerationService,\n        private policyService: PolicyService, private cryptoService: CryptoService, private logService: LogService) { }\n\n    async ngOnInit() {\n        // Get Enforced Policy Options\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    }\n\n    get loggedOutWarningName() {\n        return this.name != null ? this.name : this.i18nService.t('thisUser');\n    }\n\n    async generatePassword() {\n        const options = (await this.passwordGenerationService.getOptions())[0];\n        this.newPassword = await this.passwordGenerationService.generatePassword(options);\n        this.updatePasswordStrength();\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('newPassword').focus();\n    }\n\n    copy(value: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    async submit() {\n        // Validation\n        if (this.newPassword == null || this.newPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n\n        if (this.newPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return false;\n        }\n\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(this.masterPasswordScore, this.newPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return;\n        }\n\n        if (this.masterPasswordScore < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return false;\n            }\n        }\n\n        // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n        try {\n            this.formPromise = this.apiService.getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n                .then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordDetailsError'));\n                    }\n\n                    const kdfType = response.kdf;\n                    const kdfIterations = response.kdfIterations;\n                    const resetPasswordKey = response.resetPasswordKey;\n                    const encryptedPrivateKey = response.encryptedPrivateKey;\n\n                    // Decrypt Organization's encrypted Private Key with org key\n                    const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n                    const decPrivateKey = await this.cryptoService.decryptToBytes(new EncString(encryptedPrivateKey), orgSymKey);\n\n                    // Decrypt User's Reset Password Key to get EncKey\n                    const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n                    const userEncKey = new SymmetricCryptoKey(decValue);\n\n                    // Create new key and hash new password\n                    const newKey = await this.cryptoService.makeKey(this.newPassword, this.email.trim().toLowerCase(),\n                        kdfType, kdfIterations);\n                    const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n                    // Create new encKey for the User\n                    const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n                    // Create request\n                    const request = new OrganizationUserResetPasswordRequest();\n                    request.key = newEncKey[1].encryptedString;\n                    request.newMasterPasswordHash = newPasswordHash;\n\n                    // Change user's password\n                    return this.apiService.putOrganizationUserResetPassword(this.organizationId, this.id, request);\n                });\n\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('resetPasswordSuccess'));\n            this.onPasswordReset.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    updatePasswordStrength() {\n        if (this.newPasswordStrengthTimeout != null) {\n            clearTimeout(this.newPasswordStrengthTimeout);\n        }\n        this.newPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.newPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        if (this.name != null && this.name !== '') {\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\n        }\n        return userInput;\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\"> <div class=\"modal-dialog\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"resetPasswordTitle\"> {{'resetPassword' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"warning\">{{'resetPasswordLoggedOutWarning' | i18n: loggedOutWarningName}} </app-callout> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" enforcedPolicyMessage=\"{{'resetPasswordMasterPasswordPolicyInEffect' | i18n}}\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <div class=\"row\"> <div class=\"col form-group\"> <div class=\"d-flex\"> <label for=\"newPassword\">{{'newPassword' | i18n}}</label> <div class=\"ml-auto d-flex\"> <a href=\"#\" class=\"d-block mr-2 fa-icon-above-input\" appStopClick appA11yTitle=\"{{'generatePassword' | i18n}}\" (click)=\"generatePassword()\"> <i class=\"fa fa-lg fa-fw fa-refresh\" aria-hidden=\"true\"></i> </a> </div> </div> <div class=\"input-group mb-1\"> <input id=\"newPassword\" class=\"form-control text-monospace\" appAutofocus type=\"{{showPassword ? 'text' : 'password'}}\" name=\"NewPassword\" [(ngModel)]=\"newPassword\" required appInputVerbatim autocomplete=\"new-password\" (input)=\"updatePasswordStrength()\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(newPassword)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { OrganizationUserInviteRequest } from 'jslib-common/models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateRequest } from 'jslib-common/models/request/organizationUserUpdateRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PermissionsApi } from 'jslib-common/models/api/permissionsApi';\n\n@Component({\n    selector: 'app-user-add-edit',\n    templateUrl: 'user-add-edit.component.html',\n})\nexport class UserAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Input() usesKeyConnector: boolean = false;\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    emails: string;\n    type: OrganizationUserType = OrganizationUserType.User;\n    permissions = new PermissionsApi();\n    showCustom = false;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    organizationUserType = OrganizationUserType;\n\n    manageAllCollectionsCheckboxes = [\n        {\n            id: 'createNewCollections',\n            get: () => this.permissions.createNewCollections,\n            set: (v: boolean) => this.permissions.createNewCollections = v,\n        },\n        {\n            id: 'editAnyCollection',\n            get: () => this.permissions.editAnyCollection,\n            set: (v: boolean) => this.permissions.editAnyCollection = v,\n        },\n        {\n            id: 'deleteAnyCollection',\n            get: () => this.permissions.deleteAnyCollection,\n            set: (v: boolean) => this.permissions.deleteAnyCollection = v,\n        },\n    ];\n\n    manageAssignedCollectionsCheckboxes = [\n        {\n            id: 'editAssignedCollections',\n            get: () => this.permissions.editAssignedCollections,\n            set: (v: boolean) => this.permissions.editAssignedCollections = v,\n        },\n        {\n            id: 'deleteAssignedCollections',\n            get: () => this.permissions.deleteAssignedCollections,\n            set: (v: boolean) => this.permissions.deleteAssignedCollections = v,\n        },\n    ];\n\n    get customUserTypeSelected(): boolean {\n        return this.type === OrganizationUserType.Custom;\n    }\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private collectionService: CollectionService,\n        private platformUtilsService: PlatformUtilsService, private logService: LogService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.organizationUserId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editUser');\n            try {\n                const user = await this.apiService.getOrganizationUser(this.organizationId, this.organizationUserId);\n                this.access = user.accessAll ? 'all' : 'selected';\n                this.type = user.type;\n                if (user.type === OrganizationUserType.Custom) {\n                    this.permissions = user.permissions;\n                }\n                if (user.collections != null && this.collections != null) {\n                    user.collections.forEach(s => {\n                        const collection = this.collections.filter(c => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                            collection[0].hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch (e) {\n                this.logService.error(e);\n            }\n        } else {\n            this.title = this.i18nService.t('inviteUser');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map(r =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n\n    setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n        Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n        return p;\n    }\n\n    handleDependentPermissions() {\n        // Manage Password Reset must have Manage Users enabled\n        if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n            this.permissions.manageUsers = true;\n            (document.getElementById('manageUsers') as HTMLInputElement).checked = true;\n            this.platformUtilsService.showToast('info', null, this.i18nService.t('resetPasswordManageUsers'));\n        }\n    }\n\n    async submit() {\n        let collections: SelectionReadOnlyRequest[] = null;\n        if (this.access !== 'all') {\n            collections = this.collections.filter(c => (c as any).checked)\n                .map(c => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n        }\n\n        try {\n            if (this.editMode) {\n                const request = new OrganizationUserUpdateRequest();\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.collections = collections;\n                request.permissions = this.setRequestPermissions(request.permissions ?? new PermissionsApi(), request.type !== OrganizationUserType.Custom);\n                this.formPromise = this.apiService.putOrganizationUser(this.organizationId, this.organizationUserId,\n                    request);\n            } else {\n                const request = new OrganizationUserInviteRequest();\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.permissions = this.setRequestPermissions(request.permissions ?? new PermissionsApi(), request.type !== OrganizationUserType.Custom);\n                request.collections = collections;\n                this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSavedUser.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const message = this.usesKeyConnector ? 'removeUserConfirmationKeyConnector' : 'removeUserConfirmation';\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(message), this.name, this.i18nService.t('yes'), this.i18nService.t('no'), 'warning'\n        );\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteOrganizationUser(this.organizationId, this.organizationUserId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\n            this.onDeletedUser.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'inviteUserDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"emails\">{{'email' | i18n}}</label> <input id=\"emails\" class=\"form-control\" type=\"text\" name=\"Emails\" [(ngModel)]=\"emails\" required appAutoFocus> <small class=\"text-muted\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small> </div> </ng-container> <h3> {{'userType' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#user-types\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeUser\" [value]=\"organizationUserType.User\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeUser\"> {{'user' | i18n}} <small>{{'userDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeManager\" [value]=\"organizationUserType.Manager\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeManager\"> {{'manager' | i18n}} <small>{{'managerDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeAdmin\" [value]=\"organizationUserType.Admin\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeAdmin\"> {{'admin' | i18n}} <small>{{'adminDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeOwner\" [value]=\"organizationUserType.Owner\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeOwner\"> {{'owner' | i18n}} <small>{{'ownerDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeCustom\" [value]=\"organizationUserType.Custom\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeCustom\"> {{'custom' | i18n}} <small>{{'customDesc' | i18n}}</small> </label> </div> <ng-container *ngIf=\"customUserTypeSelected\"> <h3 class=\"mt-4 d-flex\"> {{'permissions' | i18n}} </h3> <div class=\"row\"> <div class=\"col-6\"> <div class=\"mb-3\"> <label class=\"font-weight-bold mb-0\">Manager Permissions</label> <hr class=\"my-0 mr-2\"/> <app-nested-checkbox parentId=\"manageAssignedCollections\" [checkboxes]=\"manageAssignedCollectionsCheckboxes\"> </app-nested-checkbox> </div> </div> <div class=\"col-6\"> <div class=\"mb-3\"> <label class=\"font-weight-bold mb-0\">Admin Permissions</label> <hr class=\"my-0 mr-2\"/> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessEventLogs\" id=\"accessEventLogs\" [(ngModel)]=\"permissions.accessEventLogs\"> <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\"> {{'accessEventLogs' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessImportExport\" id=\"accessImportExport\" [(ngModel)]=\"permissions.accessImportExport\"> <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\"> {{'accessImportExport' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessReports\" id=\"accessReports\" [(ngModel)]=\"permissions.accessReports\"> <label class=\"form-check-label font-weight-normal\" for=\"accessReports\"> {{'accessReports' | i18n}} </label> </div> </div> <app-nested-checkbox parentId=\"manageAllCollections\" [checkboxes]=\"manageAllCollectionsCheckboxes\"> </app-nested-checkbox> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageGroups\" id=\"manageGroups\" [(ngModel)]=\"permissions.manageGroups\"> <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\"> {{'manageGroups' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageSso\" id=\"managePolicies\" [(ngModel)]=\"permissions.manageSso\"> <label class=\"form-check-label font-weight-normal\" for=\"manageSso\"> {{'manageSso' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"managePolicies\" id=\"managePolicies\" [(ngModel)]=\"permissions.managePolicies\"> <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\"> {{'managePolicies' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageUsers\" id=\"manageUsers\" [(ngModel)]=\"permissions.manageUsers\" (change)=\"handleDependentPermissions()\"> <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\"> {{'manageUsers' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageResetPassword\" id=\"manageResetPassword\" [(ngModel)]=\"permissions.manageResetPassword\" (change)=\"handleDependentPermissions()\"> <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\"> {{'manageResetPassword' | i18n}} </label> </div> </div> </div> </div> </div> </ng-container> <h3 class=\"mt-4 d-flex\"> <div class=\"mb-3\"> {{'accessControl' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessAll\"> {{'userAccessAllItems' | i18n}} </label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessSelected\"> {{'userAccessSelectedCollections' | i18n}} </label> </div> </div> <ng-container *ngIf=\"access === 'selected'\"> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let c of collections; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(c)\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(c)\"> {{c.name}} </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\" name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\" [disabled]=\"!c.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { OrganizationUserUpdateGroupsRequest } from 'jslib-common/models/request/organizationUserUpdateGroupsRequest';\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-user-groups',\n    templateUrl: 'user-groups.component.html',\n})\nexport class UserGroupsComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n\n    loading = true;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private logService: LogService) { }\n\n    async ngOnInit() {\n        const groupsResponse = await this.apiService.getGroups(this.organizationId);\n        const groups = groupsResponse.data.map(r => r);\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n\n        try {\n            const userGroups = await this.apiService.getOrganizationUserGroups(\n                this.organizationId, this.organizationUserId);\n            if (userGroups != null && this.groups != null) {\n                userGroups.forEach(ug => {\n                    const group = this.groups.filter(g => g.id === ug);\n                    if (group != null && group.length > 0) {\n                        (group[0] as any).checked = true;\n                    }\n                });\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach(g => this.check(g, select));\n    }\n\n    async submit() {\n        const request = new OrganizationUserUpdateGroupsRequest();\n        request.groupIds = this.groups.filter(g => (g as any).checked).map(g => g.id);\n\n        try {\n            this.formPromise = this.apiService.putOrganizationUserGroups(this.organizationId, this.organizationUserId,\n                request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedGroupsForUser', this.name));\n            this.onSavedUser.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"groupAccessTitle\"> {{'groupAccess' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <p>{{'groupAccessUserDesc' | i18n}}</p> <div *ngIf=\"!groups || !groups.length\"> {{'noGroupsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\"> <tbody> <tr *ngFor=\"let g of groups; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(g)\"> <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(g)\"> {{g.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { PolicyEditComponent } from './policy-edit.component';\n\nimport { PolicyListService } from '../../services/policy-list.service';\nimport { BasePolicy } from '../policies/base-policy.component';\n\n@Component({\n    selector: 'app-org-policies',\n    templateUrl: 'policies.component.html',\n})\nexport class PoliciesComponent implements OnInit {\n    @ViewChild('editTemplate', { read: ViewContainerRef, static: true }) editModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    policies: BasePolicy[];\n    organization: Organization;\n\n    private orgPolicies: PolicyResponse[];\n    private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private modalService: ModalService, private userService: UserService,\n        private policyListService: PolicyListService, private router: Router) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            this.organization = await this.userService.getOrganization(this.organizationId);\n            if (this.organization == null || !this.organization.usePolicies) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n\n            this.policies = this.policyListService.getPolicies();\n\n            await this.load();\n\n            // Handle policies component launch from Event message\n            this.route.queryParams.pipe(first()).subscribe(async qParams => {\n                if (qParams.policyId != null) {\n                    const policyIdFromEvents: string = qParams.policyId;\n                    for (const orgPolicy of this.orgPolicies) {\n                        if (orgPolicy.id === policyIdFromEvents) {\n                            for (let i = 0; i < this.policies.length; i++) {\n                                if (this.policies[i].type === orgPolicy.type) {\n                                    this.edit(this.policies[i]);\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getPolicies(this.organizationId);\n        this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n        this.orgPolicies.forEach(op => {\n            this.policiesEnabledMap.set(op.type, op.enabled);\n        });\n\n        this.loading = false;\n    }\n\n    async edit(policy: BasePolicy) {\n        const [modal] = await this.modalService.openViewRef(PolicyEditComponent, this.editModalRef, comp => {\n            comp.policy = policy;\n            comp.organizationId = this.organizationId;\n            comp.policiesEnabledMap = this.policiesEnabledMap;\n            comp.onSavedPolicy.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n        });\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'policies' | i18n}}</h1> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <table class=\"table table-hover table-list\" *ngIf=\"!loading\"> <tbody> <tr *ngFor=\"let p of policies\"> <td *ngIf=\"p.display(organization)\"> <a href=\"#\" appStopClick (click)=\"edit(p)\">{{p.name | i18n}}</a> <span class=\"badge badge-success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{'enabled' | i18n}}</span> <small class=\"text-muted d-block\">{{p.description | i18n}}</small> </td> </tr> </tbody> </table> <ng-template #editTemplate></ng-template> ","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nimport { BasePolicy, BasePolicyComponent } from '../policies/base-policy.component';\n\n@Component({\n    selector: 'app-policy-edit',\n    templateUrl: 'policy-edit.component.html',\n})\nexport class PolicyEditComponent {\n    @Input() policy: BasePolicy;\n    @Input() organizationId: string;\n    @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n    @Output() onSavedPolicy = new EventEmitter();\n\n    @ViewChild('policyForm', { read: ViewContainerRef, static: true }) policyFormRef: ViewContainerRef;\n\n    policyType = PolicyType;\n    loading = true;\n    enabled = false;\n    formPromise: Promise<any>;\n    defaultTypes: any[];\n    policyComponent: BasePolicyComponent;\n\n    private policyResponse: PolicyResponse;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private componentFactoryResolver: ComponentFactoryResolver,\n        private cdr: ChangeDetectorRef, private logService: LogService) {\n    }\n\n    async ngAfterViewInit() {\n        await this.load();\n        this.loading = false;\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n        this.policyComponent = this.policyFormRef.createComponent(factory).instance as BasePolicyComponent;\n        this.policyComponent.policy = this.policy;\n        this.policyComponent.policyResponse = this.policyResponse;\n\n        this.cdr.detectChanges();\n    }\n\n    async load() {\n        try {\n            this.policyResponse = await this.apiService.getPolicy(this.organizationId, this.policy.type);\n        } catch (e) {\n            if (e.statusCode === 404) {\n                this.policyResponse = new PolicyResponse({Enabled: false});\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    async submit() {\n        let request: PolicyRequest;\n        try {\n            request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n        } catch (e) {\n            this.toasterService.pop('error', null, e);\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.putPolicy(this.organizationId, this.policy.type, request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedPolicyId', this.i18nService.t(this.policy.name)));\n            this.onSavedPolicy.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"policiesEditTitle\">{{'editPolicy' | i18n}} - {{policy.name | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div [hidden]=\"loading\"> <p>{{policy.description | i18n}}</p> <ng-template #policyForm></ng-template> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> </div> </form> </div> </div> ","import {\n    Component,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUpdateRequest } from 'jslib-common/models/request/organizationUpdateRequest';\n\nimport { OrganizationResponse } from 'jslib-common/models/response/organizationResponse';\n\nimport { ApiKeyComponent } from '../../settings/api-key.component';\nimport { PurgeVaultComponent } from '../../settings/purge-vault.component';\nimport { TaxInfoComponent } from '../../settings/tax-info.component';\n\nimport { DeleteOrganizationComponent } from './delete-organization.component';\n\n@Component({\n    selector: 'app-org-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deleteOrganizationTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n    @ViewChild('purgeOrganizationTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\n    @ViewChild('apiKeyTemplate', { read: ViewContainerRef, static: true }) apiKeyModalRef: ViewContainerRef;\n    @ViewChild('rotateApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateApiKeyModalRef: ViewContainerRef;\n    @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n    selfHosted = false;\n    loading = true;\n    canUseApi = false;\n    org: OrganizationResponse;\n    formPromise: Promise<any>;\n    taxFormPromise: Promise<any>;\n\n    private organizationId: string;\n\n    constructor(private modalService: ModalService,\n        private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private route: ActivatedRoute,\n        private syncService: SyncService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService, private logService: LogService,\n        private router: Router) { }\n\n    async ngOnInit() {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            try {\n                this.org = await this.apiService.getOrganization(this.organizationId);\n                this.canUseApi = this.org.useApi;\n            } catch (e) {\n                this.logService.error(e);\n            }\n        });\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new OrganizationUpdateRequest();\n            request.name = this.org.name;\n            request.businessName = this.org.businessName;\n            request.billingEmail = this.org.billingEmail;\n            request.identifier = this.org.identifier;\n\n            // Backfill pub/priv key if necessary\n            if (!this.org.hasPublicAndPrivateKeys) {\n                const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n                const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n                request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n            }\n\n            this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpdated'));\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async submitTaxInfo() {\n        this.taxFormPromise = this.taxInfo.submitTaxInfo();\n        await this.taxFormPromise;\n        this.toasterService.popAsync('success', null, this.i18nService.t('taxInfoUpdated'));\n    }\n\n    async deleteOrganization() {\n        await this.modalService.openViewRef(DeleteOrganizationComponent, this.deleteModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.onSuccess.subscribe(() => {\n                this.router.navigate(['/']);\n            });\n        });\n    }\n\n    async purgeVault() {\n        await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, comp => {\n            comp.organizationId = this.organizationId;\n        });\n    }\n\n    async viewApiKey() {\n        await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, comp => {\n            comp.keyType = 'organization';\n            comp.entityId = this.organizationId;\n            comp.postKey = this.apiService.postOrganizationApiKey.bind(this.apiService);\n            comp.scope = 'api.organization';\n            comp.grantType = 'client_credentials';\n            comp.apiKeyTitle = 'apiKey';\n            comp.apiKeyWarning = 'apiKeyWarning';\n            comp.apiKeyDescription = 'apiKeyDesc';\n        });\n    }\n\n    async rotateApiKey() {\n        await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, comp => {\n            comp.keyType = 'organization';\n            comp.isRotation = true;\n            comp.entityId = this.organizationId;\n            comp.postKey = this.apiService.postOrganizationRotateApiKey.bind(this.apiService);\n            comp.scope = 'api.organization';\n            comp.grantType = 'client_credentials';\n            comp.apiKeyTitle = 'apiKey';\n            comp.apiKeyWarning = 'apiKeyWarning';\n            comp.apiKeyDescription = 'apiKeyRotateDesc';\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myOrganization' | i18n}}</h1> </div> <div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"org && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'organizationName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"org.name\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"org.billingEmail\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"businessName\">{{'businessName' | i18n}}</label> <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"org.businessName\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"identifier\">{{'identifier' | i18n}}</label> <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\" [(ngModel)]=\"org.identifier\"> </div> </div> <div class=\"col-6\"> <app-avatar data=\"{{org.name}}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> <ng-container *ngIf=\"canUseApi\"> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'apiKey' | i18n}}</h1> </div> <p> {{'apiKeyDesc' | i18n}} <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}} </a> </p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">{{'viewApiKey' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">{{'rotateApiKey' | i18n}}</button> </ng-container> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'taxInformation' | i18n}}</h1> </div> <p>{{'taxInformationDesc' | i18n}}</p> <div *ngIf=\"!org || loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"org && !loading\" #formTax (ngSubmit)=\"submitTaxInfo()\" [appApiAction]=\"taxFormPromise\" ngNativeValidate> <app-tax-info></app-tax-info> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> <div class=\"secondary-header text-danger border-0 mb-0\"> <h1>{{'dangerZone' | i18n}}</h1> </div> <div class=\"card border-danger\"> <div class=\"card-body\"> <p>{{'dangerZoneDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">{{'deleteOrganization' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button> </div> </div> <ng-template #deleteOrganizationTemplate></ng-template> <ng-template #purgeOrganizationTemplate></ng-template> <ng-template #apiKeyTemplate></ng-template> <ng-template #rotateApiKeyTemplate></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { OrganizationSubscriptionUpdateRequest } from 'jslib-common/models/request/organizationSubscriptionUpdateRequest';\n\n@Component({\n    selector: 'app-adjust-subscription',\n    templateUrl: 'adjust-subscription.component.html',\n})\nexport class AdjustSubscription {\n    @Input() organizationId: string;\n    @Input() maxAutoscaleSeats: number;\n    @Input() currentSeatCount: number;\n    @Input() seatPrice = 0;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter();\n\n    formPromise: Promise<any>;\n    limitSubscription: boolean;\n    newSeatCount: number;\n    newMaxSeats: number;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private logService: LogService) { }\n\n    ngOnInit() {\n        this.limitSubscription = this.maxAutoscaleSeats != null;\n        this.newSeatCount = this.currentSeatCount;\n        this.newMaxSeats = this.maxAutoscaleSeats;\n    }\n\n    async submit() {\n        try {\n            const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n            const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n            this.formPromise = this.apiService.postOrganizationUpdateSubscription(this.organizationId, request);\n\n            await this.formPromise;\n\n            this.toasterService.popAsync('success', null, this.i18nService.t('subscriptionUpdated'));\n        } catch (e) {\n            this.logService.error(e);\n        }\n        this.onAdjusted.emit();\n    }\n\n    limitSubscriptionChanged() {\n        if (!this.limitSubscription) {\n            this.newMaxSeats = null;\n        }\n    }\n\n    get adjustedSeatTotal(): number {\n        return this.newSeatCount * this.seatPrice;\n    }\n\n    get maxSeatTotal(): number {\n        return this.newMaxSeats * this.seatPrice;\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"newSeatCount\">{{'subscriptionSeats' | i18n}}</label> <input id=\"newSeatCount\" class=\"form-control\" type=\"number\" name=\"NewSeatCount\" [(ngModel)]=\"newSeatCount\" min=\"0\" step=\"1\" required> <small class=\"d-block text-muted mb-4\"> <strong>{{'total' | i18n}}:</strong> {{newSeatCount || 0}} &times; {{seatPrice | currency:'$'}} = {{adjustedSeatTotal | currency:'$'}} / {{interval | i18n}} </small> </div> </div> <div class=\"row mb-4\"> <div class=\"form-group col-sm\"> <div class=\"form-check\"> <input id=\"limitSubscription\" class=\"form-check-input\" type=\"checkbox\" name=\"LimitSubscription\" [(ngModel)]=\"limitSubscription\" (change)=\"limitSubscriptionChanged()\"> <label for=\"limitSubscription\">{{'limitSubscription' | i18n}}</label> </div> <small class=\"d-block text-muted\">{{'limitSubscriptionDesc' | i18n}}</small> </div> </div> <div class=\"row mb-4\" [hidden]=\"!limitSubscription\"> <div class=\"form-group col-sm\"> <label for=\"maxAutoscaleSeats\">{{'maxSeatLimit' | i18n}}</label> <input id=\"maxAutoscaleSeats\" class=\"form-control col-6\" type=\"number\" name=\"MaxAutoscaleSeats\" [(ngModel)]=\"newMaxSeats\" [min]=\"newSeatCount == null ? 1 : newSeatCount\" step=\"1\" [required]=\"limitSubscription\"> <small class=\"d-block text-muted\"> <strong>{{'maxSeatCost' | i18n}}:</strong> {{newMaxSeats || 0}} &times; {{seatPrice | currency:'$'}} = {{maxSeatTotal | currency:'$'}} / {{interval | i18n}} </small> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </div> </form> <app-payment [showMethods]=\"false\"></app-payment> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\n@Component({\n    selector: 'app-change-plan',\n    templateUrl: 'change-plan.component.html',\n})\nexport class ChangePlanComponent {\n    @Input() organizationId: string;\n    @Output() onChanged = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n    defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n    defaultUpgradeProduct: ProductType = ProductType.Families;\n\n    constructor(private logService: LogService) { }\n\n    async submit() {\n        try {\n            this.onChanged.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<div class=\"card card-org-plans\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h2 class=\"card-body-header\">{{'changeBillingPlan' | i18n}}</h2> <p class=\"mb-0\">{{'changeBillingPlanUpgrade' | i18n}}</p> <app-organization-plans [showFree]=\"false\" [showCancel]=\"true\" [plan]=\"defaultUpgradePlan\" [product]=\"defaultUpgradeProduct\" [organizationId]=\"organizationId\" (onCanceled)=\"cancel()\"> </app-organization-plans> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-download-license',\n    templateUrl: 'download-license.component.html',\n})\nexport class DownloadLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onDownloaded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    installationId: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private logService: LogService) { }\n\n    async submit() {\n        if (this.installationId == null || this.installationId === '') {\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.getOrganizationLicense(this.organizationId, this.installationId);\n            const license = await this.formPromise;\n            const licenseString = JSON.stringify(license, null, 2);\n            this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_organization_license.json');\n            this.onDownloaded.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'downloadLicense' | i18n}}</h3> <div class=\"row\"> <div class=\"form-group col-6\"> <div class=\"d-flex\"> <label for=\"installationId\">{{'enterInstallationId' | i18n}}</label> <a class=\"ml-auto\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://help.bitwarden.com/article/licensing-on-premise/#organization-account-sharing\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <input id=\"installationId\" class=\"form-control\" type=\"text\" name=\"InstallationId\" [(ngModel)]=\"installationId\" required> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { UserBillingComponent } from '../../settings/user-billing.component';\n\n@Component({\n    selector: 'app-org-billing',\n    templateUrl: '../../settings/user-billing.component.html',\n})\nexport class OrganizationBillingComponent extends UserBillingComponent implements OnInit {\n    constructor(apiService: ApiService, i18nService: I18nService, toasterService: ToasterService,\n        private route: ActivatedRoute, platformUtilsService: PlatformUtilsService,\n        logService: LogService) {\n        super(apiService, i18nService, toasterService, platformUtilsService, logService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { OrganizationSubscriptionResponse } from 'jslib-common/models/response/organizationSubscriptionResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PlanType } from 'jslib-common/enums/planType';\n\n@Component({\n    selector: 'app-org-subscription',\n    templateUrl: 'organization-subscription.component.html',\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    organizationId: string;\n    adjustSeatsAdd = true;\n    showAdjustSeats = false;\n    showAdjustSeatAutoscale = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    showDownloadLicense = false;\n    showChangePlan = false;\n    sub: OrganizationSubscriptionResponse;\n    selfHosted = false;\n\n    userOrg: Organization;\n\n    removeSponsorshipPromise: Promise<any>;\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private toasterService: ToasterService,\n        private messagingService: MessagingService, private route: ActivatedRoute,\n        private userService: UserService, private logService: LogService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n\n        this.loading = true;\n        this.userOrg = await this.userService.getOrganization(this.organizationId);\n        this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n            await this.reinstatePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n            await this.cancelPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async changePlan() {\n        this.showChangePlan = !this.showChangePlan;\n    }\n\n    closeChangePlan(changed: boolean) {\n        this.showChangePlan = false;\n    }\n\n    downloadLicense() {\n        this.showDownloadLicense = !this.showDownloadLicense;\n    }\n\n    closeDownloadLicense() {\n        this.showDownloadLicense = false;\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(updated: boolean) {\n        this.showUpdateLicense = false;\n        if (updated) {\n            this.load();\n            this.messagingService.send('updatedOrgLicense');\n        }\n    }\n\n    subscriptionAdjusted() {\n        this.load();\n    }\n\n    adjustStorage(add: boolean) {\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    async removeSponsorship() {\n        const isConfirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeSponsorshipConfirmation'),\n            this.i18nService.t('removeSponsorship'),\n            this.i18nService.t('remove'), this.i18nService.t('cancel'), 'warning');\n\n        if (!isConfirmed) {\n            return;\n        }\n\n        try {\n            this.removeSponsorshipPromise = this.apiService.deleteRemoveSponsorship(this.organizationId);\n            await this.removeSponsorshipPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removeSponsorshipSuccess'));\n            await this.load();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    get isExpired() {\n        return this.sub != null && this.sub.expiration != null &&\n            new Date(this.sub.expiration) < new Date();\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get billingInterval() {\n        const monthly = !this.sub.plan.isAnnual;\n        return monthly ? 'month' : 'year';\n    }\n\n    get storageGbPrice() {\n        return this.sub.plan.additionalStoragePricePerGb;\n    }\n\n    get seatPrice() {\n        return this.sub.plan.seatPrice;\n    }\n\n    get seats() {\n        return this.sub.seats;\n    }\n\n    get maxAutoscaleSeats() {\n        return this.sub.maxAutoscaleSeats;\n    }\n\n    get canAdjustSeats() {\n        return this.sub.plan.hasAdditionalSeatsOption;\n    }\n\n    get isSponsoredSubscription(): boolean {\n        return this.sub.subscription?.items.some(i => i.sponsoredSubscriptionItem);\n    }\n\n    get canDownloadLicense() {\n        return (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n            (this.subscription != null && !this.subscription.cancelled);\n    }\n\n    get subscriptionDesc() {\n        if (this.sub.planType === PlanType.Free) {\n            return this.i18nService.t('subscriptionFreePlan', this.sub.seats.toString());\n        } else if (this.sub.planType === PlanType.FamiliesAnnually || this.sub.planType === PlanType.FamiliesAnnually2019) {\n            if (this.isSponsoredSubscription) {\n                return this.i18nService.t('subscriptionSponsoredFamiliesPlan', this.sub.seats.toString());\n            } else {\n                return this.i18nService.t('subscriptionFamiliesPlan', this.sub.seats.toString());\n            }\n        } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n            return this.i18nService.t('subscriptionMaxReached', this.sub.seats.toString());\n        } else if (this.sub.maxAutoscaleSeats == null) {\n            return this.i18nService.t('subscriptionUserSeatsUnlimitedAutoscale');\n        } else {\n            return this.i18nService.t('subscriptionUserSeatsLimitedAutoscale', this.sub.maxAutoscaleSeats.toString());\n        }\n    }\n\n    get showChangePlanButton() {\n        return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n    }\n}\n","<div class=\"page-header\"> <h1> {{'subscription' | i18n}} <small *ngIf=\"firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"sub\"> <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\"> {{'subscriptionCanceled' | i18n}}</app-callout> <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\"> <p>{{'subscriptionPendingCanceled' | i18n}}</p> <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\" [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'reinstateSubscription' | i18n}}</span> </button> </app-callout> <ng-container *ngIf=\"!selfHosted\"> <div class=\"row\"> <div class=\"col-4\"> <dl> <dt>{{'billingPlan' | i18n}}</dt> <dd>{{sub.plan.name}}</dd> <ng-container *ngIf=\"subscription\"> <dt>{{'status' | i18n}}</dt> <dd> <span class=\"text-capitalize\">{{isSponsoredSubscription ? 'sponsored' : subscription.status || '-'}}</span> <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span> </dd> <dt>{{'nextCharge' | i18n}}</dt> <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) : '-'}} </dd> </ng-container> </dl> </div> <div class=\"col-8\" *ngIf=\"subscription\"> <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong> <table class=\"table\"> <tbody> <tr *ngFor=\"let i of subscription.items\"> <td> {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}} </td> <td> {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}} </td> </tr> </tbody> </table> </div> <ng-container *ngIf=\"userOrg?.providerId != null\"> <div class=\"col-sm\"> <dl> <dt>{{'provider' | i18n}}</dt> <dd>{{'yourProviderIs' | i18n : userOrg.providerName}}</dd> </dl> </div> </ng-container> </div> <ng-container> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePlan()\" *ngIf=\"showChangePlanButton\"> {{'changeBillingPlan' | i18n}} </button> <app-change-plan [organizationId]=\"organizationId\" (onChanged)=\"closeChangePlan(true)\" (onCanceled)=\"closeChangePlan(false)\" *ngIf=\"showChangePlan\"></app-change-plan> </ng-container> <h2 class=\"spaced-header\">{{'manageSubscription' | i18n}}</h2> <p class=\"mb-4\">{{subscriptionDesc}}</p> <ng-container *ngIf=\"subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <app-adjust-subscription [seatPrice]=\"seatPrice\" [organizationId]=\"organizationId\" [interval]=\"billingInterval\" [currentSeatCount]=\"seats\" [maxAutoscaleSeats]=\"maxAutoscaleSeats\" (onAdjusted)=\"subscriptionAdjusted()\"> </app-adjust-subscription> </div> </ng-container> <button #removeSponsorshipBtn type=\"button\" class=\"btn btn-outline-danger btn-submit\" (click)=\"removeSponsorship()\" [appApiAction]=\"removeSponsorshipPromise\" [disabled]=\"removeSponsorshipBtn.loading\" *ngIf=\"isSponsoredSubscription\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'removeSponsorship' | i18n}}</span> </button> <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2> <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p> <div class=\"progress\"> <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\" [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\"> {{(storagePercentage / 100) | percent}}</div> </div> <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\"> {{'addStorage' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustStorage(false)\"> {{'removeStorage' | i18n}} </button> </div> <app-adjust-storage [storageGbPrice]=\"storageGbPrice\" [add]=\"adjustStorageAdd\" [organizationId]=\"organizationId\" [interval]=\"billingInterval\" (onAdjusted)=\"closeStorage(true)\" (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage> </div> </ng-container> <h2 class=\"spaced-header\">{{'additionalOptions' | i18n}}</h2> <p class=\"mb-4\"> {{'additionalOptionsDesc' | i18n }} </p> <div class=\"d-flex\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"downloadLicense()\" *ngIf=\"canDownloadLicense\" [disabled]=\"showDownloadLicense\"> {{'downloadLicense' | i18n}} </button> <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-1\" (click)=\"cancel()\" [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\" *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'cancelSubscription' | i18n}}</span> </button> </div> <div class=\"mt-3\" *ngIf=\"showDownloadLicense\"> <app-download-license [organizationId]=\"organizationId\" (onDownloaded)=\"closeDownloadLicense()\" (onCanceled)=\"closeDownloadLicense()\"></app-download-license> </div> </ng-container> <ng-container *ngIf=\"selfHosted\"> <dl> <dt>{{'billingPlan' | i18n}}</dt> <dd>{{sub.plan.name}}</dd> <dt>{{'expiration' | i18n}}</dt> <dd *ngIf=\"sub.expiration\"> {{sub.expiration | date:'mediumDate'}} <span *ngIf=\"isExpired\" class=\"text-danger ml-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'licenseIsExpired' | i18n}} </span> </dd> <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd> </dl> <div> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\"> {{'updateLicense' | i18n}} </button> <a href=\"https://vault.bitwarden.com\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\"> {{'manageSubscription' | i18n}} </a> </div> <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3> <app-update-license [organizationId]=\"organizationId\" (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\"></app-update-license> </div> </div> </ng-container> </ng-container> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent {\n    access2fa = false;\n    selfHosted: boolean;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.selfHosted = await this.platformUtilsService.isSelfHost();\n            const organization = await this.userService.getOrganization(params.organizationId);\n            this.access2fa = organization.use2fa;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myOrganization' | i18n}} </a> <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'subscription' | i18n}} </a> <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\"> {{'billing' | i18n}} </a> <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"access2fa\"> {{'twoStepLogin' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorDuoComponent } from '../../settings/two-factor-duo.component';\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from '../../settings/two-factor-setup.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: '../../settings/two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n    constructor(apiService: ApiService, userService: UserService,\n        modalService: ModalService, messagingService: MessagingService,\n        policyService: PolicyService, private route: ActivatedRoute) {\n        super(apiService, userService, modalService, messagingService, policyService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await super.ngOnInit();\n        });\n    }\n\n    async manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.OrganizationDuo:\n                const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.type = TwoFactorProviderType.OrganizationDuo;\n                duoComp.organizationId = this.organizationId;\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type !== TwoFactorProviderType.OrganizationDuo;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { UpdateTwoFactorAuthenticatorRequest } from 'jslib-common/models/request/updateTwoFactorAuthenticatorRequest';\nimport { TwoFactorAuthenticatorResponse } from 'jslib-common/models/response/twoFactorAuthenticatorResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-authenticator',\n    templateUrl: 'two-factor-authenticator.component.html',\n})\nexport class TwoFactorAuthenticatorComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\n    type = TwoFactorProviderType.Authenticator;\n    key: string;\n    token: string;\n    formPromise: Promise<any>;\n\n    private qrScript: HTMLScriptElement;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, userVerificationService: UserVerificationService,\n        platformUtilsService: PlatformUtilsService, logService: LogService,\n        private userService: UserService) {\n        super(apiService, i18nService, toasterService, platformUtilsService, logService, userVerificationService);\n        this.qrScript = window.document.createElement('script');\n        this.qrScript.src = 'scripts/qrious.min.js';\n        this.qrScript.async = true;\n    }\n\n    ngOnInit() {\n        window.document.body.appendChild(this.qrScript);\n    }\n\n    ngOnDestroy() {\n        window.document.body.removeChild(this.qrScript);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected async enable() {\n        const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n        request.token = this.token;\n        request.key = this.key;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorAuthenticatorResponse) {\n        this.token = null;\n        this.enabled = response.enabled;\n        this.key = response.key;\n        const email = await this.userService.getEmail();\n        window.setTimeout(() => {\n            const qr = new (window as any).QRious({\n                element: document.getElementById('qr'),\n                value: 'otpauth://totp/Bitwarden:' + encodeURIComponent(email) +\n                    '?secret=' + encodeURIComponent(this.key) + '&issuer=Bitwarden',\n                size: 160,\n            });\n        }, 100);\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\"> {{'twoStepLogin' | i18n}} <small>{{'authenticatorAppTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <ng-container *ngIf=\"!enabled\"> <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\"> <p>{{'twoStepAuthenticatorDesc' | i18n}}</p> <p> <strong>1. {{'twoStepAuthenticatorDownloadApp' | i18n}}</strong> </p> </ng-container> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> <p>{{'twoStepLoginProviderEnabled' | i18n}}</p> {{'twoStepAuthenticatorReaddDesc' | i18n}} </app-callout> <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\"> <p>{{'twoStepAuthenticatorNeedApp' | i18n}}</p> </ng-container> <ul class=\"fa-ul\"> <li> <i class=\"fa-li fa fa-apple\"></i>{{'iosDevices' | i18n}}: <a href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\" target=\"_blank\" rel=\"noopener\">Authy</a> </li> <li> <i class=\"fa-li fa fa-android\"></i>{{'androidDevices' | i18n}}: <a href=\"https://play.google.com/store/apps/details?id=com.authy.authy\" target=\"_blank\" rel=\"noopener\">Authy</a> </li> <li> <i class=\"fa-li fa fa-windows\"></i>{{'windowsDevices' | i18n}}: <a href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\" target=\"_blank\" rel=\"noopener\">Microsoft Authenticator</a> </li> </ul> <p>{{'twoStepAuthenticatorAppsRecommended' | i18n}}</p> <p *ngIf=\"!enabled\"> <strong>2. {{'twoStepAuthenticatorScanCode' | i18n}}</strong> </p> <hr *ngIf=\"enabled\"> <p class=\"text-center\" [ngClass]=\"{'mb-0': enabled}\"> <canvas id=\"qr\"></canvas><br> <code appA11yTitle=\"{{'key' | i18n}}\">{{key}}</code> </p> <ng-container *ngIf=\"!enabled\"> <label for=\"token\">3. {{'twoStepAuthenticatorEnterCode' | i18n}}</label> <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required appInputVerbatim> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { TwoFactorEmailRequest } from 'jslib-common/models/request/twoFactorEmailRequest';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { UpdateTwoFactorEmailRequest } from 'jslib-common/models/request/updateTwoFactorEmailRequest';\nimport { TwoFactorEmailResponse } from 'jslib-common/models/response/twoFactorEmailResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-email',\n    templateUrl: 'two-factor-email.component.html',\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Email;\n    email: string;\n    token: string;\n    sentEmail: string;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        logService: LogService, userVerificationService: UserVerificationService,\n        private userService: UserService) {\n        super(apiService, i18nService, toasterService, platformUtilsService, logService, userVerificationService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    async sendEmail() {\n        try {\n            const request = await this.buildRequestModel(TwoFactorEmailRequest);\n            request.email = this.email;\n            this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n            await this.emailPromise;\n            this.sentEmail = this.email;\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    protected async enable() {\n        const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n        request.email = this.email;\n        request.token = this.token;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorEmail(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorEmailResponse) {\n        this.token = null;\n        this.email = response.email;\n        this.enabled = response.enabled;\n        if (!this.enabled && (this.email == null || this.email === '')) {\n            this.email = await this.userService.getEmail();\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faEmailTitle\"> {{'twoStepLogin' | i18n}} <small>{{'emailTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <strong>{{'email' | i18n}}:</strong> {{email}} </ng-container> <ng-container *ngIf=\"!enabled\"> <p class=\"d-flex\"> <span class=\"mr-3\">{{'twoFactorEmailDesc' | i18n}}</span> <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\"> </p> <div class=\"form-group\"> <label for=\"email\">1. {{'twoFactorEmailEnterEmail' | i18n}}</label> <input id=\"email\" type=\"text\" name=\"Email\" class=\"form-control\" [(ngModel)]=\"email\" required inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"mb-3 d-flex\"> <button #sendBtn type=\"button\" class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\" (click)=\"sendEmail()\" [appApiAction]=\"emailPromise\" [disabled]=\"sendBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'sendEmail' | i18n}}</span> </button> <span class=\"text-success ml-3\" *ngIf=\"sentEmail\"> {{'verificationCodeEmailSent' | i18n : sentEmail}} </span> </div> <div class=\"form-group\"> <label for=\"token\">2. {{'twoFactorEmailEnterCode' | i18n}}</label> <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required appInputVerbatim> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { TwoFactorRecoverResponse } from 'jslib-common/models/response/twoFactorRescoverResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\n@Component({\n    selector: 'app-two-factor-recovery',\n    templateUrl: 'two-factor-recovery.component.html',\n})\nexport class TwoFactorRecoveryComponent {\n    type = -1;\n    code: string;\n    authed: boolean;\n    twoFactorProviderType = TwoFactorProviderType;\n\n    constructor(private i18nService: I18nService) { }\n\n    auth(authResponse: any) {\n        this.authed = true;\n        this.processResponse(authResponse.response);\n    }\n\n    print() {\n        const w = window.open();\n        w.document.write('<div style=\"font-size: 18px; text-align: center;\">' +\n            '<p>' + this.i18nService.t('twoFactorRecoveryYourCode') + ':</p>' +\n            '<code style=\"font-family: Menlo, Monaco, Consolas, \\'Courier New\\', monospace;\">' +\n            this.code + '</code></div>' +\n            '<p style=\"text-align: center;\">' + new Date() + '</p>');\n        w.onafterprint = () => w.close();\n        w.print();\n    }\n\n    private formatString(s: string) {\n        if (s == null) {\n            return null;\n        }\n        return s.replace(/(.{4})/g, '$1 ').trim().toUpperCase();\n    }\n\n    private processResponse(response: TwoFactorRecoverResponse) {\n        this.code = this.formatString(response.code);\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faRecoveryTitle\"> {{'twoStepLogin' | i18n}} <small>{{'recoveryCodeTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <ng-container *ngIf=\"authed\"> <div class=\"modal-body text-center\"> <ng-container *ngIf=\"code\"> <p>{{'twoFactorRecoveryYourCode' | i18n}}:</p> <code class=\"text-lg\">{{code}}</code> </ng-container> <ng-container *ngIf=\"!code\"> {{'twoFactorRecoveryNoCode' | i18n}} </ng-container> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">{{'printCode' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </ng-container> </div> </div> </div> ","import {\n    Component,\n    NgZone,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { SecretVerificationRequest } from 'jslib-common/models/request/secretVerificationRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from 'jslib-common/models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from 'jslib-common/models/request/updateTwoFactorWebAuthnRequest';\nimport {\n    ChallengeResponse,\n    TwoFactorWebAuthnResponse,\n} from 'jslib-common/models/response/twoFactorWebAuthnResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-webauthn',\n    templateUrl: 'two-factor-webauthn.component.html',\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.WebAuthn;\n    name: string;\n    keys: any[];\n    keyIdAvailable: number = null;\n    keysConfiguredCount = 0;\n    webAuthnError: boolean;\n    webAuthnListening: boolean;\n    webAuthnResponse: PublicKeyCredential;\n    challengePromise: Promise<ChallengeResponse>;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private ngZone: NgZone, logService: LogService, userVerificationService: UserVerificationService) {\n        super(apiService, i18nService, toasterService, platformUtilsService, logService, userVerificationService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    async submit() {\n        if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n            // Should never happen.\n            return Promise.reject();\n        }\n        const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n        request.deviceResponse = this.webAuthnResponse;\n        request.id = this.keyIdAvailable;\n        request.name = this.name;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    disable() {\n        return super.disable(this.formPromise);\n    }\n\n    async remove(key: any) {\n        if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n            return;\n        }\n        const name = key.name != null ? key.name : this.i18nService.t('webAuthnkeyX', key.id);\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeU2fConfirmation'), name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n        const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n        request.id = key.id;\n        try {\n            key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n            const response = await key.removePromise;\n            key.removePromise = null;\n            await this.processResponse(response);\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async readKey() {\n        if (this.keyIdAvailable == null) {\n            return;\n        }\n        const request = await this.buildRequestModel(SecretVerificationRequest);\n        try {\n            this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n            const challenge = await this.challengePromise;\n            this.readDevice(challenge);\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    private readDevice(webAuthnChallenge: ChallengeResponse) {\n        // tslint:disable-next-line\n        console.log('listening for key...');\n        this.resetWebAuthn(true);\n\n        navigator.credentials.create({\n            publicKey: webAuthnChallenge,\n        }).then((data: PublicKeyCredential) => {\n            this.ngZone.run(() => {\n                this.webAuthnListening = false;\n                this.webAuthnResponse = data;\n            });\n        }).catch(err => {\n            // tslint:disable-next-line\n            console.error(err);\n            this.resetWebAuthn(false);\n            // TODO: Should we display the actual error?\n            this.webAuthnError = true;\n        });\n    }\n\n    private resetWebAuthn(listening = false) {\n        this.webAuthnResponse = null;\n        this.webAuthnError = false;\n        this.webAuthnListening = listening;\n    }\n\n    private processResponse(response: TwoFactorWebAuthnResponse) {\n        this.resetWebAuthn();\n        this.keys = [];\n        this.keyIdAvailable = null;\n        this.name = null;\n        this.keysConfiguredCount = 0;\n        for (let i = 1; i <= 5; i++) {\n            if (response.keys != null) {\n                const key = response.keys.filter(k => k.id === i);\n                if (key.length > 0) {\n                    this.keysConfiguredCount++;\n                    this.keys.push({\n                        id: i, name: key[0].name,\n                        configured: true,\n                        migrated: key[0].migrated,\n                        removePromise: null,\n                    });\n                    continue;\n                }\n            }\n            this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n            if (this.keyIdAvailable == null) {\n                this.keyIdAvailable = i;\n            }\n        }\n        this.enabled = response.enabled;\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\"> <div class=\"modal-dialog modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faU2fTitle\"> {{'twoStepLogin' | i18n}} <small>{{'webAuthnTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <app-callout type=\"warning\"> <p>{{'twoFactorWebAuthnWarning' | i18n}}</p> <ul class=\"mb-0\"> <li>{{'twoFactorWebAuthnSupportWeb' | i18n}}</li> </ul> </app-callout> <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\"> <ul class=\"fa-ul\"> <li *ngFor=\"let k of keys; let i = index\" #removeKeyBtn [appApiAction]=\"k.removePromise\"> <i class=\"fa-li fa fa-key\"></i> <strong *ngIf=\"!k.configured || !k.name\">{{'webAuthnkeyX' | i18n : i + 1}}</strong> <strong *ngIf=\"k.configured && k.name\">{{k.name}}</strong> <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\"> <ng-container *ngIf=\"k.migrated\"> <span>{{'webAuthnMigrated' | i18n}}</span> </ng-container> </ng-container> <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\"> <i class=\"fa fa-spin fa-spinner text-muted fa-fw\" title=\"{{'loading' | i18n}}\" *ngIf=\"removeKeyBtn.loading\" aria-hidden=\"true\"></i> - <a href=\"#\" appStopClick (click)=\"remove(k)\">{{'remove' | i18n}}</a> </ng-container> </li> </ul> <hr> <p>{{'twoFactorWebAuthnAdd' | i18n}}:</p> <ol> <li>{{'twoFactorU2fGiveName' | i18n}}</li> <li>{{'twoFactorU2fPlugInReadKey' | i18n}}</li> <li>{{'twoFactorU2fTouchButton' | i18n}}</li> <li>{{'twoFactorU2fSaveForm' | i18n}}</li> </ol> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" type=\"text\" name=\"Name\" class=\"form-control\" [(ngModel)]=\"name\" [disabled]=\"!keyIdAvailable\"> </div> </div> <button type=\"button\" (click)=\"readKey()\" class=\"btn btn-outline-secondary mr-2\" [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\" #readKeyBtn [appApiAction]=\"challengePromise\"> {{'readKey' | i18n}} </button> <ng-container *ngIf=\"readKeyBtn.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i> </ng-container> <ng-container *ngIf=\"!readKeyBtn.loading\"> <ng-container *ngIf=\"webAuthnListening\"> <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i> {{'twoFactorU2fWaiting' | i18n}}... </ng-container> <ng-container *ngIf=\"webAuthnResponse\"> <i class=\"fa fa-check-circle text-success\" aria-hidden=\"true\"></i> {{'twoFactorU2fClickSave' | i18n}} </ng-container> <ng-container *ngIf=\"webAuthnError\"> <i class=\"fa fa-warning text-danger\" aria-hidden=\"true\"></i> {{'twoFactorU2fProblemReadingTryAgain' | i18n}} </ng-container> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || !webAuthnResponse\"> <i class=\"fa fa-spinner fa-spin\" *ngIf=\"form.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!form.loading\">{{'save' | i18n}}</span> </button> <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\" *ngIf=\"enabled\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'disableAllKeys' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { UpdateTwoFactorYubioOtpRequest } from 'jslib-common/models/request/updateTwoFactorYubioOtpRequest';\nimport { TwoFactorYubiKeyResponse } from 'jslib-common/models/response/twoFactorYubiKeyResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-yubikey',\n    templateUrl: 'two-factor-yubikey.component.html',\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Yubikey;\n    keys: any[];\n    nfc = false;\n\n    formPromise: Promise<any>;\n    disablePromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        logService: LogService, userVerificationService: UserVerificationService) {\n        super(apiService, i18nService, toasterService, platformUtilsService, logService, userVerificationService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    async submit() {\n        const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n        request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n        request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n        request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n        request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n        request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n        request.nfc = this.nfc;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n            this.toasterService.popAsync('success', null, this.i18nService.t('yubikeysUpdated'));\n        });\n    }\n\n    disable() {\n        return super.disable(this.disablePromise);\n    }\n\n    remove(key: any) {\n        key.existingKey = null;\n        key.key = null;\n    }\n\n    private processResponse(response: TwoFactorYubiKeyResponse) {\n        this.enabled = response.enabled;\n        this.keys = [\n            { key: response.key1, existingKey: this.padRight(response.key1) },\n            { key: response.key2, existingKey: this.padRight(response.key2) },\n            { key: response.key3, existingKey: this.padRight(response.key3) },\n            { key: response.key4, existingKey: this.padRight(response.key4) },\n            { key: response.key5, existingKey: this.padRight(response.key5) },\n        ];\n        this.nfc = response.nfc || !response.enabled;\n    }\n\n    private padRight(str: string, character = '•', size = 44) {\n        if (str == null || character == null || str.length >= size) {\n            return str;\n        }\n        const max = (size - str.length) / character.length;\n        for (let i = 0; i < max; i++) {\n            str += character;\n        }\n        return str;\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\"> <div class=\"modal-dialog modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\"> {{'twoStepLogin' | i18n}} <small>YubiKey</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\" autocomplete=\"off\"> <div class=\"modal-body\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <app-callout type=\"warning\"> <p>{{'twoFactorYubikeyWarning' | i18n}}</p> <ul class=\"mb-0\"> <li>{{'twoFactorYubikeySupportUsb' | i18n}}</li> <li>{{'twoFactorYubikeySupportMobile' | i18n}}</li> </ul> </app-callout> <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\"> <p>{{'twoFactorYubikeyAdd' | i18n}}:</p> <ol> <li>{{'twoFactorYubikeyPlugIn' | i18n}}</li> <li>{{'twoFactorYubikeySelectKey' | i18n}}</li> <li>{{'twoFactorYubikeyTouchButton' | i18n}}</li> <li>{{'twoFactorYubikeySaveForm' | i18n}}</li> </ol> <hr> <div class=\"row\"> <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\"> <label for=\"key{{i + 1}}\">{{'yubikeyX' | i18n : i + 1}}</label> <input id=\"key{{i + 1}}\" type=\"password\" name=\"Key{{i + 1}}\" class=\"form-control\" [(ngModel)]=\"k.key\" *ngIf=\"!k.existingKey\" appInputVerbatim autocomplete=\"new-password\"> <div class=\"d-flex\" *ngIf=\"k.existingKey\"> <span class=\"mr-2\">{{k.existingKey}}</span> <button type=\"button\" class=\"btn btn-link text-danger ml-auto\" (click)=\"remove(k)\" appA11yTitle=\"{{'remove' | i18n}}\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <strong class=\"d-block mb-2\">{{'nfcSupport' | i18n}}</strong> <div class=\"form-check\"> <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\"> <label class=\"form-check-label\" for=\"nfc\">{{'twoFactorYubikeySupportsNfc' | i18n}}</label> </div> <small class=\"form-text text-muted\">{{'twoFactorYubikeySupportsNfcDesc' | i18n}}</small> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\" *ngIf=\"enabled\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'disableAllKeys' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { ExportComponent as BaseExportComponent } from '../../tools/export.component';\n\n@Component({\n    selector: 'app-org-export',\n    templateUrl: '../../tools/export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService, private route: ActivatedRoute, policyService: PolicyService,\n        logService: LogService, userVerificationService: UserVerificationService, fb: FormBuilder) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService, policyService,\n            logService, userVerificationService, fb);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n        });\n    }\n\n    async checkExportDisabled() {\n        return;\n    }\n\n    getExportData() {\n        return this.exportService.getOrganizationExport(this.organizationId, this.format);\n    }\n\n    getFileName() {\n        return super.getFileName('org');\n    }\n\n    async collectEvent(): Promise<any> {\n        // TODO\n        // await this.eventService.collect(EventType.Organization_ClientExportedVault);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport {\n    ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent,\n} from '../../tools/exposed-passwords-report.component';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: '../../tools/exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, auditService: AuditService,\n        modalService: ModalService, messagingService: MessagingService,\n        userService: UserService, passwordRepromptService: PasswordRepromptService, private route: ActivatedRoute) {\n        super(cipherService, auditService, modalService, messagingService, userService, passwordRepromptService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import { AttachmentResponse } from '../response/attachmentResponse';\n\nexport class AttachmentData {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response?: AttachmentResponse) {\n        if (response == null) {\n            return;\n        }\n        this.id = response.id;\n        this.url = response.url;\n        this.fileName = response.fileName;\n        this.key = response.key;\n        this.size = response.size;\n        this.sizeName = response.sizeName;\n    }\n}\n","import { CardApi } from '../api/cardApi';\n\nexport class CardData {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data?: CardApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.cardholderName = data.cardholderName;\n        this.brand = data.brand;\n        this.number = data.number;\n        this.expMonth = data.expMonth;\n        this.expYear = data.expYear;\n        this.code = data.code;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\nimport { LinkedIdType } from '../../enums/linkedIdType';\n\nimport { FieldApi } from '../api/fieldApi';\n\nexport class FieldData {\n    type: FieldType;\n    name: string;\n    value: string;\n    linkedId: LinkedIdType;\n\n    constructor(response?: FieldApi) {\n        if (response == null) {\n            return;\n        }\n        this.type = response.type;\n        this.name = response.name;\n        this.value = response.value;\n        this.linkedId = response.linkedId;\n    }\n}\n","import { IdentityApi } from '../api/identityApi';\n\nexport class IdentityData {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data?: IdentityApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.title = data.title;\n        this.firstName = data.firstName;\n        this.middleName = data.middleName;\n        this.lastName = data.lastName;\n        this.address1 = data.address1;\n        this.address2 = data.address2;\n        this.address3 = data.address3;\n        this.city = data.city;\n        this.state = data.state;\n        this.postalCode = data.postalCode;\n        this.country = data.country;\n        this.company = data.company;\n        this.email = data.email;\n        this.phone = data.phone;\n        this.ssn = data.ssn;\n        this.username = data.username;\n        this.passportNumber = data.passportNumber;\n        this.licenseNumber = data.licenseNumber;\n    }\n}\n","import { LoginApi } from '../api/loginApi';\n\nimport { LoginUriData } from './loginUriData';\n\nexport class LoginData {\n    uris: LoginUriData[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n    autofillOnPageLoad: boolean;\n\n    constructor(data?: LoginApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.username = data.username;\n        this.password = data.password;\n        this.passwordRevisionDate = data.passwordRevisionDate;\n        this.totp = data.totp;\n        this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n        if (data.uris) {\n            this.uris = data.uris.map(u => new LoginUriData(u));\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriApi } from '../api/loginUriApi';\n\nexport class LoginUriData {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data?: LoginUriApi) {\n        if (data == null) {\n            return;\n        }\n        this.uri = data.uri;\n        this.match = data.match;\n    }\n}\n","import { PasswordHistoryResponse } from '../response/passwordHistoryResponse';\n\nexport class PasswordHistoryData {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response?: PasswordHistoryResponse) {\n        if (response == null) {\n            return;\n        }\n\n        this.password = response.password;\n        this.lastUsedDate = response.lastUsedDate;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class SecureNoteData {\n    type: SecureNoteType;\n\n    constructor(data?: SecureNoteApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.type = data.type;\n    }\n}\n","import { AttachmentData } from '../data/attachmentData';\n\nimport { AttachmentView } from '../view/attachmentView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nexport class Attachment extends Domain {\n    id: string;\n    url: string;\n    size: string;\n    sizeName: string;\n    key: EncString;\n    fileName: EncString;\n\n    constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, alreadyEncrypted, ['id', 'url', 'sizeName']);\n    }\n\n    async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n        const view = await this.decryptObj(new AttachmentView(this), {\n            fileName: null,\n        }, orgId, encKey);\n\n        if (this.key != null) {\n            let cryptoService: CryptoService;\n            const containerService = (Utils.global as any).bitwardenContainerService;\n            if (containerService) {\n                cryptoService = containerService.getCryptoService();\n            } else {\n                throw new Error('global bitwardenContainerService not initialized.');\n            }\n\n            try {\n                const orgKey = await cryptoService.getOrgKey(orgId);\n                const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n                view.key = new SymmetricCryptoKey(decValue);\n            } catch (e) {\n                // TODO: error?\n            }\n        }\n\n        return view;\n    }\n\n    toAttachmentData(): AttachmentData {\n        const a = new AttachmentData();\n        a.size = this.size;\n        this.buildDataModel(this, a, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, ['id', 'url', 'sizeName']);\n        return a;\n    }\n}\n","import { PasswordHistoryData } from '../data/passwordHistoryData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { PasswordHistoryView } from '../view/passwordHistoryView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Password extends Domain {\n    password: EncString;\n    lastUsedDate: Date;\n\n    constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            password: null,\n        }, alreadyEncrypted);\n        this.lastUsedDate = new Date(obj.lastUsedDate);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n         return this.decryptObj(new PasswordHistoryView(this), {\n            password: null,\n        }, orgId, encKey);\n    }\n\n    toPasswordHistoryData(): PasswordHistoryData {\n        const ph = new PasswordHistoryData();\n        ph.lastUsedDate = this.lastUsedDate.toISOString();\n        this.buildDataModel(this, ph, {\n            password: null,\n        });\n        return ph;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherCreateRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class CardApi extends BaseResponse {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.cardholderName = this.getResponseProperty('CardholderName');\n        this.brand = this.getResponseProperty('Brand');\n        this.number = this.getResponseProperty('Number');\n        this.expMonth = this.getResponseProperty('ExpMonth');\n        this.expYear = this.getResponseProperty('ExpYear');\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { FieldType } from '../../enums/fieldType';\nimport { LinkedIdType } from '../../enums/linkedIdType';\n\nexport class FieldApi extends BaseResponse {\n    name: string;\n    value: string;\n    type: FieldType;\n    linkedId: LinkedIdType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.value = this.getResponseProperty('Value');\n        this.linkedId = this.getResponseProperty('linkedId');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class IdentityApi extends BaseResponse {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.title = this.getResponseProperty('Title');\n        this.firstName = this.getResponseProperty('FirstName');\n        this.middleName = this.getResponseProperty('MiddleName');\n        this.lastName = this.getResponseProperty('LastName');\n        this.address1 = this.getResponseProperty('Address1');\n        this.address2 = this.getResponseProperty('Address2');\n        this.address3 = this.getResponseProperty('Address3');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n        this.company = this.getResponseProperty('Company');\n        this.email = this.getResponseProperty('Email');\n        this.phone = this.getResponseProperty('Phone');\n        this.ssn = this.getResponseProperty('SSN');\n        this.username = this.getResponseProperty('Username');\n        this.passportNumber = this.getResponseProperty('PassportNumber');\n        this.licenseNumber = this.getResponseProperty('LicenseNumber');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { LoginUriApi } from './loginUriApi';\n\nexport class LoginApi extends BaseResponse {\n    uris: LoginUriApi[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n    autofillOnPageLoad: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.username = this.getResponseProperty('Username');\n        this.password = this.getResponseProperty('Password');\n        this.passwordRevisionDate = this.getResponseProperty('PasswordRevisionDate');\n        this.totp = this.getResponseProperty('Totp');\n        this.autofillOnPageLoad = this.getResponseProperty('AutofillOnPageLoad');\n\n        const uris = this.getResponseProperty('Uris');\n        if (uris != null) {\n            this.uris = uris.map((u: any) => new LoginUriApi(u));\n        }\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { UriMatchType } from '../../enums/uriMatchType';\n\nexport class LoginUriApi extends BaseResponse {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.uri = this.getResponseProperty('Uri');\n        const match = this.getResponseProperty('Match');\n        this.match = match != null ? match : null;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class SecureNoteApi extends BaseResponse {\n    type: SecureNoteType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    Renderer2,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NgControl,\n    NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n    selector: 'input[type=checkbox][appTrueFalseValue]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TrueFalseValueDirective),\n            multi: true,\n        },\n    ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n    @Input() trueValue = true;\n    @Input() falseValue = false;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\n\n    @HostListener('change', ['$event'])\n    onHostChange(ev: any) {\n        this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n    }\n\n    writeValue(obj: any): void {\n        if (obj === this.trueValue) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', true);\n        } else {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', false);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void { /* nothing */ }\n\n    setDisabledState?(isDisabled: boolean): void { /* nothing */ }\n\n    private propagateChange = (_: any) => { /* nothing */ };\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    Input,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appFallbackSrc]',\n})\nexport class FallbackSrcDirective {\n    @Input('appFallbackSrc') appFallbackSrc: string;\n\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('error') onError() {\n        this.el.nativeElement.src = this.appFallbackSrc;\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { ImportService } from 'jslib-common/abstractions/import.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ImportComponent as BaseImportComponent } from '../../tools/import.component';\n\n@Component({\n    selector: 'app-org-import',\n    templateUrl: '../../tools/import.component.html',\n})\nexport class ImportComponent extends BaseImportComponent {\n    organizationName: string;\n\n    constructor(i18nService: I18nService, toasterService: ToasterService,\n        importService: ImportService, router: Router, private route: ActivatedRoute,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private userService: UserService, logService: LogService) {\n        super(i18nService, toasterService, importService, router, platformUtilsService, policyService, logService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            this.successNavigate = ['organizations', this.organizationId, 'vault'];\n            await super.ngOnInit();\n            this.importBlockedByPolicy = false;\n        });\n        const organization = await this.userService.getOrganization(this.organizationId);\n        this.organizationName = organization.name;\n    }\n\n    async submit() {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('importWarning', this.organizationName),\n            this.i18nService.t('warning'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n        super.submit();\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport {\n    InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent,\n} from '../../tools/inactive-two-factor-report.component';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: '../../tools/inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n    constructor(cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute, logService: LogService, passwordRepromptService: PasswordRepromptService) {\n        super(cipherService, modalService, messagingService, userService, logService, passwordRepromptService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport {\n    ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent,\n} from '../../tools/reused-passwords-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: '../../tools/reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService, passwordRepromptService: PasswordRepromptService,\n        private route: ActivatedRoute) {\n        super(cipherService, modalService, messagingService, userService, passwordRepromptService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent {\n    organization: Organization;\n    accessReports = false;\n    loading = true;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private messagingService: MessagingService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            this.accessReports = this.organization.useTotp;\n            this.loading = false;\n        });\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n    }\n}\n","<div class=\"container page-content\"> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\"> <div class=\"card-header\">{{'tools' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'importData' | i18n}} </a> <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exportVault' | i18n}} </a> </div> </div> <div class=\"card\" *ngIf=\"organization.canAccessReports\"> <div class=\"card-header d-flex\"> {{'reports' | i18n}} <div class=\"ml-auto\"> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!accessReports\" (click)=\"upgradeOrganization()\"> {{'upgrade' | i18n}} </a> </div> </div> <div class=\"list-group list-group-flush\"> <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exposedPasswordsReport' | i18n}} </a> <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'reusedPasswordsReport' | i18n}} </a> <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'weakPasswordsReport' | i18n}} </a> <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'unsecuredWebsitesReport' | i18n}} </a> <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'inactive2faReport' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </ng-container> </div> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport {\n    UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent,\n} from '../../tools/unsecured-websites-report.component';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: '../../tools/unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n    constructor(cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService, passwordRepromptService: PasswordRepromptService,\n        private route: ActivatedRoute) {\n        super(cipherService, modalService, messagingService, userService, passwordRepromptService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport {\n    WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent,\n} from '../../tools/weak-passwords-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: '../../tools/weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, passwordGenerationService: PasswordGenerationService,\n        modalService: ModalService, messagingService: MessagingService,\n        userService: UserService, passwordRepromptService: PasswordRepromptService, private route: ActivatedRoute) {\n        super(cipherService, passwordGenerationService, modalService, messagingService, userService,\n            passwordRepromptService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { first } from 'rxjs/operators';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PlanSponsorshipType } from 'jslib-common/enums/planSponsorshipType';\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { OrganizationSponsorshipRedeemRequest } from 'jslib-common/models/request/organization/organizationSponsorshipRedeemRequest';\n\nimport { DeleteOrganizationComponent } from 'src/app/organizations/settings/delete-organization.component';\n\nimport { OrganizationPlansComponent } from 'src/app/settings/organization-plans.component';\n\n@Component({\n    selector: 'families-for-enterprise-setup',\n    templateUrl: 'families-for-enterprise-setup.component.html',\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit {\n    @ViewChild(OrganizationPlansComponent, { static: false })\n    set organizationPlansComponent(value: OrganizationPlansComponent) {\n        if (!value) {\n            return;\n        }\n\n        value.plan = PlanType.FamiliesAnnually;\n        value.product = ProductType.Families;\n        value.acceptingSponsorship = true;\n        value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n    }\n\n    @ViewChild('deleteOrganizationTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n\n    loading = true;\n    badToken = false;\n    formPromise: Promise<any>;\n\n    token: string;\n    existingFamilyOrganizations: Organization[];\n\n    showNewOrganization: boolean = false;\n    _organizationPlansComponent: OrganizationPlansComponent;\n    _selectedFamilyOrganizationId: string = '';\n\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private syncService: SyncService,\n        private validationService: ValidationService, private userService: UserService,\n        private modalService: ModalService) { }\n\n    async ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        this.route.queryParams.pipe(first()).subscribe(async qParams => {\n            const error = qParams.token == null;\n            if (error) {\n                const toast: Toast = {\n                    type: 'error',\n                    title: null,\n                    body: this.i18nService.t('sponsoredFamiliesAcceptFailed'),\n                    timeout: 10000,\n                };\n                this.toasterService.popAsync(toast);\n                this.router.navigate(['/']);\n                return;\n            }\n\n            this.token = qParams.token;\n\n            await this.syncService.fullSync(true);\n            this.badToken = !await this.apiService.postPreValidateSponsorshipToken(this.token);\n            this.loading = false;\n\n            this.existingFamilyOrganizations = (await this.userService.getAllOrganizations())\n                .filter(o => o.planProductType === ProductType.Families);\n\n            if (this.existingFamilyOrganizations.length === 0) {\n                this.selectedFamilyOrganizationId = 'createNew';\n            }\n        });\n    }\n\n    async submit() {\n        this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n        await this.formPromise;\n        this.formPromise = null;\n    }\n\n    get selectedFamilyOrganizationId() {\n        return this._selectedFamilyOrganizationId;\n    }\n\n    set selectedFamilyOrganizationId(value: string) {\n        this._selectedFamilyOrganizationId = value;\n        this.showNewOrganization = value === 'createNew';\n    }\n\n    private async doSubmit(organizationId: string) {\n        try {\n            const request = new OrganizationSponsorshipRedeemRequest();\n            request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n            request.sponsoredOrganizationId = organizationId;\n\n            await this.apiService.postRedeemSponsorship(this.token, request);\n            this.toasterService.popAsync('success', null, this.i18nService.t('sponsoredFamiliesOfferRedeemed'));\n            await this.syncService.fullSync(true);\n\n            this.router.navigate(['/']);\n        } catch (e) {\n            if (this.showNewOrganization) {\n                await this.modalService.openViewRef(DeleteOrganizationComponent, this.deleteModalRef, comp => {\n                    comp.organizationId = organizationId;\n                    comp.descriptionKey = 'orgCreatedSponsorshipInvalid';\n                    comp.onSuccess.subscribe(() => {\n                        this.router.navigate(['/']);\n                    });\n                });\n            }\n            this.validationService.showError(this.i18nService.t('sponsorshipTokenHasExpired'));\n        }\n    }\n\n    private async onOrganizationCreateSuccess(value: any) {\n        // Use newly created organization id\n        await this.doSubmit(value.organizationId);\n    }\n}\n","<div class=\"container page-content\"> <div class=\"page-header\"> <h1>{{'sponsoredFamiliesOffer' | i18n}}</h1> </div> <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\"> <span>{{'badToken' | i18n}}</span> </div> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!loading && !badToken\"> <p> <span>{{'acceptBitwardenFamiliesHelp' | i18n}}</span> </p> <div class=\"form-group col-6\"> <label for=\"availableSponsorshipOrg\">{{ 'sponsoredFamiliesSelectOffer' | i18n}}</label> <select id=\"availableSponsorshipOrg\" name=\"Available Sponsorship Organization\" [(ngModel)]=\"selectedFamilyOrganizationId\" class=\"form-control\" required> <option value=\"\" disabled=\"disabled\">-- {{'select' | i18n}} --</option> <option value=\"createNew\">{{'newFamiliesOrganization' | i18n}}</option> <option *ngFor=\"let o of existingFamilyOrganizations\" [ngValue]=\"o.id\">{{o.name}}</option> </select> </div> <div *ngIf=\"showNewOrganization\" class=\"col-12\"> <app-organization-plans></app-organization-plans> </div> <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\"> <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'acceptOffer' | i18n}}</span> </button> </div> </form> </div> <ng-template #deleteOrganizationTemplate></ng-template> ","export enum PlanSponsorshipType {\n    FamiliesForEnterprise = 0,\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from '../../vault/attachments.component';\n\n@Component({\n    selector: 'app-org-vault-attachments',\n    templateUrl: '../../vault/attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = false;\n    organization: Organization;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService,\n        logService: LogService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService,\n            logService);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n            await super.reuploadCipherAttachment(attachment, true);\n        }\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canEditAnyCollection) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file, this.organization.canEditAnyCollection);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        if (!this.organization.canEditAnyCollection) {\n            return super.deleteCipherAttachment(attachmentId);\n        }\n        return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.organization.canEditAnyCollection;\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Output() onUploadedAttachment = new EventEmitter();\n    @Output() onDeletedAttachment = new EventEmitter();\n    @Output() onReuploadedAttachment = new EventEmitter();\n\n    cipher: CipherView;\n    cipherDomain: Cipher;\n    hasUpdatedKey: boolean;\n    canAccessAttachments: boolean;\n    formPromise: Promise<any>;\n    deletePromises: { [id: string]: Promise<any>; } = {};\n    reuploadPromises: { [id: string]: Promise<any>; } = {};\n    emergencyAccessId?: string = null;\n\n    constructor(protected cipherService: CipherService, protected i18nService: I18nService,\n        protected cryptoService: CryptoService, protected userService: UserService,\n        protected platformUtilsService: PlatformUtilsService, protected apiService: ApiService,\n        protected win: Window, private logService: LogService) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit() {\n        if (!this.hasUpdatedKey) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        if (files[0].size > 524288000) { // 500 MB\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('maxFileSize'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.saveCipherAttachment(files[0]);\n            this.cipherDomain = await this.formPromise;\n            this.cipher = await this.cipherDomain.decrypt();\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n            this.onUploadedAttachment.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        // reset file input\n        // ref: https://stackoverflow.com/a/20552042\n        fileEl.type = '';\n        fileEl.type = 'file';\n        fileEl.value = '';\n    }\n\n    async delete(attachment: AttachmentView) {\n        if (this.deletePromises[attachment.id] != null) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteAttachmentConfirmation'), this.i18nService.t('deleteAttachment'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n            await this.deletePromises[attachment.id];\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedAttachment'));\n            const i = this.cipher.attachments.indexOf(attachment);\n            if (i > -1) {\n                this.cipher.attachments.splice(i, 1);\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        this.deletePromises[attachment.id] = null;\n        this.onDeletedAttachment.emit();\n    }\n\n    async download(attachment: AttachmentView) {\n        const a = (attachment as any);\n        if (a.downloading) {\n            return;\n        }\n\n        if (!this.canAccessAttachments) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('premiumRequired'),\n                this.i18nService.t('premiumRequiredDesc'));\n            return;\n        }\n\n        let url: string;\n        try {\n            const attachmentDownloadResponse = await this.apiService.getAttachmentData(this.cipher.id, attachment.id,\n                this.emergencyAccessId);\n            url = attachmentDownloadResponse.url;\n        } catch (e) {\n            if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n                url = attachment.url;\n            } else if (e instanceof ErrorResponse) {\n                throw new Error((e as ErrorResponse).getSingleMessage());\n            } else {\n                throw e;\n            }\n        }\n\n        a.downloading = true;\n        const response = await fetch(new Request(url, { cache: 'no-store' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            a.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const key = attachment.key != null ? attachment.key :\n                await this.cryptoService.getOrgKey(this.cipher.organizationId);\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n            this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        a.downloading = false;\n    }\n\n    protected async init() {\n        this.cipherDomain = await this.loadCipher();\n        this.cipher = await this.cipherDomain.decrypt();\n\n        this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n        const canAccessPremium = await this.userService.canAccessPremium();\n        this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n        if (!this.canAccessAttachments) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=purchase');\n            }\n        } else if (!this.hasUpdatedKey) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateKey'), this.i18nService.t('featureUnavailable'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'), 'warning');\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://help.bitwarden.com/article/update-encryption-key/');\n            }\n        }\n    }\n\n    protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n        const a = (attachment as any);\n        if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n            return;\n        }\n\n        try {\n            this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n                // 1. Download\n                a.downloading = true;\n                const response = await fetch(new Request(attachment.url, { cache: 'no-store' }));\n                if (response.status !== 200) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                    a.downloading = false;\n                    return;\n                }\n\n                try {\n                    // 2. Resave\n                    const buf = await response.arrayBuffer();\n                    const key = attachment.key != null ? attachment.key :\n                        await this.cryptoService.getOrgKey(this.cipher.organizationId);\n                    const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n                    this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n                        this.cipherDomain, attachment.fileName, decBuf, admin);\n                    this.cipher = await this.cipherDomain.decrypt();\n\n                    // 3. Delete old\n                    this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n                    await this.deletePromises[attachment.id];\n                    const foundAttachment = this.cipher.attachments.filter(a2 => a2.id === attachment.id);\n                    if (foundAttachment.length > 0) {\n                        const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n                        if (i > -1) {\n                            this.cipher.attachments.splice(i, 1);\n                        }\n                    }\n\n                    this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n                    this.onReuploadedAttachment.emit();\n                } catch (e) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                }\n\n                a.downloading = false;\n            });\n            await this.reuploadPromises[attachment.id];\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherCollectionsRequest } from 'jslib-common/models/request/cipherCollectionsRequest';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from '../../vault/collections.component';\n\n@Component({\n    selector: 'app-org-vault-collections',\n    templateUrl: '../../vault/collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService,\n        private apiService: ApiService, logService: LogService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n        this.allowSelectNone = true;\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canViewAllCollections) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected loadCipherCollections() {\n        if (!this.organization.canViewAllCollections) {\n            return super.loadCipherCollections();\n        }\n        return this.collectionIds;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.canViewAllCollections) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected saveCollections() {\n        if (this.organization.canEditAnyCollection) {\n            const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n            return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n        } else {\n            return super.saveCollections();\n        }\n    }\n}\n","export class CipherCollectionsRequest {\n    collectionIds: string[];\n\n    constructor(collectionIds: string[]) {\n        this.collectionIds = collectionIds == null ? [] : collectionIds;\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { EntityEventsComponent } from '../manage/entity-events.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { GroupingsComponent } from './groupings.component';\n\nconst BroadcasterSubscriptionId = 'OrgVaultComponent';\n\n@Component({\n    selector: 'app-org-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n\n    organization: Organization;\n    collectionId: string = null;\n    type: CipherType = null;\n    deleted: boolean = false;\n    trashCleanupWarning: string = null;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private syncService: SyncService, private i18nService: I18nService,\n        private modalService: ModalService, private messagingService: MessagingService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.trashCleanupWarning = this.i18nService.t(\n            this.platformUtilsService.isSelfHost() ? 'trashCleanupWarningSelfHosted' : 'trashCleanupWarning'\n        );\n\n        this.route.parent.params.pipe(first()).subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.groupingsComponent.organization = this.organization;\n            this.ciphersComponent.organization = this.organization;\n\n            this.route.queryParams.pipe(first()).subscribe(async qParams => {\n                this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\n                if (!this.organization.canViewAllCollections) {\n                    await this.syncService.fullSync(false);\n                    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                        this.ngZone.run(async () => {\n                            switch (message.command) {\n                                case 'syncCompleted':\n                                    if (message.successfully) {\n                                        await Promise.all([\n                                            this.groupingsComponent.load(),\n                                            this.ciphersComponent.refresh(),\n                                        ]);\n                                        this.changeDetectorRef.detectChanges();\n                                    }\n                                    break;\n                            }\n                        });\n                    });\n                }\n                await this.groupingsComponent.load();\n\n                if (qParams == null) {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                } else {\n                    if (qParams.deleted) {\n                        this.groupingsComponent.selectedTrash = true;\n                        await this.filterDeleted(true);\n                    } else if (qParams.type) {\n                        const t = parseInt(qParams.type, null);\n                        this.groupingsComponent.selectedType = t;\n                        await this.filterCipherType(t, true);\n                    } else if (qParams.collectionId) {\n                        this.groupingsComponent.selectedCollectionId = qParams.collectionId;\n                        await this.filterCollection(qParams.collectionId, true);\n                    } else {\n                        this.groupingsComponent.selectedAll = true;\n                        await this.ciphersComponent.reload();\n                    }\n                }\n\n                if (qParams.viewEvents != null) {\n                    const cipher = this.ciphersComponent.ciphers.filter(c => c.id === qParams.viewEvents);\n                    if (cipher.length > 0) {\n                        this.viewEvents(cipher[0]);\n                    }\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.applyFilter();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        const filter = (c: CipherView) => c.type === type;\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        const filter = (c: CipherView) => {\n            if (collectionId === 'unassigned') {\n                return c.collectionIds == null || c.collectionIds.length === 0;\n            } else {\n                return c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1;\n            }\n        };\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    async filterDeleted(load: boolean = false) {\n        this.ciphersComponent.showAddNew = false;\n        this.ciphersComponent.deleted = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\n        if (load) {\n            await this.ciphersComponent.reload(null, true);\n        } else {\n            await this.ciphersComponent.applyFilter(null);\n        }\n        this.clearFilters();\n        this.deleted = true;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    async editCipherAttachments(cipher: CipherView) {\n        if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n            this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n            return;\n        }\n\n        let madeAttachmentChanges = false;\n\n        const [modal] = await this.modalService.openViewRef(AttachmentsComponent, this.attachmentsModalRef, comp => {\n            comp.organization = this.organization;\n            comp.cipherId = cipher.id;\n            comp.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n            comp.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n        });\n\n        modal.onClosed.subscribe(async () => {\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    async editCipherCollections(cipher: CipherView) {\n        const [modal] = await this.modalService.openViewRef(CollectionsComponent, this.collectionsModalRef, comp => {\n            if (this.organization.canEditAnyCollection) {\n                comp.collectionIds = cipher.collectionIds;\n                comp.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n            }\n            comp.organization = this.organization;\n            comp.cipherId = cipher.id;\n            comp.onSavedCollections.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async addCipher() {\n        const component = await this.editCipher(null);\n        component.organizationId = this.organization.id;\n        component.type = this.type;\n        if (this.organization.canEditAnyCollection) {\n            component.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n        }\n        if (this.collectionId != null) {\n            component.collectionIds = [this.collectionId];\n        }\n    }\n\n    async editCipher(cipher: CipherView) {\n        const [modal, childComponent] = await this.modalService.openViewRef(AddEditComponent, this.cipherAddEditModalRef, comp => {\n            comp.organization = this.organization;\n            comp.cipherId = cipher == null ? null : cipher.id;\n            comp.onSavedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n            comp.onDeletedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n            comp.onRestoredCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n\n        return childComponent;\n    }\n\n    async cloneCipher(cipher: CipherView) {\n        const component = await this.editCipher(cipher);\n        component.cloneMode = true;\n        component.organizationId = this.organization.id;\n        if (this.organization.canEditAnyCollection) {\n            component.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n        }\n        // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n        // in the add-edit componenet\n        component.collectionIds = cipher.collectionIds;\n    }\n\n    async viewEvents(cipher: CipherView) {\n        await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, comp => {\n            comp.name = cipher.name;\n            comp.organizationId = this.organization.id;\n            comp.entityId = cipher.id;\n            comp.showUser = true;\n            comp.entity = 'cipher';\n        });\n    }\n\n    private clearFilters() {\n        this.collectionId = null;\n        this.type = null;\n        this.deleted = false;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                type: this.type,\n                collectionId: this.collectionId,\n                deleted: this.deleted ? true : null,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <app-org-vault-groupings [showFolders]=\"false\" [showFavorites]=\"false\" [showTrash]=\"true\" (onAllClicked)=\"clearGroupingFilters()\" (onCipherTypeClicked)=\"filterCipherType($event)\" (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\" (onTrashClicked)=\"filterDeleted()\"> </app-org-vault-groupings> </div> <div class=\"col-9\"> <div class=\"page-header d-flex\"> <h1> {{'vault' | i18n}} <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [deleted]=\"deleted\" [organization]=\"organization\"> </app-vault-bulk-actions> <button type=\"button\" class=\"btn btn-outline-primary btn-sm ml-auto\" (click)=\"addCipher()\" *ngIf=\"!deleted\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}} </button> </div> </div> <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"fa-warning\"> {{trashCleanupWarning}} </app-callout> <app-org-vault-ciphers (onCipherClicked)=\"editCipher($event)\" (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\" (onCollectionsClicked)=\"editCipherCollections($event)\" (onEventsClicked)=\"viewEvents($event)\" (onCloneClicked)=\"cloneCipher($event)\"> </app-org-vault-ciphers> </div> </div> </div> <ng-template #attachments></ng-template> <ng-template #cipherAddEdit></ng-template> <ng-template #collections></ng-template> <ng-template #eventsTemplate></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherBulkDeleteRequest } from 'jslib-common/models/request/cipherBulkDeleteRequest';\n\n@Component({\n    selector: 'app-vault-bulk-delete',\n    templateUrl: 'bulk-delete.component.html',\n})\nexport class BulkDeleteComponent {\n    @Input() cipherIds: string[] = [];\n    @Input() permanent: boolean = false;\n    @Input() organization: Organization;\n    @Output() onDeleted = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private apiService: ApiService) { }\n\n    async submit() {\n        if (!this.organization || !this.organization.canEditAnyCollection) {\n            await this.deleteCiphers();\n        } else {\n            await this.deleteCiphersAdmin();\n        }\n\n        await this.formPromise;\n\n        this.onDeleted.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t(this.permanent ? 'permanentlyDeletedItems'\n            : 'deletedItems'));\n    }\n\n    private async deleteCiphers() {\n        if (this.permanent) {\n            this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n        } else {\n            this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n        }\n    }\n\n    private async deleteCiphersAdmin() {\n        const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n        if (this.permanent) {\n            this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n        } else {\n            this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteSelectedTitle\"> {{(permanent ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> {{(permanent ? 'permanentlyDeleteSelectedItemsDesc' : 'deleteSelectedItemsDesc') | i18n: cipherIds.length}} </div> <div class=\"modal-footer\"> <button appAutoFocus type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(permanent ? 'permanentlyDelete' : 'delete') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","export class CipherBulkDeleteRequest {\n    ids: string[];\n    organizationId: string;\n\n    constructor(ids: string[], organizationId?: string) {\n        this.ids = ids == null ? [] : ids;\n        this.organizationId = organizationId;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\n@Component({\n    selector: 'app-vault-bulk-move',\n    templateUrl: 'bulk-move.component.html',\n})\nexport class BulkMoveComponent implements OnInit {\n    @Input() cipherIds: string[] = [];\n    @Output() onMoved = new EventEmitter();\n\n    folderId: string = null;\n    folders: FolderView[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private folderService: FolderService) { }\n\n    async ngOnInit() {\n        this.folders = await this.folderService.getAllDecrypted();\n        this.folderId = this.folders[0].id;\n    }\n\n    async submit() {\n        this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n        await this.formPromise;\n        this.onMoved.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t('movedItems'));\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"moveSelectedTitle\"> {{'moveSelected' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'moveSelectedItemsDesc' | i18n: cipherIds.length}}</p> <div class=\"form-group\"> <label for=\"folder\">{{'folder' | i18n}}</label> <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\"> <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option> </select> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-vault-bulk-restore',\n    templateUrl: 'bulk-restore.component.html',\n})\nexport class BulkRestoreComponent {\n    @Input() cipherIds: string[] = [];\n    @Output() onRestored = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService) { }\n\n    async submit() {\n        this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n        await this.formPromise;\n        this.onRestored.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t('restoredItems'));\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"restoreSelectedTitle\"> {{'restoreSelected' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> {{'restoreSelectedItemsDesc' | i18n: cipherIds.length}} </div> <div class=\"modal-footer\"> <button appAutoFocus type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'restore' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-vault-bulk-share',\n    templateUrl: 'bulk-share.component.html',\n})\nexport class BulkShareComponent implements OnInit {\n    @Input() ciphers: CipherView[] = [];\n    @Input() organizationId: string;\n    @Output() onShared = new EventEmitter();\n\n    nonShareableCount = 0;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n    shareableCiphers: CipherView[] = [];\n    formPromise: Promise<any>;\n\n    private writeableCollections: CollectionView[] = [];\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private collectionService: CollectionService,\n        private userService: UserService, private logService: LogService) { }\n\n    async ngOnInit() {\n        this.shareableCiphers = this.ciphers.filter(c => !c.hasOldAttachments && c.organizationId == null);\n        this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.filter(c => !c.readOnly);\n        this.organizations = await this.userService.getAllOrganizations();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    filterCollections() {\n        this.selectAll(false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit() {\n        const checkedCollectionIds = this.collections.filter(c => (c as any).checked).map(c => c.id);\n        try {\n            this.formPromise = this.cipherService.shareManyWithServer(this.shareableCiphers, this.organizationId,\n                checkedCollectionIds);\n            await this.formPromise;\n            this.onShared.emit();\n            const orgName = this.organizations.find(o => o.id === this.organizationId)?.name ?? this.i18nService.t('organization');\n            this.toasterService.popAsync('success', null, this.i18nService.t('movedItemsToOrg', orgName));\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach(c => this.check(c, select));\n    }\n\n    get canSave() {\n        if (this.shareableCiphers != null && this.shareableCiphers.length > 0 && this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\"> {{'moveSelectedToOrg' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'moveManyToOrgDesc' | i18n}}</p> <p>{{'moveSelectedItemsCountDesc' | i18n: this.ciphers.length : shareableCiphers.length : nonShareableCount}} </p> <div class=\"form-group\"> <label for=\"organization\">{{'organization' | i18n}}</label> <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\" (change)=\"filterCollections()\"> <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option> </select> </div> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\" [ngClass]=\"{loading:form.loading}\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { SendAccess } from 'jslib-common/models/domain/sendAccess';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { SendAccessView } from 'jslib-common/models/view/sendAccessView';\n\nimport { SendType } from 'jslib-common/enums/sendType';\nimport { SendAccessRequest } from 'jslib-common/models/request/sendAccessRequest';\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\nimport { SendAccessResponse } from 'jslib-common/models/response/sendAccessResponse';\n\n@Component({\n    selector: 'app-send-access',\n    templateUrl: 'access.component.html',\n})\nexport class AccessComponent implements OnInit {\n    send: SendAccessView;\n    sendType = SendType;\n    downloading = false;\n    loading = true;\n    passwordRequired = false;\n    formPromise: Promise<SendAccessResponse>;\n    password: string;\n    showText = false;\n    unavailable = false;\n    error = false;\n    hideEmail = false;\n\n    private id: string;\n    private key: string;\n    private decKey: SymmetricCryptoKey;\n    private accessRequest: SendAccessRequest;\n\n    constructor(private i18nService: I18nService, private cryptoFunctionService: CryptoFunctionService,\n        private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private route: ActivatedRoute, private cryptoService: CryptoService) {\n    }\n\n    get sendText() {\n        if (this.send == null || this.send.text == null) {\n            return null;\n        }\n        return this.showText ? this.send.text.text : this.send.text.maskedText;\n    }\n\n    get expirationDate() {\n        if (this.send == null || this.send.expirationDate == null) {\n            return null;\n        }\n        return this.send.expirationDate;\n    }\n\n    get creatorIdentifier() {\n        if (this.send == null || this.send.creatorIdentifier == null) {\n            return null;\n        }\n        return this.send.creatorIdentifier;\n    }\n\n    ngOnInit() {\n        this.route.params.subscribe(async params => {\n            this.id = params.sendId;\n            this.key = params.key;\n            if (this.key == null || this.id == null) {\n                return;\n            }\n            await this.load();\n        });\n    }\n\n    async download() {\n        if (this.send == null || this.decKey == null) {\n            return;\n        }\n\n        if (this.downloading) {\n            return;\n        }\n\n\n        const downloadData = await this.apiService.getSendFileDownloadData(this.send, this.accessRequest);\n\n        if (Utils.isNullOrWhitespace(downloadData.url)) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('missingSendFile'));\n            return;\n        }\n\n        this.downloading = true;\n        const response = await fetch(new Request(downloadData.url, { cache: 'no-store' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            this.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, this.decKey);\n            this.platformUtilsService.saveFile(window, decBuf, null, this.send.file.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        this.downloading = false;\n    }\n\n    copyText() {\n        this.platformUtilsService.copyToClipboard(this.send.text.text);\n        this.platformUtilsService.showToast('success', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('sendTypeText')));\n    }\n\n    toggleText() {\n        this.showText = !this.showText;\n    }\n\n    async load() {\n        this.unavailable = false;\n        this.error = false;\n        this.hideEmail = false;\n        const keyArray = Utils.fromUrlB64ToArray(this.key);\n        this.accessRequest = new SendAccessRequest();\n        if (this.password != null) {\n            const passwordHash = await this.cryptoFunctionService.pbkdf2(this.password, keyArray, 'sha256', 100000);\n            this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n        }\n        try {\n            let sendResponse: SendAccessResponse = null;\n            if (this.loading) {\n                sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n            } else {\n                this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n                sendResponse = await this.formPromise;\n            }\n            this.passwordRequired = false;\n            const sendAccess = new SendAccess(sendResponse);\n            this.decKey = await this.cryptoService.makeSendKey(keyArray);\n            this.send = await sendAccess.decrypt(this.decKey);\n            this.showText = this.send.text != null ? !this.send.text.hidden : true;\n        } catch (e) {\n            if (e instanceof ErrorResponse) {\n                if (e.statusCode === 401) {\n                    this.passwordRequired = true;\n                } else if (e.statusCode === 404) {\n                    this.unavailable = true;\n                } else {\n                    this.error = true;\n                }\n            }\n        }\n        this.loading = false;\n        this.hideEmail = this.creatorIdentifier == null && !this.passwordRequired && !this.loading && !this.unavailable;\n    }\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-center mt-5\"> <div class=\"col-12\"> <p class=\"lead text-center mb-4\">Bitwarden Send</p> </div> <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\"> <p>{{'sendCreatorIdentifier' | i18n: creatorIdentifier }}</p> </div> <div class=\"col-8\" *ngIf=\"hideEmail\"> <app-callout type=\"warning\" title=\"{{'warning' | i18n}}\"> {{'viewSendHiddenEmailWarning' | i18n }} <a href=\"https://bitwarden.com/help/article/receive-send/\" target=\"_blank\">{{'learnMore' | i18n}}</a>. </app-callout> </div> </div> <div class=\"row justify-content-center\"> <div class=\"col-5\"> <div class=\"card d-block\"> <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\"> <p>{{'sendProtectedPassword' | i18n}}</p> <p>{{'sendProtectedPasswordDontKnow' | i18n}}</p> <div class=\"form-group\"> <label for=\"password\">{{'password' | i18n}}</label> <input id=\"password\" type=\"password\" name=\"Password\" class=\"text-monospace form-control\" [(ngModel)]=\"password\" required appInputVerbatim appAutofocus> </div> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"card-body\" *ngIf=\"!loading && unavailable\"> {{'sendAccessUnavailable' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loading && error\"> {{'unexpectedError' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\"> <p class=\"text-center\"><b>{{send.name}}</b></p> <hr> <ng-container *ngIf=\"send.type === sendType.Text\"> <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{'sendHiddenByDefault' | i18n}}</app-callout> <div class=\"form-group\"> <textarea id=\"text\" rows=\"8\" name=\"Text\" [(ngModel)]=\"sendText\" class=\"form-control\" readonly=\"readonly\"></textarea> </div> <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"toggleText()\" *ngIf=\"send.text.hidden\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showText, 'fa-eye-slash': showText}\"></i> {{'toggleVisibility' | i18n}} </button> <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\"> <i class=\"fa fa-copy\" aria-hidden=\"true\"></i> {{'copyValue' | i18n}} </button> </ng-container> <ng-container *ngIf=\"send.type === sendType.File\"> <p>{{send.file.fileName}}</p> <button class=\"btn btn-primary btn-block\" type=\"button\" (click)=\"download()\" *ngIf=\"!downloading\"> <i class=\"fa fa-download\" aria-hidden=\"true\"></i> {{'downloadFile' | i18n}} ({{send.file.sizeName}})</button> <button class=\"btn btn-primary btn-block\" type=\"button\" *ngIf=\"downloading\" disabled=\"true\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </ng-container> <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">Expires: {{expirationDate | date: 'medium'}}</p> </div> </div> </div> <div class=\"col-12 text-center mt-5 text-muted\"> <p class=\"mb-0\">{{'sendAccessTaglineProductDesc' | i18n}}<br> {{'sendAccessTaglineLearnMore' | i18n}} <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\">Bitwarden Send</a> {{'sendAccessTaglineOr' | i18n}} <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{'sendAccessTaglineSignUp' | i18n}}</a> {{'sendAccessTaglineTryToday' | i18n}} </p> </div> </div> </form> ","import { DatePipe } from '@angular/common';\n\nimport { Component } from '@angular/core';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib-angular/components/send/add-edit.component';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\n@Component({\n    selector: 'app-send-add-edit',\n    templateUrl: 'add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    constructor(i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        environmentService: EnvironmentService, datePipe: DatePipe,\n        sendService: SendService, userService: UserService,\n        messagingService: MessagingService, policyService: PolicyService,\n        logService: LogService) {\n        super(i18nService, platformUtilsService, environmentService, datePipe, sendService, userService,\n            messagingService, policyService, logService);\n    }\n\n    async copyLinkToClipboard(link: string): Promise<void | boolean> {\n        // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n        // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n        return new Promise(resolve => {\n            window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n        });\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"send\"> <app-callout *ngIf=\"disableSend\"> <span>{{'sendDisabledWarning' | i18n}}</span> </app-callout> <app-callout *ngIf=\"!disableSend && disableHideEmail\"> <span>{{'sendOptionsPolicyInEffect' | i18n}}</span> <ul class=\"mb-0\"> <li>{{'sendDisableHideEmailInEffect' | i18n}}</li> </ul> </app-callout> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"send.name\" required [readOnly]=\"disableSend\"> <small class=\"form-text text-muted\">{{'sendNameDesc' | i18n}}</small> </div> </div> <div class=\"row\" *ngIf=\"!editMode\"> <div class=\"col-6 form-group\"> <label>{{'whatTypeOfSend' | i18n}}</label> <div class=\"form-check\" *ngFor=\"let o of typeOptions\"> <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"send.type\" name=\"Type_{{o.value}}\" id=\"type_{{o.value}}\" [value]=\"o.value\" (change)=\"typeChanged(o)\" [checked]=\"send.type === o.value\"> <label class=\"form-check-label\" for=\"type_{{o.value}}\"> {{o.name}} </label> </div> </div> </div> <ng-container *ngIf=\"send.type === sendType.Text\"> <div class=\"form-group\"> <label for=\"text\">{{'sendTypeText' | i18n}}</label> <textarea id=\"text\" name=\"Text.Text\" rows=\"6\" [(ngModel)]=\"send.text.text\" class=\"form-control\" [readOnly]=\"disableSend\"></textarea> <small class=\"form-text text-muted\">{{'sendTextDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.text.hidden\" id=\"text-hidden\" name=\"Text.Hidden\" [disabled]=\"disableSend\"> <label class=\"form-check-label\" for=\"text-hidden\">{{'textHiddenByDefault' | i18n}}</label> </div> </div> </ng-container> <ng-container *ngIf=\"send.type === sendType.File\"> <div class=\"form-group\"> <div *ngIf=\"editMode\"> <strong class=\"d-block\">{{'file' | i18n}}</strong> {{send.file.fileName}} ({{send.file.sizeName}}) </div> <div *ngIf=\"!editMode\"> <label for=\"file\">{{'file' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required [disabled]=\"disableSend\"> <small class=\"form-text text-muted\">{{'sendFileDesc' | i18n}} {{'maxFileSize' | i18n}}</small> </div> </div> </ng-container> <h3 class=\"mt-5\">{{'share' | i18n}}</h3> <div class=\"form-group\" *ngIf=\"link\"> <label for=\"link\">{{'sendLinkLabel' | i18n}}</label> <input type=\"text\" readonly=\"readonly\" id=\"link\" name=\"Link\" [(ngModel)]=\"link\" class=\"form-control\"> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"copyLink\" id=\"copy-link\" name=\"CopyLink\"> <label class=\"form-check-label\" for=\"copy-link\">{{'copySendLinkOnSave' | i18n}}</label> </div> </div> <div id=\"options-header\" class=\"section-header d-flex flex-row align-items-center mt-5\" (click)=\"toggleOptions()\"> <h3 class=\"mb-0 mr-2\">{{'options' | i18n}}</h3> <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\"> <i class=\"fa\" aria-hidden=\"true\" [ngClass]=\"{'fa-chevron-down': !showOptions, 'fa-chevron-up': showOptions}\"></i> </a> </div> <div id=\"options\" [hidden]=\"!showOptions\"> <app-send-efflux-dates [initialDeletionDate]=\"send.deletionDate\" [initialExpirationDate]=\"send.expirationDate\" [editMode]=\"editMode\" [disabled]=\"disableSend\" (datesChanged)=\"setDates($event)\"> </app-send-efflux-dates> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"maxAccessCount\">{{'maxAccessCount' | i18n}}</label> <input id=\"maxAccessCount\" class=\"form-control\" type=\"number\" name=\"MaxAccessCount\" [(ngModel)]=\"send.maxAccessCount\" min=\"1\" [readOnly]=\"disableSend\"> <div class=\"form-text text-muted small\">{{'maxAccessCountDesc' | i18n}}</div> </div> <div class=\"col-6 form-group\" *ngIf=\"editMode\"> <label for=\"accessCount\">{{'currentAccessCount' | i18n}}</label> <input id=\"accessCount\" class=\"form-control\" type=\"text\" name=\"AccessCount\" readonly=\"readonly\" [(ngModel)]=\"send.accessCount\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"password\" *ngIf=\"!hasPassword\">{{'password' | i18n}}</label> <label for=\"password\" *ngIf=\"hasPassword\">{{'newPassword' | i18n}}</label> <div class=\"input-group\"> <input id=\"password\" class=\"form-control text-monospace\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Password\" [(ngModel)]=\"password\" [readOnly]=\"disableSend\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePasswordVisible()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-text text-muted small\">{{'sendPasswordDesc' | i18n}}</div> </div> </div> <div class=\"form-group\"> <label for=\"notes\">{{'notes' | i18n}}</label> <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"send.notes\" class=\"form-control\" [readOnly]=\"disableSend\"></textarea> <div class=\"form-text text-muted small\">{{'sendNotesDesc' | i18n}}</div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.hideEmail\" id=\"hideEmail\" name=\"HideEmail\" [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"> <label class=\"form-check-label\" for=\"hideEmail\"> {{'hideEmail' | i18n}} </label> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.disabled\" id=\"disabled\" name=\"Disabled\" [disabled]=\"disableSend\"> <label class=\"form-check-label\" for=\"disabled\">{{'disableThisSend' | i18n}}</label> </div> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [ngClass]=\"{loading:form.loading}\" [disabled]=\"form.loading || disableSend\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\" *ngIf=\"send\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { SendType } from '../../enums/sendType';\nimport { Utils } from '../../misc/utils';\n\nimport { Send } from '../domain/send';\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\n\nimport { SendFileView } from './sendFileView';\nimport { SendTextView } from './sendTextView';\nimport { View } from './view';\n\nexport class SendView implements View {\n    id: string = null;\n    accessId: string = null;\n    name: string = null;\n    notes: string = null;\n    key: ArrayBuffer;\n    cryptoKey: SymmetricCryptoKey;\n    type: SendType = null;\n    text = new SendTextView();\n    file = new SendFileView();\n    maxAccessCount?: number = null;\n    accessCount: number = 0;\n    revisionDate: Date = null;\n    deletionDate: Date = null;\n    expirationDate: Date = null;\n    password: string = null;\n    disabled: boolean = false;\n    hideEmail: boolean = false;\n\n    constructor(s?: Send) {\n        if (!s) {\n            return;\n        }\n\n        this.id = s.id;\n        this.accessId = s.accessId;\n        this.type = s.type;\n        this.maxAccessCount = s.maxAccessCount;\n        this.accessCount = s.accessCount;\n        this.revisionDate = s.revisionDate;\n        this.deletionDate = s.deletionDate;\n        this.expirationDate = s.expirationDate;\n        this.disabled = s.disabled;\n        this.password = s.password;\n        this.hideEmail = s.hideEmail;\n    }\n\n    get urlB64Key(): string {\n        return Utils.fromBufferToUrlB64(this.key);\n    }\n\n    get maxAccessCountReached(): boolean {\n        if (this.maxAccessCount == null) {\n            return false;\n        }\n        return this.accessCount >= this.maxAccessCount;\n    }\n\n    get expired(): boolean {\n        if (this.expirationDate == null) {\n            return false;\n        }\n        return this.expirationDate <= new Date();\n    }\n\n    get pendingDelete(): boolean {\n        return this.deletionDate <= new Date();\n    }\n}\n","import { DatePipe } from '@angular/common';\n\nimport { Component } from '@angular/core';\n\nimport { ControlContainer, NgForm } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from 'jslib-angular/components/send/efflux-dates.component';\n\n@Component({\n    selector: 'app-send-efflux-dates',\n    templateUrl: 'efflux-dates.component.html',\n    viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n    constructor(protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected datePipe: DatePipe) {\n        super(i18nService, platformUtilsService, datePipe);\n    }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\"> <div class=\"col-6 form-group\"> <label for=\"deletionDate\">{{'deletionDate' | i18n}}</label> <ng-template #deletionDateCustom> <ng-container [ngSwitch]=\"browserPath\"> <ng-container *ngSwitchCase=\"'firefox'\"> <div class=\"d-flex justify-content-around\"> <input id=\"deletionDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"DeletionDateFallback\" formControlName=\"fallbackDeletionDate\" required placeholder=\"MM/DD/YYYY\" [readOnly]=\"disableSend\" data-date-format=\"mm/dd/yyyy\"> <input id=\"deletionTimeCustomFallback\" class=\"form-control mt-1 ml-1\" type=\"time\" name=\"DeletionTimeDate\" formControlName=\"fallbackDeletionTime\" required placeholder=\"HH:MM AM/PM\" [readOnly]=\"disableSend\"> </div> </ng-container> <ng-container *ngSwitchCase=\"'safari'\"> <div class=\"d-flex justify-content-around\"> <input id=\"deletionDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"DeletionDateFallback\" formControlName=\"fallbackDeletionDate\" required placeholder=\"MM/DD/YYYY\" [readOnly]=\"disableSend\" data-date-format=\"mm/dd/yyyy\"> <select id=\"deletionTimeCustomFallback\" class=\"form-control mt-1 ml-1\" [required]=\"!editMode\" formControlName=\"fallbackDeletionTime\" name=\"SafariDeletionTime\"> <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">{{o.twelveHour}}</option> </select> </div> </ng-container> <ng-container *ngSwitchDefault> <input id=\"deletionDateCustom\" class=\"form-control mt-1\" type=\"datetime-local\" name=\"DeletionDate\" formControlName=\"defaultDeletionDateTime\" required placeholder=\"MM/DD/YYYY HH:MM AM/PM\" [readOnly]=\"disabled\"> </ng-container> </ng-container> </ng-template> <div *ngIf=\"!editMode\"> <select id=\"deletionDate\" name=\"SelectedDeletionDatePreset\" formControlName=\"selectedDeletionDatePreset\" class=\"form-control\" required> <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\"> <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container> </ng-container> </div> <div *ngIf=\"editMode\"> <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container> </div> <div class=\"form-text text-muted small\">{{'deletionDateDesc' | i18n}}</div> </div> <div class=\"col-6 form-group\"> <div class=\"d-flex\"> <label for=\"expirationDate\">{{'expirationDate' | i18n}}</label> <a href=\"#\" appStopClick (click)=\"clearExpiration()\" class=\"ml-auto\" *ngIf=\"editMode && !disabled\"> {{'clear' | i18n}} </a> </div> <ng-template #expirationDateCustom> <ng-container [ngSwitch]=\"browserPath\"> <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\"> <input id=\"expirationDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"ExpirationDateFallback\" formControlName=\"fallbackExpirationDate\" [required]=\"!editMode\" placeholder=\"MM/DD/YYYY\" [readOnly]=\"disabled\" data-date-format=\"mm/dd/yyyy\"> <input id=\"expirationTimeCustomFallback\" class=\"form-control mt-1 ml-1\" type=\"time\" name=\"ExpirationTimeFallback\" formControlName=\"fallbackExpirationTime\" [required]=\"!editMode\" placeholder=\"HH:MM AM/PM\" [readOnly]=\"disabled\"> </div> <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\"> <input id=\"expirationDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"ExpirationDateFallback\" formControlName=\"fallbackExpirationDate\" [required]=\"!editMode\" placeholder=\"MM/DD/YYYY\" [readOnly]=\"disabled\" data-date-format=\"mm/dd/yyyy\"> <select id=\"expirationTimeCustomFallback\" class=\"form-control mt-1 ml-1\" [required]=\"!editMode\" formControlName=\"fallbackExpirationTime\" name=\"SafariExpirationTime\"> <option *ngFor=\"let o of safariExpirationTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">{{o.twelveHour}}</option> </select> </div> <ng-container *ngSwitchDefault> <input id=\"expirationDateCustom\" class=\"form-control mt-1\" type=\"datetime-local\" name=\"ExpirationDate\" formControlName=\"defaultExpirationDateTime\" placeholder=\"MM/DD/YYYY HH:MM AM/PM\" [readOnly]=\"disabled\"> </ng-container> </ng-container> </ng-template> <div *ngIf=\"!editMode\"> <select id=\"expirationDate\" name=\"SelectedExpirationDatePreset\" formControlName=\"selectedExpirationDatePreset\" class=\"form-control\" required> <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\"> <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container> </ng-container> </div> <div *ngIf=\"editMode\"> <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container> </div> <div class=\"form-text text-muted small\">{{'expirationDateDesc' | i18n}}</div> </div> </div> ","import {\n    Component,\n    NgZone,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { SendComponent as BaseSendComponent } from 'jslib-angular/components/send/send.component';\n\nimport { AddEditComponent } from './add-edit.component';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nconst BroadcasterSubscriptionId = 'SendComponent';\n\n@Component({\n    selector: 'app-send',\n    templateUrl: 'send.component.html',\n})\nexport class SendComponent extends BaseSendComponent {\n    @ViewChild('sendAddEdit', { read: ViewContainerRef, static: true }) sendAddEditModalRef: ViewContainerRef;\n\n    constructor(sendService: SendService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, environmentService: EnvironmentService,\n        ngZone: NgZone, searchService: SearchService, policyService: PolicyService, userService: UserService,\n        private modalService: ModalService, private broadcasterService: BroadcasterService,\n        logService: LogService) {\n        super(sendService, i18nService, platformUtilsService, environmentService, ngZone, searchService,\n            policyService, userService, logService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        await this.load();\n\n        // Broadcaster subscription - load if sync completes in the background\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'syncCompleted':\n                        if (message.successfully) {\n                            await this.load();\n                        }\n                        break;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async addSend() {\n        if (this.disableSend) {\n            return;\n        }\n\n        const component = await this.editSend(null);\n        component.type = this.type;\n    }\n\n    async editSend(send: SendView) {\n        const [modal, childComponent] = await this.modalService.openViewRef(AddEditComponent, this.sendAddEditModalRef, comp => {\n            comp.sendId = send == null ? null : send.id;\n            comp.onSavedSend.subscribe(async (s: SendView) => {\n                modal.close();\n                await this.load();\n            });\n            comp.onDeletedSend.subscribe(async (s: SendView) => {\n                modal.close();\n                await this.load();\n            });\n        });\n\n        return childComponent;\n    }\n}\n","<div class=\"container page-content\"> <app-callout type=\"warning\" title=\"{{'sendDisabled' | i18n}}\" *ngIf=\"disableSend\"> <span>{{'sendDisabledWarning' | i18n}}</span> </app-callout> <div class=\"row\"> <div class=\"col-3 groupings\"> <div class=\"card vault-filters\"> <div class=\"card-header d-flex\"> {{'filters' | i18n}} </div> <div class=\"card-body\"> <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchSends' | i18n)}}\" id=\"search\" class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\" appAutofocus> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedAll}\"> <a href=\"#\" appStopClick (click)=\"selectAll()\"> <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allSends' | i18n}} </a> </li> </ul> <h3>{{'types' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedType === sendType.Text}\"> <a href=\"#\" appStopClick (click)=\"selectType(sendType.Text)\"> <i class=\"fa-li fa fa-fw fa-file-text-o\"></i>{{'sendTypeText' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === sendType.File}\"> <a href=\"#\" appStopClick (click)=\"selectType(sendType.File)\"> <i class=\"fa-li fa fa-fw fa-file-o\"></i>{{'sendTypeFile' | i18n}} </a> </li> </ul> </div> </div> </div> <div class=\"col-9\"> <div class=\"page-header d-flex\"> <h1> {{'send' | i18n}} <small #actionSpinner [appApiAction]=\"actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addSend()\" [disabled]=\"disableSend\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'createSend' | i18n}} </button> </div> </div> <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\"> <tbody> <tr *ngFor=\"let s of filteredSends\"> <td class=\"table-list-icon\"> <div class=\"icon\" aria-hidden=\"true\"> <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"s.type == sendType.File\"></i> <i class=\"fa fa-fw fa-lg fa-file-text-o\" *ngIf=\"s.type == sendType.Text\"></i> </div> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{s.name}}</a> <ng-container *ngIf=\"s.disabled\"> <i class=\"fa fa-warning\" appStopProp title=\"{{'disabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'disabled' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.password\"> <i class=\"fa fa-key\" appStopProp title=\"{{'password' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'password' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.maxAccessCountReached\"> <i class=\"fa fa-ban\" appStopProp title=\"{{'maxAccessCountReached' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'maxAccessCountReached' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.expired\"> <i class=\"fa fa-clock-o\" appStopProp title=\"{{'expired' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'expired' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.pendingDelete\"> <i class=\"fa fa-trash\" appStopProp title=\"{{'pendingDeletion' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'pendingDeletion' | i18n}}</span> </ng-container> <br> <small appStopProp>{{s.deletionDate | date:'medium'}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(s)\"> <i class=\"fa fa-fw fa-copy\" aria-hidden=\"true\"></i> {{'copySendLink' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'removePassword' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(s)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\"> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p>{{'noSendsInList' | i18n}}</p> <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\"> <i class=\"fa fa-plus fa-fw\"></i>{{'createSend' | i18n}}</button> </ng-container> </div> </div> </div> </div> <ng-template #sendAddEdit></ng-template> ","import {\n    Component,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ApiKeyComponent } from './api-key.component';\nimport { DeauthorizeSessionsComponent } from './deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './delete-account.component';\nimport { PurgeVaultComponent } from './purge-vault.component';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { KeyConnectorService } from 'jslib-common/abstractions/keyConnector.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\n@Component({\n    selector: 'app-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deauthorizeSessionsTemplate', { read: ViewContainerRef, static: true }) deauthModalRef: ViewContainerRef;\n    @ViewChild('purgeVaultTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\n    @ViewChild('deleteAccountTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n    @ViewChild('viewUserApiKeyTemplate', { read: ViewContainerRef, static: true }) viewUserApiKeyModalRef: ViewContainerRef;\n    @ViewChild('rotateUserApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateUserApiKeyModalRef: ViewContainerRef;\n\n    showChangePassword = true;\n    showChangeKdf = true;\n    showChangeEmail = true;\n\n    constructor(private modalService: ModalService, private apiService: ApiService,\n        private userService: UserService, private keyConnectorService: KeyConnectorService) { }\n\n    async ngOnInit() {\n        this.showChangeEmail = this.showChangeKdf = this.showChangePassword =\n            !await this.keyConnectorService.getUsesKeyConnector();\n    }\n\n    async deauthorizeSessions() {\n        await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n    }\n\n    async purgeVault() {\n        await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n    }\n\n    async deleteAccount() {\n        await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n    }\n\n    async viewUserApiKey() {\n        const entityId = await this.userService.getUserId();\n        await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, comp => {\n            comp.keyType = 'user';\n            comp.entityId = entityId;\n            comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n            comp.scope = 'api';\n            comp.grantType = 'client_credentials';\n            comp.apiKeyTitle = 'apiKey';\n            comp.apiKeyWarning = 'userApiKeyWarning';\n            comp.apiKeyDescription = 'userApiKeyDesc';\n        });\n    }\n\n    async rotateUserApiKey() {\n        const entityId = await this.userService.getUserId();\n        await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, comp => {\n            comp.keyType = 'user';\n            comp.isRotation = true;\n            comp.entityId = entityId;\n            comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n            comp.scope = 'api';\n            comp.grantType = 'client_credentials';\n            comp.apiKeyTitle = 'apiKey';\n            comp.apiKeyWarning = 'userApiKeyWarning';\n            comp.apiKeyDescription = 'apiKeyRotateDesc';\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myAccount' | i18n}}</h1> </div> <app-profile></app-profile> <ng-container *ngIf=\"showChangeEmail\"> <div class=\"secondary-header\"> <h1>{{'changeEmail' | i18n}}</h1> </div> <app-change-email></app-change-email> </ng-container> <ng-container *ngIf=\"showChangePassword\"> <div class=\"secondary-header\"> <h1>{{'changeMasterPassword' | i18n}}</h1> </div> <app-change-password></app-change-password> </ng-container> <ng-container *ngIf=\"showChangeKdf\"> <div class=\"secondary-header\"> <h1>{{'encKeySettings' | i18n}}</h1> </div> <app-change-kdf></app-change-kdf> </ng-container> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'apiKey' | i18n}}</h1> </div> <p> {{'userApiKeyDesc' | i18n}} </p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewUserApiKey()\">{{'viewApiKey' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateUserApiKey()\">{{'rotateApiKey' | i18n}}</button> <div class=\"secondary-header text-danger border-0 mb-0\"> <h1>{{'dangerZone' | i18n}}</h1> </div> <div class=\"card border-danger\"> <div class=\"card-body\"> <p>{{'dangerZoneDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deauthorizeSessions()\">{{'deauthorizeSessions' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteAccount()\">{{'deleteAccount' | i18n}}</button> </div> </div> <ng-template #deauthorizeSessionsTemplate></ng-template> <ng-template #purgeVaultTemplate></ng-template> <ng-template #deleteAccountTemplate></ng-template> <ng-template #viewUserApiKeyTemplate></ng-template> <ng-template #rotateUserApiKeyTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { Verification } from 'jslib-common/types/verification';\n\n@Component({\n    selector: 'app-deauthorize-sessions',\n    templateUrl: 'deauthorize-sessions.component.html',\n})\nexport class DeauthorizeSessionsComponent {\n    masterPassword: Verification;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userVerificationService: UserVerificationService,\n        private messagingService: MessagingService, private logService: LogService) { }\n\n    async submit() {\n        try {\n            this.formPromise = this.userVerificationService.buildRequest(this.masterPassword)\n                .then(request => this.apiService.postSecurityStamp(request));\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('sessionsDeauthorized'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deAuthTitle\">{{'deauthorizeSessions' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deauthorizeSessionsDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deauthorizeSessionsWarning' | i18n}}</app-callout> <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\"> </app-verify-master-password> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deauthorizeSessions' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { Verification } from 'jslib-common/types/verification';\n\n@Component({\n    selector: 'app-delete-account',\n    templateUrl: 'delete-account.component.html',\n})\nexport class DeleteAccountComponent {\n    masterPassword: Verification;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userVerificationService: UserVerificationService,\n        private messagingService: MessagingService, private logService: LogService) { }\n\n    async submit() {\n        try {\n            this.formPromise = this.userVerificationService.buildRequest(this.masterPassword)\n                .then(request => this.apiService.deleteAccount(request));\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.messagingService.send('logout');\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{'deleteAccount' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deleteAccountDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout> <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\"> </app-verify-master-password> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deleteAccount' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { KeyConnectorService } from 'jslib-common/abstractions/keyConnector.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UpdateProfileRequest } from 'jslib-common/models/request/updateProfileRequest';\n\nimport { ProfileResponse } from 'jslib-common/models/response/profileResponse';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: 'profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n    loading = true;\n    profile: ProfileResponse;\n    fingerprint: string;\n    hidePasswordHint = false;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userService: UserService,\n        private cryptoService: CryptoService, private logService: LogService,\n        private keyConnectorService: KeyConnectorService) { }\n\n    async ngOnInit() {\n        this.profile = await this.apiService.getProfile();\n        this.loading = false;\n        const fingerprint = await this.cryptoService.getFingerprint(await this.userService.getUserId());\n        if (fingerprint != null) {\n            this.fingerprint = fingerprint.join('-');\n        }\n        this.hidePasswordHint = await this.keyConnectorService.getUsesKeyConnector();\n    }\n\n    async submit() {\n        try {\n            const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n            this.formPromise = this.apiService.putProfile(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('accountUpdated'));\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"profile && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\"> </div> <div class=\"form-group\"> <label for=\"email\">{{'email' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"profile.email\" readonly=\"readonly\"> </div> <div class=\"form-group\" *ngIf=\"!hidePasswordHint\"> <label for=\"masterPasswordHint\">{{'masterPassHintLabel' | i18n}}</label> <input id=\"masterPasswordHint\" class=\"form-control\" type=\"text\" name=\"MasterPasswordHint\" [(ngModel)]=\"profile.masterPasswordHint\"> </div> </div> <div class=\"col-6\"> <div class=\"mb-3\"> <app-avatar data=\"{{profile | userName}}\" [email]=\"profile.email\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> <hr> <p *ngIf=\"fingerprint\"> {{'yourAccountsFingerprint' | i18n}}: <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i></a><br> <code>{{fingerprint}}</code> </p> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EmailRequest } from 'jslib-common/models/request/emailRequest';\nimport { EmailTokenRequest } from 'jslib-common/models/request/emailTokenRequest';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\n@Component({\n    selector: 'app-change-email',\n    templateUrl: 'change-email.component.html',\n})\nexport class ChangeEmailComponent implements OnInit {\n    masterPassword: string;\n    newEmail: string;\n    token: string;\n    tokenSent = false;\n    showTwoFactorEmailWarning = false;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n        this.showTwoFactorEmailWarning = twoFactorProviders.data.some(p => p.type === TwoFactorProviderType.Email &&\n            p.enabled);\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        this.newEmail = this.newEmail.trim().toLowerCase();\n        if (!this.tokenSent) {\n            const request = new EmailTokenRequest();\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            try {\n                this.formPromise = this.apiService.postEmailToken(request);\n                await this.formPromise;\n                this.tokenSent = true;\n            } catch (e) {\n                this.logService.error(e);\n            }\n        } else {\n            const request = new EmailRequest();\n            request.token = this.token;\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            const kdf = await this.userService.getKdf();\n            const kdfIterations = await this.userService.getKdfIterations();\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.newEmail, kdf, kdfIterations);\n            request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n            const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n            request.key = newEncKey[1].encryptedString;\n            try {\n                this.formPromise = this.apiService.postEmail(request);\n                await this.formPromise;\n                this.reset();\n                this.toasterService.popAsync('success', this.i18nService.t('emailChanged'),\n                    this.i18nService.t('logBackIn'));\n                this.messagingService.send('logout');\n            } catch (e) {\n                this.logService.error(e);\n            }\n        }\n    }\n\n    reset() {\n        this.token = this.newEmail = this.masterPassword = null;\n        this.tokenSent = false;\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\"> {{'changeEmailTwoFactorWarning' | i18n}} </app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required [readonly]=\"tokenSent\" appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"newEmail\">{{'newEmail' | i18n}}</label> <input id=\"newEmail\" class=\"form-control\" type=\"text\" name=\"NewEmail\" [(ngModel)]=\"newEmail\" required [readonly]=\"tokenSent\" inputmode=\"email\" appInputVerbatim=\"false\"> </div> </div> </div> <ng-container *ngIf=\"tokenSent\"> <hr> <p>{{'changeEmailDesc' | i18n : newEmail}}</p> <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"token\">{{'code' | i18n}}</label> <input id=\"token\" class=\"form-control\" type=\"text\" name=\"Token\" [(ngModel)]=\"token\" required appInputVerbatim> </div> </div> </div> </ng-container> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!tokenSent\">{{'continue' | i18n}}</span> <span *ngIf=\"tokenSent\">{{'changeEmail' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\"> {{'cancel' | i18n}} </button> </form> ","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n    newEmail: string;\n    masterPasswordHash: string;\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    ChangePasswordComponent as BaseChangePasswordComponent,\n} from 'jslib-angular/components/change-password.component';\n\nimport { EmergencyAccessStatusType } from 'jslib-common/enums/emergencyAccessStatusType';\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { CipherWithIdRequest } from 'jslib-common/models/request/cipherWithIdRequest';\nimport { EmergencyAccessUpdateRequest } from 'jslib-common/models/request/emergencyAccessUpdateRequest';\nimport { FolderWithIdRequest } from 'jslib-common/models/request/folderWithIdRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { PasswordRequest } from 'jslib-common/models/request/passwordRequest';\nimport { SendWithIdRequest } from 'jslib-common/models/request/sendWithIdRequest';\nimport { UpdateKeyRequest } from 'jslib-common/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-change-password',\n    templateUrl: 'change-password.component.html',\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n    rotateEncKey = false;\n    currentMasterPassword: string;\n\n    constructor(i18nService: I18nService,\n        cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private folderService: FolderService, private cipherService: CipherService,\n        private syncService: SyncService, private apiService: ApiService, private sendService: SendService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async rotateEncKeyClicked() {\n        if (this.rotateEncKey) {\n            const ciphers = await this.cipherService.getAllDecrypted();\n            let hasOldAttachments = false;\n            if (ciphers != null) {\n                for (let i = 0; i < ciphers.length; i++) {\n                    if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n                        hasOldAttachments = true;\n                        break;\n                    }\n                }\n            }\n\n            if (hasOldAttachments) {\n                const learnMore = await this.platformUtilsService.showDialog(\n                    this.i18nService.t('oldAttachmentsNeedFixDesc'), null,\n                    this.i18nService.t('learnMore'), this.i18nService.t('close'), 'warning');\n                if (learnMore) {\n                    this.platformUtilsService.launchUri(\n                        'https://help.bitwarden.com/article/attachments/#fixing-old-attachments');\n                }\n                this.rotateEncKey = false;\n                return;\n            }\n\n            const result = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateEncryptionKeyWarning') + ' ' +\n                this.i18nService.t('updateEncryptionKeyExportWarning') + ' ' +\n                this.i18nService.t('rotateEncKeyConfirmation'), this.i18nService.t('rotateEncKeyTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n            if (!result) {\n                this.rotateEncKey = false;\n            }\n        }\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        await super.submit();\n    }\n\n    async setupSubmitActions() {\n        if (this.currentMasterPassword == null || this.currentMasterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n\n        if (this.rotateEncKey) {\n            await this.syncService.fullSync(true);\n        }\n\n        return super.setupSubmitActions();\n    }\n\n    async performSubmitActions(newMasterPasswordHash: string, newKey: SymmetricCryptoKey,\n        newEncKey: [SymmetricCryptoKey, EncString]) {\n        const request = new PasswordRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.currentMasterPassword, null);\n        request.newMasterPasswordHash = newMasterPasswordHash;\n        request.key = newEncKey[1].encryptedString;\n\n        try {\n            if (this.rotateEncKey) {\n                this.formPromise = this.apiService.postPassword(request).then(() => {\n                    return this.updateKey(newKey, request.newMasterPasswordHash);\n                });\n            } else {\n                this.formPromise = this.apiService.postPassword(request);\n            }\n\n            await this.formPromise;\n\n            this.platformUtilsService.showToast('success', this.i18nService.t('masterPasswordChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n    }\n\n    private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: EncString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = masterPasswordHash;\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        const sends = await this.sendService.getAll();\n        await Promise.all(sends.map(async send => {\n            const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n            send.key = await this.cryptoService.encrypt(cryptoKey, encKey[0]) ?? send.key;\n            request.sends.push(new SendWithIdRequest(send));\n        }));\n\n        await this.apiService.postAccountKey(request);\n\n        await this.updateEmergencyAccesses(encKey[0]);\n\n        await this.updateAllResetPasswordKeys(encKey[0]);\n    }\n\n    private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n        const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n        const allowedStatuses = [\n            EmergencyAccessStatusType.Confirmed,\n            EmergencyAccessStatusType.RecoveryInitiated,\n            EmergencyAccessStatusType.RecoveryApproved,\n        ];\n\n        const filteredAccesses = emergencyAccess.data.filter(d => allowedStatuses.includes(d.status));\n\n        for (const details of filteredAccesses) {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n            const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n            const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n            const updateRequest = new EmergencyAccessUpdateRequest();\n            updateRequest.type = details.type;\n            updateRequest.waitTimeDays = details.waitTimeDays;\n            updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n            await this.apiService.putEmergencyAccess(details.id, updateRequest);\n        }\n    }\n\n    private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey) {\n        const orgs = await this.userService.getAllOrganizations();\n\n        for (const org of orgs) {\n            // If not already enrolled, skip\n            if (!org.resetPasswordEnrolled) {\n                continue;\n            }\n\n            // Retrieve public key\n            const response = await this.apiService.getOrganizationKeys(org.id);\n            const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n            // Re-enroll - encrpyt user's encKey.key with organization public key\n            const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n            // Create/Execute request\n            const request = new OrganizationUserResetPasswordEnrollmentRequest();\n            request.resetPasswordKey = encryptedKey.encryptedString;\n\n            await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n        }\n    }\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"currentMasterPassword\">{{'currentMasterPass' | i18n}}</label> <input id=\"currentMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"currentMasterPassword\" required appInputVerbatim> </div> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"newMasterPassword\">{{'newMasterPass' | i18n}}</label> <input id=\"newMasterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim autocomplete=\"new-password\"> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"></app-password-strength> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'confirmNewMasterPass' | i18n}}</label> <input id=\"masterPasswordRetype\" type=\"password\" name=\"MasterPasswordRetype\" class=\"form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim autocomplete=\"new-password\"> </div> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"rotateEncKey\" name=\"RotateEncKey\" [(ngModel)]=\"rotateEncKey\" (change)=\"rotateEncKeyClicked()\"> <label class=\"form-check-label\" for=\"rotateEncKey\"> {{'rotateAccountEncKey' | i18n}} </label> <a href=\"https://bitwarden.com/help/article/account-encryption-key/#rotate-your-encryption-key\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'changeMasterPassword' | i18n}}</span> </button> </form> ","export enum EmergencyAccessStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n    RecoveryInitiated = 3,\n    RecoveryApproved = 4,\n}\n","import { EmergencyAccessType } from '../../enums/emergencyAccessType';\n\nexport class EmergencyAccessUpdateRequest {\n    type: EmergencyAccessType;\n    waitTimeDays: number;\n    keyEncrypted?: string;\n}\n","import { FolderRequest } from './folderRequest';\n\nimport { Folder } from '../domain/folder';\n\nexport class FolderWithIdRequest extends FolderRequest {\n    id: string;\n\n    constructor(folder: Folder) {\n        super(folder);\n        this.id = folder.id;\n    }\n}\n","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nexport class PasswordRequest extends SecretVerificationRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nimport { Send } from '../domain/send';\n\nexport class SendRequest {\n    type: SendType;\n    fileLength?: number;\n    name: string;\n    notes: string;\n    key: string;\n    maxAccessCount?: number;\n    expirationDate: string;\n    deletionDate: string;\n    text: SendTextApi;\n    file: SendFileApi;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(send: Send, fileLength?: number) {\n        this.type = send.type;\n        this.fileLength = fileLength;\n        this.name = send.name ? send.name.encryptedString : null;\n        this.notes = send.notes ? send.notes.encryptedString : null;\n        this.maxAccessCount = send.maxAccessCount;\n        this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n        this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n        this.key = send.key != null ? send.key.encryptedString : null;\n        this.password = send.password;\n        this.disabled = send.disabled;\n        this.hideEmail = send.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendTextApi();\n                this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n                this.text.hidden = send.text.hidden;\n                break;\n            case SendType.File:\n                this.file = new SendFileApi();\n                this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\nimport { FolderWithIdRequest } from './folderWithIdRequest';\nimport { SendWithIdRequest } from './sendWithIdRequest';\n\nexport class UpdateKeyRequest {\n    ciphers: CipherWithIdRequest[] = [];\n    folders: FolderWithIdRequest[] = [];\n    sends: SendWithIdRequest[] = [];\n    masterPasswordHash: string;\n    privateKey: string;\n    key: string;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { KdfRequest } from 'jslib-common/models/request/kdfRequest';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\n@Component({\n    selector: 'app-change-kdf',\n    templateUrl: 'change-kdf.component.html',\n})\nexport class ChangeKdfComponent implements OnInit {\n    masterPassword: string;\n    kdfIterations: number;\n    kdf = KdfType.PBKDF2_SHA256;\n    kdfOptions: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService,\n        private logService: LogService) {\n        this.kdfOptions = [\n            { name: 'PBKDF2 SHA-256', value: KdfType.PBKDF2_SHA256 },\n        ];\n    }\n\n    async ngOnInit() {\n        this.kdf = await this.userService.getKdf();\n        this.kdfIterations = await this.userService.getKdfIterations();\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const request = new KdfRequest();\n        request.kdf = this.kdf;\n        request.kdfIterations = this.kdfIterations;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        const email = await this.userService.getEmail();\n        const newKey = await this.cryptoService.makeKey(this.masterPassword, email, this.kdf, this.kdfIterations);\n        request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n        const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n        request.key = newEncKey[1].encryptedString;\n        try {\n            this.formPromise = this.apiService.postAccountKdf(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('encKeySettingsChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"kdfMasterPassword\">{{'masterPass' | i18n}}</label> <input id=\"kdfMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> </div> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group mb-0\"> <label for=\"kdf\">{{'kdfAlgorithm' | i18n}}</label> <a class=\"ml-auto\" href=\"https://en.wikipedia.org/wiki/Key_derivation_function\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required> <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"col-6\"> <div class=\"form-group mb-0\"> <label for=\"kdfIterations\">{{'kdfIterations' | i18n}}</label> <a class=\"ml-auto\" href=\"https://bitwarden.com/help/article/what-encryption-is-used/#pbkdf2\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> <input id=\"kdfIterations\" type=\"number\" min=\"5000\" max=\"2000000\" name=\"KdfIterations\" class=\"form-control\" [(ngModel)]=\"kdfIterations\" required> </div> </div> <div class=\"col-12\"> <div class=\"form-group\"> <div class=\"small form-text text-muted\"> <p>{{'kdfIterationsDesc' | i18n : (100000 | number)}}</p> <strong>{{'warning' | i18n}}</strong>: {{'kdfIterationsWarning' | i18n : (50000 | number)}} </div> </div> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'changeKdf' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\nimport { OrganizationPlansComponent } from './organization-plans.component';\n\n@Component({\n    selector: 'app-create-organization',\n    templateUrl: 'create-organization.component.html',\n})\nexport class CreateOrganizationComponent implements OnInit {\n    @ViewChild(OrganizationPlansComponent, { static: true }) orgPlansComponent: OrganizationPlansComponent;\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this.route.queryParams.pipe(first()).subscribe(async qParams => {\n            if (qParams.plan === 'families') {\n                this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n                this.orgPlansComponent.product = ProductType.Families;\n            } else if (qParams.plan === 'teams') {\n                this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n                this.orgPlansComponent.product = ProductType.Teams;\n            } else if (qParams.plan === 'enterprise') {\n                this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n                this.orgPlansComponent.product = ProductType.Enterprise;\n            }\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'newOrganization' | i18n}}</h1> </div> <p>{{'newOrganizationDesc' | i18n}}</p> <app-organization-plans></app-organization-plans> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { UpdateDomainsRequest } from 'jslib-common/models/request/updateDomainsRequest';\n\n@Component({\n    selector: 'app-domain-rules',\n    templateUrl: 'domain-rules.component.html',\n})\nexport class DomainRulesComponent implements OnInit {\n    loading = true;\n    custom: string[] = [];\n    global: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private logService: LogService) { }\n\n    async ngOnInit() {\n        const response = await this.apiService.getSettingsDomains();\n        this.loading = false;\n        if (response.equivalentDomains != null) {\n            this.custom = response.equivalentDomains.map(d => d.join(', '));\n        }\n        if (response.globalEquivalentDomains != null) {\n            this.global = response.globalEquivalentDomains.map(d => {\n                return {\n                    domains: d.domains.join(', '),\n                    excluded: d.excluded,\n                    key: d.type,\n                };\n            });\n        }\n    }\n\n    toggleExcluded(globalDomain: any) {\n        globalDomain.excluded = !globalDomain.excluded;\n    }\n\n    customize(globalDomain: any) {\n        globalDomain.excluded = true;\n        this.custom.push(globalDomain.domains);\n    }\n\n    remove(index: number) {\n        this.custom.splice(index, 1);\n    }\n\n    add() {\n        this.custom.push('');\n    }\n\n    async submit() {\n        const request = new UpdateDomainsRequest();\n        request.excludedGlobalEquivalentDomains = this.global.filter(d => d.excluded)\n            .map(d => d.key);\n        if (request.excludedGlobalEquivalentDomains.length === 0) {\n            request.excludedGlobalEquivalentDomains = null;\n        }\n        request.equivalentDomains = this.custom.filter(d => d != null && d.trim() !== '')\n            .map(d => d.split(',').map(d2 => d2.trim()));\n        if (request.equivalentDomains.length === 0) {\n            request.equivalentDomains = null;\n        }\n\n        try {\n            this.formPromise = this.apiService.putSettingsDomains(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('domainsUpdated'));\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    indexTrackBy(index: number, obj: any): any {\n        return index;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'domainRules' | i18n}}</h1> </div> <p>{{'domainRulesDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <h2>{{'customEqDomains' | i18n}}</h2> <p *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"!loading\"> <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\"> <div class=\"flex-fill\"> <label for=\"customDomain_{{i}}\" class=\"sr-only\">{{'customDomainX' | i18n : (i + 1)}}</label> <textarea class=\"form-control\" name=\"CustomDomain[{{i}}]\" id=\"customDomain_{{i}}\" [(ngModel)]=\"custom[i]\" placeholder=\"{{'ex' | i18n}} google.com, gmail.com\" required></textarea> </div> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"remove(i)\" appA11yTitle=\"{{'remove' | i18n}}\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newCustomDomain' | i18n}} </button> <small class=\"text-muted d-block mb-3\">{{'newCustomDomainDesc' | i18n}}</small> </ng-container> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <h2 class=\"spaced-header\">{{'globalEqDomains' | i18n}}</h2> <p *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\"> <tbody> <tr *ngFor=\"let d of global\"> <td [ngClass]=\"{'table-list-strike': d.excluded}\">{{d.domains}}</td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\" *ngIf=\"!d.excluded\"> <i class=\"fa fa-fw fa-close\" aria-hidden=\"true\"></i> {{'exclude' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\" *ngIf=\"d.excluded\"> <i class=\"fa fa-fw fa-plus\" aria-hidden=\"true\"></i> {{'include' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\"> <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> {{'customize' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { EmergencyAccessType } from 'jslib-common/enums/emergencyAccessType';\nimport { EmergencyAccessInviteRequest } from 'jslib-common/models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessUpdateRequest } from 'jslib-common/models/request/emergencyAccessUpdateRequest';\n\n@Component({\n    selector: 'emergency-access-add-edit',\n    templateUrl: 'emergency-access-add-edit.component.html',\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() emergencyAccessId: string;\n    @Output() onSaved = new EventEmitter();\n    @Output() onDeleted = new EventEmitter();\n\n    loading = true;\n    readOnly: boolean = false;\n    editMode: boolean = false;\n    title: string;\n    email: string;\n    type: EmergencyAccessType = EmergencyAccessType.View;\n\n    formPromise: Promise<any>;\n\n    emergencyAccessType = EmergencyAccessType;\n    waitTimes: { name: string; value: number; }[];\n    waitTime: number;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private logService: LogService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.emergencyAccessId != null;\n\n        this.waitTimes = [\n            { name: this.i18nService.t('oneDay'), value: 1 },\n            { name: this.i18nService.t('days', '2'), value: 2 },\n            { name: this.i18nService.t('days', '7'), value: 7 },\n            { name: this.i18nService.t('days', '14'), value: 14 },\n            { name: this.i18nService.t('days', '30'), value: 30 },\n            { name: this.i18nService.t('days', '90'), value: 90 },\n        ];\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editEmergencyContact');\n            try {\n                const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n                this.type = emergencyAccess.type;\n                this.waitTime = emergencyAccess.waitTimeDays;\n            } catch (e) {\n                this.logService.error(e);\n            }\n        } else {\n            this.title = this.i18nService.t('inviteEmergencyContact');\n            this.waitTime = this.waitTimes[2].value;\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            if (this.editMode) {\n                const request = new EmergencyAccessUpdateRequest();\n                request.type = this.type;\n                request.waitTimeDays = this.waitTime;\n\n                this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n            } else {\n                const request = new EmergencyAccessInviteRequest();\n                request.email = this.email.trim();\n                request.type = this.type;\n                request.waitTimeDays = this.waitTime;\n\n                this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n            }\n\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSaved.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async delete() {\n        this.onDeleted.emit();\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> <span class=\"badge badge-primary\" *ngIf=\"readOnly\">{{'premium' | i18n}}</span> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'inviteEmergencyContactDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"email\">{{'email' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required> </div> </ng-container> <h3> {{'userAccess' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/emergency-access/#user-access\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"emergencyTypeView\" [value]=\"emergencyAccessType.View\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"emergencyTypeView\"> {{'view' | i18n}} <small>{{'viewDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"emergencyTypeTakeover\" [value]=\"emergencyAccessType.Takeover\" [(ngModel)]=\"type\" [disabled]=\"readOnly\"> <label class=\"form-check-label\" for=\"emergencyTypeTakeover\"> {{'takeover' | i18n}} <small>{{'takeoverDesc' | i18n}}</small> </label> </div> <div class=\"form-group col-6 mt-4\"> <label for=\"waitTime\">{{'waitTime' | i18n}}</label> <select id=\"waitTime\" name=\"waitTime\" [(ngModel)]=\"waitTime\" class=\"form-control\" [disabled]=\"readOnly\"> <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"text-muted\">{{'waitTimeDesc' | i18n}}</small> </div> </div> <div class=\"modal-footer\"> <button #submitBtn type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loading || submitBtn.loading || readOnly\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\" *ngIf=\"loading || submitBtn.loading\"></i> <span *ngIf=\"!loading && !submitBtn.loading\">{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","export enum EmergencyAccessType\n{\n    View = 0,\n    Takeover = 1,\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib-angular/components/attachments.component';\n\n@Component({\n    selector: 'emergency-access-attachments',\n    templateUrl: '../vault/attachments.component.html',\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = true;\n    canAccessAttachments = true;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService,\n        logService: LogService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, window,\n            logService);\n    }\n\n    protected async init() {\n        // Do nothing since cipher is already decoded\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return false;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'emergency-access-confirm',\n    templateUrl: 'emergency-access-confirm.component.html',\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n    @Input() name: string;\n    @Input() userId: string;\n    @Input() emergencyAccessId: string;\n    @Input() formPromise: Promise<any>;\n    @Output() onConfirmed = new EventEmitter();\n\n    dontAskAgain = false;\n    loading = true;\n    fingerprint: string;\n\n    constructor(private apiService: ApiService, private cryptoService: CryptoService,\n        private storageService: StorageService, private logService: LogService) { }\n\n    async ngOnInit() {\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n            if (publicKeyResponse != null) {\n                const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n                if (fingerprint != null) {\n                    this.fingerprint = fingerprint.join('-');\n                }\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n        this.loading = false;\n    }\n\n    async submit() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.dontAskAgain) {\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\n        }\n\n        try {\n            this.onConfirmed.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"confirmUserTitle\"> {{'confirmUser' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <p><code>{{fingerprint}}</code></p> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\" [(ngModel)]=\"dontAskAgain\"> <label class=\"form-check-label\" for=\"dontAskAgain\"> {{'dontAskFingerprintAgain' | i18n}} </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\nimport { PolicyData } from 'jslib-common/models/data/policyData';\nimport { Policy } from 'jslib-common/models/domain/policy';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { EmergencyAccessPasswordRequest } from 'jslib-common/models/request/emergencyAccessPasswordRequest';\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nimport { ChangePasswordComponent } from 'jslib-angular/components/change-password.component';\n\n@Component({\n    selector: 'emergency-access-takeover',\n    templateUrl: 'emergency-access-takeover.component.html',\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n    @Output() onDone = new EventEmitter();\n    @Input() emergencyAccessId: string;\n    @Input() name: string;\n    @Input() email: string;\n    @Input() kdf: KdfType;\n    @Input() kdfIterations: number;\n\n    formPromise: Promise<any>;\n\n    constructor(i18nService: I18nService, cryptoService: CryptoService,\n        messagingService: MessagingService, userService: UserService,\n        passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private apiService: ApiService, private toasterService: ToasterService, private logService: LogService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n        if (response.data != null && response.data.length > 0) {\n            const policies = response.data.map((policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse)));\n            this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(policies);\n        }\n     }\n\n    async submit() {\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(this.emergencyAccessId);\n\n        const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n        const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n        if (oldEncKey == null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'), this.i18nService.t('unexpectedError'));\n            return;\n        }\n\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, takeoverResponse.kdf, takeoverResponse.kdfIterations);\n        const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n        const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n        const request = new EmergencyAccessPasswordRequest();\n        request.newMasterPasswordHash = masterPasswordHash;\n        request.key = encKey[1].encryptedString;\n\n        this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n        try {\n            this.onDone.emit();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{'takeover' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'newMasterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim autocomplete=\"new-password\"> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'confirmNewMasterPass' | i18n}}</label> <input id=\"masterPasswordRetype\" type=\"password\" name=\"MasterPasswordRetype\" class=\"form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim autocomplete=\"new-password\"> </div> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { EmergencyAccessViewResponse } from 'jslib-common/models/response/emergencyAccessResponse';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { EmergencyAccessAttachmentsComponent } from './emergency-access-attachments.component';\nimport { EmergencyAddEditComponent } from './emergency-add-edit.component';\n\n@Component({\n    selector: 'emergency-access-view',\n    templateUrl: 'emergency-access-view.component.html',\n})\nexport class EmergencyAccessViewComponent implements OnInit {\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n\n    id: string;\n    ciphers: CipherView[] = [];\n    loaded = false;\n\n    constructor(private cipherService: CipherService, private cryptoService: CryptoService,\n        private modalService: ModalService, private router: Router,\n        private route: ActivatedRoute, private apiService: ApiService) { }\n\n    ngOnInit() {\n        this.route.params.subscribe(qParams => {\n            if (qParams.id == null) {\n                return this.router.navigate(['settings/emergency-access']);\n            }\n\n            this.id = qParams.id;\n\n            this.load();\n        });\n    }\n\n    async selectCipher(cipher: CipherView) {\n        const [_, childComponent] = await this.modalService.openViewRef(EmergencyAddEditComponent, this.cipherAddEditModalRef, comp => {\n            comp.cipherId = cipher == null ? null : cipher.id;\n            comp.cipher = cipher;\n        });\n\n        return childComponent;\n    }\n\n    async load() {\n        const response = await this.apiService.postEmergencyAccessView(this.id);\n        this.ciphers = await this.getAllCiphers(response);\n        this.loaded = true;\n    }\n\n    async viewAttachments(cipher: CipherView) {\n        await this.modalService.openViewRef(EmergencyAccessAttachmentsComponent, this.attachmentsModalRef, comp => {\n            comp.cipher = cipher;\n            comp.emergencyAccessId = this.id;\n        });\n    }\n\n    protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n        const ciphers = response.ciphers;\n\n        const decCiphers: CipherView[] = [];\n        const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n        const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n        const promises: any[] = [];\n        ciphers.forEach(cipherResponse => {\n            const cipherData = new CipherData(cipherResponse);\n            const cipher = new Cipher(cipherData);\n            promises.push(cipher.decrypt(oldEncKey).then(c => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n        return decCiphers;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'vault' | i18n}}</h1> </div> <div class=\"mt-4\"> <ng-container *ngIf=\"ciphers.length\"> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\"> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\"> <i class=\"fa fa-fw fa-paperclip\" aria-hidden=\"true\"></i> {{'attachments' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> <ng-template #attachments></ng-template> ","import { Component } from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    templateUrl: '../vault/add-edit.component.html',\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n    originalCipher: Cipher = null;\n    viewOnly = true;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\n        messagingService: MessagingService, eventService: EventService, policyService: PolicyService,\n        logService: LogService, passwordRepromptService: PasswordRepromptService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\n            eventService, policyService, passwordRepromptService, logService);\n    }\n\n    async load() {\n        this.title = this.i18nService.t('viewItem');\n    }\n\n    protected async loadCipher() {\n        return Promise.resolve(this.originalCipher);\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EmergencyAccessStatusType } from 'jslib-common/enums/emergencyAccessStatusType';\nimport { EmergencyAccessType } from 'jslib-common/enums/emergencyAccessType';\nimport { Utils } from 'jslib-common/misc/utils';\nimport { EmergencyAccessConfirmRequest } from 'jslib-common/models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessGranteeDetailsResponse, EmergencyAccessGrantorDetailsResponse } from 'jslib-common/models/response/emergencyAccessResponse';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { EmergencyAccessAddEditComponent } from './emergency-access-add-edit.component';\nimport { EmergencyAccessConfirmComponent } from './emergency-access-confirm.component';\nimport { EmergencyAccessTakeoverComponent } from './emergency-access-takeover.component';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\n@Component({\n    selector: 'emergency-access',\n    templateUrl: 'emergency-access.component.html',\n})\nexport class EmergencyAccessComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('takeoverTemplate', { read: ViewContainerRef, static: true}) takeoverModalRef: ViewContainerRef;\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n\n    canAccessPremium: boolean;\n    trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n    grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n    emergencyAccessType = EmergencyAccessType;\n    emergencyAccessStatusType = EmergencyAccessStatusType;\n    actionPromise: Promise<any>;\n    isOrganizationOwner: boolean;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private modalService: ModalService, private platformUtilsService: PlatformUtilsService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private storageService: StorageService, private userService: UserService,\n        private messagingService: MessagingService, private userNamePipe: UserNamePipe,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        const orgs = await this.userService.getAllOrganizations();\n        this.isOrganizationOwner = orgs.some(o => o.isOwner);\n        this.load();\n    }\n\n    async load() {\n        this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n        this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    }\n\n    async premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    async edit(details: EmergencyAccessGranteeDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(EmergencyAccessAddEditComponent, this.addEditModalRef, comp => {\n            comp.name = this.userNamePipe.transform(details);\n            comp.emergencyAccessId = details?.id;\n            comp.readOnly = !this.canAccessPremium;\n            comp.onSaved.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n            comp.onDeleted.subscribe(() => {\n                modal.close();\n                this.remove(details);\n            });\n        });\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n        if (this.actionPromise != null) {\n            return;\n        }\n        this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n        await this.actionPromise;\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', contact.email));\n        this.actionPromise = null;\n    }\n\n    async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n        function updateUser() {\n            contact.status = EmergencyAccessStatusType.Confirmed;\n        }\n\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\n        if (autoConfirm == null || !autoConfirm) {\n            const [modal] = await this.modalService.openViewRef(EmergencyAccessConfirmComponent, this.confirmModalRef, comp => {\n                comp.name = this.userNamePipe.transform(contact);\n                comp.emergencyAccessId = contact.id;\n                comp.userId = contact?.granteeId;\n                comp.onConfirmed.subscribe(async () => {\n                    modal.close();\n\n                    comp.formPromise = this.doConfirmation(contact);\n                    await comp.formPromise;\n\n                    updateUser();\n                    this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.userNamePipe.transform(contact)));\n                });\n            });\n            return;\n        }\n\n        this.actionPromise = this.doConfirmation(contact);\n        await this.actionPromise;\n        updateUser();\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.userNamePipe.transform(contact)));\n        this.actionPromise = null;\n    }\n\n    async remove(details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.userNamePipe.transform(details),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteEmergencyAccess(details.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.userNamePipe.transform(details)));\n\n            if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n                this.removeGrantee(details);\n            } else {\n                this.removeGrantor(details);\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('requestAccessConfirmation', details.waitTimeDays.toString()),\n            this.userNamePipe.transform(details),\n            this.i18nService.t('requestAccess'),\n            this.i18nService.t('no'),\n            'warning',\n        );\n\n        if (!confirmed) {\n            return false;\n        }\n\n        await this.apiService.postEmergencyAccessInitiate(details.id);\n\n        details.status = EmergencyAccessStatusType.RecoveryInitiated;\n        this.toasterService.popAsync('success', null, this.i18nService.t('requestSent', this.userNamePipe.transform(details)));\n    }\n\n    async approve(details: EmergencyAccessGranteeDetailsResponse) {\n        const type = this.i18nService.t(details.type === EmergencyAccessType.View ? 'view' : 'takeover');\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('approveAccessConfirmation', this.userNamePipe.transform(details), type),\n            this.userNamePipe.transform(details),\n            this.i18nService.t('approve'),\n            this.i18nService.t('no'),\n            'warning',\n        );\n\n        if (!confirmed) {\n            return false;\n        }\n\n        await this.apiService.postEmergencyAccessApprove(details.id);\n        details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('emergencyApproved', this.userNamePipe.transform(details)));\n    }\n\n    async reject(details: EmergencyAccessGranteeDetailsResponse) {\n        await this.apiService.postEmergencyAccessReject(details.id);\n        details.status = EmergencyAccessStatusType.Confirmed;\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('emergencyRejected', this.userNamePipe.transform(details)));\n    }\n\n    async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(EmergencyAccessTakeoverComponent, this.takeoverModalRef, comp => {\n            comp.name = this.userNamePipe.transform(details);\n            comp.email = details.email;\n            comp.emergencyAccessId = details != null ? details.id : null;\n\n            comp.onDone.subscribe(() => {\n                modal.close();\n                this.toasterService.popAsync('success', null, this.i18nService.t('passwordResetFor', this.userNamePipe.transform(details)));\n            });\n        });\n    }\n\n    private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n        const index = this.trustedContacts.indexOf(details);\n        if (index > -1) {\n            this.trustedContacts.splice(index, 1);\n        }\n    }\n\n    private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n        const index = this.grantedContacts.indexOf(details);\n        if (index > -1) {\n            this.grantedContacts.splice(index, 1);\n        }\n    }\n\n    // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n    private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n        const encKey = await this.cryptoService.getEncKey();\n        const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n        try {\n            this.logService.debug('User\\'s fingerprint: ' +\n                (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join('-'));\n        } catch {\n            // Ignore errors since it's just a debug message\n        }\n\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        const request = new EmergencyAccessConfirmRequest();\n        request.key = encryptedKey.encryptedString;\n        await this.apiService.postEmergencyAccessConfirm(details.id, request);\n    }\n}\n","<div class=\"page-header\"> <h1>{{'emergencyAccess' | i18n}}</h1> </div> <p> {{'emergencyAccessDesc' | i18n}} <a href=\"https://bitwarden.com/help/article/emergency-access/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}. </a> </p> <p *ngIf=\"isOrganizationOwner\"> <b>{{'warning' | i18n }}:</b> {{'emergencyAccessOwnerWarning' | i18n}} </p> <div class=\"page-header d-flex\"> <h2> {{'trustedEmergencyContacts' | i18n}} <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </h2> <div class=\"ml-auto d-flex\"> <button class=\"btn btn-sm btn-outline-primary ml-3\" type=\"button\" (click)=\"invite()\" [disabled]=\"!canAccessPremium\"> <i aria-hidden=\"true\" class=\"fa fa-plus fa-fw\"></i> {{'addEmergencyContact' |i18n}} </button> </div> </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\"> <tbody> <tr *ngFor=\"let c of trustedContacts; let i = index\"> <td width=\"30\"> <app-avatar [data]=\"c | userName\" [email]=\"c.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{'accepted' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\">{{'emergencyAccessRecoveryInitiated' | i18n}}</span> <span class=\"badge badge-success\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{'emergencyAccessRecoveryApproved' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{'view' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{'takeover' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{c.name}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"approve(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'approve' | i18n}} </a> <a class=\"dropdown-item text-warning\" href=\"#\" appStopClick (click)=\"reject(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated || c.status === emergencyAccessStatusType.RecoveryApproved\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'reject' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <p *ngIf=\"!trustedContacts || !trustedContacts.length\">{{'noTrustedContacts' | i18n}}</p> <div class=\"page-header spaced-header\"> <h2>{{'designatedEmergencyContacts' | i18n}}</h2> </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\"> <tbody> <tr *ngFor=\"let c of grantedContacts; let i = index\"> <td width=\"30\"> <app-avatar [data]=\"c | userName\" [email]=\"c.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <span>{{c.email}}</span> <span class=\"badge badge-secondary\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{'accepted' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\">{{'emergencyAccessRecoveryInitiated' | i18n}}</span> <span class=\"badge badge-success\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{'emergencyAccessRecoveryApproved' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{'view' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{'takeover' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{c.name}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"requestAccess(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'requestAccess' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"takeover(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved && c.type === emergencyAccessType.Takeover\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'takeover' | i18n}} </a> <a class=\"dropdown-item\" [routerLink]=\"c.id\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved && c.type === emergencyAccessType.View\"> <i class=\"fa fa-fw fa-eye\" aria-hidden=\"true\"></i> {{'view' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <p *ngIf=\"!grantedContacts || !grantedContacts.length\">{{'noGrantedAccess' | i18n}}</p> <ng-template #addEdit></ng-template> <ng-template #takeoverTemplate></ng-template> <ng-template #confirmTemplate></ng-template> ","import { EmergencyAccessStatusType } from '../../enums/emergencyAccessStatusType';\nimport { EmergencyAccessType } from '../../enums/emergencyAccessType';\nimport { KdfType } from '../../enums/kdfType';\nimport { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n    id: string;\n    granteeId: string;\n    name: string;\n    email: string;\n    type: EmergencyAccessType;\n    status: EmergencyAccessStatusType;\n    waitTimeDays: number;\n    creationDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.granteeId = this.getResponseProperty('GranteeId');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.waitTimeDays = this.getResponseProperty('WaitTimeDays');\n        this.creationDate = this.getResponseProperty('CreationDate');\n    }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n    id: string;\n    grantorId: string;\n    name: string;\n    email: string;\n    type: EmergencyAccessType;\n    status: EmergencyAccessStatusType;\n    waitTimeDays: number;\n    creationDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.grantorId = this.getResponseProperty('GrantorId');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.waitTimeDays = this.getResponseProperty('WaitTimeDays');\n        this.creationDate = this.getResponseProperty('CreationDate');\n    }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n    keyEncrypted: string;\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n\n        this.keyEncrypted = this.getResponseProperty('KeyEncrypted');\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n    keyEncrypted: string;\n    ciphers: CipherResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n\n        this.keyEncrypted = this.getResponseProperty('KeyEncrypted');\n\n        const ciphers = this.getResponseProperty('Ciphers');\n        if (ciphers != null) {\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class AttachmentResponse extends BaseResponse {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.url = this.getResponseProperty('Url');\n        this.fileName = this.getResponseProperty('FileName');\n        this.key = this.getResponseProperty('Key');\n        this.size = this.getResponseProperty('Size');\n        this.sizeName = this.getResponseProperty('SizeName');\n    }\n}\n","import {\n    AfterContentInit,\n    Component,\n    Input,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { SsoComponent } from 'jslib-angular/components/sso.component';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-link-sso',\n    templateUrl: 'link-sso.component.html',\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n    @Input() organization: Organization;\n    returnUri: string = '/settings/organizations';\n\n    constructor(platformUtilsService: PlatformUtilsService, i18nService: I18nService,\n        apiService: ApiService, authService: AuthService,\n        router: Router, route: ActivatedRoute,\n        cryptoFunctionService: CryptoFunctionService, passwordGenerationService: PasswordGenerationService,\n        storageService: StorageService, stateService: StateService, environmentService: EnvironmentService,\n        logService: LogService) {\n        super(authService, router,\n            i18nService, route,\n            storageService, stateService,\n            platformUtilsService, apiService,\n            cryptoFunctionService, environmentService, passwordGenerationService, logService);\n\n        this.returnUri = '/settings/organizations';\n        this.redirectUri = window.location.origin + '/sso-connector.html';\n        this.clientId = 'web';\n    }\n\n    async ngAfterContentInit() {\n        this.identifier = this.organization.identifier;\n    }\n}\n","<a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"submit(returnUri, true)\"> <i class=\"fa fa-fw fa-link\" aria-hidden=\"true\"></i> {{'linkSso' | i18n}} </a> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ThemeType } from 'jslib-common/enums/themeType';\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-options',\n    templateUrl: 'options.component.html',\n})\nexport class OptionsComponent implements OnInit {\n    vaultTimeoutAction: string = 'lock';\n    disableIcons: boolean;\n    enableGravatars: boolean;\n    enableFullWidth: boolean;\n    theme: string = null;\n    locale: string;\n    vaultTimeouts: { name: string; value: number; }[];\n    localeOptions: any[];\n    themeOptions: any[];\n\n    vaultTimeout: FormControl = new FormControl(null);\n\n    private startingLocale: string;\n    private startingTheme: string;\n\n    constructor(private storageService: StorageService, private stateService: StateService,\n        private i18nService: I18nService, private toasterService: ToasterService,\n        private vaultTimeoutService: VaultTimeoutService, private platformUtilsService: PlatformUtilsService,\n        private messagingService: MessagingService) {\n        this.vaultTimeouts = [\n            { name: i18nService.t('oneMinute'), value: 1 },\n            { name: i18nService.t('fiveMinutes'), value: 5 },\n            { name: i18nService.t('fifteenMinutes'), value: 15 },\n            { name: i18nService.t('thirtyMinutes'), value: 30 },\n            { name: i18nService.t('oneHour'), value: 60 },\n            { name: i18nService.t('fourHours'), value: 240 },\n            { name: i18nService.t('onRefresh'), value: -1 },\n        ];\n        if (this.platformUtilsService.isDev()) {\n            this.vaultTimeouts.push({ name: i18nService.t('never'), value: null });\n        }\n\n        const localeOptions: any[] = [];\n        i18nService.supportedTranslationLocales.forEach(locale => {\n            let name = locale;\n            if (i18nService.localeNames.has(locale)) {\n                name += (' - ' + i18nService.localeNames.get(locale));\n            }\n            localeOptions.push({ name: name, value: locale });\n        });\n        localeOptions.sort(Utils.getSortFunction(i18nService, 'name'));\n        localeOptions.splice(0, 0, { name: i18nService.t('default'), value: null });\n        this.localeOptions = localeOptions;\n        this.themeOptions = [\n            { name: i18nService.t('themeLight'), value: null },\n            { name: i18nService.t('themeDark'), value: ThemeType.Dark },\n            { name: i18nService.t('themeSystem'), value: ThemeType.System },\n        ];\n    }\n\n    async ngOnInit() {\n        this.vaultTimeout.setValue(await this.vaultTimeoutService.getVaultTimeout());\n        this.vaultTimeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n        this.disableIcons = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        this.enableGravatars = await this.storageService.get<boolean>('enableGravatars');\n        this.enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\n        this.locale = this.startingLocale = await this.storageService.get<string>(ConstantsService.localeKey);\n        this.theme = this.startingTheme = await this.storageService.get<ThemeType>(ConstantsService.themeKey);\n    }\n\n    async submit() {\n        if (!this.vaultTimeout.valid) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('vaultTimeoutToLarge'));\n            return;\n        }\n\n        await this.vaultTimeoutService.setVaultTimeoutOptions(this.vaultTimeout.value, this.vaultTimeoutAction);\n        await this.storageService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.stateService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.storageService.save('enableGravatars', this.enableGravatars);\n        await this.stateService.save('enableGravatars', this.enableGravatars);\n        await this.storageService.save('enableFullWidth', this.enableFullWidth);\n        this.messagingService.send('setFullWidth');\n        if (this.theme !== this.startingTheme) {\n            await this.storageService.save(ConstantsService.themeKey, this.theme);\n            this.startingTheme = this.theme;\n            const effectiveTheme = await this.platformUtilsService.getEffectiveTheme();\n            const htmlEl = window.document.documentElement;\n            htmlEl.classList.remove('theme_' + ThemeType.Light, 'theme_' + ThemeType.Dark);\n            htmlEl.classList.add('theme_' + effectiveTheme);\n        }\n        await this.storageService.save(ConstantsService.localeKey, this.locale);\n        if (this.locale !== this.startingLocale) {\n            window.location.reload();\n        } else {\n            this.toasterService.popAsync('success', null, this.i18nService.t('optionsUpdated'));\n        }\n    }\n\n    async vaultTimeoutActionChanged(newValue: string) {\n        if (newValue === 'logOut') {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('vaultTimeoutLogOutConfirmation'),\n                this.i18nService.t('vaultTimeoutLogOutConfirmationTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('cancel'), 'warning');\n            if (!confirmed) {\n                this.vaultTimeoutAction = 'lock';\n                return;\n            }\n        }\n        this.vaultTimeoutAction = newValue;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'options' | i18n}}</h1> </div> <p>{{'optionsDesc' | i18n}}</p> <form (ngSubmit)=\"submit()\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <app-vault-timeout-input [vaultTimeouts]=\"vaultTimeouts\" [formControl]=\"vaultTimeout\" ngDefaultControl> </app-vault-timeout-input> </div> </div> <div class=\"form-group\"> <label>{{'vaultTimeoutAction' | i18n}}</label> <div class=\"form-check form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLock\" value=\"lock\" [(ngModel)]=\"vaultTimeoutAction\"> <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\"> {{'lock' | i18n}} <small>{{'vaultTimeoutActionLockDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLogOut\" value=\"logOut\" [(ngModel)]=\"vaultTimeoutAction\" (ngModelChange)=\"vaultTimeoutActionChanged($event)\"> <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\"> {{'logOut' | i18n}} <small>{{'vaultTimeoutActionLogOutDesc' | i18n}}</small> </label> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <div class=\"d-flex\"> <label for=\"locale\">{{'language' | i18n}}</label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/localization/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\"> <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"form-text text-muted\">{{'languageDesc' | i18n}}</small> </div> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"disableIcons\" name=\"DisableIcons\" [(ngModel)]=\"disableIcons\"> <label class=\"form-check-label\" for=\"disableIcons\"> {{'disableIcons' | i18n}} </label> <a href=\"https://help.bitwarden.com/article/website-icons/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <small class=\"form-text text-muted\">{{'disableIconsDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enableGravatars\" name=\"enableGravatars\" [(ngModel)]=\"enableGravatars\"> <label class=\"form-check-label\" for=\"enableGravatars\"> {{'enableGravatars' | i18n}} </label> <a href=\"https://gravatar.com/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <small class=\"form-text text-muted\">{{'enableGravatarsDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enableFullWidth\" name=\"enableFullWidth\" [(ngModel)]=\"enableFullWidth\"> <label class=\"form-check-label\" for=\"enableFullWidth\"> {{'enableFullWidth' | i18n}} </label> </div> <small class=\"form-text text-muted\">{{'enableFullWidthDesc' | i18n}}</small> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"theme\">{{'theme' | i18n}}</label> <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\"> <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"form-text text-muted\">{{'themeDesc' | i18n}}</small> </div> </div> </div> <button type=\"submit\" class=\"btn btn-primary\"> {{'save' | i18n}} </button> </form> ","import { Component } from '@angular/core';\nimport {\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nimport {\n    VaultTimeoutInputComponent as VaultTimeoutInputComponentBase\n} from 'jslib-angular/components/settings/vault-timeout-input.component';\n\n@Component({\n    selector: 'app-vault-timeout-input',\n    templateUrl: 'vault-timeout-input.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: VaultTimeoutInputComponent,\n        },\n        {\n            provide: NG_VALIDATORS,\n            multi: true,\n            useExisting: VaultTimeoutInputComponent,\n        },\n    ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\"> {{'vaultTimeoutPolicyInEffect' | i18n : vaultTimeoutPolicyHours : vaultTimeoutPolicyMinutes}} </app-callout> <div [formGroup]=\"form\"> <div class=\"form-group\"> <label for=\"vaultTimeout\">{{'vaultTimeout' | i18n}}</label> <select id=\"vaultTimeout\" name=\"VaultTimeout\" formControlName=\"vaultTimeout\" class=\"form-control\"> <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"form-text text-muted\">{{'vaultTimeoutDesc' | i18n}}</small> </div> <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\"> <label for=\"customVaultTimeout\">{{'customVaultTimeout' | i18n}}</label> <div class=\"row\"> <div class=\"col-6\"> <input id=\"hours\" class=\"form-control\" type=\"number\" min=\"0\" name=\"hours\" formControlName=\"hours\"> <small>{{'hours' | i18n }}</small> </div> <div class=\"col-6\"> <input id=\"minutes\" class=\"form-control\" type=\"number\" min=\"0\" name=\"minutes\" formControlName=\"minutes\"> <small>{{'minutes' | i18n }}</small> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\n@Component({\n    selector: 'app-premium',\n    templateUrl: 'premium.component.html',\n})\nexport class PremiumComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n    canAccessPremium = false;\n    selfHosted = false;\n    premiumPrice = 10;\n    storageGbPrice = 4;\n    additionalStorage = 0;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService, private router: Router,\n        private messagingService: MessagingService, private syncService: SyncService,\n        private userService: UserService, private logService: LogService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        const premium = await this.tokenService.getPremium();\n        if (premium) {\n            this.router.navigate(['/settings/subscription']);\n            return;\n        }\n    }\n\n    async submit() {\n        let files: FileList = null;\n        if (this.selfHosted) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n        }\n\n        try {\n            if (this.selfHosted) {\n                if (!this.tokenService.getEmailVerified()) {\n                    this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                        this.i18nService.t('verifyEmailFirst'));\n                    return;\n                }\n\n                const fd = new FormData();\n                fd.append('license', files[0]);\n                this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n                    return this.finalizePremium();\n                });\n            } else {\n                this.formPromise = this.paymentComponent.createPaymentToken().then(result => {\n                    const fd = new FormData();\n                    fd.append('paymentMethodType', result[1].toString());\n                    if (result[0] != null) {\n                        fd.append('paymentToken', result[0]);\n                    }\n                    fd.append('additionalStorageGb', (this.additionalStorage || 0).toString());\n                    fd.append('country', this.taxInfoComponent.taxInfo.country);\n                    fd.append('postalCode', this.taxInfoComponent.taxInfo.postalCode);\n                    return this.apiService.postPremium(fd);\n                }).then(paymentResponse => {\n                    if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n                        return this.paymentComponent.handleStripeCardPayment(paymentResponse.paymentIntentClientSecret,\n                            () => this.finalizePremium());\n                    } else {\n                        return this.finalizePremium();\n                    }\n                });\n            }\n            await this.formPromise;\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async finalizePremium() {\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n        this.toasterService.popAsync('success', null, this.i18nService.t('premiumUpdated'));\n        this.messagingService.send('purchasedPremium');\n        this.router.navigate(['/settings/subscription']);\n    }\n\n    get additionalStorageTotal(): number {\n        return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n    }\n\n    get subtotal(): number {\n        return this.premiumPrice + this.additionalStorageTotal;\n    }\n\n    get taxCharges(): number {\n        return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null ?\n            (this.taxInfoComponent.taxRate / 100) * this.subtotal :\n            0;\n    }\n\n    get total(): number {\n        return (this.subtotal + this.taxCharges) || 0;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'goPremium' | i18n}}</h1> </div> <app-callout type=\"info\" *ngIf=\"canAccessPremium\" title=\"{{'youHavePremiumAccess' | i18n}}\" icon=\"fa-star\"> {{'alreadyPremiumFromOrg' | i18n}} </app-callout> <app-callout type=\"success\"> <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p> <ul class=\"fa-ul\"> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpStorage' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpTwoStep' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpEmergency' |i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpReports' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpTotp' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpSupport' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpFuture' | i18n}} </li> </ul> <p class=\"text-lg\" [ngClass]=\"{'mb-0':!selfHosted}\">{{'premiumPrice' | i18n : (premiumPrice | currency:'$')}}</p> <a href=\"https://vault.bitwarden.com/#/settings/premium\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\" *ngIf=\"selfHosted\"> {{'purchasePremium' | i18n}} </a> </app-callout> <ng-container *ngIf=\"selfHosted\"> <p>{{'uploadLicenseFilePremium' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_premium_license.json'}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> </ng-container> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\"> <h2 class=\"mt-5\">{{'addons' | i18n}}</h2> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label> <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\" [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\" placeholder=\"{{'additionalStorageGbDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (storageGbPrice | currency:'$') : ('year' | i18n)}}</small> </div> </div> <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2> {{'premiumMembership' | i18n}}: {{premiumPrice | currency:'$'}} <br> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{additionalStorageTotal | currency:'$'}} <hr class=\"my-3\"> <h2 class=\"spaced-header mb-4\">{{'paymentInformation' | i18n}}</h2> <app-payment [hideBank]=\"true\"></app-payment> <app-tax-info></app-tax-info> <div id=\"price\" class=\"my-4\"> <div class=\"text-muted text-sm\"> {{ 'planPrice' | i18n }}: {{ subtotal | currency: 'USD $' }} <br/> <ng-container> {{ 'estimatedTax' | i18n }}: {{ taxCharges | currency: 'USD $' }} </ng-container> </div> <hr class=\"my-1 col-3 ml-0\"> <p class=\"text-lg\"><strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}}/{{'year' | i18n}}</p> </div> <small class=\"text-muted font-italic\">{{'paymentChargedAnnually' | i18n}}</small> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> ","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'SettingsComponent';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n    premium: boolean;\n    selfHosted: boolean;\n    hasFamilySponsorshipAvailable: boolean;\n\n    constructor(private tokenService: TokenService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone, private platformUtilsService: PlatformUtilsService,\n        private userService: UserService) { }\n\n    async ngOnInit() {\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'purchasedPremium':\n                        await this.load();\n                        break;\n                    default:\n                }\n            });\n        });\n\n        this.selfHosted = await this.platformUtilsService.isSelfHost();\n        await this.load();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.premium = await this.tokenService.getPremium();\n        this.hasFamilySponsorshipAvailable = await this.userService.canManageSponsorships();\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myAccount' | i18n}} </a> <a routerLink=\"options\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'options' | i18n}} </a> <a routerLink=\"organizations\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'organizations' | i18n}} </a> <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"premium\"> {{'premiumMembership' | i18n}} </a> <a routerLink=\"premium\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!premium\"> {{'goPremium' | i18n}} </a> <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\"> {{'billing' | i18n}} </a> <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'twoStepLogin' | i18n}} </a> <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'domainRules' | i18n}} </a> <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'emergencyAccess' | i18n}} </a> <a routerLink=\"sponsored-families\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"hasFamilySponsorshipAvailable\"> {{'sponsoredFamilies' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { PlanSponsorshipType } from 'jslib-common/enums/planSponsorshipType';\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-sponsored-families',\n    templateUrl: 'sponsored-families.component.html',\n})\nexport class SponsoredFamiliesComponent implements OnInit {\n    loading = false;\n\n    availableSponsorshipOrgs: Organization[] = [];\n    activeSponsorshipOrgs: Organization[] = [];\n    selectedSponsorshipOrgId: string = '';\n    sponsorshipEmail: string = '';\n\n    // Conditional display properties\n    formPromise: Promise<any>;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private i18nService: I18nService, private toasterService: ToasterService,\n        private syncService: SyncService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async submit() {\n        this.formPromise = this.apiService.postCreateSponsorship(this.selectedSponsorshipOrgId, {\n            sponsoredEmail: this.sponsorshipEmail,\n            planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n            friendlyName: this.sponsorshipEmail,\n        });\n\n        await this.formPromise;\n        this.toasterService.popAsync('success', null, this.i18nService.t('sponsorshipCreated'));\n        this.formPromise = null;\n        this.resetForm();\n        await this.load(true);\n    }\n\n    async load(forceReload: boolean = false) {\n        if (this.loading) {\n            return;\n        }\n\n        this.loading = true;\n        if (forceReload) {\n            await this.syncService.fullSync(true);\n        }\n\n        const allOrgs = await this.userService.getAllOrganizations();\n        this.availableSponsorshipOrgs = allOrgs.filter(org => org.familySponsorshipAvailable);\n\n        this.activeSponsorshipOrgs = allOrgs.filter(org => org.familySponsorshipFriendlyName !== null);\n\n        if (this.availableSponsorshipOrgs.length === 1) {\n            this.selectedSponsorshipOrgId = this.availableSponsorshipOrgs[0].id;\n        }\n        this.loading = false;\n    }\n\n\n    private async resetForm() {\n        this.sponsorshipEmail = '';\n        this.selectedSponsorshipOrgId = '';\n    }\n\n    get anyActiveSponsorships(): boolean {\n        return this.activeSponsorshipOrgs.length > 0;\n    }\n\n    get anyOrgsAvailable(): boolean {\n        return this.availableSponsorshipOrgs.length > 0;\n    }\n\n    get moreThanOneOrgAvailable(): boolean {\n        return this.availableSponsorshipOrgs.length > 1;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'sponsoredFamilies' | i18n}}</h1> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading\"> <p> {{'sponsoredFamiliesEligible' | i18n}} </p> <div> {{'sponsoredFamiliesInclude' | i18n}}: <ul class=\"inset-list\"> <li>{{'sponsoredFamiliesPremiumAccess' | i18n}}</li> <li>{{'sponsoredFamiliesSharedCollections' | i18n}}</li> </ul> </div> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"anyOrgsAvailable\"> <div *ngIf=\"moreThanOneOrgAvailable\" class=\"form-group col-7\"> <label for=\"availableSponsorshipOrg\">{{ 'familiesSponsoringOrgSelect' | i18n}}</label> <select id=\"availableSponsorshipOrg\" name=\"Available Sponsorship Organization\" [(ngModel)]=\"selectedSponsorshipOrgId\" class=\"form-control\" required> <option value=\"\">-- {{'select' | i18n}} --</option> <option *ngFor=\"let o of availableSponsorshipOrgs\" [ngValue]=\"o.id\">{{o.name}}</option> </select> </div> <div class=\"form-group col-7\"> <label for=\"accountEmail\">{{'sponsoredFamiliesEmail' | i18n}}:</label> <input id=\"accountEmail\" class=\"form-control\" inputmode=\"email\" [(ngModel)]=\"sponsorshipEmail\" name=\"sponsorshipEmail\" required> <button class=\"btn btn-primary btn-submit mt-4\" type=\"submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'redeem' | i18n}}</span> </button> </div> </form> <ng-container *ngIf=\"anyActiveSponsorships\"> <div class=\"border-bottom\"> <table class=\"table table-hover table-list\"> <thead> <tr> <th>{{'recipient' | i18n}}</th> <th>{{'sponsoringOrg' | i18n}}</th> <th></th> </tr> </thead> <tbody> <ng-container *ngFor=\"let o of activeSponsorshipOrgs\"> <tr sponsoring-org-row [sponsoringOrg]=\"o\" (sponsorshipRemoved)=\"load(true)\"></tr> </ng-container> </tbody> </table> </div> <small>{{'sponsoredFamiliesLeaveCopy' | i18n}}</small> </ng-container> </ng-container> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: '[sponsoring-org-row]',\n    templateUrl: 'sponsoring-org-row.component.html',\n})\nexport class SponsoringOrgRowComponent {\n    @Input() sponsoringOrg: Organization = null;\n\n    @Output() sponsorshipRemoved = new EventEmitter();\n\n    revokeSponsorshipPromise: Promise<any>;\n    resendEmailPromise: Promise<any>;\n\n    constructor(private toasterService: ToasterService, private apiService: ApiService,\n        private i18nService: I18nService, private logService: LogService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    async revokeSponsorship() {\n        try {\n            this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n            await this.revokeSponsorshipPromise;\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        this.revokeSponsorshipPromise = null;\n    }\n\n    async resendEmail() {\n        this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n        await this.resendEmailPromise;\n        this.toasterService.popAsync('success', null, this.i18nService.t('emailSent'));\n        this.resendEmailPromise = null;\n    }\n\n    private async doRevokeSponsorship() {\n        const isConfirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('revokeSponsorshipConfirmation'),\n            `${this.i18nService.t('remove')} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n            this.i18nService.t('remove'), this.i18nService.t('cancel'), 'warning');\n\n        if (!isConfirmed) {\n            return;\n        }\n\n        await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n        this.toasterService.popAsync('success', null, this.i18nService.t('reclaimedFreePlan'));\n        this.sponsorshipRemoved.emit();\n    }\n}\n","<td> {{sponsoringOrg.familySponsorshipFriendlyName}} </td> <td>{{sponsoringOrg.name}}</td> <td class=\"table-action-right\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <button #resendEmailBtn [appApiAction]=\"resendEmailPromise\" class=\"dropdown-item btn-submit\" [disabled]=\"resendEmailBtn.loading\" (click)=\"resendEmail()\" [attr.aria-label]=\"'resendEmailLabel' | i18n : sponsoringOrg.familySponsorshipFriendlyName\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'resendEmail' | i18n }}</span> </button> <button #revokeSponsorshipBtn [appApiAction]=\"revokeSponsorshipPromise\" class=\"dropdown-item text-danger btn-submit\" [disabled]=\"revokeSponsorshipBtn.loading\" (click)=\"revokeSponsorship()\" [attr.aria-label]=\"'revokeAccount' | i18n : sponsoringOrg.familySponsorshipFriendlyName\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'remove' | i18n}}</span> </button> </div> </div> </td> ","import { Component } from '@angular/core';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\n\nimport { CipherWithIdRequest } from 'jslib-common/models/request/cipherWithIdRequest';\nimport { FolderWithIdRequest } from 'jslib-common/models/request/folderWithIdRequest';\nimport { UpdateKeyRequest } from 'jslib-common/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-update-key',\n    templateUrl: 'update-key.component.html',\n})\nexport class UpdateKeyComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private syncService: SyncService,\n        private folderService: FolderService, private cipherService: CipherService,\n        private logService: LogService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (hasEncKey) {\n            return;\n        }\n\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.makeRequest().then(request => {\n                return this.apiService.postAccountKey(request);\n            });\n            await this.formPromise;\n            const toast: Toast = {\n                type: 'success',\n                title: this.i18nService.t('keyUpdated'),\n                body: this.i18nService.t('logBackInOthersToo'),\n                timeout: 15000,\n            };\n            this.toasterService.popAsync(toast);\n            this.messagingService.send('logout');\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    private async makeRequest(): Promise<UpdateKeyRequest> {\n        const key = await this.cryptoService.getKey();\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: EncString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        await this.syncService.fullSync(true);\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        return request;\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{'updateEncryptionKey' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'updateEncryptionKeyShortDesc' | i18n}} {{'updateEncryptionKeyDesc' | i18n}} <a href=\"https://help.bitwarden.com/article/update-encryption-key/\" target=\"_blank\" rel=\"noopener\">{{'learnMore' | i18n}}</a> </p> <app-callout type=\"warning\">{{'updateEncryptionKeyWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'updateEncryptionKey' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { SubscriptionResponse } from 'jslib-common/models/response/subscriptionResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\n\n@Component({\n    selector: 'app-user-subscription',\n    templateUrl: 'user-subscription.component.html',\n})\nexport class UserSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    sub: SubscriptionResponse;\n    selfHosted = false;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private tokenService: TokenService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private toasterService: ToasterService, private router: Router, private logService: LogService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.tokenService.getPremium()) {\n            this.loading = true;\n            this.sub = await this.apiService.getUserSubscription();\n        } else {\n            this.router.navigate(['/settings/premium']);\n            return;\n        }\n\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postReinstatePremium();\n            await this.reinstatePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postCancelPremium();\n            await this.cancelPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    downloadLicense() {\n        if (this.loading) {\n            return;\n        }\n\n        const licenseString = JSON.stringify(this.sub.license, null, 2);\n        this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_premium_license.json');\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(load: boolean) {\n        this.showUpdateLicense = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t(add ? 'addStorage' : 'removeStorage'), null, null, 'warning');\n            return;\n        }\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get usingInAppPurchase() {\n        return this.sub != null ? this.sub.usingInAppPurchase : false;\n    }\n}\n","<div class=\"page-header\"> <h1> {{'premiumMembership' | i18n}} <small *ngIf=\"firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"sub\"> <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\"> {{'subscriptionCanceled' | i18n}}</app-callout> <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\"> <p>{{'subscriptionPendingCanceled' | i18n}}</p> <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\" [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'reinstateSubscription' | i18n}}</span> </button> </app-callout> <dl *ngIf=\"selfHosted\"> <dt>{{'expiration' | i18n}}</dt> <dd *ngIf=\"sub.expiration\">{{sub.expiration | date:'mediumDate'}}</dd> <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd> </dl> <div class=\"row\" *ngIf=\"!selfHosted\"> <div class=\"col-4\"> <dl> <dt>{{'status' | i18n}}</dt> <dd> <span class=\"text-capitalize\">{{(subscription && subscription.status) || '-'}}</span> <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span> </dd> <dt>{{'nextCharge' | i18n}}</dt> <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) : '-'}} </dd> </dl> </div> <div class=\"col-8\" *ngIf=\"subscription\"> <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong> <table class=\"table\"> <tbody> <tr *ngFor=\"let i of subscription.items\"> <td> {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}} </td> <td> {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}} </td> </tr> </tbody> </table> </div> </div> <ng-container *ngIf=\"selfHosted\"> <div> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\"> {{'updateLicense' | i18n}} </button> <a href=\"https://vault.bitwarden.com/#/settings/subscription\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\"> {{'manageSubscription' | i18n}} </a> </div> <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3> <app-update-license (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\"> </app-update-license> </div> </div> </ng-container> <ng-container *ngIf=\"!selfHosted\"> <div class=\"d-flex\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"downloadLicense()\" *ngIf=\"!subscription || !subscription.cancelled\"> {{'downloadLicense' | i18n}} </button> <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\" [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\" *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'cancelSubscription' | i18n}}</span> </button> </div> <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2> <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p> <div class=\"progress\"> <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\" [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\"> {{(storagePercentage / 100) | percent}}</div> </div> <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\"> {{'addStorage' | i18n}} </button> <button type=\"button\" class=\"ml-1 btn btn-outline-secondary\" (click)=\"adjustStorage(false)\"> {{'removeStorage' | i18n}} </button> </div> <app-adjust-storage [storageGbPrice]=\"4\" [add]=\"adjustStorageAdd\" (onAdjusted)=\"closeStorage(true)\" (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage> </div> </ng-container> </ng-container> </ng-container> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\n@Component({\n    selector: 'app-verify-email',\n    templateUrl: 'verify-email.component.html',\n})\nexport class VerifyEmailComponent {\n    actionPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private logService: LogService) { }\n\n    async send() {\n        if (this.actionPromise != null) {\n            return;\n        }\n        try {\n            this.actionPromise = this.apiService.postAccountVerifyEmail();\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('checkInboxForVerification'));\n        } catch (e) {\n            this.logService.error(e);\n        }\n        this.actionPromise = null;\n    }\n}\n","<div class=\"card border-warning\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-envelope-o fa-fw\" aria-hidden=\"true\"></i> {{'verifyEmail' | i18n}} </div> <div class=\"card-body\"> <p>{{'verifyEmailDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-block btn-outline-secondary btn-submit\" #sendBtn [appApiAction]=\"actionPromise\" [disabled]=\"sendBtn.loading\" (click)=\"send()\"> <i class=\"fa fa-spin fa-spinner\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span> {{'sendEmail' | i18n}} </span> </button> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { BreachAccountResponse } from 'jslib-common/models/response/breachAccountResponse';\n\n@Component({\n    selector: 'app-breach-report',\n    templateUrl: 'breach-report.component.html',\n})\nexport class BreachReportComponent implements OnInit {\n    error = false;\n    username: string;\n    checkedUsername: string;\n    breachedAccounts: BreachAccountResponse[] = [];\n    formPromise: Promise<BreachAccountResponse[]>;\n\n    constructor(private auditService: AuditService, private userService: UserService) { }\n\n    async ngOnInit() {\n        this.username = await this.userService.getEmail();\n    }\n\n    async submit() {\n        this.error = false;\n        this.username = this.username.toLowerCase();\n        try {\n            this.formPromise = this.auditService.breachedAccounts(this.username);\n            this.breachedAccounts = await this.formPromise;\n        } catch {\n            this.error = true;\n        }\n        this.checkedUsername = this.username;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'dataBreachReport' | i18n}}</h1> </div> <p>{{'breachDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"username\">{{'username' | i18n}}</label> <input id=\"username\" type=\"text\" name=\"Username\" class=\"form-control\" [(ngModel)]=\"username\" required> <small class=\"form-text text-muted\">{{'breachCheckUsernameEmail' | i18n}}</small> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'checkBreaches' | i18n}}</span> </button> </form> <div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\"> <p *ngIf=\"error\">{{'reportError' | i18n}}...</p> <ng-container *ngIf=\"!error\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!breachedAccounts.length\"> {{'breachUsernameNotFound' | i18n : checkedUsername}} </app-callout> <app-callout type=\"danger\" title=\"{{'breachFound' | i18n}}\" *ngIf=\"breachedAccounts.length\"> {{'breachUsernameFound' | i18n : checkedUsername : breachedAccounts.length}} </app-callout> <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\"> <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\"> <div class=\"row\"> <div class=\"col-2 text-center\"> <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\"> </div> <div class=\"col-7\"> <h3 class=\"text-lg\">{{a.title}}</h3> <p [innerHTML]=\"a.description\"></p> <p class=\"mb-1\">{{'compromisedData' | i18n}}:</p> <ul> <li *ngFor=\"let d of a.dataClasses\">{{d}}</li> </ul> </div> <div class=\"col-3\"> <dl> <dt>{{'website' | i18n}}</dt> <dd>{{a.domain}}</dd> <dt>{{'affectedUsers' | i18n}}</dt> <dd>{{a.pwnCount | number}}</dd> <dt>{{'breachOccurred' | i18n}}</dt> <dd>{{a.breachDate | date: 'mediumDate'}}</dd> <dt>{{'breachReported' | i18n}}</dt> <dd>{{a.addedDate | date: 'mediumDate'}}</dd> </dl> </div> </div> </li> </ul> </ng-container> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent,\n} from 'jslib-angular/components/password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator-history',\n    templateUrl: 'password-generator-history.component.html',\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{'passwordHistory' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"history.length\"> <ul class=\"list-group list-group-flush\"> <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\"> <div class=\"password-row\"> <div class=\"text-monospace password-wrapper\" [innerHTML]=\"h.password | colorPassword\" appSelectCopy></div> <small class=\"text-muted\">{{h.date | date:'medium'}}</small> </div> <div class=\"ml-auto\"> <button class=\"btn btn-link\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(h.password)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </li> </ul> </div> <div class=\"modal-body\" *ngIf=\"!history.length\"> {{'noPasswordsInList' | i18n}} </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'close' | i18n}} </button> <div class=\"ml-auto\"> <button type=\"button\" (click)=\"clear()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'clear' | i18n}}\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> </div> ","import {\n    Component,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorComponent as BasePasswordGeneratorComponent,\n} from 'jslib-angular/components/password-generator.component';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\nimport { PasswordGeneratorHistoryComponent } from './password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator',\n    templateUrl: 'password-generator.component.html',\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n    @ViewChild('historyTemplate', { read: ViewContainerRef, static: true }) historyModalRef: ViewContainerRef;\n\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, private modalService: ModalService) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n\n    async history() {\n        await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n    }\n\n    lengthChanged() {\n        document.getElementById('length').focus();\n    }\n\n    minNumberChanged() {\n        document.getElementById('min-number').focus();\n    }\n\n    minSpecialChanged() {\n        document.getElementById('min-special').focus();\n    }\n}\n","<div class=\"page-header\"> <h1>{{'passwordGenerator' | i18n}}</h1> </div> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions?.inEffect()\"> {{'passwordGeneratorPolicyInEffect' | i18n}} </app-callout> <div class=\"card card-password bg-light my-4\"> <div class=\"card-body\"> <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div> </div> </div> <div class=\"form-group\"> <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\"> <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"options.type\" name=\"Type_{{o.value}}\" id=\"type_{{o.value}}\" [value]=\"o.value\" (change)=\"saveOptions()\" [checked]=\"options.type === o.value\"> <label class=\"form-check-label\" for=\"type_{{o.value}}\"> {{o.name}} </label> </div> </div> <ng-container *ngIf=\"options.type === 'passphrase'\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"num-words\">{{'numWords' | i18n}}</label> <input id=\"num-words\" class=\"form-control\" type=\"number\" min=\"3\" max=\"20\" [(ngModel)]=\"options.numWords\" (blur)=\"saveOptions()\"> </div> <div class=\"form-group col-4\"> <label for=\"word-separator\">{{'wordSeparator' | i18n}}</label> <input id=\"word-separator\" class=\"form-control\" type=\"text\" maxlength=\"1\" [(ngModel)]=\"options.wordSeparator\" (blur)=\"saveOptions()\"> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input id=\"capitalize\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.capitalize\" [disabled]=\"enforcedPolicyOptions?.capitalize\"> <label for=\"capitalize\" class=\"form-check-label\">{{'capitalize' | i18n}}</label> </div> <div class=\"form-check\"> <input id=\"include-number\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.includeNumber\" [disabled]=\"enforcedPolicyOptions?.includeNumber\"> <label for=\"include-number\" class=\"form-check-label\">{{'includeNumber' | i18n}}</label> </div> </div> </ng-container> <ng-container *ngIf=\"options.type === 'password'\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"length\">{{'length' | i18n}}</label> <input id=\"length\" class=\"form-control\" type=\"number\" min=\"5\" max=\"128\" [(ngModel)]=\"options.length\" (blur)=\"saveOptions()\" (change)=\"lengthChanged()\"> </div> <div class=\"form-group col-4\"> <label for=\"min-number\">{{'minNumbers' | i18n}}</label> <input id=\"min-number\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\" [(ngModel)]=\"options.minNumber\" (change)=\"minNumberChanged()\"> </div> <div class=\"form-group col-4\"> <label for=\"min-special\">{{'minSpecial' | i18n}}</label> <input id=\"min-special\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\" [(ngModel)]=\"options.minSpecial\" (change)=\"minSpecialChanged()\"> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input id=\"uppercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.uppercase\" [disabled]=\"enforcedPolicyOptions?.useUppercase\"> <label for=\"uppercase\" class=\"form-check-label\">A-Z</label> </div> <div class=\"form-check\"> <input id=\"lowercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.lowercase\" [disabled]=\"enforcedPolicyOptions?.useLowercase\"> <label for=\"lowercase\" class=\"form-check-label\">a-z</label> </div> <div class=\"form-check\"> <input id=\"numbers\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.number\" [disabled]=\"enforcedPolicyOptions?.useNumbers\"> <label for=\"numbers\" class=\"form-check-label\">0-9</label> </div> <div class=\"form-check\"> <input id=\"special\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.special\" [disabled]=\"enforcedPolicyOptions?.useSpecial\"> <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label> </div> <div class=\"form-check\"> <input id=\"ambiguous\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"avoidAmbiguous\"> <label for=\"ambiguous\" class=\"form-check-label\">{{'ambiguous' | i18n}}</label> </div> </div> </ng-container> <div class=\"d-flex\"> <div> <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\"> {{'regeneratePassword' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\"> {{'copyPassword' | i18n}} </button> </div> <div class=\"ml-auto\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"history()\" appA11yTitle=\"{{'passwordHistory' | i18n}}\"> <i class=\"fa fa-clock-o fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> <ng-template #historyTemplate></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent implements OnInit {\n    canAccessPremium = false;\n\n    constructor(private userService: UserService, private messagingService: MessagingService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card mb-4\"> <div class=\"card-header\">{{'tools' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'passwordGenerator' | i18n}} </a> <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'importData' | i18n}} </a> <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exportVault' | i18n}} </a> </div> </div> <div class=\"card\"> <div class=\"card-header d-flex\"> {{'reports' | i18n}} <div class=\"ml-auto\"> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </div> </div> <div class=\"list-group list-group-flush\"> <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exposedPasswordsReport' | i18n}} </a> <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'reusedPasswordsReport' | i18n}} </a> <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'weakPasswordsReport' | i18n}} </a> <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'unsecuredWebsitesReport' | i18n}} </a> <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'inactive2faReport' | i18n}} </a> <a routerLink=\"breach-report\" class=\"list-group-item d-flex\" routerLinkActive=\"active\"> {{'dataBreachReport' | i18n}} <div class=\"ml-auto\"> <span class=\"badge badge-success\" *ngIf=\"!canAccessPremium\"> {{'free' | i18n | uppercase}} </span> </div> </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    FolderAddEditComponent as BaseFolderAddEditComponent,\n} from 'jslib-angular/components/folder-add-edit.component';\n\n@Component({\n    selector: 'app-folder-add-edit',\n    templateUrl: 'folder-add-edit.component.html',\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n    constructor(folderService: FolderService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, logService: LogService) {\n        super(folderService, i18nService, platformUtilsService, logService);\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"folder.name\" required appAutofocus> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { ShareComponent as BaseShareComponent } from 'jslib-angular/components/share.component';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\n@Component({\n    selector: 'app-vault-share',\n    templateUrl: 'share.component.html',\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, userService: UserService,\n        cipherService: CipherService, logService: LogService) {\n        super(collectionService, platformUtilsService, i18nService, userService, cipherService,\n            logService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach(c => this.check(c, select));\n    }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"shareTitle\"> {{'moveToOrganization' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\"> {{'noOrganizationsList' | i18n}} </div> <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\"> <p>{{'moveToOrgDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"organization\">{{'organization' | i18n}}</label> <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\" (change)=\"filterCollections()\"> <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option> </select> </div> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\" [ngClass]=\"{loading:form.loading}\" *ngIf=\"organizations && organizations.length\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-primary\" *ngIf=\"!organizations || !organizations.length\"> {{'newOrganization' | i18n}} </a> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    ChangeDetectorRef,\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { OrganizationsComponent } from '../settings/organizations.component';\nimport { UpdateKeyComponent } from '../settings/update-key.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { FolderAddEditComponent } from './folder-add-edit.component';\nimport { GroupingsComponent } from './groupings.component';\nimport { ShareComponent } from './share.component';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nconst BroadcasterSubscriptionId = 'VaultComponent';\n\n@Component({\n    selector: 'app-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n    @ViewChild(OrganizationsComponent, { static: true }) organizationsComponent: OrganizationsComponent;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('folderAddEdit', { read: ViewContainerRef, static: true }) folderAddEditModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('share', { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('updateKeyTemplate', { read: ViewContainerRef, static: true }) updateKeyModalRef: ViewContainerRef;\n\n    favorites: boolean = false;\n    type: CipherType = null;\n    folderId: string = null;\n    collectionId: string = null;\n    showVerifyEmail = false;\n    showBrowserOutdated = false;\n    showUpdateKey = false;\n    showPremiumCallout = false;\n    showRedeemSponsorship = false;\n    showProviders = false;\n    deleted: boolean = false;\n    trashCleanupWarning: string = null;\n\n\n    constructor(private syncService: SyncService, private route: ActivatedRoute,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private i18nService: I18nService, private modalService: ModalService,\n        private tokenService: TokenService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone) { }\n\n    async ngOnInit() {\n        this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n        this.showBrowserOutdated = window.navigator.userAgent.indexOf('MSIE') !== -1;\n        this.trashCleanupWarning = this.i18nService.t(\n            this.platformUtilsService.isSelfHost() ? 'trashCleanupWarningSelfHosted' : 'trashCleanupWarning'\n        );\n\n        this.route.queryParams.pipe(first()).subscribe(async params => {\n            await this.syncService.fullSync(false);\n\n            this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n            const canAccessPremium = await this.userService.canAccessPremium();\n            this.showPremiumCallout = !this.showVerifyEmail && !canAccessPremium &&\n                !this.platformUtilsService.isSelfHost();\n\n            this.showProviders = (await this.userService.getAllProviders()).length > 0;\n\n            const allOrgs = await this.userService.getAllOrganizations();\n            this.showRedeemSponsorship = allOrgs.some(o => o.familySponsorshipAvailable) && !allOrgs.some(o => o.familySponsorshipFriendlyName != null);\n\n            await Promise.all([\n                this.groupingsComponent.load(),\n                this.organizationsComponent.load(),\n            ]);\n\n            if (params == null) {\n                this.groupingsComponent.selectedAll = true;\n                await this.ciphersComponent.reload();\n            } else {\n                if (params.deleted) {\n                    this.groupingsComponent.selectedTrash = true;\n                    await this.filterDeleted();\n                } else if (params.favorites) {\n                    this.groupingsComponent.selectedFavorites = true;\n                    await this.filterFavorites();\n                } else if (params.type) {\n                    const t = parseInt(params.type, null);\n                    this.groupingsComponent.selectedType = t;\n                    await this.filterCipherType(t);\n                } else if (params.folderId) {\n                    this.groupingsComponent.selectedFolder = true;\n                    this.groupingsComponent.selectedFolderId = params.folderId;\n                    await this.filterFolder(params.folderId);\n                } else if (params.collectionId) {\n                    this.groupingsComponent.selectedCollectionId = params.collectionId;\n                    await this.filterCollection(params.collectionId);\n                } else {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                }\n            }\n\n            this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                this.ngZone.run(async () => {\n                    switch (message.command) {\n                        case 'syncCompleted':\n                            if (message.successfully) {\n                                await Promise.all([\n                                    this.groupingsComponent.load(),\n                                    this.organizationsComponent.load(),\n                                    this.ciphersComponent.load(this.ciphersComponent.filter),\n                                ]);\n                                this.changeDetectorRef.detectChanges();\n                            }\n                            break;\n                    }\n                });\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.reload();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterFavorites() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFavorites');\n        await this.ciphersComponent.reload(c => c.favorite);\n        this.clearFilters();\n        this.favorites = true;\n        this.go();\n    }\n\n    async filterDeleted() {\n        this.ciphersComponent.showAddNew = false;\n        this.ciphersComponent.deleted = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\n        await this.ciphersComponent.reload(null, true);\n        this.clearFilters();\n        this.deleted = true;\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        await this.ciphersComponent.reload(c => c.type === type);\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterFolder(folderId: string) {\n        this.ciphersComponent.showAddNew = true;\n        folderId = folderId === 'none' ? null : folderId;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFolder');\n        await this.ciphersComponent.reload(c => c.folderId === folderId);\n        this.clearFilters();\n        this.folderId = folderId == null ? 'none' : folderId;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        await this.ciphersComponent.reload(c => c.collectionIds != null &&\n            c.collectionIds.indexOf(collectionId) > -1);\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    async editCipherAttachments(cipher: CipherView) {\n        const canAccessPremium = await this.userService.canAccessPremium();\n        if (cipher.organizationId == null && !canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        } else if (cipher.organizationId != null) {\n            const org = await this.userService.getOrganization(cipher.organizationId);\n            if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n                this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n                return;\n            }\n        }\n\n        let madeAttachmentChanges = false;\n        const [modal] = await this.modalService.openViewRef(AttachmentsComponent, this.attachmentsModalRef, comp => {\n            comp.cipherId = cipher.id;\n            comp.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n            comp.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n            comp.onReuploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        });\n\n        modal.onClosed.subscribe(async () => {\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    async shareCipher(cipher: CipherView) {\n        const [modal] = await this.modalService.openViewRef(ShareComponent, this.shareModalRef, comp => {\n            comp.cipherId = cipher.id;\n            comp.onSharedCipher.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async editCipherCollections(cipher: CipherView) {\n        const [modal] = await this.modalService.openViewRef(CollectionsComponent, this.collectionsModalRef, comp => {\n            comp.cipherId = cipher.id;\n            comp.onSavedCollections.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async addFolder() {\n        const [modal] = await this.modalService.openViewRef(FolderAddEditComponent, this.folderAddEditModalRef, comp => {\n            comp.folderId = null;\n            comp.onSavedFolder.subscribe(async () => {\n                modal.close();\n                await this.groupingsComponent.loadFolders();\n            });\n        });\n    }\n\n    async editFolder(folderId: string) {\n        const [modal] = await this.modalService.openViewRef(FolderAddEditComponent, this.folderAddEditModalRef, comp => {\n            comp.folderId = folderId;\n            comp.onSavedFolder.subscribe(async () => {\n                modal.close();\n                await this.groupingsComponent.loadFolders();\n            });\n            comp.onDeletedFolder.subscribe(async () => {\n                modal.close();\n                await this.groupingsComponent.loadFolders();\n                await this.filterFolder('none');\n                this.groupingsComponent.selectedFolderId = null;\n            });\n        });\n    }\n\n    async addCipher() {\n        const component = await this.editCipher(null);\n        component.type = this.type;\n        component.folderId = this.folderId === 'none' ? null : this.folderId;\n        if (this.collectionId != null) {\n            const collection = this.groupingsComponent.collections.filter(c => c.id === this.collectionId);\n            if (collection.length > 0) {\n                component.organizationId = collection[0].organizationId;\n                component.collectionIds = [this.collectionId];\n            }\n        }\n    }\n\n    async editCipher(cipher: CipherView) {\n        const [modal, childComponent] = await this.modalService.openViewRef(AddEditComponent, this.cipherAddEditModalRef, comp => {\n            comp.cipherId = cipher == null ? null : cipher.id;\n            comp.onSavedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n            comp.onDeletedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n            comp.onRestoredCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n\n        return childComponent;\n    }\n\n    async cloneCipher(cipher: CipherView) {\n        const component = await this.editCipher(cipher);\n        component.cloneMode = true;\n    }\n\n    async updateKey() {\n        await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n    }\n\n    private clearFilters() {\n        this.folderId = null;\n        this.collectionId = null;\n        this.favorites = false;\n        this.type = null;\n        this.deleted = false;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                favorites: this.favorites ? true : null,\n                type: this.type,\n                folderId: this.folderId,\n                collectionId: this.collectionId,\n                deleted: this.deleted ? true : null,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <app-vault-groupings (onAllClicked)=\"clearGroupingFilters()\" (onFavoritesClicked)=\"filterFavorites()\" (onCipherTypeClicked)=\"filterCipherType($event)\" (onFolderClicked)=\"filterFolder($event.id)\" (onAddFolder)=\"addFolder()\" (onEditFolder)=\"editFolder($event.id)\" (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\" (onTrashClicked)=\"filterDeleted()\"> </app-vault-groupings> </div> <div class=\"col-6\"> <div class=\"page-header d-flex\"> <h1> {{'myVault' | i18n}} <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [deleted]=\"deleted\"> </app-vault-bulk-actions> <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addCipher()\" *ngIf=\"!deleted\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}} </button> </div> </div> <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"fa-warning\"> {{trashCleanupWarning}} </app-callout> <app-vault-ciphers (onCipherClicked)=\"editCipher($event)\" (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\" (onShareClicked)=\"shareCipher($event)\" (onCollectionsClicked)=\"editCipherCollections($event)\" (onCloneClicked)=\"cloneCipher($event)\"> </app-vault-ciphers> </div> <div class=\"col-3\"> <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateKeyTitle' | i18n}} </div> <div class=\"card-body\"> <p>{{'updateEncryptionKeyShortDesc' | i18n}}</p> <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\"> {{'updateEncryptionKey' | i18n}} </button> </div> </div> <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email> <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateBrowser' | i18n}} </div> <div class=\"card-body\"> <p>{{'updateBrowserDesc' | i18n}}</p> <a class=\"btn btn-block btn-outline-secondary\" target=\"_blank\" href=\"https://browser-update.org/update-browser.html\" rel=\"noopener\"> {{'updateBrowser' | i18n}} </a> </div> </div> <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\"> <div class=\"card-header bg-success text-white\"> <i class=\"fa fa-star fa-fw\" aria-hidden=\"true\"></i> {{'goPremium' | i18n}} </div> <div class=\"card-body\"> <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p> <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/premium\"> {{'goPremium' | i18n}} </a> </div> </div> <div class=\"card mb-4\"> <div class=\"card-header d-flex\"> {{'organizations' | i18n}} <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/what-is-an-organization/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <app-organizations [vault]=\"true\"></app-organizations> </div> </div> <div class=\"card border-success mb-4\" *ngIf=\"showRedeemSponsorship\"> <div class=\"card-header bg-success text-white\"> {{'freeFamiliesPlan' | i18n}} </div> <div class=\"card-body\"> <p>{{'sponsoredFamiliesEligible' | i18n}}</p> <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/sponsored-families\"> {{'redeemNow' | i18n}} </a> </div> </div> <div class=\"card mt-4\" *ngIf=\"showProviders\"> <div class=\"card-header d-flex\"> {{'providers' | i18n}} <a class=\"ml-auto\" href=\"https://bitwarden.com/help/article/about-providers/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <app-providers vault=\"true\"></app-providers> </div> </div> </div> </div> </div> <ng-template #attachments></ng-template> <ng-template #folderAddEdit></ng-template> <ng-template #cipherAddEdit></ng-template> <ng-template #share></ng-template> <ng-template #collections></ng-template> <ng-template #updateKeyTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class DisableSendPolicy extends BasePolicy {\n    name = 'disableSend';\n    description = 'disableSendPolicyDesc';\n    type = PolicyType.DisableSend;\n    component = DisableSendPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-disable-send',\n    templateUrl: 'disable-send.component.html',\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {\n}\n","<app-callout type=\"warning\"> {{'disableSendExemption' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class MasterPasswordPolicy extends BasePolicy {\n    name = 'masterPass';\n    description = 'masterPassPolicyDesc';\n    type = PolicyType.MasterPassword;\n    component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-master-password',\n    templateUrl: 'master-password.component.html',\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n\n    data = this.fb.group({\n        minComplexity: [null],\n        minLength: [null],\n        requireUpper: [null],\n        requireLower: [null],\n        requireNumbers: [null],\n        requireSpecial: [null],\n    });\n\n    passwordScores: { name: string; value: number; }[];\n    showKeyConnectorInfo: boolean = false;\n\n    constructor(private fb: FormBuilder, i18nService: I18nService, private userService: UserService) {\n        super();\n\n        this.passwordScores = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('weak') + ' (0)', value: 0 },\n            { name: i18nService.t('weak') + ' (1)', value: 1 },\n            { name: i18nService.t('weak') + ' (2)', value: 2 },\n            { name: i18nService.t('good') + ' (3)', value: 3 },\n            { name: i18nService.t('strong') + ' (4)', value: 4 },\n        ];\n    }\n\n    async ngOnInit() {\n        super.ngOnInit();\n        const organization = await this.userService.getOrganization(this.policyResponse.organizationId);\n        this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n    }\n}\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\"> {{'keyConnectorPolicyRestriction' | i18n}} </app-callout> <div [formGroup]=\"data\"> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"minComplexity\">{{'minComplexityScore' | i18n}}</label> <select id=\"minComplexity\" name=\"minComplexity\" formControlName=\"minComplexity\" class=\"form-control\"> <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> <div class=\"col-6 form-group\"> <label for=\"minLength\">{{'minLength' | i18n}}</label> <input id=\"minLength\" class=\"form-control\" type=\"number\" min=\"8\" name=\"minLength\" formControlName=\"minLength\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"requireUpper\" name=\"requireUpper\" formControlName=\"requireUpper\"> <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"requireLower\" name=\"requireLower\" formControlName=\"requireLower\"> <label class=\"form-check-label\" for=\"requireLower\">a-z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"requireNumbers\" name=\"requireNumbers\" formControlName=\"requireNumbers\"> <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"requireSpecial\" name=\"requireSpecial\" formControlName=\"requireSpecial\"> <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n    name = 'passwordGenerator';\n    description = 'passwordGeneratorPolicyDesc';\n    type = PolicyType.PasswordGenerator;\n    component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-password-generator',\n    templateUrl: 'password-generator.component.html',\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n\n    data = this.fb.group({\n        defaultType: [null],\n        minLength: [null],\n        useUpper: [null],\n        useLower: [null],\n        useNumbers: [null],\n        useSpecial: [null],\n        minNumbers: [null],\n        minSpecial: [null],\n        minNumberWords: [null],\n        capitalize: [null],\n        includeNumber: [null],\n    });\n\n    defaultTypes: { name: string; value: string; }[];\n\n    constructor(private fb: FormBuilder, i18nService: I18nService) {\n        super();\n\n        this.defaultTypes = [\n            { name: i18nService.t('userPreference'), value: null },\n            { name: i18nService.t('password'), value: 'password' },\n            { name: i18nService.t('passphrase'), value: 'passphrase' },\n        ];\n    }\n}\n","<div [formGroup]=\"data\"> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group mb-0\"> <label for=\"defaultType\">{{'defaultType' | i18n}}</label> <select id=\"defaultType\" name=\"defaultType\" formControlName=\"defaultType\" class=\"form-control\"> <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <h3 class=\"mt-4\">{{'password' | i18n}}</h3> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"minLength\">{{'minLength' | i18n}}</label> <input id=\"minLength\" class=\"form-control\" type=\"number\" name=\"minLength\" min=\"5\" max=\"128\" formControlName=\"minLength\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"minNumbers\">{{'minNumbers' | i18n}}</label> <input id=\"minNumbers\" class=\"form-control\" type=\"number\" name=\"minNumbers\" min=\"0\" max=\"9\" formControlName=\"minNumbers\"> </div> <div class=\"col-6 form-group\"> <label for=\"minSpecial\">{{'minSpecial' | i18n}}</label> <input id=\"minSpecial\" class=\"form-control\" type=\"number\" name=\"minSpecial\" min=\"0\" max=\"9\" formControlName=\"minSpecial\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"useUpper\" formControlName=\"useUpper\" name=\"useUpper\"> <label class=\"form-check-label\" for=\"useUpper\">A-Z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"useLower\" name=\"useLower\" formControlName=\"useLower\"> <label class=\"form-check-label\" for=\"useLower\">a-z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"useNumbers\" name=\"useNumbers\" formControlName=\"useNumbers\"> <label class=\"form-check-label\" for=\"useNumbers\">0-9</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"useSpecial\" name=\"useSpecial\" formControlName=\"useSpecial\"> <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label> </div> <h3 class=\"mt-4\">{{'passphrase' | i18n}}</h3> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"minNumberWords\">{{'minimumNumberOfWords' | i18n}}</label> <input id=\"minNumberWords\" class=\"form-control\" type=\"number\" name=\"minNumberWords\" min=\"3\" max=\"20\" formControlName=\"minNumberWords\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"capitalize\" name=\"capitalize\" formControlName=\"capitalize\"> <label class=\"form-check-label\" for=\"capitalize\">{{'capitalize' | i18n}}</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"includeNumber\" name=\"includeNumber\" formControlName=\"includeNumber\"> <label class=\"form-check-label\" for=\"includeNumber\">{{'includeNumber' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n    name = 'personalOwnership';\n    description = 'personalOwnershipPolicyDesc';\n    type = PolicyType.PersonalOwnership;\n    component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-personal-ownership',\n    templateUrl: 'personal-ownership.component.html',\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {\n}\n","<app-callout type=\"warning\"> {{'personalOwnershipExemption' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'personalOwnershipCheckboxDesc' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class RequireSsoPolicy extends BasePolicy {\n    name = 'requireSso';\n    description = 'requireSsoPolicyDesc';\n    type = PolicyType.RequireSso;\n    component = RequireSsoPolicyComponent;\n\n    display(organization: Organization) {\n        return organization.useSso;\n    }\n}\n\n@Component({\n    selector: 'policy-require-sso',\n    templateUrl: 'require-sso.component.html',\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n    constructor(private i18nService: I18nService) {\n        super();\n    }\n\n    buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n        const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n        if (this.enabled.value && !singleOrgEnabled) {\n            throw new Error(this.i18nService.t('requireSsoPolicyReqError'));\n        }\n\n        return super.buildRequest(policiesEnabledMap);\n    }\n}\n","<app-callout type=\"tip\" title=\"{{'prerequisite' | i18n}}\"> {{'requireSsoPolicyReq' | i18n}} </app-callout> <app-callout type=\"warning\"> {{'requireSsoExemption' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class ResetPasswordPolicy extends BasePolicy {\n    name = 'resetPasswordPolicy';\n    description = 'resetPasswordPolicyDescription';\n    type = PolicyType.ResetPassword;\n    component = ResetPasswordPolicyComponent;\n\n    display(organization: Organization) {\n        return organization.useResetPassword;\n    }\n}\n\n@Component({\n    selector: 'policy-reset-password',\n    templateUrl: 'reset-password.component.html',\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n\n    data = this.fb.group({\n        autoEnrollEnabled: false,\n    });\n\n    defaultTypes: { name: string; value: string; }[];\n    showKeyConnectorInfo: boolean = false;\n\n    constructor(private fb: FormBuilder, private userService: UserService) {\n        super();\n    }\n\n    async ngOnInit() {\n        super.ngOnInit();\n        const organization = await this.userService.getOrganization(this.policyResponse.organizationId);\n        this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n    }\n}\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\"> {{'keyConnectorPolicyRestriction' | i18n}} </app-callout> <app-callout type=\"warning\"> {{'resetPasswordPolicyWarning' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div [formGroup]=\"data\"> <h3 class=\"mt-4\">{{'resetPasswordPolicyAutoEnroll' | i18n}}</h3> <p>{{'resetPasswordPolicyAutoEnrollDescription' | i18n}}</p> <app-callout type=\"warning\"> {{'resetPasswordPolicyAutoEnrollWarning' | i18n}} </app-callout> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"autoEnrollEnabled\" name=\"AutoEnrollEnabled\" formControlName=\"autoEnrollEnabled\"> <label class=\"form-check-label\" for=\"autoEnrollEnabled\"> {{'resetPasswordPolicyAutoEnrollCheckbox' | i18n }} </label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class SendOptionsPolicy extends BasePolicy {\n    name = 'sendOptions';\n    description = 'sendOptionsPolicyDesc';\n    type = PolicyType.SendOptions;\n    component = SendOptionsPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-send-options',\n    templateUrl: 'send-options.component.html',\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n\n    data = this.fb.group({\n        disableHideEmail: false,\n    });\n\n    constructor(private fb: FormBuilder) {\n        super();\n    }\n}\n","<app-callout type=\"warning\"> {{'sendOptionsExemption' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div [formGroup]=\"data\"> <h3 class=\"mt-4\">{{'options' | i18n}}</h3> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"disableHideEmail\" name=\"DisableHideEmail\" formControlName=\"disableHideEmail\"> <label class=\"form-check-label\" for=\"disableHideEmail\">{{'disableHideEmail' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class SingleOrgPolicy extends BasePolicy {\n    name = 'singleOrg';\n    description = 'singleOrgDesc';\n    type = PolicyType.SingleOrg;\n    component = SingleOrgPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-single-org',\n    templateUrl: 'single-org.component.html',\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n\n    constructor(private i18nService: I18nService) {\n        super();\n    }\n\n    buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n        if (!this.enabled.value) {\n            if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n                throw new Error(this.i18nService.t('disableRequiredError', this.i18nService.t('requireSso')));\n            }\n\n            if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n                throw new Error(this.i18nService.t('disableRequiredError', this.i18nService.t('maximumVaultTimeoutLabel')));\n            }\n        }\n\n        return super.buildRequest(policiesEnabledMap);\n    }\n}\n","<app-callout type=\"warning\"> {{'singleOrgPolicyWarning' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n    name = 'twoStepLogin';\n    description = 'twoStepLoginPolicyDesc';\n    type = PolicyType.TwoFactorAuthentication;\n    component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-two-factor-authentication',\n    templateUrl: 'two-factor-authentication.component.html',\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {\n}\n","<app-callout type=\"warning\"> {{'twoStepLoginPolicyWarning' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { BasePolicy, BasePolicyComponent } from 'src/app/organizations/policies/base-policy.component';\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n    name = 'disablePersonalVaultExport';\n    description = 'disablePersonalVaultExportDesc';\n    type = PolicyType.DisablePersonalVaultExport;\n    component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-disable-personal-vault-export',\n    templateUrl: 'disable-personal-vault-export.component.html',\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {\n}\n","<div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { BasePolicy, BasePolicyComponent } from 'src/app/organizations/policies/base-policy.component';\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n    name = 'maximumVaultTimeout';\n    description = 'maximumVaultTimeoutDesc';\n    type = PolicyType.MaximumVaultTimeout;\n    component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-maximum-timeout',\n    templateUrl: 'maximum-vault-timeout.component.html',\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n\n    data = this.fb.group({\n        hours: [null],\n        minutes: [null],\n    });\n\n    constructor(private fb: FormBuilder, private i18nService: I18nService) {\n        super();\n    }\n\n    loadData() {\n        const minutes = this.policyResponse.data?.minutes;\n\n        if (minutes == null) {\n            return;\n        }\n\n        this.data.patchValue({\n            hours: Math.floor(minutes / 60),\n            minutes: minutes % 60,\n        });\n    }\n\n    buildRequestData() {\n        if (this.data.value.hours == null && this.data.value.minutes == null) {\n            return null;\n        }\n\n        return {\n            minutes: this.data.value.hours * 60 + this.data.value.minutes,\n        };\n    }\n\n    buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n        const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n        if (this.enabled.value && !singleOrgEnabled) {\n            throw new Error(this.i18nService.t('requireSsoPolicyReqError'));\n        }\n\n        const data = this.buildRequestData();\n        if (data?.minutes == null || data?.minutes <= 0) {\n            throw new Error(this.i18nService.t('invalidMaximumVaultTimeout'));\n        }\n\n        return super.buildRequest(policiesEnabledMap);\n    }\n}\n","<app-callout type=\"tip\" title=\"{{'prerequisite' | i18n}}\"> {{'requireSsoPolicyReq' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div [formGroup]=\"data\"> <div class=\"form-group\"> <label for=\"hours\">{{'maximumVaultTimeoutLabel' | i18n}}</label> <div class=\"row\"> <div class=\"col-6\"> <input id=\"hours\" class=\"form-control\" type=\"number\" min=\"0\" name=\"hours\" formControlName=\"hours\"> <small>{{'hours' | i18n }}</small> </div> <div class=\"col-6\"> <input id=\"minutes\" class=\"form-control\" type=\"number\" min=\"0\" max=\"59\" name=\"minutes\" formControlName=\"minutes\"> <small>{{'minutes' | i18n }}</small> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { OrganizationSsoRequest } from 'jslib-common/models/request/organization/organizationSsoRequest';\n\n@Component({\n    selector: 'app-org-manage-sso',\n    templateUrl: 'sso.component.html',\n})\nexport class SsoComponent implements OnInit {\n\n    samlSigningAlgorithms = [\n        'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256',\n        'http://www.w3.org/2000/09/xmldsig#rsa-sha384',\n        'http://www.w3.org/2000/09/xmldsig#rsa-sha512',\n        'http://www.w3.org/2000/09/xmldsig#rsa-sha1',\n    ];\n\n    loading = true;\n    organizationId: string;\n    organization: Organization;\n    formPromise: Promise<any>;\n\n    callbackPath: string;\n    signedOutCallbackPath: string;\n    spEntityId: string;\n    spMetadataUrl: string;\n    spAcsUrl: string;\n\n    enabled = this.fb.control(false);\n    data = this.fb.group({\n        configType: [],\n\n        keyConnectorEnabled: [],\n        keyConnectorUrl: [],\n\n        // OpenId\n        authority: [],\n        clientId: [],\n        clientSecret: [],\n        metadataAddress: [],\n        redirectBehavior: [],\n        getClaimsFromUserInfoEndpoint: [],\n        additionalScopes: [],\n        additionalUserIdClaimTypes: [],\n        additionalEmailClaimTypes: [],\n        additionalNameClaimTypes: [],\n        acrValues: [],\n        expectedReturnAcrValue: [],\n\n        // SAML\n        spNameIdFormat: [],\n        spOutboundSigningAlgorithm: [],\n        spSigningBehavior: [],\n        spMinIncomingSigningAlgorithm: [],\n        spWantAssertionsSigned: [],\n        spValidateCertificates: [],\n\n        idpEntityId: [],\n        idpBindingType: [],\n        idpSingleSignOnServiceUrl: [],\n        idpSingleLogoutServiceUrl: [],\n        idpArtifactResolutionServiceUrl: [],\n        idpX509PublicCert: [],\n        idpOutboundSigningAlgorithm: [],\n        idpAllowUnsolicitedAuthnResponse: [],\n        idpDisableOutboundLogoutRequests: [],\n        idpWantAuthnRequestsSigned: [],\n    });\n\n    constructor(private fb: FormBuilder, private route: ActivatedRoute, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private userService: UserService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n        });\n    }\n\n    async load() {\n        this.organization = await this.userService.getOrganization(this.organizationId);\n        const ssoSettings = await this.apiService.getOrganizationSso(this.organizationId);\n\n        this.data.patchValue(ssoSettings.data);\n        this.enabled.setValue(ssoSettings.enabled);\n\n        this.callbackPath = ssoSettings.urls.callbackPath;\n        this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n        this.spEntityId = ssoSettings.urls.spEntityId;\n        this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n        this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n        this.keyConnectorUrl.markAsDirty();\n\n        this.loading = false;\n    }\n\n    copy(value: string) {\n        this.platformUtilsService.copyToClipboard(value);\n    }\n\n    launchUri(url: string) {\n        this.platformUtilsService.launchUri(url);\n    }\n\n    async submit() {\n        this.formPromise = this.postData();\n\n        try {\n            const response = await this.formPromise;\n\n            this.data.patchValue(response.data);\n            this.enabled.setValue(response.enabled);\n\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('ssoSettingsSaved'));\n        } catch {\n            // Logged by appApiAction, do nothing\n        }\n\n        this.formPromise = null;\n    }\n\n    async postData() {\n        if (this.data.get('keyConnectorEnabled').value) {\n            await this.validateKeyConnectorUrl();\n\n            if (this.keyConnectorUrl.hasError('invalidUrl')) {\n                throw new Error(this.i18nService.t('keyConnectorTestFail'));\n            }\n        }\n\n        const request = new OrganizationSsoRequest();\n        request.enabled = this.enabled.value;\n        request.data = this.data.value;\n\n        return this.apiService.postOrganizationSso(this.organizationId, request);\n    }\n\n    async validateKeyConnectorUrl() {\n        if (this.keyConnectorUrl.pristine) {\n            return;\n        }\n\n        this.keyConnectorUrl.markAsPending();\n\n        try {\n            await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n            this.keyConnectorUrl.updateValueAndValidity();\n        } catch {\n            this.keyConnectorUrl.setErrors({\n                invalidUrl: true,\n            });\n        }\n\n        this.keyConnectorUrl.markAsPristine();\n    }\n\n    get enableTestKeyConnector() {\n        return this.data.get('keyConnectorEnabled').value &&\n            this.keyConnectorUrl != null &&\n            this.keyConnectorUrl.value !== '';\n    }\n\n    get keyConnectorUrl() {\n        return this.data.get('keyConnectorUrl');\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'singleSignOn' | i18n}}</h1> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <form #form (ngSubmit)=\"submit()\" [formGroup]=\"data\" [appApiAction]=\"formPromise\" *ngIf=\"!loading\" ngNativeValidate> <p> {{'ssoPolicyHelpStart' | i18n}} <a routerLink=\"../policies\">{{'ssoPolicyHelpLink' | i18n}}</a> {{'ssoPolicyHelpEnd' | i18n}} <br> {{'ssoPolicyHelpKeyConnector' | i18n}} </p> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'allowSso' | i18n}}</label> </div> <small class=\"form-text text-muted\">{{'allowSsoDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label>{{'memberDecryptionOption' | i18n}}</label> <div class=\"form-check form-check-block\"> <input class=\"form-check-input\" type=\"radio\" id=\"memberDecryptionPass\" [value]=\"false\" formControlName=\"keyConnectorEnabled\"> <label class=\"form-check-label\" for=\"memberDecryptionPass\"> {{'masterPass' | i18n}} <small>{{'memberDecryptionPassDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" id=\"memberDecryptionKey\" [value]=\"true\" formControlName=\"keyConnectorEnabled\" [attr.disabled]=\"!organization.useKeyConnector || null\"> <label class=\"form-check-label\" for=\"memberDecryptionKey\"> {{'keyConnector' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/about-key-connector/\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> <small>{{'memberDecryptionKeyConnectorDesc' | i18n}}</small> </label> </div> </div> <ng-container *ngIf=\"data.value.keyConnectorEnabled\"> <app-callout type=\"warning\" [useAlertRole]=\"true\"> {{'keyConnectorWarning' | i18n}} </app-callout> <div class=\"form-group\"> <label for=\"keyConnectorUrl\">{{'keyConnectorUrl' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" formControlName=\"keyConnectorUrl\" id=\"keyConnectorUrl\" required> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"validateKeyConnectorUrl()\" [disabled]=\"!enableTestKeyConnector\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\" *ngIf=\"keyConnectorUrl.pending\"></i> <span *ngIf=\"!keyConnectorUrl.pending\"> {{'keyConnectorTest' | i18n}} </span> </button> </div> </div> <ng-container *ngIf=\"keyConnectorUrl.pristine && !keyConnectorUrl.pending\"> <div class=\"text-danger\" *ngIf=\"keyConnectorUrl.hasError('invalidUrl')\" role=\"alert\"> <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> {{'keyConnectorTestFail' | i18n}} </div> <div class=\"text-success\" *ngIf=\"!keyConnectorUrl.hasError('invalidUrl')\" role=\"alert\"> <i class=\"fa fa-check-circle-o\" aria-hidden=\"true\"></i> {{'keyConnectorTestSuccess' | i18n}} </div> </ng-container> </div> </ng-container> <div class=\"form-group\"> <label for=\"type\">{{'type' | i18n}}</label> <select class=\"form-control\" id=\"type\" formControlName=\"configType\"> <option value=\"0\" disabled=\"disabled\">{{'selectType' | i18n}}</option> <option value=\"1\">OpenID Connect</option> <option value=\"2\">SAML 2.0</option> </select> </div> <div *ngIf=\"data.value.configType == 1\"> <div class=\"config-section\"> <h2>{{'openIdConnectConfig' | i18n}}</h2> <div class=\"form-group\"> <label>{{'callbackPath' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" readonly=\"readonly\" [value]=\"callbackPath\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(callbackPath)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"form-group\"> <label>{{'signedOutCallbackPath' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" readonly=\"readonly\" [value]=\"signedOutCallbackPath\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(signedOutCallbackPath)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"form-group\"> <label for=\"authority\">{{'authority' | i18n}}</label> <input class=\"form-control\" formControlName=\"authority\" id=\"authority\"> </div> <div class=\"form-group\"> <label for=\"clientId\">{{'clientId' | i18n}}</label> <input class=\"form-control\" formControlName=\"clientId\" id=\"clientId\"> </div> <div class=\"form-group\"> <label for=\"clientSecret\">{{'clientSecret' | i18n}}</label> <input class=\"form-control\" formControlName=\"clientSecret\" id=\"clientSecret\"> </div> <div class=\"form-group\"> <label for=\"metadataAddress\">{{'metadataAddress' | i18n}}</label> <input class=\"form-control\" formControlName=\"metadataAddress\" id=\"metadataAddress\"> </div> <div class=\"form-group\"> <label for=\"redirectBehavior\">{{'oidcRedirectBehavior' | i18n}}</label> <select class=\"form-control\" formControlName=\"redirectBehavior\" id=\"redirectBehavior\"> <option value=\"0\">Redirect GET</option> <option value=\"1\">Form POST</option> </select> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"getClaimsFromUserInfoEndpoint\" formControlName=\"getClaimsFromUserInfoEndpoint\"> <label class=\"form-check-label\" for=\"getClaimsFromUserInfoEndpoint\"> {{'getClaimsFromUserInfoEndpoint' | i18n}} </label> </div> </div> <div class=\"form-group\"> <label for=\"additionalScopes\">{{'additionalScopes' | i18n}}</label> <input class=\"form-control\" formControlName=\"additionalScopes\" id=\"additionalScopes\"> </div> <div class=\"form-group\"> <label for=\"additionalUserIdClaimTypes\">{{'additionalUserIdClaimTypes' | i18n}}</label> <input class=\"form-control\" formControlName=\"additionalUserIdClaimTypes\" id=\"additionalUserIdClaimTypes\"> </div> <div class=\"form-group\"> <label for=\"additionalEmailClaimTypes\">{{'additionalEmailClaimTypes' | i18n}}</label> <input class=\"form-control\" formControlName=\"additionalEmailClaimTypes\" id=\"additionalEmailClaimTypes\"> </div> <div class=\"form-group\"> <label for=\"additionalNameClaimTypes\">{{'additionalNameClaimTypes' | i18n}}</label> <input class=\"form-control\" formControlName=\"additionalNameClaimTypes\" id=\"additionalNameClaimTypes\"> </div> <div class=\"form-group\"> <label for=\"acrValues\">{{'acrValues' | i18n}}</label> <input class=\"form-control\" formControlName=\"acrValues\" id=\"acrValues\"> </div> <div class=\"form-group\"> <label for=\"expectedReturnAcrValue\">{{'expectedReturnAcrValue' | i18n}}</label> <input class=\"form-control\" formControlName=\"expectedReturnAcrValue\" id=\"expectedReturnAcrValue\"> </div> </div> </div> <div *ngIf=\"data.value.configType == 2\"> <div class=\"config-section\"> <h2>{{'samlSpConfig' | i18n}}</h2> <div class=\"form-group\"> <label>{{'spEntityId' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" readonly=\"readonly\" [value]=\"spEntityId\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(spEntityId)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"form-group\"> <label>{{'spMetadataUrl' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" readonly=\"readonly\" [value]=\"spMetadataUrl\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'launch' | i18n}}\" (click)=\"launchUri(spMetadataUrl)\"> <i class=\"fa fa-lg fa-external-link\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(spMetadataUrl)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"form-group\"> <label>{{'spAcsUrl' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" readonly=\"readonly\" [value]=\"spAcsUrl\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(spAcsUrl)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"form-group\"> <label for=\"spNameIdFormat\">{{'spNameIdFormat' | i18n}}</label> <select class=\"form-control\" formControlName=\"spNameIdFormat\" id=\"spNameIdFormat\"> <option value=\"0\">Not Configured</option> <option value=\"1\">Unspecified</option> <option value=\"2\">Email Address</option> <option value=\"3\">X.509 Subject Name</option> <option value=\"4\">Windows Domain Qualified Name</option> <option value=\"5\">Kerberos Principal Name</option> <option value=\"6\">Entity Identifier</option> <option value=\"7\">Persistent</option> <option value=\"8\">Transient</option> </select> </div> <div class=\"form-group\"> <label for=\"spOutboundSigningAlgorithm\">{{'spOutboundSigningAlgorithm' | i18n}}</label> <select class=\"form-control\" formControlName=\"spOutboundSigningAlgorithm\" id=\"spOutboundSigningAlgorithm\"> <option *ngFor=\"let o of samlSigningAlgorithms\" [ngValue]=\"o\">{{o}}</option> </select> </div> <div class=\"form-group\"> <label for=\"spSigningBehavior\">{{'spSigningBehavior' | i18n}}</label> <select class=\"form-control\" formControlName=\"spSigningBehavior\" id=\"spSigningBehavior\"> <option value=\"0\">If IdP Wants Authn Requests Signed</option> <option value=\"1\">Always</option> <option value=\"3\">Never</option> </select> </div> <div class=\"form-group\"> <label for=\"spMinIncomingSigningAlgorithm\">{{'spMinIncomingSigningAlgorithm' | i18n}}</label> <select class=\"form-control\" formControlName=\"spMinIncomingSigningAlgorithm\" id=\"spMinIncomingSigningAlgorithm\"> <option *ngFor=\"let o of samlSigningAlgorithms\" [ngValue]=\"o\">{{o}}</option> </select> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"spWantAssertionsSigned\" formControlName=\"spWantAssertionsSigned\"> <label class=\"form-check-label\" for=\"spWantAssertionsSigned\"> {{'spWantAssertionsSigned' | i18n}} </label> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"spValidateCertificates\" formControlName=\"spValidateCertificates\"> <label class=\"form-check-label\" for=\"spValidateCertificates\"> {{'spValidateCertificates' | i18n}} </label> </div> </div> </div> <div class=\"config-section\"> <h2>{{'samlIdpConfig' | i18n}}</h2> <div class=\"form-group\"> <label for=\"idpEntityId\">{{'idpEntityId' | i18n}}</label> <input class=\"form-control\" formControlName=\"idpEntityId\" id=\"idpEntityId\"> </div> <div class=\"form-group\"> <label for=\"idpBindingType\">{{'idpBindingType' | i18n}}</label> <select class=\"form-control\" formControlName=\"idpBindingType\" id=\"idpBindingType\"> <option value=\"1\">Redirect</option> <option value=\"2\">HTTP POST</option> <option value=\"4\">Artifact</option> </select> </div> <div class=\"form-group\"> <label for=\"idpSingleSignOnServiceUrl\">{{'idpSingleSignOnServiceUrl' | i18n}}</label> <input class=\"form-control\" formControlName=\"idpSingleSignOnServiceUrl\" id=\"idpSingleSignOnServiceUrl\"> </div> <div class=\"form-group\"> <label for=\"idpSingleLogoutServiceUrl\">{{'idpSingleLogoutServiceUrl' | i18n}}</label> <input class=\"form-control\" formControlName=\"idpSingleLogoutServiceUrl\" id=\"idpSingleLogoutServiceUrl\"> </div> <div class=\"form-group\"> <label for=\"idpArtifactResolutionServiceUrl\">{{'idpArtifactResolutionServiceUrl' | i18n}}</label> <input class=\"form-control\" formControlName=\"idpArtifactResolutionServiceUrl\" id=\"idpArtifactResolutionServiceUrl\"> </div> <div class=\"form-group\"> <label for=\"idpX509PublicCert\">{{'idpX509PublicCert' | i18n}}</label> <textarea formControlName=\"idpX509PublicCert\" class=\"form-control form-control-sm text-monospace\" rows=\"6\" id=\"idpX509PublicCert\"></textarea> </div> <div class=\"form-group\"> <label for=\"idpOutboundSigningAlgorithm\">{{'idpOutboundSigningAlgorithm' | i18n}}</label> <select class=\"form-control\" formControlName=\"idpOutboundSigningAlgorithm\" id=\"idpOutboundSigningAlgorithm\"> <option *ngFor=\"let o of samlSigningAlgorithms\" [ngValue]=\"o\">{{o}}</option> </select> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"idpAllowUnsolicitedAuthnResponse\" formControlName=\"idpAllowUnsolicitedAuthnResponse\"> <label class=\"form-check-label\" for=\"idpAllowUnsolicitedAuthnResponse\"> {{'idpAllowUnsolicitedAuthnResponse' | i18n}} </label> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"idpDisableOutboundLogoutRequests\" formControlName=\"idpDisableOutboundLogoutRequests\"> <label class=\"form-check-label\" for=\"idpDisableOutboundLogoutRequests\"> {{'idpDisableOutboundLogoutRequests' | i18n}} </label> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"idpWantAuthnRequestsSigned\" formControlName=\"idpWantAuthnRequestsSigned\"> <label class=\"form-check-label\" for=\"idpWantAuthnRequestsSigned\"> {{'idpWantAuthnRequestsSigned' | i18n}} </label> </div> </div> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class LockGuardService implements CanActivate {\n\n    protected homepage = 'vault';\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            if (locked) {\n                return true;\n            } else {\n                this.router.navigate([this.homepage]);\n                return false;\n            }\n        }\n\n        this.router.navigate(['']);\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n\n    protected homepage = 'vault';\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            if (locked) {\n                this.router.navigate(['lock']);\n            } else {\n                this.router.navigate([this.homepage]);\n            }\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class CollectionResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n    readOnly: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.readOnly = this.getResponseProperty('ReadOnly') || false;\n    }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n    groups: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const groups = this.getResponseProperty('Groups');\n        if (groups != null) {\n            this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { GlobalDomainResponse } from './globalDomainResponse';\n\nexport class DomainsResponse extends BaseResponse {\n    equivalentDomains: string[][];\n    globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.equivalentDomains = this.getResponseProperty('EquivalentDomains');\n        const globalEquivalentDomains = this.getResponseProperty('GlobalEquivalentDomains');\n        if (globalEquivalentDomains != null) {\n            this.globalEquivalentDomains = globalEquivalentDomains.map((d: any) => new GlobalDomainResponse(d));\n        } else {\n            this.globalEquivalentDomains = [];\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class FolderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { PlanResponse } from './planResponse';\n\nimport { PlanType } from '../../enums/planType';\n\nexport class OrganizationResponse extends BaseResponse {\n    id: string;\n    identifier: string;\n    name: string;\n    businessName: string;\n    businessAddress1: string;\n    businessAddress2: string;\n    businessAddress3: string;\n    businessCountry: string;\n    businessTaxNumber: string;\n    billingEmail: string;\n    plan: PlanResponse;\n    planType: PlanType;\n    seats: number;\n    maxAutoscaleSeats: number;\n    maxCollections: number;\n    maxStorageGb: number;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useResetPassword: boolean;\n    hasPublicAndPrivateKeys: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.name = this.getResponseProperty('Name');\n        this.businessName = this.getResponseProperty('BusinessName');\n        this.businessAddress1 = this.getResponseProperty('BusinessAddress1');\n        this.businessAddress2 = this.getResponseProperty('BusinessAddress2');\n        this.businessAddress3 = this.getResponseProperty('BusinessAddress3');\n        this.businessCountry = this.getResponseProperty('BusinessCountry');\n        this.businessTaxNumber = this.getResponseProperty('BusinessTaxNumber');\n        this.billingEmail = this.getResponseProperty('BillingEmail');\n        const plan = this.getResponseProperty('Plan');\n        this.plan = plan == null ? null : new PlanResponse(plan);\n        this.planType = this.getResponseProperty('PlanType');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxAutoscaleSeats = this.getResponseProperty('MaxAutoscaleSeats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useResetPassword = this.getResponseProperty('UseResetPassword');\n        this.hasPublicAndPrivateKeys = this.getResponseProperty('HasPublicAndPrivateKeys');\n    }\n}\n","import { PlanType } from '../../enums/planType';\nimport { ProductType } from '../../enums/productType';\n\nimport { BaseResponse } from './baseResponse';\n\nexport class PlanResponse extends BaseResponse {\n    type: PlanType;\n    product: ProductType;\n    name: string;\n    isAnnual: boolean;\n    nameLocalizationKey: string;\n    descriptionLocalizationKey: string;\n    canBeUsedByBusiness: boolean;\n    baseSeats: number;\n    baseStorageGb: number;\n    maxCollections: number;\n    maxUsers: number;\n\n    hasAdditionalSeatsOption: boolean;\n    maxAdditionalSeats: number;\n    hasAdditionalStorageOption: boolean;\n    maxAdditionalStorage: number;\n    hasPremiumAccessOption: boolean;\n    trialPeriodDays: number;\n\n    hasSelfHost: boolean;\n    hasPolicies: boolean;\n    hasGroups: boolean;\n    hasDirectory: boolean;\n    hasEvents: boolean;\n    hasTotp: boolean;\n    has2fa: boolean;\n    hasApi: boolean;\n    hasSso: boolean;\n    hasResetPassword: boolean;\n    usersGetPremium: boolean;\n\n    upgradeSortOrder: number;\n    displaySortOrder: number;\n    legacyYear: number;\n    disabled: boolean;\n\n    stripePlanId: string;\n    stripeSeatPlanId: string;\n    stripeStoragePlanId: string;\n    stripePremiumAccessPlanId: string;\n    basePrice: number;\n    seatPrice: number;\n    additionalStoragePricePerGb: number;\n    premiumAccessOptionPrice: number;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.product = this.getResponseProperty('Product');\n        this.name = this.getResponseProperty('Name');\n        this.isAnnual = this.getResponseProperty('IsAnnual');\n        this.nameLocalizationKey = this.getResponseProperty('NameLocalizationKey');\n        this.descriptionLocalizationKey = this.getResponseProperty('DescriptionLocalizationKey');\n        this.canBeUsedByBusiness = this.getResponseProperty('CanBeUsedByBusiness');\n        this.baseSeats = this.getResponseProperty('BaseSeats');\n        this.baseStorageGb = this.getResponseProperty('BaseStorageGb');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxUsers = this.getResponseProperty('MaxUsers');\n        this.hasAdditionalSeatsOption = this.getResponseProperty('HasAdditionalSeatsOption');\n        this.maxAdditionalSeats = this.getResponseProperty('MaxAdditionalSeats');\n        this.hasAdditionalStorageOption = this.getResponseProperty('HasAdditionalStorageOption');\n        this.maxAdditionalStorage = this.getResponseProperty('MaxAdditionalStorage');\n        this.hasPremiumAccessOption = this.getResponseProperty('HasPremiumAccessOption');\n        this.trialPeriodDays = this.getResponseProperty('TrialPeriodDays');\n        this.hasSelfHost = this.getResponseProperty('HasSelfHost');\n        this.hasPolicies = this.getResponseProperty('HasPolicies');\n        this.hasGroups = this.getResponseProperty('HasGroups');\n        this.hasDirectory = this.getResponseProperty('HasDirectory');\n        this.hasEvents = this.getResponseProperty('HasEvents');\n        this.hasTotp = this.getResponseProperty('HasTotp');\n        this.has2fa = this.getResponseProperty('Has2fa');\n        this.hasApi = this.getResponseProperty('HasApi');\n        this.hasSso = this.getResponseProperty('HasSso');\n        this.hasResetPassword = this.getResponseProperty('HasResetPassword');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.upgradeSortOrder = this.getResponseProperty('UpgradeSortOrder');\n        this.displaySortOrder = this.getResponseProperty('SortOrder');\n        this.legacyYear = this.getResponseProperty('LegacyYear');\n        this.disabled = this.getResponseProperty('Disabled');\n        this.stripePlanId = this.getResponseProperty('StripePlanId');\n        this.stripeSeatPlanId = this.getResponseProperty('StripeSeatPlanId');\n        this.stripeStoragePlanId = this.getResponseProperty('StripeStoragePlanId');\n        this.stripePremiumAccessPlanId = this.getResponseProperty('StripePremiumAccessPlanId');\n        this.basePrice = this.getResponseProperty('BasePrice');\n        this.seatPrice = this.getResponseProperty('SeatPrice');\n        this.additionalStoragePricePerGb = this.getResponseProperty('AdditionalStoragePricePerGb');\n        this.premiumAccessOptionPrice = this.getResponseProperty('PremiumAccessOptionPrice');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SubscriptionResponse extends BaseResponse {\n    storageName: string;\n    storageGb: number;\n    maxStorageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    license: any;\n    expiration: string;\n    usingInAppPurchase: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.license = this.getResponseProperty('License');\n        this.expiration = this.getResponseProperty('Expiration');\n        this.usingInAppPurchase = this.getResponseProperty('UsingInAppPurchase');\n        const subscription = this.getResponseProperty('Subscription');\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n    trialStartDate: string;\n    trialEndDate: string;\n    periodStartDate: string;\n    periodEndDate: string;\n    cancelledDate: string;\n    cancelAtEndDate: boolean;\n    status: string;\n    cancelled: boolean;\n    items: BillingSubscriptionItemResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.trialEndDate = this.getResponseProperty('TrialStartDate');\n        this.trialEndDate = this.getResponseProperty('TrialEndDate');\n        this.periodStartDate = this.getResponseProperty('PeriodStartDate');\n        this.periodEndDate = this.getResponseProperty('PeriodEndDate');\n        this.cancelledDate = this.getResponseProperty('CancelledDate');\n        this.cancelAtEndDate = this.getResponseProperty('CancelAtEndDate');\n        this.status = this.getResponseProperty('Status');\n        this.cancelled = this.getResponseProperty('Cancelled');\n        const items = this.getResponseProperty('Items');\n        if (items != null) {\n            this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n        }\n    }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n    name: string;\n    amount: number;\n    quantity: number;\n    interval: string;\n    sponsoredSubscriptionItem: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.amount = this.getResponseProperty('Amount');\n        this.quantity = this.getResponseProperty('Quantity');\n        this.interval = this.getResponseProperty('Interval');\n        this.sponsoredSubscriptionItem = this.getResponseProperty('SponsoredSubscriptionItem');\n    }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { ProductType } from '../../enums/productType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n    id: string;\n    name: string;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useSso: boolean;\n    useKeyConnector: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    key: string;\n    hasPublicAndPrivateKeys: boolean;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    providerId: string;\n    providerName: string;\n    familySponsorshipFriendlyName: string;\n    familySponsorshipAvailable: boolean;\n    planProductType: ProductType;\n    keyConnectorEnabled: boolean;\n    keyConnectorUrl: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.usePolicies = this.getResponseProperty('UsePolicies');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useSso = this.getResponseProperty('UseSso');\n        this.useKeyConnector = this.getResponseProperty('UseKeyConnector') ?? false;\n        this.useResetPassword = this.getResponseProperty('UseResetPassword');\n        this.selfHost = this.getResponseProperty('SelfHost');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.key = this.getResponseProperty('Key');\n        this.hasPublicAndPrivateKeys = this.getResponseProperty('HasPublicAndPrivateKeys');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n        this.ssoBound = this.getResponseProperty('SsoBound');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.permissions = new PermissionsApi(this.getResponseProperty('permissions'));\n        this.resetPasswordEnrolled = this.getResponseProperty('ResetPasswordEnrolled');\n        this.userId = this.getResponseProperty('UserId');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.providerName = this.getResponseProperty('ProviderName');\n        this.familySponsorshipFriendlyName = this.getResponseProperty('FamilySponsorshipFriendlyName');\n        this.familySponsorshipAvailable = this.getResponseProperty('FamilySponsorshipAvailable');\n        this.planProductType = this.getResponseProperty('PlanProductType');\n        this.keyConnectorEnabled = this.getResponseProperty('KeyConnectorEnabled') ?? false;\n        this.keyConnectorUrl = this.getResponseProperty('KeyConnectorUrl');\n    }\n}\n","import { Utils } from '../../misc/utils';\nimport { BaseResponse } from './baseResponse';\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n    enabled: boolean;\n    keys: KeyResponse[];\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        const keys = this.getResponseProperty('Keys');\n        this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n    }\n}\n\nexport class KeyResponse extends BaseResponse {\n    name: string;\n    id: number;\n    migrated: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.id = this.getResponseProperty('Id');\n        this.migrated = this.getResponseProperty('Migrated');\n    }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n    attestation?: AttestationConveyancePreference;\n    authenticatorSelection?: AuthenticatorSelectionCriteria;\n    challenge: BufferSource;\n    excludeCredentials?: PublicKeyCredentialDescriptor[];\n    extensions?: AuthenticationExtensionsClientInputs;\n    pubKeyCredParams: PublicKeyCredentialParameters[];\n    rp: PublicKeyCredentialRpEntity;\n    timeout?: number;\n    user: PublicKeyCredentialUserEntity;\n\n    constructor(response: any) {\n        super(response);\n        this.attestation = this.getResponseProperty('attestation');\n        this.authenticatorSelection = this.getResponseProperty('authenticatorSelection');\n        this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty('challenge'));\n        this.excludeCredentials = this.getResponseProperty('excludeCredentials').map((c: any) => {\n            c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n            return c;\n        });\n        this.extensions = this.getResponseProperty('extensions');\n        this.pubKeyCredParams = this.getResponseProperty('pubKeyCredParams');\n        this.rp = this.getResponseProperty('rp');\n        this.timeout = this.getResponseProperty('timeout');\n\n        const user = this.getResponseProperty('user');\n        user.id = Utils.fromUrlB64ToArray(user.id);\n\n        this.user = user;\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n    return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n        const originalMethod: () => Promise<any> = descriptor.value;\n        const caches = new Map<any, Map<string, Promise<any>>>();\n\n        const getCache = (obj: any) => {\n            let cache = caches.get(obj);\n            if (cache != null) {\n                return cache;\n            }\n            cache = new Map<string, Promise<any>>();\n            caches.set(obj, cache);\n            return cache;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const cache = getCache(this);\n                const argsCacheKey = cacheKey(args);\n                let response = cache.get(argsCacheKey);\n                if (response != null) {\n                    return response;\n                }\n\n                const onFinally = () => {\n                    cache.delete(argsCacheKey);\n                    if (cache.size === 0) {\n                        caches.delete(this);\n                    }\n                };\n                response = originalMethod.apply(this, args).then((val: any) => {\n                    onFinally();\n                    return val;\n                }).catch((err: any) => {\n                    onFinally();\n                    throw err;\n                });\n\n                cache.set(argsCacheKey, response);\n                return response;\n            },\n        };\n    };\n}\n","import {\n    ITreeNodeObject,\n    TreeNode,\n} from '../models/domain/treeNode';\n\nexport class ServiceUtils {\n    static nestedTraverse(nodeTree: TreeNode<ITreeNodeObject>[], partIndex: number, parts: string[],\n        obj: ITreeNodeObject, parent: ITreeNodeObject, delimiter: string) {\n        if (parts.length <= partIndex) {\n            return;\n        }\n\n        const end = partIndex === parts.length - 1;\n        const partName = parts[partIndex];\n\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.name !== parts[partIndex]) {\n                continue;\n            }\n            if (end && nodeTree[i].node.id !== obj.id) {\n                // Another node with the same name.\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            ServiceUtils.nestedTraverse(nodeTree[i].children, partIndex + 1, parts,\n                obj, nodeTree[i].node, delimiter);\n            return;\n        }\n\n        if (nodeTree.filter(n => n.node.name === partName).length === 0) {\n            if (end) {\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n            ServiceUtils.nestedTraverse(nodeTree, 0, [newPartName, ...parts.slice(partIndex + 2)],\n                obj, parent, delimiter);\n        }\n    }\n\n    static getTreeNodeObject(nodeTree: TreeNode<ITreeNodeObject>[], id: string): TreeNode<ITreeNodeObject> {\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.id === id) {\n                return nodeTree[i];\n            } else if (nodeTree[i].children != null) {\n                const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n                if (node !== null) {\n                    return node;\n                }\n            }\n        }\n        return null;\n    }\n}\n","import { LogLevelType } from '../enums/logLevelType';\n\nimport { LogService as LogServiceAbstraction } from '../abstractions/log.service';\n\nimport * as hrtime from 'browser-hrtime';\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n    protected timersMap: Map<string, [number, number]> = new Map();\n\n    constructor(protected isDev: boolean, protected filter: (level: LogLevelType) => boolean = null) { }\n\n    debug(message: string) {\n        if (!this.isDev) {\n            return;\n        }\n        this.write(LogLevelType.Debug, message);\n    }\n\n    info(message: string) {\n        this.write(LogLevelType.Info, message);\n    }\n\n    warning(message: string) {\n        this.write(LogLevelType.Warning, message);\n    }\n\n    error(message: string) {\n        this.write(LogLevelType.Error, message);\n    }\n\n    write(level: LogLevelType, message: string) {\n        if (this.filter != null && this.filter(level)) {\n            return;\n        }\n\n        switch (level) {\n            case LogLevelType.Debug:\n                // tslint:disable-next-line\n                console.log(message);\n                break;\n            case LogLevelType.Info:\n                // tslint:disable-next-line\n                console.log(message);\n                break;\n            case LogLevelType.Warning:\n                // tslint:disable-next-line\n                console.warn(message);\n                break;\n            case LogLevelType.Error:\n                // tslint:disable-next-line\n                console.error(message);\n                break;\n            default:\n                break;\n        }\n    }\n\n    time(label: string = 'default') {\n        if (!this.timersMap.has(label)) {\n            this.timersMap.set(label, hrtime());\n        }\n    }\n\n    timeEnd(label: string = 'default'): [number, number] {\n        const elapsed = hrtime(this.timersMap.get(label));\n        this.timersMap.delete(label);\n        this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n        return elapsed;\n    }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n    'abacus',\n    'abdomen',\n    'abdominal',\n    'abide',\n    'abiding',\n    'ability',\n    'ablaze',\n    'able',\n    'abnormal',\n    'abrasion',\n    'abrasive',\n    'abreast',\n    'abridge',\n    'abroad',\n    'abruptly',\n    'absence',\n    'absentee',\n    'absently',\n    'absinthe',\n    'absolute',\n    'absolve',\n    'abstain',\n    'abstract',\n    'absurd',\n    'accent',\n    'acclaim',\n    'acclimate',\n    'accompany',\n    'account',\n    'accuracy',\n    'accurate',\n    'accustom',\n    'acetone',\n    'achiness',\n    'aching',\n    'acid',\n    'acorn',\n    'acquaint',\n    'acquire',\n    'acre',\n    'acrobat',\n    'acronym',\n    'acting',\n    'action',\n    'activate',\n    'activator',\n    'active',\n    'activism',\n    'activist',\n    'activity',\n    'actress',\n    'acts',\n    'acutely',\n    'acuteness',\n    'aeration',\n    'aerobics',\n    'aerosol',\n    'aerospace',\n    'afar',\n    'affair',\n    'affected',\n    'affecting',\n    'affection',\n    'affidavit',\n    'affiliate',\n    'affirm',\n    'affix',\n    'afflicted',\n    'affluent',\n    'afford',\n    'affront',\n    'aflame',\n    'afloat',\n    'aflutter',\n    'afoot',\n    'afraid',\n    'afterglow',\n    'afterlife',\n    'aftermath',\n    'aftermost',\n    'afternoon',\n    'aged',\n    'ageless',\n    'agency',\n    'agenda',\n    'agent',\n    'aggregate',\n    'aghast',\n    'agile',\n    'agility',\n    'aging',\n    'agnostic',\n    'agonize',\n    'agonizing',\n    'agony',\n    'agreeable',\n    'agreeably',\n    'agreed',\n    'agreeing',\n    'agreement',\n    'aground',\n    'ahead',\n    'ahoy',\n    'aide',\n    'aids',\n    'aim',\n    'ajar',\n    'alabaster',\n    'alarm',\n    'albatross',\n    'album',\n    'alfalfa',\n    'algebra',\n    'algorithm',\n    'alias',\n    'alibi',\n    'alienable',\n    'alienate',\n    'aliens',\n    'alike',\n    'alive',\n    'alkaline',\n    'alkalize',\n    'almanac',\n    'almighty',\n    'almost',\n    'aloe',\n    'aloft',\n    'aloha',\n    'alone',\n    'alongside',\n    'aloof',\n    'alphabet',\n    'alright',\n    'although',\n    'altitude',\n    'alto',\n    'aluminum',\n    'alumni',\n    'always',\n    'amaretto',\n    'amaze',\n    'amazingly',\n    'amber',\n    'ambiance',\n    'ambiguity',\n    'ambiguous',\n    'ambition',\n    'ambitious',\n    'ambulance',\n    'ambush',\n    'amendable',\n    'amendment',\n    'amends',\n    'amenity',\n    'amiable',\n    'amicably',\n    'amid',\n    'amigo',\n    'amino',\n    'amiss',\n    'ammonia',\n    'ammonium',\n    'amnesty',\n    'amniotic',\n    'among',\n    'amount',\n    'amperage',\n    'ample',\n    'amplifier',\n    'amplify',\n    'amply',\n    'amuck',\n    'amulet',\n    'amusable',\n    'amused',\n    'amusement',\n    'amuser',\n    'amusing',\n    'anaconda',\n    'anaerobic',\n    'anagram',\n    'anatomist',\n    'anatomy',\n    'anchor',\n    'anchovy',\n    'ancient',\n    'android',\n    'anemia',\n    'anemic',\n    'aneurism',\n    'anew',\n    'angelfish',\n    'angelic',\n    'anger',\n    'angled',\n    'angler',\n    'angles',\n    'angling',\n    'angrily',\n    'angriness',\n    'anguished',\n    'angular',\n    'animal',\n    'animate',\n    'animating',\n    'animation',\n    'animator',\n    'anime',\n    'animosity',\n    'ankle',\n    'annex',\n    'annotate',\n    'announcer',\n    'annoying',\n    'annually',\n    'annuity',\n    'anointer',\n    'another',\n    'answering',\n    'antacid',\n    'antarctic',\n    'anteater',\n    'antelope',\n    'antennae',\n    'anthem',\n    'anthill',\n    'anthology',\n    'antibody',\n    'antics',\n    'antidote',\n    'antihero',\n    'antiquely',\n    'antiques',\n    'antiquity',\n    'antirust',\n    'antitoxic',\n    'antitrust',\n    'antiviral',\n    'antivirus',\n    'antler',\n    'antonym',\n    'antsy',\n    'anvil',\n    'anybody',\n    'anyhow',\n    'anymore',\n    'anyone',\n    'anyplace',\n    'anything',\n    'anytime',\n    'anyway',\n    'anywhere',\n    'aorta',\n    'apache',\n    'apostle',\n    'appealing',\n    'appear',\n    'appease',\n    'appeasing',\n    'appendage',\n    'appendix',\n    'appetite',\n    'appetizer',\n    'applaud',\n    'applause',\n    'apple',\n    'appliance',\n    'applicant',\n    'applied',\n    'apply',\n    'appointee',\n    'appraisal',\n    'appraiser',\n    'apprehend',\n    'approach',\n    'approval',\n    'approve',\n    'apricot',\n    'april',\n    'apron',\n    'aptitude',\n    'aptly',\n    'aqua',\n    'aqueduct',\n    'arbitrary',\n    'arbitrate',\n    'ardently',\n    'area',\n    'arena',\n    'arguable',\n    'arguably',\n    'argue',\n    'arise',\n    'armadillo',\n    'armband',\n    'armchair',\n    'armed',\n    'armful',\n    'armhole',\n    'arming',\n    'armless',\n    'armoire',\n    'armored',\n    'armory',\n    'armrest',\n    'army',\n    'aroma',\n    'arose',\n    'around',\n    'arousal',\n    'arrange',\n    'array',\n    'arrest',\n    'arrival',\n    'arrive',\n    'arrogance',\n    'arrogant',\n    'arson',\n    'art',\n    'ascend',\n    'ascension',\n    'ascent',\n    'ascertain',\n    'ashamed',\n    'ashen',\n    'ashes',\n    'ashy',\n    'aside',\n    'askew',\n    'asleep',\n    'asparagus',\n    'aspect',\n    'aspirate',\n    'aspire',\n    'aspirin',\n    'astonish',\n    'astound',\n    'astride',\n    'astrology',\n    'astronaut',\n    'astronomy',\n    'astute',\n    'atlantic',\n    'atlas',\n    'atom',\n    'atonable',\n    'atop',\n    'atrium',\n    'atrocious',\n    'atrophy',\n    'attach',\n    'attain',\n    'attempt',\n    'attendant',\n    'attendee',\n    'attention',\n    'attentive',\n    'attest',\n    'attic',\n    'attire',\n    'attitude',\n    'attractor',\n    'attribute',\n    'atypical',\n    'auction',\n    'audacious',\n    'audacity',\n    'audible',\n    'audibly',\n    'audience',\n    'audio',\n    'audition',\n    'augmented',\n    'august',\n    'authentic',\n    'author',\n    'autism',\n    'autistic',\n    'autograph',\n    'automaker',\n    'automated',\n    'automatic',\n    'autopilot',\n    'available',\n    'avalanche',\n    'avatar',\n    'avenge',\n    'avenging',\n    'avenue',\n    'average',\n    'aversion',\n    'avert',\n    'aviation',\n    'aviator',\n    'avid',\n    'avoid',\n    'await',\n    'awaken',\n    'award',\n    'aware',\n    'awhile',\n    'awkward',\n    'awning',\n    'awoke',\n    'awry',\n    'axis',\n    'babble',\n    'babbling',\n    'babied',\n    'baboon',\n    'backache',\n    'backboard',\n    'backboned',\n    'backdrop',\n    'backed',\n    'backer',\n    'backfield',\n    'backfire',\n    'backhand',\n    'backing',\n    'backlands',\n    'backlash',\n    'backless',\n    'backlight',\n    'backlit',\n    'backlog',\n    'backpack',\n    'backpedal',\n    'backrest',\n    'backroom',\n    'backshift',\n    'backside',\n    'backslid',\n    'backspace',\n    'backspin',\n    'backstab',\n    'backstage',\n    'backtalk',\n    'backtrack',\n    'backup',\n    'backward',\n    'backwash',\n    'backwater',\n    'backyard',\n    'bacon',\n    'bacteria',\n    'bacterium',\n    'badass',\n    'badge',\n    'badland',\n    'badly',\n    'badness',\n    'baffle',\n    'baffling',\n    'bagel',\n    'bagful',\n    'baggage',\n    'bagged',\n    'baggie',\n    'bagginess',\n    'bagging',\n    'baggy',\n    'bagpipe',\n    'baguette',\n    'baked',\n    'bakery',\n    'bakeshop',\n    'baking',\n    'balance',\n    'balancing',\n    'balcony',\n    'balmy',\n    'balsamic',\n    'bamboo',\n    'banana',\n    'banish',\n    'banister',\n    'banjo',\n    'bankable',\n    'bankbook',\n    'banked',\n    'banker',\n    'banking',\n    'banknote',\n    'bankroll',\n    'banner',\n    'bannister',\n    'banshee',\n    'banter',\n    'barbecue',\n    'barbed',\n    'barbell',\n    'barber',\n    'barcode',\n    'barge',\n    'bargraph',\n    'barista',\n    'baritone',\n    'barley',\n    'barmaid',\n    'barman',\n    'barn',\n    'barometer',\n    'barrack',\n    'barracuda',\n    'barrel',\n    'barrette',\n    'barricade',\n    'barrier',\n    'barstool',\n    'bartender',\n    'barterer',\n    'bash',\n    'basically',\n    'basics',\n    'basil',\n    'basin',\n    'basis',\n    'basket',\n    'batboy',\n    'batch',\n    'bath',\n    'baton',\n    'bats',\n    'battalion',\n    'battered',\n    'battering',\n    'battery',\n    'batting',\n    'battle',\n    'bauble',\n    'bazooka',\n    'blabber',\n    'bladder',\n    'blade',\n    'blah',\n    'blame',\n    'blaming',\n    'blanching',\n    'blandness',\n    'blank',\n    'blaspheme',\n    'blasphemy',\n    'blast',\n    'blatancy',\n    'blatantly',\n    'blazer',\n    'blazing',\n    'bleach',\n    'bleak',\n    'bleep',\n    'blemish',\n    'blend',\n    'bless',\n    'blighted',\n    'blimp',\n    'bling',\n    'blinked',\n    'blinker',\n    'blinking',\n    'blinks',\n    'blip',\n    'blissful',\n    'blitz',\n    'blizzard',\n    'bloated',\n    'bloating',\n    'blob',\n    'blog',\n    'bloomers',\n    'blooming',\n    'blooper',\n    'blot',\n    'blouse',\n    'blubber',\n    'bluff',\n    'bluish',\n    'blunderer',\n    'blunt',\n    'blurb',\n    'blurred',\n    'blurry',\n    'blurt',\n    'blush',\n    'blustery',\n    'boaster',\n    'boastful',\n    'boasting',\n    'boat',\n    'bobbed',\n    'bobbing',\n    'bobble',\n    'bobcat',\n    'bobsled',\n    'bobtail',\n    'bodacious',\n    'body',\n    'bogged',\n    'boggle',\n    'bogus',\n    'boil',\n    'bok',\n    'bolster',\n    'bolt',\n    'bonanza',\n    'bonded',\n    'bonding',\n    'bondless',\n    'boned',\n    'bonehead',\n    'boneless',\n    'bonelike',\n    'boney',\n    'bonfire',\n    'bonnet',\n    'bonsai',\n    'bonus',\n    'bony',\n    'boogeyman',\n    'boogieman',\n    'book',\n    'boondocks',\n    'booted',\n    'booth',\n    'bootie',\n    'booting',\n    'bootlace',\n    'bootleg',\n    'boots',\n    'boozy',\n    'borax',\n    'boring',\n    'borough',\n    'borrower',\n    'borrowing',\n    'boss',\n    'botanical',\n    'botanist',\n    'botany',\n    'botch',\n    'both',\n    'bottle',\n    'bottling',\n    'bottom',\n    'bounce',\n    'bouncing',\n    'bouncy',\n    'bounding',\n    'boundless',\n    'bountiful',\n    'bovine',\n    'boxcar',\n    'boxer',\n    'boxing',\n    'boxlike',\n    'boxy',\n    'breach',\n    'breath',\n    'breeches',\n    'breeching',\n    'breeder',\n    'breeding',\n    'breeze',\n    'breezy',\n    'brethren',\n    'brewery',\n    'brewing',\n    'briar',\n    'bribe',\n    'brick',\n    'bride',\n    'bridged',\n    'brigade',\n    'bright',\n    'brilliant',\n    'brim',\n    'bring',\n    'brink',\n    'brisket',\n    'briskly',\n    'briskness',\n    'bristle',\n    'brittle',\n    'broadband',\n    'broadcast',\n    'broaden',\n    'broadly',\n    'broadness',\n    'broadside',\n    'broadways',\n    'broiler',\n    'broiling',\n    'broken',\n    'broker',\n    'bronchial',\n    'bronco',\n    'bronze',\n    'bronzing',\n    'brook',\n    'broom',\n    'brought',\n    'browbeat',\n    'brownnose',\n    'browse',\n    'browsing',\n    'bruising',\n    'brunch',\n    'brunette',\n    'brunt',\n    'brush',\n    'brussels',\n    'brute',\n    'brutishly',\n    'bubble',\n    'bubbling',\n    'bubbly',\n    'buccaneer',\n    'bucked',\n    'bucket',\n    'buckle',\n    'buckshot',\n    'buckskin',\n    'bucktooth',\n    'buckwheat',\n    'buddhism',\n    'buddhist',\n    'budding',\n    'buddy',\n    'budget',\n    'buffalo',\n    'buffed',\n    'buffer',\n    'buffing',\n    'buffoon',\n    'buggy',\n    'bulb',\n    'bulge',\n    'bulginess',\n    'bulgur',\n    'bulk',\n    'bulldog',\n    'bulldozer',\n    'bullfight',\n    'bullfrog',\n    'bullhorn',\n    'bullion',\n    'bullish',\n    'bullpen',\n    'bullring',\n    'bullseye',\n    'bullwhip',\n    'bully',\n    'bunch',\n    'bundle',\n    'bungee',\n    'bunion',\n    'bunkbed',\n    'bunkhouse',\n    'bunkmate',\n    'bunny',\n    'bunt',\n    'busboy',\n    'bush',\n    'busily',\n    'busload',\n    'bust',\n    'busybody',\n    'buzz',\n    'cabana',\n    'cabbage',\n    'cabbie',\n    'cabdriver',\n    'cable',\n    'caboose',\n    'cache',\n    'cackle',\n    'cacti',\n    'cactus',\n    'caddie',\n    'caddy',\n    'cadet',\n    'cadillac',\n    'cadmium',\n    'cage',\n    'cahoots',\n    'cake',\n    'calamari',\n    'calamity',\n    'calcium',\n    'calculate',\n    'calculus',\n    'caliber',\n    'calibrate',\n    'calm',\n    'caloric',\n    'calorie',\n    'calzone',\n    'camcorder',\n    'cameo',\n    'camera',\n    'camisole',\n    'camper',\n    'campfire',\n    'camping',\n    'campsite',\n    'campus',\n    'canal',\n    'canary',\n    'cancel',\n    'candied',\n    'candle',\n    'candy',\n    'cane',\n    'canine',\n    'canister',\n    'cannabis',\n    'canned',\n    'canning',\n    'cannon',\n    'cannot',\n    'canola',\n    'canon',\n    'canopener',\n    'canopy',\n    'canteen',\n    'canyon',\n    'capable',\n    'capably',\n    'capacity',\n    'cape',\n    'capillary',\n    'capital',\n    'capitol',\n    'capped',\n    'capricorn',\n    'capsize',\n    'capsule',\n    'caption',\n    'captivate',\n    'captive',\n    'captivity',\n    'capture',\n    'caramel',\n    'carat',\n    'caravan',\n    'carbon',\n    'cardboard',\n    'carded',\n    'cardiac',\n    'cardigan',\n    'cardinal',\n    'cardstock',\n    'carefully',\n    'caregiver',\n    'careless',\n    'caress',\n    'caretaker',\n    'cargo',\n    'caring',\n    'carless',\n    'carload',\n    'carmaker',\n    'carnage',\n    'carnation',\n    'carnival',\n    'carnivore',\n    'carol',\n    'carpenter',\n    'carpentry',\n    'carpool',\n    'carport',\n    'carried',\n    'carrot',\n    'carrousel',\n    'carry',\n    'cartel',\n    'cartload',\n    'carton',\n    'cartoon',\n    'cartridge',\n    'cartwheel',\n    'carve',\n    'carving',\n    'carwash',\n    'cascade',\n    'case',\n    'cash',\n    'casing',\n    'casino',\n    'casket',\n    'cassette',\n    'casually',\n    'casualty',\n    'catacomb',\n    'catalog',\n    'catalyst',\n    'catalyze',\n    'catapult',\n    'cataract',\n    'catatonic',\n    'catcall',\n    'catchable',\n    'catcher',\n    'catching',\n    'catchy',\n    'caterer',\n    'catering',\n    'catfight',\n    'catfish',\n    'cathedral',\n    'cathouse',\n    'catlike',\n    'catnap',\n    'catnip',\n    'catsup',\n    'cattail',\n    'cattishly',\n    'cattle',\n    'catty',\n    'catwalk',\n    'caucasian',\n    'caucus',\n    'causal',\n    'causation',\n    'cause',\n    'causing',\n    'cauterize',\n    'caution',\n    'cautious',\n    'cavalier',\n    'cavalry',\n    'caviar',\n    'cavity',\n    'cedar',\n    'celery',\n    'celestial',\n    'celibacy',\n    'celibate',\n    'celtic',\n    'cement',\n    'census',\n    'ceramics',\n    'ceremony',\n    'certainly',\n    'certainty',\n    'certified',\n    'certify',\n    'cesarean',\n    'cesspool',\n    'chafe',\n    'chaffing',\n    'chain',\n    'chair',\n    'chalice',\n    'challenge',\n    'chamber',\n    'chamomile',\n    'champion',\n    'chance',\n    'change',\n    'channel',\n    'chant',\n    'chaos',\n    'chaperone',\n    'chaplain',\n    'chapped',\n    'chaps',\n    'chapter',\n    'character',\n    'charbroil',\n    'charcoal',\n    'charger',\n    'charging',\n    'chariot',\n    'charity',\n    'charm',\n    'charred',\n    'charter',\n    'charting',\n    'chase',\n    'chasing',\n    'chaste',\n    'chastise',\n    'chastity',\n    'chatroom',\n    'chatter',\n    'chatting',\n    'chatty',\n    'cheating',\n    'cheddar',\n    'cheek',\n    'cheer',\n    'cheese',\n    'cheesy',\n    'chef',\n    'chemicals',\n    'chemist',\n    'chemo',\n    'cherisher',\n    'cherub',\n    'chess',\n    'chest',\n    'chevron',\n    'chevy',\n    'chewable',\n    'chewer',\n    'chewing',\n    'chewy',\n    'chief',\n    'chihuahua',\n    'childcare',\n    'childhood',\n    'childish',\n    'childless',\n    'childlike',\n    'chili',\n    'chill',\n    'chimp',\n    'chip',\n    'chirping',\n    'chirpy',\n    'chitchat',\n    'chivalry',\n    'chive',\n    'chloride',\n    'chlorine',\n    'choice',\n    'chokehold',\n    'choking',\n    'chomp',\n    'chooser',\n    'choosing',\n    'choosy',\n    'chop',\n    'chosen',\n    'chowder',\n    'chowtime',\n    'chrome',\n    'chubby',\n    'chuck',\n    'chug',\n    'chummy',\n    'chump',\n    'chunk',\n    'churn',\n    'chute',\n    'cider',\n    'cilantro',\n    'cinch',\n    'cinema',\n    'cinnamon',\n    'circle',\n    'circling',\n    'circular',\n    'circulate',\n    'circus',\n    'citable',\n    'citadel',\n    'citation',\n    'citizen',\n    'citric',\n    'citrus',\n    'city',\n    'civic',\n    'civil',\n    'clad',\n    'claim',\n    'clambake',\n    'clammy',\n    'clamor',\n    'clamp',\n    'clamshell',\n    'clang',\n    'clanking',\n    'clapped',\n    'clapper',\n    'clapping',\n    'clarify',\n    'clarinet',\n    'clarity',\n    'clash',\n    'clasp',\n    'class',\n    'clatter',\n    'clause',\n    'clavicle',\n    'claw',\n    'clay',\n    'clean',\n    'clear',\n    'cleat',\n    'cleaver',\n    'cleft',\n    'clench',\n    'clergyman',\n    'clerical',\n    'clerk',\n    'clever',\n    'clicker',\n    'client',\n    'climate',\n    'climatic',\n    'cling',\n    'clinic',\n    'clinking',\n    'clip',\n    'clique',\n    'cloak',\n    'clobber',\n    'clock',\n    'clone',\n    'cloning',\n    'closable',\n    'closure',\n    'clothes',\n    'clothing',\n    'cloud',\n    'clover',\n    'clubbed',\n    'clubbing',\n    'clubhouse',\n    'clump',\n    'clumsily',\n    'clumsy',\n    'clunky',\n    'clustered',\n    'clutch',\n    'clutter',\n    'coach',\n    'coagulant',\n    'coastal',\n    'coaster',\n    'coasting',\n    'coastland',\n    'coastline',\n    'coat',\n    'coauthor',\n    'cobalt',\n    'cobbler',\n    'cobweb',\n    'cocoa',\n    'coconut',\n    'cod',\n    'coeditor',\n    'coerce',\n    'coexist',\n    'coffee',\n    'cofounder',\n    'cognition',\n    'cognitive',\n    'cogwheel',\n    'coherence',\n    'coherent',\n    'cohesive',\n    'coil',\n    'coke',\n    'cola',\n    'cold',\n    'coleslaw',\n    'coliseum',\n    'collage',\n    'collapse',\n    'collar',\n    'collected',\n    'collector',\n    'collide',\n    'collie',\n    'collision',\n    'colonial',\n    'colonist',\n    'colonize',\n    'colony',\n    'colossal',\n    'colt',\n    'coma',\n    'come',\n    'comfort',\n    'comfy',\n    'comic',\n    'coming',\n    'comma',\n    'commence',\n    'commend',\n    'comment',\n    'commerce',\n    'commode',\n    'commodity',\n    'commodore',\n    'common',\n    'commotion',\n    'commute',\n    'commuting',\n    'compacted',\n    'compacter',\n    'compactly',\n    'compactor',\n    'companion',\n    'company',\n    'compare',\n    'compel',\n    'compile',\n    'comply',\n    'component',\n    'composed',\n    'composer',\n    'composite',\n    'compost',\n    'composure',\n    'compound',\n    'compress',\n    'comprised',\n    'computer',\n    'computing',\n    'comrade',\n    'concave',\n    'conceal',\n    'conceded',\n    'concept',\n    'concerned',\n    'concert',\n    'conch',\n    'concierge',\n    'concise',\n    'conclude',\n    'concrete',\n    'concur',\n    'condense',\n    'condiment',\n    'condition',\n    'condone',\n    'conducive',\n    'conductor',\n    'conduit',\n    'cone',\n    'confess',\n    'confetti',\n    'confidant',\n    'confident',\n    'confider',\n    'confiding',\n    'configure',\n    'confined',\n    'confining',\n    'confirm',\n    'conflict',\n    'conform',\n    'confound',\n    'confront',\n    'confused',\n    'confusing',\n    'confusion',\n    'congenial',\n    'congested',\n    'congrats',\n    'congress',\n    'conical',\n    'conjoined',\n    'conjure',\n    'conjuror',\n    'connected',\n    'connector',\n    'consensus',\n    'consent',\n    'console',\n    'consoling',\n    'consonant',\n    'constable',\n    'constant',\n    'constrain',\n    'constrict',\n    'construct',\n    'consult',\n    'consumer',\n    'consuming',\n    'contact',\n    'container',\n    'contempt',\n    'contend',\n    'contented',\n    'contently',\n    'contents',\n    'contest',\n    'context',\n    'contort',\n    'contour',\n    'contrite',\n    'control',\n    'contusion',\n    'convene',\n    'convent',\n    'copartner',\n    'cope',\n    'copied',\n    'copier',\n    'copilot',\n    'coping',\n    'copious',\n    'copper',\n    'copy',\n    'coral',\n    'cork',\n    'cornball',\n    'cornbread',\n    'corncob',\n    'cornea',\n    'corned',\n    'corner',\n    'cornfield',\n    'cornflake',\n    'cornhusk',\n    'cornmeal',\n    'cornstalk',\n    'corny',\n    'coronary',\n    'coroner',\n    'corporal',\n    'corporate',\n    'corral',\n    'correct',\n    'corridor',\n    'corrode',\n    'corroding',\n    'corrosive',\n    'corsage',\n    'corset',\n    'cortex',\n    'cosigner',\n    'cosmetics',\n    'cosmic',\n    'cosmos',\n    'cosponsor',\n    'cost',\n    'cottage',\n    'cotton',\n    'couch',\n    'cough',\n    'could',\n    'countable',\n    'countdown',\n    'counting',\n    'countless',\n    'country',\n    'county',\n    'courier',\n    'covenant',\n    'cover',\n    'coveted',\n    'coveting',\n    'coyness',\n    'cozily',\n    'coziness',\n    'cozy',\n    'crabbing',\n    'crabgrass',\n    'crablike',\n    'crabmeat',\n    'cradle',\n    'cradling',\n    'crafter',\n    'craftily',\n    'craftsman',\n    'craftwork',\n    'crafty',\n    'cramp',\n    'cranberry',\n    'crane',\n    'cranial',\n    'cranium',\n    'crank',\n    'crate',\n    'crave',\n    'craving',\n    'crawfish',\n    'crawlers',\n    'crawling',\n    'crayfish',\n    'crayon',\n    'crazed',\n    'crazily',\n    'craziness',\n    'crazy',\n    'creamed',\n    'creamer',\n    'creamlike',\n    'crease',\n    'creasing',\n    'creatable',\n    'create',\n    'creation',\n    'creative',\n    'creature',\n    'credible',\n    'credibly',\n    'credit',\n    'creed',\n    'creme',\n    'creole',\n    'crepe',\n    'crept',\n    'crescent',\n    'crested',\n    'cresting',\n    'crestless',\n    'crevice',\n    'crewless',\n    'crewman',\n    'crewmate',\n    'crib',\n    'cricket',\n    'cried',\n    'crier',\n    'crimp',\n    'crimson',\n    'cringe',\n    'cringing',\n    'crinkle',\n    'crinkly',\n    'crisped',\n    'crisping',\n    'crisply',\n    'crispness',\n    'crispy',\n    'criteria',\n    'critter',\n    'croak',\n    'crock',\n    'crook',\n    'croon',\n    'crop',\n    'cross',\n    'crouch',\n    'crouton',\n    'crowbar',\n    'crowd',\n    'crown',\n    'crucial',\n    'crudely',\n    'crudeness',\n    'cruelly',\n    'cruelness',\n    'cruelty',\n    'crumb',\n    'crummiest',\n    'crummy',\n    'crumpet',\n    'crumpled',\n    'cruncher',\n    'crunching',\n    'crunchy',\n    'crusader',\n    'crushable',\n    'crushed',\n    'crusher',\n    'crushing',\n    'crust',\n    'crux',\n    'crying',\n    'cryptic',\n    'crystal',\n    'cubbyhole',\n    'cube',\n    'cubical',\n    'cubicle',\n    'cucumber',\n    'cuddle',\n    'cuddly',\n    'cufflink',\n    'culinary',\n    'culminate',\n    'culpable',\n    'culprit',\n    'cultivate',\n    'cultural',\n    'culture',\n    'cupbearer',\n    'cupcake',\n    'cupid',\n    'cupped',\n    'cupping',\n    'curable',\n    'curator',\n    'curdle',\n    'cure',\n    'curfew',\n    'curing',\n    'curled',\n    'curler',\n    'curliness',\n    'curling',\n    'curly',\n    'curry',\n    'curse',\n    'cursive',\n    'cursor',\n    'curtain',\n    'curtly',\n    'curtsy',\n    'curvature',\n    'curve',\n    'curvy',\n    'cushy',\n    'cusp',\n    'cussed',\n    'custard',\n    'custodian',\n    'custody',\n    'customary',\n    'customer',\n    'customize',\n    'customs',\n    'cut',\n    'cycle',\n    'cyclic',\n    'cycling',\n    'cyclist',\n    'cylinder',\n    'cymbal',\n    'cytoplasm',\n    'cytoplast',\n    'dab',\n    'dad',\n    'daffodil',\n    'dagger',\n    'daily',\n    'daintily',\n    'dainty',\n    'dairy',\n    'daisy',\n    'dallying',\n    'dance',\n    'dancing',\n    'dandelion',\n    'dander',\n    'dandruff',\n    'dandy',\n    'danger',\n    'dangle',\n    'dangling',\n    'daredevil',\n    'dares',\n    'daringly',\n    'darkened',\n    'darkening',\n    'darkish',\n    'darkness',\n    'darkroom',\n    'darling',\n    'darn',\n    'dart',\n    'darwinism',\n    'dash',\n    'dastardly',\n    'data',\n    'datebook',\n    'dating',\n    'daughter',\n    'daunting',\n    'dawdler',\n    'dawn',\n    'daybed',\n    'daybreak',\n    'daycare',\n    'daydream',\n    'daylight',\n    'daylong',\n    'dayroom',\n    'daytime',\n    'dazzler',\n    'dazzling',\n    'deacon',\n    'deafening',\n    'deafness',\n    'dealer',\n    'dealing',\n    'dealmaker',\n    'dealt',\n    'dean',\n    'debatable',\n    'debate',\n    'debating',\n    'debit',\n    'debrief',\n    'debtless',\n    'debtor',\n    'debug',\n    'debunk',\n    'decade',\n    'decaf',\n    'decal',\n    'decathlon',\n    'decay',\n    'deceased',\n    'deceit',\n    'deceiver',\n    'deceiving',\n    'december',\n    'decency',\n    'decent',\n    'deception',\n    'deceptive',\n    'decibel',\n    'decidable',\n    'decimal',\n    'decimeter',\n    'decipher',\n    'deck',\n    'declared',\n    'decline',\n    'decode',\n    'decompose',\n    'decorated',\n    'decorator',\n    'decoy',\n    'decrease',\n    'decree',\n    'dedicate',\n    'dedicator',\n    'deduce',\n    'deduct',\n    'deed',\n    'deem',\n    'deepen',\n    'deeply',\n    'deepness',\n    'deface',\n    'defacing',\n    'defame',\n    'default',\n    'defeat',\n    'defection',\n    'defective',\n    'defendant',\n    'defender',\n    'defense',\n    'defensive',\n    'deferral',\n    'deferred',\n    'defiance',\n    'defiant',\n    'defile',\n    'defiling',\n    'define',\n    'definite',\n    'deflate',\n    'deflation',\n    'deflator',\n    'deflected',\n    'deflector',\n    'defog',\n    'deforest',\n    'defraud',\n    'defrost',\n    'deftly',\n    'defuse',\n    'defy',\n    'degraded',\n    'degrading',\n    'degrease',\n    'degree',\n    'dehydrate',\n    'deity',\n    'dejected',\n    'delay',\n    'delegate',\n    'delegator',\n    'delete',\n    'deletion',\n    'delicacy',\n    'delicate',\n    'delicious',\n    'delighted',\n    'delirious',\n    'delirium',\n    'deliverer',\n    'delivery',\n    'delouse',\n    'delta',\n    'deluge',\n    'delusion',\n    'deluxe',\n    'demanding',\n    'demeaning',\n    'demeanor',\n    'demise',\n    'democracy',\n    'democrat',\n    'demote',\n    'demotion',\n    'demystify',\n    'denatured',\n    'deniable',\n    'denial',\n    'denim',\n    'denote',\n    'dense',\n    'density',\n    'dental',\n    'dentist',\n    'denture',\n    'deny',\n    'deodorant',\n    'deodorize',\n    'departed',\n    'departure',\n    'depict',\n    'deplete',\n    'depletion',\n    'deplored',\n    'deploy',\n    'deport',\n    'depose',\n    'depraved',\n    'depravity',\n    'deprecate',\n    'depress',\n    'deprive',\n    'depth',\n    'deputize',\n    'deputy',\n    'derail',\n    'deranged',\n    'derby',\n    'derived',\n    'desecrate',\n    'deserve',\n    'deserving',\n    'designate',\n    'designed',\n    'designer',\n    'designing',\n    'deskbound',\n    'desktop',\n    'deskwork',\n    'desolate',\n    'despair',\n    'despise',\n    'despite',\n    'destiny',\n    'destitute',\n    'destruct',\n    'detached',\n    'detail',\n    'detection',\n    'detective',\n    'detector',\n    'detention',\n    'detergent',\n    'detest',\n    'detonate',\n    'detonator',\n    'detoxify',\n    'detract',\n    'deuce',\n    'devalue',\n    'deviancy',\n    'deviant',\n    'deviate',\n    'deviation',\n    'deviator',\n    'device',\n    'devious',\n    'devotedly',\n    'devotee',\n    'devotion',\n    'devourer',\n    'devouring',\n    'devoutly',\n    'dexterity',\n    'dexterous',\n    'diabetes',\n    'diabetic',\n    'diabolic',\n    'diagnoses',\n    'diagnosis',\n    'diagram',\n    'dial',\n    'diameter',\n    'diaper',\n    'diaphragm',\n    'diary',\n    'dice',\n    'dicing',\n    'dictate',\n    'dictation',\n    'dictator',\n    'difficult',\n    'diffused',\n    'diffuser',\n    'diffusion',\n    'diffusive',\n    'dig',\n    'dilation',\n    'diligence',\n    'diligent',\n    'dill',\n    'dilute',\n    'dime',\n    'diminish',\n    'dimly',\n    'dimmed',\n    'dimmer',\n    'dimness',\n    'dimple',\n    'diner',\n    'dingbat',\n    'dinghy',\n    'dinginess',\n    'dingo',\n    'dingy',\n    'dining',\n    'dinner',\n    'diocese',\n    'dioxide',\n    'diploma',\n    'dipped',\n    'dipper',\n    'dipping',\n    'directed',\n    'direction',\n    'directive',\n    'directly',\n    'directory',\n    'direness',\n    'dirtiness',\n    'disabled',\n    'disagree',\n    'disallow',\n    'disarm',\n    'disarray',\n    'disaster',\n    'disband',\n    'disbelief',\n    'disburse',\n    'discard',\n    'discern',\n    'discharge',\n    'disclose',\n    'discolor',\n    'discount',\n    'discourse',\n    'discover',\n    'discuss',\n    'disdain',\n    'disengage',\n    'disfigure',\n    'disgrace',\n    'dish',\n    'disinfect',\n    'disjoin',\n    'disk',\n    'dislike',\n    'disliking',\n    'dislocate',\n    'dislodge',\n    'disloyal',\n    'dismantle',\n    'dismay',\n    'dismiss',\n    'dismount',\n    'disobey',\n    'disorder',\n    'disown',\n    'disparate',\n    'disparity',\n    'dispatch',\n    'dispense',\n    'dispersal',\n    'dispersed',\n    'disperser',\n    'displace',\n    'display',\n    'displease',\n    'disposal',\n    'dispose',\n    'disprove',\n    'dispute',\n    'disregard',\n    'disrupt',\n    'dissuade',\n    'distance',\n    'distant',\n    'distaste',\n    'distill',\n    'distinct',\n    'distort',\n    'distract',\n    'distress',\n    'district',\n    'distrust',\n    'ditch',\n    'ditto',\n    'ditzy',\n    'dividable',\n    'divided',\n    'dividend',\n    'dividers',\n    'dividing',\n    'divinely',\n    'diving',\n    'divinity',\n    'divisible',\n    'divisibly',\n    'division',\n    'divisive',\n    'divorcee',\n    'dizziness',\n    'dizzy',\n    'doable',\n    'docile',\n    'dock',\n    'doctrine',\n    'document',\n    'dodge',\n    'dodgy',\n    'doily',\n    'doing',\n    'dole',\n    'dollar',\n    'dollhouse',\n    'dollop',\n    'dolly',\n    'dolphin',\n    'domain',\n    'domelike',\n    'domestic',\n    'dominion',\n    'dominoes',\n    'donated',\n    'donation',\n    'donator',\n    'donor',\n    'donut',\n    'doodle',\n    'doorbell',\n    'doorframe',\n    'doorknob',\n    'doorman',\n    'doormat',\n    'doornail',\n    'doorpost',\n    'doorstep',\n    'doorstop',\n    'doorway',\n    'doozy',\n    'dork',\n    'dormitory',\n    'dorsal',\n    'dosage',\n    'dose',\n    'dotted',\n    'doubling',\n    'douche',\n    'dove',\n    'down',\n    'dowry',\n    'doze',\n    'drab',\n    'dragging',\n    'dragonfly',\n    'dragonish',\n    'dragster',\n    'drainable',\n    'drainage',\n    'drained',\n    'drainer',\n    'drainpipe',\n    'dramatic',\n    'dramatize',\n    'drank',\n    'drapery',\n    'drastic',\n    'draw',\n    'dreaded',\n    'dreadful',\n    'dreadlock',\n    'dreamboat',\n    'dreamily',\n    'dreamland',\n    'dreamless',\n    'dreamlike',\n    'dreamt',\n    'dreamy',\n    'drearily',\n    'dreary',\n    'drench',\n    'dress',\n    'drew',\n    'dribble',\n    'dried',\n    'drier',\n    'drift',\n    'driller',\n    'drilling',\n    'drinkable',\n    'drinking',\n    'dripping',\n    'drippy',\n    'drivable',\n    'driven',\n    'driver',\n    'driveway',\n    'driving',\n    'drizzle',\n    'drizzly',\n    'drone',\n    'drool',\n    'droop',\n    'drop-down',\n    'dropbox',\n    'dropkick',\n    'droplet',\n    'dropout',\n    'dropper',\n    'drove',\n    'drown',\n    'drowsily',\n    'drudge',\n    'drum',\n    'dry',\n    'dubbed',\n    'dubiously',\n    'duchess',\n    'duckbill',\n    'ducking',\n    'duckling',\n    'ducktail',\n    'ducky',\n    'duct',\n    'dude',\n    'duffel',\n    'dugout',\n    'duh',\n    'duke',\n    'duller',\n    'dullness',\n    'duly',\n    'dumping',\n    'dumpling',\n    'dumpster',\n    'duo',\n    'dupe',\n    'duplex',\n    'duplicate',\n    'duplicity',\n    'durable',\n    'durably',\n    'duration',\n    'duress',\n    'during',\n    'dusk',\n    'dust',\n    'dutiful',\n    'duty',\n    'duvet',\n    'dwarf',\n    'dweeb',\n    'dwelled',\n    'dweller',\n    'dwelling',\n    'dwindle',\n    'dwindling',\n    'dynamic',\n    'dynamite',\n    'dynasty',\n    'dyslexia',\n    'dyslexic',\n    'each',\n    'eagle',\n    'earache',\n    'eardrum',\n    'earflap',\n    'earful',\n    'earlobe',\n    'early',\n    'earmark',\n    'earmuff',\n    'earphone',\n    'earpiece',\n    'earplugs',\n    'earring',\n    'earshot',\n    'earthen',\n    'earthlike',\n    'earthling',\n    'earthly',\n    'earthworm',\n    'earthy',\n    'earwig',\n    'easeful',\n    'easel',\n    'easiest',\n    'easily',\n    'easiness',\n    'easing',\n    'eastbound',\n    'eastcoast',\n    'easter',\n    'eastward',\n    'eatable',\n    'eaten',\n    'eatery',\n    'eating',\n    'eats',\n    'ebay',\n    'ebony',\n    'ebook',\n    'ecard',\n    'eccentric',\n    'echo',\n    'eclair',\n    'eclipse',\n    'ecologist',\n    'ecology',\n    'economic',\n    'economist',\n    'economy',\n    'ecosphere',\n    'ecosystem',\n    'edge',\n    'edginess',\n    'edging',\n    'edgy',\n    'edition',\n    'editor',\n    'educated',\n    'education',\n    'educator',\n    'eel',\n    'effective',\n    'effects',\n    'efficient',\n    'effort',\n    'eggbeater',\n    'egging',\n    'eggnog',\n    'eggplant',\n    'eggshell',\n    'egomaniac',\n    'egotism',\n    'egotistic',\n    'either',\n    'eject',\n    'elaborate',\n    'elastic',\n    'elated',\n    'elbow',\n    'eldercare',\n    'elderly',\n    'eldest',\n    'electable',\n    'election',\n    'elective',\n    'elephant',\n    'elevate',\n    'elevating',\n    'elevation',\n    'elevator',\n    'eleven',\n    'elf',\n    'eligible',\n    'eligibly',\n    'eliminate',\n    'elite',\n    'elitism',\n    'elixir',\n    'elk',\n    'ellipse',\n    'elliptic',\n    'elm',\n    'elongated',\n    'elope',\n    'eloquence',\n    'eloquent',\n    'elsewhere',\n    'elude',\n    'elusive',\n    'elves',\n    'email',\n    'embargo',\n    'embark',\n    'embassy',\n    'embattled',\n    'embellish',\n    'ember',\n    'embezzle',\n    'emblaze',\n    'emblem',\n    'embody',\n    'embolism',\n    'emboss',\n    'embroider',\n    'emcee',\n    'emerald',\n    'emergency',\n    'emission',\n    'emit',\n    'emote',\n    'emoticon',\n    'emotion',\n    'empathic',\n    'empathy',\n    'emperor',\n    'emphases',\n    'emphasis',\n    'emphasize',\n    'emphatic',\n    'empirical',\n    'employed',\n    'employee',\n    'employer',\n    'emporium',\n    'empower',\n    'emptier',\n    'emptiness',\n    'empty',\n    'emu',\n    'enable',\n    'enactment',\n    'enamel',\n    'enchanted',\n    'enchilada',\n    'encircle',\n    'enclose',\n    'enclosure',\n    'encode',\n    'encore',\n    'encounter',\n    'encourage',\n    'encroach',\n    'encrust',\n    'encrypt',\n    'endanger',\n    'endeared',\n    'endearing',\n    'ended',\n    'ending',\n    'endless',\n    'endnote',\n    'endocrine',\n    'endorphin',\n    'endorse',\n    'endowment',\n    'endpoint',\n    'endurable',\n    'endurance',\n    'enduring',\n    'energetic',\n    'energize',\n    'energy',\n    'enforced',\n    'enforcer',\n    'engaged',\n    'engaging',\n    'engine',\n    'engorge',\n    'engraved',\n    'engraver',\n    'engraving',\n    'engross',\n    'engulf',\n    'enhance',\n    'enigmatic',\n    'enjoyable',\n    'enjoyably',\n    'enjoyer',\n    'enjoying',\n    'enjoyment',\n    'enlarged',\n    'enlarging',\n    'enlighten',\n    'enlisted',\n    'enquirer',\n    'enrage',\n    'enrich',\n    'enroll',\n    'enslave',\n    'ensnare',\n    'ensure',\n    'entail',\n    'entangled',\n    'entering',\n    'entertain',\n    'enticing',\n    'entire',\n    'entitle',\n    'entity',\n    'entomb',\n    'entourage',\n    'entrap',\n    'entree',\n    'entrench',\n    'entrust',\n    'entryway',\n    'entwine',\n    'enunciate',\n    'envelope',\n    'enviable',\n    'enviably',\n    'envious',\n    'envision',\n    'envoy',\n    'envy',\n    'enzyme',\n    'epic',\n    'epidemic',\n    'epidermal',\n    'epidermis',\n    'epidural',\n    'epilepsy',\n    'epileptic',\n    'epilogue',\n    'epiphany',\n    'episode',\n    'equal',\n    'equate',\n    'equation',\n    'equator',\n    'equinox',\n    'equipment',\n    'equity',\n    'equivocal',\n    'eradicate',\n    'erasable',\n    'erased',\n    'eraser',\n    'erasure',\n    'ergonomic',\n    'errand',\n    'errant',\n    'erratic',\n    'error',\n    'erupt',\n    'escalate',\n    'escalator',\n    'escapable',\n    'escapade',\n    'escapist',\n    'escargot',\n    'eskimo',\n    'esophagus',\n    'espionage',\n    'espresso',\n    'esquire',\n    'essay',\n    'essence',\n    'essential',\n    'establish',\n    'estate',\n    'esteemed',\n    'estimate',\n    'estimator',\n    'estranged',\n    'estrogen',\n    'etching',\n    'eternal',\n    'eternity',\n    'ethanol',\n    'ether',\n    'ethically',\n    'ethics',\n    'euphemism',\n    'evacuate',\n    'evacuee',\n    'evade',\n    'evaluate',\n    'evaluator',\n    'evaporate',\n    'evasion',\n    'evasive',\n    'even',\n    'everglade',\n    'evergreen',\n    'everybody',\n    'everyday',\n    'everyone',\n    'evict',\n    'evidence',\n    'evident',\n    'evil',\n    'evoke',\n    'evolution',\n    'evolve',\n    'exact',\n    'exalted',\n    'example',\n    'excavate',\n    'excavator',\n    'exceeding',\n    'exception',\n    'excess',\n    'exchange',\n    'excitable',\n    'exciting',\n    'exclaim',\n    'exclude',\n    'excluding',\n    'exclusion',\n    'exclusive',\n    'excretion',\n    'excretory',\n    'excursion',\n    'excusable',\n    'excusably',\n    'excuse',\n    'exemplary',\n    'exemplify',\n    'exemption',\n    'exerciser',\n    'exert',\n    'exes',\n    'exfoliate',\n    'exhale',\n    'exhaust',\n    'exhume',\n    'exile',\n    'existing',\n    'exit',\n    'exodus',\n    'exonerate',\n    'exorcism',\n    'exorcist',\n    'expand',\n    'expanse',\n    'expansion',\n    'expansive',\n    'expectant',\n    'expedited',\n    'expediter',\n    'expel',\n    'expend',\n    'expenses',\n    'expensive',\n    'expert',\n    'expire',\n    'expiring',\n    'explain',\n    'expletive',\n    'explicit',\n    'explode',\n    'exploit',\n    'explore',\n    'exploring',\n    'exponent',\n    'exporter',\n    'exposable',\n    'expose',\n    'exposure',\n    'express',\n    'expulsion',\n    'exquisite',\n    'extended',\n    'extending',\n    'extent',\n    'extenuate',\n    'exterior',\n    'external',\n    'extinct',\n    'extortion',\n    'extradite',\n    'extras',\n    'extrovert',\n    'extrude',\n    'extruding',\n    'exuberant',\n    'fable',\n    'fabric',\n    'fabulous',\n    'facebook',\n    'facecloth',\n    'facedown',\n    'faceless',\n    'facelift',\n    'faceplate',\n    'faceted',\n    'facial',\n    'facility',\n    'facing',\n    'facsimile',\n    'faction',\n    'factoid',\n    'factor',\n    'factsheet',\n    'factual',\n    'faculty',\n    'fade',\n    'fading',\n    'failing',\n    'falcon',\n    'fall',\n    'false',\n    'falsify',\n    'fame',\n    'familiar',\n    'family',\n    'famine',\n    'famished',\n    'fanatic',\n    'fancied',\n    'fanciness',\n    'fancy',\n    'fanfare',\n    'fang',\n    'fanning',\n    'fantasize',\n    'fantastic',\n    'fantasy',\n    'fascism',\n    'fastball',\n    'faster',\n    'fasting',\n    'fastness',\n    'faucet',\n    'favorable',\n    'favorably',\n    'favored',\n    'favoring',\n    'favorite',\n    'fax',\n    'feast',\n    'federal',\n    'fedora',\n    'feeble',\n    'feed',\n    'feel',\n    'feisty',\n    'feline',\n    'felt-tip',\n    'feminine',\n    'feminism',\n    'feminist',\n    'feminize',\n    'femur',\n    'fence',\n    'fencing',\n    'fender',\n    'ferment',\n    'fernlike',\n    'ferocious',\n    'ferocity',\n    'ferret',\n    'ferris',\n    'ferry',\n    'fervor',\n    'fester',\n    'festival',\n    'festive',\n    'festivity',\n    'fetal',\n    'fetch',\n    'fever',\n    'fiber',\n    'fiction',\n    'fiddle',\n    'fiddling',\n    'fidelity',\n    'fidgeting',\n    'fidgety',\n    'fifteen',\n    'fifth',\n    'fiftieth',\n    'fifty',\n    'figment',\n    'figure',\n    'figurine',\n    'filing',\n    'filled',\n    'filler',\n    'filling',\n    'film',\n    'filter',\n    'filth',\n    'filtrate',\n    'finale',\n    'finalist',\n    'finalize',\n    'finally',\n    'finance',\n    'financial',\n    'finch',\n    'fineness',\n    'finer',\n    'finicky',\n    'finished',\n    'finisher',\n    'finishing',\n    'finite',\n    'finless',\n    'finlike',\n    'fiscally',\n    'fit',\n    'five',\n    'flaccid',\n    'flagman',\n    'flagpole',\n    'flagship',\n    'flagstick',\n    'flagstone',\n    'flail',\n    'flakily',\n    'flaky',\n    'flame',\n    'flammable',\n    'flanked',\n    'flanking',\n    'flannels',\n    'flap',\n    'flaring',\n    'flashback',\n    'flashbulb',\n    'flashcard',\n    'flashily',\n    'flashing',\n    'flashy',\n    'flask',\n    'flatbed',\n    'flatfoot',\n    'flatly',\n    'flatness',\n    'flatten',\n    'flattered',\n    'flatterer',\n    'flattery',\n    'flattop',\n    'flatware',\n    'flatworm',\n    'flavored',\n    'flavorful',\n    'flavoring',\n    'flaxseed',\n    'fled',\n    'fleshed',\n    'fleshy',\n    'flick',\n    'flier',\n    'flight',\n    'flinch',\n    'fling',\n    'flint',\n    'flip',\n    'flirt',\n    'float',\n    'flock',\n    'flogging',\n    'flop',\n    'floral',\n    'florist',\n    'floss',\n    'flounder',\n    'flyable',\n    'flyaway',\n    'flyer',\n    'flying',\n    'flyover',\n    'flypaper',\n    'foam',\n    'foe',\n    'fog',\n    'foil',\n    'folic',\n    'folk',\n    'follicle',\n    'follow',\n    'fondling',\n    'fondly',\n    'fondness',\n    'fondue',\n    'font',\n    'food',\n    'fool',\n    'footage',\n    'football',\n    'footbath',\n    'footboard',\n    'footer',\n    'footgear',\n    'foothill',\n    'foothold',\n    'footing',\n    'footless',\n    'footman',\n    'footnote',\n    'footpad',\n    'footpath',\n    'footprint',\n    'footrest',\n    'footsie',\n    'footsore',\n    'footwear',\n    'footwork',\n    'fossil',\n    'foster',\n    'founder',\n    'founding',\n    'fountain',\n    'fox',\n    'foyer',\n    'fraction',\n    'fracture',\n    'fragile',\n    'fragility',\n    'fragment',\n    'fragrance',\n    'fragrant',\n    'frail',\n    'frame',\n    'framing',\n    'frantic',\n    'fraternal',\n    'frayed',\n    'fraying',\n    'frays',\n    'freckled',\n    'freckles',\n    'freebase',\n    'freebee',\n    'freebie',\n    'freedom',\n    'freefall',\n    'freehand',\n    'freeing',\n    'freeload',\n    'freely',\n    'freemason',\n    'freeness',\n    'freestyle',\n    'freeware',\n    'freeway',\n    'freewill',\n    'freezable',\n    'freezing',\n    'freight',\n    'french',\n    'frenzied',\n    'frenzy',\n    'frequency',\n    'frequent',\n    'fresh',\n    'fretful',\n    'fretted',\n    'friction',\n    'friday',\n    'fridge',\n    'fried',\n    'friend',\n    'frighten',\n    'frightful',\n    'frigidity',\n    'frigidly',\n    'frill',\n    'fringe',\n    'frisbee',\n    'frisk',\n    'fritter',\n    'frivolous',\n    'frolic',\n    'from',\n    'front',\n    'frostbite',\n    'frosted',\n    'frostily',\n    'frosting',\n    'frostlike',\n    'frosty',\n    'froth',\n    'frown',\n    'frozen',\n    'fructose',\n    'frugality',\n    'frugally',\n    'fruit',\n    'frustrate',\n    'frying',\n    'gab',\n    'gaffe',\n    'gag',\n    'gainfully',\n    'gaining',\n    'gains',\n    'gala',\n    'gallantly',\n    'galleria',\n    'gallery',\n    'galley',\n    'gallon',\n    'gallows',\n    'gallstone',\n    'galore',\n    'galvanize',\n    'gambling',\n    'game',\n    'gaming',\n    'gamma',\n    'gander',\n    'gangly',\n    'gangrene',\n    'gangway',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'gargle',\n    'garland',\n    'garlic',\n    'garment',\n    'garnet',\n    'garnish',\n    'garter',\n    'gas',\n    'gatherer',\n    'gathering',\n    'gating',\n    'gauging',\n    'gauntlet',\n    'gauze',\n    'gave',\n    'gawk',\n    'gazing',\n    'gear',\n    'gecko',\n    'geek',\n    'geiger',\n    'gem',\n    'gender',\n    'generic',\n    'generous',\n    'genetics',\n    'genre',\n    'gentile',\n    'gentleman',\n    'gently',\n    'gents',\n    'geography',\n    'geologic',\n    'geologist',\n    'geology',\n    'geometric',\n    'geometry',\n    'geranium',\n    'gerbil',\n    'geriatric',\n    'germicide',\n    'germinate',\n    'germless',\n    'germproof',\n    'gestate',\n    'gestation',\n    'gesture',\n    'getaway',\n    'getting',\n    'getup',\n    'giant',\n    'gibberish',\n    'giblet',\n    'giddily',\n    'giddiness',\n    'giddy',\n    'gift',\n    'gigabyte',\n    'gigahertz',\n    'gigantic',\n    'giggle',\n    'giggling',\n    'giggly',\n    'gigolo',\n    'gilled',\n    'gills',\n    'gimmick',\n    'girdle',\n    'giveaway',\n    'given',\n    'giver',\n    'giving',\n    'gizmo',\n    'gizzard',\n    'glacial',\n    'glacier',\n    'glade',\n    'gladiator',\n    'gladly',\n    'glamorous',\n    'glamour',\n    'glance',\n    'glancing',\n    'glandular',\n    'glare',\n    'glaring',\n    'glass',\n    'glaucoma',\n    'glazing',\n    'gleaming',\n    'gleeful',\n    'glider',\n    'gliding',\n    'glimmer',\n    'glimpse',\n    'glisten',\n    'glitch',\n    'glitter',\n    'glitzy',\n    'gloater',\n    'gloating',\n    'gloomily',\n    'gloomy',\n    'glorified',\n    'glorifier',\n    'glorify',\n    'glorious',\n    'glory',\n    'gloss',\n    'glove',\n    'glowing',\n    'glowworm',\n    'glucose',\n    'glue',\n    'gluten',\n    'glutinous',\n    'glutton',\n    'gnarly',\n    'gnat',\n    'goal',\n    'goatskin',\n    'goes',\n    'goggles',\n    'going',\n    'goldfish',\n    'goldmine',\n    'goldsmith',\n    'golf',\n    'goliath',\n    'gonad',\n    'gondola',\n    'gone',\n    'gong',\n    'good',\n    'gooey',\n    'goofball',\n    'goofiness',\n    'goofy',\n    'google',\n    'goon',\n    'gopher',\n    'gore',\n    'gorged',\n    'gorgeous',\n    'gory',\n    'gosling',\n    'gossip',\n    'gothic',\n    'gotten',\n    'gout',\n    'gown',\n    'grab',\n    'graceful',\n    'graceless',\n    'gracious',\n    'gradation',\n    'graded',\n    'grader',\n    'gradient',\n    'grading',\n    'gradually',\n    'graduate',\n    'graffiti',\n    'grafted',\n    'grafting',\n    'grain',\n    'granddad',\n    'grandkid',\n    'grandly',\n    'grandma',\n    'grandpa',\n    'grandson',\n    'granite',\n    'granny',\n    'granola',\n    'grant',\n    'granular',\n    'grape',\n    'graph',\n    'grapple',\n    'grappling',\n    'grasp',\n    'grass',\n    'gratified',\n    'gratify',\n    'grating',\n    'gratitude',\n    'gratuity',\n    'gravel',\n    'graveness',\n    'graves',\n    'graveyard',\n    'gravitate',\n    'gravity',\n    'gravy',\n    'gray',\n    'grazing',\n    'greasily',\n    'greedily',\n    'greedless',\n    'greedy',\n    'green',\n    'greeter',\n    'greeting',\n    'grew',\n    'greyhound',\n    'grid',\n    'grief',\n    'grievance',\n    'grieving',\n    'grievous',\n    'grill',\n    'grimace',\n    'grimacing',\n    'grime',\n    'griminess',\n    'grimy',\n    'grinch',\n    'grinning',\n    'grip',\n    'gristle',\n    'grit',\n    'groggily',\n    'groggy',\n    'groin',\n    'groom',\n    'groove',\n    'grooving',\n    'groovy',\n    'grope',\n    'ground',\n    'grouped',\n    'grout',\n    'grove',\n    'grower',\n    'growing',\n    'growl',\n    'grub',\n    'grudge',\n    'grudging',\n    'grueling',\n    'gruffly',\n    'grumble',\n    'grumbling',\n    'grumbly',\n    'grumpily',\n    'grunge',\n    'grunt',\n    'guacamole',\n    'guidable',\n    'guidance',\n    'guide',\n    'guiding',\n    'guileless',\n    'guise',\n    'gulf',\n    'gullible',\n    'gully',\n    'gulp',\n    'gumball',\n    'gumdrop',\n    'gumminess',\n    'gumming',\n    'gummy',\n    'gurgle',\n    'gurgling',\n    'guru',\n    'gush',\n    'gusto',\n    'gusty',\n    'gutless',\n    'guts',\n    'gutter',\n    'guy',\n    'guzzler',\n    'gyration',\n    'habitable',\n    'habitant',\n    'habitat',\n    'habitual',\n    'hacked',\n    'hacker',\n    'hacking',\n    'hacksaw',\n    'had',\n    'haggler',\n    'haiku',\n    'half',\n    'halogen',\n    'halt',\n    'halved',\n    'halves',\n    'hamburger',\n    'hamlet',\n    'hammock',\n    'hamper',\n    'hamster',\n    'hamstring',\n    'handbag',\n    'handball',\n    'handbook',\n    'handbrake',\n    'handcart',\n    'handclap',\n    'handclasp',\n    'handcraft',\n    'handcuff',\n    'handed',\n    'handful',\n    'handgrip',\n    'handgun',\n    'handheld',\n    'handiness',\n    'handiwork',\n    'handlebar',\n    'handled',\n    'handler',\n    'handling',\n    'handmade',\n    'handoff',\n    'handpick',\n    'handprint',\n    'handrail',\n    'handsaw',\n    'handset',\n    'handsfree',\n    'handshake',\n    'handstand',\n    'handwash',\n    'handwork',\n    'handwoven',\n    'handwrite',\n    'handyman',\n    'hangnail',\n    'hangout',\n    'hangover',\n    'hangup',\n    'hankering',\n    'hankie',\n    'hanky',\n    'haphazard',\n    'happening',\n    'happier',\n    'happiest',\n    'happily',\n    'happiness',\n    'happy',\n    'harbor',\n    'hardcopy',\n    'hardcore',\n    'hardcover',\n    'harddisk',\n    'hardened',\n    'hardener',\n    'hardening',\n    'hardhat',\n    'hardhead',\n    'hardiness',\n    'hardly',\n    'hardness',\n    'hardship',\n    'hardware',\n    'hardwired',\n    'hardwood',\n    'hardy',\n    'harmful',\n    'harmless',\n    'harmonica',\n    'harmonics',\n    'harmonize',\n    'harmony',\n    'harness',\n    'harpist',\n    'harsh',\n    'harvest',\n    'hash',\n    'hassle',\n    'haste',\n    'hastily',\n    'hastiness',\n    'hasty',\n    'hatbox',\n    'hatchback',\n    'hatchery',\n    'hatchet',\n    'hatching',\n    'hatchling',\n    'hate',\n    'hatless',\n    'hatred',\n    'haunt',\n    'haven',\n    'hazard',\n    'hazelnut',\n    'hazily',\n    'haziness',\n    'hazing',\n    'hazy',\n    'headache',\n    'headband',\n    'headboard',\n    'headcount',\n    'headdress',\n    'headed',\n    'header',\n    'headfirst',\n    'headgear',\n    'heading',\n    'headlamp',\n    'headless',\n    'headlock',\n    'headphone',\n    'headpiece',\n    'headrest',\n    'headroom',\n    'headscarf',\n    'headset',\n    'headsman',\n    'headstand',\n    'headstone',\n    'headway',\n    'headwear',\n    'heap',\n    'heat',\n    'heave',\n    'heavily',\n    'heaviness',\n    'heaving',\n    'hedge',\n    'hedging',\n    'heftiness',\n    'hefty',\n    'helium',\n    'helmet',\n    'helper',\n    'helpful',\n    'helping',\n    'helpless',\n    'helpline',\n    'hemlock',\n    'hemstitch',\n    'hence',\n    'henchman',\n    'henna',\n    'herald',\n    'herbal',\n    'herbicide',\n    'herbs',\n    'heritage',\n    'hermit',\n    'heroics',\n    'heroism',\n    'herring',\n    'herself',\n    'hertz',\n    'hesitancy',\n    'hesitant',\n    'hesitate',\n    'hexagon',\n    'hexagram',\n    'hubcap',\n    'huddle',\n    'huddling',\n    'huff',\n    'hug',\n    'hula',\n    'hulk',\n    'hull',\n    'human',\n    'humble',\n    'humbling',\n    'humbly',\n    'humid',\n    'humiliate',\n    'humility',\n    'humming',\n    'hummus',\n    'humongous',\n    'humorist',\n    'humorless',\n    'humorous',\n    'humpback',\n    'humped',\n    'humvee',\n    'hunchback',\n    'hundredth',\n    'hunger',\n    'hungrily',\n    'hungry',\n    'hunk',\n    'hunter',\n    'hunting',\n    'huntress',\n    'huntsman',\n    'hurdle',\n    'hurled',\n    'hurler',\n    'hurling',\n    'hurray',\n    'hurricane',\n    'hurried',\n    'hurry',\n    'hurt',\n    'husband',\n    'hush',\n    'husked',\n    'huskiness',\n    'hut',\n    'hybrid',\n    'hydrant',\n    'hydrated',\n    'hydration',\n    'hydrogen',\n    'hydroxide',\n    'hyperlink',\n    'hypertext',\n    'hyphen',\n    'hypnoses',\n    'hypnosis',\n    'hypnotic',\n    'hypnotism',\n    'hypnotist',\n    'hypnotize',\n    'hypocrisy',\n    'hypocrite',\n    'ibuprofen',\n    'ice',\n    'iciness',\n    'icing',\n    'icky',\n    'icon',\n    'icy',\n    'idealism',\n    'idealist',\n    'idealize',\n    'ideally',\n    'idealness',\n    'identical',\n    'identify',\n    'identity',\n    'ideology',\n    'idiocy',\n    'idiom',\n    'idly',\n    'igloo',\n    'ignition',\n    'ignore',\n    'iguana',\n    'illicitly',\n    'illusion',\n    'illusive',\n    'image',\n    'imaginary',\n    'imagines',\n    'imaging',\n    'imbecile',\n    'imitate',\n    'imitation',\n    'immature',\n    'immerse',\n    'immersion',\n    'imminent',\n    'immobile',\n    'immodest',\n    'immorally',\n    'immortal',\n    'immovable',\n    'immovably',\n    'immunity',\n    'immunize',\n    'impaired',\n    'impale',\n    'impart',\n    'impatient',\n    'impeach',\n    'impeding',\n    'impending',\n    'imperfect',\n    'imperial',\n    'impish',\n    'implant',\n    'implement',\n    'implicate',\n    'implicit',\n    'implode',\n    'implosion',\n    'implosive',\n    'imply',\n    'impolite',\n    'important',\n    'importer',\n    'impose',\n    'imposing',\n    'impotence',\n    'impotency',\n    'impotent',\n    'impound',\n    'imprecise',\n    'imprint',\n    'imprison',\n    'impromptu',\n    'improper',\n    'improve',\n    'improving',\n    'improvise',\n    'imprudent',\n    'impulse',\n    'impulsive',\n    'impure',\n    'impurity',\n    'iodine',\n    'iodize',\n    'ion',\n    'ipad',\n    'iphone',\n    'ipod',\n    'irate',\n    'irk',\n    'iron',\n    'irregular',\n    'irrigate',\n    'irritable',\n    'irritably',\n    'irritant',\n    'irritate',\n    'islamic',\n    'islamist',\n    'isolated',\n    'isolating',\n    'isolation',\n    'isotope',\n    'issue',\n    'issuing',\n    'italicize',\n    'italics',\n    'item',\n    'itinerary',\n    'itunes',\n    'ivory',\n    'ivy',\n    'jab',\n    'jackal',\n    'jacket',\n    'jackknife',\n    'jackpot',\n    'jailbird',\n    'jailbreak',\n    'jailer',\n    'jailhouse',\n    'jalapeno',\n    'jam',\n    'janitor',\n    'january',\n    'jargon',\n    'jarring',\n    'jasmine',\n    'jaundice',\n    'jaunt',\n    'java',\n    'jawed',\n    'jawless',\n    'jawline',\n    'jaws',\n    'jaybird',\n    'jaywalker',\n    'jazz',\n    'jeep',\n    'jeeringly',\n    'jellied',\n    'jelly',\n    'jersey',\n    'jester',\n    'jet',\n    'jiffy',\n    'jigsaw',\n    'jimmy',\n    'jingle',\n    'jingling',\n    'jinx',\n    'jitters',\n    'jittery',\n    'job',\n    'jockey',\n    'jockstrap',\n    'jogger',\n    'jogging',\n    'john',\n    'joining',\n    'jokester',\n    'jokingly',\n    'jolliness',\n    'jolly',\n    'jolt',\n    'jot',\n    'jovial',\n    'joyfully',\n    'joylessly',\n    'joyous',\n    'joyride',\n    'joystick',\n    'jubilance',\n    'jubilant',\n    'judge',\n    'judgingly',\n    'judicial',\n    'judiciary',\n    'judo',\n    'juggle',\n    'juggling',\n    'jugular',\n    'juice',\n    'juiciness',\n    'juicy',\n    'jujitsu',\n    'jukebox',\n    'july',\n    'jumble',\n    'jumbo',\n    'jump',\n    'junction',\n    'juncture',\n    'june',\n    'junior',\n    'juniper',\n    'junkie',\n    'junkman',\n    'junkyard',\n    'jurist',\n    'juror',\n    'jury',\n    'justice',\n    'justifier',\n    'justify',\n    'justly',\n    'justness',\n    'juvenile',\n    'kabob',\n    'kangaroo',\n    'karaoke',\n    'karate',\n    'karma',\n    'kebab',\n    'keenly',\n    'keenness',\n    'keep',\n    'keg',\n    'kelp',\n    'kennel',\n    'kept',\n    'kerchief',\n    'kerosene',\n    'kettle',\n    'kick',\n    'kiln',\n    'kilobyte',\n    'kilogram',\n    'kilometer',\n    'kilowatt',\n    'kilt',\n    'kimono',\n    'kindle',\n    'kindling',\n    'kindly',\n    'kindness',\n    'kindred',\n    'kinetic',\n    'kinfolk',\n    'king',\n    'kinship',\n    'kinsman',\n    'kinswoman',\n    'kissable',\n    'kisser',\n    'kissing',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kitty',\n    'kiwi',\n    'kleenex',\n    'knapsack',\n    'knee',\n    'knelt',\n    'knickers',\n    'knoll',\n    'koala',\n    'kooky',\n    'kosher',\n    'krypton',\n    'kudos',\n    'kung',\n    'labored',\n    'laborer',\n    'laboring',\n    'laborious',\n    'labrador',\n    'ladder',\n    'ladies',\n    'ladle',\n    'ladybug',\n    'ladylike',\n    'lagged',\n    'lagging',\n    'lagoon',\n    'lair',\n    'lake',\n    'lance',\n    'landed',\n    'landfall',\n    'landfill',\n    'landing',\n    'landlady',\n    'landless',\n    'landline',\n    'landlord',\n    'landmark',\n    'landmass',\n    'landmine',\n    'landowner',\n    'landscape',\n    'landside',\n    'landslide',\n    'language',\n    'lankiness',\n    'lanky',\n    'lantern',\n    'lapdog',\n    'lapel',\n    'lapped',\n    'lapping',\n    'laptop',\n    'lard',\n    'large',\n    'lark',\n    'lash',\n    'lasso',\n    'last',\n    'latch',\n    'late',\n    'lather',\n    'latitude',\n    'latrine',\n    'latter',\n    'latticed',\n    'launch',\n    'launder',\n    'laundry',\n    'laurel',\n    'lavender',\n    'lavish',\n    'laxative',\n    'lazily',\n    'laziness',\n    'lazy',\n    'lecturer',\n    'left',\n    'legacy',\n    'legal',\n    'legend',\n    'legged',\n    'leggings',\n    'legible',\n    'legibly',\n    'legislate',\n    'lego',\n    'legroom',\n    'legume',\n    'legwarmer',\n    'legwork',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'lent',\n    'leotard',\n    'lesser',\n    'letdown',\n    'lethargic',\n    'lethargy',\n    'letter',\n    'lettuce',\n    'level',\n    'leverage',\n    'levers',\n    'levitate',\n    'levitator',\n    'liability',\n    'liable',\n    'liberty',\n    'librarian',\n    'library',\n    'licking',\n    'licorice',\n    'lid',\n    'life',\n    'lifter',\n    'lifting',\n    'liftoff',\n    'ligament',\n    'likely',\n    'likeness',\n    'likewise',\n    'liking',\n    'lilac',\n    'lilly',\n    'lily',\n    'limb',\n    'limeade',\n    'limelight',\n    'limes',\n    'limit',\n    'limping',\n    'limpness',\n    'line',\n    'lingo',\n    'linguini',\n    'linguist',\n    'lining',\n    'linked',\n    'linoleum',\n    'linseed',\n    'lint',\n    'lion',\n    'lip',\n    'liquefy',\n    'liqueur',\n    'liquid',\n    'lisp',\n    'list',\n    'litigate',\n    'litigator',\n    'litmus',\n    'litter',\n    'little',\n    'livable',\n    'lived',\n    'lively',\n    'liver',\n    'livestock',\n    'lividly',\n    'living',\n    'lizard',\n    'lubricant',\n    'lubricate',\n    'lucid',\n    'luckily',\n    'luckiness',\n    'luckless',\n    'lucrative',\n    'ludicrous',\n    'lugged',\n    'lukewarm',\n    'lullaby',\n    'lumber',\n    'luminance',\n    'luminous',\n    'lumpiness',\n    'lumping',\n    'lumpish',\n    'lunacy',\n    'lunar',\n    'lunchbox',\n    'luncheon',\n    'lunchroom',\n    'lunchtime',\n    'lung',\n    'lurch',\n    'lure',\n    'luridness',\n    'lurk',\n    'lushly',\n    'lushness',\n    'luster',\n    'lustfully',\n    'lustily',\n    'lustiness',\n    'lustrous',\n    'lusty',\n    'luxurious',\n    'luxury',\n    'lying',\n    'lyrically',\n    'lyricism',\n    'lyricist',\n    'lyrics',\n    'macarena',\n    'macaroni',\n    'macaw',\n    'mace',\n    'machine',\n    'machinist',\n    'magazine',\n    'magenta',\n    'maggot',\n    'magical',\n    'magician',\n    'magma',\n    'magnesium',\n    'magnetic',\n    'magnetism',\n    'magnetize',\n    'magnifier',\n    'magnify',\n    'magnitude',\n    'magnolia',\n    'mahogany',\n    'maimed',\n    'majestic',\n    'majesty',\n    'majorette',\n    'majority',\n    'makeover',\n    'maker',\n    'makeshift',\n    'making',\n    'malformed',\n    'malt',\n    'mama',\n    'mammal',\n    'mammary',\n    'mammogram',\n    'manager',\n    'managing',\n    'manatee',\n    'mandarin',\n    'mandate',\n    'mandatory',\n    'mandolin',\n    'manger',\n    'mangle',\n    'mango',\n    'mangy',\n    'manhandle',\n    'manhole',\n    'manhood',\n    'manhunt',\n    'manicotti',\n    'manicure',\n    'manifesto',\n    'manila',\n    'mankind',\n    'manlike',\n    'manliness',\n    'manly',\n    'manmade',\n    'manned',\n    'mannish',\n    'manor',\n    'manpower',\n    'mantis',\n    'mantra',\n    'manual',\n    'many',\n    'map',\n    'marathon',\n    'marauding',\n    'marbled',\n    'marbles',\n    'marbling',\n    'march',\n    'mardi',\n    'margarine',\n    'margarita',\n    'margin',\n    'marigold',\n    'marina',\n    'marine',\n    'marital',\n    'maritime',\n    'marlin',\n    'marmalade',\n    'maroon',\n    'married',\n    'marrow',\n    'marry',\n    'marshland',\n    'marshy',\n    'marsupial',\n    'marvelous',\n    'marxism',\n    'mascot',\n    'masculine',\n    'mashed',\n    'mashing',\n    'massager',\n    'masses',\n    'massive',\n    'mastiff',\n    'matador',\n    'matchbook',\n    'matchbox',\n    'matcher',\n    'matching',\n    'matchless',\n    'material',\n    'maternal',\n    'maternity',\n    'math',\n    'mating',\n    'matriarch',\n    'matrimony',\n    'matrix',\n    'matron',\n    'matted',\n    'matter',\n    'maturely',\n    'maturing',\n    'maturity',\n    'mauve',\n    'maverick',\n    'maximize',\n    'maximum',\n    'maybe',\n    'mayday',\n    'mayflower',\n    'moaner',\n    'moaning',\n    'mobile',\n    'mobility',\n    'mobilize',\n    'mobster',\n    'mocha',\n    'mocker',\n    'mockup',\n    'modified',\n    'modify',\n    'modular',\n    'modulator',\n    'module',\n    'moisten',\n    'moistness',\n    'moisture',\n    'molar',\n    'molasses',\n    'mold',\n    'molecular',\n    'molecule',\n    'molehill',\n    'mollusk',\n    'mom',\n    'monastery',\n    'monday',\n    'monetary',\n    'monetize',\n    'moneybags',\n    'moneyless',\n    'moneywise',\n    'mongoose',\n    'mongrel',\n    'monitor',\n    'monkhood',\n    'monogamy',\n    'monogram',\n    'monologue',\n    'monopoly',\n    'monorail',\n    'monotone',\n    'monotype',\n    'monoxide',\n    'monsieur',\n    'monsoon',\n    'monstrous',\n    'monthly',\n    'monument',\n    'moocher',\n    'moodiness',\n    'moody',\n    'mooing',\n    'moonbeam',\n    'mooned',\n    'moonlight',\n    'moonlike',\n    'moonlit',\n    'moonrise',\n    'moonscape',\n    'moonshine',\n    'moonstone',\n    'moonwalk',\n    'mop',\n    'morale',\n    'morality',\n    'morally',\n    'morbidity',\n    'morbidly',\n    'morphine',\n    'morphing',\n    'morse',\n    'mortality',\n    'mortally',\n    'mortician',\n    'mortified',\n    'mortify',\n    'mortuary',\n    'mosaic',\n    'mossy',\n    'most',\n    'mothball',\n    'mothproof',\n    'motion',\n    'motivate',\n    'motivator',\n    'motive',\n    'motocross',\n    'motor',\n    'motto',\n    'mountable',\n    'mountain',\n    'mounted',\n    'mounting',\n    'mourner',\n    'mournful',\n    'mouse',\n    'mousiness',\n    'moustache',\n    'mousy',\n    'mouth',\n    'movable',\n    'move',\n    'movie',\n    'moving',\n    'mower',\n    'mowing',\n    'much',\n    'muck',\n    'mud',\n    'mug',\n    'mulberry',\n    'mulch',\n    'mule',\n    'mulled',\n    'mullets',\n    'multiple',\n    'multiply',\n    'multitask',\n    'multitude',\n    'mumble',\n    'mumbling',\n    'mumbo',\n    'mummified',\n    'mummify',\n    'mummy',\n    'mumps',\n    'munchkin',\n    'mundane',\n    'municipal',\n    'muppet',\n    'mural',\n    'murkiness',\n    'murky',\n    'murmuring',\n    'muscular',\n    'museum',\n    'mushily',\n    'mushiness',\n    'mushroom',\n    'mushy',\n    'music',\n    'musket',\n    'muskiness',\n    'musky',\n    'mustang',\n    'mustard',\n    'muster',\n    'mustiness',\n    'musty',\n    'mutable',\n    'mutate',\n    'mutation',\n    'mute',\n    'mutilated',\n    'mutilator',\n    'mutiny',\n    'mutt',\n    'mutual',\n    'muzzle',\n    'myself',\n    'myspace',\n    'mystified',\n    'mystify',\n    'myth',\n    'nacho',\n    'nag',\n    'nail',\n    'name',\n    'naming',\n    'nanny',\n    'nanometer',\n    'nape',\n    'napkin',\n    'napped',\n    'napping',\n    'nappy',\n    'narrow',\n    'nastily',\n    'nastiness',\n    'national',\n    'native',\n    'nativity',\n    'natural',\n    'nature',\n    'naturist',\n    'nautical',\n    'navigate',\n    'navigator',\n    'navy',\n    'nearby',\n    'nearest',\n    'nearly',\n    'nearness',\n    'neatly',\n    'neatness',\n    'nebula',\n    'nebulizer',\n    'nectar',\n    'negate',\n    'negation',\n    'negative',\n    'neglector',\n    'negligee',\n    'negligent',\n    'negotiate',\n    'nemeses',\n    'nemesis',\n    'neon',\n    'nephew',\n    'nerd',\n    'nervous',\n    'nervy',\n    'nest',\n    'net',\n    'neurology',\n    'neuron',\n    'neurosis',\n    'neurotic',\n    'neuter',\n    'neutron',\n    'never',\n    'next',\n    'nibble',\n    'nickname',\n    'nicotine',\n    'niece',\n    'nifty',\n    'nimble',\n    'nimbly',\n    'nineteen',\n    'ninetieth',\n    'ninja',\n    'nintendo',\n    'ninth',\n    'nuclear',\n    'nuclei',\n    'nucleus',\n    'nugget',\n    'nullify',\n    'number',\n    'numbing',\n    'numbly',\n    'numbness',\n    'numeral',\n    'numerate',\n    'numerator',\n    'numeric',\n    'numerous',\n    'nuptials',\n    'nursery',\n    'nursing',\n    'nurture',\n    'nutcase',\n    'nutlike',\n    'nutmeg',\n    'nutrient',\n    'nutshell',\n    'nuttiness',\n    'nutty',\n    'nuzzle',\n    'nylon',\n    'oaf',\n    'oak',\n    'oasis',\n    'oat',\n    'obedience',\n    'obedient',\n    'obituary',\n    'object',\n    'obligate',\n    'obliged',\n    'oblivion',\n    'oblivious',\n    'oblong',\n    'obnoxious',\n    'oboe',\n    'obscure',\n    'obscurity',\n    'observant',\n    'observer',\n    'observing',\n    'obsessed',\n    'obsession',\n    'obsessive',\n    'obsolete',\n    'obstacle',\n    'obstinate',\n    'obstruct',\n    'obtain',\n    'obtrusive',\n    'obtuse',\n    'obvious',\n    'occultist',\n    'occupancy',\n    'occupant',\n    'occupier',\n    'occupy',\n    'ocean',\n    'ocelot',\n    'octagon',\n    'octane',\n    'october',\n    'octopus',\n    'ogle',\n    'oil',\n    'oink',\n    'ointment',\n    'okay',\n    'old',\n    'olive',\n    'olympics',\n    'omega',\n    'omen',\n    'ominous',\n    'omission',\n    'omit',\n    'omnivore',\n    'onboard',\n    'oncoming',\n    'ongoing',\n    'onion',\n    'online',\n    'onlooker',\n    'only',\n    'onscreen',\n    'onset',\n    'onshore',\n    'onslaught',\n    'onstage',\n    'onto',\n    'onward',\n    'onyx',\n    'oops',\n    'ooze',\n    'oozy',\n    'opacity',\n    'opal',\n    'open',\n    'operable',\n    'operate',\n    'operating',\n    'operation',\n    'operative',\n    'operator',\n    'opium',\n    'opossum',\n    'opponent',\n    'oppose',\n    'opposing',\n    'opposite',\n    'oppressed',\n    'oppressor',\n    'opt',\n    'opulently',\n    'osmosis',\n    'other',\n    'otter',\n    'ouch',\n    'ought',\n    'ounce',\n    'outage',\n    'outback',\n    'outbid',\n    'outboard',\n    'outbound',\n    'outbreak',\n    'outburst',\n    'outcast',\n    'outclass',\n    'outcome',\n    'outdated',\n    'outdoors',\n    'outer',\n    'outfield',\n    'outfit',\n    'outflank',\n    'outgoing',\n    'outgrow',\n    'outhouse',\n    'outing',\n    'outlast',\n    'outlet',\n    'outline',\n    'outlook',\n    'outlying',\n    'outmatch',\n    'outmost',\n    'outnumber',\n    'outplayed',\n    'outpost',\n    'outpour',\n    'output',\n    'outrage',\n    'outrank',\n    'outreach',\n    'outright',\n    'outscore',\n    'outsell',\n    'outshine',\n    'outshoot',\n    'outsider',\n    'outskirts',\n    'outsmart',\n    'outsource',\n    'outspoken',\n    'outtakes',\n    'outthink',\n    'outward',\n    'outweigh',\n    'outwit',\n    'oval',\n    'ovary',\n    'oven',\n    'overact',\n    'overall',\n    'overarch',\n    'overbid',\n    'overbill',\n    'overbite',\n    'overblown',\n    'overboard',\n    'overbook',\n    'overbuilt',\n    'overcast',\n    'overcoat',\n    'overcome',\n    'overcook',\n    'overcrowd',\n    'overdraft',\n    'overdrawn',\n    'overdress',\n    'overdrive',\n    'overdue',\n    'overeager',\n    'overeater',\n    'overexert',\n    'overfed',\n    'overfeed',\n    'overfill',\n    'overflow',\n    'overfull',\n    'overgrown',\n    'overhand',\n    'overhang',\n    'overhaul',\n    'overhead',\n    'overhear',\n    'overheat',\n    'overhung',\n    'overjoyed',\n    'overkill',\n    'overlabor',\n    'overlaid',\n    'overlap',\n    'overlay',\n    'overload',\n    'overlook',\n    'overlord',\n    'overlying',\n    'overnight',\n    'overpass',\n    'overpay',\n    'overplant',\n    'overplay',\n    'overpower',\n    'overprice',\n    'overrate',\n    'overreach',\n    'overreact',\n    'override',\n    'overripe',\n    'overrule',\n    'overrun',\n    'overshoot',\n    'overshot',\n    'oversight',\n    'oversized',\n    'oversleep',\n    'oversold',\n    'overspend',\n    'overstate',\n    'overstay',\n    'overstep',\n    'overstock',\n    'overstuff',\n    'oversweet',\n    'overtake',\n    'overthrow',\n    'overtime',\n    'overtly',\n    'overtone',\n    'overture',\n    'overturn',\n    'overuse',\n    'overvalue',\n    'overview',\n    'overwrite',\n    'owl',\n    'oxford',\n    'oxidant',\n    'oxidation',\n    'oxidize',\n    'oxidizing',\n    'oxygen',\n    'oxymoron',\n    'oyster',\n    'ozone',\n    'paced',\n    'pacemaker',\n    'pacific',\n    'pacifier',\n    'pacifism',\n    'pacifist',\n    'pacify',\n    'padded',\n    'padding',\n    'paddle',\n    'paddling',\n    'padlock',\n    'pagan',\n    'pager',\n    'paging',\n    'pajamas',\n    'palace',\n    'palatable',\n    'palm',\n    'palpable',\n    'palpitate',\n    'paltry',\n    'pampered',\n    'pamperer',\n    'pampers',\n    'pamphlet',\n    'panama',\n    'pancake',\n    'pancreas',\n    'panda',\n    'pandemic',\n    'pang',\n    'panhandle',\n    'panic',\n    'panning',\n    'panorama',\n    'panoramic',\n    'panther',\n    'pantomime',\n    'pantry',\n    'pants',\n    'pantyhose',\n    'paparazzi',\n    'papaya',\n    'paper',\n    'paprika',\n    'papyrus',\n    'parabola',\n    'parachute',\n    'parade',\n    'paradox',\n    'paragraph',\n    'parakeet',\n    'paralegal',\n    'paralyses',\n    'paralysis',\n    'paralyze',\n    'paramedic',\n    'parameter',\n    'paramount',\n    'parasail',\n    'parasite',\n    'parasitic',\n    'parcel',\n    'parched',\n    'parchment',\n    'pardon',\n    'parish',\n    'parka',\n    'parking',\n    'parkway',\n    'parlor',\n    'parmesan',\n    'parole',\n    'parrot',\n    'parsley',\n    'parsnip',\n    'partake',\n    'parted',\n    'parting',\n    'partition',\n    'partly',\n    'partner',\n    'partridge',\n    'party',\n    'passable',\n    'passably',\n    'passage',\n    'passcode',\n    'passenger',\n    'passerby',\n    'passing',\n    'passion',\n    'passive',\n    'passivism',\n    'passover',\n    'passport',\n    'password',\n    'pasta',\n    'pasted',\n    'pastel',\n    'pastime',\n    'pastor',\n    'pastrami',\n    'pasture',\n    'pasty',\n    'patchwork',\n    'patchy',\n    'paternal',\n    'paternity',\n    'path',\n    'patience',\n    'patient',\n    'patio',\n    'patriarch',\n    'patriot',\n    'patrol',\n    'patronage',\n    'patronize',\n    'pauper',\n    'pavement',\n    'paver',\n    'pavestone',\n    'pavilion',\n    'paving',\n    'pawing',\n    'payable',\n    'payback',\n    'paycheck',\n    'payday',\n    'payee',\n    'payer',\n    'paying',\n    'payment',\n    'payphone',\n    'payroll',\n    'pebble',\n    'pebbly',\n    'pecan',\n    'pectin',\n    'peculiar',\n    'peddling',\n    'pediatric',\n    'pedicure',\n    'pedigree',\n    'pedometer',\n    'pegboard',\n    'pelican',\n    'pellet',\n    'pelt',\n    'pelvis',\n    'penalize',\n    'penalty',\n    'pencil',\n    'pendant',\n    'pending',\n    'penholder',\n    'penknife',\n    'pennant',\n    'penniless',\n    'penny',\n    'penpal',\n    'pension',\n    'pentagon',\n    'pentagram',\n    'pep',\n    'perceive',\n    'percent',\n    'perch',\n    'percolate',\n    'perennial',\n    'perfected',\n    'perfectly',\n    'perfume',\n    'periscope',\n    'perish',\n    'perjurer',\n    'perjury',\n    'perkiness',\n    'perky',\n    'perm',\n    'peroxide',\n    'perpetual',\n    'perplexed',\n    'persecute',\n    'persevere',\n    'persuaded',\n    'persuader',\n    'pesky',\n    'peso',\n    'pessimism',\n    'pessimist',\n    'pester',\n    'pesticide',\n    'petal',\n    'petite',\n    'petition',\n    'petri',\n    'petroleum',\n    'petted',\n    'petticoat',\n    'pettiness',\n    'petty',\n    'petunia',\n    'phantom',\n    'phobia',\n    'phoenix',\n    'phonebook',\n    'phoney',\n    'phonics',\n    'phoniness',\n    'phony',\n    'phosphate',\n    'photo',\n    'phrase',\n    'phrasing',\n    'placard',\n    'placate',\n    'placidly',\n    'plank',\n    'planner',\n    'plant',\n    'plasma',\n    'plaster',\n    'plastic',\n    'plated',\n    'platform',\n    'plating',\n    'platinum',\n    'platonic',\n    'platter',\n    'platypus',\n    'plausible',\n    'plausibly',\n    'playable',\n    'playback',\n    'player',\n    'playful',\n    'playgroup',\n    'playhouse',\n    'playing',\n    'playlist',\n    'playmaker',\n    'playmate',\n    'playoff',\n    'playpen',\n    'playroom',\n    'playset',\n    'plaything',\n    'playtime',\n    'plaza',\n    'pleading',\n    'pleat',\n    'pledge',\n    'plentiful',\n    'plenty',\n    'plethora',\n    'plexiglas',\n    'pliable',\n    'plod',\n    'plop',\n    'plot',\n    'plow',\n    'ploy',\n    'pluck',\n    'plug',\n    'plunder',\n    'plunging',\n    'plural',\n    'plus',\n    'plutonium',\n    'plywood',\n    'poach',\n    'pod',\n    'poem',\n    'poet',\n    'pogo',\n    'pointed',\n    'pointer',\n    'pointing',\n    'pointless',\n    'pointy',\n    'poise',\n    'poison',\n    'poker',\n    'poking',\n    'polar',\n    'police',\n    'policy',\n    'polio',\n    'polish',\n    'politely',\n    'polka',\n    'polo',\n    'polyester',\n    'polygon',\n    'polygraph',\n    'polymer',\n    'poncho',\n    'pond',\n    'pony',\n    'popcorn',\n    'pope',\n    'poplar',\n    'popper',\n    'poppy',\n    'popsicle',\n    'populace',\n    'popular',\n    'populate',\n    'porcupine',\n    'pork',\n    'porous',\n    'porridge',\n    'portable',\n    'portal',\n    'portfolio',\n    'porthole',\n    'portion',\n    'portly',\n    'portside',\n    'poser',\n    'posh',\n    'posing',\n    'possible',\n    'possibly',\n    'possum',\n    'postage',\n    'postal',\n    'postbox',\n    'postcard',\n    'posted',\n    'poster',\n    'posting',\n    'postnasal',\n    'posture',\n    'postwar',\n    'pouch',\n    'pounce',\n    'pouncing',\n    'pound',\n    'pouring',\n    'pout',\n    'powdered',\n    'powdering',\n    'powdery',\n    'power',\n    'powwow',\n    'pox',\n    'praising',\n    'prance',\n    'prancing',\n    'pranker',\n    'prankish',\n    'prankster',\n    'prayer',\n    'praying',\n    'preacher',\n    'preaching',\n    'preachy',\n    'preamble',\n    'precinct',\n    'precise',\n    'precision',\n    'precook',\n    'precut',\n    'predator',\n    'predefine',\n    'predict',\n    'preface',\n    'prefix',\n    'preflight',\n    'preformed',\n    'pregame',\n    'pregnancy',\n    'pregnant',\n    'preheated',\n    'prelaunch',\n    'prelaw',\n    'prelude',\n    'premiere',\n    'premises',\n    'premium',\n    'prenatal',\n    'preoccupy',\n    'preorder',\n    'prepaid',\n    'prepay',\n    'preplan',\n    'preppy',\n    'preschool',\n    'prescribe',\n    'preseason',\n    'preset',\n    'preshow',\n    'president',\n    'presoak',\n    'press',\n    'presume',\n    'presuming',\n    'preteen',\n    'pretended',\n    'pretender',\n    'pretense',\n    'pretext',\n    'pretty',\n    'pretzel',\n    'prevail',\n    'prevalent',\n    'prevent',\n    'preview',\n    'previous',\n    'prewar',\n    'prewashed',\n    'prideful',\n    'pried',\n    'primal',\n    'primarily',\n    'primary',\n    'primate',\n    'primer',\n    'primp',\n    'princess',\n    'print',\n    'prior',\n    'prism',\n    'prison',\n    'prissy',\n    'pristine',\n    'privacy',\n    'private',\n    'privatize',\n    'prize',\n    'proactive',\n    'probable',\n    'probably',\n    'probation',\n    'probe',\n    'probing',\n    'probiotic',\n    'problem',\n    'procedure',\n    'process',\n    'proclaim',\n    'procreate',\n    'procurer',\n    'prodigal',\n    'prodigy',\n    'produce',\n    'product',\n    'profane',\n    'profanity',\n    'professed',\n    'professor',\n    'profile',\n    'profound',\n    'profusely',\n    'progeny',\n    'prognosis',\n    'program',\n    'progress',\n    'projector',\n    'prologue',\n    'prolonged',\n    'promenade',\n    'prominent',\n    'promoter',\n    'promotion',\n    'prompter',\n    'promptly',\n    'prone',\n    'prong',\n    'pronounce',\n    'pronto',\n    'proofing',\n    'proofread',\n    'proofs',\n    'propeller',\n    'properly',\n    'property',\n    'proponent',\n    'proposal',\n    'propose',\n    'props',\n    'prorate',\n    'protector',\n    'protegee',\n    'proton',\n    'prototype',\n    'protozoan',\n    'protract',\n    'protrude',\n    'proud',\n    'provable',\n    'proved',\n    'proven',\n    'provided',\n    'provider',\n    'providing',\n    'province',\n    'proving',\n    'provoke',\n    'provoking',\n    'provolone',\n    'prowess',\n    'prowler',\n    'prowling',\n    'proximity',\n    'proxy',\n    'prozac',\n    'prude',\n    'prudishly',\n    'prune',\n    'pruning',\n    'pry',\n    'psychic',\n    'public',\n    'publisher',\n    'pucker',\n    'pueblo',\n    'pug',\n    'pull',\n    'pulmonary',\n    'pulp',\n    'pulsate',\n    'pulse',\n    'pulverize',\n    'puma',\n    'pumice',\n    'pummel',\n    'punch',\n    'punctual',\n    'punctuate',\n    'punctured',\n    'pungent',\n    'punisher',\n    'punk',\n    'pupil',\n    'puppet',\n    'puppy',\n    'purchase',\n    'pureblood',\n    'purebred',\n    'purely',\n    'pureness',\n    'purgatory',\n    'purge',\n    'purging',\n    'purifier',\n    'purify',\n    'purist',\n    'puritan',\n    'purity',\n    'purple',\n    'purplish',\n    'purposely',\n    'purr',\n    'purse',\n    'pursuable',\n    'pursuant',\n    'pursuit',\n    'purveyor',\n    'pushcart',\n    'pushchair',\n    'pusher',\n    'pushiness',\n    'pushing',\n    'pushover',\n    'pushpin',\n    'pushup',\n    'pushy',\n    'putdown',\n    'putt',\n    'puzzle',\n    'puzzling',\n    'pyramid',\n    'pyromania',\n    'python',\n    'quack',\n    'quadrant',\n    'quail',\n    'quaintly',\n    'quake',\n    'quaking',\n    'qualified',\n    'qualifier',\n    'qualify',\n    'quality',\n    'qualm',\n    'quantum',\n    'quarrel',\n    'quarry',\n    'quartered',\n    'quarterly',\n    'quarters',\n    'quartet',\n    'quench',\n    'query',\n    'quicken',\n    'quickly',\n    'quickness',\n    'quicksand',\n    'quickstep',\n    'quiet',\n    'quill',\n    'quilt',\n    'quintet',\n    'quintuple',\n    'quirk',\n    'quit',\n    'quiver',\n    'quizzical',\n    'quotable',\n    'quotation',\n    'quote',\n    'rabid',\n    'race',\n    'racing',\n    'racism',\n    'rack',\n    'racoon',\n    'radar',\n    'radial',\n    'radiance',\n    'radiantly',\n    'radiated',\n    'radiation',\n    'radiator',\n    'radio',\n    'radish',\n    'raffle',\n    'raft',\n    'rage',\n    'ragged',\n    'raging',\n    'ragweed',\n    'raider',\n    'railcar',\n    'railing',\n    'railroad',\n    'railway',\n    'raisin',\n    'rake',\n    'raking',\n    'rally',\n    'ramble',\n    'rambling',\n    'ramp',\n    'ramrod',\n    'ranch',\n    'rancidity',\n    'random',\n    'ranged',\n    'ranger',\n    'ranging',\n    'ranked',\n    'ranking',\n    'ransack',\n    'ranting',\n    'rants',\n    'rare',\n    'rarity',\n    'rascal',\n    'rash',\n    'rasping',\n    'ravage',\n    'raven',\n    'ravine',\n    'raving',\n    'ravioli',\n    'ravishing',\n    'reabsorb',\n    'reach',\n    'reacquire',\n    'reaction',\n    'reactive',\n    'reactor',\n    'reaffirm',\n    'ream',\n    'reanalyze',\n    'reappear',\n    'reapply',\n    'reappoint',\n    'reapprove',\n    'rearrange',\n    'rearview',\n    'reason',\n    'reassign',\n    'reassure',\n    'reattach',\n    'reawake',\n    'rebalance',\n    'rebate',\n    'rebel',\n    'rebirth',\n    'reboot',\n    'reborn',\n    'rebound',\n    'rebuff',\n    'rebuild',\n    'rebuilt',\n    'reburial',\n    'rebuttal',\n    'recall',\n    'recant',\n    'recapture',\n    'recast',\n    'recede',\n    'recent',\n    'recess',\n    'recharger',\n    'recipient',\n    'recital',\n    'recite',\n    'reckless',\n    'reclaim',\n    'recliner',\n    'reclining',\n    'recluse',\n    'reclusive',\n    'recognize',\n    'recoil',\n    'recollect',\n    'recolor',\n    'reconcile',\n    'reconfirm',\n    'reconvene',\n    'recopy',\n    'record',\n    'recount',\n    'recoup',\n    'recovery',\n    'recreate',\n    'rectal',\n    'rectangle',\n    'rectified',\n    'rectify',\n    'recycled',\n    'recycler',\n    'recycling',\n    'reemerge',\n    'reenact',\n    'reenter',\n    'reentry',\n    'reexamine',\n    'referable',\n    'referee',\n    'reference',\n    'refill',\n    'refinance',\n    'refined',\n    'refinery',\n    'refining',\n    'refinish',\n    'reflected',\n    'reflector',\n    'reflex',\n    'reflux',\n    'refocus',\n    'refold',\n    'reforest',\n    'reformat',\n    'reformed',\n    'reformer',\n    'reformist',\n    'refract',\n    'refrain',\n    'refreeze',\n    'refresh',\n    'refried',\n    'refueling',\n    'refund',\n    'refurbish',\n    'refurnish',\n    'refusal',\n    'refuse',\n    'refusing',\n    'refutable',\n    'refute',\n    'regain',\n    'regalia',\n    'regally',\n    'reggae',\n    'regime',\n    'region',\n    'register',\n    'registrar',\n    'registry',\n    'regress',\n    'regretful',\n    'regroup',\n    'regular',\n    'regulate',\n    'regulator',\n    'rehab',\n    'reheat',\n    'rehire',\n    'rehydrate',\n    'reimburse',\n    'reissue',\n    'reiterate',\n    'rejoice',\n    'rejoicing',\n    'rejoin',\n    'rekindle',\n    'relapse',\n    'relapsing',\n    'relatable',\n    'related',\n    'relation',\n    'relative',\n    'relax',\n    'relay',\n    'relearn',\n    'release',\n    'relenting',\n    'reliable',\n    'reliably',\n    'reliance',\n    'reliant',\n    'relic',\n    'relieve',\n    'relieving',\n    'relight',\n    'relish',\n    'relive',\n    'reload',\n    'relocate',\n    'relock',\n    'reluctant',\n    'rely',\n    'remake',\n    'remark',\n    'remarry',\n    'rematch',\n    'remedial',\n    'remedy',\n    'remember',\n    'reminder',\n    'remindful',\n    'remission',\n    'remix',\n    'remnant',\n    'remodeler',\n    'remold',\n    'remorse',\n    'remote',\n    'removable',\n    'removal',\n    'removed',\n    'remover',\n    'removing',\n    'rename',\n    'renderer',\n    'rendering',\n    'rendition',\n    'renegade',\n    'renewable',\n    'renewably',\n    'renewal',\n    'renewed',\n    'renounce',\n    'renovate',\n    'renovator',\n    'rentable',\n    'rental',\n    'rented',\n    'renter',\n    'reoccupy',\n    'reoccur',\n    'reopen',\n    'reorder',\n    'repackage',\n    'repacking',\n    'repaint',\n    'repair',\n    'repave',\n    'repaying',\n    'repayment',\n    'repeal',\n    'repeated',\n    'repeater',\n    'repent',\n    'rephrase',\n    'replace',\n    'replay',\n    'replica',\n    'reply',\n    'reporter',\n    'repose',\n    'repossess',\n    'repost',\n    'repressed',\n    'reprimand',\n    'reprint',\n    'reprise',\n    'reproach',\n    'reprocess',\n    'reproduce',\n    'reprogram',\n    'reps',\n    'reptile',\n    'reptilian',\n    'repugnant',\n    'repulsion',\n    'repulsive',\n    'repurpose',\n    'reputable',\n    'reputably',\n    'request',\n    'require',\n    'requisite',\n    'reroute',\n    'rerun',\n    'resale',\n    'resample',\n    'rescuer',\n    'reseal',\n    'research',\n    'reselect',\n    'reseller',\n    'resemble',\n    'resend',\n    'resent',\n    'reset',\n    'reshape',\n    'reshoot',\n    'reshuffle',\n    'residence',\n    'residency',\n    'resident',\n    'residual',\n    'residue',\n    'resigned',\n    'resilient',\n    'resistant',\n    'resisting',\n    'resize',\n    'resolute',\n    'resolved',\n    'resonant',\n    'resonate',\n    'resort',\n    'resource',\n    'respect',\n    'resubmit',\n    'result',\n    'resume',\n    'resupply',\n    'resurface',\n    'resurrect',\n    'retail',\n    'retainer',\n    'retaining',\n    'retake',\n    'retaliate',\n    'retention',\n    'rethink',\n    'retinal',\n    'retired',\n    'retiree',\n    'retiring',\n    'retold',\n    'retool',\n    'retorted',\n    'retouch',\n    'retrace',\n    'retract',\n    'retrain',\n    'retread',\n    'retreat',\n    'retrial',\n    'retrieval',\n    'retriever',\n    'retry',\n    'return',\n    'retying',\n    'retype',\n    'reunion',\n    'reunite',\n    'reusable',\n    'reuse',\n    'reveal',\n    'reveler',\n    'revenge',\n    'revenue',\n    'reverb',\n    'revered',\n    'reverence',\n    'reverend',\n    'reversal',\n    'reverse',\n    'reversing',\n    'reversion',\n    'revert',\n    'revisable',\n    'revise',\n    'revision',\n    'revisit',\n    'revivable',\n    'revival',\n    'reviver',\n    'reviving',\n    'revocable',\n    'revoke',\n    'revolt',\n    'revolver',\n    'revolving',\n    'reward',\n    'rewash',\n    'rewind',\n    'rewire',\n    'reword',\n    'rework',\n    'rewrap',\n    'rewrite',\n    'rhyme',\n    'ribbon',\n    'ribcage',\n    'rice',\n    'riches',\n    'richly',\n    'richness',\n    'rickety',\n    'ricotta',\n    'riddance',\n    'ridden',\n    'ride',\n    'riding',\n    'rifling',\n    'rift',\n    'rigging',\n    'rigid',\n    'rigor',\n    'rimless',\n    'rimmed',\n    'rind',\n    'rink',\n    'rinse',\n    'rinsing',\n    'riot',\n    'ripcord',\n    'ripeness',\n    'ripening',\n    'ripping',\n    'ripple',\n    'rippling',\n    'riptide',\n    'rise',\n    'rising',\n    'risk',\n    'risotto',\n    'ritalin',\n    'ritzy',\n    'rival',\n    'riverbank',\n    'riverbed',\n    'riverboat',\n    'riverside',\n    'riveter',\n    'riveting',\n    'roamer',\n    'roaming',\n    'roast',\n    'robbing',\n    'robe',\n    'robin',\n    'robotics',\n    'robust',\n    'rockband',\n    'rocker',\n    'rocket',\n    'rockfish',\n    'rockiness',\n    'rocking',\n    'rocklike',\n    'rockslide',\n    'rockstar',\n    'rocky',\n    'rogue',\n    'roman',\n    'romp',\n    'rope',\n    'roping',\n    'roster',\n    'rosy',\n    'rotten',\n    'rotting',\n    'rotunda',\n    'roulette',\n    'rounding',\n    'roundish',\n    'roundness',\n    'roundup',\n    'roundworm',\n    'routine',\n    'routing',\n    'rover',\n    'roving',\n    'royal',\n    'rubbed',\n    'rubber',\n    'rubbing',\n    'rubble',\n    'rubdown',\n    'ruby',\n    'ruckus',\n    'rudder',\n    'rug',\n    'ruined',\n    'rule',\n    'rumble',\n    'rumbling',\n    'rummage',\n    'rumor',\n    'runaround',\n    'rundown',\n    'runner',\n    'running',\n    'runny',\n    'runt',\n    'runway',\n    'rupture',\n    'rural',\n    'ruse',\n    'rush',\n    'rust',\n    'rut',\n    'sabbath',\n    'sabotage',\n    'sacrament',\n    'sacred',\n    'sacrifice',\n    'sadden',\n    'saddlebag',\n    'saddled',\n    'saddling',\n    'sadly',\n    'sadness',\n    'safari',\n    'safeguard',\n    'safehouse',\n    'safely',\n    'safeness',\n    'saffron',\n    'saga',\n    'sage',\n    'sagging',\n    'saggy',\n    'said',\n    'saint',\n    'sake',\n    'salad',\n    'salami',\n    'salaried',\n    'salary',\n    'saline',\n    'salon',\n    'saloon',\n    'salsa',\n    'salt',\n    'salutary',\n    'salute',\n    'salvage',\n    'salvaging',\n    'salvation',\n    'same',\n    'sample',\n    'sampling',\n    'sanction',\n    'sanctity',\n    'sanctuary',\n    'sandal',\n    'sandbag',\n    'sandbank',\n    'sandbar',\n    'sandblast',\n    'sandbox',\n    'sanded',\n    'sandfish',\n    'sanding',\n    'sandlot',\n    'sandpaper',\n    'sandpit',\n    'sandstone',\n    'sandstorm',\n    'sandworm',\n    'sandy',\n    'sanitary',\n    'sanitizer',\n    'sank',\n    'santa',\n    'sapling',\n    'sappiness',\n    'sappy',\n    'sarcasm',\n    'sarcastic',\n    'sardine',\n    'sash',\n    'sasquatch',\n    'sassy',\n    'satchel',\n    'satiable',\n    'satin',\n    'satirical',\n    'satisfied',\n    'satisfy',\n    'saturate',\n    'saturday',\n    'sauciness',\n    'saucy',\n    'sauna',\n    'savage',\n    'savanna',\n    'saved',\n    'savings',\n    'savior',\n    'savor',\n    'saxophone',\n    'say',\n    'scabbed',\n    'scabby',\n    'scalded',\n    'scalding',\n    'scale',\n    'scaling',\n    'scallion',\n    'scallop',\n    'scalping',\n    'scam',\n    'scandal',\n    'scanner',\n    'scanning',\n    'scant',\n    'scapegoat',\n    'scarce',\n    'scarcity',\n    'scarecrow',\n    'scared',\n    'scarf',\n    'scarily',\n    'scariness',\n    'scarring',\n    'scary',\n    'scavenger',\n    'scenic',\n    'schedule',\n    'schematic',\n    'scheme',\n    'scheming',\n    'schilling',\n    'schnapps',\n    'scholar',\n    'science',\n    'scientist',\n    'scion',\n    'scoff',\n    'scolding',\n    'scone',\n    'scoop',\n    'scooter',\n    'scope',\n    'scorch',\n    'scorebook',\n    'scorecard',\n    'scored',\n    'scoreless',\n    'scorer',\n    'scoring',\n    'scorn',\n    'scorpion',\n    'scotch',\n    'scoundrel',\n    'scoured',\n    'scouring',\n    'scouting',\n    'scouts',\n    'scowling',\n    'scrabble',\n    'scraggly',\n    'scrambled',\n    'scrambler',\n    'scrap',\n    'scratch',\n    'scrawny',\n    'screen',\n    'scribble',\n    'scribe',\n    'scribing',\n    'scrimmage',\n    'script',\n    'scroll',\n    'scrooge',\n    'scrounger',\n    'scrubbed',\n    'scrubber',\n    'scruffy',\n    'scrunch',\n    'scrutiny',\n    'scuba',\n    'scuff',\n    'sculptor',\n    'sculpture',\n    'scurvy',\n    'scuttle',\n    'secluded',\n    'secluding',\n    'seclusion',\n    'second',\n    'secrecy',\n    'secret',\n    'sectional',\n    'sector',\n    'secular',\n    'securely',\n    'security',\n    'sedan',\n    'sedate',\n    'sedation',\n    'sedative',\n    'sediment',\n    'seduce',\n    'seducing',\n    'segment',\n    'seismic',\n    'seizing',\n    'seldom',\n    'selected',\n    'selection',\n    'selective',\n    'selector',\n    'self',\n    'seltzer',\n    'semantic',\n    'semester',\n    'semicolon',\n    'semifinal',\n    'seminar',\n    'semisoft',\n    'semisweet',\n    'senate',\n    'senator',\n    'send',\n    'senior',\n    'senorita',\n    'sensation',\n    'sensitive',\n    'sensitize',\n    'sensually',\n    'sensuous',\n    'sepia',\n    'september',\n    'septic',\n    'septum',\n    'sequel',\n    'sequence',\n    'sequester',\n    'series',\n    'sermon',\n    'serotonin',\n    'serpent',\n    'serrated',\n    'serve',\n    'service',\n    'serving',\n    'sesame',\n    'sessions',\n    'setback',\n    'setting',\n    'settle',\n    'settling',\n    'setup',\n    'sevenfold',\n    'seventeen',\n    'seventh',\n    'seventy',\n    'severity',\n    'shabby',\n    'shack',\n    'shaded',\n    'shadily',\n    'shadiness',\n    'shading',\n    'shadow',\n    'shady',\n    'shaft',\n    'shakable',\n    'shakily',\n    'shakiness',\n    'shaking',\n    'shaky',\n    'shale',\n    'shallot',\n    'shallow',\n    'shame',\n    'shampoo',\n    'shamrock',\n    'shank',\n    'shanty',\n    'shape',\n    'shaping',\n    'share',\n    'sharpener',\n    'sharper',\n    'sharpie',\n    'sharply',\n    'sharpness',\n    'shawl',\n    'sheath',\n    'shed',\n    'sheep',\n    'sheet',\n    'shelf',\n    'shell',\n    'shelter',\n    'shelve',\n    'shelving',\n    'sherry',\n    'shield',\n    'shifter',\n    'shifting',\n    'shiftless',\n    'shifty',\n    'shimmer',\n    'shimmy',\n    'shindig',\n    'shine',\n    'shingle',\n    'shininess',\n    'shining',\n    'shiny',\n    'ship',\n    'shirt',\n    'shivering',\n    'shock',\n    'shone',\n    'shoplift',\n    'shopper',\n    'shopping',\n    'shoptalk',\n    'shore',\n    'shortage',\n    'shortcake',\n    'shortcut',\n    'shorten',\n    'shorter',\n    'shorthand',\n    'shortlist',\n    'shortly',\n    'shortness',\n    'shorts',\n    'shortwave',\n    'shorty',\n    'shout',\n    'shove',\n    'showbiz',\n    'showcase',\n    'showdown',\n    'shower',\n    'showgirl',\n    'showing',\n    'showman',\n    'shown',\n    'showoff',\n    'showpiece',\n    'showplace',\n    'showroom',\n    'showy',\n    'shrank',\n    'shrapnel',\n    'shredder',\n    'shredding',\n    'shrewdly',\n    'shriek',\n    'shrill',\n    'shrimp',\n    'shrine',\n    'shrink',\n    'shrivel',\n    'shrouded',\n    'shrubbery',\n    'shrubs',\n    'shrug',\n    'shrunk',\n    'shucking',\n    'shudder',\n    'shuffle',\n    'shuffling',\n    'shun',\n    'shush',\n    'shut',\n    'shy',\n    'siamese',\n    'siberian',\n    'sibling',\n    'siding',\n    'sierra',\n    'siesta',\n    'sift',\n    'sighing',\n    'silenced',\n    'silencer',\n    'silent',\n    'silica',\n    'silicon',\n    'silk',\n    'silliness',\n    'silly',\n    'silo',\n    'silt',\n    'silver',\n    'similarly',\n    'simile',\n    'simmering',\n    'simple',\n    'simplify',\n    'simply',\n    'sincere',\n    'sincerity',\n    'singer',\n    'singing',\n    'single',\n    'singular',\n    'sinister',\n    'sinless',\n    'sinner',\n    'sinuous',\n    'sip',\n    'siren',\n    'sister',\n    'sitcom',\n    'sitter',\n    'sitting',\n    'situated',\n    'situation',\n    'sixfold',\n    'sixteen',\n    'sixth',\n    'sixties',\n    'sixtieth',\n    'sixtyfold',\n    'sizable',\n    'sizably',\n    'size',\n    'sizing',\n    'sizzle',\n    'sizzling',\n    'skater',\n    'skating',\n    'skedaddle',\n    'skeletal',\n    'skeleton',\n    'skeptic',\n    'sketch',\n    'skewed',\n    'skewer',\n    'skid',\n    'skied',\n    'skier',\n    'skies',\n    'skiing',\n    'skilled',\n    'skillet',\n    'skillful',\n    'skimmed',\n    'skimmer',\n    'skimming',\n    'skimpily',\n    'skincare',\n    'skinhead',\n    'skinless',\n    'skinning',\n    'skinny',\n    'skintight',\n    'skipper',\n    'skipping',\n    'skirmish',\n    'skirt',\n    'skittle',\n    'skydiver',\n    'skylight',\n    'skyline',\n    'skype',\n    'skyrocket',\n    'skyward',\n    'slab',\n    'slacked',\n    'slacker',\n    'slacking',\n    'slackness',\n    'slacks',\n    'slain',\n    'slam',\n    'slander',\n    'slang',\n    'slapping',\n    'slapstick',\n    'slashed',\n    'slashing',\n    'slate',\n    'slather',\n    'slaw',\n    'sled',\n    'sleek',\n    'sleep',\n    'sleet',\n    'sleeve',\n    'slept',\n    'sliceable',\n    'sliced',\n    'slicer',\n    'slicing',\n    'slick',\n    'slider',\n    'slideshow',\n    'sliding',\n    'slighted',\n    'slighting',\n    'slightly',\n    'slimness',\n    'slimy',\n    'slinging',\n    'slingshot',\n    'slinky',\n    'slip',\n    'slit',\n    'sliver',\n    'slobbery',\n    'slogan',\n    'sloped',\n    'sloping',\n    'sloppily',\n    'sloppy',\n    'slot',\n    'slouching',\n    'slouchy',\n    'sludge',\n    'slug',\n    'slum',\n    'slurp',\n    'slush',\n    'sly',\n    'small',\n    'smartly',\n    'smartness',\n    'smasher',\n    'smashing',\n    'smashup',\n    'smell',\n    'smelting',\n    'smile',\n    'smilingly',\n    'smirk',\n    'smite',\n    'smith',\n    'smitten',\n    'smock',\n    'smog',\n    'smoked',\n    'smokeless',\n    'smokiness',\n    'smoking',\n    'smoky',\n    'smolder',\n    'smooth',\n    'smother',\n    'smudge',\n    'smudgy',\n    'smuggler',\n    'smuggling',\n    'smugly',\n    'smugness',\n    'snack',\n    'snagged',\n    'snaking',\n    'snap',\n    'snare',\n    'snarl',\n    'snazzy',\n    'sneak',\n    'sneer',\n    'sneeze',\n    'sneezing',\n    'snide',\n    'sniff',\n    'snippet',\n    'snipping',\n    'snitch',\n    'snooper',\n    'snooze',\n    'snore',\n    'snoring',\n    'snorkel',\n    'snort',\n    'snout',\n    'snowbird',\n    'snowboard',\n    'snowbound',\n    'snowcap',\n    'snowdrift',\n    'snowdrop',\n    'snowfall',\n    'snowfield',\n    'snowflake',\n    'snowiness',\n    'snowless',\n    'snowman',\n    'snowplow',\n    'snowshoe',\n    'snowstorm',\n    'snowsuit',\n    'snowy',\n    'snub',\n    'snuff',\n    'snuggle',\n    'snugly',\n    'snugness',\n    'speak',\n    'spearfish',\n    'spearhead',\n    'spearman',\n    'spearmint',\n    'species',\n    'specimen',\n    'specked',\n    'speckled',\n    'specks',\n    'spectacle',\n    'spectator',\n    'spectrum',\n    'speculate',\n    'speech',\n    'speed',\n    'spellbind',\n    'speller',\n    'spelling',\n    'spendable',\n    'spender',\n    'spending',\n    'spent',\n    'spew',\n    'sphere',\n    'spherical',\n    'sphinx',\n    'spider',\n    'spied',\n    'spiffy',\n    'spill',\n    'spilt',\n    'spinach',\n    'spinal',\n    'spindle',\n    'spinner',\n    'spinning',\n    'spinout',\n    'spinster',\n    'spiny',\n    'spiral',\n    'spirited',\n    'spiritism',\n    'spirits',\n    'spiritual',\n    'splashed',\n    'splashing',\n    'splashy',\n    'splatter',\n    'spleen',\n    'splendid',\n    'splendor',\n    'splice',\n    'splicing',\n    'splinter',\n    'splotchy',\n    'splurge',\n    'spoilage',\n    'spoiled',\n    'spoiler',\n    'spoiling',\n    'spoils',\n    'spoken',\n    'spokesman',\n    'sponge',\n    'spongy',\n    'sponsor',\n    'spoof',\n    'spookily',\n    'spooky',\n    'spool',\n    'spoon',\n    'spore',\n    'sporting',\n    'sports',\n    'sporty',\n    'spotless',\n    'spotlight',\n    'spotted',\n    'spotter',\n    'spotting',\n    'spotty',\n    'spousal',\n    'spouse',\n    'spout',\n    'sprain',\n    'sprang',\n    'sprawl',\n    'spray',\n    'spree',\n    'sprig',\n    'spring',\n    'sprinkled',\n    'sprinkler',\n    'sprint',\n    'sprite',\n    'sprout',\n    'spruce',\n    'sprung',\n    'spry',\n    'spud',\n    'spur',\n    'sputter',\n    'spyglass',\n    'squabble',\n    'squad',\n    'squall',\n    'squander',\n    'squash',\n    'squatted',\n    'squatter',\n    'squatting',\n    'squeak',\n    'squealer',\n    'squealing',\n    'squeamish',\n    'squeegee',\n    'squeeze',\n    'squeezing',\n    'squid',\n    'squiggle',\n    'squiggly',\n    'squint',\n    'squire',\n    'squirt',\n    'squishier',\n    'squishy',\n    'stability',\n    'stabilize',\n    'stable',\n    'stack',\n    'stadium',\n    'staff',\n    'stage',\n    'staging',\n    'stagnant',\n    'stagnate',\n    'stainable',\n    'stained',\n    'staining',\n    'stainless',\n    'stalemate',\n    'staleness',\n    'stalling',\n    'stallion',\n    'stamina',\n    'stammer',\n    'stamp',\n    'stand',\n    'stank',\n    'staple',\n    'stapling',\n    'starboard',\n    'starch',\n    'stardom',\n    'stardust',\n    'starfish',\n    'stargazer',\n    'staring',\n    'stark',\n    'starless',\n    'starlet',\n    'starlight',\n    'starlit',\n    'starring',\n    'starry',\n    'starship',\n    'starter',\n    'starting',\n    'startle',\n    'startling',\n    'startup',\n    'starved',\n    'starving',\n    'stash',\n    'state',\n    'static',\n    'statistic',\n    'statue',\n    'stature',\n    'status',\n    'statute',\n    'statutory',\n    'staunch',\n    'stays',\n    'steadfast',\n    'steadier',\n    'steadily',\n    'steadying',\n    'steam',\n    'steed',\n    'steep',\n    'steerable',\n    'steering',\n    'steersman',\n    'stegosaur',\n    'stellar',\n    'stem',\n    'stench',\n    'stencil',\n    'step',\n    'stereo',\n    'sterile',\n    'sterility',\n    'sterilize',\n    'sterling',\n    'sternness',\n    'sternum',\n    'stew',\n    'stick',\n    'stiffen',\n    'stiffly',\n    'stiffness',\n    'stifle',\n    'stifling',\n    'stillness',\n    'stilt',\n    'stimulant',\n    'stimulate',\n    'stimuli',\n    'stimulus',\n    'stinger',\n    'stingily',\n    'stinging',\n    'stingray',\n    'stingy',\n    'stinking',\n    'stinky',\n    'stipend',\n    'stipulate',\n    'stir',\n    'stitch',\n    'stock',\n    'stoic',\n    'stoke',\n    'stole',\n    'stomp',\n    'stonewall',\n    'stoneware',\n    'stonework',\n    'stoning',\n    'stony',\n    'stood',\n    'stooge',\n    'stool',\n    'stoop',\n    'stoplight',\n    'stoppable',\n    'stoppage',\n    'stopped',\n    'stopper',\n    'stopping',\n    'stopwatch',\n    'storable',\n    'storage',\n    'storeroom',\n    'storewide',\n    'storm',\n    'stout',\n    'stove',\n    'stowaway',\n    'stowing',\n    'straddle',\n    'straggler',\n    'strained',\n    'strainer',\n    'straining',\n    'strangely',\n    'stranger',\n    'strangle',\n    'strategic',\n    'strategy',\n    'stratus',\n    'straw',\n    'stray',\n    'streak',\n    'stream',\n    'street',\n    'strength',\n    'strenuous',\n    'strep',\n    'stress',\n    'stretch',\n    'strewn',\n    'stricken',\n    'strict',\n    'stride',\n    'strife',\n    'strike',\n    'striking',\n    'strive',\n    'striving',\n    'strobe',\n    'strode',\n    'stroller',\n    'strongbox',\n    'strongly',\n    'strongman',\n    'struck',\n    'structure',\n    'strudel',\n    'struggle',\n    'strum',\n    'strung',\n    'strut',\n    'stubbed',\n    'stubble',\n    'stubbly',\n    'stubborn',\n    'stucco',\n    'stuck',\n    'student',\n    'studied',\n    'studio',\n    'study',\n    'stuffed',\n    'stuffing',\n    'stuffy',\n    'stumble',\n    'stumbling',\n    'stump',\n    'stung',\n    'stunned',\n    'stunner',\n    'stunning',\n    'stunt',\n    'stupor',\n    'sturdily',\n    'sturdy',\n    'styling',\n    'stylishly',\n    'stylist',\n    'stylized',\n    'stylus',\n    'suave',\n    'subarctic',\n    'subatomic',\n    'subdivide',\n    'subdued',\n    'subduing',\n    'subfloor',\n    'subgroup',\n    'subheader',\n    'subject',\n    'sublease',\n    'sublet',\n    'sublevel',\n    'sublime',\n    'submarine',\n    'submerge',\n    'submersed',\n    'submitter',\n    'subpanel',\n    'subpar',\n    'subplot',\n    'subprime',\n    'subscribe',\n    'subscript',\n    'subsector',\n    'subside',\n    'subsiding',\n    'subsidize',\n    'subsidy',\n    'subsoil',\n    'subsonic',\n    'substance',\n    'subsystem',\n    'subtext',\n    'subtitle',\n    'subtly',\n    'subtotal',\n    'subtract',\n    'subtype',\n    'suburb',\n    'subway',\n    'subwoofer',\n    'subzero',\n    'succulent',\n    'such',\n    'suction',\n    'sudden',\n    'sudoku',\n    'suds',\n    'sufferer',\n    'suffering',\n    'suffice',\n    'suffix',\n    'suffocate',\n    'suffrage',\n    'sugar',\n    'suggest',\n    'suing',\n    'suitable',\n    'suitably',\n    'suitcase',\n    'suitor',\n    'sulfate',\n    'sulfide',\n    'sulfite',\n    'sulfur',\n    'sulk',\n    'sullen',\n    'sulphate',\n    'sulphuric',\n    'sultry',\n    'superbowl',\n    'superglue',\n    'superhero',\n    'superior',\n    'superjet',\n    'superman',\n    'supermom',\n    'supernova',\n    'supervise',\n    'supper',\n    'supplier',\n    'supply',\n    'support',\n    'supremacy',\n    'supreme',\n    'surcharge',\n    'surely',\n    'sureness',\n    'surface',\n    'surfacing',\n    'surfboard',\n    'surfer',\n    'surgery',\n    'surgical',\n    'surging',\n    'surname',\n    'surpass',\n    'surplus',\n    'surprise',\n    'surreal',\n    'surrender',\n    'surrogate',\n    'surround',\n    'survey',\n    'survival',\n    'survive',\n    'surviving',\n    'survivor',\n    'sushi',\n    'suspect',\n    'suspend',\n    'suspense',\n    'sustained',\n    'sustainer',\n    'swab',\n    'swaddling',\n    'swagger',\n    'swampland',\n    'swan',\n    'swapping',\n    'swarm',\n    'sway',\n    'swear',\n    'sweat',\n    'sweep',\n    'swell',\n    'swept',\n    'swerve',\n    'swifter',\n    'swiftly',\n    'swiftness',\n    'swimmable',\n    'swimmer',\n    'swimming',\n    'swimsuit',\n    'swimwear',\n    'swinger',\n    'swinging',\n    'swipe',\n    'swirl',\n    'switch',\n    'swivel',\n    'swizzle',\n    'swooned',\n    'swoop',\n    'swoosh',\n    'swore',\n    'sworn',\n    'swung',\n    'sycamore',\n    'sympathy',\n    'symphonic',\n    'symphony',\n    'symptom',\n    'synapse',\n    'syndrome',\n    'synergy',\n    'synopses',\n    'synopsis',\n    'synthesis',\n    'synthetic',\n    'syrup',\n    'system',\n    't-shirt',\n    'tabasco',\n    'tabby',\n    'tableful',\n    'tables',\n    'tablet',\n    'tableware',\n    'tabloid',\n    'tackiness',\n    'tacking',\n    'tackle',\n    'tackling',\n    'tacky',\n    'taco',\n    'tactful',\n    'tactical',\n    'tactics',\n    'tactile',\n    'tactless',\n    'tadpole',\n    'taekwondo',\n    'tag',\n    'tainted',\n    'take',\n    'taking',\n    'talcum',\n    'talisman',\n    'tall',\n    'talon',\n    'tamale',\n    'tameness',\n    'tamer',\n    'tamper',\n    'tank',\n    'tanned',\n    'tannery',\n    'tanning',\n    'tantrum',\n    'tapeless',\n    'tapered',\n    'tapering',\n    'tapestry',\n    'tapioca',\n    'tapping',\n    'taps',\n    'tarantula',\n    'target',\n    'tarmac',\n    'tarnish',\n    'tarot',\n    'tartar',\n    'tartly',\n    'tartness',\n    'task',\n    'tassel',\n    'taste',\n    'tastiness',\n    'tasting',\n    'tasty',\n    'tattered',\n    'tattle',\n    'tattling',\n    'tattoo',\n    'taunt',\n    'tavern',\n    'thank',\n    'that',\n    'thaw',\n    'theater',\n    'theatrics',\n    'thee',\n    'theft',\n    'theme',\n    'theology',\n    'theorize',\n    'thermal',\n    'thermos',\n    'thesaurus',\n    'these',\n    'thesis',\n    'thespian',\n    'thicken',\n    'thicket',\n    'thickness',\n    'thieving',\n    'thievish',\n    'thigh',\n    'thimble',\n    'thing',\n    'think',\n    'thinly',\n    'thinner',\n    'thinness',\n    'thinning',\n    'thirstily',\n    'thirsting',\n    'thirsty',\n    'thirteen',\n    'thirty',\n    'thong',\n    'thorn',\n    'those',\n    'thousand',\n    'thrash',\n    'thread',\n    'threaten',\n    'threefold',\n    'thrift',\n    'thrill',\n    'thrive',\n    'thriving',\n    'throat',\n    'throbbing',\n    'throng',\n    'throttle',\n    'throwaway',\n    'throwback',\n    'thrower',\n    'throwing',\n    'thud',\n    'thumb',\n    'thumping',\n    'thursday',\n    'thus',\n    'thwarting',\n    'thyself',\n    'tiara',\n    'tibia',\n    'tidal',\n    'tidbit',\n    'tidiness',\n    'tidings',\n    'tidy',\n    'tiger',\n    'tighten',\n    'tightly',\n    'tightness',\n    'tightrope',\n    'tightwad',\n    'tigress',\n    'tile',\n    'tiling',\n    'till',\n    'tilt',\n    'timid',\n    'timing',\n    'timothy',\n    'tinderbox',\n    'tinfoil',\n    'tingle',\n    'tingling',\n    'tingly',\n    'tinker',\n    'tinkling',\n    'tinsel',\n    'tinsmith',\n    'tint',\n    'tinwork',\n    'tiny',\n    'tipoff',\n    'tipped',\n    'tipper',\n    'tipping',\n    'tiptoeing',\n    'tiptop',\n    'tiring',\n    'tissue',\n    'trace',\n    'tracing',\n    'track',\n    'traction',\n    'tractor',\n    'trade',\n    'trading',\n    'tradition',\n    'traffic',\n    'tragedy',\n    'trailing',\n    'trailside',\n    'train',\n    'traitor',\n    'trance',\n    'tranquil',\n    'transfer',\n    'transform',\n    'translate',\n    'transpire',\n    'transport',\n    'transpose',\n    'trapdoor',\n    'trapeze',\n    'trapezoid',\n    'trapped',\n    'trapper',\n    'trapping',\n    'traps',\n    'trash',\n    'travel',\n    'traverse',\n    'travesty',\n    'tray',\n    'treachery',\n    'treading',\n    'treadmill',\n    'treason',\n    'treat',\n    'treble',\n    'tree',\n    'trekker',\n    'tremble',\n    'trembling',\n    'tremor',\n    'trench',\n    'trend',\n    'trespass',\n    'triage',\n    'trial',\n    'triangle',\n    'tribesman',\n    'tribunal',\n    'tribune',\n    'tributary',\n    'tribute',\n    'triceps',\n    'trickery',\n    'trickily',\n    'tricking',\n    'trickle',\n    'trickster',\n    'tricky',\n    'tricolor',\n    'tricycle',\n    'trident',\n    'tried',\n    'trifle',\n    'trifocals',\n    'trillion',\n    'trilogy',\n    'trimester',\n    'trimmer',\n    'trimming',\n    'trimness',\n    'trinity',\n    'trio',\n    'tripod',\n    'tripping',\n    'triumph',\n    'trivial',\n    'trodden',\n    'trolling',\n    'trombone',\n    'trophy',\n    'tropical',\n    'tropics',\n    'trouble',\n    'troubling',\n    'trough',\n    'trousers',\n    'trout',\n    'trowel',\n    'truce',\n    'truck',\n    'truffle',\n    'trump',\n    'trunks',\n    'trustable',\n    'trustee',\n    'trustful',\n    'trusting',\n    'trustless',\n    'truth',\n    'try',\n    'tubby',\n    'tubeless',\n    'tubular',\n    'tucking',\n    'tuesday',\n    'tug',\n    'tuition',\n    'tulip',\n    'tumble',\n    'tumbling',\n    'tummy',\n    'turban',\n    'turbine',\n    'turbofan',\n    'turbojet',\n    'turbulent',\n    'turf',\n    'turkey',\n    'turmoil',\n    'turret',\n    'turtle',\n    'tusk',\n    'tutor',\n    'tutu',\n    'tux',\n    'tweak',\n    'tweed',\n    'tweet',\n    'tweezers',\n    'twelve',\n    'twentieth',\n    'twenty',\n    'twerp',\n    'twice',\n    'twiddle',\n    'twiddling',\n    'twig',\n    'twilight',\n    'twine',\n    'twins',\n    'twirl',\n    'twistable',\n    'twisted',\n    'twister',\n    'twisting',\n    'twisty',\n    'twitch',\n    'twitter',\n    'tycoon',\n    'tying',\n    'tyke',\n    'udder',\n    'ultimate',\n    'ultimatum',\n    'ultra',\n    'umbilical',\n    'umbrella',\n    'umpire',\n    'unabashed',\n    'unable',\n    'unadorned',\n    'unadvised',\n    'unafraid',\n    'unaired',\n    'unaligned',\n    'unaltered',\n    'unarmored',\n    'unashamed',\n    'unaudited',\n    'unawake',\n    'unaware',\n    'unbaked',\n    'unbalance',\n    'unbeaten',\n    'unbend',\n    'unbent',\n    'unbiased',\n    'unbitten',\n    'unblended',\n    'unblessed',\n    'unblock',\n    'unbolted',\n    'unbounded',\n    'unboxed',\n    'unbraided',\n    'unbridle',\n    'unbroken',\n    'unbuckled',\n    'unbundle',\n    'unburned',\n    'unbutton',\n    'uncanny',\n    'uncapped',\n    'uncaring',\n    'uncertain',\n    'unchain',\n    'unchanged',\n    'uncharted',\n    'uncheck',\n    'uncivil',\n    'unclad',\n    'unclaimed',\n    'unclamped',\n    'unclasp',\n    'uncle',\n    'unclip',\n    'uncloak',\n    'unclog',\n    'unclothed',\n    'uncoated',\n    'uncoiled',\n    'uncolored',\n    'uncombed',\n    'uncommon',\n    'uncooked',\n    'uncork',\n    'uncorrupt',\n    'uncounted',\n    'uncouple',\n    'uncouth',\n    'uncover',\n    'uncross',\n    'uncrown',\n    'uncrushed',\n    'uncured',\n    'uncurious',\n    'uncurled',\n    'uncut',\n    'undamaged',\n    'undated',\n    'undaunted',\n    'undead',\n    'undecided',\n    'undefined',\n    'underage',\n    'underarm',\n    'undercoat',\n    'undercook',\n    'undercut',\n    'underdog',\n    'underdone',\n    'underfed',\n    'underfeed',\n    'underfoot',\n    'undergo',\n    'undergrad',\n    'underhand',\n    'underline',\n    'underling',\n    'undermine',\n    'undermost',\n    'underpaid',\n    'underpass',\n    'underpay',\n    'underrate',\n    'undertake',\n    'undertone',\n    'undertook',\n    'undertow',\n    'underuse',\n    'underwear',\n    'underwent',\n    'underwire',\n    'undesired',\n    'undiluted',\n    'undivided',\n    'undocked',\n    'undoing',\n    'undone',\n    'undrafted',\n    'undress',\n    'undrilled',\n    'undusted',\n    'undying',\n    'unearned',\n    'unearth',\n    'unease',\n    'uneasily',\n    'uneasy',\n    'uneatable',\n    'uneaten',\n    'unedited',\n    'unelected',\n    'unending',\n    'unengaged',\n    'unenvied',\n    'unequal',\n    'unethical',\n    'uneven',\n    'unexpired',\n    'unexposed',\n    'unfailing',\n    'unfair',\n    'unfasten',\n    'unfazed',\n    'unfeeling',\n    'unfiled',\n    'unfilled',\n    'unfitted',\n    'unfitting',\n    'unfixable',\n    'unfixed',\n    'unflawed',\n    'unfocused',\n    'unfold',\n    'unfounded',\n    'unframed',\n    'unfreeze',\n    'unfrosted',\n    'unfrozen',\n    'unfunded',\n    'unglazed',\n    'ungloved',\n    'unglue',\n    'ungodly',\n    'ungraded',\n    'ungreased',\n    'unguarded',\n    'unguided',\n    'unhappily',\n    'unhappy',\n    'unharmed',\n    'unhealthy',\n    'unheard',\n    'unhearing',\n    'unheated',\n    'unhelpful',\n    'unhidden',\n    'unhinge',\n    'unhitched',\n    'unholy',\n    'unhook',\n    'unicorn',\n    'unicycle',\n    'unified',\n    'unifier',\n    'uniformed',\n    'uniformly',\n    'unify',\n    'unimpeded',\n    'uninjured',\n    'uninstall',\n    'uninsured',\n    'uninvited',\n    'union',\n    'uniquely',\n    'unisexual',\n    'unison',\n    'unissued',\n    'unit',\n    'universal',\n    'universe',\n    'unjustly',\n    'unkempt',\n    'unkind',\n    'unknotted',\n    'unknowing',\n    'unknown',\n    'unlaced',\n    'unlatch',\n    'unlawful',\n    'unleaded',\n    'unlearned',\n    'unleash',\n    'unless',\n    'unleveled',\n    'unlighted',\n    'unlikable',\n    'unlimited',\n    'unlined',\n    'unlinked',\n    'unlisted',\n    'unlit',\n    'unlivable',\n    'unloaded',\n    'unloader',\n    'unlocked',\n    'unlocking',\n    'unlovable',\n    'unloved',\n    'unlovely',\n    'unloving',\n    'unluckily',\n    'unlucky',\n    'unmade',\n    'unmanaged',\n    'unmanned',\n    'unmapped',\n    'unmarked',\n    'unmasked',\n    'unmasking',\n    'unmatched',\n    'unmindful',\n    'unmixable',\n    'unmixed',\n    'unmolded',\n    'unmoral',\n    'unmovable',\n    'unmoved',\n    'unmoving',\n    'unnamable',\n    'unnamed',\n    'unnatural',\n    'unneeded',\n    'unnerve',\n    'unnerving',\n    'unnoticed',\n    'unopened',\n    'unopposed',\n    'unpack',\n    'unpadded',\n    'unpaid',\n    'unpainted',\n    'unpaired',\n    'unpaved',\n    'unpeeled',\n    'unpicked',\n    'unpiloted',\n    'unpinned',\n    'unplanned',\n    'unplanted',\n    'unpleased',\n    'unpledged',\n    'unplowed',\n    'unplug',\n    'unpopular',\n    'unproven',\n    'unquote',\n    'unranked',\n    'unrated',\n    'unraveled',\n    'unreached',\n    'unread',\n    'unreal',\n    'unreeling',\n    'unrefined',\n    'unrelated',\n    'unrented',\n    'unrest',\n    'unretired',\n    'unrevised',\n    'unrigged',\n    'unripe',\n    'unrivaled',\n    'unroasted',\n    'unrobed',\n    'unroll',\n    'unruffled',\n    'unruly',\n    'unrushed',\n    'unsaddle',\n    'unsafe',\n    'unsaid',\n    'unsalted',\n    'unsaved',\n    'unsavory',\n    'unscathed',\n    'unscented',\n    'unscrew',\n    'unsealed',\n    'unseated',\n    'unsecured',\n    'unseeing',\n    'unseemly',\n    'unseen',\n    'unselect',\n    'unselfish',\n    'unsent',\n    'unsettled',\n    'unshackle',\n    'unshaken',\n    'unshaved',\n    'unshaven',\n    'unsheathe',\n    'unshipped',\n    'unsightly',\n    'unsigned',\n    'unskilled',\n    'unsliced',\n    'unsmooth',\n    'unsnap',\n    'unsocial',\n    'unsoiled',\n    'unsold',\n    'unsolved',\n    'unsorted',\n    'unspoiled',\n    'unspoken',\n    'unstable',\n    'unstaffed',\n    'unstamped',\n    'unsteady',\n    'unsterile',\n    'unstirred',\n    'unstitch',\n    'unstopped',\n    'unstuck',\n    'unstuffed',\n    'unstylish',\n    'unsubtle',\n    'unsubtly',\n    'unsuited',\n    'unsure',\n    'unsworn',\n    'untagged',\n    'untainted',\n    'untaken',\n    'untamed',\n    'untangled',\n    'untapped',\n    'untaxed',\n    'unthawed',\n    'unthread',\n    'untidy',\n    'untie',\n    'until',\n    'untimed',\n    'untimely',\n    'untitled',\n    'untoasted',\n    'untold',\n    'untouched',\n    'untracked',\n    'untrained',\n    'untreated',\n    'untried',\n    'untrimmed',\n    'untrue',\n    'untruth',\n    'unturned',\n    'untwist',\n    'untying',\n    'unusable',\n    'unused',\n    'unusual',\n    'unvalued',\n    'unvaried',\n    'unvarying',\n    'unveiled',\n    'unveiling',\n    'unvented',\n    'unviable',\n    'unvisited',\n    'unvocal',\n    'unwanted',\n    'unwarlike',\n    'unwary',\n    'unwashed',\n    'unwatched',\n    'unweave',\n    'unwed',\n    'unwelcome',\n    'unwell',\n    'unwieldy',\n    'unwilling',\n    'unwind',\n    'unwired',\n    'unwitting',\n    'unwomanly',\n    'unworldly',\n    'unworn',\n    'unworried',\n    'unworthy',\n    'unwound',\n    'unwoven',\n    'unwrapped',\n    'unwritten',\n    'unzip',\n    'upbeat',\n    'upchuck',\n    'upcoming',\n    'upcountry',\n    'update',\n    'upfront',\n    'upgrade',\n    'upheaval',\n    'upheld',\n    'uphill',\n    'uphold',\n    'uplifted',\n    'uplifting',\n    'upload',\n    'upon',\n    'upper',\n    'upright',\n    'uprising',\n    'upriver',\n    'uproar',\n    'uproot',\n    'upscale',\n    'upside',\n    'upstage',\n    'upstairs',\n    'upstart',\n    'upstate',\n    'upstream',\n    'upstroke',\n    'upswing',\n    'uptake',\n    'uptight',\n    'uptown',\n    'upturned',\n    'upward',\n    'upwind',\n    'uranium',\n    'urban',\n    'urchin',\n    'urethane',\n    'urgency',\n    'urgent',\n    'urging',\n    'urologist',\n    'urology',\n    'usable',\n    'usage',\n    'useable',\n    'used',\n    'uselessly',\n    'user',\n    'usher',\n    'usual',\n    'utensil',\n    'utility',\n    'utilize',\n    'utmost',\n    'utopia',\n    'utter',\n    'vacancy',\n    'vacant',\n    'vacate',\n    'vacation',\n    'vagabond',\n    'vagrancy',\n    'vagrantly',\n    'vaguely',\n    'vagueness',\n    'valiant',\n    'valid',\n    'valium',\n    'valley',\n    'valuables',\n    'value',\n    'vanilla',\n    'vanish',\n    'vanity',\n    'vanquish',\n    'vantage',\n    'vaporizer',\n    'variable',\n    'variably',\n    'varied',\n    'variety',\n    'various',\n    'varmint',\n    'varnish',\n    'varsity',\n    'varying',\n    'vascular',\n    'vaseline',\n    'vastly',\n    'vastness',\n    'veal',\n    'vegan',\n    'veggie',\n    'vehicular',\n    'velcro',\n    'velocity',\n    'velvet',\n    'vendetta',\n    'vending',\n    'vendor',\n    'veneering',\n    'vengeful',\n    'venomous',\n    'ventricle',\n    'venture',\n    'venue',\n    'venus',\n    'verbalize',\n    'verbally',\n    'verbose',\n    'verdict',\n    'verify',\n    'verse',\n    'version',\n    'versus',\n    'vertebrae',\n    'vertical',\n    'vertigo',\n    'very',\n    'vessel',\n    'vest',\n    'veteran',\n    'veto',\n    'vexingly',\n    'viability',\n    'viable',\n    'vibes',\n    'vice',\n    'vicinity',\n    'victory',\n    'video',\n    'viewable',\n    'viewer',\n    'viewing',\n    'viewless',\n    'viewpoint',\n    'vigorous',\n    'village',\n    'villain',\n    'vindicate',\n    'vineyard',\n    'vintage',\n    'violate',\n    'violation',\n    'violator',\n    'violet',\n    'violin',\n    'viper',\n    'viral',\n    'virtual',\n    'virtuous',\n    'virus',\n    'visa',\n    'viscosity',\n    'viscous',\n    'viselike',\n    'visible',\n    'visibly',\n    'vision',\n    'visiting',\n    'visitor',\n    'visor',\n    'vista',\n    'vitality',\n    'vitalize',\n    'vitally',\n    'vitamins',\n    'vivacious',\n    'vividly',\n    'vividness',\n    'vixen',\n    'vocalist',\n    'vocalize',\n    'vocally',\n    'vocation',\n    'voice',\n    'voicing',\n    'void',\n    'volatile',\n    'volley',\n    'voltage',\n    'volumes',\n    'voter',\n    'voting',\n    'voucher',\n    'vowed',\n    'vowel',\n    'voyage',\n    'wackiness',\n    'wad',\n    'wafer',\n    'waffle',\n    'waged',\n    'wager',\n    'wages',\n    'waggle',\n    'wagon',\n    'wake',\n    'waking',\n    'walk',\n    'walmart',\n    'walnut',\n    'walrus',\n    'waltz',\n    'wand',\n    'wannabe',\n    'wanted',\n    'wanting',\n    'wasabi',\n    'washable',\n    'washbasin',\n    'washboard',\n    'washbowl',\n    'washcloth',\n    'washday',\n    'washed',\n    'washer',\n    'washhouse',\n    'washing',\n    'washout',\n    'washroom',\n    'washstand',\n    'washtub',\n    'wasp',\n    'wasting',\n    'watch',\n    'water',\n    'waviness',\n    'waving',\n    'wavy',\n    'whacking',\n    'whacky',\n    'wham',\n    'wharf',\n    'wheat',\n    'whenever',\n    'whiff',\n    'whimsical',\n    'whinny',\n    'whiny',\n    'whisking',\n    'whoever',\n    'whole',\n    'whomever',\n    'whoopee',\n    'whooping',\n    'whoops',\n    'why',\n    'wick',\n    'widely',\n    'widen',\n    'widget',\n    'widow',\n    'width',\n    'wieldable',\n    'wielder',\n    'wife',\n    'wifi',\n    'wikipedia',\n    'wildcard',\n    'wildcat',\n    'wilder',\n    'wildfire',\n    'wildfowl',\n    'wildland',\n    'wildlife',\n    'wildly',\n    'wildness',\n    'willed',\n    'willfully',\n    'willing',\n    'willow',\n    'willpower',\n    'wilt',\n    'wimp',\n    'wince',\n    'wincing',\n    'wind',\n    'wing',\n    'winking',\n    'winner',\n    'winnings',\n    'winter',\n    'wipe',\n    'wired',\n    'wireless',\n    'wiring',\n    'wiry',\n    'wisdom',\n    'wise',\n    'wish',\n    'wisplike',\n    'wispy',\n    'wistful',\n    'wizard',\n    'wobble',\n    'wobbling',\n    'wobbly',\n    'wok',\n    'wolf',\n    'wolverine',\n    'womanhood',\n    'womankind',\n    'womanless',\n    'womanlike',\n    'womanly',\n    'womb',\n    'woof',\n    'wooing',\n    'wool',\n    'woozy',\n    'word',\n    'work',\n    'worried',\n    'worrier',\n    'worrisome',\n    'worry',\n    'worsening',\n    'worshiper',\n    'worst',\n    'wound',\n    'woven',\n    'wow',\n    'wrangle',\n    'wrath',\n    'wreath',\n    'wreckage',\n    'wrecker',\n    'wrecking',\n    'wrench',\n    'wriggle',\n    'wriggly',\n    'wrinkle',\n    'wrinkly',\n    'wrist',\n    'writing',\n    'written',\n    'wrongdoer',\n    'wronged',\n    'wrongful',\n    'wrongly',\n    'wrongness',\n    'wrought',\n    'xbox',\n    'xerox',\n    'yahoo',\n    'yam',\n    'yanking',\n    'yapping',\n    'yard',\n    'yarn',\n    'yeah',\n    'yearbook',\n    'yearling',\n    'yearly',\n    'yearning',\n    'yeast',\n    'yelling',\n    'yelp',\n    'yen',\n    'yesterday',\n    'yiddish',\n    'yield',\n    'yin',\n    'yippee',\n    'yo-yo',\n    'yodel',\n    'yoga',\n    'yogurt',\n    'yonder',\n    'yoyo',\n    'yummy',\n    'zap',\n    'zealous',\n    'zebra',\n    'zen',\n    'zeppelin',\n    'zero',\n    'zestfully',\n    'zesty',\n    'zigzagged',\n    'zipfile',\n    'zipping',\n    'zippy',\n    'zips',\n    'zit',\n    'zodiac',\n    'zombie',\n    'zone',\n    'zoning',\n    'zookeeper',\n    'zoologist',\n    'zoology',\n    'zoom',\n];\n","import { Cipher } from './cipher';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Cipher as CipherDomain } from '../domain/cipher';\n\nexport class CipherWithIds extends Cipher {\n    id: string;\n    collectionIds: string[];\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView | CipherDomain) {\n        this.id = o.id;\n        super.build(o);\n        this.collectionIds = o.collectionIds;\n    }\n}\n","import { Collection } from './collection';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport { Collection as CollectionDomain } from '../domain/collection';\n\nexport class CollectionWithId extends Collection {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView | CollectionDomain) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","import { Folder } from './folder';\n\nimport { FolderView } from '../view/folderView';\n\nimport { Folder as FolderDomain } from '../domain/folder';\n\nexport class FolderWithId extends Folder {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView | FolderDomain) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","import { FolderData } from '../data/folderData';\n\nimport { FolderView } from '../view/folderView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nexport class Folder extends Domain {\n    id: string;\n    name: EncString;\n    revisionDate: Date;\n\n    constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n        }, alreadyEncrypted, ['id']);\n\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    }\n\n    decrypt(): Promise<FolderView> {\n        return this.decryptObj(new FolderView(this), {\n            name: null,\n        }, null);\n    }\n}\n","import { FolderResponse } from '../response/folderResponse';\n\nexport class FolderData {\n    id: string;\n    userId: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: FolderResponse, userId: string) {\n        this.userId = userId;\n        this.name = response.name;\n        this.id = response.id;\n        this.revisionDate = response.revisionDate;\n    }\n}\n","import { ImportResult } from '../../models/domain/importResult';\nimport { BaseImporter } from '../baseImporter';\nimport { Importer } from '../importer';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { FieldType } from '../../enums/fieldType';\nimport { CipherView } from '../../models/view/cipherView';\nimport { CipherImportContext } from './cipherImportContext';\n\nexport const IgnoredProperties = ['ainfo', 'autosubmit', 'notesplain', 'ps', 'scope', 'tags', 'title', 'uuid', 'notes'];\n\nexport abstract class OnePasswordCsvImporter extends BaseImporter implements Importer {\n    protected loginPropertyParsers = [this.setLoginUsername, this.setLoginPassword, this.setLoginUris];\n    protected creditCardPropertyParsers = [this.setCreditCardNumber, this.setCreditCardVerification, this.setCreditCardCardholderName, this.setCreditCardExpiry];\n    protected identityPropertyParsers = [this.setIdentityFirstName, this.setIdentityInitial, this.setIdentityLastName, this.setIdentityUserName, this.setIdentityEmail, this.setIdentityPhone, this.setIdentityCompany];\n\n    abstract setCipherType(value: any, cipher: CipherView): void;\n\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true, {\n            quoteChar: '\"',\n            escapeChar: '\\\\',\n        });\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(this.getProp(value, 'title'))) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.getProp(value, 'title'), '--');\n\n            this.setNotes(value, cipher);\n\n            this.setCipherType(value, cipher);\n\n            let altUsername: string = null;\n            for (const property in value) {\n                if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n                    continue;\n                }\n\n                const context = new CipherImportContext(value, property, cipher);\n                if (cipher.type === CipherType.Login && this.setKnownLoginValue(context)) {\n                    continue;\n                } else if (cipher.type === CipherType.Card && this.setKnownCreditCardValue(context)) {\n                    continue;\n                } else if (cipher.type === CipherType.Identity && this.setKnownIdentityValue(context)) {\n                    continue;\n                }\n\n                altUsername = this.setUnknownValue(context, altUsername);\n            }\n\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(altUsername) &&\n                this.isNullOrWhitespace(cipher.login.username) && altUsername.indexOf('://') === -1) {\n                cipher.login.username = altUsername;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    protected getProp(obj: any, name: string): any {\n        const lowerObj = Object.entries(obj).reduce((agg: any, entry: [string, any]) => {\n            agg[entry[0].toLowerCase()] = entry[1];\n            return agg;\n        }, {});\n        return lowerObj[name.toLowerCase()];\n    }\n\n    protected getPropByRegexp(obj: any, regexp: RegExp): any {\n        const matchingKeys = Object.keys(obj).reduce((agg: string[], key: string) => {\n            if (key.match(regexp)) {\n                agg.push(key);\n            }\n            return agg;\n        }, []);\n        if (matchingKeys.length === 0) {\n            return null;\n        } else {\n            return obj[matchingKeys[0]];\n        }\n    }\n\n    protected getPropIncluding(obj: any, name: string): any {\n        const includesMap = Object.keys(obj).reduce((agg: string[], entry: string) => {\n            if (entry.toLowerCase().includes(name.toLowerCase())) {\n                agg.push(entry);\n            }\n            return agg;\n        }, []);\n        if (includesMap.length === 0) {\n            return null;\n        } else {\n            return obj[includesMap[0]];\n        }\n    }\n\n    protected setNotes(importRecord: any, cipher: CipherView) {\n        cipher.notes = this.getValueOrDefault(this.getProp(importRecord, 'notesPlain'), '') + '\\n' +\n            this.getValueOrDefault(this.getProp(importRecord, 'notes'), '') + '\\n';\n        cipher.notes.trim();\n\n    }\n\n    protected setKnownLoginValue(context: CipherImportContext): boolean {\n        return this.loginPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setKnownCreditCardValue(context: CipherImportContext): boolean {\n        return this.creditCardPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setKnownIdentityValue(context: CipherImportContext): boolean {\n        return this.identityPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setUnknownValue(context: CipherImportContext, altUsername: string): string {\n        if (IgnoredProperties.indexOf(context.lowerProperty) === -1 && !context.lowerProperty.startsWith('section:') &&\n            !context.lowerProperty.startsWith('section ')) {\n            if (altUsername == null && context.lowerProperty === 'email') {\n                return context.importRecord[context.property];\n            }\n            else if (context.lowerProperty === 'created date' || context.lowerProperty === 'modified date') {\n                const readableDate = new Date(parseInt(context.importRecord[context.property], 10) * 1000).toUTCString();\n                this.processKvp(context.cipher, '1Password ' + context.property, readableDate);\n                return null;\n            }\n            if (context.lowerProperty.includes('password') || context.lowerProperty.includes('key') || context.lowerProperty.includes('secret')) {\n                this.processKvp(context.cipher, context.property, context.importRecord[context.property], FieldType.Hidden);\n            } else {\n                this.processKvp(context.cipher, context.property, context.importRecord[context.property]);\n            }\n        }\n        return null;\n    }\n\n    protected setIdentityFirstName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.firstName) && context.lowerProperty.includes('first name')) {\n            context.cipher.identity.firstName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityInitial(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.middleName) && context.lowerProperty.includes('initial')) {\n            context.cipher.identity.middleName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityLastName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.lastName) && context.lowerProperty.includes('last name')) {\n            context.cipher.identity.lastName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityUserName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.username) && context.lowerProperty.includes('username')) {\n            context.cipher.identity.username = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityCompany(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.company) && context.lowerProperty.includes('company')) {\n            context.cipher.identity.company = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityPhone(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.phone) && context.lowerProperty.includes('default phone')) {\n            context.cipher.identity.phone = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityEmail(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.email) && context.lowerProperty.includes('email')) {\n            context.cipher.identity.email = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardNumber(context: CipherImportContext): boolean {\n        if (this.isNullOrWhitespace(context.cipher.card.number) && context.lowerProperty.includes('number')) {\n            context.cipher.card.number = context.importRecord[context.property];\n            context.cipher.card.brand = this.getCardBrand(context.cipher.card.number);\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardVerification(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.code) && context.lowerProperty.includes('verification number')) {\n            context.cipher.card.code = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardCardholderName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.cardholderName) && context.lowerProperty.includes('cardholder name')) {\n            context.cipher.card.cardholderName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardExpiry(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.expiration) && context.lowerProperty.includes('expiry date') &&\n            context.importRecord[context.property].length === 7) {\n            context.cipher.card.expMonth = (context.importRecord[context.property] as string).substr(0, 2);\n            if (context.cipher.card.expMonth[0] === '0') {\n                context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n            }\n            context.cipher.card.expYear = (context.importRecord[context.property] as string).substr(3, 4);\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginPassword(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.login.password) && context.lowerProperty === 'password') {\n            context.cipher.login.password = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginUsername(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.login.username) && context.lowerProperty === 'username') {\n            context.cipher.login.username = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginUris(context: CipherImportContext) {\n        if ((context.cipher.login.uris == null || context.cipher.login.uris.length === 0) && context.lowerProperty === 'urls') {\n            const urls = context.importRecord[context.property].split(this.newLineRegex);\n            context.cipher.login.uris = this.makeUriArray(urls);\n            return true;\n        } else if ((context.lowerProperty === 'url')) {\n            if (context.cipher.login.uris == null) {\n                context.cipher.login.uris = [];\n            }\n            context.cipher.login.uris.concat(this.makeUriArray(context.importRecord[context.property]));\n            return true;\n        }\n        return false;\n    }\n}\n","export enum NotificationType {\n    SyncCipherUpdate = 0,\n    SyncCipherCreate = 1,\n    SyncLoginDelete = 2,\n    SyncFolderDelete = 3,\n    SyncCiphers = 4,\n\n    SyncVault = 5,\n    SyncOrgKeys = 6,\n    SyncFolderCreate = 7,\n    SyncFolderUpdate = 8,\n    SyncCipherDelete = 9,\n    SyncSettings = 10,\n\n    LogOut = 11,\n\n    SyncSendCreate = 12,\n    SyncSendUpdate = 13,\n    SyncSendDelete = 14,\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendFileData } from './sendFileData';\nimport { SendTextData } from './sendTextData';\n\nimport { SendResponse } from '../response/sendResponse';\n\nexport class SendData {\n    id: string;\n    accessId: string;\n    userId: string;\n    type: SendType;\n    name: string;\n    notes: string;\n    file: SendFileData;\n    text: SendTextData;\n    key: string;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: string;\n    expirationDate: string;\n    deletionDate: string;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(response?: SendResponse, userId?: string) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.accessId = response.accessId;\n        this.userId = userId;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n        this.key = response.key;\n        this.maxAccessCount = response.maxAccessCount;\n        this.accessCount = response.accessCount;\n        this.revisionDate = response.revisionDate;\n        this.expirationDate = response.expirationDate;\n        this.deletionDate = response.deletionDate;\n        this.password = response.password;\n        this.disabled = response.disable;\n        this.hideEmail = response.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendTextData(response.text);\n                break;\n            case SendType.File:\n                this.file = new SendFileData(response.file);\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'bootstrap';\nimport 'jquery';\nimport 'popper.js';\n\n// tslint:disable-next-line\nrequire('src/scss/styles.scss');\n\nimport { AppModule } from './app.module';\n\nif (process.env.NODE_ENV === 'production') {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","// extracted by mini-css-extract-plugin\nexport {};","import { ToasterModule } from 'angular2-toaster';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { OrganizationsModule } from './organizations/organizations.module';\nimport { DisablePersonalVaultExportPolicyComponent } from './policies/disable-personal-vault-export.component';\nimport { MaximumVaultTimeoutPolicyComponent } from './policies/maximum-vault-timeout.component';\n\nimport { OssRoutingModule } from 'src/app/oss-routing.module';\nimport { OssModule } from 'src/app/oss.module';\nimport { ServicesModule } from 'src/app/services/services.module';\nimport { WildcardRoutingModule } from 'src/app/wildcard-routing.module';\n\n@NgModule({\n    imports: [\n        OssModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ServicesModule,\n        ToasterModule.forRoot(),\n        InfiniteScrollModule,\n        DragDropModule,\n        AppRoutingModule,\n        OssRoutingModule,\n        OrganizationsModule,\n        RouterModule,\n        WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n    ],\n    declarations: [\n        AppComponent,\n        MaximumVaultTimeoutPolicyComponent,\n        DisablePersonalVaultExportPolicyComponent,\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: 'providers',\n        loadChildren: async () => (await import('./providers/providers.module')).ProvidersModule,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver } from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { ProviderGuardService } from './services/provider-guard.service';\nimport { ProviderTypeGuardService } from './services/provider-type-guard.service';\nimport { ProviderService } from './services/provider.service';\n\nimport { ProvidersLayoutComponent } from './providers-layout.component';\nimport { ProvidersRoutingModule } from './providers-routing.module';\n\nimport { AddOrganizationComponent } from './clients/add-organization.component';\nimport { ClientsComponent } from './clients/clients.component';\nimport { CreateOrganizationComponent } from './clients/create-organization.component';\n\nimport { AcceptProviderComponent } from './manage/accept-provider.component';\nimport { BulkConfirmComponent } from './manage/bulk/bulk-confirm.component';\nimport { BulkRemoveComponent } from './manage/bulk/bulk-remove.component';\nimport { EventsComponent } from './manage/events.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { PeopleComponent } from './manage/people.component';\nimport { UserAddEditComponent } from './manage/user-add-edit.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nimport { SetupProviderComponent } from './setup/setup-provider.component';\nimport { SetupComponent } from './setup/setup.component';\n\nimport { OssModule } from 'src/app/oss.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        OssModule,\n        ProvidersRoutingModule,\n    ],\n    declarations: [\n        AcceptProviderComponent,\n        AccountComponent,\n        AddOrganizationComponent,\n        BulkConfirmComponent,\n        BulkRemoveComponent,\n        ClientsComponent,\n        CreateOrganizationComponent,\n        EventsComponent,\n        ManageComponent,\n        PeopleComponent,\n        ProvidersLayoutComponent,\n        SettingsComponent,\n        SetupComponent,\n        SetupProviderComponent,\n        UserAddEditComponent,\n    ],\n    providers: [\n        ProviderService,\n        ProviderGuardService,\n        ProviderTypeGuardService,\n    ],\n})\nexport class ProvidersModule {\n    constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n        modalService.registerComponentFactoryResolver(AddOrganizationComponent, componentFactoryResolver);\n    }\n}\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    OnDestroy,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\n\nimport {\n    ConfigurableFocusTrap,\n    ConfigurableFocusTrapFactory,\n} from '@angular/cdk/a11y';\n\nimport { ModalService } from '../../services/modal.service';\n\nimport { ModalRef } from './modal.ref';\n\n@Component({\n    selector: 'app-modal',\n    template: '<ng-template #modalContent></ng-template>',\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n    componentRef: ComponentRef<any>;\n\n    @ViewChild('modalContent', { read: ViewContainerRef, static: true }) modalContentRef: ViewContainerRef;\n\n    childComponentType: Type<any>;\n    setComponentParameters: (component: any) => void;\n\n    private focusTrap: ConfigurableFocusTrap;\n\n    constructor(private modalService: ModalService, private cd: ChangeDetectorRef,\n        private el: ElementRef<HTMLElement>, private focusTrapFactory: ConfigurableFocusTrapFactory,\n        public modalRef: ModalRef) { }\n\n    ngAfterViewInit() {\n        this.loadChildComponent(this.childComponentType);\n        if (this.setComponentParameters != null) {\n            this.setComponentParameters(this.componentRef.instance);\n        }\n        this.cd.detectChanges();\n\n        this.modalRef.created(this.el.nativeElement);\n        this.focusTrap = this.focusTrapFactory.create(this.el.nativeElement.querySelector('.modal-dialog'));\n        if (this.el.nativeElement.querySelector('[appAutoFocus]') == null) {\n            this.focusTrap.focusFirstTabbableElementWhenReady();\n        }\n    }\n\n    loadChildComponent(componentType: Type<any>) {\n        const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n        this.modalContentRef.clear();\n        this.componentRef = this.modalContentRef.createComponent(componentFactory);\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n        }\n        this.focusTrap.destroy();\n    }\n\n    close() {\n        this.modalRef.close();\n    }\n\n    getFocus() {\n        const autoFocusEl = this.el.nativeElement.querySelector('[appAutoFocus]') as HTMLElement;\n        autoFocusEl?.focus();\n    }\n}\n","import {\n    InjectFlags,\n    InjectionToken,\n    Injector,\n    Type\n} from '@angular/core';\n\nexport class ModalInjector implements Injector {\n    constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n    get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n    get(token: any, notFoundValue?: any, flags?: any) {\n        return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n    }\n}\n","export class ProviderAddOrganizationRequest {\n    organizationId: string;\n    key: string;\n}\n","export function getDomain(host: string): string | null {\n    return null;\n}\n\nexport function isValid(host: string): boolean {\n    return true;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { Permissions } from 'jslib-common/enums/permissions';\n\nimport { AddOrganizationComponent } from './clients/add-organization.component';\nimport { ClientsComponent } from './clients/clients.component';\nimport { CreateOrganizationComponent } from './clients/create-organization.component';\nimport { AcceptProviderComponent } from './manage/accept-provider.component';\nimport { EventsComponent } from './manage/events.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { PeopleComponent } from './manage/people.component';\nimport { ProvidersLayoutComponent } from './providers-layout.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { SetupProviderComponent } from './setup/setup-provider.component';\nimport { SetupComponent } from './setup/setup.component';\n\nimport { FrontendLayoutComponent } from 'src/app/layouts/frontend-layout.component';\n\nimport { ProvidersComponent } from 'src/app/providers/providers.component';\nimport { ProviderGuardService } from './services/provider-guard.service';\nimport { ProviderTypeGuardService } from './services/provider-type-guard.service';\nimport { AccountComponent } from './settings/account.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        canActivate: [AuthGuardService],\n        component: ProvidersComponent,\n    },\n    {\n        path: '',\n        component: FrontendLayoutComponent,\n        children: [\n            {\n                path: 'setup-provider',\n                component: SetupProviderComponent,\n                data: { titleId: 'setupProvider' },\n            },\n            {\n                path: 'accept-provider',\n                component: AcceptProviderComponent,\n                data: { titleId: 'acceptProvider' },\n            },\n        ],\n    },\n    {\n        path: '',\n        canActivate: [AuthGuardService],\n        children: [\n            {\n                path: 'setup',\n                component: SetupComponent,\n            },\n            {\n                path: ':providerId',\n                component: ProvidersLayoutComponent,\n                canActivate: [ProviderGuardService],\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'clients' },\n                    { path: 'clients/create', component: CreateOrganizationComponent },\n                    { path: 'clients', component: ClientsComponent, data: { titleId: 'clients' } },\n                    {\n                        path: 'manage',\n                        component: ManageComponent,\n                        children: [\n                            {\n                                path: '',\n                                pathMatch: 'full',\n                                redirectTo: 'people',\n                            },\n                            {\n                                path: 'people',\n                                component: PeopleComponent,\n                                canActivate: [ProviderTypeGuardService],\n                                data: {\n                                    titleId: 'people',\n                                    permissions: [Permissions.ManageUsers],\n                                },\n                            },\n                            {\n                                path: 'events',\n                                component: EventsComponent,\n                                canActivate: [ProviderTypeGuardService],\n                                data: {\n                                    titleId: 'eventLogs',\n                                    permissions: [Permissions.AccessEventLogs],\n                                },\n                            },\n                        ],\n                    },\n                    {\n                        path: 'settings',\n                        component: SettingsComponent,\n                        children: [\n                            {\n                                path: '',\n                                pathMatch: 'full',\n                                redirectTo: 'account',\n                            },\n                            {\n                                path: 'account',\n                                component: AccountComponent,\n                                canActivate: [ProviderTypeGuardService],\n                                data: {\n                                    titleId: 'myProvider',\n                                    permissions: [Permissions.ManageProvider],\n                                },\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class ProvidersRoutingModule { }\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { PlanType } from '../../enums/planType';\n\nimport { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationCreateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n    planType: PlanType;\n    key: string;\n    keys: OrganizationKeysRequest;\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n    additionalSeats: number;\n    maxAutoscaleSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n    collectionName: string;\n    taxIdNumber: string;\n    billingAddressLine1: string;\n    billingAddressLine2: string;\n    billingAddressCity: string;\n    billingAddressState: string;\n    billingAddressPostalCode: string;\n    billingAddressCountry: string;\n}\n","import { PlanType } from '../../enums/planType';\n\nimport { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationUpgradeRequest {\n    businessName: string;\n    planType: PlanType;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n    billingAddressCountry: string;\n    billingAddressPostalCode: string;\n    keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from '../organizationCreateRequest';\n\nexport class ProviderOrganizationCreateRequest {\n    constructor(public clientOwnerEmail: string, public organizationCreateRequest: OrganizationCreateRequest) { }\n}\n","export class ProviderUserAcceptRequest {\n    token: string;\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventView {\n    message: string;\n    humanReadableMessage: string;\n    appIcon: string;\n    appName: string;\n    userId: string;\n    userName: string;\n    userEmail: string;\n    date: string;\n    ip: string;\n    type: EventType;\n\n    constructor(data: Required<EventView>) {\n        this.message = data.message;\n        this.humanReadableMessage = data.humanReadableMessage;\n        this.appIcon = data.appIcon;\n        this.appName = data.appName;\n        this.userId = data.userId;\n        this.userName = data.userName;\n        this.userEmail = data.userEmail;\n        this.date = data.date;\n        this.ip = data.ip;\n        this.type = data.type;\n    }\n}\n","export class ProviderUserConfirmRequest {\n    key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n    id: string;\n    key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n    keys: ProviderUserBulkRequestEntry[];\n\n    constructor(keys: ProviderUserBulkRequestEntry[]) {\n        this.keys = keys;\n    }\n}\n","type OrganizationUserBulkRequestEntry = {\n    id: string;\n    key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n    keys: OrganizationUserBulkRequestEntry[];\n\n    constructor(keys: OrganizationUserBulkRequestEntry[]) {\n        this.keys = keys;\n    }\n}\n","import { ProviderUserType } from '../../../enums/providerUserType';\n\nexport class ProviderUserInviteRequest {\n    emails: string[] = [];\n    type: ProviderUserType;\n}\n","import { ProviderUserType } from '../../../enums/providerUserType';\n\nexport class ProviderUserUpdateRequest {\n    type: ProviderUserType;\n}\n","export class ProviderSetupRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n    token: string;\n    key: string;\n}\n","export class ProviderUpdateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from '../abstractions/broadcaster.service';\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n    subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n    send(message: any, id?: string) {\n        if (id != null) {\n            if (this.subscribers.has(id)) {\n                this.subscribers.get(id)(message);\n            }\n            return;\n        }\n\n        this.subscribers.forEach(value => {\n            value(message);\n        });\n    }\n\n    subscribe(id: string, messageCallback: (message: any) => any) {\n        this.subscribers.set(id, messageCallback);\n    }\n\n    unsubscribe(id: string) {\n        if (this.subscribers.has(id)) {\n            this.subscribers.delete(id);\n        }\n    }\n}\n","export class EmergencyAccessAcceptRequest {\n    token: string;\n}\n","export class OrganizationUserAcceptRequest {\n    token: string;\n}\n","import { Router } from '@angular/router';\n\nimport { PasswordHintRequest } from 'jslib-common/models/request/passwordHintRequest';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nexport class HintComponent {\n    email: string = '';\n    formPromise: Promise<any>;\n\n    protected successRoute = 'login';\n    protected onSuccessfulSubmit: () => void;\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected apiService: ApiService, protected platformUtilsService: PlatformUtilsService,\n        private logService: LogService) { }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('masterPassSent'));\n            if (this.onSuccessfulSubmit != null) {\n                this.onSuccessfulSubmit();\n            } else if (this.router != null) {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","export class PasswordHintRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { KeyConnectorService } from 'jslib-common/abstractions/keyConnector.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { SecretVerificationRequest } from 'jslib-common/models/request/secretVerificationRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { HashPurpose } from 'jslib-common/enums/hashPurpose';\n\n@Directive()\nexport class LockComponent implements OnInit {\n    masterPassword: string = '';\n    pin: string = '';\n    showPassword: boolean = false;\n    email: string;\n    pinLock: boolean = false;\n    webVaultHostname: string = '';\n    formPromise: Promise<any>;\n    supportsBiometric: boolean;\n    biometricLock: boolean;\n    biometricText: string;\n    hideInput: boolean;\n\n    protected successRoute: string = 'vault';\n    protected onSuccessfulSubmit: () => void;\n\n    private invalidPinAttempts = 0;\n    private pinSet: [boolean, boolean];\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected messagingService: MessagingService,\n        protected userService: UserService, protected cryptoService: CryptoService,\n        protected storageService: StorageService, protected vaultTimeoutService: VaultTimeoutService,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected apiService: ApiService, private logService: LogService,\n        private keyConnectorService: KeyConnectorService) { }\n\n    async ngOnInit() {\n        this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n        this.pinLock = (this.pinSet[0] && this.vaultTimeoutService.pinProtectedKey != null) || this.pinSet[1];\n        this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n        this.biometricLock = await this.vaultTimeoutService.isBiometricLockSet() &&\n            (await this.cryptoService.hasKeyStored('biometric') || !this.platformUtilsService.supportsSecureStorage());\n        this.biometricText = await this.storageService.get(ConstantsService.biometricText);\n        this.email = await this.userService.getEmail();\n        const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n        this.hideInput = usesKeyConnector && !this.pinLock;\n\n        // Users with key connector and without biometric or pin has no MP to unlock using\n        if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n            await this.vaultTimeoutService.logOut();\n        }\n\n        const webVaultUrl = this.environmentService.getWebVaultUrl();\n        const vaultUrl = webVaultUrl === 'https://vault.bitwarden.com' ? 'https://bitwarden.com' : webVaultUrl;\n        this.webVaultHostname = Utils.getHostname(vaultUrl);\n    }\n\n    async submit() {\n        if (this.pinLock && (this.pin == null || this.pin === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('pinRequired'));\n            return;\n        }\n        if (!this.pinLock && (this.masterPassword == null || this.masterPassword === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const kdf = await this.userService.getKdf();\n        const kdfIterations = await this.userService.getKdfIterations();\n\n        if (this.pinLock) {\n            let failed = true;\n            try {\n                if (this.pinSet[0]) {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations,\n                        this.vaultTimeoutService.pinProtectedKey);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n                    failed = decPin !== this.pin;\n                    if (!failed) {\n                        await this.setKeyAndContinue(key);\n                    }\n                } else {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations);\n                    failed = false;\n                    await this.setKeyAndContinue(key);\n                }\n            } catch {\n                failed = true;\n            }\n\n            if (failed) {\n                this.invalidPinAttempts++;\n                if (this.invalidPinAttempts >= 5) {\n                    this.messagingService.send('logout');\n                    return;\n                }\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidPin'));\n            }\n        } else {\n            const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n            const storedKeyHash = await this.cryptoService.getKeyHash();\n\n            let passwordValid = false;\n\n            if (storedKeyHash != null) {\n                passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n            } else {\n                const request = new SecretVerificationRequest();\n                const serverKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n                    HashPurpose.ServerAuthorization);\n                request.masterPasswordHash = serverKeyHash;\n                try {\n                    this.formPromise = this.apiService.postAccountVerifyPassword(request);\n                    await this.formPromise;\n                    passwordValid = true;\n                    const localKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n                        HashPurpose.LocalAuthorization);\n                    await this.cryptoService.setKeyHash(localKeyHash);\n                } catch (e) {\n                    this.logService.error(e);\n                }\n            }\n\n            if (passwordValid) {\n                if (this.pinSet[0]) {\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n                    const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n                    this.vaultTimeoutService.pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n                }\n                this.setKeyAndContinue(key);\n            } else {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidMasterPassword'));\n            }\n        }\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    async unlockBiometric(): Promise<boolean> {\n        if (!this.biometricLock) {\n            return;\n        }\n\n        const success = (await this.cryptoService.getKey('biometric')) != null;\n\n        if (success) {\n            await this.doContinue();\n        }\n\n        return success;\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById(this.pinLock ? 'pin' : 'masterPassword').focus();\n    }\n\n    private async setKeyAndContinue(key: SymmetricCryptoKey) {\n        await this.cryptoService.setKey(key);\n        this.doContinue();\n    }\n\n    private async doContinue() {\n        this.vaultTimeoutService.biometricLocked = false;\n        this.vaultTimeoutService.everBeenUnlocked = true;\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n        this.messagingService.send('unlocked');\n        if (this.onSuccessfulSubmit != null) {\n            this.onSuccessfulSubmit();\n        } else if (this.router != null) {\n            this.router.navigate([this.successRoute]);\n        }\n    }\n}\n","import {\n    Directive,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { AuthResult } from 'jslib-common/models/domain/authResult';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { CaptchaProtectedComponent } from './captchaProtected.component';\n\nconst Keys = {\n    rememberedEmail: 'rememberedEmail',\n    rememberEmail: 'rememberEmail',\n};\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n    @Input() email: string = '';\n    @Input() rememberEmail = true;\n\n    masterPassword: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<AuthResult>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n    onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'vault';\n    protected forcePasswordResetRoute = 'update-temp-password';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        platformUtilsService: PlatformUtilsService, i18nService: I18nService,\n        protected stateService: StateService, environmentService: EnvironmentService,\n        protected passwordGenerationService: PasswordGenerationService,\n        protected cryptoFunctionService: CryptoFunctionService, private storageService: StorageService,\n        protected logService: LogService) {\n        super(environmentService, i18nService, platformUtilsService);\n    }\n\n    async ngOnInit() {\n        if (this.email == null || this.email === '') {\n            this.email = await this.storageService.get<string>(Keys.rememberedEmail);\n            if (this.email == null) {\n                this.email = '';\n            }\n        }\n        this.rememberEmail = await this.storageService.get<boolean>(Keys.rememberEmail);\n        if (this.rememberEmail == null) {\n            this.rememberEmail = true;\n        }\n        if (Utils.isBrowser && !Utils.isNode) {\n            this.focusInput();\n        }\n    }\n\n    async submit() {\n        await this.setupCaptcha();\n\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.authService.logIn(this.email, this.masterPassword, this.captchaToken);\n            const response = await this.formPromise;\n            await this.storageService.save(Keys.rememberEmail, this.rememberEmail);\n            if (this.rememberEmail) {\n                await this.storageService.save(Keys.rememberedEmail, this.email);\n            } else {\n                await this.storageService.remove(Keys.rememberedEmail);\n            }\n            if (this.handleCaptchaRequired(response)) {\n                return;\n            } else if (response.twoFactor) {\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute]);\n                }\n            } else if (response.forcePasswordReset) {\n                if (this.onSuccessfulLoginForceResetNavigate != null) {\n                    this.onSuccessfulLoginForceResetNavigate();\n                } else {\n                    this.router.navigate([this.forcePasswordResetRoute]);\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n        // Generate necessary sso params\n        const passwordOptions: any = {\n            type: 'password',\n            length: 64,\n            uppercase: true,\n            lowercase: true,\n            numbers: true,\n            special: false,\n        };\n        const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n        const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n        const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, 'sha256');\n        const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n        // Save sso params\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\n        await this.storageService.save(ConstantsService.ssoCodeVerifierKey, ssoCodeVerifier);\n\n        // Build URI\n        const webUrl = this.environmentService.getWebVaultUrl();\n\n        // Launch browser\n        this.platformUtilsService.launchUri(webUrl + '/#/sso?clientId=' + clientId +\n            '&redirectUri=' + encodeURIComponent(ssoRedirectUri) +\n            '&state=' + state + '&codeChallenge=' + codeChallenge);\n    }\n\n    protected focusInput() {\n        document.getElementById(this.email == null || this.email === '' ? 'email' : 'masterPassword').focus();\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\nimport { IFrameComponent } from './iframe_component';\n\nexport class CaptchaIFrame extends IFrameComponent {\n    constructor(win: Window, webVaultUrl: string,\n        private i18nService: I18nService, successCallback: (message: string) => any, errorCallback: (message: string) => any,\n        infoCallback: (message: string) => any) {\n        super(win, webVaultUrl, 'captcha-connector.html', 'hcaptcha_iframe', successCallback, errorCallback, (message: string) => {\n            const parsedMessage = JSON.parse(message);\n            if (typeof (parsedMessage) !== 'string') {\n                this.iframe.height = (parsedMessage.height).toString();\n                this.iframe.width = (parsedMessage.width).toString();\n            } else {\n                infoCallback(parsedMessage);\n            }\n        });\n    }\n\n    init(siteKey: string): void {\n        super.initComponent(this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1));\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\n\nexport abstract class IFrameComponent {\n    iframe: HTMLIFrameElement;\n    private connectorLink: HTMLAnchorElement;\n    private parseFunction = this.parseMessage.bind(this);\n\n    constructor(private win: Window, protected webVaultUrl: string, private path: string, private iframeId: string,\n        public successCallback?: (message: string) => any,\n        public errorCallback?: (message: string) => any, public infoCallback?: (message: string) => any) {\n        this.connectorLink = win.document.createElement('a');\n    }\n\n    stop() {\n        this.sendMessage('stop');\n    }\n\n    start() {\n        this.sendMessage('start');\n    }\n\n    sendMessage(message: any) {\n        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n            return;\n        }\n\n        this.iframe.contentWindow.postMessage(message, this.iframe.src);\n    }\n\n    base64Encode(str: string): string {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n    }\n\n    cleanup() {\n        this.win.removeEventListener('message', this.parseFunction, false);\n    }\n\n    protected createParams(data: any, version: number) {\n        return new URLSearchParams({\n            data: this.base64Encode(JSON.stringify(data)),\n            parent: encodeURIComponent(this.win.document.location.href),\n            v: version.toString(),\n        });\n    }\n\n    protected initComponent(params: URLSearchParams): void {\n        this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n        this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n        this.iframe.src = this.connectorLink.href;\n\n        this.win.addEventListener('message', this.parseFunction, false);\n    }\n\n    private parseMessage(event: MessageEvent) {\n        if (!this.validMessage(event)) {\n            return;\n        }\n\n        const parts: string[] = event.data.split('|');\n        if (parts[0] === 'success' && this.successCallback) {\n            this.successCallback(parts[1]);\n        } else if (parts[0] === 'error' && this.errorCallback) {\n            this.errorCallback(parts[1]);\n        } else if (parts[0] === 'info' && this.infoCallback) {\n            this.infoCallback(parts[1]);\n        }\n    }\n\n    private validMessage(event: MessageEvent) {\n        if (event.origin == null || event.origin === '' || event.origin !== (this.connectorLink as any).origin ||\n            event.data == null || typeof (event.data) !== 'string') {\n            return false;\n        }\n\n        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||\n            event.data.indexOf('info|') === 0;\n    }\n}\n","export class DeleteRecoverRequest {\n    email: string;\n}\n","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n    recoveryCode: string;\n    email: string;\n}\n","import { Directive, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { KeysRequest } from 'jslib-common/models/request/keysRequest';\nimport { ReferenceEventRequest } from 'jslib-common/models/request/referenceEventRequest';\nimport { RegisterRequest } from 'jslib-common/models/request/registerRequest';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\nimport { CaptchaProtectedComponent } from './captchaProtected.component';\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n    name: string = '';\n    email: string = '';\n    masterPassword: string = '';\n    confirmMasterPassword: string = '';\n    hint: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    referenceData: ReferenceEventRequest;\n    showTerms = true;\n    acceptPolicies: boolean = false;\n\n    protected successRoute = 'login';\n    private masterPasswordStrengthTimeout: any;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        i18nService: I18nService, protected cryptoService: CryptoService,\n        protected apiService: ApiService, protected stateService: StateService,\n        platformUtilsService: PlatformUtilsService,\n        protected passwordGenerationService: PasswordGenerationService, environmentService: EnvironmentService,\n        protected logService: LogService) {\n        super(environmentService, i18nService, platformUtilsService);\n        this.showTerms = !platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.setupCaptcha();\n    }\n\n    get masterPasswordScoreWidth() {\n        return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    }\n\n    get masterPasswordScoreColor() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return 'success';\n            case 3:\n                return 'primary';\n            case 2:\n                return 'warning';\n            default:\n                return 'danger';\n        }\n    }\n\n    get masterPasswordScoreText() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return this.i18nService.t('strong');\n            case 3:\n                return this.i18nService.t('good');\n            case 2:\n                return this.i18nService.t('weak');\n            default:\n                return this.masterPasswordScore != null ? this.i18nService.t('weak') : null;\n        }\n    }\n\n    async submit() {\n        if (!this.acceptPolicies && this.showTerms) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('acceptPoliciesError'));\n            return;\n        }\n\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return;\n        }\n        if (this.masterPassword !== this.confirmMasterPassword) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return;\n            }\n        }\n\n        if (this.hint === this.masterPassword) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('hintEqualsPassword'));\n            return;\n        }\n\n        this.name = this.name === '' ? null : this.name;\n        this.email = this.email.trim().toLowerCase();\n        const kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isIE();\n        const kdfIterations = useLowerKdf ? 10000 : 100000;\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        const request = new RegisterRequest(this.email, this.name, hashedPassword,\n            this.hint, encKey[1].encryptedString, kdf, kdfIterations, this.referenceData, this.captchaToken);\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n        const orgInvite = await this.stateService.get<any>('orgInvitation');\n        if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n            request.token = orgInvite.token;\n            request.organizationUserId = orgInvite.organizationUserId;\n        }\n\n        try {\n            this.formPromise = this.apiService.postRegister(request);\n            try {\n                await this.formPromise;\n            } catch (e) {\n                if (this.handleCaptchaRequired(e)) {\n                    return;\n                } else {\n                    throw e;\n                }\n            }\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('newAccountCreated'));\n            this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        if (this.name != null && this.name !== '') {\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\n        }\n        return userInput;\n    }\n}\n","import { KeysRequest } from './keysRequest';\nimport { ReferenceEventRequest } from './referenceEventRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nimport { CaptchaProtectedRequest } from './captchaProtectedRequest';\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n    masterPasswordHint: string;\n    keys: KeysRequest;\n    token: string;\n    organizationUserId: string;\n\n\n    constructor(public email: string, public name: string, public masterPasswordHash: string,\n        masterPasswordHint: string, public key: string, public kdf: KdfType, public kdfIterations: number,\n        public referenceData: ReferenceEventRequest, public captchaResponse: string) {\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n    }\n}\n","export class ReferenceEventRequest {\n    id: string;\n    layout: string;\n    flow: string;\n}\n","import {\n    Directive,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { KeyConnectorService } from 'jslib-common/abstractions/keyConnector.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n\n    actionPromise: Promise<any>;\n    continuing: boolean = false;\n    leaving: boolean = false;\n\n    loading: boolean = true;\n    organization: Organization;\n    email: string;\n\n    constructor(private router: Router, private userService: UserService,\n        private apiService: ApiService, private syncService: SyncService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private keyConnectorService: KeyConnectorService, private storageService: StorageService) { }\n\n    async ngOnInit() {\n        this.organization = await this.keyConnectorService.getManagingOrganization();\n        this.email = await this.userService.getEmail();\n        await this.syncService.fullSync(false);\n        this.loading = false;\n    }\n\n    async convert() {\n        this.continuing = true;\n        this.actionPromise = this.keyConnectorService.migrateUser();\n\n        try {\n            await this.actionPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('removedMasterPassword'));\n            await this.keyConnectorService.removeConvertAccountRequired();\n            this.router.navigate(['']);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), e.message);\n        }\n    }\n\n    async leave() {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('leaveOrganizationConfirmation'), this.organization.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.leaving = true;\n            this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('leftOrganization'));\n            await this.keyConnectorService.removeConvertAccountRequired();\n            this.router.navigate(['']);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), e);\n        }\n    }\n}\n","import { Directive } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { KeysRequest } from 'jslib-common/models/request/keysRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { SetPasswordRequest } from 'jslib-common/models/request/setPasswordRequest';\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from './change-password.component';\n\nimport { HashPurpose } from 'jslib-common/enums/hashPurpose';\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n    syncLoading: boolean = true;\n    showPassword: boolean = false;\n    hint: string = '';\n    identifier: string = null;\n    orgId: string;\n    resetPasswordAutoEnroll = false;\n\n    onSuccessfulChangePassword: () => Promise<any>;\n    successRoute = 'vault';\n\n    constructor(i18nService: I18nService, cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, protected router: Router,\n        private apiService: ApiService, private syncService: SyncService, private route: ActivatedRoute) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        await this.syncService.fullSync(true);\n        this.syncLoading = false;\n\n        this.route.queryParams.pipe(first()).subscribe(async qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            }\n        });\n\n        // Automatic Enrollment Detection\n        if (this.identifier != null) {\n            try {\n                const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n                this.orgId = response.id;\n                this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n                this.enforcedPolicyOptions =\n                  await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n            } catch {\n                this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            }\n        }\n\n        super.ngOnInit();\n    }\n\n    async setupSubmitActions() {\n        this.kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isIE();\n        this.kdfIterations = useLowerKdf ? 10000 : 100000;\n        return true;\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        const request = new SetPasswordRequest(\n            masterPasswordHash,\n            encKey[1].encryptedString,\n            this.hint,\n            this.kdf,\n            this.kdfIterations,\n            this.identifier,\n            new KeysRequest(keys[0], keys[1].encryptedString)\n        );\n        try {\n            if (this.resetPasswordAutoEnroll) {\n                this.formPromise = this.apiService.setPassword(request).then(async () => {\n                    await this.onSetPasswordSuccess(key, encKey, keys);\n                    return this.apiService.getOrganizationKeys(this.orgId);\n                }).then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                    }\n                    const userId = await this.userService.getUserId();\n                    const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n                    // RSA Encrypt user's encKey.key with organization public key\n                    const userEncKey = await this.cryptoService.getEncKey();\n                    const encryptedKey = await this.cryptoService.rsaEncrypt(userEncKey.key, publicKey.buffer);\n\n                    const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n                    resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n                    return this.apiService.putOrganizationUserResetPasswordEnrollment(this.orgId, userId, resetRequest);\n                });\n            } else {\n                this.formPromise = this.apiService.setPassword(request).then(async () => {\n                    await this.onSetPasswordSuccess(key, encKey, keys);\n                });\n            }\n\n            await this.formPromise;\n\n            if (this.onSuccessfulChangePassword != null) {\n                this.onSuccessfulChangePassword();\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    private async onSetPasswordSuccess(key: SymmetricCryptoKey, encKey: [SymmetricCryptoKey, EncString], keys: [string, EncString]) {\n        await this.userService.setInformation(await this.userService.getUserId(), await this.userService.getEmail(),\n            this.kdf, this.kdfIterations);\n        await this.cryptoService.setKey(key);\n        await this.cryptoService.setEncKey(encKey[1].encryptedString);\n        await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n        const localKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n            HashPurpose.LocalAuthorization);\n        await this.cryptoService.setKeyHash(localKeyHash);\n    }\n}\n","import { KeysRequest } from './keysRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class SetPasswordRequest {\n    masterPasswordHash: string;\n    key: string;\n    masterPasswordHint: string;\n    keys: KeysRequest;\n    kdf: KdfType;\n    kdfIterations: number;\n    orgIdentifier: string;\n\n    constructor(masterPasswordHash: string, key: string, masterPasswordHint: string, kdf: KdfType,\n        kdfIterations: number, orgIdentifier: string, keys: KeysRequest) {\n        this.masterPasswordHash = masterPasswordHash;\n        this.key = key;\n        this.masterPasswordHint = masterPasswordHint;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n        this.orgIdentifier = orgIdentifier;\n        this.keys = keys;\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n    @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n    @Output() onRecoverSelected = new EventEmitter();\n\n    providers: any[] = [];\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected win: Window) { }\n\n    ngOnInit() {\n        this.providers = this.authService.getSupportedTwoFactorProviders(this.win);\n    }\n\n    choose(p: any) {\n        this.onProviderSelected.emit(p.type);\n    }\n\n    recover() {\n        this.platformUtilsService.launchUri('https://help.bitwarden.com/article/lost-two-step-device/');\n        this.onRecoverSelected.emit();\n    }\n}\n","import { Directive, OnDestroy, OnInit } from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorEmailRequest } from 'jslib-common/models/request/twoFactorEmailRequest';\n\nimport { AuthResult } from 'jslib-common/models/domain/authResult';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { TwoFactorProviders } from 'jslib-common/services/auth.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport * as DuoWebSDK from 'duo_web_sdk';\nimport { WebAuthnIFrame } from 'jslib-common/misc/webauthn_iframe';\n\n@Directive()\nexport class TwoFactorComponent implements OnInit, OnDestroy {\n    token: string = '';\n    remember: boolean = false;\n    webAuthnReady: boolean = false;\n    webAuthnNewTab: boolean = false;\n    providers = TwoFactorProviders;\n    providerType = TwoFactorProviderType;\n    selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n    webAuthnSupported: boolean = false;\n    webAuthn: WebAuthnIFrame = null;\n    title: string = '';\n    twoFactorEmail: string = null;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n    identifier: string = null;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n\n    get webAuthnAllow(): string {\n        return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n    }\n\n    protected loginRoute = 'login';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected apiService: ApiService,\n        protected platformUtilsService: PlatformUtilsService, protected win: Window,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected storageService: StorageService, protected route: ActivatedRoute,\n        protected logService: LogService) {\n        this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n    }\n\n    async ngOnInit() {\n        if (!this.authing || this.authService.twoFactorProvidersData == null) {\n            this.router.navigate([this.loginRoute]);\n            return;\n        }\n\n        this.route.queryParams.pipe(first()).subscribe(qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            }\n        });\n\n        if (this.needsLock) {\n            this.successRoute = 'lock';\n        }\n\n        if (this.win != null && this.webAuthnSupported) {\n            const webVaultUrl = this.environmentService.getWebVaultUrl();\n            this.webAuthn = new WebAuthnIFrame(this.win, webVaultUrl, this.webAuthnNewTab, this.platformUtilsService,\n                this.i18nService, (token: string) => {\n                    this.token = token;\n                    this.submit();\n                }, (error: string) => {\n                    this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);\n                }, (info: string) => {\n                    if (info === 'ready') {\n                        this.webAuthnReady = true;\n                    }\n                }\n            );\n        }\n\n        this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(this.webAuthnSupported);\n        await this.init();\n    }\n\n    ngOnDestroy(): void {\n        this.cleanupWebAuthn();\n        this.webAuthn = null;\n    }\n\n    async init() {\n        if (this.selectedProviderType == null) {\n            this.title = this.i18nService.t('loginUnavailable');\n            return;\n        }\n\n        this.cleanupWebAuthn();\n        this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n        switch (this.selectedProviderType) {\n            case TwoFactorProviderType.WebAuthn:\n                if (!this.webAuthnNewTab) {\n                    setTimeout(() => {\n                        this.authWebAuthn();\n                    }, 500);\n                }\n                break;\n            case TwoFactorProviderType.Duo:\n            case TwoFactorProviderType.OrganizationDuo:\n                setTimeout(() => {\n                    DuoWebSDK.init({\n                        iframe: undefined,\n                        host: providerData.Host,\n                        sig_request: providerData.Signature,\n                        submit_callback: async (f: HTMLFormElement) => {\n                            const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n                            if (sig != null) {\n                                this.token = sig.value;\n                                await this.submit();\n                            }\n                        },\n                    });\n                }, 0);\n                break;\n            case TwoFactorProviderType.Email:\n                this.twoFactorEmail = providerData.Email;\n                if (this.authService.twoFactorProvidersData.size > 1) {\n                    await this.sendEmail(false);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    async submit() {\n        if (this.token == null || this.token === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('verificationCodeRequired'));\n            return;\n        }\n\n        if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n            if (this.webAuthn != null) {\n                this.webAuthn.stop();\n            } else {\n                return;\n            }\n        } else if (this.selectedProviderType === TwoFactorProviderType.Email ||\n            this.selectedProviderType === TwoFactorProviderType.Authenticator) {\n            this.token = this.token.replace(' ', '').trim();\n        }\n\n        try {\n            await this.doSubmit();\n        } catch {\n            if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n                this.webAuthn.start();\n            }\n        }\n    }\n\n    async doSubmit() {\n        this.formPromise = this.authService.logInTwoFactor(this.selectedProviderType, this.token, this.remember);\n        const response: AuthResult = await this.formPromise;\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n            this.onSuccessfulLogin();\n        }\n        if (response.resetMasterPassword) {\n            this.successRoute = 'set-password';\n        }\n        if (response.forcePasswordReset) {\n            this.successRoute = 'update-temp-password';\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n            this.onSuccessfulLoginNavigate();\n        } else {\n            this.router.navigate([this.successRoute], {\n                queryParams: {\n                    identifier: this.identifier,\n                },\n            });\n        }\n    }\n\n    async sendEmail(doToast: boolean) {\n        if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n            return;\n        }\n\n        if (this.emailPromise != null) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorEmailRequest();\n            request.email = this.authService.email;\n            request.masterPasswordHash = this.authService.masterPasswordHash;\n            this.emailPromise = this.apiService.postTwoFactorEmail(request);\n            await this.emailPromise;\n            if (doToast) {\n                this.platformUtilsService.showToast('success', null,\n                    this.i18nService.t('verificationCodeEmailSent', this.twoFactorEmail));\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        this.emailPromise = null;\n    }\n\n    authWebAuthn() {\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n\n        if (!this.webAuthnSupported || this.webAuthn == null) {\n            return;\n        }\n\n        this.webAuthn.init(providerData);\n    }\n\n    private cleanupWebAuthn() {\n        if (this.webAuthn != null) {\n            this.webAuthn.stop();\n            this.webAuthn.cleanup();\n        }\n    }\n\n    get authing(): boolean {\n        return this.authService.authingWithPassword() || this.authService.authingWithSso() || this.authService.authingWithApiKey();\n    }\n\n    get needsLock(): boolean {\n        return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class AuthResult {\n    twoFactor: boolean = false;\n    captchaSiteKey: string = '';\n    resetMasterPassword: boolean = false;\n    forcePasswordReset: boolean = false;\n    twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string; }> = null;\n}\n","import { KeysRequest } from '../keysRequest';\n\nimport { KdfType } from '../../../enums/kdfType';\n\nexport class SetKeyConnectorKeyRequest {\n    key: string;\n    keys: KeysRequest;\n    kdf: KdfType;\n    kdfIterations: number;\n    orgIdentifier: string;\n\n    constructor(key: string, kdf: KdfType, kdfIterations: number, orgIdentifier: string, keys: KeysRequest) {\n        this.key = key;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n        this.orgIdentifier = orgIdentifier;\n        this.keys = keys;\n    }\n}\n","import { DeviceType } from '../../enums/deviceType';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class DeviceRequest {\n    type: DeviceType;\n    name: string;\n    identifier: string;\n    pushToken?: string;\n\n    constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n        this.type = platformUtilsService.getDevice();\n        this.name = platformUtilsService.getDeviceString();\n        this.identifier = appId;\n        this.pushToken = null;\n    }\n}\n","export class PreloginRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { CaptchaProtectedRequest } from './captchaProtectedRequest';\nimport { DeviceRequest } from './deviceRequest';\n\nimport { Utils } from '../../misc/utils';\n\nexport class TokenRequest implements CaptchaProtectedRequest {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    redirectUri: string;\n    clientId: string;\n    clientSecret: string;\n    device?: DeviceRequest;\n\n    constructor(credentials: string[], codes: string[], clientIdClientSecret: string[], public provider: TwoFactorProviderType,\n        public token: string, public remember: boolean, public captchaResponse: string, device?: DeviceRequest) {\n        if (credentials != null && credentials.length > 1) {\n            this.email = credentials[0];\n            this.masterPasswordHash = credentials[1];\n        } else if (codes != null && codes.length > 2) {\n            this.code = codes[0];\n            this.codeVerifier = codes[1];\n            this.redirectUri = codes[2];\n        } else if (clientIdClientSecret != null && clientIdClientSecret.length > 1) {\n            this.clientId = clientIdClientSecret[0];\n            this.clientSecret = clientIdClientSecret[1];\n        }\n        this.device = device != null ? device : null;\n    }\n\n    toIdentityToken(clientId: string) {\n        const obj: any = {\n            scope: 'api offline_access',\n            client_id: clientId,\n        };\n\n        if (this.clientSecret != null) {\n            obj.scope = clientId.startsWith('organization') ? 'api.organization' : 'api';\n            obj.grant_type = 'client_credentials';\n            obj.client_secret = this.clientSecret;\n        } else if (this.masterPasswordHash != null && this.email != null) {\n            obj.grant_type = 'password';\n            obj.username = this.email;\n            obj.password = this.masterPasswordHash;\n        } else if (this.code != null && this.codeVerifier != null && this.redirectUri != null) {\n            obj.grant_type = 'authorization_code';\n            obj.code = this.code;\n            obj.code_verifier = this.codeVerifier;\n            obj.redirect_uri = this.redirectUri;\n        } else {\n            throw new Error('must provide credentials or codes');\n        }\n\n        if (this.device) {\n            obj.deviceType = this.device.type;\n            obj.deviceIdentifier = this.device.identifier;\n            obj.deviceName = this.device.name;\n            // no push tokens for browser apps yet\n            // obj.devicePushToken = this.device.pushToken;\n        }\n\n        if (this.token && this.provider != null) {\n            obj.twoFactorToken = this.token;\n            obj.twoFactorProvider = this.provider;\n            obj.twoFactorRemember = this.remember ? '1' : '0';\n        }\n\n        if (this.captchaResponse != null) {\n            obj.captchaResponse = this.captchaResponse;\n        }\n\n\n        return obj;\n    }\n\n    alterIdentityTokenHeaders(headers: Headers) {\n        if (this.clientSecret == null && this.masterPasswordHash != null && this.email != null) {\n            headers.set('Auth-Email', Utils.fromUtf8ToUrlB64(this.email));\n        }\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nexport class WebAuthnIFrame {\n    private iframe: HTMLIFrameElement = null;\n    private connectorLink: HTMLAnchorElement;\n    private parseFunction = this.parseMessage.bind(this);\n\n    constructor(private win: Window, private webVaultUrl: string, private webAuthnNewTab: boolean,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private successCallback: Function, private errorCallback: Function, private infoCallback: Function) {\n        this.connectorLink = win.document.createElement('a');\n    }\n\n    init(data: any): void {\n        const params = new URLSearchParams({\n            data: this.base64Encode(JSON.stringify(data)),\n            parent: encodeURIComponent(this.win.document.location.href),\n            btnText: encodeURIComponent(this.i18nService.t('webAuthnAuthenticate')),\n            v: '1',\n        });\n\n        if (this.webAuthnNewTab) {\n            // Firefox fallback which opens the webauthn page in a new tab\n            params.append('locale', this.i18nService.translationLocale);\n            this.platformUtilsService.launchUri(`${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`);\n        } else {\n            this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n            this.iframe = this.win.document.getElementById('webauthn_iframe') as HTMLIFrameElement;\n            this.iframe.allow = 'publickey-credentials-get ' + new URL(this.webVaultUrl).origin;\n            this.iframe.src = this.connectorLink.href;\n\n            this.win.addEventListener('message', this.parseFunction, false);\n        }\n    }\n\n    stop() {\n        this.sendMessage('stop');\n    }\n\n    start() {\n        this.sendMessage('start');\n    }\n\n    sendMessage(message: any) {\n        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n            return;\n        }\n\n        this.iframe.contentWindow.postMessage(message, this.iframe.src);\n    }\n\n    base64Encode(str: string): string {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n    }\n\n    cleanup() {\n        this.win.removeEventListener('message', this.parseFunction, false);\n    }\n\n    private parseMessage(event: MessageEvent) {\n        if (!this.validMessage(event)) {\n            return;\n        }\n\n        const parts: string[] = event.data.split('|');\n        if (parts[0] === 'success' && this.successCallback) {\n            this.successCallback(parts[1]);\n        } else if (parts[0] === 'error' && this.errorCallback) {\n            this.errorCallback(parts[1]);\n        } else if (parts[0] === 'info' && this.infoCallback) {\n            this.infoCallback(parts[1]);\n        }\n    }\n\n    private validMessage(event: MessageEvent) {\n        if (event.origin == null || event.origin === '' || event.origin !== (this.connectorLink as any).origin ||\n            event.data == null || typeof (event.data) !== 'string') {\n            return false;\n        }\n\n        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||\n            event.data.indexOf('info|') === 0;\n    }\n}\n","import { Directive } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from './change-password.component';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { UpdateTempPasswordRequest } from 'jslib-common/models/request/updateTempPasswordRequest';\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n    hint: string;\n    key: string;\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n    showPassword: boolean = false;\n\n    onSuccessfulChangePassword: () => Promise<any>;\n\n    constructor(i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, policyService: PolicyService,\n        cryptoService: CryptoService, userService: UserService,\n        messagingService: MessagingService, private apiService: ApiService,\n        private syncService: SyncService, private logService: LogService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        await this.syncService.fullSync(true);\n        super.ngOnInit();\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    async setupSubmitActions(): Promise<boolean> {\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n        this.email = await this.userService.getEmail();\n        this.kdf = await this.userService.getKdf();\n        this.kdfIterations = await this.userService.getKdfIterations();\n        return true;\n    }\n\n    async submit() {\n        // Validation\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        if (!await this.setupSubmitActions()) {\n            return;\n        }\n\n        try {\n            // Create new key and hash new password\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.email.trim().toLowerCase(),\n                this.kdf, this.kdfIterations);\n            const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n            // Grab user's current enc key\n            const userEncKey = await this.cryptoService.getEncKey();\n\n            // Create new encKey for the User\n            const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n            await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        try {\n            // Create request\n            const request = new UpdateTempPasswordRequest();\n            request.key = encKey[1].encryptedString;\n            request.newMasterPasswordHash = masterPasswordHash;\n            request.masterPasswordHint = this.hint;\n\n            // Update user's password\n            this.formPromise = this.apiService.putUpdateTempPassword(request);\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('updatedMasterPassword'));\n\n            if (this.onSuccessfulChangePassword != null) {\n                this.onSuccessfulChangePassword();\n            } else {\n                this.messagingService.send('logout');\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n}\n","import { OrganizationUserResetPasswordRequest } from './organizationUserResetPasswordRequest';\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n    masterPasswordHint: string;\n}\n","export class VerifyEmailRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","export class VerifyDeleteRecoverRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class GroupRequest {\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","export class OrganizationUserConfirmRequest {\n    key: string;\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationUserInviteRequest {\n    emails: string[] = [];\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n    permissions: PermissionsApi;\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationUserUpdateRequest {\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n    permissions: PermissionsApi;\n}\n","export class OrganizationUserUpdateGroupsRequest {\n    groupIds: string[] = [];\n}\n","import { PolicyType } from '../../enums/policyType';\n\nexport class PolicyRequest {\n    type: PolicyType;\n    enabled: boolean;\n    data: any;\n}\n","import { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationUpdateRequest {\n    name: string;\n    identifier: string;\n    businessName: string;\n    billingEmail: string;\n    keys: OrganizationKeysRequest;\n}\n","export class OrganizationSubscriptionUpdateRequest {\n    constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) { }\n}\n","export enum TransactionType {\n    Charge = 0,\n    Credit = 1,\n    PromotionalCredit = 2,\n    ReferralCredit = 3,\n    Refund = 4,\n}\n","export class VerifyBankRequest {\n    amount1: number;\n    amount2: number;\n}\n","export class BitPayInvoiceRequest {\n    userId: string;\n    organizationId: string;\n    credit: boolean;\n    amount: number;\n    returnUrl: string;\n    name: string;\n    email: string;\n}\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { OrganizationTaxInfoUpdateRequest } from '../request/organizationTaxInfoUpdateRequest';\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n}\n","export class StorageRequest {\n    storageGbAdjustment: number;\n}\n","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n    integrationKey: string;\n    secretKey: string;\n    host: string;\n}\n","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n    type: TwoFactorProviderType;\n}\n","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n    token: string;\n    key: string;\n}\n","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n    token: string;\n    email: string;\n}\n","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n    id: number;\n}\n","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n    deviceResponse: PublicKeyCredential;\n    name: string;\n    id: number;\n}\n","import { SecretVerificationRequest } from './secretVerificationRequest';\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n}\n","import {\n    Directive,\n    EventEmitter,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserVerificationService } from 'jslib-common/abstractions/userVerification.service';\n\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\n@Directive()\nexport class ExportComponent implements OnInit {\n    @Output() onSaved = new EventEmitter();\n\n    formPromise: Promise<string>;\n    disabledByPolicy: boolean = false;\n\n    exportForm = this.fb.group({\n        format: ['json'],\n        secret: [''],\n    });\n\n    formatOptions = [\n        { name: '.json', value: 'json' },\n        { name: '.csv', value: 'csv' },\n        { name: '.json (Encrypted)', value: 'encrypted_json' },\n    ];\n\n    constructor(protected cryptoService: CryptoService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected exportService: ExportService,\n        protected eventService: EventService, private policyService: PolicyService, protected win: Window,\n        private logService: LogService, private userVerificationService: UserVerificationService,\n        private fb: FormBuilder) { }\n\n    async ngOnInit() {\n        await this.checkExportDisabled();\n    }\n\n    async checkExportDisabled() {\n        this.disabledByPolicy = await this.policyService.policyAppliesToUser(PolicyType.DisablePersonalVaultExport);\n        if (this.disabledByPolicy) {\n            this.exportForm.disable();\n        }\n    }\n\n    get encryptedFormat() {\n        return this.format === 'encrypted_json';\n    }\n\n    async submit() {\n        if (this.disabledByPolicy) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('personalVaultExportPolicyInEffect'));\n            return;\n        }\n\n        const acceptedWarning = await this.warningDialog();\n        if (!acceptedWarning) {\n            return;\n        }\n\n        const secret = this.exportForm.get('secret').value;\n        try {\n            await this.userVerificationService.verifyUser(secret);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), e.message);\n            return;\n        }\n\n        try {\n            this.formPromise = this.getExportData();\n            const data = await this.formPromise;\n            this.downloadFile(data);\n            this.saved();\n            await this.collectEvent();\n            this.exportForm.get('secret').setValue('');\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async warningDialog() {\n        if (this.encryptedFormat) {\n            return await this.platformUtilsService.showDialog(\n                '<p>' + this.i18nService.t('encExportKeyWarningDesc') +\n                '<p>' + this.i18nService.t('encExportAccountWarningDesc'),\n                this.i18nService.t('confirmVaultExport'), this.i18nService.t('exportVault'),\n                this.i18nService.t('cancel'), 'warning',\n                true);\n        } else {\n            return await this.platformUtilsService.showDialog(\n                this.i18nService.t('exportWarningDesc'),\n                this.i18nService.t('confirmVaultExport'), this.i18nService.t('exportVault'),\n                this.i18nService.t('cancel'), 'warning');\n        }\n    }\n\n    protected saved() {\n        this.onSaved.emit();\n    }\n\n    protected getExportData() {\n        return this.exportService.getExport(this.format);\n    }\n\n    protected getFileName(prefix?: string) {\n        let extension = this.format;\n        if (this.format === 'encrypted_json') {\n            if (prefix == null) {\n                prefix = 'encrypted';\n            } else {\n                prefix = 'encrypted_' + prefix;\n            }\n            extension = 'json';\n        }\n        return this.exportService.getFileName(prefix, extension);\n    }\n\n    protected async collectEvent(): Promise<any> {\n        await this.eventService.collect(EventType.User_ClientExportedVault);\n    }\n\n    get format() {\n        return this.exportForm.get('format').value;\n    }\n\n    private downloadFile(csv: string): void {\n        const fileName = this.getFileName();\n        this.platformUtilsService.saveFile(this.win, csv, { type: 'text/plain' }, fileName);\n    }\n}\n","import { View } from './view';\n\nimport { Attachment } from '../domain/attachment';\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\n\nexport class AttachmentView implements View {\n    id: string = null;\n    url: string = null;\n    size: string = null;\n    sizeName: string = null;\n    fileName: string = null;\n    key: SymmetricCryptoKey = null;\n\n    constructor(a?: Attachment) {\n        if (!a) {\n            return;\n        }\n\n        this.id = a.id;\n        this.url = a.url;\n        this.size = a.size;\n        this.sizeName = a.sizeName;\n    }\n\n    get fileSize(): number {\n        try {\n            if (this.size != null) {\n                return parseInt(this.size, null);\n            }\n        } catch {\n            // Invalid file size.\n        }\n        return 0;\n    }\n}\n","export class AttachmentRequest {\n    fileName: string;\n    key: string;\n    fileSize: number;\n    adminRequest: boolean;\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SecureNoteType } from 'jslib-common/enums/secureNoteType';\nimport { UriMatchType } from 'jslib-common/enums/uriMatchType';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CardView } from 'jslib-common/models/view/cardView';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\nimport { FolderView } from 'jslib-common/models/view/folderView';\nimport { IdentityView } from 'jslib-common/models/view/identityView';\nimport { LoginUriView } from 'jslib-common/models/view/loginUriView';\nimport { LoginView } from 'jslib-common/models/view/loginView';\nimport { SecureNoteView } from 'jslib-common/models/view/secureNoteView';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n    @Input() cloneMode: boolean = false;\n    @Input() folderId: string = null;\n    @Input() cipherId: string;\n    @Input() type: CipherType;\n    @Input() collectionIds: string[];\n    @Input() organizationId: string = null;\n    @Output() onSavedCipher = new EventEmitter<CipherView>();\n    @Output() onDeletedCipher = new EventEmitter<CipherView>();\n    @Output() onRestoredCipher = new EventEmitter<CipherView>();\n    @Output() onCancelled = new EventEmitter<CipherView>();\n    @Output() onEditAttachments = new EventEmitter<CipherView>();\n    @Output() onShareCipher = new EventEmitter<CipherView>();\n    @Output() onEditCollections = new EventEmitter<CipherView>();\n    @Output() onGeneratePassword = new EventEmitter();\n\n    editMode: boolean = false;\n    cipher: CipherView;\n    folders: FolderView[];\n    collections: CollectionView[] = [];\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    restorePromise: Promise<any>;\n    checkPasswordPromise: Promise<number>;\n    showPassword: boolean = false;\n    showCardNumber: boolean = false;\n    showCardCode: boolean = false;\n    cipherType = CipherType;\n    typeOptions: any[];\n    cardBrandOptions: any[];\n    cardExpMonthOptions: any[];\n    identityTitleOptions: any[];\n    uriMatchOptions: any[];\n    ownershipOptions: any[] = [];\n    autofillOnPageLoadOptions: any[];\n    currentDate = new Date();\n    allowPersonal = true;\n    reprompt: boolean = false;\n    canUseReprompt: boolean = true;\n\n    protected writeableCollections: CollectionView[];\n    private previousCipherId: string;\n\n    constructor(protected cipherService: CipherService, protected folderService: FolderService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected auditService: AuditService, protected stateService: StateService,\n        protected userService: UserService, protected collectionService: CollectionService,\n        protected messagingService: MessagingService, protected eventService: EventService,\n        protected policyService: PolicyService, protected passwordRepromptService: PasswordRepromptService,\n        private logService: LogService) {\n        this.typeOptions = [\n            { name: i18nService.t('typeLogin'), value: CipherType.Login },\n            { name: i18nService.t('typeCard'), value: CipherType.Card },\n            { name: i18nService.t('typeIdentity'), value: CipherType.Identity },\n            { name: i18nService.t('typeSecureNote'), value: CipherType.SecureNote },\n        ];\n        this.cardBrandOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: 'Visa', value: 'Visa' },\n            { name: 'Mastercard', value: 'Mastercard' },\n            { name: 'American Express', value: 'Amex' },\n            { name: 'Discover', value: 'Discover' },\n            { name: 'Diners Club', value: 'Diners Club' },\n            { name: 'JCB', value: 'JCB' },\n            { name: 'Maestro', value: 'Maestro' },\n            { name: 'UnionPay', value: 'UnionPay' },\n            { name: i18nService.t('other'), value: 'Other' },\n        ];\n        this.cardExpMonthOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: '01 - ' + i18nService.t('january'), value: '1' },\n            { name: '02 - ' + i18nService.t('february'), value: '2' },\n            { name: '03 - ' + i18nService.t('march'), value: '3' },\n            { name: '04 - ' + i18nService.t('april'), value: '4' },\n            { name: '05 - ' + i18nService.t('may'), value: '5' },\n            { name: '06 - ' + i18nService.t('june'), value: '6' },\n            { name: '07 - ' + i18nService.t('july'), value: '7' },\n            { name: '08 - ' + i18nService.t('august'), value: '8' },\n            { name: '09 - ' + i18nService.t('september'), value: '9' },\n            { name: '10 - ' + i18nService.t('october'), value: '10' },\n            { name: '11 - ' + i18nService.t('november'), value: '11' },\n            { name: '12 - ' + i18nService.t('december'), value: '12' },\n        ];\n        this.identityTitleOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('mr'), value: i18nService.t('mr') },\n            { name: i18nService.t('mrs'), value: i18nService.t('mrs') },\n            { name: i18nService.t('ms'), value: i18nService.t('ms') },\n            { name: i18nService.t('dr'), value: i18nService.t('dr') },\n        ];\n        this.uriMatchOptions = [\n            { name: i18nService.t('defaultMatchDetection'), value: null },\n            { name: i18nService.t('baseDomain'), value: UriMatchType.Domain },\n            { name: i18nService.t('host'), value: UriMatchType.Host },\n            { name: i18nService.t('startsWith'), value: UriMatchType.StartsWith },\n            { name: i18nService.t('regEx'), value: UriMatchType.RegularExpression },\n            { name: i18nService.t('exact'), value: UriMatchType.Exact },\n            { name: i18nService.t('never'), value: UriMatchType.Never },\n        ];\n        this.autofillOnPageLoadOptions = [\n            { name: i18nService.t('autoFillOnPageLoadUseDefault'), value: null },\n            { name: i18nService.t('autoFillOnPageLoadYes'), value: true },\n            { name: i18nService.t('autoFillOnPageLoadNo'), value: false },\n        ];\n    }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async init() {\n        if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n            this.allowPersonal = false;\n        } else {\n            const myEmail = await this.userService.getEmail();\n            this.ownershipOptions.push({ name: myEmail, value: null });\n        }\n\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name')).forEach(o => {\n            if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n                this.ownershipOptions.push({ name: o.name, value: o.id });\n            }\n        });\n        if (!this.allowPersonal) {\n            this.organizationId = this.ownershipOptions[0].value;\n        }\n\n        this.writeableCollections = await this.loadCollections();\n\n        this.canUseReprompt = await this.passwordRepromptService.enabled();\n    }\n\n    async load() {\n        this.editMode = this.cipherId != null;\n        if (this.editMode) {\n            this.editMode = true;\n            if (this.cloneMode) {\n                this.cloneMode = true;\n                this.title = this.i18nService.t('addItem');\n            } else {\n                this.title = this.i18nService.t('editItem');\n            }\n        } else {\n            this.title = this.i18nService.t('addItem');\n        }\n\n        const addEditCipherInfo: any = await this.stateService.get<any>('addEditCipherInfo');\n        if (addEditCipherInfo != null) {\n            this.cipher = addEditCipherInfo.cipher;\n            this.collectionIds = addEditCipherInfo.collectionIds;\n        }\n        await this.stateService.remove('addEditCipherInfo');\n\n        if (this.cipher == null) {\n            if (this.editMode) {\n                const cipher = await this.loadCipher();\n                this.cipher = await cipher.decrypt();\n\n                // Adjust Cipher Name if Cloning\n                if (this.cloneMode) {\n                    this.cipher.name += ' - ' + this.i18nService.t('clone');\n                    // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n                    if (this.cipher.organizationId == null && !this.allowPersonal) {\n                        this.cipher.organizationId = this.organizationId;\n                    }\n                }\n            } else {\n                this.cipher = new CipherView();\n                this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n                this.cipher.folderId = this.folderId;\n                this.cipher.type = this.type == null ? CipherType.Login : this.type;\n                this.cipher.login = new LoginView();\n                this.cipher.login.uris = [new LoginUriView()];\n                this.cipher.card = new CardView();\n                this.cipher.identity = new IdentityView();\n                this.cipher.secureNote = new SecureNoteView();\n                this.cipher.secureNote.type = SecureNoteType.Generic;\n                this.cipher.reprompt = CipherRepromptType.None;\n            }\n        }\n\n        if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n            await this.organizationChanged();\n            if (this.collectionIds != null && this.collectionIds.length > 0 && this.collections.length > 0) {\n                this.collections.forEach(c => {\n                    if (this.collectionIds.indexOf(c.id) > -1) {\n                        (c as any).checked = true;\n                    }\n                });\n            }\n        }\n\n        this.folders = await this.folderService.getAllDecrypted();\n\n        if (this.editMode && this.previousCipherId !== this.cipherId) {\n            this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n        }\n        this.previousCipherId = this.cipherId;\n        this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.cipher.isDeleted) {\n            return this.restore();\n        }\n\n        if (this.cipher.name == null || this.cipher.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        if ((!this.editMode || this.cloneMode) && !this.allowPersonal && this.cipher.organizationId == null) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('personalOwnershipSubmitError'));\n            return false;\n        }\n\n        if ((!this.editMode || this.cloneMode) && this.cipher.type === CipherType.Login &&\n            this.cipher.login.uris != null && this.cipher.login.uris.length === 1 &&\n            (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === '')) {\n            this.cipher.login.uris = null;\n        }\n\n        // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n        if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n            this.cipher.collectionIds = this.collections == null ? [] :\n                this.collections.filter(c => (c as any).checked).map(c => c.id);\n        }\n\n        // Clear current Cipher Id to trigger \"Add\" cipher flow\n        if (this.cloneMode) {\n            this.cipher.id = null;\n        }\n\n        const cipher = await this.encryptCipher();\n        try {\n            this.formPromise = this.saveCipher(cipher);\n            await this.formPromise;\n            this.cipher.id = cipher.id;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode && !this.cloneMode ? 'editedItem' : 'addedItem'));\n            this.onSavedCipher.emit(this.cipher);\n            this.messagingService.send(this.editMode && !this.cloneMode ? 'editedCipher' : 'addedCipher');\n            return true;\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        return false;\n    }\n\n    addUri() {\n        if (this.cipher.type !== CipherType.Login) {\n            return;\n        }\n\n        if (this.cipher.login.uris == null) {\n            this.cipher.login.uris = [];\n        }\n\n        this.cipher.login.uris.push(new LoginUriView());\n    }\n\n    removeUri(uri: LoginUriView) {\n        if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n            return;\n        }\n\n        const i = this.cipher.login.uris.indexOf(uri);\n        if (i > -1) {\n            this.cipher.login.uris.splice(i, 1);\n        }\n    }\n\n    trackByFunction(index: number, item: any) {\n        return index;\n    }\n\n    cancel() {\n        this.onCancelled.emit(this.cipher);\n    }\n\n    attachments() {\n        this.onEditAttachments.emit(this.cipher);\n    }\n\n    share() {\n        this.onShareCipher.emit(this.cipher);\n    }\n\n    editCollections() {\n        this.onEditCollections.emit(this.cipher);\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\n            this.i18nService.t('deleteItem'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.deleteCipher();\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeletedItem' : 'deletedItem'));\n            this.onDeletedCipher.emit(this.cipher);\n            this.messagingService.send(this.cipher.isDeleted ? 'permanentlyDeletedCipher' : 'deletedCipher');\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        return true;\n    }\n\n    async restore(): Promise<boolean> {\n        if (!this.cipher.isDeleted) {\n            return false;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('restoreItemConfirmation'), this.i18nService.t('restoreItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.restorePromise = this.restoreCipher();\n            await this.restorePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('restoredItem'));\n            this.onRestoredCipher.emit(this.cipher);\n            this.messagingService.send('restoredCipher');\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        return true;\n    }\n\n    async generatePassword(): Promise<boolean> {\n        if (this.cipher.login != null && this.cipher.login.password != null && this.cipher.login.password.length) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('overwritePasswordConfirmation'), this.i18nService.t('overwritePassword'),\n                this.i18nService.t('yes'), this.i18nService.t('no'));\n            if (!confirmed) {\n                return false;\n            }\n        }\n\n        this.onGeneratePassword.emit();\n        return true;\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('loginPassword').focus();\n        if (this.editMode && this.showPassword) {\n            this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n        }\n    }\n\n    async toggleCardNumber() {\n        this.showCardNumber = !this.showCardNumber;\n        if (this.showCardNumber) {\n            this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n        }\n    }\n\n    toggleCardCode() {\n        this.showCardCode = !this.showCardCode;\n        document.getElementById('cardCode').focus();\n        if (this.editMode && this.showCardCode) {\n            this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n        }\n    }\n\n    toggleUriOptions(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n    }\n\n    loginUriMatchChanged(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null ? true : u.showOptions;\n    }\n\n    async organizationChanged() {\n        if (this.writeableCollections != null) {\n            this.writeableCollections.forEach(c => (c as any).checked = false);\n        }\n        if (this.cipher.organizationId != null) {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.cipher.organizationId);\n            const org = await this.userService.getOrganization(this.cipher.organizationId);\n            if (org != null) {\n                this.cipher.organizationUseTotp = org.useTotp;\n            }\n        } else {\n            this.collections = [];\n        }\n    }\n\n    async checkPassword() {\n        if (this.checkPasswordPromise != null) {\n            return;\n        }\n\n        if (this.cipher.login == null || this.cipher.login.password == null || this.cipher.login.password === '') {\n            return;\n        }\n\n        this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n        const matches = await this.checkPasswordPromise;\n        this.checkPasswordPromise = null;\n\n        if (matches > 0) {\n            this.platformUtilsService.showToast('warning', null,\n                this.i18nService.t('passwordExposed', matches.toString()));\n        } else {\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('passwordSafe'));\n        }\n    }\n\n    repromptChanged() {\n        this.reprompt = !this.reprompt;\n        if (this.reprompt) {\n            this.cipher.reprompt = CipherRepromptType.Password;\n        } else {\n            this.cipher.reprompt = CipherRepromptType.None;\n        }\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter(c => !c.readOnly);\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected encryptCipher() {\n        return this.cipherService.encrypt(this.cipher);\n    }\n\n    protected saveCipher(cipher: Cipher) {\n        return this.cipherService.saveWithServer(cipher);\n    }\n\n    protected deleteCipher() {\n        return this.cipher.isDeleted ? this.cipherService.deleteWithServer(this.cipher.id)\n            : this.cipherService.softDeleteWithServer(this.cipher.id);\n    }\n\n    protected restoreCipher() {\n        return this.cipherService.restoreWithServer(this.cipher.id);\n    }\n}\n","import {\n    Directive,\n    Input,\n    OnChanges,\n    SimpleChanges,\n} from '@angular/core';\n\nimport {\n    CdkDragDrop,\n    moveItemInArray,\n} from '@angular/cdk/drag-drop';\n\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { FieldView } from 'jslib-common/models/view/fieldView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { FieldType } from 'jslib-common/enums/fieldType';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n    @Input() cipher: CipherView;\n    @Input() thisCipherType: CipherType;\n    @Input() editMode: boolean;\n\n    addFieldType: FieldType = FieldType.Text;\n    addFieldTypeOptions: any[];\n    addFieldLinkedTypeOption: any;\n    linkedFieldOptions: any[] = [];\n\n    cipherType = CipherType;\n    fieldType = FieldType;\n    eventType = EventType;\n\n    constructor(private i18nService: I18nService, private eventService: EventService) {\n        this.addFieldTypeOptions = [\n            { name: i18nService.t('cfTypeText'), value: FieldType.Text },\n            { name: i18nService.t('cfTypeHidden'), value: FieldType.Hidden },\n            { name: i18nService.t('cfTypeBoolean'), value: FieldType.Boolean },\n        ];\n        this.addFieldLinkedTypeOption = { name: this.i18nService.t('cfTypeLinked'), value: FieldType.Linked };\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.thisCipherType != null) {\n            this.setLinkedFieldOptions();\n\n            if (!changes.thisCipherType.firstChange) {\n                this.resetCipherLinkedFields();\n            }\n        }\n    }\n\n    addField() {\n        if (this.cipher.fields == null) {\n            this.cipher.fields = [];\n        }\n\n        const f = new FieldView();\n        f.type = this.addFieldType;\n        f.newField = true;\n\n        if (f.type === FieldType.Linked) {\n            f.linkedId = this.linkedFieldOptions[0].value;\n        }\n\n        this.cipher.fields.push(f);\n    }\n\n    removeField(field: FieldView) {\n        const i = this.cipher.fields.indexOf(field);\n        if (i > -1) {\n            this.cipher.fields.splice(i, 1);\n        }\n    }\n\n    toggleFieldValue(field: FieldView) {\n        const f = (field as any);\n        f.showValue = !f.showValue;\n        if (this.editMode && f.showValue) {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n        }\n    }\n\n    trackByFunction(index: number, item: any) {\n        return index;\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n    }\n\n    private setLinkedFieldOptions() {\n        if (this.cipher.linkedFieldOptions == null) {\n            return;\n        }\n\n        const options: any = [];\n        this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n            options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id }));\n        this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, 'name'));\n    }\n\n    private resetCipherLinkedFields() {\n        if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n            return;\n        }\n\n        // Delete any Linked custom fields if the item type does not support them\n        if (this.cipher.linkedFieldOptions == null) {\n            this.cipher.fields = this.cipher.fields.filter(f => f.type !== FieldType.Linked);\n            return;\n        }\n\n        this.cipher.fields\n            .filter(f => f.type === FieldType.Linked)\n            .forEach(f => f.linkedId = this.linkedFieldOptions[0].value);\n    }\n}\n","import { PlanSponsorshipType } from '../../../enums/planSponsorshipType';\n\nexport class OrganizationSponsorshipRedeemRequest {\n    planSponsorshipType: PlanSponsorshipType;\n    sponsoredOrganizationId: string;\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { SearchService } from 'jslib-common/abstractions/search.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Directive()\nexport class CiphersComponent {\n    @Input() activeCipherId: string = null;\n    @Output() onCipherClicked = new EventEmitter<CipherView>();\n    @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n    @Output() onAddCipher = new EventEmitter();\n    @Output() onAddCipherOptions = new EventEmitter();\n\n    loaded: boolean = false;\n    ciphers: CipherView[] = [];\n    searchText: string;\n    searchPlaceholder: string = null;\n    filter: (cipher: CipherView) => boolean = null;\n    deleted: boolean = false;\n\n    protected searchPending = false;\n\n    private searchTimeout: any = null;\n\n    constructor(protected searchService: SearchService) { }\n\n    async load(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n        this.deleted = deleted || false;\n        await this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    async reload(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n        this.loaded = false;\n        this.ciphers = [];\n        await this.load(filter, deleted);\n    }\n\n    async refresh() {\n        await this.reload(this.filter, this.deleted);\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        this.filter = filter;\n        await this.search(null);\n    }\n\n    async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n        this.searchPending = false;\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout);\n        }\n        if (timeout == null) {\n            await this.doSearch(indexedCiphers);\n            return;\n        }\n        this.searchPending = true;\n        this.searchTimeout = setTimeout(async () => {\n            await this.doSearch(indexedCiphers);\n            this.searchPending = false;\n        }, timeout);\n    }\n\n    selectCipher(cipher: CipherView) {\n        this.onCipherClicked.emit(cipher);\n    }\n\n    rightClickCipher(cipher: CipherView) {\n        this.onCipherRightClicked.emit(cipher);\n    }\n\n    addCipher() {\n        this.onAddCipher.emit();\n    }\n\n    addCipherOptions() {\n        this.onAddCipherOptions.emit();\n    }\n\n    isSearching() {\n        return !this.searchPending && this.searchService.isSearchable(this.searchText);\n    }\n\n    protected deletedFilter: (cipher: CipherView) => boolean = c => c.isDeleted === this.deleted;\n\n    protected async doSearch(indexedCiphers?: CipherView[]) {\n        this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, this.deletedFilter], indexedCiphers);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() allowSelectNone = false;\n    @Output() onSavedCollections = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collectionIds: string[];\n    collections: CollectionView[] = [];\n\n    protected cipherDomain: Cipher;\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected cipherService: CipherService, private logService: LogService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        this.cipherDomain = await this.loadCipher();\n        this.collectionIds = this.loadCipherCollections();\n        this.cipher = await this.cipherDomain.decrypt();\n        this.collections = await this.loadCollections();\n\n        this.collections.forEach(c => (c as any).checked = false);\n        if (this.collectionIds != null) {\n            this.collections.forEach(c => {\n                (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n            });\n        }\n    }\n\n    async submit() {\n        const selectedCollectionIds = this.collections\n            .filter(c => !!(c as any).checked)\n            .map(c => c.id);\n        if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n        this.cipherDomain.collectionIds = selectedCollectionIds;\n        try {\n            this.formPromise = this.saveCollections();\n            await this.formPromise;\n            this.onSavedCollections.emit();\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('editedItem'));\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected loadCipherCollections() {\n        return this.cipherDomain.collectionIds;\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter(c => !c.readOnly && c.organizationId === this.cipher.organizationId);\n    }\n\n    protected saveCollections() {\n        return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\nimport { TreeNode } from 'jslib-common/models/domain/treeNode';\n\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\n@Directive()\nexport class GroupingsComponent {\n    @Input() showFolders = true;\n    @Input() showCollections = true;\n    @Input() showFavorites = true;\n    @Input() showTrash = true;\n\n    @Output() onAllClicked = new EventEmitter();\n    @Output() onFavoritesClicked = new EventEmitter();\n    @Output() onTrashClicked = new EventEmitter();\n    @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n    @Output() onFolderClicked = new EventEmitter<FolderView>();\n    @Output() onAddFolder = new EventEmitter();\n    @Output() onEditFolder = new EventEmitter<FolderView>();\n    @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n    folders: FolderView[];\n    nestedFolders: TreeNode<FolderView>[];\n    collections: CollectionView[];\n    nestedCollections: TreeNode<CollectionView>[];\n    loaded: boolean = false;\n    cipherType = CipherType;\n    selectedAll: boolean = false;\n    selectedFavorites: boolean = false;\n    selectedTrash: boolean = false;\n    selectedType: CipherType = null;\n    selectedFolder: boolean = false;\n    selectedFolderId: string = null;\n    selectedCollectionId: string = null;\n\n    private collapsedGroupings: Set<string>;\n    private collapsedGroupingsKey: string;\n\n    constructor(protected collectionService: CollectionService, protected folderService: FolderService,\n        protected storageService: StorageService, protected userService: UserService) { }\n\n    async load(setLoaded = true) {\n        const userId = await this.userService.getUserId();\n        this.collapsedGroupingsKey = ConstantsService.collapsedGroupingsKey + '_' + userId;\n        const collapsedGroupings = await this.storageService.get<string[]>(this.collapsedGroupingsKey);\n        if (collapsedGroupings == null) {\n            this.collapsedGroupings = new Set<string>();\n        } else {\n            this.collapsedGroupings = new Set(collapsedGroupings);\n        }\n\n        await this.loadFolders();\n        await this.loadCollections();\n\n        if (setLoaded) {\n            this.loaded = true;\n        }\n    }\n\n    async loadCollections(organizationId?: string) {\n        if (!this.showCollections) {\n            return;\n        }\n        const collections = await this.collectionService.getAllDecrypted();\n        if (organizationId != null) {\n            this.collections = collections.filter(c => c.organizationId === organizationId);\n        } else {\n            this.collections = collections;\n        }\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    async loadFolders() {\n        if (!this.showFolders) {\n            return;\n        }\n        this.folders = await this.folderService.getAllDecrypted();\n        this.nestedFolders = await this.folderService.getAllNested();\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.onAllClicked.emit();\n    }\n\n    selectFavorites() {\n        this.clearSelections();\n        this.selectedFavorites = true;\n        this.onFavoritesClicked.emit();\n    }\n\n    selectTrash() {\n        this.clearSelections();\n        this.selectedTrash = true;\n        this.onTrashClicked.emit();\n    }\n\n    selectType(type: CipherType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.onCipherTypeClicked.emit(type);\n    }\n\n    selectFolder(folder: FolderView) {\n        this.clearSelections();\n        this.selectedFolder = true;\n        this.selectedFolderId = folder.id;\n        this.onFolderClicked.emit(folder);\n    }\n\n    addFolder() {\n        this.onAddFolder.emit();\n    }\n\n    editFolder(folder: FolderView) {\n        this.onEditFolder.emit(folder);\n    }\n\n    selectCollection(collection: CollectionView) {\n        this.clearSelections();\n        this.selectedCollectionId = collection.id;\n        this.onCollectionClicked.emit(collection);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedFavorites = false;\n        this.selectedTrash = false;\n        this.selectedType = null;\n        this.selectedFolder = false;\n        this.selectedFolderId = null;\n        this.selectedCollectionId = null;\n    }\n\n    collapse(grouping: FolderView | CollectionView, idPrefix = '') {\n        if (grouping.id == null) {\n            return;\n        }\n        const id = idPrefix + grouping.id;\n        if (this.isCollapsed(grouping, idPrefix)) {\n            this.collapsedGroupings.delete(id);\n        } else {\n            this.collapsedGroupings.add(id);\n        }\n        this.storageService.save(this.collapsedGroupingsKey, this.collapsedGroupings);\n    }\n\n    isCollapsed(grouping: FolderView | CollectionView, idPrefix = '') {\n        return this.collapsedGroupings.has(idPrefix + grouping.id);\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendAccessResponse } from '../response/sendAccessResponse';\n\nimport { SendAccessView } from '../view/sendAccessView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SendFile } from './sendFile';\nimport { SendText } from './sendText';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class SendAccess extends Domain {\n    id: string;\n    type: SendType;\n    name: EncString;\n    file: SendFile;\n    text: SendText;\n    expirationDate: Date;\n    creatorIdentifier: string;\n\n    constructor(obj?: SendAccessResponse, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n            expirationDate: null,\n            creatorIdentifier: null,\n        }, alreadyEncrypted, ['id', 'expirationDate', 'creatorIdentifier']);\n\n        this.type = obj.type;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendText(obj.text, alreadyEncrypted);\n                break;\n            case SendType.File:\n                this.file = new SendFile(obj.file, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n    }\n\n    async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n        const model = new SendAccessView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n        }, null, key);\n\n        switch (this.type) {\n            case SendType.File:\n                model.file = await this.file.decrypt(key);\n                break;\n            case SendType.Text:\n                model.text = await this.text.decrypt(key);\n                break;\n            default:\n                break;\n        }\n\n        return model;\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendAccess } from '../domain/sendAccess';\n\nimport { SendFileView } from './sendFileView';\nimport { SendTextView } from './sendTextView';\nimport { View } from './view';\n\nexport class SendAccessView implements View {\n    id: string = null;\n    name: string = null;\n    type: SendType = null;\n    text = new SendTextView();\n    file = new SendFileView();\n    expirationDate: Date = null;\n    creatorIdentifier: string = null;\n\n    constructor(s?: SendAccess) {\n        if (!s) {\n            return;\n        }\n\n        this.id = s.id;\n        this.type = s.type;\n        this.expirationDate = s.expirationDate;\n        this.creatorIdentifier = s.creatorIdentifier;\n    }\n}\n","export class SendAccessRequest {\n    password: string;\n}\n","import { DatePipe } from '@angular/common';\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SendType } from 'jslib-common/enums/sendType';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { SendFileView } from 'jslib-common/models/view/sendFileView';\nimport { SendTextView } from 'jslib-common/models/view/sendTextView';\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { EncArrayBuffer } from 'jslib-common/models/domain/encArrayBuffer';\nimport { Send } from 'jslib-common/models/domain/send';\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n    @Input() sendId: string;\n    @Input() type: SendType;\n\n    @Output() onSavedSend = new EventEmitter<SendView>();\n    @Output() onDeletedSend = new EventEmitter<SendView>();\n    @Output() onCancelled = new EventEmitter<SendView>();\n\n    copyLink = false;\n    disableSend = false;\n    disableHideEmail = false;\n    send: SendView;\n    deletionDate: string;\n    expirationDate: string;\n    hasPassword: boolean;\n    password: string;\n    showPassword = false;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    sendType = SendType;\n    typeOptions: any[];\n    canAccessPremium = true;\n    emailVerified = true;\n    alertShown = false;\n    showOptions = false;\n\n    private sendLinkBaseUrl: string;\n\n    constructor(protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected environmentService: EnvironmentService, protected datePipe: DatePipe,\n        protected sendService: SendService, protected userService: UserService,\n        protected messagingService: MessagingService, protected policyService: PolicyService,\n        private logService: LogService) {\n        this.typeOptions = [\n            { name: i18nService.t('sendTypeFile'), value: SendType.File },\n            { name: i18nService.t('sendTypeText'), value: SendType.Text },\n        ];\n        this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n    }\n\n    get link(): string {\n        if (this.send.id != null && this.send.accessId != null) {\n            return this.sendLinkBaseUrl + this.send.accessId + '/' + this.send.urlB64Key;\n        }\n        return null;\n    }\n\n    get isSafari() {\n        return this.platformUtilsService.isSafari();\n    }\n\n    get isDateTimeLocalSupported(): boolean {\n        return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n    }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    get editMode(): boolean {\n        return this.sendId != null;\n    }\n\n    get title(): string {\n        return this.i18nService.t(\n            this.editMode ?\n                'editSend' :\n                'createSend'\n        );\n    }\n\n    setDates(event: {deletionDate: string, expirationDate: string}) {\n        this.deletionDate = event.deletionDate;\n        this.expirationDate = event.expirationDate;\n    }\n\n    async load() {\n        this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n        this.disableHideEmail = await this.policyService.policyAppliesToUser(PolicyType.SendOptions,\n            p => p.data.disableHideEmail);\n\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        this.emailVerified = await this.userService.getEmailVerified();\n        if (!this.canAccessPremium || !this.emailVerified) {\n            this.type = SendType.Text;\n        }\n\n        if (this.send == null) {\n            if (this.editMode) {\n                const send = await this.loadSend();\n                this.send = await send.decrypt();\n            } else {\n                this.send = new SendView();\n                this.send.type = this.type == null ? SendType.File : this.type;\n                this.send.file = new SendFileView();\n                this.send.text = new SendTextView();\n                this.send.deletionDate = new Date();\n                this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n            }\n        }\n\n        this.hasPassword = this.send.password != null && this.send.password.trim() !== '';\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.disableSend) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('sendDisabledWarning'));\n            return false;\n        }\n\n        if (this.send.name == null || this.send.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        let file: File = null;\n        if (this.send.type === SendType.File && !this.editMode) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            const files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n\n            file = files[0];\n            if (files[0].size > 524288000) { // 500 MB\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('maxFileSize'));\n                return;\n            }\n        }\n\n        if (this.password != null && this.password.trim() === '') {\n            this.password = null;\n        }\n\n        this.formPromise = this.encryptSend(file)\n            .then(async encSend => {\n                const uploadPromise = this.sendService.saveWithServer(encSend);\n                await uploadPromise;\n                if (this.send.id == null) {\n                    this.send.id = encSend[0].id;\n                }\n                if (this.send.accessId == null) {\n                    this.send.accessId = encSend[0].accessId;\n                }\n                this.onSavedSend.emit(this.send);\n                if (this.copyLink && this.link != null) {\n                    const copySuccess = await this.copyLinkToClipboard(this.link);\n                    if (copySuccess ?? true) {\n                        this.platformUtilsService.showToast('success', null,\n                            this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'));\n                    } else {\n                        await this.platformUtilsService.showDialog(\n                            this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'), null,\n                            this.i18nService.t('ok'), null, 'success', null);\n                        await this.copyLinkToClipboard(this.link);\n                    }\n                }\n            });\n        try {\n            await this.formPromise;\n            return true;\n        } catch (e) {\n            this.logService.error(e);\n        }\n        return false;\n    }\n\n    async copyLinkToClipboard(link: string): Promise<void | boolean> {\n        return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n    }\n\n    async delete(): Promise<boolean> {\n        if (this.deletePromise != null) {\n            return false;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteSendConfirmation'),\n            this.i18nService.t('deleteSend'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));\n            await this.load();\n            this.onDeletedSend.emit(this.send);\n            return true;\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        return false;\n    }\n\n    typeChanged() {\n        if (this.send.type === SendType.File && !this.alertShown) {\n            if (!this.canAccessPremium) {\n                this.alertShown = true;\n                this.messagingService.send('premiumRequired');\n            } else if (!this.emailVerified) {\n                this.alertShown = true;\n                this.messagingService.send('emailVerificationRequired');\n            }\n        }\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    protected async loadSend(): Promise<Send> {\n        return this.sendService.get(this.sendId);\n    }\n\n    protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n        const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n        // Parse dates\n        try {\n            sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n        } catch {\n            sendData[0].deletionDate = null;\n        }\n        try {\n            sendData[0].expirationDate = this.expirationDate == null ? null : new Date(this.expirationDate);\n        } catch {\n            sendData[0].expirationDate = null;\n        }\n\n        return sendData;\n    }\n\n    protected togglePasswordVisible() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('password').focus();\n    }\n}\n","import { DatePipe } from '@angular/common';\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n    // Native datetime-locale.\n    // We are happy.\n    Default = 'default',\n\n    // Native date and time inputs, but no datetime-locale.\n    // We use individual date and time inputs and create a datetime programatically on submit.\n    Firefox = 'firefox',\n\n    // No native date, time, or datetime-locale inputs.\n    // We use a polyfill for dates and a dropdown for times.\n    Safari = 'safari',\n}\n\nenum DateField {\n    DeletionDate = 'deletion',\n    ExpriationDate = 'expiration',\n}\n\n// Value = hours\nenum DatePreset {\n    OneHour = 1,\n    OneDay = 24,\n    TwoDays = 48,\n    ThreeDays = 72,\n    SevenDays = 168,\n    ThirtyDays = 720,\n    Custom = 0,\n    Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n    twelveHour: string;\n    twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n    @Input() readonly initialDeletionDate: Date;\n    @Input() readonly initialExpirationDate: Date;\n    @Input() readonly editMode: boolean;\n    @Input() readonly disabled: boolean;\n\n    @Output() datesChanged = new EventEmitter<{deletionDate: string, expirationDate: string}>();\n\n    get browserPath(): BrowserPath {\n        if (this.platformUtilsService.isFirefox()) {\n            return BrowserPath.Firefox;\n        } else if (this.platformUtilsService.isSafari()) {\n            return BrowserPath.Safari;\n        }\n        return BrowserPath.Default;\n    }\n\n    datesForm = new FormGroup({\n        selectedDeletionDatePreset: new FormControl(),\n        selectedExpirationDatePreset: new FormControl(),\n        defaultDeletionDateTime: new FormControl(),\n        defaultExpirationDateTime: new FormControl(),\n        fallbackDeletionDate: new FormControl(),\n        fallbackDeletionTime: new FormControl(),\n        fallbackExpirationDate: new FormControl(),\n        fallbackExpirationTime: new FormControl(),\n    });\n\n    deletionDatePresets: any[] = [\n            { name: this.i18nService.t('oneHour'), value: DatePreset.OneHour },\n            { name: this.i18nService.t('oneDay'), value: DatePreset.OneDay },\n            { name: this.i18nService.t('days', '2'), value: DatePreset.TwoDays },\n            { name: this.i18nService.t('days', '3'), value: DatePreset.ThreeDays },\n            { name: this.i18nService.t('days', '7'), value: DatePreset.SevenDays },\n            { name: this.i18nService.t('days', '30'), value: DatePreset.ThirtyDays },\n            { name: this.i18nService.t('custom'), value: DatePreset.Custom },\n    ];\n\n    expirationDatePresets: any[] = [\n            { name: this.i18nService.t('never'), value: DatePreset.Never },\n    ].concat([...this.deletionDatePresets]);\n\n    get selectedDeletionDatePreset(): FormControl {\n        return this.datesForm.get('selectedDeletionDatePreset') as FormControl;\n    }\n\n    get selectedExpirationDatePreset(): FormControl {\n        return this.datesForm.get('selectedExpirationDatePreset') as FormControl;\n    }\n\n    get defaultDeletionDateTime(): FormControl {\n        return this.datesForm.get('defaultDeletionDateTime') as FormControl;\n    }\n\n    get defaultExpirationDateTime(): FormControl {\n        return this.datesForm.get('defaultExpirationDateTime') as FormControl;\n    }\n\n    get fallbackDeletionDate(): FormControl {\n        return this.datesForm.get('fallbackDeletionDate') as FormControl;\n    }\n\n    get fallbackDeletionTime(): FormControl {\n        return this.datesForm.get('fallbackDeletionTime') as FormControl;\n    }\n\n    get fallbackExpirationDate(): FormControl {\n        return this.datesForm.get('fallbackExpirationDate') as FormControl;\n    }\n\n    get fallbackExpirationTime(): FormControl {\n        return this.datesForm.get('fallbackExpirationTime') as FormControl;\n    }\n\n    // Should be able to call these at any time and compute a submitable value\n    get formattedDeletionDate(): string {\n        switch (this.selectedDeletionDatePreset.value as DatePreset) {\n            case DatePreset.Never:\n                this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n                return this.formattedDeletionDate;\n            case DatePreset.Custom:\n                switch (this.browserPath) {\n                    case BrowserPath.Safari:\n                    case BrowserPath.Firefox:\n                        return this.fallbackDeletionDate.value + 'T' + this.fallbackDeletionTime.value;\n                    default:\n                        return this.defaultDeletionDateTime.value;\n                }\n            default:\n                const now = new Date();\n                const miliseconds = now.setTime(now.getTime() +\n                    (this.selectedDeletionDatePreset.value as number * 60 * 60 * 1000)) ;\n                return new Date(miliseconds).toString();\n        }\n    }\n\n    get formattedExpirationDate(): string {\n        switch (this.selectedExpirationDatePreset.value as DatePreset) {\n            case DatePreset.Never:\n                return null;\n            case DatePreset.Custom:\n                switch (this.browserPath) {\n                    case BrowserPath.Safari:\n                    case BrowserPath.Firefox:\n                        if ((!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n                            this.editMode) {\n                            return null;\n                        }\n                        return this.fallbackExpirationDate.value + 'T' + this.fallbackExpirationTime.value;\n                    default:\n                        if (!this.defaultExpirationDateTime.value) {\n                            return null;\n                        }\n                        return this.defaultExpirationDateTime.value;\n                }\n            default:\n                const now = new Date();\n                const miliseconds = now.setTime(now.getTime() +\n                    (this.selectedExpirationDatePreset.value as number * 60 * 60 * 1000));\n                return new Date(miliseconds).toString();\n        }\n    }\n    //\n\n    get safariDeletionTimePresetOptions() {\n        return this.safariTimePresetOptions(DateField.DeletionDate);\n    }\n\n    get safariExpirationTimePresetOptions() {\n        return this.safariTimePresetOptions(DateField.ExpriationDate);\n    }\n\n    private get nextWeek(): Date {\n        const nextWeek = new Date();\n        nextWeek.setDate(nextWeek.getDate() + 7);\n        return nextWeek;\n    }\n\n    constructor(protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected datePipe: DatePipe) {\n    }\n\n    ngOnInit(): void {\n        this.setInitialFormValues();\n        this.emitDates();\n        this.datesForm.valueChanges.subscribe(() => {\n            this.emitDates();\n        });\n    }\n\n    onDeletionDatePresetSelect(value: DatePreset) {\n        this.selectedDeletionDatePreset.setValue(value);\n    }\n\n    clearExpiration() {\n        switch (this.browserPath) {\n            case BrowserPath.Safari:\n            case BrowserPath.Firefox:\n                this.fallbackExpirationDate.setValue(null);\n                this.fallbackExpirationTime.setValue(null);\n                break;\n            case BrowserPath.Default:\n                this.defaultExpirationDateTime.setValue(null);\n                break;\n        }\n    }\n\n    protected emitDates() {\n        this.datesChanged.emit({\n            deletionDate: this.formattedDeletionDate,\n            expirationDate: this.formattedExpirationDate,\n        });\n    }\n\n    protected setInitialFormValues() {\n        if (this.editMode) {\n            this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n            this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n            switch (this.browserPath) {\n                case BrowserPath.Safari:\n                case BrowserPath.Firefox:\n                    this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n                    this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n                    if (this.initialExpirationDate != null) {\n                        this.fallbackExpirationDate.setValue(this.initialExpirationDate.toISOString().slice(0, 10));\n                        this.fallbackExpirationTime.setValue(this.initialExpirationDate.toTimeString().slice(0, 5));\n                    }\n                    break;\n                case BrowserPath.Default:\n                    if (this.initialExpirationDate) {\n                        this.defaultExpirationDateTime.setValue(\n                            this.datePipe.transform(new Date(this.initialExpirationDate), 'yyyy-MM-ddTHH:mm'));\n                    }\n                    this.defaultDeletionDateTime.setValue(this.datePipe.transform(new Date(this.initialDeletionDate), 'yyyy-MM-ddTHH:mm'));\n                    break;\n            }\n        } else {\n            this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n            this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n            switch (this.browserPath) {\n                case BrowserPath.Safari:\n                    this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n                    this.fallbackDeletionTime.setValue(this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    protected safariTimePresetOptions(field: DateField): TimeOption[] {\n        // init individual arrays for major sort groups\n        const noon: TimeOption[] = [];\n        const midnight: TimeOption[] = [];\n        const ams: TimeOption[] = [];\n        const pms: TimeOption[] = [];\n\n        // determine minute skip (5 min, 10 min, 15 min, etc.)\n        const minuteIncrementer = 15;\n\n        // loop through each hour on a 12 hour system\n        for (let h = 1; h <= 12; h++) {\n            // loop through each minute in the hour using the skip to incriment\n            for (let m = 0; m < 60; m += minuteIncrementer) {\n                // init the final strings that will be added to the lists\n                let hour = h.toString();\n                let minutes = m.toString();\n\n                // add prepending 0s to single digit hours/minutes\n                if (h < 10) {\n                    hour = '0' + hour;\n                }\n                if (m < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                // build time strings and push to relevant sort groups\n                if (h === 12) {\n                    const midnightOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} AM`,\n                        twentyFourHour: `00:${minutes}`,\n                    };\n                    midnight.push(midnightOption);\n\n                    const noonOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} PM`,\n                        twentyFourHour: `${hour}:${minutes}`,\n                    };\n                    noon.push(noonOption);\n                } else {\n                    const amOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} AM`,\n                        twentyFourHour: `${hour}:${minutes}`,\n                    };\n                    ams.push(amOption);\n\n                    const pmOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} PM`,\n                        twentyFourHour: `${h + 12}:${minutes}`,\n                    };\n                    pms.push(pmOption);\n                }\n            }\n        }\n\n        // bring all the arrays together in the right order\n        const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n        // determine if an unsupported value already exists on the send & add that to the top of the option list\n        // example: if the Send was created with a different client\n        if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n            const previousValue: TimeOption = {\n                twelveHour: this.datePipe.transform(this.initialExpirationDate, 'hh:mm a'),\n                twentyFourHour: this.datePipe.transform(this.initialExpirationDate, 'HH:mm'),\n            };\n            return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n        } else if (field === DateField.DeletionDate && this.initialDeletionDate != null && this.editMode) {\n            const previousValue: TimeOption = {\n                twelveHour: this.datePipe.transform(this.initialDeletionDate, 'hh:mm a'),\n                twentyFourHour: this.datePipe.transform(this.initialDeletionDate, 'HH:mm'),\n            };\n            return [previousValue, ...validTimes];\n        } else {\n            return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n        }\n    }\n}\n","import {\n    Directive,\n    NgZone,\n    OnInit,\n} from '@angular/core';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SendType } from 'jslib-common/enums/sendType';\n\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Directive()\nexport class SendComponent implements OnInit {\n\n    disableSend = false;\n    sendType = SendType;\n    loaded = false;\n    loading = true;\n    refreshing = false;\n    expired: boolean = false;\n    type: SendType = null;\n    sends: SendView[] = [];\n    filteredSends: SendView[] = [];\n    searchText: string;\n    selectedType: SendType;\n    selectedAll: boolean;\n    searchPlaceholder: string;\n    filter: (cipher: SendView) => boolean;\n    searchPending = false;\n    hasSearched = false; // search() function called - returns true if text qualifies for search\n\n    actionPromise: any;\n    onSuccessfulRemovePassword: () => Promise<any>;\n    onSuccessfulDelete: () => Promise<any>;\n    onSuccessfulLoad: () => Promise<any>;\n\n    private searchTimeout: any;\n\n    constructor(protected sendService: SendService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected environmentService: EnvironmentService,\n        protected ngZone: NgZone, protected searchService: SearchService,\n        protected policyService: PolicyService, protected userService: UserService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    }\n\n    async load(filter: (send: SendView) => boolean = null) {\n        this.loading = true;\n        const sends = await this.sendService.getAllDecrypted();\n        this.sends = sends;\n        if (this.onSuccessfulLoad != null) {\n            await this.onSuccessfulLoad();\n        } else {\n            // Default action\n            this.selectAll();\n        }\n        this.loading = false;\n        this.loaded = true;\n    }\n\n    async reload(filter: (send: SendView) => boolean = null) {\n        this.loaded = false;\n        this.sends = [];\n        await this.load(filter);\n    }\n\n    async refresh() {\n        try {\n            this.refreshing = true;\n            await this.reload(this.filter);\n        } finally {\n            this.refreshing = false;\n        }\n    }\n\n    async applyFilter(filter: (send: SendView) => boolean = null) {\n        this.filter = filter;\n        await this.search(null);\n    }\n\n    async search(timeout: number = null) {\n        this.searchPending = false;\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout);\n        }\n        if (timeout == null) {\n            this.hasSearched = this.searchService.isSearchable(this.searchText);\n            this.filteredSends = this.sends.filter(s => this.filter == null || this.filter(s));\n            this.applyTextSearch();\n            return;\n        }\n        this.searchPending = true;\n        this.searchTimeout = setTimeout(async () => {\n            this.hasSearched = this.searchService.isSearchable(this.searchText);\n            this.filteredSends = this.sends.filter(s => this.filter == null || this.filter(s));\n            this.applyTextSearch();\n            this.searchPending = false;\n        }, timeout);\n    }\n\n    async removePassword(s: SendView): Promise<boolean> {\n        if (this.actionPromise != null || s.password == null) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('removePasswordConfirmation'),\n            this.i18nService.t('removePassword'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n            await this.actionPromise;\n            if (this.onSuccessfulRemovePassword != null) {\n                this.onSuccessfulRemovePassword();\n            } else {\n                // Default actions\n                this.platformUtilsService.showToast('success', null, this.i18nService.t('removedPassword'));\n                await this.load();\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async delete(s: SendView): Promise<boolean> {\n        if (this.actionPromise != null) {\n            return false;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteSendConfirmation'),\n            this.i18nService.t('deleteSend'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.sendService.deleteWithServer(s.id);\n            await this.actionPromise;\n\n            if (this.onSuccessfulDelete != null) {\n                this.onSuccessfulDelete();\n            } else {\n                // Default actions\n                this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));\n                await this.refresh();\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n        this.actionPromise = null;\n        return true;\n    }\n\n    copy(s: SendView) {\n        const sendLinkBaseUrl = this.environmentService.getSendUrl();\n        const link = sendLinkBaseUrl + s.accessId + '/' + s.urlB64Key;\n        this.platformUtilsService.copyToClipboard(link);\n        this.platformUtilsService.showToast('success', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('sendLink')));\n    }\n\n    searchTextChanged() {\n        this.search(200);\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.applyFilter(null);\n    }\n\n    selectType(type: SendType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.applyFilter(s => s.type === type);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedType = null;\n    }\n\n    private applyTextSearch() {\n        if (this.searchText != null) {\n            this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n        }\n    }\n}\n","export class UpdateProfileRequest {\n    name: string;\n    masterPasswordHint: string;\n    culture = 'en-US'; // deprecated\n\n    constructor(name: string, masterPasswordHint: string) {\n        this.name = name;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n    }\n}\n","import { EmailTokenRequest } from './emailTokenRequest';\n\nexport class EmailRequest extends EmailTokenRequest {\n    newMasterPasswordHash: string;\n    token: string;\n    key: string;\n}\n","import { SendRequest } from './sendRequest';\n\nimport { Send } from '../domain/send';\n\nexport class SendWithIdRequest extends SendRequest {\n    id: string;\n\n    constructor(send: Send) {\n        super(send);\n        this.id = send.id;\n    }\n}\n","import { PasswordRequest } from './passwordRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class KdfRequest extends PasswordRequest {\n    kdf: KdfType;\n    kdfIterations: number;\n}\n","export class UpdateDomainsRequest {\n    equivalentDomains: string[][];\n    excludedGlobalEquivalentDomains: number[];\n}\n","import { EmergencyAccessType } from '../../enums/emergencyAccessType';\n\nexport class EmergencyAccessInviteRequest {\n    email: string;\n    type: EmergencyAccessType;\n    waitTimeDays: number;\n}\n","export class EmergencyAccessPasswordRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","export class EmergencyAccessConfirmRequest {\n    key: string;\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class PasswordHistoryResponse extends BaseResponse {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.password = this.getResponseProperty('Password');\n        this.lastUsedDate = this.getResponseProperty('LastUsedDate');\n    }\n}\n","import {\n    Directive,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    FormBuilder,\n    ValidationErrors,\n    Validator\n} from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { Policy } from 'jslib-common/models/domain/policy';\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n\n    get showCustom() {\n        return this.form.get('vaultTimeout').value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n    }\n\n    static CUSTOM_VALUE = -100;\n\n    form = this.fb.group({\n        vaultTimeout: [null],\n        custom: this.fb.group({\n            hours: [null],\n            minutes: [null],\n        }),\n    });\n\n    @Input() vaultTimeouts: { name: string; value: number; }[];\n    vaultTimeoutPolicy: Policy;\n    vaultTimeoutPolicyHours: number;\n    vaultTimeoutPolicyMinutes: number;\n\n    private onChange: (vaultTimeout: number) => void;\n    private validatorChange: () => void;\n\n    constructor(private fb: FormBuilder, private policyService: PolicyService, private i18nService: I18nService) {\n    }\n\n    async ngOnInit() {\n        if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n            const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n            this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n            this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n            this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n            this.vaultTimeouts = this.vaultTimeouts.filter(t =>\n                t.value <= this.vaultTimeoutPolicy.data.minutes &&\n                (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n                t.value != null\n            );\n            this.validatorChange();\n        }\n\n        this.form.valueChanges.subscribe(async value => {\n            this.onChange(this.getVaultTimeout(value));\n        });\n\n        // Assign the previous value to the custom fields\n        this.form.get('vaultTimeout').valueChanges.subscribe(value => {\n            if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n                return;\n            }\n\n            const current = Math.max(this.form.value.vaultTimeout, 0);\n            this.form.patchValue({\n                custom: {\n                    hours: Math.floor(current / 60),\n                    minutes: current % 60,\n                },\n            });\n        });\n    }\n\n    ngOnChanges() {\n        this.vaultTimeouts.push({ name: this.i18nService.t('custom'), value: VaultTimeoutInputComponent.CUSTOM_VALUE });\n    }\n\n    getVaultTimeout(value: any) {\n        if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n            return value.vaultTimeout;\n        }\n\n        return value.custom.hours * 60 + value.custom.minutes;\n    }\n\n    writeValue(value: number): void {\n        if (value == null) {\n            return;\n        }\n\n        if (this.vaultTimeouts.every(p => p.value !== value)) {\n            this.form.setValue({\n                vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n                custom: {\n                    hours: Math.floor(value / 60),\n                    minutes: value % 60,\n                },\n            });\n            return;\n        }\n\n        this.form.patchValue({\n            vaultTimeout: value,\n        });\n    }\n\n    registerOnChange(onChange: any): void {\n        this.onChange = onChange;\n    }\n\n    // tslint:disable-next-line\n    registerOnTouched(onTouched: any): void {}\n\n    // tslint:disable-next-line\n    setDisabledState?(isDisabled: boolean): void { }\n\n    validate(control: AbstractControl): ValidationErrors {\n        if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n            return { policyError: true };\n        }\n\n        return null;\n    }\n\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorChange = fn;\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { GeneratedPasswordHistory } from 'jslib-common/models/domain/generatedPasswordHistory';\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n    history: GeneratedPasswordHistory[] = [];\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) { }\n\n    async ngOnInit() {\n        this.history = await this.passwordGenerationService.getHistory();\n    }\n\n    clear() {\n        this.history = [];\n        this.passwordGenerationService.clear();\n    }\n\n    copy(password: string) {\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PasswordGeneratorPolicyOptions } from 'jslib-common/models/domain/passwordGeneratorPolicyOptions';\n\n@Directive()\nexport class PasswordGeneratorComponent implements OnInit {\n    @Input() showSelect: boolean = false;\n    @Output() onSelected = new EventEmitter<string>();\n\n    passTypeOptions: any[];\n    options: any = {};\n    password: string = '-';\n    showOptions = false;\n    avoidAmbiguous = false;\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions;\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) {\n            this.passTypeOptions = [\n                { name: i18nService.t('password'), value: 'password' },\n                { name: i18nService.t('passphrase'), value: 'passphrase' },\n            ];\n         }\n\n    async ngOnInit() {\n        const optionsResponse = await this.passwordGenerationService.getOptions();\n        this.options = optionsResponse[0];\n        this.enforcedPolicyOptions = optionsResponse[1];\n        this.avoidAmbiguous = !this.options.ambiguous;\n        this.options.type = this.options.type === 'passphrase' ? 'passphrase' : 'password';\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderChanged() {\n        this.saveOptions(false);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderInput() {\n        this.normalizeOptions();\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n    }\n\n    async saveOptions(regenerate: boolean = true) {\n        this.normalizeOptions();\n        await this.passwordGenerationService.saveOptions(this.options);\n\n        if (regenerate) {\n            await this.regenerate();\n        }\n    }\n\n    async regenerate() {\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    copy() {\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    select() {\n        this.onSelected.emit(this.password);\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    private normalizeOptions() {\n        // Application level normalize options depedent on class variables\n        this.options.ambiguous = !this.avoidAmbiguous;\n\n        if (!this.options.uppercase && !this.options.lowercase && !this.options.number && !this.options.special) {\n            this.options.lowercase = true;\n            if (this.win != null) {\n                const lowercase = this.win.document.querySelector('#lowercase') as HTMLInputElement;\n                if (lowercase) {\n                    lowercase.checked = true;\n                }\n            }\n        }\n\n        this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n    @Input() folderId: string;\n    @Output() onSavedFolder = new EventEmitter<FolderView>();\n    @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n    editMode: boolean = false;\n    folder: FolderView = new FolderView();\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(protected folderService: FolderService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, private logService: LogService) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.folder.name == null || this.folder.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        try {\n            const folder = await this.folderService.encrypt(this.folder);\n            this.formPromise = this.folderService.saveWithServer(folder);\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode ? 'editedFolder' : 'addedFolder'));\n            this.onSavedFolder.emit(this.folder);\n            return true;\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        return false;\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteFolderConfirmation'), this.i18nService.t('deleteFolder'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedFolder'));\n            this.onDeletedFolder.emit(this.folder);\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        return true;\n    }\n\n    protected async init() {\n        this.editMode = this.folderId != null;\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editFolder');\n            const folder = await this.folderService.get(this.folderId);\n            this.folder = await folder.decrypt();\n        } else {\n            this.title = this.i18nService.t('addFolder');\n        }\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class ShareComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() organizationId: string;\n    @Output() onSharedCipher = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n\n    protected writeableCollections: CollectionView[] = [];\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected userService: UserService,\n        protected cipherService: CipherService, private logService: LogService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.map(c => c).filter(c => !c.readOnly);\n        const orgs = await this.userService.getAllOrganizations();\n        this.organizations = orgs.sort(Utils.getSortFunction(this.i18nService, 'name'))\n            .filter(o => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        this.cipher = await cipherDomain.decrypt();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    filterCollections() {\n        this.writeableCollections.forEach(c => (c as any).checked = false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit(): Promise<boolean> {\n        const selectedCollectionIds = this.collections\n            .filter(c => !!(c as any).checked)\n            .map(c => c.id);\n        if (selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        const cipherView = await cipherDomain.decrypt();\n        const orgName = this.organizations.find(o => o.id === this.organizationId)?.name ?? this.i18nService.t('organization');\n\n        try {\n            this.formPromise = this.cipherService.shareWithServer(cipherView, this.organizationId,\n                selectedCollectionIds).then(async () => {\n                    this.onSharedCipher.emit();\n                    this.platformUtilsService.showToast('success', null,\n                        this.i18nService.t('movedItemToOrg', cipherView.name, orgName));\n                });\n            await this.formPromise;\n            return true;\n        } catch (e) {\n            this.logService.error(e);\n        }\n        return false;\n    }\n\n    get canSave() {\n        if (this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    OnInit,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBoxRow]',\n})\nexport class BoxRowDirective implements OnInit {\n    el: HTMLElement = null;\n    formEls: Element[];\n\n    constructor(private elRef: ElementRef) {\n        this.el = elRef.nativeElement;\n    }\n\n    ngOnInit(): void {\n        this.formEls = Array.from(this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea'));\n        this.formEls.forEach(formEl => {\n            formEl.addEventListener('focus', (event: Event) => {\n                this.el.classList.add('active');\n            }, false);\n\n            formEl.addEventListener('blur', (event: Event) => {\n                this.el.classList.remove('active');\n            }, false);\n        });\n    }\n\n    @HostListener('click', ['$event']) onClick(event: Event) {\n        const target = event.target as HTMLElement;\n        if (target !== this.el && !target.classList.contains('progress') &&\n            !target.classList.contains('progress-bar')) {\n            return;\n        }\n\n        if (this.formEls.length > 0) {\n            const formEl = (this.formEls[0] as HTMLElement);\n            if (formEl.tagName.toLowerCase() === 'input') {\n                const inputEl = (formEl as HTMLInputElement);\n                if (inputEl.type != null && inputEl.type.toLowerCase() === 'checkbox') {\n                    inputEl.click();\n                    return;\n                }\n            }\n            formEl.focus();\n        }\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Pipe({\n    name: 'searchCiphers',\n})\nexport class SearchCiphersPipe implements PipeTransform {\n    transform(ciphers: CipherView[], searchText: string, deleted: boolean = false): CipherView[] {\n        if (ciphers == null || ciphers.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return ciphers.filter(c => {\n                return deleted !== c.isDeleted;\n            });\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return ciphers.filter(c => {\n            if (deleted !== c.isDeleted) {\n                return false;\n            }\n            if (c.name != null && c.name.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (searchText.length >= 8 && c.id.startsWith(searchText)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { AppComponent as BaseAppComponent } from 'src/app/app.component';\nimport { DisablePersonalVaultExportPolicy } from './policies/disable-personal-vault-export.component';\nimport { MaximumVaultTimeoutPolicy } from './policies/maximum-vault-timeout.component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: '../../../src/app/app.component.html',\n})\nexport class AppComponent extends BaseAppComponent {\n\n    ngOnInit() {\n        super.ngOnInit();\n\n        this.policyListService.addPolicies([\n            new MaximumVaultTimeoutPolicy(),\n            new DisablePersonalVaultExportPolicy(),\n        ]);\n    }\n\n}\n","<toaster-container [toasterconfig]=\"toasterConfig\" aria-live=\"polite\"></toaster-container> <router-outlet></router-outlet> ","import * as jq from 'jquery';\nimport Swal from 'sweetalert2';\n\nimport {\n    BodyOutputType,\n    Toast,\n    ToasterConfig,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { KeyConnectorService } from 'jslib-common/abstractions/keyConnector.service';\nimport { NotificationsService } from 'jslib-common/abstractions/notifications.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SettingsService } from 'jslib-common/abstractions/settings.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { PolicyListService } from './services/policy-list.service';\nimport { RouterService } from './services/router.service';\n\nimport { DisableSendPolicy } from './organizations/policies/disable-send.component';\nimport { MasterPasswordPolicy } from './organizations/policies/master-password.component';\nimport { PasswordGeneratorPolicy } from './organizations/policies/password-generator.component';\nimport { PersonalOwnershipPolicy } from './organizations/policies/personal-ownership.component';\nimport { RequireSsoPolicy } from './organizations/policies/require-sso.component';\nimport { ResetPasswordPolicy } from './organizations/policies/reset-password.component';\nimport { SendOptionsPolicy } from './organizations/policies/send-options.component';\nimport { SingleOrgPolicy } from './organizations/policies/single-org.component';\nimport { TwoFactorAuthenticationPolicy } from './organizations/policies/two-factor-authentication.component';\n\nconst BroadcasterSubscriptionId = 'AppComponent';\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n})\nexport class AppComponent implements OnDestroy, OnInit {\n\n    toasterConfig: ToasterConfig = new ToasterConfig({\n        showCloseButton: true,\n        mouseoverTimerStop: true,\n        animation: 'flyRight',\n        limit: 5,\n    });\n\n    private lastActivity: number = null;\n    private idleTimer: number = null;\n    private isIdle = false;\n\n    constructor(\n        private broadcasterService: BroadcasterService, private userService: UserService,\n        private tokenService: TokenService, private folderService: FolderService,\n        private settingsService: SettingsService, private syncService: SyncService,\n        private passwordGenerationService: PasswordGenerationService, private cipherService: CipherService,\n        private authService: AuthService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private ngZone: NgZone,\n        private vaultTimeoutService: VaultTimeoutService, private storageService: StorageService,\n        private cryptoService: CryptoService, private collectionService: CollectionService,\n        private sanitizer: DomSanitizer, private searchService: SearchService,\n        private notificationsService: NotificationsService, private routerService: RouterService,\n        private stateService: StateService, private eventService: EventService,\n        private policyService: PolicyService, protected policyListService: PolicyListService,\n        private keyConnectorService: KeyConnectorService) { }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            window.onmousemove = () => this.recordActivity();\n            window.onmousedown = () => this.recordActivity();\n            window.ontouchstart = () => this.recordActivity();\n            window.onclick = () => this.recordActivity();\n            window.onscroll = () => this.recordActivity();\n            window.onkeypress = () => this.recordActivity();\n        });\n\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'loggedIn':\n                    case 'loggedOut':\n                    case 'unlocked':\n                        this.notificationsService.updateConnection(false);\n                        break;\n                    case 'authBlocked':\n                        this.router.navigate(['/']);\n                        break;\n                    case 'logout':\n                        this.logOut(!!message.expired);\n                        break;\n                    case 'lockVault':\n                        await this.vaultTimeoutService.lock();\n                        break;\n                    case 'locked':\n                        this.notificationsService.updateConnection(false);\n                        this.router.navigate(['lock']);\n                        break;\n                    case 'lockedUrl':\n                        window.setTimeout(() => this.routerService.setPreviousUrl(message.url), 500);\n                        break;\n                    case 'syncStarted':\n                        break;\n                    case 'syncCompleted':\n                        break;\n                    case 'upgradeOrganization':\n                        const upgradeConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('upgradeOrganizationDesc'), this.i18nService.t('upgradeOrganization'),\n                            this.i18nService.t('upgradeOrganization'), this.i18nService.t('cancel'));\n                        if (upgradeConfirmed) {\n                            this.router.navigate(['organizations', message.organizationId, 'settings', 'billing']);\n                        }\n                        break;\n                    case 'premiumRequired':\n                        const premiumConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (premiumConfirmed) {\n                            this.router.navigate(['settings/premium']);\n                        }\n                        break;\n                    case 'emailVerificationRequired':\n                        const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('emailVerificationRequiredDesc'),\n                            this.i18nService.t('emailVerificationRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (emailVerificationConfirmed) {\n                            this.platformUtilsService.launchUri('https://bitwarden.com/help/article/create-bitwarden-account/');\n                        }\n                        break;\n                    case 'showToast':\n                        this.showToast(message);\n                        break;\n                    case 'setFullWidth':\n                        this.setFullWidth();\n                        break;\n                    case 'convertAccountToKeyConnector':\n                        this.keyConnectorService.setConvertAccountRequired(true);\n                        this.router.navigate(['/remove-password']);\n                        break;\n                    default:\n                        break;\n                }\n            });\n        });\n\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                const modals = Array.from(document.querySelectorAll('.modal'));\n                for (const modal of modals) {\n                    (jq(modal) as any).modal('hide');\n                }\n\n                if (document.querySelector('.swal-modal') != null) {\n                    Swal.close(undefined);\n                }\n            }\n        });\n\n        this.policyListService.addPolicies([\n            new TwoFactorAuthenticationPolicy(),\n            new MasterPasswordPolicy(),\n            new PasswordGeneratorPolicy(),\n            new SingleOrgPolicy(),\n            new RequireSsoPolicy(),\n            new PersonalOwnershipPolicy(),\n            new DisableSendPolicy(),\n            new SendOptionsPolicy(),\n            new ResetPasswordPolicy(),\n        ]);\n\n        this.setFullWidth();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    private async logOut(expired: boolean) {\n        await this.eventService.uploadEvents();\n        const userId = await this.userService.getUserId();\n\n        await Promise.all([\n            this.eventService.clearEvents(),\n            this.syncService.setLastSync(new Date(0)),\n            this.tokenService.clearToken(),\n            this.cryptoService.clearKeys(),\n            this.userService.clear(),\n            this.settingsService.clear(userId),\n            this.cipherService.clear(userId),\n            this.folderService.clear(userId),\n            this.collectionService.clear(userId),\n            this.policyService.clear(userId),\n            this.passwordGenerationService.clear(),\n            this.stateService.purge(),\n            this.keyConnectorService.clear(),\n        ]);\n\n        this.searchService.clearIndex();\n        this.authService.logOut(async () => {\n            if (expired) {\n                this.toasterService.popAsync('warning', this.i18nService.t('loggedOut'),\n                    this.i18nService.t('loginExpired'));\n            }\n\n            Swal.close();\n            this.router.navigate(['/']);\n        });\n    }\n\n    private async recordActivity() {\n        const now = (new Date()).getTime();\n        if (this.lastActivity != null && now - this.lastActivity < 250) {\n            return;\n        }\n\n        this.lastActivity = now;\n        this.storageService.save(ConstantsService.lastActiveKey, now);\n\n        // Idle states\n        if (this.isIdle) {\n            this.isIdle = false;\n            this.idleStateChanged();\n        }\n        if (this.idleTimer != null) {\n            window.clearTimeout(this.idleTimer);\n            this.idleTimer = null;\n        }\n        this.idleTimer = window.setTimeout(() => {\n            if (!this.isIdle) {\n                this.isIdle = true;\n                this.idleStateChanged();\n            }\n        }, IdleTimeout);\n    }\n\n    private showToast(msg: any) {\n        const toast: Toast = {\n            type: msg.type,\n            title: msg.title,\n        };\n        if (typeof (msg.text) === 'string') {\n            toast.body = msg.text;\n        } else if (msg.text.length === 1) {\n            toast.body = msg.text[0];\n        } else {\n            let message = '';\n            msg.text.forEach((t: string) =>\n                message += ('<p>' + this.sanitizer.sanitize(SecurityContext.HTML, t) + '</p>'));\n            toast.body = message;\n            toast.bodyOutputType = BodyOutputType.TrustedHtml;\n        }\n        if (msg.options != null) {\n            if (msg.options.trustedHtml === true) {\n                toast.bodyOutputType = BodyOutputType.TrustedHtml;\n            }\n            if (msg.options.timeout != null && msg.options.timeout > 0) {\n                toast.timeout = msg.options.timeout;\n            }\n        }\n        this.toasterService.popAsync(toast);\n    }\n\n    private idleStateChanged() {\n        if (this.isIdle) {\n            this.notificationsService.disconnectFromInactivity();\n        } else {\n            this.notificationsService.reconnectFromActivity();\n        }\n    }\n\n    private async setFullWidth() {\n        const enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\n        if (enableFullWidth) {\n            document.body.classList.add('full-width');\n        } else {\n            document.body.classList.remove('full-width');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { OssModule } from 'src/app/oss.module';\n\nimport { SsoComponent } from './manage/sso.component';\nimport { OrganizationsRoutingModule } from './organizations-routing.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        OssModule,\n        OrganizationsRoutingModule,\n    ],\n    declarations: [\n        SsoComponent,\n    ],\n})\nexport class OrganizationsModule {}\n","import { SsoConfigApi } from '../../api/ssoConfigApi';\n\nexport class OrganizationSsoRequest {\n    enabled: boolean = false;\n    data: SsoConfigApi;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\nimport { OrganizationLayoutComponent } from 'src/app/layouts/organization-layout.component';\nimport { ManageComponent } from 'src/app/organizations/manage/manage.component';\nimport { OrganizationGuardService } from 'src/app/services/organization-guard.service';\nimport { OrganizationTypeGuardService } from 'src/app/services/organization-type-guard.service';\n\nimport { SsoComponent } from './manage/sso.component';\n\nconst routes: Routes = [\n    {\n        path: 'organizations/:organizationId',\n        component: OrganizationLayoutComponent,\n        canActivate: [AuthGuardService, OrganizationGuardService],\n        children: [\n            {\n                path: 'manage',\n                component: ManageComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: {\n                    permissions: [\n                        Permissions.CreateNewCollections,\n                        Permissions.EditAnyCollection,\n                        Permissions.DeleteAnyCollection,\n                        Permissions.EditAssignedCollections,\n                        Permissions.DeleteAssignedCollections,\n                        Permissions.AccessEventLogs,\n                        Permissions.ManageGroups,\n                        Permissions.ManageUsers,\n                        Permissions.ManagePolicies,\n                        Permissions.ManageSso,\n                    ],\n                },\n                children: [\n                    {\n                        path: 'sso',\n                        component: SsoComponent,\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport {\n    RouterModule,\n    Routes,\n} from '@angular/router';\n\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptEmergencyComponent } from './accounts/accept-emergency.component';\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { RemovePasswordComponent } from './accounts/remove-password.component';\nimport { SetPasswordComponent } from './accounts/set-password.component';\nimport { SsoComponent } from './accounts/sso.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { UpdateTempPasswordComponent } from './accounts/update-temp-password.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { SettingsComponent as OrgSettingsComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { FamiliesForEnterpriseSetupComponent } from './organizations/sponsorships/families-for-enterprise-setup.component';\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccessComponent } from './send/access.component';\nimport { SendComponent } from './send/send.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { VaultComponent } from './vault/vault.component';\n\nimport { OrganizationGuardService } from './services/organization-guard.service';\nimport { OrganizationTypeGuardService } from './services/organization-type-guard.service';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { LockGuardService } from 'jslib-angular/services/lock-guard.service';\nimport { UnauthGuardService } from 'jslib-angular/services/unauth-guard.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\nimport { EmergencyAccessViewComponent } from './settings/emergency-access-view.component';\nimport { EmergencyAccessComponent } from './settings/emergency-access.component';\nimport { SponsoredFamiliesComponent } from './settings/sponsored-families.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FrontendLayoutComponent,\n        children: [\n            { path: '', pathMatch: 'full', component: LoginComponent, canActivate: [UnauthGuardService] },\n            { path: '2fa', component: TwoFactorComponent, canActivate: [UnauthGuardService] },\n            {\n                path: 'register', component: RegisterComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'createAccount' },\n            },\n            {\n                path: 'sso', component: SsoComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'enterpriseSingleSignOn' },\n            },\n            {\n                path: 'set-password', component: SetPasswordComponent,\n                data: { titleId: 'setMasterPassword' },\n            },\n            {\n                path: 'hint', component: HintComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'passwordHint' },\n            },\n            {\n                path: 'lock',\n                component: LockComponent,\n                canActivate: [LockGuardService],\n            },\n            { path: 'verify-email', component: VerifyEmailTokenComponent },\n            {\n                path: 'accept-organization',\n                component: AcceptOrganizationComponent,\n                data: { titleId: 'joinOrganization' },\n            },\n            {\n                path: 'accept-emergency',\n                component: AcceptEmergencyComponent,\n                data: { titleId: 'acceptEmergency' },\n            },\n            { path: 'recover', pathMatch: 'full', redirectTo: 'recover-2fa' },\n            {\n                path: 'recover-2fa',\n                component: RecoverTwoFactorComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'recoverAccountTwoStep' },\n            },\n            {\n                path: 'recover-delete',\n                component: RecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'verify-recover-delete',\n                component: VerifyRecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'send/:sendId/:key',\n                component: AccessComponent,\n                data: { title: 'Bitwarden Send' },\n            },\n            {\n                path: 'update-temp-password',\n                component: UpdateTempPasswordComponent,\n                canActivate: [AuthGuardService],\n                data: { titleId: 'updateTempPassword' },\n            },\n            {\n                path: 'remove-password',\n                component: RemovePasswordComponent,\n                canActivate: [AuthGuardService],\n                data: { titleId: 'removeMasterPassword' },\n            },\n        ],\n    },\n    {\n        path: '',\n        component: UserLayoutComponent,\n        canActivate: [AuthGuardService],\n        children: [\n            { path: 'vault', component: VaultComponent, data: { titleId: 'myVault' } },\n            { path: 'sends', component: SendComponent, data: { title: 'Send' } },\n            {\n                path: 'settings',\n                component: SettingsComponent,\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: AccountComponent, data: { titleId: 'myAccount' } },\n                    { path: 'options', component: OptionsComponent, data: { titleId: 'options' } },\n                    { path: 'domain-rules', component: DomainRulesComponent, data: { titleId: 'domainRules' } },\n                    { path: 'two-factor', component: TwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    { path: 'premium', component: PremiumComponent, data: { titleId: 'goPremium' } },\n                    { path: 'billing', component: UserBillingComponent, data: { titleId: 'billing' } },\n                    {\n                        path: 'subscription',\n                        component: UserSubscriptionComponent,\n                        data: { titleId: 'premiumMembership' },\n                    },\n                    { path: 'organizations', component: OrganizationsComponent, data: { titleId: 'organizations' } },\n                    {\n                        path: 'create-organization',\n                        component: CreateOrganizationComponent,\n                        data: { titleId: 'newOrganization' },\n                    },\n                    {\n                        path: 'emergency-access',\n                        children: [\n                            {\n                                path: '',\n                                component: EmergencyAccessComponent,\n                                data: { titleId: 'emergencyAccess' },\n                            },\n                            {\n                                path: ':id',\n                                component: EmergencyAccessViewComponent,\n                                data: { titleId: 'emergencyAccess' },\n                            },\n                        ],\n                    },\n                    {\n                        path: 'sponsored-families',\n                        component: SponsoredFamiliesComponent,\n                        data: { titleId: 'sponsoredFamilies' },\n                    },\n                ],\n            },\n            {\n                path: 'tools',\n                component: ToolsComponent,\n                canActivate: [AuthGuardService],\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'generator' },\n                    { path: 'import', component: ImportComponent, data: { titleId: 'importData' } },\n                    { path: 'export', component: ExportComponent, data: { titleId: 'exportVault' } },\n                    {\n                        path: 'generator',\n                        component: PasswordGeneratorComponent,\n                        data: { titleId: 'passwordGenerator' },\n                    },\n                    { path: 'breach-report', component: BreachReportComponent, data: { titleId: 'dataBreachReport' } },\n                    {\n                        path: 'reused-passwords-report',\n                        component: ReusedPasswordsReportComponent,\n                        data: { titleId: 'reusedPasswordsReport' },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: UnsecuredWebsitesReportComponent,\n                        data: { titleId: 'unsecuredWebsitesReport' },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: WeakPasswordsReportComponent,\n                        data: { titleId: 'weakPasswordsReport' },\n                    },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: ExposedPasswordsReportComponent,\n                        data: { titleId: 'exposedPasswordsReport' },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: InactiveTwoFactorReportComponent,\n                        data: { titleId: 'inactive2faReport' },\n                    },\n                ],\n            },\n            { path: 'setup/families-for-enterprise', component: FamiliesForEnterpriseSetupComponent },\n        ],\n    },\n    {\n        path: 'organizations/:organizationId',\n        component: OrganizationLayoutComponent,\n        canActivate: [AuthGuardService, OrganizationGuardService],\n        children: [\n            { path: '', pathMatch: 'full', redirectTo: 'vault' },\n            { path: 'vault', component: OrgVaultComponent, data: { titleId: 'vault' } },\n            {\n                path: 'tools',\n                component: OrgToolsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { permissions: [Permissions.AccessImportExport, Permissions.AccessReports] },\n                children: [\n                    {\n                        path: '',\n                        pathMatch: 'full',\n                        redirectTo: 'import',\n                    },\n                    {\n                        path: 'import',\n                        component: OrgImportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'importData',\n                            permissions: [Permissions.AccessImportExport],\n                        },\n                    },\n                    {\n                        path: 'export',\n                        component: OrgExportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'exportVault',\n                            permissions: [Permissions.AccessImportExport],\n                        },\n                    },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: OrgExposedPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'exposedPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: OrgInactiveTwoFactorReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'inactive2faReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'reused-passwords-report',\n                        component: OrgReusedPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'reusedPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: OrgUnsecuredWebsitesReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'unsecuredWebsitesReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: OrgWeakPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'weakPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                ],\n            },\n            {\n                path: 'manage',\n                component: OrgManageComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: {\n                    permissions: [\n                        Permissions.CreateNewCollections,\n                        Permissions.EditAnyCollection,\n                        Permissions.DeleteAnyCollection,\n                        Permissions.EditAssignedCollections,\n                        Permissions.DeleteAssignedCollections,\n                        Permissions.AccessEventLogs,\n                        Permissions.ManageGroups,\n                        Permissions.ManageUsers,\n                        Permissions.ManagePolicies,\n                    ],\n                },\n                children: [\n                    {\n                        path: '',\n                        pathMatch: 'full',\n                        redirectTo: 'people',\n                    },\n                    {\n                        path: 'collections',\n                        component: OrgManageCollectionsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'collections',\n                            permissions: [\n                                Permissions.CreateNewCollections,\n                                Permissions.EditAnyCollection,\n                                Permissions.DeleteAnyCollection,\n                                Permissions.EditAssignedCollections,\n                                Permissions.DeleteAssignedCollections,\n                            ],\n                        },\n                    },\n                    {\n                        path: 'events',\n                        component: OrgEventsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'eventLogs',\n                            permissions: [Permissions.AccessEventLogs],\n                        },\n                    },\n                    {\n                        path: 'groups',\n                        component: OrgGroupsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'groups',\n                            permissions: [Permissions.ManageGroups],\n                        },\n                    },\n                    {\n                        path: 'people',\n                        component: OrgPeopleComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'people',\n                            permissions: [Permissions.ManageUsers, Permissions.ManageUsersPassword],\n                        },\n                    },\n                    {\n                        path: 'policies',\n                        component: OrgPoliciesComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'policies',\n                            permissions: [Permissions.ManagePolicies],\n                        },\n                    },\n                ],\n            },\n            {\n                path: 'settings',\n                component: OrgSettingsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { permissions: [Permissions.ManageOrganization] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: OrgAccountComponent, data: { titleId: 'myOrganization' } },\n                    { path: 'two-factor', component: OrgTwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    {\n                        path: 'billing',\n                        component: OrganizationBillingComponent,\n                        data: { titleId: 'billing' },\n                    },\n                    {\n                        path: 'subscription',\n                        component: OrganizationSubscriptionComponent,\n                        data: { titleId: 'subscription' },\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {\n        useHash: true,\n        paramsInheritanceStrategy: 'always',\n        /*enableTracing: true,*/\n    })],\n    exports: [RouterModule],\n})\nexport class OssRoutingModule { }\n","import {\n    APP_INITIALIZER,\n    LOCALE_ID,\n    NgModule,\n} from '@angular/core';\n\nimport { ToasterModule } from 'angular2-toaster';\n\nimport { BroadcasterMessagingService } from '../../services/broadcasterMessaging.service';\nimport { HtmlStorageService } from '../../services/htmlStorage.service';\nimport { I18nService } from '../../services/i18n.service';\nimport { MemoryStorageService } from '../../services/memoryStorage.service';\nimport { PasswordRepromptService } from '../../services/passwordReprompt.service';\nimport { WebPlatformUtilsService } from '../../services/webPlatformUtils.service';\n\nimport { EventService } from './event.service';\nimport { OrganizationGuardService } from './organization-guard.service';\nimport { OrganizationTypeGuardService } from './organization-type-guard.service';\nimport { PolicyListService } from './policy-list.service';\nimport { RouterService } from './router.service';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\nimport { LockGuardService } from 'jslib-angular/services/lock-guard.service';\nimport { ModalService as ModalServiceAbstraction } from 'jslib-angular/services/modal.service';\nimport { UnauthGuardService } from 'jslib-angular/services/unauth-guard.service';\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ApiService } from 'jslib-common/services/api.service';\nimport { AppIdService } from 'jslib-common/services/appId.service';\nimport { AuditService } from 'jslib-common/services/audit.service';\nimport { AuthService } from 'jslib-common/services/auth.service';\nimport { CipherService } from 'jslib-common/services/cipher.service';\nimport { CollectionService } from 'jslib-common/services/collection.service';\nimport { ConsoleLogService } from 'jslib-common/services/consoleLog.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\nimport { ContainerService } from 'jslib-common/services/container.service';\nimport { CryptoService } from 'jslib-common/services/crypto.service';\nimport { EnvironmentService } from 'jslib-common/services/environment.service';\nimport { EventService as EventLoggingService } from 'jslib-common/services/event.service';\nimport { ExportService } from 'jslib-common/services/export.service';\nimport { FileUploadService } from 'jslib-common/services/fileUpload.service';\nimport { FolderService } from 'jslib-common/services/folder.service';\nimport { ImportService } from 'jslib-common/services/import.service';\nimport { KeyConnectorService } from 'jslib-common/services/keyConnector.service';\nimport { NotificationsService } from 'jslib-common/services/notifications.service';\nimport { PasswordGenerationService } from 'jslib-common/services/passwordGeneration.service';\nimport { PolicyService } from 'jslib-common/services/policy.service';\nimport { SearchService } from 'jslib-common/services/search.service';\nimport { SendService } from 'jslib-common/services/send.service';\nimport { SettingsService } from 'jslib-common/services/settings.service';\nimport { StateService } from 'jslib-common/services/state.service';\nimport { SyncService } from 'jslib-common/services/sync.service';\nimport { TokenService } from 'jslib-common/services/token.service';\nimport { TotpService } from 'jslib-common/services/totp.service';\nimport { UserService } from 'jslib-common/services/user.service';\nimport { UserVerificationService } from 'jslib-common/services/userVerification.service';\nimport { VaultTimeoutService } from 'jslib-common/services/vaultTimeout.service';\nimport { WebCryptoFunctionService } from 'jslib-common/services/webCryptoFunction.service';\n\nimport { ApiService as ApiServiceAbstraction } from 'jslib-common/abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from 'jslib-common/abstractions/audit.service';\nimport { AuthService as AuthServiceAbstraction } from 'jslib-common/abstractions/auth.service';\nimport { CipherService as CipherServiceAbstraction } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService as CollectionServiceAbstraction } from 'jslib-common/abstractions/collection.service';\nimport { CryptoService as CryptoServiceAbstraction } from 'jslib-common/abstractions/crypto.service';\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction, Urls } from 'jslib-common/abstractions/environment.service';\nimport { EventService as EventLoggingServiceAbstraction } from 'jslib-common/abstractions/event.service';\nimport { ExportService as ExportServiceAbstraction } from 'jslib-common/abstractions/export.service';\nimport { FileUploadService as FileUploadServiceAbstraction }  from 'jslib-common/abstractions/fileUpload.service';\nimport { FolderService as FolderServiceAbstraction } from 'jslib-common/abstractions/folder.service';\nimport { I18nService as I18nServiceAbstraction } from 'jslib-common/abstractions/i18n.service';\nimport { ImportService as ImportServiceAbstraction } from 'jslib-common/abstractions/import.service';\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from 'jslib-common/abstractions/keyConnector.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService as MessagingServiceAbstraction } from 'jslib-common/abstractions/messaging.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from 'jslib-common/abstractions/notifications.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService as PolicyServiceAbstraction } from 'jslib-common/abstractions/policy.service';\nimport { SearchService as SearchServiceAbstraction } from 'jslib-common/abstractions/search.service';\nimport { SendService as SendServiceAbstraction } from 'jslib-common/abstractions/send.service';\nimport { SettingsService as SettingsServiceAbstraction } from 'jslib-common/abstractions/settings.service';\nimport { StateService as StateServiceAbstraction } from 'jslib-common/abstractions/state.service';\nimport { StorageService as StorageServiceAbstraction } from 'jslib-common/abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from 'jslib-common/abstractions/sync.service';\nimport { TokenService as TokenServiceAbstraction } from 'jslib-common/abstractions/token.service';\nimport { TotpService as TotpServiceAbstraction } from 'jslib-common/abstractions/totp.service';\nimport { UserService as UserServiceAbstraction } from 'jslib-common/abstractions/user.service';\nimport { UserVerificationService as UserVerificationServiceAbstraction } from 'jslib-common/abstractions/userVerification.service';\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from 'jslib-common/abstractions/vaultTimeout.service';\nimport { ModalService } from './modal.service';\n\nimport { ThemeType } from 'jslib-common/enums/themeType';\n\nconst i18nService = new I18nService(window.navigator.language, 'locales');\nconst stateService = new StateService();\nconst broadcasterService = new BroadcasterService();\nconst messagingService = new BroadcasterMessagingService(broadcasterService);\nconst consoleLogService = new ConsoleLogService(false);\nconst platformUtilsService = new WebPlatformUtilsService(i18nService, messagingService, consoleLogService, () => storageService);\nconst storageService: StorageServiceAbstraction = new HtmlStorageService(platformUtilsService);\nconst secureStorageService: StorageServiceAbstraction = new MemoryStorageService();\nconst cryptoFunctionService: CryptoFunctionServiceAbstraction = new WebCryptoFunctionService(window,\n    platformUtilsService);\nconst cryptoService = new CryptoService(storageService,\n    platformUtilsService.isDev() ? storageService : secureStorageService, cryptoFunctionService, platformUtilsService,\n    consoleLogService);\nconst tokenService = new TokenService(storageService);\nconst appIdService = new AppIdService(storageService);\nconst environmentService = new EnvironmentService(storageService);\nconst apiService = new ApiService(tokenService, platformUtilsService, environmentService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst userService = new UserService(tokenService, storageService);\nconst settingsService = new SettingsService(userService, storageService);\nexport let searchService: SearchService = null;\nconst fileUploadService = new FileUploadService(consoleLogService, apiService);\nconst cipherService = new CipherService(cryptoService, userService, settingsService,\n    apiService, fileUploadService, storageService, i18nService, () => searchService, consoleLogService);\nconst folderService = new FolderService(cryptoService, userService, apiService, storageService,\n    i18nService, cipherService);\nconst collectionService = new CollectionService(cryptoService, userService, storageService, i18nService);\nsearchService = new SearchService(cipherService, consoleLogService, i18nService);\nconst policyService = new PolicyService(userService, storageService, apiService);\nconst sendService = new SendService(cryptoService, userService, apiService, fileUploadService, storageService,\n    i18nService, cryptoFunctionService);\nconst keyConnectorService = new KeyConnectorService(storageService, userService, cryptoService, apiService,\n    tokenService, consoleLogService);\nconst vaultTimeoutService = new VaultTimeoutService(cipherService, folderService, collectionService,\n    cryptoService, platformUtilsService, storageService, messagingService, searchService, userService, tokenService,\n    policyService, keyConnectorService, null, async () => messagingService.send('logout', { expired: false }));\nconst syncService = new SyncService(userService, apiService, settingsService,\n    folderService, cipherService, cryptoService, collectionService, storageService, messagingService, policyService,\n    sendService, consoleLogService, tokenService, keyConnectorService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst passwordGenerationService = new PasswordGenerationService(cryptoService, storageService, policyService);\nconst totpService = new TotpService(storageService, cryptoFunctionService, consoleLogService);\nconst containerService = new ContainerService(cryptoService);\nconst authService = new AuthService(cryptoService, apiService,\n    userService, tokenService, appIdService, i18nService, platformUtilsService, messagingService, vaultTimeoutService,\n    consoleLogService, cryptoFunctionService, environmentService, keyConnectorService);\nconst exportService = new ExportService(folderService, cipherService, apiService, cryptoService);\nconst importService = new ImportService(cipherService, folderService, apiService, i18nService, collectionService,\n    platformUtilsService, cryptoService);\nconst notificationsService = new NotificationsService(userService, syncService, appIdService, apiService, vaultTimeoutService,\n    environmentService, async () => messagingService.send('logout', { expired: true }), consoleLogService);\nconst auditService = new AuditService(cryptoFunctionService, apiService);\nconst eventLoggingService = new EventLoggingService(storageService, apiService, userService, cipherService, consoleLogService);\nconst userVerificationService = new UserVerificationService(cryptoService, i18nService, apiService);\n\ncontainerService.attachToWindow(window);\n\nexport function initFactory(): Function {\n    return async () => {\n        await (storageService as HtmlStorageService).init();\n\n        const urls = process.env.URLS as Urls;\n        urls.base ??= window.location.origin;\n        environmentService.setUrls(urls, false);\n\n        setTimeout(() => notificationsService.init(), 3000);\n\n        vaultTimeoutService.init(true);\n        const locale = await storageService.get<string>(ConstantsService.localeKey);\n        await i18nService.init(locale);\n        eventLoggingService.init(true);\n        authService.init();\n        const htmlEl = window.document.documentElement;\n        htmlEl.classList.add('locale_' + i18nService.translationLocale);\n\n        // Initial theme is set in index.html which must be updated if there are any changes to theming logic\n        platformUtilsService.onDefaultSystemThemeChange(async sysTheme => {\n            const bwTheme = await storageService.get<ThemeType>(ConstantsService.themeKey);\n            if (bwTheme === ThemeType.System) {\n                htmlEl.classList.remove('theme_' + ThemeType.Light, 'theme_' + ThemeType.Dark);\n                htmlEl.classList.add('theme_' + sysTheme);\n            }\n        });\n\n        stateService.save(ConstantsService.disableFaviconKey,\n            await storageService.get<boolean>(ConstantsService.disableFaviconKey));\n        stateService.save('enableGravatars', await storageService.get<boolean>('enableGravatars'));\n    };\n}\n\n@NgModule({\n    imports: [\n        ToasterModule,\n    ],\n    declarations: [],\n    providers: [\n        ValidationService,\n        AuthGuardService,\n        OrganizationGuardService,\n        OrganizationTypeGuardService,\n        UnauthGuardService,\n        RouterService,\n        EventService,\n        LockGuardService,\n        PolicyListService,\n        { provide: ModalServiceAbstraction, useClass: ModalService },\n        { provide: AuditServiceAbstraction, useValue: auditService },\n        { provide: AuthServiceAbstraction, useValue: authService },\n        { provide: CipherServiceAbstraction, useValue: cipherService },\n        { provide: FolderServiceAbstraction, useValue: folderService },\n        { provide: LogService, useValue: consoleLogService },\n        { provide: CollectionServiceAbstraction, useValue: collectionService },\n        { provide: EnvironmentServiceAbstraction, useValue: environmentService },\n        { provide: TotpServiceAbstraction, useValue: totpService },\n        { provide: TokenServiceAbstraction, useValue: tokenService },\n        { provide: I18nServiceAbstraction, useValue: i18nService },\n        { provide: CryptoServiceAbstraction, useValue: cryptoService },\n        { provide: PlatformUtilsServiceAbstraction, useValue: platformUtilsService },\n        { provide: PasswordGenerationServiceAbstraction, useValue: passwordGenerationService },\n        { provide: ApiServiceAbstraction, useValue: apiService },\n        { provide: FileUploadServiceAbstraction, useValue: fileUploadService },\n        { provide: SyncServiceAbstraction, useValue: syncService },\n        { provide: UserServiceAbstraction, useValue: userService },\n        { provide: MessagingServiceAbstraction, useValue: messagingService },\n        { provide: BroadcasterService, useValue: broadcasterService },\n        { provide: SettingsServiceAbstraction, useValue: settingsService },\n        { provide: VaultTimeoutServiceAbstraction, useValue: vaultTimeoutService },\n        { provide: StorageServiceAbstraction, useValue: storageService },\n        { provide: StateServiceAbstraction, useValue: stateService },\n        { provide: ExportServiceAbstraction, useValue: exportService },\n        { provide: SearchServiceAbstraction, useValue: searchService },\n        { provide: ImportServiceAbstraction, useValue: importService },\n        { provide: NotificationsServiceAbstraction, useValue: notificationsService },\n        { provide: CryptoFunctionServiceAbstraction, useValue: cryptoFunctionService },\n        { provide: EventLoggingServiceAbstraction, useValue: eventLoggingService },\n        { provide: PolicyServiceAbstraction, useValue: policyService },\n        { provide: SendServiceAbstraction, useValue: sendService },\n        { provide: KeyConnectorServiceAbstraction, useValue: keyConnectorService },\n        { provide: UserVerificationServiceAbstraction, useValue: userVerificationService },\n        { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n        { provide: LogService, useValue: consoleLogService },\n        {\n            provide: APP_INITIALIZER,\n            useFactory: initFactory,\n            deps: [],\n            multi: true,\n        },\n        {\n            provide: LOCALE_ID,\n            useFactory: () => i18nService.translationLocale,\n            deps: [],\n        },\n    ],\n})\nexport class ServicesModule {\n}\n","import { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nexport class BroadcasterMessagingService implements MessagingService {\n    constructor(private broadcasterService: BroadcasterService) { }\n\n    send(subscriber: string, arg: any = {}) {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        this.broadcasterService.send(message);\n    }\n}\n","import { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nexport class HtmlStorageService implements StorageService {\n    private localStorageKeys = new Set(['appId', 'anonymousAppId', 'rememberedEmail', 'passwordGenerationOptions',\n        ConstantsService.disableFaviconKey, 'rememberEmail', 'enableGravatars', 'enableFullWidth',\n        ConstantsService.localeKey, ConstantsService.autoConfirmFingerprints,\n        ConstantsService.vaultTimeoutKey, ConstantsService.vaultTimeoutActionKey, ConstantsService.ssoCodeVerifierKey,\n        ConstantsService.ssoStateKey, 'ssoOrgIdentifier', ConstantsService.themeKey]);\n    private localStorageStartsWithKeys = ['twoFactorToken_', ConstantsService.collapsedGroupingsKey + '_'];\n    private memoryStorageStartsWithKeys = ['ciphers_', 'folders_', 'collections_', 'settings_', 'lastSync_'];\n    private memoryStorage = new Map<string, string>();\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async init() {\n        // LockOption -> VaultTimeout (uses the same legacy string value for backwards compat)\n        const vaultTimeout = await this.get<number>(ConstantsService.vaultTimeoutKey);\n        if (vaultTimeout == null && !this.platformUtilsService.isDev()) {\n            await this.save(ConstantsService.vaultTimeoutKey, 15);\n        }\n\n        // Default Action to lock\n        const vaultTimeoutAction = await this.get<string>(ConstantsService.vaultTimeoutActionKey);\n        if (vaultTimeoutAction == null) {\n            await this.save(ConstantsService.vaultTimeoutActionKey, 'lock');\n        }\n    }\n\n    get<T>(key: string): Promise<T> {\n        let json: string = null;\n        if (this.isLocalStorage(key)) {\n            json = window.localStorage.getItem(key);\n        } else if (this.isMemoryStorage(key)) {\n            json = this.memoryStorage.get(key);\n        } else {\n            json = window.sessionStorage.getItem(key);\n        }\n        if (json != null) {\n            const obj = JSON.parse(json);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    async has(key: string): Promise<boolean> {\n        return await this.get(key) != null;\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n\n        if (obj instanceof Set) {\n            obj = Array.from(obj);\n        }\n\n        const json = JSON.stringify(obj);\n        if (this.isLocalStorage(key)) {\n            window.localStorage.setItem(key, json);\n        } else if (this.isMemoryStorage(key)) {\n            this.memoryStorage.set(key, json);\n        } else {\n            window.sessionStorage.setItem(key, json);\n        }\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        if (this.isLocalStorage(key)) {\n            window.localStorage.removeItem(key);\n        } else if (this.isMemoryStorage(key)) {\n            this.memoryStorage.delete(key);\n        } else {\n            window.sessionStorage.removeItem(key);\n        }\n        return Promise.resolve();\n    }\n\n    private isLocalStorage(key: string): boolean {\n        if (this.localStorageKeys.has(key)) {\n            return true;\n        }\n        for (const swKey of this.localStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private isMemoryStorage(key: string): boolean {\n        for (const swKey of this.memoryStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","import { I18nService as BaseI18nService } from 'jslib-common/services/i18n.service';\n\nexport class I18nService extends BaseI18nService {\n    constructor(systemLanguage: string, localesDirectory: string) {\n        super(systemLanguage || 'en-US', localesDirectory, async (formattedLocale: string) => {\n            const filePath = this.localesDirectory + '/' + formattedLocale + '/messages.json?cache=' +\n                process.env.CACHE_TAG;\n            const localesResult = await fetch(filePath);\n            const locales = await localesResult.json();\n            return locales;\n        });\n\n        // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n        this.supportedTranslationLocales = [\n            'en', 'az', 'bg', 'ca', 'cs', 'da', 'de', 'el', 'eo', 'en-GB', 'en-IN', 'es', 'et', 'fi', 'fr', 'he', 'hr', 'hu', 'id', 'it', 'ja', 'kn', 'ko', 'lv', 'ml', 'nb',\n            'nl', 'pl', 'pt-PT', 'pt-BR', 'ro', 'ru', 'sk', 'sr', 'sv', 'tr', 'uk', 'zh-CN', 'zh-TW',\n        ];\n    }\n}\n","import { I18nService as I18nServiceAbstraction } from '../abstractions/i18n.service';\n\nexport class I18nService implements I18nServiceAbstraction {\n    locale: string;\n    // First locale is the default (English)\n    supportedTranslationLocales: string[] = ['en'];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames = new Map<string, string>([\n        ['af', 'Afrikaans'],\n        ['az', 'Azərbaycanca'],\n        ['be', 'Беларуская'],\n        ['bg', 'български'],\n        ['ca', 'català'],\n        ['cs', 'čeština'],\n        ['da', 'dansk'],\n        ['de', 'Deutsch'],\n        ['el', 'Ελληνικά'],\n        ['en', 'English'],\n        ['en-GB', 'English (British)'],\n        ['eo', 'Esperanto'],\n        ['es', 'español'],\n        ['et', 'eesti'],\n        ['fa', 'فارسی'],\n        ['fi', 'suomi'],\n        ['fr', 'français'],\n        ['he', 'עברית'],\n        ['hi', 'हिन्दी'],\n        ['hr', 'hrvatski'],\n        ['hu', 'magyar'],\n        ['id', 'Bahasa Indonesia'],\n        ['it', 'italiano'],\n        ['ja', '日本語'],\n        ['ko', '한국어'],\n        ['lv', 'Latvietis'],\n        ['ml', 'മലയാളം'],\n        ['nb', 'norsk (bokmål)'],\n        ['nl', 'Nederlands'],\n        ['pl', 'polski'],\n        ['pt-BR', 'português do Brasil'],\n        ['pt-PT', 'português'],\n        ['ro', 'română'],\n        ['ru', 'русский'],\n        ['sk', 'slovenčina'],\n        ['sr', 'Српски'],\n        ['sv', 'svenska'],\n        ['th', 'ไทย'],\n        ['tr', 'Türkçe'],\n        ['uk', 'українська'],\n        ['vi', 'Tiếng Việt'],\n        ['zh-CN', '中文（中国大陆）'],\n        ['zh-TW', '中文（台灣）'],\n    ]);\n\n    protected inited: boolean;\n    protected defaultMessages: any = {};\n    protected localeMessages: any = {};\n\n    constructor(protected systemLanguage: string, protected localesDirectory: string,\n        protected getLocalesJson: (formattedLocale: string) => Promise<any>) {\n        this.systemLanguage = systemLanguage.replace('_', '-');\n    }\n\n    async init(locale?: string) {\n        if (this.inited) {\n            throw new Error('i18n already initialized.');\n        }\n        if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n            throw new Error('supportedTranslationLocales not set.');\n        }\n\n        this.inited = true;\n        this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n        try {\n            this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: 'base' });\n        } catch {\n            this.collator = null;\n        }\n\n        if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n            this.translationLocale = this.translationLocale.slice(0, 2);\n\n            if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n                this.translationLocale = this.supportedTranslationLocales[0];\n            }\n        }\n\n        if (this.localesDirectory != null) {\n            await this.loadMessages(this.translationLocale, this.localeMessages);\n            if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n                await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n            }\n        }\n    }\n\n    t(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.translate(id, p1, p2, p3);\n    }\n\n    translate(id: string, p1?: string, p2?: string, p3?: string): string {\n        let result: string;\n        if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n            result = this.localeMessages[id];\n        } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n            result = this.defaultMessages[id];\n        } else {\n            result = '';\n        }\n\n        if (result !== '') {\n            if (p1 != null) {\n                result = result.split('__$1__').join(p1);\n            }\n            if (p2 != null) {\n                result = result.split('__$2__').join(p2);\n            }\n            if (p3 != null) {\n                result = result.split('__$3__').join(p3);\n            }\n        }\n\n        return result;\n    }\n\n    private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n        const formattedLocale = locale.replace('-', '_');\n        const locales = await this.getLocalesJson(formattedLocale);\n        for (const prop in locales) {\n            if (!locales.hasOwnProperty(prop)) {\n                continue;\n            }\n            messagesObj[prop] = locales[prop].message;\n\n            if (locales[prop].placeholders) {\n                for (const placeProp in locales[prop].placeholders) {\n                    if (!locales[prop].placeholders.hasOwnProperty(placeProp) ||\n                        !locales[prop].placeholders[placeProp].content) {\n                        continue;\n                    }\n\n                    const replaceToken = '\\\\$' + placeProp.toUpperCase() + '\\\\$';\n                    let replaceContent = locales[prop].placeholders[placeProp].content;\n                    if (replaceContent === '$1' || replaceContent === '$2' || replaceContent === '$3') {\n                        replaceContent = '__$' + replaceContent + '__';\n                    }\n                    messagesObj[prop] = messagesObj[prop].replace(new RegExp(replaceToken, 'g'), replaceContent);\n                }\n            }\n        }\n    }\n\n}\n","import { StorageService } from 'jslib-common/abstractions/storage.service';\n\nexport class MemoryStorageService implements StorageService {\n    private store = new Map<string, any>();\n\n    get<T>(key: string): Promise<T> {\n        if (this.store.has(key)) {\n            const obj = this.store.get(key);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    async has(key: string): Promise<boolean> {\n        return this.get(key) != null;\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n        this.store.set(key, obj);\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        this.store.delete(key);\n        return Promise.resolve();\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from 'jslib-angular/services/passwordReprompt.service';\nimport { PasswordRepromptComponent } from '../app/components/password-reprompt.component';\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n    component = PasswordRepromptComponent;\n}\n","import { Injectable } from '@angular/core';\n\nimport { KeyConnectorService } from 'jslib-common/abstractions/keyConnector.service';\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from 'jslib-common/abstractions/passwordReprompt.service';\n\nimport { PasswordRepromptComponent } from '../components/password-reprompt.component';\nimport { ModalService } from './modal.service';\n\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n    protected component = PasswordRepromptComponent;\n\n    constructor(private modalService: ModalService, private keyConnectorService: KeyConnectorService) { }\n\n    protectedFields() {\n        return ['TOTP', 'Password', 'H_Field', 'Card Number', 'Security Code'];\n    }\n\n    async showPasswordPrompt() {\n        if (!await this.enabled()) {\n            return true;\n        }\n\n        const ref = this.modalService.open(this.component, {allowMultipleModals: true});\n\n        if (ref == null) {\n            return false;\n        }\n\n        const result = await ref.onClosedPromise();\n        return result === true;\n    }\n\n    async enabled() {\n        return !await this.keyConnectorService.getUsesKeyConnector();\n    }\n}\n","import Swal, { SweetAlertIcon } from 'sweetalert2';\n\nimport { DeviceType } from 'jslib-common/enums/deviceType';\nimport { ThemeType } from 'jslib-common/enums/themeType';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n    identityClientId: string = 'web';\n\n    private browserCache: DeviceType = null;\n    private prefersColorSchemeDark = window.matchMedia('(prefers-color-scheme: dark)');\n\n    constructor(private i18nService: I18nService, private messagingService: MessagingService,\n        private logService: LogService, private storageService: () => StorageService) { }\n\n    getDevice(): DeviceType {\n        if (this.browserCache != null) {\n            return this.browserCache;\n        }\n\n        if (navigator.userAgent.indexOf(' Firefox/') !== -1 || navigator.userAgent.indexOf(' Gecko/') !== -1) {\n            this.browserCache = DeviceType.FirefoxBrowser;\n        } else if (navigator.userAgent.indexOf(' OPR/') >= 0) {\n            this.browserCache = DeviceType.OperaBrowser;\n        } else if (navigator.userAgent.indexOf(' Edg/') !== -1) {\n            this.browserCache = DeviceType.EdgeBrowser;\n        } else if (navigator.userAgent.indexOf(' Vivaldi/') !== -1) {\n            this.browserCache = DeviceType.VivaldiBrowser;\n        } else if (navigator.userAgent.indexOf(' Safari/') !== -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n            this.browserCache = DeviceType.SafariBrowser;\n        } else if ((window as any).chrome && navigator.userAgent.indexOf(' Chrome/') !== -1) {\n            this.browserCache = DeviceType.ChromeBrowser;\n        } else if (navigator.userAgent.indexOf(' Trident/') !== -1) {\n            this.browserCache = DeviceType.IEBrowser;\n        } else {\n            this.browserCache = DeviceType.UnknownBrowser;\n        }\n\n        return this.browserCache;\n    }\n\n    getDeviceString(): string {\n        const device = DeviceType[this.getDevice()].toLowerCase();\n        return device.replace('browser', '');\n    }\n\n    isFirefox(): boolean {\n        return this.getDevice() === DeviceType.FirefoxBrowser;\n    }\n\n    isChrome(): boolean {\n        return this.getDevice() === DeviceType.ChromeBrowser;\n    }\n\n    isEdge(): boolean {\n        return this.getDevice() === DeviceType.EdgeBrowser;\n    }\n\n    isOpera(): boolean {\n        return this.getDevice() === DeviceType.OperaBrowser;\n    }\n\n    isVivaldi(): boolean {\n        return this.getDevice() === DeviceType.VivaldiBrowser;\n    }\n\n    isSafari(): boolean {\n        return this.getDevice() === DeviceType.SafariBrowser;\n    }\n\n    isIE(): boolean {\n        return this.getDevice() === DeviceType.IEBrowser;\n    }\n\n    isMacAppStore(): boolean {\n        return false;\n    }\n\n    isViewOpen(): Promise<boolean> {\n        return Promise.resolve(false);\n    }\n\n    launchUri(uri: string, options?: any): void {\n        const a = document.createElement('a');\n        a.href = uri;\n        if (options == null || !options.sameWindow) {\n            a.target = '_blank';\n            a.rel = 'noreferrer noopener';\n        }\n        a.classList.add('d-none');\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n        let blob: Blob = null;\n        let type: string = null;\n        const fileNameLower = fileName.toLowerCase();\n        let doDownload = true;\n        if (fileNameLower.endsWith('.pdf')) {\n            type = 'application/pdf';\n            doDownload = false;\n        } else if (fileNameLower.endsWith('.xlsx')) {\n            type = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n        } else if (fileNameLower.endsWith('.docx')) {\n            type = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n        } else if (fileNameLower.endsWith('.pptx')) {\n            type = 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\n        } else if (fileNameLower.endsWith('.csv')) {\n            type = 'text/csv';\n        } else if (fileNameLower.endsWith('.png')) {\n            type = 'image/png';\n        } else if (fileNameLower.endsWith('.jpg') || fileNameLower.endsWith('.jpeg')) {\n            type = 'image/jpeg';\n        } else if (fileNameLower.endsWith('.gif')) {\n            type = 'image/gif';\n        }\n        if (type != null) {\n            blobOptions = blobOptions || {};\n            if (blobOptions.type == null) {\n                blobOptions.type = type;\n            }\n        }\n        if (blobOptions != null && !this.isIE()) {\n            blob = new Blob([blobData], blobOptions);\n        } else {\n            blob = new Blob([blobData]);\n        }\n        if (navigator.msSaveOrOpenBlob) {\n            navigator.msSaveBlob(blob, fileName);\n        } else {\n            const a = win.document.createElement('a');\n            if (doDownload) {\n                a.download = fileName;\n            } else if (!this.isSafari()) {\n                a.target = '_blank';\n            }\n            a.href = URL.createObjectURL(blob);\n            a.style.position = 'fixed';\n            win.document.body.appendChild(a);\n            a.click();\n            win.document.body.removeChild(a);\n        }\n    }\n\n    getApplicationVersion(): Promise<string> {\n        return Promise.resolve(process.env.APPLICATION_VERSION || '-');\n    }\n\n    supportsWebAuthn(win: Window): boolean {\n        return (typeof (PublicKeyCredential) !== 'undefined');\n    }\n\n    supportsDuo(): boolean {\n        return true;\n    }\n\n    showToast(type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any): void {\n        this.messagingService.send('showToast', {\n            text: text,\n            title: title,\n            type: type,\n            options: options,\n        });\n    }\n\n    async showDialog(body: string, title?: string, confirmText?: string, cancelText?: string, type?: string,\n        bodyIsHtml: boolean = false) {\n        let iconClasses: string = null;\n        if (type != null) {\n            // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n            switch (type) {\n                case 'success':\n                    iconClasses = 'fa-check text-success';\n                    break;\n                case 'warning':\n                    iconClasses = 'fa-warning text-warning';\n                    break;\n                case 'error':\n                    iconClasses = 'fa-bolt text-danger';\n                    break;\n                case 'info':\n                    iconClasses = 'fa-info-circle text-info';\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        const bootstrapModal = document.querySelector('div.modal');\n        if (bootstrapModal != null) {\n            bootstrapModal.removeAttribute('tabindex');\n        }\n\n        const iconHtmlStr = iconClasses != null ? `<i class=\"swal-custom-icon fa ${iconClasses}\"></i>` : undefined;\n        const confirmed = await Swal.fire({\n            heightAuto: false,\n            buttonsStyling: false,\n            icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n            iconHtml: iconHtmlStr,\n            text: bodyIsHtml ? null : body,\n            html: bodyIsHtml ? body : null,\n            titleText: title,\n            showCancelButton: (cancelText != null),\n            cancelButtonText: cancelText,\n            showConfirmButton: true,\n            confirmButtonText: confirmText == null ? this.i18nService.t('ok') : confirmText,\n        });\n\n        if (bootstrapModal != null) {\n            bootstrapModal.setAttribute('tabindex', '-1');\n        }\n\n        return confirmed.value;\n    }\n\n    isDev(): boolean {\n        return process.env.NODE_ENV === 'development';\n    }\n\n    isSelfHost(): boolean {\n        return process.env.ENV.toString() === 'selfhosted';\n    }\n\n    copyToClipboard(text: string, options?: any): void | boolean {\n        let win = window;\n        let doc = window.document;\n        if (options && (options.window || options.win)) {\n            win = options.window || options.win;\n            doc = win.document;\n        } else if (options && options.doc) {\n            doc = options.doc;\n        }\n        if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n            // IE specific code path to prevent textarea being shown while dialog is visible.\n            (win as any).clipboardData.setData('Text', text);\n        } else if (doc.queryCommandSupported && doc.queryCommandSupported('copy')) {\n            const textarea = doc.createElement('textarea');\n            textarea.textContent = text;\n            // Prevent scrolling to bottom of page in MS Edge.\n            textarea.style.position = 'fixed';\n            let copyEl = doc.body;\n            // For some reason copy command won't work when modal is open if appending to body\n            if (doc.body.classList.contains('modal-open')) {\n                copyEl = doc.body.querySelector<HTMLElement>('.modal');\n            }\n            copyEl.appendChild(textarea);\n            textarea.select();\n            let success = false;\n            try {\n                // Security exception may be thrown by some browsers.\n                success = doc.execCommand('copy');\n                if (!success) {\n                    this.logService.debug('Copy command unsupported or disabled.');\n                }\n            } catch (e) {\n                // tslint:disable-next-line\n                console.warn('Copy to clipboard failed.', e);\n            } finally {\n                copyEl.removeChild(textarea);\n            }\n            return success;\n        }\n    }\n\n    readFromClipboard(options?: any): Promise<string> {\n        throw new Error('Cannot read from clipboard on web.');\n    }\n\n    supportsBiometric() {\n        return Promise.resolve(false);\n    }\n\n    authenticateBiometric() {\n        return Promise.resolve(false);\n    }\n\n    supportsSecureStorage() {\n        return false;\n    }\n\n    getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n        return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n    }\n\n    async getEffectiveTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n        const theme = await this.storageService().get<ThemeType>(ConstantsService.themeKey);\n        if (theme === ThemeType.Dark) {\n            return ThemeType.Dark;\n        } else if (theme === ThemeType.System) {\n            return this.getDefaultSystemTheme();\n        } else {\n            return ThemeType.Light;\n        }\n    }\n\n    onDefaultSystemThemeChange(callback: ((theme: ThemeType.Light | ThemeType.Dark) => unknown)) {\n        try {\n            this.prefersColorSchemeDark.addEventListener('change', ({ matches }) => {\n                callback(matches ? ThemeType.Dark : ThemeType.Light);\n            });\n        } catch (e) {\n            // Safari older than v14\n            this.prefersColorSchemeDark.addListener(ev => {\n                callback(ev.matches ? ThemeType.Dark : ThemeType.Light);\n            });\n        }\n    }\n}\n","import { DeviceType } from '../enums/deviceType';\nimport { PolicyType } from '../enums/policyType';\n\nimport { ApiService as ApiServiceAbstraction } from '../abstractions/api.service';\nimport { EnvironmentService } from '../abstractions/environment.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\n\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EmergencyAccessAcceptRequest } from '../models/request/emergencyAccessAcceptRequest';\nimport { EmergencyAccessConfirmRequest } from '../models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessInviteRequest } from '../models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessPasswordRequest } from '../models/request/emergencyAccessPasswordRequest';\nimport { EmergencyAccessUpdateRequest } from '../models/request/emergencyAccessUpdateRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationSponsorshipCreateRequest } from '../models/request/organization/organizationSponsorshipCreateRequest';\nimport { OrganizationSponsorshipRedeemRequest } from '../models/request/organization/organizationSponsorshipRedeemRequest';\nimport { OrganizationSsoRequest } from '../models/request/organization/organizationSsoRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationImportRequest } from '../models/request/organizationImportRequest';\nimport { OrganizationKeysRequest } from '../models/request/organizationKeysRequest';\nimport { OrganizationSubscriptionUpdateRequest } from '../models/request/organizationSubscriptionUpdateRequest';\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserBulkConfirmRequest } from '../models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from '../models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from '../models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { OrganizationUserResetPasswordRequest } from '../models/request/organizationUserResetPasswordRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PolicyRequest } from '../models/request/policyRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { ProviderAddOrganizationRequest } from '../models/request/provider/providerAddOrganizationRequest';\nimport { ProviderOrganizationCreateRequest } from '../models/request/provider/providerOrganizationCreateRequest';\nimport { ProviderSetupRequest } from '../models/request/provider/providerSetupRequest';\nimport { ProviderUpdateRequest } from '../models/request/provider/providerUpdateRequest';\nimport { ProviderUserAcceptRequest } from '../models/request/provider/providerUserAcceptRequest';\nimport { ProviderUserBulkConfirmRequest } from '../models/request/provider/providerUserBulkConfirmRequest';\nimport { ProviderUserBulkRequest } from '../models/request/provider/providerUserBulkRequest';\nimport { ProviderUserConfirmRequest } from '../models/request/provider/providerUserConfirmRequest';\nimport { ProviderUserInviteRequest } from '../models/request/provider/providerUserInviteRequest';\nimport { ProviderUserUpdateRequest } from '../models/request/provider/providerUserUpdateRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SecretVerificationRequest } from '../models/request/secretVerificationRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { SendAccessRequest } from '../models/request/sendAccessRequest';\nimport { SendRequest } from '../models/request/sendRequest';\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTempPasswordRequest } from '../models/request/updateTempPasswordRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from '../models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from '../models/request/updateTwoFactorWebAuthnRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { Utils } from '../misc/utils';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { AttachmentResponse } from '../models/response/attachmentResponse';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport {\n    EmergencyAccessGranteeDetailsResponse,\n    EmergencyAccessGrantorDetailsResponse,\n    EmergencyAccessTakeoverResponse,\n    EmergencyAccessViewResponse\n} from '../models/response/emergencyAccessResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityCaptchaResponse } from '../models/response/identityCaptchaResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationSsoResponse } from '../models/response/organization/organizationSsoResponse';\nimport { OrganizationAutoEnrollStatusResponse } from '../models/response/organizationAutoEnrollStatusResponse';\nimport { OrganizationKeysResponse } from '../models/response/organizationKeysResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport { OrganizationUserBulkPublicKeyResponse } from '../models/response/organizationUserBulkPublicKeyResponse';\nimport { OrganizationUserBulkResponse } from '../models/response/organizationUserBulkResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserResetPasswordDetailsReponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PlanResponse } from '../models/response/planResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { ProviderOrganizationOrganizationDetailsResponse, ProviderOrganizationResponse } from '../models/response/provider/providerOrganizationResponse';\nimport { ProviderResponse } from '../models/response/provider/providerResponse';\nimport { ProviderUserBulkPublicKeyResponse } from '../models/response/provider/providerUserBulkPublicKeyResponse';\nimport { ProviderUserBulkResponse } from '../models/response/provider/providerUserBulkResponse';\nimport {\n    ProviderUserResponse,\n    ProviderUserUserDetailsResponse\n} from '../models/response/provider/providerUserResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SendAccessResponse } from '../models/response/sendAccessResponse';\nimport { SendFileDownloadDataResponse } from '../models/response/sendFileDownloadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\nimport { SendResponse } from '../models/response/sendResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\nimport { TaxRateResponse } from '../models/response/taxRateResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport { TwoFactorWebAuthnResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { ChallengeResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nimport { SetKeyConnectorKeyRequest } from '../models/request/account/setKeyConnectorKeyRequest';\nimport { VerifyOTPRequest } from '../models/request/account/verifyOTPRequest';\nimport { KeyConnectorUserKeyRequest } from '../models/request/keyConnectorUserKeyRequest';\nimport { KeyConnectorUserKeyResponse } from '../models/response/keyConnectorUserKeyResponse';\nimport { SendAccessView } from '../models/view/sendAccessView';\n\n\n\nexport class ApiService implements ApiServiceAbstraction {\n    protected apiKeyRefresh: (clientId: string, clientSecret: string) => Promise<any>;\n    private device: DeviceType;\n    private deviceType: string;\n    private isWebClient = false;\n    private isDesktopClient = false;\n\n    constructor(private tokenService: TokenService, private platformUtilsService: PlatformUtilsService,\n        private environmentService: EnvironmentService, private logoutCallback: (expired: boolean) => Promise<void>,\n        private customUserAgent: string = null) {\n        this.device = platformUtilsService.getDevice();\n        this.deviceType = this.device.toString();\n        this.isWebClient = this.device === DeviceType.IEBrowser || this.device === DeviceType.ChromeBrowser ||\n            this.device === DeviceType.EdgeBrowser || this.device === DeviceType.FirefoxBrowser ||\n            this.device === DeviceType.OperaBrowser || this.device === DeviceType.SafariBrowser ||\n            this.device === DeviceType.UnknownBrowser || this.device === DeviceType.VivaldiBrowser;\n        this.isDesktopClient = this.device === DeviceType.WindowsDesktop || this.device === DeviceType.MacOsDesktop ||\n            this.device === DeviceType.LinuxDesktop;\n    }\n\n    // Auth APIs\n\n    async postIdentityToken(request: TokenRequest): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n        const headers = new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n        request.alterIdentityTokenHeaders(headers);\n        const response = await this.fetch(new Request(this.environmentService.getIdentityUrl() + '/connect/token', {\n            body: this.qsStringify(request.toIdentityToken(request.clientId ?? this.platformUtilsService.identityClientId)),\n            credentials: this.getCredentials(),\n            cache: 'no-store',\n            headers: headers,\n            method: 'POST',\n        }));\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        }\n\n        if (responseJson != null) {\n            if (response.status === 200) {\n                return new IdentityTokenResponse(responseJson);\n            } else if (response.status === 400 && responseJson.TwoFactorProviders2 &&\n                Object.keys(responseJson.TwoFactorProviders2).length) {\n                await this.tokenService.clearTwoFactorToken(request.email);\n                return new IdentityTwoFactorResponse(responseJson);\n            } else if (response.status === 400 && responseJson.HCaptcha_SiteKey &&\n                Object.keys(responseJson.HCaptcha_SiteKey).length) {\n                return new IdentityCaptchaResponse(responseJson);\n            }\n        }\n\n        return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n    }\n\n    async refreshIdentityToken(): Promise<any> {\n        try {\n            await this.doAuthRefresh();\n        } catch (e) {\n            return Promise.reject(null);\n        }\n    }\n\n    // Account APIs\n\n    async getProfile(): Promise<ProfileResponse> {\n        const r = await this.send('GET', '/accounts/profile', null, true, true);\n        return new ProfileResponse(r);\n    }\n\n    async getUserBilling(): Promise<BillingResponse> {\n        const r = await this.send('GET', '/accounts/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getUserSubscription(): Promise<SubscriptionResponse> {\n        const r = await this.send('GET', '/accounts/subscription', null, true, true);\n        return new SubscriptionResponse(r);\n    }\n\n    async getTaxInfo(): Promise<TaxInfoResponse> {\n        const r = await this.send('GET', '/accounts/tax', null, true, true);\n        return new TaxInfoResponse(r);\n    }\n\n    async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n        const r = await this.send('PUT', '/accounts/profile', request, true, true);\n        return new ProfileResponse(r);\n    }\n\n    putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n        return this.send('PUT', '/accounts/tax', request, true, false);\n    }\n\n    async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n        const r = await this.send('POST', '/accounts/prelogin', request, false, true);\n        return new PreloginResponse(r);\n    }\n\n    postEmailToken(request: EmailTokenRequest): Promise<any> {\n        return this.send('POST', '/accounts/email-token', request, true, false);\n    }\n\n    postEmail(request: EmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/email', request, true, false);\n    }\n\n    postPassword(request: PasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/password', request, true, false);\n    }\n\n    setPassword(request: SetPasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/set-password', request, true, false);\n    }\n\n    postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n        return this.send('POST', '/accounts/set-key-connector-key', request, true, false);\n    }\n\n    postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/security-stamp', request, true, false);\n    }\n\n    deleteAccount(request: SecretVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/accounts', request, true, false);\n    }\n\n    async getAccountRevisionDate(): Promise<number> {\n        const r = await this.send('GET', '/accounts/revision-date', null, true, true);\n        return r as number;\n    }\n\n    postPasswordHint(request: PasswordHintRequest): Promise<any> {\n        return this.send('POST', '/accounts/password-hint', request, false, false);\n    }\n\n    postRegister(request: RegisterRequest): Promise<any> {\n        return this.send('POST', '/accounts/register', request, false, false);\n    }\n\n    async postPremium(data: FormData): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/premium', data, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postIapCheck(request: IapCheckRequest): Promise<any> {\n        return this.send('POST', '/accounts/iap-check', request, true, false);\n    }\n\n    postReinstatePremium(): Promise<any> {\n        return this.send('POST', '/accounts/reinstate-premium', null, true, false);\n    }\n\n    postCancelPremium(): Promise<any> {\n        return this.send('POST', '/accounts/cancel-premium', null, true, false);\n    }\n\n    async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postAccountPayment(request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/accounts/payment', request, true, false);\n    }\n\n    postAccountLicense(data: FormData): Promise<any> {\n        return this.send('POST', '/accounts/license', data, true, false);\n    }\n\n    postAccountKeys(request: KeysRequest): Promise<any> {\n        return this.send('POST', '/accounts/keys', request, true, false);\n    }\n\n    postAccountKey(request: UpdateKeyRequest): Promise<any> {\n        return this.send('POST', '/accounts/key', request, true, false);\n    }\n\n    postAccountVerifyEmail(): Promise<any> {\n        return this.send('POST', '/accounts/verify-email', null, true, false);\n    }\n\n    postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-email-token', request, false, false);\n    }\n\n    postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-password', request, true, false);\n    }\n\n    postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover', request, false, false);\n    }\n\n    postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover-token', request, false, false);\n    }\n\n    postAccountKdf(request: KdfRequest): Promise<any> {\n        return this.send('POST', '/accounts/kdf', request, true, false);\n    }\n\n    async deleteSsoUser(organizationId: string): Promise<any> {\n        return this.send('DELETE', '/accounts/sso/' + organizationId, null, true, false);\n    }\n\n    async getSsoUserIdentifier(): Promise<string> {\n        return this.send('GET', '/accounts/sso/user-identifier', null, true, true);\n    }\n\n    async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/accounts/api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postUserRotateApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/accounts/rotate-api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n        return this.send('PUT', '/accounts/update-temp-password', request, true, false);\n    }\n\n    postAccountRequestOTP(): Promise<void> {\n        return this.send('POST', '/accounts/request-otp', null, true, false);\n    }\n\n    postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n        return this.send('POST', '/accounts/verify-otp', request, true, false);\n    }\n\n    postConvertToKeyConnector(): Promise<void> {\n        return this.send('POST', '/accounts/convert-to-key-connector', null, true, false);\n    }\n\n    // Folder APIs\n\n    async getFolder(id: string): Promise<FolderResponse> {\n        const r = await this.send('GET', '/folders/' + id, null, true, true);\n        return new FolderResponse(r);\n    }\n\n    async postFolder(request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('POST', '/folders', request, true, true);\n        return new FolderResponse(r);\n    }\n\n    async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('PUT', '/folders/' + id, request, true, true);\n        return new FolderResponse(r);\n    }\n\n    deleteFolder(id: string): Promise<any> {\n        return this.send('DELETE', '/folders/' + id, null, true, false);\n    }\n\n    // Send APIs\n\n    async getSend(id: string): Promise<SendResponse> {\n        const r = await this.send('GET', '/sends/' + id, null, true, true);\n        return new SendResponse(r);\n    }\n\n    async postSendAccess(id: string, request: SendAccessRequest, apiUrl?: string): Promise<SendAccessResponse> {\n        const addSendIdHeader = (headers: Headers) => {\n            headers.set('Send-Id', id);\n        };\n        const r = await this.send('POST', '/sends/access/' + id, request, false, true, apiUrl, addSendIdHeader);\n        return new SendAccessResponse(r);\n    }\n\n    async getSendFileDownloadData(send: SendAccessView, request: SendAccessRequest, apiUrl?: string): Promise<SendFileDownloadDataResponse> {\n        const addSendIdHeader = (headers: Headers) => {\n            headers.set('Send-Id', send.id);\n        };\n        const r = await this.send('POST', '/sends/' + send.id + '/access/file/' + send.file.id, request, false, true,\n            apiUrl, addSendIdHeader);\n        return new SendFileDownloadDataResponse(r);\n    }\n\n    async getSends(): Promise<ListResponse<SendResponse>> {\n        const r = await this.send('GET', '/sends', null, true, true);\n        return new ListResponse(r, SendResponse);\n    }\n\n    async postSend(request: SendRequest): Promise<SendResponse> {\n        const r = await this.send('POST', '/sends', request, true, true);\n        return new SendResponse(r);\n    }\n\n    async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n        const r = await this.send('POST', '/sends/file/v2', request, true, true);\n        return new SendFileUploadDataResponse(r);\n    }\n\n    async renewSendFileUploadUrl(sendId: string, fileId: string): Promise<SendFileUploadDataResponse> {\n        const r = await this.send('GET', '/sends/' + sendId + '/file/' + fileId, null, true, true);\n        return new SendFileUploadDataResponse(r);\n    }\n\n    postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n        return this.send('POST', '/sends/' + sendId + '/file/' + fileId, data, true, false);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n        const r = await this.send('POST', '/sends/file', data, true, true);\n        return new SendResponse(r);\n    }\n\n    async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n        const r = await this.send('PUT', '/sends/' + id, request, true, true);\n        return new SendResponse(r);\n    }\n\n    async putSendRemovePassword(id: string): Promise<SendResponse> {\n        const r = await this.send('PUT', '/sends/' + id + '/remove-password', null, true, true);\n        return new SendResponse(r);\n    }\n\n    deleteSend(id: string): Promise<any> {\n        return this.send('DELETE', '/sends/' + id, null, true, false);\n    }\n\n    // Cipher APIs\n\n    async getCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id, null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('GET', '/ciphers/organization-details?organizationId=' + organizationId,\n            null, true, true);\n        return new ListResponse(r, CipherResponse);\n    }\n\n    async postCipher(request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/create', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id, request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipher(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id, null, true, false);\n    }\n\n    deleteCipherAdmin(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/admin', null, true, false);\n    }\n\n    deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers', request, true, false);\n    }\n\n    deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers/admin', request, true, false);\n    }\n\n    putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/move', request, true, false);\n    }\n\n    async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/share', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/share', request, true, false);\n    }\n\n    putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections', request, true, false);\n    }\n\n    putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections-admin', request, true, false);\n    }\n\n    postPurgeCiphers(request: SecretVerificationRequest, organizationId: string = null): Promise<any> {\n        let path = '/ciphers/purge';\n        if (organizationId != null) {\n            path += '?organizationId=' + organizationId;\n        }\n        return this.send('POST', path, request, true, false);\n    }\n\n    postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import', request, true, false);\n    }\n\n    postImportOrganizationCiphers(organizationId: string, request: ImportOrganizationCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import-organization?organizationId=' + organizationId, request, true, false);\n    }\n\n    putDeleteCipher(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/delete', null, true, false);\n    }\n\n    putDeleteCipherAdmin(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/delete-admin', null, true, false);\n    }\n\n    putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/delete', request, true, false);\n    }\n\n    putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/delete-admin', request, true, false);\n    }\n\n    async putRestoreCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/restore', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/restore-admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putRestoreManyCiphers(request: CipherBulkDeleteRequest): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('PUT', '/ciphers/restore', request, true, true);\n        return new ListResponse<CipherResponse>(r, CipherResponse);\n    }\n\n    // Attachments APIs\n\n    async getAttachmentData(cipherId: string, attachmentId: string, emergencyAccessId?: string): Promise<AttachmentResponse> {\n        const path = (emergencyAccessId != null ?\n            '/emergency-access/' + emergencyAccessId + '/' :\n            '/ciphers/') + cipherId + '/attachment/' + attachmentId;\n        const r = await this.send('GET', path, null, true, true);\n        return new AttachmentResponse(r);\n    }\n\n    async postCipherAttachment(id: string, request: AttachmentRequest): Promise<AttachmentUploadDataResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment/v2', request, true, true);\n        return new AttachmentUploadDataResponse(r);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment-admin', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId, null, true, false);\n    }\n\n    deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId + '/admin', null, true, false);\n    }\n\n    postShareCipherAttachment(id: string, attachmentId: string, data: FormData,\n        organizationId: string): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' +\n            attachmentId + '/share?organizationId=' + organizationId, data, true, false);\n    }\n\n    async renewAttachmentUploadUrl(id: string, attachmentId: string): Promise<AttachmentUploadDataResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/attachment/' + attachmentId + '/renew', null, true, true);\n        return new AttachmentUploadDataResponse(r);\n    }\n\n    postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' + attachmentId, data, true, false);\n    }\n\n    // Collections APIs\n\n    async getCollectionDetails(organizationId: string, id: string): Promise<CollectionGroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/details',\n            null, true, true);\n        return new CollectionGroupDetailsResponse(r);\n    }\n\n    async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollectionUsers(organizationId: string, id: string): Promise<SelectionReadOnlyResponse[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            null, true, true);\n        return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n    }\n\n    async postCollection(organizationId: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/collections', request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollection(organizationId: string, id: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id,\n            request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollectionUsers(organizationId: string, id: string, request: SelectionReadOnlyRequest[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            request, true, false);\n    }\n\n    deleteCollection(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/collections/' + id, null, true, false);\n    }\n\n    deleteCollectionUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/collections/' + id + '/user/' + organizationUserId,\n            null, true, false);\n    }\n\n    // Groups APIs\n\n    async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/details',\n            null, true, true);\n        return new GroupDetailsResponse(r);\n    }\n\n    async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups', null, true, true);\n        return new ListResponse(r, GroupResponse);\n    }\n\n    async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/users',\n            null, true, true);\n        return r;\n    }\n\n    async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/groups', request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroup(organizationId: string, id: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id, request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id + '/users', request, true, false);\n    }\n\n    deleteGroup(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/groups/' + id, null, true, false);\n    }\n\n    deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/groups/' + id + '/user/' + organizationUserId, null, true, false);\n    }\n\n    // Policy APIs\n\n    async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/' + type, null, true, true);\n        return new PolicyResponse(r);\n    }\n\n    async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies', null, true, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    async getPoliciesByToken(organizationId: string, token: string, email: string, organizationUserId: string):\n        Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/token?' +\n            'token=' + encodeURIComponent(token) + '&email=' + encodeURIComponent(email) +\n            '&organizationUserId=' + organizationUserId, null, false, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    async getPoliciesByInvitedUser(\n      organizationId: string,\n      userId: string\n    ): Promise<ListResponse<PolicyResponse>> {\n      const r = await this.send(\n        \"GET\",\n        \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n        null,\n        false,\n        true\n      );\n      return new ListResponse(r, PolicyResponse);\n    }\n\n    async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<PolicyResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/policies/' + type, request, true, true);\n        return new PolicyResponse(r);\n    }\n\n    // Organization User APIs\n\n    async getOrganizationUser(organizationId: string, id: string): Promise<OrganizationUserDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id, null, true, true);\n        return new OrganizationUserDetailsResponse(r);\n    }\n\n    async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id + '/groups',\n            null, true, true);\n        return r;\n    }\n\n    async getOrganizationUsers(organizationId: string): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users', null, true, true);\n        return new ListResponse(r, OrganizationUserUserDetailsResponse);\n    }\n\n    async getOrganizationUserResetPasswordDetails(organizationId: string, id: string):\n        Promise<OrganizationUserResetPasswordDetailsReponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id +\n            '/reset-password-details', null, true, true);\n        return new OrganizationUserResetPasswordDetailsReponse(r);\n    }\n\n    async getOrganizationAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n        const r = await this.send('GET', '/organizations/' + identifier + '/auto-enroll-status', null, true, true);\n        return new OrganizationAutoEnrollStatusResponse(r);\n    }\n\n    postOrganizationUserInvite(organizationId: string, request: OrganizationUserInviteRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/invite', request, true, false);\n    }\n\n    postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/reinvite', null, true, false);\n    }\n\n    async postManyOrganizationUserReinvite(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/reinvite', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    postOrganizationUserAccept(organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/accept', request, true, false);\n    }\n\n    postOrganizationUserConfirm(organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/confirm',\n            request, true, false);\n    }\n\n    async postOrganizationUsersPublicKey(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/public-keys', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n    }\n\n    async postOrganizationUserBulkConfirm(organizationId: string, request: OrganizationUserBulkConfirmRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/confirm', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    putOrganizationUser(organizationId: string, id: string, request: OrganizationUserUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id, request, true, false);\n    }\n\n    putOrganizationUserGroups(organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/groups', request, true, false);\n    }\n\n    putOrganizationUserResetPasswordEnrollment(organizationId: string, userId: string,\n        request: OrganizationUserResetPasswordEnrollmentRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + userId + '/reset-password-enrollment',\n            request, true, false);\n    }\n\n    putOrganizationUserResetPassword(organizationId: string, id: string,\n        request: OrganizationUserResetPasswordRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/reset-password',\n            request, true, false);\n    }\n\n    deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/users/' + id, null, true, false);\n    }\n\n    async deleteManyOrganizationUsers(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('DELETE', '/organizations/' + organizationId + '/users', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    // Plan APIs\n\n    async getPlans(): Promise<ListResponse<PlanResponse>> {\n        const r = await this.send('GET', '/plans/', null, true, true);\n        return new ListResponse(r, PlanResponse);\n    }\n\n    async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/import', request, true, false);\n    }\n\n    async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n        return this.send('POST', '/public/organization/import', request, true, false);\n    }\n\n    async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n        const r = await this.send('GET', '/plans/sales-tax-rates/', null, true, true);\n        return new ListResponse(r, TaxRateResponse);\n    }\n\n    // Settings APIs\n\n    async getSettingsDomains(): Promise<DomainsResponse> {\n        const r = await this.send('GET', '/settings/domains', null, true, true);\n        return new DomainsResponse(r);\n    }\n\n    async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n        const r = await this.send('PUT', '/settings/domains', request, true, true);\n        return new DomainsResponse(r);\n    }\n\n    // Sync APIs\n\n    async getSync(): Promise<SyncResponse> {\n        const path = this.isDesktopClient || this.isWebClient ? '/sync?excludeDomains=true' : '/sync';\n        const r = await this.send('GET', path, null, true, true);\n        return new SyncResponse(r);\n    }\n\n    // Two-factor APIs\n\n    async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorOrganizationProviders(organizationId: string): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorAuthenticator(request: SecretVerificationRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('POST', '/two-factor/get-authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('POST', '/two-factor/get-email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/two-factor/get-duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorOrganizationDuo(organizationId: string,\n        request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/two-factor/get-duo',\n            request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('POST', '/two-factor/get-yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async getTwoFactorWebAuthn(request: SecretVerificationRequest): Promise<TwoFactorWebAuthnResponse> {\n        const r = await this.send('POST', '/two-factor/get-webauthn', request, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async getTwoFactorWebAuthnChallenge(request: SecretVerificationRequest): Promise<ChallengeResponse> {\n        const r = await this.send('POST', '/two-factor/get-webauthn-challenge', request, true, true);\n        return new ChallengeResponse(r);\n    }\n\n    async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n        const r = await this.send('POST', '/two-factor/get-recover', request, true, true);\n        return new TwoFactorRecoverResponse(r);\n    }\n\n    async putTwoFactorAuthenticator(\n        request: UpdateTwoFactorAuthenticatorRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('PUT', '/two-factor/authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('PUT', '/two-factor/email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorOrganizationDuo(organizationId: string,\n        request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorYubiKey(request: UpdateTwoFactorYubioOtpRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('PUT', '/two-factor/yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async putTwoFactorWebAuthn(request: UpdateTwoFactorWebAuthnRequest): Promise<TwoFactorWebAuthnResponse> {\n        const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n        const data: any = Object.assign({}, request);\n\n        data.deviceResponse = {\n            id: request.deviceResponse.id,\n            rawId: btoa(request.deviceResponse.id),\n            type: request.deviceResponse.type,\n            extensions: request.deviceResponse.getClientExtensionResults(),\n            response: {\n                AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n                clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n            },\n        };\n\n        const r = await this.send('PUT', '/two-factor/webauthn', data, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async deleteTwoFactorWebAuthn(request: UpdateTwoFactorWebAuthnDeleteRequest): Promise<TwoFactorWebAuthnResponse> {\n        const r = await this.send('DELETE', '/two-factor/webauthn', request, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/two-factor/disable', request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    async putTwoFactorOrganizationDisable(organizationId: string,\n        request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/disable',\n            request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n        return this.send('POST', '/two-factor/recover', request, false, false);\n    }\n\n    postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email', request, true, false);\n    }\n\n    postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email-login', request, false, false);\n    }\n\n    // Emergency Access APIs\n\n    async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n        const r = await this.send('GET', '/emergency-access/trusted', null, true, true);\n        return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n    }\n\n    async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n        const r = await this.send('GET', '/emergency-access/granted', null, true, true);\n        return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n    }\n\n    async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n        const r = await this.send('GET', '/emergency-access/' + id, null, true, true);\n        return new EmergencyAccessGranteeDetailsResponse(r);\n    }\n\n    async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/emergency-access/' + id + '/policies', null, true, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n        return this.send('PUT', '/emergency-access/' + id, request, true, false);\n    }\n\n    deleteEmergencyAccess(id: string): Promise<any> {\n        return this.send('DELETE', '/emergency-access/' + id, null, true, false);\n    }\n\n    postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/invite', request, true, false);\n    }\n\n    postEmergencyAccessReinvite(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/reinvite', null, true, false);\n    }\n\n    postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/accept', request, true, false);\n    }\n\n    postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/confirm', request, true, false);\n    }\n\n    postEmergencyAccessInitiate(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/initiate', null, true, false);\n    }\n\n    postEmergencyAccessApprove(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/approve', null, true, false);\n    }\n\n    postEmergencyAccessReject(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/reject', null, true, false);\n    }\n\n    async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/takeover', null, true, true);\n        return new EmergencyAccessTakeoverResponse(r);\n    }\n\n    async postEmergencyAccessPassword(id: string, request: EmergencyAccessPasswordRequest): Promise<any> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/password', request, true, true);\n    }\n\n    async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/view', null, true, true);\n        return new EmergencyAccessViewResponse(r);\n    }\n\n    // Organization APIs\n\n    async getOrganization(id: string): Promise<OrganizationResponse> {\n        const r = await this.send('GET', '/organizations/' + id, null, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async getOrganizationBilling(id: string): Promise<BillingResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/subscription', null, true, true);\n        return new OrganizationSubscriptionResponse(r);\n    }\n\n    async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n        return this.send('GET', '/organizations/' + id + '/license?installationId=' + installationId,\n            null, true, true);\n    }\n\n    async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/tax', null, true, true);\n        return new TaxInfoResponse(r);\n    }\n\n    async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/sso', null, true, true);\n        return new OrganizationSsoResponse(r);\n    }\n\n    async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations', request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganization(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('PUT', '/organizations/' + id, request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganizationTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + id + '/tax', request, true, false);\n    }\n\n    postLeaveOrganization(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/leave', null, true, false);\n    }\n\n    async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations/license', data, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/license', data, true, false);\n    }\n\n    async postOrganizationApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationRotateApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/rotate-api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/sso', request, true, true);\n        return new OrganizationSsoResponse(r);\n    }\n\n    async postOrganizationUpgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/upgrade', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationUpdateSubscription(id: string, request: OrganizationSubscriptionUpdateRequest): Promise<void> {\n        return this.send('POST', '/organizations/' + id + '/subscription', request, true, false);\n    }\n\n    async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/seat', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/payment', request, true, false);\n    }\n\n    postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/verify-bank', request, true, false);\n    }\n\n    postOrganizationCancel(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/cancel', null, true, false);\n    }\n\n    postOrganizationReinstate(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/reinstate', null, true, false);\n    }\n\n    deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/organizations/' + id, request, true, false);\n    }\n\n    async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/keys', null, true, true);\n        return new OrganizationKeysResponse(r);\n    }\n\n    async postOrganizationKeys(id: string, request: OrganizationKeysRequest): Promise<OrganizationKeysResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/keys', request, true, true);\n        return new OrganizationKeysResponse(r);\n    }\n\n    // Provider APIs\n\n    async postProviderSetup(id: string, request: ProviderSetupRequest) {\n        const r = await this.send('POST', '/providers/' + id + '/setup', request, true, true);\n        return new ProviderResponse(r);\n    }\n\n    async getProvider(id: string) {\n        const r = await this.send('GET', '/providers/' + id, null, true, true);\n        return new ProviderResponse(r);\n    }\n\n    async putProvider(id: string, request: ProviderUpdateRequest) {\n        const r = await this.send('PUT', '/providers/' + id, request, true, true);\n        return new ProviderResponse(r);\n    }\n\n    // Provider User APIs\n\n    async getProviderUsers(providerId: string): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n        const r = await this.send('GET', '/providers/' + providerId + '/users', null, true, true);\n        return new ListResponse(r, ProviderUserUserDetailsResponse);\n    }\n\n    async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n        const r = await this.send('GET', '/providers/' + providerId + '/users/' + id, null, true, true);\n        return new ProviderUserResponse(r);\n    }\n\n    postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/invite', request, true, false);\n    }\n\n    postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/' + id + '/reinvite', null, true, false);\n    }\n\n    async postManyProviderUserReinvite(providerId: string, request: ProviderUserBulkRequest): Promise<ListResponse<ProviderUserBulkResponse>> {\n        const r = await this.send('POST', '/providers/' + providerId + '/users/reinvite', request, true, true);\n        return new ListResponse(r, ProviderUserBulkResponse);\n    }\n\n    async postProviderUserBulkConfirm(providerId: string, request: ProviderUserBulkConfirmRequest): Promise<ListResponse<ProviderUserBulkResponse>> {\n        const r = await this.send('POST', '/providers/' + providerId + '/users/confirm', request, true, true);\n        return new ListResponse(r, ProviderUserBulkResponse);\n    }\n\n    async deleteManyProviderUsers(providerId: string, request: ProviderUserBulkRequest): Promise<ListResponse<ProviderUserBulkResponse>> {\n        const r = await this.send('DELETE', '/providers/' + providerId + '/users', request, true, true);\n        return new ListResponse(r, ProviderUserBulkResponse);\n    }\n\n    postProviderUserAccept(providerId: string, id: string, request: ProviderUserAcceptRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/' + id + '/accept', request, true, false);\n    }\n\n    postProviderUserConfirm(providerId: string, id: string, request: ProviderUserConfirmRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/' + id + '/confirm',\n            request, true, false);\n    }\n\n    async postProviderUsersPublicKey(providerId: string, request: ProviderUserBulkRequest): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n        const r = await this.send('POST', '/providers/' + providerId + '/users/public-keys', request, true, true);\n        return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n    }\n\n\n    putProviderUser(providerId: string, id: string, request: ProviderUserUpdateRequest): Promise<any> {\n        return this.send('PUT', '/providers/' + providerId + '/users/' + id, request, true, false);\n    }\n\n    deleteProviderUser(providerId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/providers/' + providerId + '/users/' + id, null, true, false);\n    }\n\n    // Provider Organization APIs\n\n    async getProviderClients(providerId: string): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n        const r = await this.send('GET', '/providers/' + providerId + '/organizations', null, true, true);\n        return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n    }\n\n    postProviderAddOrganization(providerId: string, request: ProviderAddOrganizationRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/organizations/add', request, true, false);\n    }\n\n    async postProviderCreateOrganization(providerId: string, request: ProviderOrganizationCreateRequest): Promise<ProviderOrganizationResponse> {\n        const r = await this.send('POST', '/providers/' + providerId + '/organizations', request, true, true);\n        return new ProviderOrganizationResponse(r);\n    }\n\n    deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/providers/' + providerId + '/organizations/' + id, null, true, false);\n    }\n\n    // Event APIs\n\n    async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/events', start, end, token), null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsCipher(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/ciphers/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganization(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/organizations/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganizationUser(organizationId: string, id: string,\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET',\n            this.addEventParameters('/organizations/' + organizationId + '/users/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsProvider(id: string, start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/providers/' + id + '/events', start, end, token), null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsProviderUser(providerId: string, id: string,\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET',\n            this.addEventParameters('/providers/' + providerId + '/users/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async postEventsCollect(request: EventRequest[]): Promise<any> {\n        const authHeader = await this.getActiveBearerToken();\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n            'Authorization': 'Bearer ' + authHeader,\n            'Content-Type': 'application/json; charset=utf-8',\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n        const response = await this.fetch(new Request(this.environmentService.getEventsUrl() + '/collect', {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            method: 'POST',\n            body: JSON.stringify(request),\n            headers: headers,\n        }));\n        if (response.status !== 200) {\n            return Promise.reject('Event post failed.');\n        }\n    }\n\n    // User APIs\n\n    async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n        const r = await this.send('GET', '/users/' + id + '/public-key', null, true, true);\n        return new UserKeyResponse(r);\n    }\n\n    // HIBP APIs\n\n    async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n        const r = await this.send('GET', '/hibp/breach?username=' + username, null, true, true);\n        return r.map((a: any) => new BreachAccountResponse(a));\n    }\n\n    // Misc\n\n    async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n        const r = await this.send('POST', '/bitpay-invoice', request, true, true);\n        return r as string;\n    }\n\n    async postSetupPayment(): Promise<string> {\n        const r = await this.send('POST', '/setup-payment', null, true, true);\n        return r as string;\n    }\n\n    // Key Connector\n\n    async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n        const authHeader = await this.getActiveBearerToken();\n\n        const response = await this.fetch(new Request(keyConnectorUrl + '/user-keys', {\n            cache: 'no-store',\n            method: 'GET',\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + authHeader,\n            }),\n        }));\n\n        if (response.status !== 200) {\n            const error = await this.handleError(response, false, true);\n            return Promise.reject(error);\n        }\n\n        return new KeyConnectorUserKeyResponse(await response.json());\n    }\n\n    async postUserKeyToKeyConnector(keyConnectorUrl: string, request: KeyConnectorUserKeyRequest): Promise<void> {\n        const authHeader = await this.getActiveBearerToken();\n\n        const response = await this.fetch(new Request(keyConnectorUrl + '/user-keys', {\n            cache: 'no-store',\n            method: 'POST',\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + authHeader,\n                'Content-Type': 'application/json; charset=utf-8',\n            }),\n            body: JSON.stringify(request),\n        }));\n\n        if (response.status !== 200) {\n            const error = await this.handleError(response, false, true);\n            return Promise.reject(error);\n        }\n    }\n\n    async getKeyConnectorAlive(keyConnectorUrl: string) {\n        const response = await this.fetch(new Request(keyConnectorUrl + '/alive', {\n            cache: 'no-store',\n            method: 'GET',\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-Type': 'application/json; charset=utf-8',\n            }),\n        }));\n\n        if (response.status !== 200) {\n            const error = await this.handleError(response, false, true);\n            return Promise.reject(error);\n        }\n    }\n\n    // Helpers\n\n    async getActiveBearerToken(): Promise<string> {\n        let accessToken = await this.tokenService.getToken();\n        if (this.tokenService.tokenNeedsRefresh()) {\n            await this.doAuthRefresh();\n            accessToken = await this.tokenService.getToken();\n        }\n        return accessToken;\n    }\n\n    fetch(request: Request): Promise<Response> {\n        if (request.method === 'GET') {\n            request.headers.set('Cache-Control', 'no-store');\n            request.headers.set('Pragma', 'no-cache');\n        }\n        return this.nativeFetch(request);\n    }\n\n    nativeFetch(request: Request): Promise<Response> {\n        return fetch(request);\n    }\n\n    async preValidateSso(identifier: string): Promise<boolean> {\n        if (identifier == null || identifier === '') {\n            throw new Error('Organization Identifier was not provided.');\n        }\n        const headers = new Headers({\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n        const response = await this.fetch(new Request(this.environmentService.getIdentityUrl() + path, {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            headers: headers,\n            method: 'GET',\n        }));\n\n        if (response.status === 200) {\n            return true;\n        } else {\n            const error = await this.handleError(response, false, true);\n            return Promise.reject(error);\n        }\n    }\n\n    async postCreateSponsorship(sponsoredOrgId: string, request: OrganizationSponsorshipCreateRequest): Promise<void> {\n        return await this.send('POST',\n            '/organization/sponsorship/' + sponsoredOrgId + '/families-for-enterprise',\n            request, true, false);\n    }\n\n    async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n        return await this.send('DELETE',\n            '/organization/sponsorship/' + sponsoringOrganizationId,\n            null, true, false);\n    }\n\n    async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n        return await this.send('DELETE',\n            '/organization/sponsorship/sponsored/' + sponsoringOrgId,\n            null, true, false);\n    }\n\n    async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n        const r = await this.send('POST', '/organization/sponsorship/validate-token?sponsorshipToken=' + encodeURIComponent(sponsorshipToken),\n            null, true, true);\n        return r as boolean;\n    }\n\n    async postRedeemSponsorship(sponsorshipToken: string, request: OrganizationSponsorshipRedeemRequest): Promise<void> {\n        return await this.send('POST', '/organization/sponsorship/redeem?sponsorshipToken=' + encodeURIComponent(sponsorshipToken),\n            request, true, false);\n    }\n\n    async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n        return await this.send('POST',\n            '/organization/sponsorship/' + sponsoringOrgId + '/families-for-enterprise/resend',\n            null, true, false);\n    }\n\n\n    protected async doAuthRefresh(): Promise<void> {\n        const refreshToken = await this.tokenService.getRefreshToken();\n        if (refreshToken != null && refreshToken !== '') {\n            return this.doRefreshToken();\n        }\n\n        const clientId = await this.tokenService.getClientId();\n        const clientSecret = await this.tokenService.getClientSecret();\n        if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n            return this.doApiTokenRefresh();\n        }\n\n        throw new Error('Cannot refresh token, no refresh token or api keys are stored');\n    }\n\n    protected async doApiTokenRefresh(): Promise<void> {\n        const clientId = await this.tokenService.getClientId();\n        const clientSecret = await this.tokenService.getClientSecret();\n        if (Utils.isNullOrWhitespace(clientId) || Utils.isNullOrWhitespace(clientSecret) || this.apiKeyRefresh == null) {\n            throw new Error();\n        }\n\n        await this.apiKeyRefresh(clientId, clientSecret);\n    }\n\n    protected async doRefreshToken(): Promise<void> {\n        const refreshToken = await this.tokenService.getRefreshToken();\n        if (refreshToken == null || refreshToken === '') {\n            throw new Error();\n        }\n        const headers = new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const decodedToken = this.tokenService.decodeToken();\n        const response = await this.fetch(new Request(this.environmentService.getIdentityUrl() + '/connect/token', {\n            body: this.qsStringify({\n                grant_type: 'refresh_token',\n                client_id: decodedToken.client_id,\n                refresh_token: refreshToken,\n            }),\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            headers: headers,\n            method: 'POST',\n        }));\n\n        if (response.status === 200) {\n            const responseJson = await response.json();\n            const tokenResponse = new IdentityTokenResponse(responseJson);\n            await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken, null);\n        } else {\n            const error = await this.handleError(response, true, true);\n            return Promise.reject(error);\n        }\n    }\n\n    private async send(method: 'GET' | 'POST' | 'PUT' | 'DELETE', path: string, body: any,\n        authed: boolean, hasResponse: boolean, apiUrl?: string,\n        alterHeaders?: (headers: Headers) => void): Promise<any> {\n        apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n        const requestUrl = apiUrl + path;\n        // Prevent directory traversal from malicious paths\n        if (new URL(requestUrl).href !== requestUrl) {\n            return Promise.reject('Invalid request url path.');\n        }\n\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const requestInit: RequestInit = {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            method: method,\n        };\n\n        if (authed) {\n            const authHeader = await this.getActiveBearerToken();\n            headers.set('Authorization', 'Bearer ' + authHeader);\n        }\n        if (body != null) {\n            if (typeof body === 'string') {\n                requestInit.body = body;\n                headers.set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n            } else if (typeof body === 'object') {\n                if (body instanceof FormData) {\n                    requestInit.body = body;\n                } else {\n                    headers.set('Content-Type', 'application/json; charset=utf-8');\n                    requestInit.body = JSON.stringify(body);\n                }\n            }\n        }\n        if (hasResponse) {\n            headers.set('Accept', 'application/json');\n        }\n        if (alterHeaders != null) {\n            alterHeaders(headers);\n        }\n\n        requestInit.headers = headers;\n        const response = await this.fetch(new Request(requestUrl, requestInit));\n\n        if (hasResponse && response.status === 200) {\n            const responseJson = await response.json();\n            return responseJson;\n        } else if (response.status !== 200) {\n            const error = await this.handleError(response, false, authed);\n            return Promise.reject(error);\n        }\n    }\n\n    private async handleError(response: Response, tokenError: boolean, authed: boolean): Promise<ErrorResponse> {\n        if (authed && ((tokenError && response.status === 400) || response.status === 401 || response.status === 403)) {\n            await this.logoutCallback(true);\n            return null;\n        }\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        } else if (this.isTextResponse(response)) {\n            responseJson = { Message: await response.text() };\n        }\n\n        return new ErrorResponse(responseJson, response.status, tokenError);\n    }\n\n    private qsStringify(params: any): string {\n        return Object.keys(params).map(key => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n        }).join('&');\n    }\n\n    private getCredentials(): RequestCredentials {\n        if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n            return 'include';\n        }\n        return undefined;\n    }\n\n    private addEventParameters(base: string, start: string, end: string, token: string) {\n        if (start != null) {\n            base += ('?start=' + start);\n        }\n        if (end != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('end=' + end);\n        }\n        if (token != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('continuationToken=' + token);\n        }\n        return base;\n    }\n\n    private isJsonResponse(response: Response): boolean {\n        const typeHeader = response.headers.get('content-type');\n        return typeHeader != null && typeHeader.indexOf('application/json') > -1;\n    }\n\n    private isTextResponse(response: Response): boolean {\n        const typeHeader = response.headers.get('content-type');\n        return typeHeader != null && typeHeader.indexOf('text') > -1;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ApiKeyResponse extends BaseResponse {\n    apiKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.apiKey = this.getResponseProperty('ApiKey');\n    }\n}\n","import { FileUploadType } from '../../enums/fileUploadType';\nimport { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n    attachmentId: string;\n    fileUploadType: FileUploadType;\n    cipherResponse: CipherResponse;\n    cipherMiniResponse: CipherResponse;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.attachmentId = this.getResponseProperty('AttachmentId');\n        this.fileUploadType = this.getResponseProperty('FileUploadType');\n        const cipherResponse = this.getResponseProperty('CipherResponse');\n        const cipherMiniResponse = this.getResponseProperty('CipherMiniResponse');\n        this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n        this.cipherMiniResponse = cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n        this.url = this.getResponseProperty('Url');\n    }\n\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { TransactionType } from '../../enums/transactionType';\n\nexport class BillingResponse extends BaseResponse {\n    balance: number;\n    paymentSource: BillingSourceResponse;\n    invoices: BillingInvoiceResponse[] = [];\n    transactions: BillingTransactionResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.balance = this.getResponseProperty('Balance');\n        const paymentSource = this.getResponseProperty('PaymentSource');\n        const transactions = this.getResponseProperty('Transactions');\n        const invoices = this.getResponseProperty('Invoices');\n        this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n        if (transactions != null) {\n            this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n        }\n        if (invoices != null) {\n            this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n        }\n    }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n    type: PaymentMethodType;\n    cardBrand: string;\n    description: string;\n    needsVerification: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.cardBrand = this.getResponseProperty('CardBrand');\n        this.description = this.getResponseProperty('Description');\n        this.needsVerification = this.getResponseProperty('NeedsVerification');\n    }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n    url: string;\n    pdfUrl: string;\n    number: string;\n    paid: boolean;\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.url = this.getResponseProperty('Url');\n        this.pdfUrl = this.getResponseProperty('PdfUrl');\n        this.number = this.getResponseProperty('Number');\n        this.paid = this.getResponseProperty('Paid');\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n    createdDate: string;\n    amount: number;\n    refunded: boolean;\n    partiallyRefunded: boolean;\n    refundedAmount: number;\n    type: TransactionType;\n    paymentMethodType: PaymentMethodType;\n    details: string;\n\n    constructor(response: any) {\n        super(response);\n        this.createdDate = this.getResponseProperty('CreatedDate');\n        this.amount = this.getResponseProperty('Amount');\n        this.refunded = this.getResponseProperty('Refunded');\n        this.partiallyRefunded = this.getResponseProperty('PartiallyRefunded');\n        this.refundedAmount = this.getResponseProperty('RefundedAmount');\n        this.type = this.getResponseProperty('Type');\n        this.paymentMethodType = this.getResponseProperty('PaymentMethodType');\n        this.details = this.getResponseProperty('Details');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class BreachAccountResponse extends BaseResponse {\n    addedDate: string;\n    breachDate: string;\n    dataClasses: string[];\n    description: string;\n    domain: string;\n    isActive: boolean;\n    isVerified: boolean;\n    logoPath: string;\n    modifiedDate: string;\n    name: string;\n    pwnCount: number;\n    title: string;\n\n    constructor(response: any) {\n        super(response);\n        this.addedDate = this.getResponseProperty('AddedDate');\n        this.breachDate = this.getResponseProperty('BreachDate');\n        this.dataClasses = this.getResponseProperty('DataClasses');\n        this.description = this.getResponseProperty('Description');\n        this.domain = this.getResponseProperty('Domain');\n        this.isActive = this.getResponseProperty('IsActive');\n        this.isVerified = this.getResponseProperty('IsVerified');\n        this.logoPath = this.getResponseProperty('LogoPath');\n        this.modifiedDate = this.getResponseProperty('ModifiedDate');\n        this.name = this.getResponseProperty('Name');\n        this.pwnCount = this.getResponseProperty('PwnCount');\n        this.title = this.getResponseProperty('Title');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class GlobalDomainResponse extends BaseResponse {\n    type: number;\n    domains: string[];\n    excluded: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.domains = this.getResponseProperty('Domains');\n        this.excluded = this.getResponseProperty('Excluded');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { DeviceType } from '../../enums/deviceType';\nimport { EventType } from '../../enums/eventType';\n\nexport class EventResponse extends BaseResponse {\n    type: EventType;\n    userId: string;\n    organizationId: string;\n    providerId: string;\n    cipherId: string;\n    collectionId: string;\n    groupId: string;\n    policyId: string;\n    organizationUserId: string;\n    providerUserId: string;\n    providerOrganizationId: string;\n    actingUserId: string;\n    date: string;\n    deviceType: DeviceType;\n    ipAddress: string;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.cipherId = this.getResponseProperty('CipherId');\n        this.collectionId = this.getResponseProperty('CollectionId');\n        this.groupId = this.getResponseProperty('GroupId');\n        this.policyId = this.getResponseProperty('PolicyId');\n        this.organizationUserId = this.getResponseProperty('OrganizationUserId');\n        this.providerUserId = this.getResponseProperty('ProviderUserId');\n        this.providerOrganizationId = this.getResponseProperty('ProviderOrganizationId');\n        this.actingUserId = this.getResponseProperty('ActingUserId');\n        this.date = this.getResponseProperty('Date');\n        this.deviceType = this.getResponseProperty('DeviceType');\n        this.ipAddress = this.getResponseProperty('IpAddress');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class GroupResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.accessAll = this.getResponseProperty('AccessAll');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n    siteKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.siteKey = this.getResponseProperty('HCaptcha_SiteKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class IdentityTokenResponse extends BaseResponse {\n    accessToken: string;\n    expiresIn: number;\n    refreshToken: string;\n    tokenType: string;\n\n    resetMasterPassword: boolean;\n    privateKey: string;\n    key: string;\n    twoFactorToken: string;\n    kdf: KdfType;\n    kdfIterations: number;\n    forcePasswordReset: boolean;\n    apiUseKeyConnector: boolean;\n    keyConnectorUrl: string;\n\n    constructor(response: any) {\n        super(response);\n        this.accessToken = response.access_token;\n        this.expiresIn = response.expires_in;\n        this.refreshToken = response.refresh_token;\n        this.tokenType = response.token_type;\n\n        this.resetMasterPassword = this.getResponseProperty('ResetMasterPassword');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.key = this.getResponseProperty('Key');\n        this.twoFactorToken = this.getResponseProperty('TwoFactorToken');\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n        this.forcePasswordReset = this.getResponseProperty('ForcePasswordReset');\n        this.apiUseKeyConnector = this.getResponseProperty('ApiUseKeyConnector');\n        this.keyConnectorUrl = this.getResponseProperty('KeyConnectorUrl');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n    twoFactorProviders: TwoFactorProviderType[];\n    twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string; }>();\n    captchaToken: string;\n\n    constructor(response: any) {\n        super(response);\n        this.captchaToken = this.getResponseProperty('CaptchaBypassToken');\n        this.twoFactorProviders = this.getResponseProperty('TwoFactorProviders');\n        const twoFactorProviders2 = this.getResponseProperty('TwoFactorProviders2');\n        if (twoFactorProviders2 != null) {\n            for (const prop in twoFactorProviders2) {\n                if (twoFactorProviders2.hasOwnProperty(prop)) {\n                    this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n                }\n            }\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ListResponse<T> extends BaseResponse {\n    data: T[];\n    continuationToken: string;\n\n    constructor(response: any, t: new (dataResponse: any) => T) {\n        super(response);\n        const data = this.getResponseProperty('Data');\n        this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n        this.continuationToken = this.getResponseProperty('ContinuationToken');\n    }\n}\n","import { SsoConfigApi } from '../../api/ssoConfigApi';\nimport { BaseResponse } from '../baseResponse';\n\nexport class OrganizationSsoResponse extends BaseResponse {\n    enabled: boolean;\n    data: SsoConfigApi;\n    urls: SsoUrls;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.data = new SsoConfigApi(this.getResponseProperty('Data'));\n        this.urls = new SsoUrls(this.getResponseProperty('Urls'));\n    }\n}\n\nclass SsoUrls extends BaseResponse {\n    callbackPath: string;\n    signedOutCallbackPath: string;\n    spEntityId: string;\n    spMetadataUrl: string;\n    spAcsUrl: string;\n\n    constructor(response: any) {\n        super(response);\n        this.callbackPath = this.getResponseProperty('CallbackPath');\n        this.signedOutCallbackPath = this.getResponseProperty('SignedOutCallbackPath');\n        this.spEntityId = this.getResponseProperty('SpEntityId');\n        this.spMetadataUrl = this.getResponseProperty('SpMetadataUrl');\n        this.spAcsUrl = this.getResponseProperty('SpAcsUrl');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nenum SsoType {\n    OpenIdConnect = 1,\n    Saml2 = 2,\n}\n\nenum OpenIdConnectRedirectBehavior {\n    RedirectGet = 0,\n    FormPost = 1,\n}\n\nenum Saml2BindingType {\n    HttpRedirect = 1,\n    HttpPost = 2,\n    Artifact = 4,\n}\n\nenum Saml2NameIdFormat {\n    NotConfigured = 0,\n    Unspecified = 1,\n    EmailAddress = 2,\n    X509SubjectName = 3,\n    WindowsDomainQualifiedName = 4,\n    KerberosPrincipalName = 5,\n    EntityIdentifier = 6,\n    Persistent = 7,\n    Transient = 8,\n}\n\nenum Saml2SigningBehavior {\n    IfIdpWantAuthnRequestsSigned = 0,\n    Always = 1,\n    Never = 3,\n}\n\nexport class SsoConfigApi extends BaseResponse {\n    configType: SsoType;\n\n    keyConnectorEnabled: boolean;\n    keyConnectorUrl: string;\n\n    // OpenId\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n\n    // SAML\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: boolean;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpArtifactResolutionServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpDisableOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n\n        this.configType = this.getResponseProperty('ConfigType');\n\n        this.keyConnectorEnabled = this.getResponseProperty('KeyConnectorEnabled');\n        this.keyConnectorUrl = this.getResponseProperty('KeyConnectorUrl');\n\n        this.authority = this.getResponseProperty('Authority');\n        this.clientId = this.getResponseProperty('ClientId');\n        this.clientSecret = this.getResponseProperty('ClientSecret');\n        this.metadataAddress = this.getResponseProperty('MetadataAddress');\n        this.redirectBehavior = this.getResponseProperty('RedirectBehavior');\n        this.getClaimsFromUserInfoEndpoint = this.getResponseProperty('GetClaimsFromUserInfoEndpoint');\n        this.additionalScopes = this.getResponseProperty('AdditionalScopes');\n        this.additionalUserIdClaimTypes = this.getResponseProperty('AdditionalUserIdClaimTypes');\n        this.additionalEmailClaimTypes = this.getResponseProperty('AdditionalEmailClaimTypes');\n        this.additionalNameClaimTypes = this.getResponseProperty('AdditionalNameClaimTypes');\n        this.acrValues = this.getResponseProperty('AcrValues');\n        this.expectedReturnAcrValue = this.getResponseProperty('ExpectedReturnAcrValue');\n\n        this.spNameIdFormat = this.getResponseProperty('SpNameIdFormat');\n        this.spOutboundSigningAlgorithm = this.getResponseProperty('SpOutboundSigningAlgorithm');\n        this.spSigningBehavior = this.getResponseProperty('SpSigningBehavior');\n        this.spMinIncomingSigningAlgorithm = this.getResponseProperty('SpMinIncomingSigningAlgorithm');\n        this.spWantAssertionsSigned = this.getResponseProperty('SpWantAssertionsSigned');\n        this.spValidateCertificates = this.getResponseProperty('SpValidateCertificates');\n\n        this.idpEntityId = this.getResponseProperty('IdpEntityId');\n        this.idpBindingType = this.getResponseProperty('IdpBindingType');\n        this.idpSingleSignOnServiceUrl = this.getResponseProperty('IdpSingleSignOnServiceUrl');\n        this.idpSingleLogoutServiceUrl = this.getResponseProperty('IdpSingleLogoutServiceUrl');\n        this.idpArtifactResolutionServiceUrl = this.getResponseProperty('IdpArtifactResolutionServiceUrl');\n        this.idpX509PublicCert = this.getResponseProperty('IdpX509PublicCert');\n        this.idpOutboundSigningAlgorithm = this.getResponseProperty('IdpOutboundSigningAlgorithm');\n        this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty('IdpAllowUnsolicitedAuthnResponse');\n        this.idpDisableOutboundLogoutRequests = this.getResponseProperty('IdpDisableOutboundLogoutRequests');\n        this.idpWantAuthnRequestsSigned = this.getResponseProperty('IdpWantAuthnRequestsSigned');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n    id: string;\n    resetPasswordEnabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.resetPasswordEnabled = this.getResponseProperty('ResetPasswordEnabled');\n    }\n}\n","import { KeysResponse } from './keysResponse';\n\nexport class OrganizationKeysResponse extends KeysResponse {\n    constructor(response: any) {\n        super(response);\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class KeysResponse extends BaseResponse {\n    privateKey: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.publicKey = this.getResponseProperty('PublicKey');\n    }\n}\n","import { OrganizationResponse } from './organizationResponse';\nimport {\n    BillingSubscriptionResponse,\n    BillingSubscriptionUpcomingInvoiceResponse,\n} from './subscriptionResponse';\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n    storageName: string;\n    storageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    expiration: string;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        const subscription = this.getResponseProperty('Subscription');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n        this.expiration = this.getResponseProperty('Expiration');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n    id: string;\n    error: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.error = this.getResponseProperty('Error');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nimport { PermissionsApi } from '../api/permissionsApi';\n\nimport { KdfType } from '../../enums/kdfType';\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class OrganizationUserResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    type: OrganizationUserType;\n    status: OrganizationUserStatusType;\n    accessAll: boolean;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.permissions = new PermissionsApi(this.getResponseProperty('Permissions'));\n        this.accessAll = this.getResponseProperty('AccessAll');\n        this.resetPasswordEnrolled = this.getResponseProperty('ResetPasswordEnrolled');\n    }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n    name: string;\n    email: string;\n    twoFactorEnabled: boolean;\n    usesKeyConnector: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n        this.usesKeyConnector = this.getResponseProperty('UsesKeyConnector') ?? false;\n    }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n    kdf: KdfType;\n    kdfIterations: number;\n    resetPasswordKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n        this.resetPasswordKey = this.getResponseProperty('ResetPasswordKey');\n        this.encryptedPrivateKey = this.getResponseProperty('EncryptedPrivateKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileResponse } from './profileResponse';\n\nexport class PaymentResponse extends BaseResponse {\n    userProfile: ProfileResponse;\n    paymentIntentClientSecret: string;\n    success: boolean;\n\n    constructor(response: any) {\n        super(response);\n        const userProfile = this.getResponseProperty('UserProfile');\n        if (userProfile != null) {\n            this.userProfile = new ProfileResponse(userProfile);\n        }\n        this.paymentIntentClientSecret = this.getResponseProperty('PaymentIntentClientSecret');\n        this.success = this.getResponseProperty('Success');\n    }\n}\n","import { ProfileOrganizationResponse } from './profileOrganizationResponse';\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n    constructor(response: any) {\n        super(response);\n        this.keyConnectorEnabled = false;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { ProviderUserStatusType } from '../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../enums/providerUserType';\n\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class ProfileProviderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    key: string;\n    status: ProviderUserStatusType;\n    type: ProviderUserType;\n    enabled: boolean;\n    permissions: PermissionsApi;\n    userId: string;\n    useEvents: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.key = this.getResponseProperty('Key');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n        this.permissions = new PermissionsApi(this.getResponseProperty('permissions'));\n        this.userId = this.getResponseProperty('UserId');\n        this.useEvents = this.getResponseProperty('UseEvents');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class PreloginResponse extends BaseResponse {\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n","import { BaseResponse } from '../baseResponse';\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n    id: string;\n    providerId: string;\n    organizationId: string;\n    key: string;\n    settings: string;\n    creationDate: string;\n    revisionDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.key = this.getResponseProperty('Key');\n        this.settings = this.getResponseProperty('Settings');\n        this.creationDate = this.getResponseProperty('CreationDate');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n    }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n    organizationName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.organizationName = this.getResponseProperty('OrganizationName');\n    }\n}\n","import { BaseResponse } from '../baseResponse';\n\nexport class ProviderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    businessName: string;\n    billingEmail: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.businessName = this.getResponseProperty('BusinessName');\n        this.billingEmail = this.getResponseProperty('BillingEmail');\n    }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from '../organizationUserBulkPublicKeyResponse';\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {\n\n}\n","import { BaseResponse } from '../baseResponse';\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n    id: string;\n    error: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.error = this.getResponseProperty('Error');\n    }\n}\n","import { BaseResponse } from '../baseResponse';\n\nimport { PermissionsApi } from '../../api/permissionsApi';\n\nimport { ProviderUserStatusType } from '../../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../../enums/providerUserType';\n\nexport class ProviderUserResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    type: ProviderUserType;\n    status: ProviderUserStatusType;\n    permissions: PermissionsApi;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.permissions = new PermissionsApi(this.getResponseProperty('Permissions'));\n    }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n    name: string;\n    email: string;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nexport class SendAccessResponse extends BaseResponse {\n    id: string;\n    type: SendType;\n    name: string;\n    file: SendFileApi;\n    text: SendTextApi;\n    expirationDate: Date;\n    creatorIdentifier: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n\n        const text = this.getResponseProperty('Text');\n        if (text != null) {\n            this.text = new SendTextApi(text);\n        }\n\n        const file = this.getResponseProperty('File');\n        if (file != null) {\n            this.file = new SendFileApi(file);\n        }\n\n        this.expirationDate = this.getResponseProperty('ExpirationDate');\n        this.creatorIdentifier = this.getResponseProperty('CreatorIdentifier');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n\n    id: string = null;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.url = this.getResponseProperty('Url');\n    }\n}\n","import { FileUploadType } from '../../enums/fileUploadType';\n\nimport { BaseResponse } from './baseResponse';\nimport { SendResponse } from './sendResponse';\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n\n    fileUploadType: FileUploadType;\n    sendResponse: SendResponse;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.fileUploadType = this.getResponseProperty('FileUploadType');\n        const sendResponse = this.getResponseProperty('SendResponse');\n        this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n        this.url = this.getResponseProperty('Url');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\nimport { CollectionDetailsResponse } from './collectionResponse';\nimport { DomainsResponse } from './domainsResponse';\nimport { FolderResponse } from './folderResponse';\nimport { PolicyResponse } from './policyResponse';\nimport { ProfileResponse } from './profileResponse';\nimport { SendResponse } from './sendResponse';\n\nexport class SyncResponse extends BaseResponse {\n    profile?: ProfileResponse;\n    folders: FolderResponse[] = [];\n    collections: CollectionDetailsResponse[] = [];\n    ciphers: CipherResponse[] = [];\n    domains?: DomainsResponse;\n    policies?: PolicyResponse[] = [];\n    sends: SendResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n\n        const profile = this.getResponseProperty('Profile');\n        if (profile != null) {\n            this.profile = new ProfileResponse(profile);\n        }\n\n        const folders = this.getResponseProperty('Folders');\n        if (folders != null) {\n            this.folders = folders.map((f: any) => new FolderResponse(f));\n        }\n\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n        }\n\n        const ciphers = this.getResponseProperty('Ciphers');\n        if (ciphers != null) {\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n        }\n\n        const domains = this.getResponseProperty('Domains');\n        if (domains != null) {\n            this.domains = new DomainsResponse(domains);\n        }\n\n        const policies = this.getResponseProperty('Policies');\n        if (policies != null) {\n            this.policies = policies.map((p: any) => new PolicyResponse(p));\n        }\n\n        const sends = this.getResponseProperty('Sends');\n        if (sends != null) {\n            this.sends = sends.map((s: any) => new SendResponse(s));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TaxInfoResponse extends BaseResponse {\n    taxId: string;\n    taxIdType: string;\n    line1: string;\n    line2: string;\n    city: string;\n    state: string;\n    country: string;\n    postalCode: string;\n\n    constructor(response: any) {\n        super(response);\n        this.taxId = this.getResponseProperty('TaxIdNumber');\n        this.taxIdType = this.getResponseProperty('TaxIdType');\n        this.line1 = this.getResponseProperty('Line1');\n        this.line2 = this.getResponseProperty('Line2');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TaxRateResponse extends BaseResponse {\n    id: string;\n    country: string;\n    state: string;\n    postalCode: string;\n    rate: number;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.country = this.getResponseProperty('Country');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.rate = this.getResponseProperty('Rate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n    enabled: boolean;\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n    enabled: boolean;\n    host: string;\n    secretKey: string;\n    integrationKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.host = this.getResponseProperty('Host');\n        this.secretKey = this.getResponseProperty('SecretKey');\n        this.integrationKey = this.getResponseProperty('IntegrationKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n    enabled: boolean;\n    email: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.email = this.getResponseProperty('Email');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n    enabled: boolean;\n    type: TwoFactorProviderType;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n    code: string;\n\n    constructor(response: any) {\n        super(response);\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n    enabled: boolean;\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key1 = this.getResponseProperty('Key1');\n        this.key2 = this.getResponseProperty('Key2');\n        this.key3 = this.getResponseProperty('Key3');\n        this.key4 = this.getResponseProperty('Key4');\n        this.key5 = this.getResponseProperty('Key5');\n        this.nfc = this.getResponseProperty('Nfc');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class UserKeyResponse extends BaseResponse {\n    userId: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.publicKey = this.getResponseProperty('PublicKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { Utils } from '../misc/utils';\n\nimport { AppIdService as AppIdServiceAbstraction } from '../abstractions/appId.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class AppIdService implements AppIdServiceAbstraction {\n    constructor(private storageService: StorageService) {\n    }\n\n    getAppId(): Promise<string> {\n        return this.makeAndGetAppId('appId');\n    }\n\n    getAnonymousAppId(): Promise<string> {\n        return this.makeAndGetAppId('anonymousAppId');\n    }\n\n    private async makeAndGetAppId(key: string) {\n        const existingId = await this.storageService.get<string>(key);\n        if (existingId != null) {\n            return existingId;\n        }\n\n        const guid = Utils.newGuid();\n        await this.storageService.save(key, guid);\n        return guid;\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from '../abstractions/audit.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\n\nimport { throttle } from '../misc/throttle';\nimport { Utils } from '../misc/utils';\n\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nconst PwnedPasswordsApi = 'https://api.pwnedpasswords.com/range/';\n\nexport class AuditService implements AuditServiceAbstraction {\n    constructor(private cryptoFunctionService: CryptoFunctionService, private apiService: ApiService) { }\n\n    @throttle(100, () => 'passwordLeaked')\n    async passwordLeaked(password: string): Promise<number> {\n        const hashBytes = await this.cryptoFunctionService.hash(password, 'sha1');\n        const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n        const hashStart = hash.substr(0, 5);\n        const hashEnding = hash.substr(5);\n\n        const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n        const leakedHashes = await response.text();\n        const match = leakedHashes.split(/\\r?\\n/).find(v => {\n            return v.split(':')[0] === hashEnding;\n        });\n\n        return match != null ? parseInt(match.split(':')[1], 10) : 0;\n    }\n\n    async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n        try {\n            return await this.apiService.getHibpBreach(username);\n        } catch (e) {\n            const error = e as ErrorResponse;\n            if (error.statusCode === 404) {\n                return [];\n            }\n            throw new Error();\n        }\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n    return <T>(target: any, propertyKey: string | symbol,\n        descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>) => {\n        const originalMethod: () => Promise<T> = descriptor.value;\n        const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n        const getThrottles = (obj: any) => {\n            let throttles = allThrottles.get(obj);\n            if (throttles != null) {\n                return throttles;\n            }\n            throttles = new Map<string, (() => void)[]>();\n            allThrottles.set(obj, throttles);\n            return throttles;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const throttles = getThrottles(this);\n                const argsThrottleKey = throttleKey(args);\n                let queue = throttles.get(argsThrottleKey);\n                if (queue == null) {\n                    queue = [];\n                    throttles.set(argsThrottleKey, queue);\n                }\n\n                return new Promise<T>((resolve, reject) => {\n                    const exec = () => {\n                        const onFinally = () => {\n                            queue.splice(queue.indexOf(exec), 1);\n                            if (queue.length >= limit) {\n                                queue[limit - 1]();\n                            } else if (queue.length === 0) {\n                                throttles.delete(argsThrottleKey);\n                                if (throttles.size === 0) {\n                                    allThrottles.delete(this);\n                                }\n                            }\n                        };\n                        originalMethod.apply(this, args).then((val: any) => {\n                            onFinally();\n                            return val;\n                        }).catch((err: any) => {\n                            onFinally();\n                            throw err;\n                        }).then(resolve, reject);\n                    };\n                    queue.push(exec);\n                    if (queue.length <= limit) {\n                        exec();\n                    }\n                });\n            },\n        };\n    };\n}\n","import { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Attachment } from '../models/domain/attachment';\nimport { Card } from '../models/domain/card';\nimport { Cipher } from '../models/domain/cipher';\nimport Domain from '../models/domain/domainBase';\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { Field } from '../models/domain/field';\nimport { Identity } from '../models/domain/identity';\nimport { Login } from '../models/domain/login';\nimport { LoginUri } from '../models/domain/loginUri';\nimport { Password } from '../models/domain/password';\nimport { SecureNote } from '../models/domain/secureNote';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nimport { AttachmentView } from '../models/view/attachmentView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\nimport { View } from '../models/view/view';\n\nimport { SortedCiphersCache } from '../models/domain/sortedCiphersCache';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService as CipherServiceAbstraction } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FileUploadService } from '../abstractions/fileUpload.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { LogService } from '../abstractions/log.service';\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    ciphersPrefix: 'ciphers_',\n    localData: 'sitesLocalData',\n    neverDomains: 'neverDomains',\n};\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n    ['google.com', new Set(['script.google.com'])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n    // tslint:disable-next-line\n    _decryptedCipherCache: CipherView[];\n\n    private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(this.sortCiphersByLastUsed);\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private settingsService: SettingsService, private apiService: ApiService,\n        private fileUploadService: FileUploadService, private storageService: StorageService,\n        private i18nService: I18nService, private searchService: () => SearchService,\n        private logService: LogService) {\n    }\n\n    get decryptedCipherCache() {\n        return this._decryptedCipherCache;\n    }\n    set decryptedCipherCache(value: CipherView[]) {\n        this._decryptedCipherCache = value;\n        if (this.searchService != null) {\n            if (value == null) {\n                this.searchService().clearIndex();\n            } else {\n                this.searchService().indexCiphers();\n            }\n        }\n    }\n\n    clearCache(): void {\n        this.decryptedCipherCache = null;\n        this.sortedCiphersCache.clear();\n    }\n\n    async encrypt(model: CipherView, key?: SymmetricCryptoKey, originalCipher: Cipher = null): Promise<Cipher> {\n        // Adjust password history\n        if (model.id != null) {\n            if (originalCipher == null) {\n                originalCipher = await this.get(model.id);\n            }\n            if (originalCipher != null) {\n                const existingCipher = await originalCipher.decrypt();\n                model.passwordHistory = existingCipher.passwordHistory || [];\n                if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n                    if (existingCipher.login.password != null && existingCipher.login.password !== '' &&\n                        existingCipher.login.password !== model.login.password) {\n                        const ph = new PasswordHistoryView();\n                        ph.password = existingCipher.login.password;\n                        ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n                        model.passwordHistory.splice(0, 0, ph);\n                    } else {\n                        model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n                    }\n                }\n                if (existingCipher.hasFields) {\n                    const existingHiddenFields = existingCipher.fields.filter(f => f.type === FieldType.Hidden &&\n                        f.name != null && f.name !== '' && f.value != null && f.value !== '');\n                    const hiddenFields = model.fields == null ? [] :\n                        model.fields.filter(f => f.type === FieldType.Hidden && f.name != null && f.name !== '');\n                    existingHiddenFields.forEach(ef => {\n                        const matchedField = hiddenFields.find(f => f.name === ef.name);\n                        if (matchedField == null || matchedField.value !== ef.value) {\n                            const ph = new PasswordHistoryView();\n                            ph.password = ef.name + ': ' + ef.value;\n                            ph.lastUsedDate = new Date();\n                            model.passwordHistory.splice(0, 0, ph);\n                        }\n                    });\n                }\n            }\n            if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n                model.passwordHistory = null;\n            } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n                // only save last 5 history\n                model.passwordHistory = model.passwordHistory.slice(0, 5);\n            }\n        }\n\n        const cipher = new Cipher();\n        cipher.id = model.id;\n        cipher.folderId = model.folderId;\n        cipher.favorite = model.favorite;\n        cipher.organizationId = model.organizationId;\n        cipher.type = model.type;\n        cipher.collectionIds = model.collectionIds;\n        cipher.revisionDate = model.revisionDate;\n        cipher.reprompt = model.reprompt;\n\n        if (key == null && cipher.organizationId != null) {\n            key = await this.cryptoService.getOrgKey(cipher.organizationId);\n            if (key == null) {\n                throw new Error('Cannot encrypt cipher for organization. No key.');\n            }\n        }\n        await Promise.all([\n            this.encryptObjProperty(model, cipher, {\n                name: null,\n                notes: null,\n            }, key),\n            this.encryptCipherData(cipher, model, key),\n            this.encryptFields(model.fields, key).then(fields => {\n                cipher.fields = fields;\n            }),\n            this.encryptPasswordHistories(model.passwordHistory, key).then(ph => {\n                cipher.passwordHistory = ph;\n            }),\n            this.encryptAttachments(model.attachments, key).then(attachments => {\n                cipher.attachments = attachments;\n            }),\n        ]);\n\n        return cipher;\n    }\n\n    async encryptAttachments(attachmentsModel: AttachmentView[], key: SymmetricCryptoKey): Promise<Attachment[]> {\n        if (attachmentsModel == null || attachmentsModel.length === 0) {\n            return null;\n        }\n\n        const promises: Promise<any>[] = [];\n        const encAttachments: Attachment[] = [];\n        attachmentsModel.forEach(async model => {\n            const attachment = new Attachment();\n            attachment.id = model.id;\n            attachment.size = model.size;\n            attachment.sizeName = model.sizeName;\n            attachment.url = model.url;\n            const promise = this.encryptObjProperty(model, attachment, {\n                fileName: null,\n            }, key).then(async () => {\n                if (model.key != null) {\n                    attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n                }\n                encAttachments.push(attachment);\n            });\n            promises.push(promise);\n        });\n\n        await Promise.all(promises);\n        return encAttachments;\n    }\n\n    async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n        if (!fieldsModel || !fieldsModel.length) {\n            return null;\n        }\n\n        const self = this;\n        const encFields: Field[] = [];\n        await fieldsModel.reduce((promise, field) => {\n            return promise.then(() => {\n                return self.encryptField(field, key);\n            }).then((encField: Field) => {\n                encFields.push(encField);\n            });\n        }, Promise.resolve());\n\n        return encFields;\n    }\n\n    async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n        const field = new Field();\n        field.type = fieldModel.type;\n        field.linkedId = fieldModel.linkedId;\n        // normalize boolean type field values\n        if (fieldModel.type === FieldType.Boolean && fieldModel.value !== 'true') {\n            fieldModel.value = 'false';\n        }\n\n        await this.encryptObjProperty(fieldModel, field, {\n            name: null,\n            value: null,\n        }, key);\n\n        return field;\n    }\n\n    async encryptPasswordHistories(phModels: PasswordHistoryView[], key: SymmetricCryptoKey): Promise<Password[]> {\n        if (!phModels || !phModels.length) {\n            return null;\n        }\n\n        const self = this;\n        const encPhs: Password[] = [];\n        await phModels.reduce((promise, ph) => {\n            return promise.then(() => {\n                return self.encryptPasswordHistory(ph, key);\n            }).then((encPh: Password) => {\n                encPhs.push(encPh);\n            });\n        }, Promise.resolve());\n\n        return encPhs;\n    }\n\n    async encryptPasswordHistory(phModel: PasswordHistoryView, key: SymmetricCryptoKey): Promise<Password> {\n        const ph = new Password();\n        ph.lastUsedDate = phModel.lastUsedDate;\n\n        await this.encryptObjProperty(phModel, ph, {\n            password: null,\n        }, key);\n\n        return ph;\n    }\n\n    async get(id: string): Promise<Cipher> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n    }\n\n    async getAll(): Promise<Cipher[]> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        const response: Cipher[] = [];\n        for (const id in ciphers) {\n            if (ciphers.hasOwnProperty(id)) {\n                response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n            }\n        }\n        return response;\n    }\n\n    @sequentialize(() => 'getAllDecrypted')\n    async getAllDecrypted(): Promise<CipherView[]> {\n        if (this.decryptedCipherCache != null) {\n            const userId = await this.userService.getUserId();\n            if (this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId)\n            {\n                await this.searchService().indexCiphers(userId, this.decryptedCipherCache);\n            }\n            return this.decryptedCipherCache;\n        }\n\n        const decCiphers: CipherView[] = [];\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const promises: any[] = [];\n        const ciphers = await this.getAll();\n        ciphers.forEach(cipher => {\n            promises.push(cipher.decrypt().then(c => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.getLocaleSortingFunction());\n        this.decryptedCipherCache = decCiphers;\n        return this.decryptedCipherCache;\n    }\n\n    async getAllDecryptedForGrouping(groupingId: string, folder: boolean = true): Promise<CipherView[]> {\n        const ciphers = await this.getAllDecrypted();\n\n        return ciphers.filter(cipher => {\n            if (cipher.isDeleted) {\n                return false;\n            }\n            if (folder && cipher.folderId === groupingId) {\n                return true;\n            } else if (!folder && cipher.collectionIds != null && cipher.collectionIds.indexOf(groupingId) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n\n    async getAllDecryptedForUrl(url: string, includeOtherTypes?: CipherType[],\n        defaultMatch: UriMatchType = null): Promise<CipherView[]> {\n        if (url == null && includeOtherTypes == null) {\n            return Promise.resolve([]);\n        }\n\n        const domain = Utils.getDomain(url);\n        const eqDomainsPromise = domain == null ? Promise.resolve([]) :\n            this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n                let matches: any[] = [];\n                eqDomains.forEach(eqDomain => {\n                    if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                        matches = matches.concat(eqDomain);\n                    }\n                });\n\n                if (!matches.length) {\n                    matches.push(domain);\n                }\n\n                return matches;\n            });\n\n        const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n        const matchingDomains = result[0];\n        const ciphers = result[1];\n\n        if (defaultMatch == null) {\n            defaultMatch = await this.storageService.get<UriMatchType>(ConstantsService.defaultUriMatch);\n            if (defaultMatch == null) {\n                defaultMatch = UriMatchType.Domain;\n            }\n        }\n\n        return ciphers.filter(cipher => {\n            if (cipher.deletedDate != null) {\n                return false;\n            }\n            if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n                return true;\n            }\n\n            if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n                for (let i = 0; i < cipher.login.uris.length; i++) {\n                    const u = cipher.login.uris[i];\n                    if (u.uri == null) {\n                        continue;\n                    }\n\n                    const match = u.match == null ? defaultMatch : u.match;\n                    switch (match) {\n                        case UriMatchType.Domain:\n                            if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                                if (DomainMatchBlacklist.has(u.domain)) {\n                                    const domainUrlHost = Utils.getHost(url);\n                                    if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                                        return true;\n                                    }\n                                } else {\n                                    return true;\n                                }\n                            }\n                            break;\n                        case UriMatchType.Host:\n                            const urlHost = Utils.getHost(url);\n                            if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.Exact:\n                            if (url === u.uri) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.StartsWith:\n                            if (url.startsWith(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.RegularExpression:\n                            try {\n                                const regex = new RegExp(u.uri, 'i');\n                                if (regex.test(url)) {\n                                    return true;\n                                }\n                            } catch (e) {\n                                this.logService.error(e);\n                            }\n                            break;\n                        case UriMatchType.Never:\n                        default:\n                            break;\n                    }\n                }\n            }\n\n            return false;\n        });\n    }\n\n    async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n        const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n        if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n            const decCiphers: CipherView[] = [];\n            const promises: any[] = [];\n            ciphers.data.forEach(r => {\n                const data = new CipherData(r);\n                const cipher = new Cipher(data);\n                promises.push(cipher.decrypt().then(c => decCiphers.push(c)));\n            });\n            await Promise.all(promises);\n            decCiphers.sort(this.getLocaleSortingFunction());\n            return decCiphers;\n        } else {\n            return [];\n        }\n    }\n\n    async getLastUsedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n        return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n    }\n\n    async getLastLaunchedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n        return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n    }\n\n    async getNextCipherForUrl(url: string): Promise<CipherView> {\n        return this.getCipherForUrl(url, false, false, false);\n    }\n\n    updateLastUsedIndexForUrl(url: string) {\n        this.sortedCiphersCache.updateLastUsedIndex(url);\n    }\n\n    async updateLastUsedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastUsedDate = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async updateLastLaunchedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastLaunched = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async saveNeverDomain(domain: string): Promise<void> {\n        if (domain == null) {\n            return;\n        }\n\n        let domains = await this.storageService.get<{ [id: string]: any; }>(Keys.neverDomains);\n        if (!domains) {\n            domains = {};\n        }\n        domains[domain] = null;\n        await this.storageService.save(Keys.neverDomains, domains);\n    }\n\n    async saveWithServer(cipher: Cipher): Promise<any> {\n        let response: CipherResponse;\n        if (cipher.id == null) {\n            if (cipher.collectionIds != null) {\n                const request = new CipherCreateRequest(cipher);\n                response = await this.apiService.postCipherCreate(request);\n            } else {\n                const request = new CipherRequest(cipher);\n                response = await this.apiService.postCipher(request);\n            }\n            cipher.id = response.id;\n        } else {\n            const request = new CipherRequest(cipher);\n            response = await this.apiService.putCipher(cipher.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, cipher.collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareWithServer(cipher: CipherView, organizationId: string, collectionIds: string[]): Promise<any> {\n        const attachmentPromises: Promise<any>[] = [];\n        if (cipher.attachments != null) {\n            cipher.attachments.forEach(attachment => {\n                if (attachment.key == null) {\n                    attachmentPromises.push(this.shareAttachmentWithServer(attachment, cipher.id, organizationId));\n                }\n            });\n        }\n        await Promise.all(attachmentPromises);\n\n        cipher.organizationId = organizationId;\n        cipher.collectionIds = collectionIds;\n        const encCipher = await this.encrypt(cipher);\n        const request = new CipherShareRequest(encCipher);\n        const response = await this.apiService.putShareCipher(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareManyWithServer(ciphers: CipherView[], organizationId: string, collectionIds: string[]): Promise<any> {\n        const promises: Promise<any>[] = [];\n        const encCiphers: Cipher[] = [];\n        for (const cipher of ciphers) {\n            cipher.organizationId = organizationId;\n            cipher.collectionIds = collectionIds;\n            promises.push(this.encrypt(cipher).then(c => {\n                encCiphers.push(c);\n            }));\n        }\n        await Promise.all(promises);\n        const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n        await this.apiService.putShareCiphers(request);\n        const userId = await this.userService.getUserId();\n        await this.upsert(encCiphers.map(c => c.toCipherData(userId)));\n    }\n\n    saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(unencryptedFile);\n            reader.onload = async (evt: any) => {\n                try {\n                    const cData = await this.saveAttachmentRawWithServer(cipher,\n                        unencryptedFile.name, evt.target.result, admin);\n                    resolve(cData);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = evt => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    async saveAttachmentRawWithServer(cipher: Cipher, filename: string,\n        data: ArrayBuffer, admin = false): Promise<Cipher> {\n        const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n        const encFileName = await this.cryptoService.encrypt(filename, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n        const request: AttachmentRequest = {\n            key: dataEncKey[1].encryptedString,\n            fileName: encFileName.encryptedString,\n            fileSize: encData.buffer.byteLength,\n            adminRequest: admin,\n        };\n\n        let response: CipherResponse;\n        try {\n            const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n            response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n            await this.fileUploadService.uploadCipherAttachment(admin, uploadDataResponse, encFileName, encData);\n        } catch (e) {\n            if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404 || (e as ErrorResponse).statusCode === 405) {\n                response = await this.legacyServerAttachmentFileUpload(admin, cipher.id, encFileName, encData, dataEncKey[1]);\n            } else if (e instanceof ErrorResponse) {\n                throw new Error((e as ErrorResponse).getSingleMessage());\n            } else {\n                throw e;\n            }\n        }\n\n        const userId = await this.userService.getUserId();\n        const cData = new CipherData(response, userId, cipher.collectionIds);\n        if (!admin) {\n            await this.upsert(cData);\n        }\n        return new Cipher(cData);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async legacyServerAttachmentFileUpload(admin: boolean, cipherId: string, encFileName: EncString,\n        encData: EncArrayBuffer, key: EncString) {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData.buffer], { type: 'application/octet-stream' });\n            fd.append('key', key.encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', key.encryptedString);\n                fd.append('data', Buffer.from(encData.buffer) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        let response: CipherResponse;\n        try {\n            if (admin) {\n                response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n            } else {\n                response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n            }\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n\n        return response;\n    }\n\n    async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n        const request = new CipherCollectionsRequest(cipher.collectionIds);\n        await this.apiService.putCipherCollections(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = cipher.toCipherData(userId);\n        await this.upsert(data);\n    }\n\n    async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        if (cipher instanceof CipherData) {\n            const c = cipher as CipherData;\n            ciphers[c.id] = c;\n        } else {\n            (cipher as CipherData[]).forEach(c => {\n                ciphers[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async replace(ciphers: { [id: string]: CipherData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.ciphersPrefix + userId);\n        this.clearCache();\n    }\n\n    async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n        await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        ids.forEach(id => {\n            if (ciphers.hasOwnProperty(id)) {\n                ciphers[id].folderId = folderId;\n            }\n        });\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (ciphers[id] == null) {\n                return;\n            }\n            delete ciphers[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete ciphers[i];\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteCipher(id);\n        await this.delete(id);\n    }\n\n    async deleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.delete(ids);\n    }\n\n    async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n\n        if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n            return;\n        }\n\n        for (let i = 0; i < ciphers[id].attachments.length; i++) {\n            if (ciphers[id].attachments[i].id === attachmentId) {\n                ciphers[id].attachments.splice(i, 1);\n            }\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n        try {\n            await this.apiService.deleteCipherAttachment(id, attachmentId);\n        } catch (e) {\n            return Promise.reject((e as ErrorResponse).getSingleMessage());\n        }\n        await this.deleteAttachment(id, attachmentId);\n    }\n\n    sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n        const aLastUsed = a.localData && a.localData.lastUsedDate ? a.localData.lastUsedDate as number : null;\n        const bLastUsed = b.localData && b.localData.lastUsedDate ? b.localData.lastUsedDate as number : null;\n\n        const bothNotNull = aLastUsed != null && bLastUsed != null;\n        if (bothNotNull && aLastUsed < bLastUsed) {\n            return 1;\n        }\n        if (aLastUsed != null && bLastUsed == null) {\n            return -1;\n        }\n\n        if (bothNotNull && aLastUsed > bLastUsed) {\n            return -1;\n        }\n        if (bLastUsed != null && aLastUsed == null) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n        const result = this.sortCiphersByLastUsed(a, b);\n        if (result !== 0) {\n            return result;\n        }\n\n        return this.getLocaleSortingFunction()(a, b);\n    }\n\n    getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n        return (a, b) => {\n            let aName = a.name;\n            let bName = b.name;\n\n            if (aName == null && bName != null) {\n                return -1;\n            }\n            if (aName != null && bName == null) {\n                return 1;\n            }\n            if (aName == null && bName == null) {\n                return 0;\n            }\n\n            const result = this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n\n            if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n                return result;\n            }\n\n            if (a.login.username != null) {\n                aName += a.login.username;\n            }\n\n            if (b.login.username != null) {\n                bName += b.login.username;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n        };\n    }\n\n    async softDelete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        const setDeletedDate = (cipherId: string) => {\n            if (ciphers[cipherId] == null) {\n                return;\n            }\n            ciphers[cipherId].deletedDate = new Date().toISOString();\n        };\n\n        if (typeof id === 'string') {\n            setDeletedDate(id);\n        } else {\n            (id as string[]).forEach(setDeletedDate);\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async softDeleteWithServer(id: string): Promise<any> {\n        await this.apiService.putDeleteCipher(id);\n        await this.softDelete(id);\n    }\n\n    async softDeleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.softDelete(ids);\n    }\n\n    async restore(cipher: { id: string, revisionDate: string; } | { id: string, revisionDate: string; }[]) {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        const clearDeletedDate = (c: { id: string, revisionDate: string; }) => {\n            if (ciphers[c.id] == null) {\n                return;\n            }\n            ciphers[c.id].deletedDate = null;\n            ciphers[c.id].revisionDate = c.revisionDate;\n        };\n\n\n        if (cipher.constructor.name === 'Array') {\n            (cipher as { id: string, revisionDate: string; }[]).forEach(clearDeletedDate);\n        } else {\n            clearDeletedDate(cipher as { id: string, revisionDate: string; });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async restoreWithServer(id: string): Promise<any> {\n        const response = await this.apiService.putRestoreCipher(id);\n        await this.restore({ id: id, revisionDate: response.revisionDate });\n    }\n\n    async restoreManyWithServer(ids: string[]): Promise<any> {\n        const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n        const restores: { id: string, revisionDate: string; }[] = [];\n        for (const cipher of response.data) {\n            restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n        }\n        await this.restore(restores);\n    }\n\n    // Helpers\n\n    private async shareAttachmentWithServer(attachmentView: AttachmentView, cipherId: string,\n        organizationId: string): Promise<any> {\n        const attachmentResponse = await this.apiService.nativeFetch(\n            new Request(attachmentView.url, { cache: 'no-store' }));\n        if (attachmentResponse.status !== 200) {\n            throw Error('Failed to download attachment: ' + attachmentResponse.status.toString());\n        }\n\n        const buf = await attachmentResponse.arrayBuffer();\n        const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n        const key = await this.cryptoService.getOrgKey(organizationId);\n        const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData.buffer], { type: 'application/octet-stream' });\n            fd.append('key', dataEncKey[1].encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', dataEncKey[1].encryptedString);\n                fd.append('data', Buffer.from(encData.buffer) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        try {\n            await this.apiService.postShareCipherAttachment(cipherId, attachmentView.id, fd, organizationId);\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n    }\n\n    private async encryptObjProperty<V extends View, D extends Domain>(model: V, obj: D,\n        map: any, key: SymmetricCryptoKey): Promise<void> {\n        const promises = [];\n        const self = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp, theObj) {\n                const p = Promise.resolve().then(() => {\n                    const modelProp = (model as any)[(map[theProp] || theProp)];\n                    if (modelProp && modelProp !== '') {\n                        return self.cryptoService.encrypt(modelProp, key);\n                    }\n                    return null;\n                }).then((val: EncString) => {\n                    (theObj as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop, obj);\n        }\n\n        await Promise.all(promises);\n    }\n\n    private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n        switch (cipher.type) {\n            case CipherType.Login:\n                cipher.login = new Login();\n                cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n                cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n                await this.encryptObjProperty(model.login, cipher.login, {\n                    username: null,\n                    password: null,\n                    totp: null,\n                }, key);\n\n                if (model.login.uris != null) {\n                    cipher.login.uris = [];\n                    for (let i = 0; i < model.login.uris.length; i++) {\n                        const loginUri = new LoginUri();\n                        loginUri.match = model.login.uris[i].match;\n                        await this.encryptObjProperty(model.login.uris[i], loginUri, {\n                            uri: null,\n                        }, key);\n                        cipher.login.uris.push(loginUri);\n                    }\n                }\n                return;\n            case CipherType.SecureNote:\n                cipher.secureNote = new SecureNote();\n                cipher.secureNote.type = model.secureNote.type;\n                return;\n            case CipherType.Card:\n                cipher.card = new Card();\n                await this.encryptObjProperty(model.card, cipher.card, {\n                    cardholderName: null,\n                    brand: null,\n                    number: null,\n                    expMonth: null,\n                    expYear: null,\n                    code: null,\n                }, key);\n                return;\n            case CipherType.Identity:\n                cipher.identity = new Identity();\n                await this.encryptObjProperty(model.identity, cipher.identity, {\n                    title: null,\n                    firstName: null,\n                    middleName: null,\n                    lastName: null,\n                    address1: null,\n                    address2: null,\n                    address3: null,\n                    city: null,\n                    state: null,\n                    postalCode: null,\n                    country: null,\n                    company: null,\n                    email: null,\n                    phone: null,\n                    ssn: null,\n                    username: null,\n                    passportNumber: null,\n                    licenseNumber: null,\n                }, key);\n                return;\n            default:\n                throw new Error('Unknown cipher type.');\n        }\n    }\n\n    private async getCipherForUrl(url: string, lastUsed: boolean, lastLaunched: boolean, autofillOnPageLoad: boolean): Promise<CipherView> {\n        const cacheKey = autofillOnPageLoad ? 'autofillOnPageLoad-' + url : url;\n\n        if (!this.sortedCiphersCache.isCached(cacheKey)) {\n            let ciphers = await this.getAllDecryptedForUrl(url);\n            if (!ciphers) {\n                return null;\n            }\n\n            if (autofillOnPageLoad) {\n                const autofillOnPageLoadDefault = await this.storageService.get(ConstantsService.autoFillOnPageLoadDefaultKey);\n                ciphers = ciphers.filter(cipher => cipher.login.autofillOnPageLoad ||\n                    (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false));\n                if (ciphers.length === 0) {\n                    return null;\n                }\n            }\n\n            this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n        }\n\n        if (lastLaunched) {\n            return this.sortedCiphersCache.getLastLaunched(cacheKey);\n        } else if (lastUsed) {\n            return this.sortedCiphersCache.getLastUsed(cacheKey);\n        } else {\n            return this.sortedCiphersCache.getNext(cacheKey);\n        }\n    }\n}\n","export class CipherBulkMoveRequest {\n    ids: string[];\n    folderId: string;\n\n    constructor(ids: string[], folderId: string) {\n        this.ids = ids == null ? [] : ids;\n        this.folderId = folderId;\n    }\n}\n","export class CipherBulkRestoreRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherBulkShareRequest {\n    ciphers: CipherWithIdRequest[];\n    collectionIds: string[];\n\n    constructor(ciphers: Cipher[], collectionIds: string[]) {\n        if (ciphers != null) {\n            this.ciphers = [];\n            ciphers.forEach(c => {\n                this.ciphers.push(new CipherWithIdRequest(c));\n            });\n        }\n        this.collectionIds = collectionIds;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherShareRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { CipherView } from '../view/cipherView';\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n    private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n    private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n    constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) { }\n\n    isCached(url: string) {\n        return this.sortedCiphersByUrl.has(url);\n    }\n\n    addCiphers(url: string, ciphers: CipherView[]) {\n        ciphers.sort(this.comparator);\n        this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n        this.resetTimer(url);\n    }\n\n    getLastUsed(url: string) {\n        this.resetTimer(url);\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n    }\n\n    getLastLaunched(url: string) {\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n    }\n\n    getNext(url: string) {\n        this.resetTimer(url);\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n    }\n\n    updateLastUsedIndex(url: string) {\n        if (this.isCached(url)) {\n            this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n        }\n    }\n\n    clear() {\n        this.sortedCiphersByUrl.clear();\n        this.timeouts.clear();\n    }\n\n    private resetTimer(url: string) {\n        clearTimeout(this.timeouts.get(url));\n        this.timeouts.set(url, setTimeout(() => {\n            this.sortedCiphersByUrl.delete(url);\n            this.timeouts.delete(url);\n        }, CacheTTL));\n    }\n}\n\nclass Ciphers {\n    lastUsedIndex = -1;\n\n    constructor(private readonly ciphers: CipherView[]) { }\n\n    getLastUsed() {\n        this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n        return this.ciphers[this.lastUsedIndex];\n    }\n\n    getLastLaunched() {\n        const usedCiphers = this.ciphers.filter(cipher => cipher.localData?.lastLaunched);\n        const sortedCiphers = usedCiphers.sort((x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf());\n        return sortedCiphers[0];\n    }\n\n    getNextIndex() {\n        return (this.lastUsedIndex + 1) % this.ciphers.length;\n    }\n\n    getNext() {\n        return this.ciphers[this.getNextIndex()];\n    }\n\n    updateLastUsedIndex() {\n        this.lastUsedIndex = this.getNextIndex();\n    }\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nimport { CollectionService as CollectionServiceAbstraction } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    collectionsPrefix: 'collections_',\n};\nconst NestingDelimiter = '/';\n\nexport class CollectionService implements CollectionServiceAbstraction {\n    decryptedCollectionCache: CollectionView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private storageService: StorageService, private i18nService: I18nService) {\n    }\n\n    clearCache(): void {\n        this.decryptedCollectionCache = null;\n    }\n\n    async encrypt(model: CollectionView): Promise<Collection> {\n        if (model.organizationId == null) {\n            throw new Error('Collection has no organization id.');\n        }\n        const key = await this.cryptoService.getOrgKey(model.organizationId);\n        if (key == null) {\n            throw new Error('No key for this collection\\'s organization.');\n        }\n        const collection = new Collection();\n        collection.id = model.id;\n        collection.organizationId = model.organizationId;\n        collection.readOnly = model.readOnly;\n        collection.name = await this.cryptoService.encrypt(model.name, key);\n        return collection;\n    }\n\n    async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n        if (collections == null) {\n            return [];\n        }\n        const decCollections: CollectionView[] = [];\n        const promises: Promise<any>[] = [];\n        collections.forEach(collection => {\n            promises.push(collection.decrypt().then(c => decCollections.push(c)));\n        });\n        await Promise.all(promises);\n        return decCollections.sort(Utils.getSortFunction(this.i18nService, 'name'));\n    }\n\n    async get(id: string): Promise<Collection> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null || !collections.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Collection(collections[id]);\n    }\n\n    async getAll(): Promise<Collection[]> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        const response: Collection[] = [];\n        for (const id in collections) {\n            if (collections.hasOwnProperty(id)) {\n                response.push(new Collection(collections[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<CollectionView[]> {\n        if (this.decryptedCollectionCache != null) {\n            return this.decryptedCollectionCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const collections = await this.getAll();\n        this.decryptedCollectionCache = await this.decryptMany(collections);\n        return this.decryptedCollectionCache;\n    }\n\n    async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n        if (collections == null) {\n            collections = await this.getAllDecrypted();\n        }\n        const nodes: TreeNode<CollectionView>[] = [];\n        collections.forEach(c => {\n            const collectionCopy = new CollectionView();\n            collectionCopy.id = c.id;\n            collectionCopy.organizationId = c.organizationId;\n            const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<CollectionView>> {\n        const collections = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n    }\n\n    async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            collections = {};\n        }\n\n        if (collection instanceof CollectionData) {\n            const c = collection as CollectionData;\n            collections[c.id] = c;\n        } else {\n            (collection as CollectionData[]).forEach(c => {\n                collections[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async replace(collections: { [id: string]: CollectionData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.collectionsPrefix + userId);\n        this.decryptedCollectionCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            const i = id as string;\n            delete collections[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete collections[i];\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n    parent: T;\n    node: T;\n    children: TreeNode<T>[] = [];\n\n    constructor(node: T, name: string, parent: T) {\n        this.parent = parent;\n        this.node = node;\n        this.node.name = name;\n    }\n}\n\nexport interface ITreeNodeObject {\n    id: string;\n    name: string;\n}\n","export enum LogLevelType {\n    Debug,\n    Info,\n    Warning,\n    Error,\n}\n","import { CryptoService } from '../abstractions/crypto.service';\n\nexport class ContainerService {\n    constructor(private cryptoService: CryptoService) {\n    }\n\n    // deprecated, use attachToGlobal instead\n    attachToWindow(win: any) {\n        this.attachToGlobal(win);\n    }\n\n    attachToGlobal(global: any) {\n        if (!global.bitwardenContainerService) {\n            global.bitwardenContainerService = this;\n        }\n    }\n\n    getCryptoService(): CryptoService {\n        return this.cryptoService;\n    }\n}\n","import * as bigInt from 'big-integer';\n\nimport { EncryptionType } from '../enums/encryptionType';\nimport { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncryptedObject } from '../models/domain/encryptedObject';\nimport { EncString } from '../models/domain/encString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nimport { CryptoService as CryptoServiceAbstraction } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { LogService } from '../abstractions/log.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport {\n    KeySuffixOptions,\n    StorageService,\n} from '../abstractions/storage.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\nimport { EEFLongWordList } from '../misc/wordlist';\nimport { ProfileProviderOrganizationResponse } from '../models/response/profileProviderOrganizationResponse';\nimport { ProfileProviderResponse } from '../models/response/profileProviderResponse';\n\nexport const Keys = {\n    key: 'key', // Master Key\n    encOrgKeys: 'encOrgKeys',\n    encProviderKeys: 'encProviderKeys',\n    encPrivateKey: 'encPrivateKey',\n    encKey: 'encKey', // Generated Symmetric Key\n    keyHash: 'keyHash',\n};\n\nexport class CryptoService implements CryptoServiceAbstraction {\n    private key: SymmetricCryptoKey;\n    private encKey: SymmetricCryptoKey;\n    private legacyEtmKey: SymmetricCryptoKey;\n    private keyHash: string;\n    private publicKey: ArrayBuffer;\n    private privateKey: ArrayBuffer;\n    private orgKeys: Map<string, SymmetricCryptoKey>;\n    private providerKeys: Map<string, SymmetricCryptoKey>;\n\n    constructor(private storageService: StorageService, protected secureStorageService: StorageService,\n        private cryptoFunctionService: CryptoFunctionService, protected platformUtilService: PlatformUtilsService,\n        protected logService: LogService) {\n    }\n\n    async setKey(key: SymmetricCryptoKey): Promise<any> {\n        this.key = key;\n\n        await this.storeKey(key);\n    }\n\n    setKeyHash(keyHash: string): Promise<{}> {\n        this.keyHash = keyHash;\n        return this.storageService.save(Keys.keyHash, keyHash);\n    }\n\n    async setEncKey(encKey: string): Promise<{}> {\n        if (encKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encKey, encKey);\n        this.encKey = null;\n    }\n\n    async setEncPrivateKey(encPrivateKey: string): Promise<{}> {\n        if (encPrivateKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encPrivateKey, encPrivateKey);\n        this.privateKey = null;\n    }\n\n    async setOrgKeys(orgs: ProfileOrganizationResponse[], providerOrgs: ProfileProviderOrganizationResponse[]): Promise<{}> {\n        const orgKeys: any = {};\n        orgs.forEach(org => {\n            orgKeys[org.id] = org.key;\n        });\n\n        for (const providerOrg of providerOrgs) {\n            // Convert provider encrypted keys to user encrypted.\n            const providerKey = await this.getProviderKey(providerOrg.providerId);\n            const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n            orgKeys[providerOrg.id] = await (await this.rsaEncrypt(decValue)).encryptedString;\n        }\n\n        this.orgKeys = null;\n        return this.storageService.save(Keys.encOrgKeys, orgKeys);\n    }\n\n    setProviderKeys(providers: ProfileProviderResponse[]): Promise<{}> {\n        const providerKeys: any = {};\n        providers.forEach(provider => {\n            providerKeys[provider.id] = provider.key;\n        });\n\n        this.providerKeys = null;\n        return this.storageService.save(Keys.encProviderKeys, providerKeys);\n    }\n\n    async getKey(keySuffix?: KeySuffixOptions): Promise<SymmetricCryptoKey> {\n        if (this.key != null) {\n            return this.key;\n        }\n\n        keySuffix ||= 'auto';\n        const symmetricKey = await this.getKeyFromStorage(keySuffix);\n\n        if (symmetricKey != null) {\n            this.setKey(symmetricKey);\n        }\n\n        return symmetricKey;\n    }\n\n    async getKeyFromStorage(keySuffix: KeySuffixOptions): Promise<SymmetricCryptoKey> {\n        const key = await this.retrieveKeyFromStorage(keySuffix);\n        if (key != null) {\n\n            const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n            if (!await this.validateKey(symmetricKey)) {\n                this.logService.warning('Wrong key, throwing away stored key');\n                this.secureStorageService.remove(Keys.key, { keySuffix: keySuffix });\n                return null;\n            }\n\n            return symmetricKey;\n        }\n        return null;\n    }\n\n    async getKeyHash(): Promise<string> {\n        if (this.keyHash != null) {\n            return this.keyHash;\n        }\n\n        const keyHash = await this.storageService.get<string>(Keys.keyHash);\n        if (keyHash != null) {\n            this.keyHash = keyHash;\n        }\n\n        return keyHash == null ? null : this.keyHash;\n    }\n\n    async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n        const storedKeyHash = await this.getKeyHash();\n        if (masterPassword != null && storedKeyHash != null) {\n            const localKeyHash = await this.hashPassword(masterPassword, key, HashPurpose.LocalAuthorization);\n            if (localKeyHash != null && storedKeyHash === localKeyHash) {\n                return true;\n            }\n\n            // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n            const serverKeyHash = await this.hashPassword(masterPassword, key, HashPurpose.ServerAuthorization);\n            if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n                await this.setKeyHash(localKeyHash);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    @sequentialize(() => 'getEncKey')\n    async getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n        if (this.encKey != null) {\n            return this.encKey;\n        }\n\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        if (encKey == null) {\n            return null;\n        }\n\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (key == null) {\n            return null;\n        }\n\n        let decEncKey: ArrayBuffer;\n        const encKeyCipher = new EncString(encKey);\n        if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n            decEncKey = await this.decryptToBytes(encKeyCipher, key);\n        } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n            const newKey = await this.stretchKey(key);\n            decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n        } else {\n            throw new Error('Unsupported encKey type.');\n        }\n\n        if (decEncKey == null) {\n            return null;\n        }\n        this.encKey = new SymmetricCryptoKey(decEncKey);\n        return this.encKey;\n    }\n\n    async getPublicKey(): Promise<ArrayBuffer> {\n        if (this.publicKey != null) {\n            return this.publicKey;\n        }\n\n        const privateKey = await this.getPrivateKey();\n        if (privateKey == null) {\n            return null;\n        }\n\n        this.publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        return this.publicKey;\n    }\n\n    async getPrivateKey(): Promise<ArrayBuffer> {\n        if (this.privateKey != null) {\n            return this.privateKey;\n        }\n\n        const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n        if (encPrivateKey == null) {\n            return null;\n        }\n\n        this.privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n        return this.privateKey;\n    }\n\n    async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey === null) {\n            throw new Error('No public key available.');\n        }\n        const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, 'sha256');\n        const userFingerprint = await this.cryptoFunctionService.hkdfExpand(keyFingerprint, userId, 32, 'sha256');\n        return this.hashPhrase(userFingerprint);\n    }\n\n    @sequentialize(() => 'getOrgKeys')\n    async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n        if (this.orgKeys != null && this.orgKeys.size > 0) {\n            return this.orgKeys;\n        }\n\n        const encOrgKeys = await this.storageService.get<any>(Keys.encOrgKeys);\n        if (encOrgKeys == null) {\n            return null;\n        }\n\n        const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n        let setKey = false;\n\n        for (const orgId in encOrgKeys) {\n            if (!encOrgKeys.hasOwnProperty(orgId)) {\n                continue;\n            }\n\n            const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n            orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n            setKey = true;\n        }\n\n        if (setKey) {\n            this.orgKeys = orgKeys;\n        }\n\n        return this.orgKeys;\n    }\n\n    async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n        if (orgId == null) {\n            return null;\n        }\n\n        const orgKeys = await this.getOrgKeys();\n        if (orgKeys == null || !orgKeys.has(orgId)) {\n            return null;\n        }\n\n        return orgKeys.get(orgId);\n    }\n\n    @sequentialize(() => 'getProviderKeys')\n    async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n        if (this.providerKeys != null && this.providerKeys.size > 0) {\n            return this.providerKeys;\n        }\n\n        const encProviderKeys = await this.storageService.get<any>(Keys.encProviderKeys);\n        if (encProviderKeys == null) {\n            return null;\n        }\n\n        const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n        let setKey = false;\n\n        for (const orgId in encProviderKeys) {\n            if (!encProviderKeys.hasOwnProperty(orgId)) {\n                continue;\n            }\n\n            const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n            providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n            setKey = true;\n        }\n\n        if (setKey) {\n            this.providerKeys = providerKeys;\n        }\n\n        return this.providerKeys;\n    }\n\n    async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n        if (providerId == null) {\n            return null;\n        }\n\n        const providerKeys = await this.getProviderKeys();\n        if (providerKeys == null || !providerKeys.has(providerId)) {\n            return null;\n        }\n\n        return providerKeys.get(providerId);\n    }\n\n    async hasKey(): Promise<boolean> {\n        return this.hasKeyInMemory() || await this.hasKeyStored('auto') || await this.hasKeyStored('biometric');\n    }\n\n    hasKeyInMemory(): boolean {\n        return this.key != null;\n    }\n\n    hasKeyStored(keySuffix: KeySuffixOptions): Promise<boolean> {\n        return this.secureStorageService.has(Keys.key, { keySuffix: keySuffix });\n    }\n\n    async hasEncKey(): Promise<boolean> {\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        return encKey != null;\n    }\n\n    async clearKey(clearSecretStorage: boolean = true): Promise<any> {\n        this.key = this.legacyEtmKey = null;\n        if (clearSecretStorage) {\n            this.clearStoredKey('auto');\n            this.clearStoredKey('biometric');\n        }\n    }\n\n    async clearStoredKey(keySuffix: KeySuffixOptions) {\n        await this.secureStorageService.remove(Keys.key, { keySuffix: keySuffix });\n    }\n\n    clearKeyHash(): Promise<any> {\n        this.keyHash = null;\n        return this.storageService.remove(Keys.keyHash);\n    }\n\n    clearEncKey(memoryOnly?: boolean): Promise<any> {\n        this.encKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encKey);\n    }\n\n    clearKeyPair(memoryOnly?: boolean): Promise<any> {\n        this.privateKey = null;\n        this.publicKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encPrivateKey);\n    }\n\n    clearOrgKeys(memoryOnly?: boolean): Promise<any> {\n        this.orgKeys = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encOrgKeys);\n    }\n\n    clearProviderKeys(memoryOnly?: boolean): Promise<any> {\n        this.providerKeys = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encOrgKeys);\n    }\n\n    clearPinProtectedKey(): Promise<any> {\n        return this.storageService.remove(ConstantsService.pinProtectedKey);\n    }\n\n    async clearKeys(): Promise<any> {\n        await this.clearKey();\n        await this.clearKeyHash();\n        await this.clearOrgKeys();\n        await this.clearProviderKeys();\n        await this.clearEncKey();\n        await this.clearKeyPair();\n        await this.clearPinProtectedKey();\n    }\n\n    async toggleKey(): Promise<any> {\n        const key = await this.getKey();\n\n        await this.setKey(key);\n    }\n\n    async makeKey(password: string, salt: string, kdf: KdfType, kdfIterations: number):\n        Promise<SymmetricCryptoKey> {\n        let key: ArrayBuffer = null;\n        if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n            if (kdfIterations == null) {\n                kdfIterations = 5000;\n            } else if (kdfIterations < 5000) {\n                throw new Error('PBKDF2 iteration minimum is 5000.');\n            }\n            key = await this.cryptoFunctionService.pbkdf2(password, salt, 'sha256', kdfIterations);\n        } else {\n            throw new Error('Unknown Kdf.');\n        }\n        return new SymmetricCryptoKey(key);\n    }\n\n    async makeKeyFromPin(pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs: EncString = null):\n        Promise<SymmetricCryptoKey> {\n        if (protectedKeyCs == null) {\n            const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n            if (pinProtectedKey == null) {\n                throw new Error('No PIN protected key found.');\n            }\n            protectedKeyCs = new EncString(pinProtectedKey);\n        }\n        const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n        const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n        return new SymmetricCryptoKey(decKey);\n    }\n\n    async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n        const shareKey = await this.cryptoFunctionService.randomBytes(64);\n        const publicKey = await this.getPublicKey();\n        const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n        return [encShareKey, new SymmetricCryptoKey(shareKey)];\n    }\n\n    async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n        const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n        const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n        const privateEnc = await this.encrypt(keyPair[1], key);\n        return [publicB64, privateEnc];\n    }\n\n    async makePinKey(pin: string, salt: string, kdf: KdfType, kdfIterations: number): Promise<SymmetricCryptoKey> {\n        const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n        return await this.stretchKey(pinKey);\n    }\n\n    async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n        const sendKey = await this.cryptoFunctionService.hkdf(keyMaterial, 'bitwarden-send', 'send', 64, 'sha256');\n        return new SymmetricCryptoKey(sendKey);\n    }\n\n    async hashPassword(password: string, key: SymmetricCryptoKey, hashPurpose?: HashPurpose): Promise<string> {\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (password == null || key == null) {\n            throw new Error('Invalid parameters.');\n        }\n\n        const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n        const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, 'sha256', iterations);\n        return Utils.fromBufferToB64(hash);\n    }\n\n    async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n        const theKey = await this.getKeyForEncryption(key);\n        const encKey = await this.cryptoFunctionService.randomBytes(64);\n        return this.buildEncKey(theKey, encKey);\n    }\n\n    async remakeEncKey(key: SymmetricCryptoKey, encKey?: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n        if (encKey == null) {\n            encKey = await this.getEncKey();\n        }\n        return this.buildEncKey(key, encKey.key);\n    }\n\n    async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n        if (plainValue == null) {\n            return Promise.resolve(null);\n        }\n\n        let plainBuf: ArrayBuffer;\n        if (typeof (plainValue) === 'string') {\n            plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n        } else {\n            plainBuf = plainValue;\n        }\n\n        const encObj = await this.aesEncrypt(plainBuf, key);\n        const iv = Utils.fromBufferToB64(encObj.iv);\n        const data = Utils.fromBufferToB64(encObj.data);\n        const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n        return new EncString(encObj.key.encType, data, iv, mac);\n    }\n\n    async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n        const encValue = await this.aesEncrypt(plainValue, key);\n        let macLen = 0;\n        if (encValue.mac != null) {\n            macLen = encValue.mac.byteLength;\n        }\n\n        const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n        encBytes.set([encValue.key.encType]);\n        encBytes.set(new Uint8Array(encValue.iv), 1);\n        if (encValue.mac != null) {\n            encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n        }\n\n        encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n        return new EncArrayBuffer(encBytes.buffer);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey == null) {\n            throw new Error('Public key unavailable.');\n        }\n\n        const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, 'sha1');\n        return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n    }\n\n    async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n        const headerPieces = encValue.split('.');\n        let encType: EncryptionType = null;\n        let encPieces: string[];\n\n        if (headerPieces.length === 1) {\n            encType = EncryptionType.Rsa2048_OaepSha256_B64;\n            encPieces = [headerPieces[0]];\n        } else if (headerPieces.length === 2) {\n            try {\n                encType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) {\n                this.logService.error(e);\n            }\n        }\n\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            // HmacSha256 types are deprecated\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        if (encPieces == null || encPieces.length <= 0) {\n            throw new Error('encPieces unavailable.');\n        }\n\n        const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n        const privateKey = privateKeyValue ?? await this.getPrivateKey();\n        if (privateKey == null) {\n            throw new Error('No private key.');\n        }\n\n        let alg: 'sha1' | 'sha256' = 'sha1';\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n                alg = 'sha256';\n                break;\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n    }\n\n    async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const iv = Utils.fromB64ToArray(encString.iv).buffer;\n        const data = Utils.fromB64ToArray(encString.data).buffer;\n        const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n        const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n        if (decipher == null) {\n            return null;\n        }\n\n        return decipher;\n    }\n\n    async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n        return await this.aesDecryptToUtf8(encString.encryptionType, encString.data,\n            encString.iv, encString.mac, key);\n    }\n\n    async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        if (encBuf == null) {\n            throw new Error('no encBuf.');\n        }\n\n        const encBytes = new Uint8Array(encBuf);\n        const encType = encBytes[0];\n        let ctBytes: Uint8Array = null;\n        let ivBytes: Uint8Array = null;\n        let macBytes: Uint8Array = null;\n\n        switch (encType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encBytes.length <= 49) { // 1 + 16 + 32 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                macBytes = encBytes.slice(17, 49);\n                ctBytes = encBytes.slice(49);\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encBytes.length <= 17) { // 1 + 16 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                ctBytes = encBytes.slice(17);\n                break;\n            default:\n                return null;\n        }\n\n        return await this.aesDecryptToBytes(encType, ctBytes.buffer, ivBytes.buffer,\n            macBytes != null ? macBytes.buffer : null, key);\n    }\n\n    // EFForg/OpenWireless\n    // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n    async randomNumber(min: number, max: number): Promise<number> {\n        let rval = 0;\n        const range = max - min + 1;\n        const bitsNeeded = Math.ceil(Math.log2(range));\n        if (bitsNeeded > 53) {\n            throw new Error('We cannot generate numbers larger than 53 bits.');\n        }\n\n        const bytesNeeded = Math.ceil(bitsNeeded / 8);\n        const mask = Math.pow(2, bitsNeeded) - 1;\n        // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n        // Fill a byte array with N random numbers\n        const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n        let p = (bytesNeeded - 1) * 8;\n        for (let i = 0; i < bytesNeeded; i++) {\n            rval += byteArray[i] * Math.pow(2, p);\n            p -= 8;\n        }\n\n        // Use & to apply the mask and reduce the number of recursive lookups\n        // tslint:disable-next-line\n        rval = rval & mask;\n\n        if (rval >= range) {\n            // Integer out of acceptable range\n            return this.randomNumber(min, max);\n        }\n\n        // Return an integer that falls within the range\n        return min + rval;\n    }\n\n    async validateKey(key: SymmetricCryptoKey) {\n        try {\n            const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n            const encKey = await this.getEncKey(key);\n            if (encPrivateKey == null || encKey == null) {\n                return false;\n            }\n\n            const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n            await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        } catch (e) {\n            return false;\n        }\n\n        return true;\n    }\n\n    // Helpers\n\n    protected async storeKey(key: SymmetricCryptoKey) {\n        if (await this.shouldStoreKey('auto') || await this.shouldStoreKey('biometric')) {\n            this.secureStorageService.save(Keys.key, key.keyB64);\n        } else {\n            this.secureStorageService.remove(Keys.key);\n        }\n    }\n\n    protected async shouldStoreKey(keySuffix: KeySuffixOptions) {\n        let shouldStoreKey = false;\n        if (keySuffix === 'auto') {\n            const vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n            shouldStoreKey = vaultTimeout == null;\n        } else if (keySuffix === 'biometric') {\n            const biometricUnlock = await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\n            shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n        }\n        return shouldStoreKey;\n    }\n\n    protected retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n        return this.secureStorageService.get<string>(Keys.key, { keySuffix: keySuffix });\n    }\n\n    private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n        const obj = new EncryptedObject();\n        obj.key = await this.getKeyForEncryption(key);\n        obj.iv = await this.cryptoFunctionService.randomBytes(16);\n        obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n        if (obj.key.macKey != null) {\n            const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n            macData.set(new Uint8Array(obj.iv), 0);\n            macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n            obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, 'sha256');\n        }\n\n        return obj;\n    }\n\n    private async aesDecryptToUtf8(encType: EncryptionType, data: string, iv: string, mac: string,\n        key: SymmetricCryptoKey): Promise<string> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            this.logService.error('mac required.');\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            this.logService.error('encType unavailable.');\n            return null;\n        }\n\n        const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n        if (fastParams.macKey != null && fastParams.mac != null) {\n            const computedMac = await this.cryptoFunctionService.hmacFast(fastParams.macData,\n                fastParams.macKey, 'sha256');\n            const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n            if (!macsEqual) {\n                this.logService.error('mac failed.');\n                return null;\n            }\n        }\n\n        return this.cryptoFunctionService.aesDecryptFast(fastParams);\n    }\n\n    private async aesDecryptToBytes(encType: EncryptionType, data: ArrayBuffer, iv: ArrayBuffer,\n        mac: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            return null;\n        }\n\n        if (theKey.macKey != null && mac != null) {\n            const macData = new Uint8Array(iv.byteLength + data.byteLength);\n            macData.set(new Uint8Array(iv), 0);\n            macData.set(new Uint8Array(data), iv.byteLength);\n            const computedMac = await this.cryptoFunctionService.hmac(macData.buffer, theKey.macKey, 'sha256');\n            if (computedMac === null) {\n                return null;\n            }\n\n            const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n            if (!macsMatch) {\n                this.logService.error('mac failed.');\n                return null;\n            }\n        }\n\n        return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n    }\n\n    private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        if (key != null) {\n            return key;\n        }\n\n        const encKey = await this.getEncKey();\n        if (encKey != null) {\n            return encKey;\n        }\n\n        return await this.getKey();\n    }\n\n    private resolveLegacyKey(encType: EncryptionType, key: SymmetricCryptoKey): SymmetricCryptoKey {\n        if (encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n            key.encType === EncryptionType.AesCbc256_B64) {\n            // Old encrypt-then-mac scheme, make a new key\n            if (this.legacyEtmKey == null) {\n                this.legacyEtmKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n            }\n            return this.legacyEtmKey;\n        }\n\n        return key;\n    }\n\n    private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        const newKey = new Uint8Array(64);\n        const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, 'enc', 32, 'sha256');\n        const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, 'mac', 32, 'sha256');\n        newKey.set(new Uint8Array(encKey));\n        newKey.set(new Uint8Array(macKey), 32);\n        return new SymmetricCryptoKey(newKey.buffer);\n    }\n\n    private async hashPhrase(hash: ArrayBuffer, minimumEntropy: number = 64) {\n        const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n        let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n        const hashArr = Array.from(new Uint8Array(hash));\n        const entropyAvailable = hashArr.length * 4;\n        if (numWords * entropyPerWord > entropyAvailable) {\n            throw new Error('Output entropy of hash function is too small');\n        }\n\n        const phrase: string[] = [];\n        let hashNumber = bigInt.fromArray(hashArr, 256);\n        while (numWords--) {\n            const remainder = hashNumber.mod(EEFLongWordList.length);\n            hashNumber = hashNumber.divide(EEFLongWordList.length);\n            phrase.push(EEFLongWordList[remainder as any]);\n        }\n        return phrase;\n    }\n\n    private async buildEncKey(key: SymmetricCryptoKey, encKey: ArrayBuffer)\n        : Promise<[SymmetricCryptoKey, EncString]> {\n        let encKeyEnc: EncString = null;\n        if (key.key.byteLength === 32) {\n            const newKey = await this.stretchKey(key);\n            encKeyEnc = await this.encrypt(encKey, newKey);\n        } else if (key.key.byteLength === 64) {\n            encKeyEnc = await this.encrypt(encKey, key);\n        } else {\n            throw new Error('Invalid key size.');\n        }\n        return [new SymmetricCryptoKey(encKey), encKeyEnc];\n    }\n}\n","export class EncArrayBuffer {\n    constructor(public buffer: ArrayBuffer) { }\n}\n","import { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncryptedObject {\n    iv: ArrayBuffer;\n    data: ArrayBuffer;\n    mac: ArrayBuffer;\n    key: SymmetricCryptoKey;\n}\n","import { Observable, Subject } from 'rxjs';\n\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { ConstantsService } from './constants.service';\n\nimport { EnvironmentService as EnvironmentServiceAbstraction, Urls } from '../abstractions/environment.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n\n    private readonly urlsSubject = new Subject<Urls>();\n    urls: Observable<Urls> = this.urlsSubject; // tslint:disable-line\n\n    private baseUrl: string;\n    private webVaultUrl: string;\n    private apiUrl: string;\n    private identityUrl: string;\n    private iconsUrl: string;\n    private notificationsUrl: string;\n    private eventsUrl: string;\n    private keyConnectorUrl: string;\n\n    constructor(private storageService: StorageService) {}\n\n    hasBaseUrl() {\n        return this.baseUrl != null;\n    }\n\n    getNotificationsUrl() {\n        if (this.notificationsUrl != null) {\n            return this.notificationsUrl;\n        }\n\n        if (this.baseUrl != null) {\n            return this.baseUrl + '/notifications';\n        }\n\n        return 'https://notifications.bitwarden.com';\n    }\n\n    getWebVaultUrl() {\n        if (this.webVaultUrl != null) {\n            return this.webVaultUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl;\n        }\n        return 'https://vault.bitwarden.com';\n    }\n\n    getSendUrl() {\n        return this.getWebVaultUrl() === 'https://vault.bitwarden.com'\n            ? 'https://send.bitwarden.com/#'\n            : this.getWebVaultUrl() + '/#/send/';\n    }\n\n    getIconsUrl() {\n        if (this.iconsUrl != null) {\n            return this.iconsUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/icons';\n        }\n\n        return 'https://icons.bitwarden.net';\n    }\n\n    getApiUrl() {\n        if (this.apiUrl != null) {\n            return this.apiUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/api';\n        }\n\n        return 'https://api.bitwarden.com';\n    }\n\n    getIdentityUrl() {\n        if (this.identityUrl != null) {\n            return this.identityUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/identity';\n        }\n\n        return 'https://identity.bitwarden.com';\n    }\n\n    getEventsUrl() {\n        if (this.eventsUrl != null) {\n            return this.eventsUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/events';\n        }\n\n        return 'https://events.bitwarden.com';\n    }\n\n    getKeyConnectorUrl() {\n        return this.keyConnectorUrl;\n    }\n\n    async setUrlsFromStorage(): Promise<void> {\n        const urlsObj: any = await this.storageService.get(ConstantsService.environmentUrlsKey);\n        const urls = urlsObj || {\n            base: null,\n            api: null,\n            identity: null,\n            icons: null,\n            notifications: null,\n            events: null,\n            webVault: null,\n            keyConnector: null,\n        };\n\n        const envUrls = new EnvironmentUrls();\n\n        if (urls.base) {\n            this.baseUrl = envUrls.base = urls.base;\n            return;\n        }\n\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = envUrls.api = urls.api;\n        this.identityUrl = envUrls.identity = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = envUrls.events = urls.events;\n        this.keyConnectorUrl = urls.keyConnector;\n    }\n\n    async setUrls(urls: Urls, saveSettings: boolean = true): Promise<any> {\n        urls.base = this.formatUrl(urls.base);\n        urls.webVault = this.formatUrl(urls.webVault);\n        urls.api = this.formatUrl(urls.api);\n        urls.identity = this.formatUrl(urls.identity);\n        urls.icons = this.formatUrl(urls.icons);\n        urls.notifications = this.formatUrl(urls.notifications);\n        urls.events = this.formatUrl(urls.events);\n        urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n        if (saveSettings) {\n            await this.storageService.save(ConstantsService.environmentUrlsKey, {\n                base: urls.base,\n                api: urls.api,\n                identity: urls.identity,\n                webVault: urls.webVault,\n                icons: urls.icons,\n                notifications: urls.notifications,\n                events: urls.events,\n                keyConnector: urls.keyConnector,\n            });\n        }\n\n        this.baseUrl = urls.base;\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = urls.api;\n        this.identityUrl = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = urls.events;\n        this.keyConnectorUrl = urls.keyConnector;\n\n        this.urlsSubject.next(urls);\n\n        return urls;\n    }\n\n    getUrls() {\n        return {\n            base: this.baseUrl,\n            webVault: this.webVaultUrl,\n            api: this.apiUrl,\n            identity: this.identityUrl,\n            icons: this.iconsUrl,\n            notifications: this.notificationsUrl,\n            events: this.eventsUrl,\n            keyConnector: this.keyConnectorUrl,\n        };\n    }\n\n    private formatUrl(url: string): string {\n        if (url == null || url === '') {\n            return null;\n        }\n\n        url = url.replace(/\\/+$/g, '');\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            url = 'https://' + url;\n        }\n\n        return url.trim();\n    }\n}\n","export class EnvironmentUrls {\n    base: string;\n    api: string;\n    identity: string;\n    events: string;\n}\n","import { EventType } from '../enums/eventType';\n\nimport { EventData } from '../models/data/eventData';\n\nimport { EventRequest } from '../models/request/eventRequest';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { EventService as EventServiceAbstraction } from '../abstractions/event.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { LogService } from '../abstractions/log.service';\nimport { ConstantsService } from './constants.service';\n\nexport class EventService implements EventServiceAbstraction {\n    private inited = false;\n\n    constructor(private storageService: StorageService, private apiService: ApiService,\n        private userService: UserService, private cipherService: CipherService,\n        private logService: LogService) { }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.uploadEvents();\n            setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n        }\n    }\n\n    async collect(eventType: EventType, cipherId: string = null, uploadImmediately = false): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const organizations = await this.userService.getAllOrganizations();\n        if (organizations == null) {\n            return;\n        }\n        const orgIds = new Set<string>(organizations.filter(o => o.useEvents).map(o => o.id));\n        if (orgIds.size === 0) {\n            return;\n        }\n        if (cipherId != null) {\n            const cipher = await this.cipherService.get(cipherId);\n            if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n                return;\n            }\n        }\n        let eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null) {\n            eventCollection = [];\n        }\n        const event = new EventData();\n        event.type = eventType;\n        event.cipherId = cipherId;\n        event.date = new Date().toISOString();\n        eventCollection.push(event);\n        await this.storageService.save(ConstantsService.eventCollectionKey, eventCollection);\n        if (uploadImmediately) {\n            await this.uploadEvents();\n        }\n    }\n\n    async uploadEvents(): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null || eventCollection.length === 0) {\n            return;\n        }\n        const request = eventCollection.map(e => {\n            const req = new EventRequest();\n            req.type = e.type;\n            req.cipherId = e.cipherId;\n            req.date = e.date;\n            return req;\n        });\n        try {\n            await this.apiService.postEventsCollect(request);\n            this.clearEvents();\n        } catch (e) {\n            this.logService.error(e);\n        }\n    }\n\n    async clearEvents(): Promise<any> {\n        await this.storageService.remove(ConstantsService.eventCollectionKey);\n    }\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventData {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventRequest {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import * as papa from 'papaparse';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { ExportService as ExportServiceAbstraction } from '../abstractions/export.service';\nimport { FolderService } from '../abstractions/folder.service';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Collection } from '../models/domain/collection';\nimport { Folder } from '../models/domain/folder';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\n\nimport { CipherWithIds as CipherExport } from '../models/export/cipherWithIds';\nimport { CollectionWithId as CollectionExport } from '../models/export/collectionWithId';\nimport { Event } from '../models/export/event';\nimport { FolderWithId as FolderExport } from '../models/export/folderWithId';\nimport { EventView } from '../models/view/eventView';\n\nimport { Utils } from '../misc/utils';\n\nexport class ExportService implements ExportServiceAbstraction {\n    constructor(private folderService: FolderService, private cipherService: CipherService,\n        private apiService: ApiService, private cryptoService: CryptoService) { }\n\n    async getExport(format: 'csv' | 'json' | 'encrypted_json' = 'csv'): Promise<string> {\n        if (format === 'encrypted_json') {\n            return this.getEncryptedExport();\n        } else {\n            return this.getDecryptedExport(format);\n        }\n    }\n\n    async getOrganizationExport(organizationId: string,\n        format: 'csv' | 'json' | 'encrypted_json' = 'csv'): Promise<string> {\n        if (format === 'encrypted_json') {\n            return this.getOrganizationEncryptedExport(organizationId);\n        } else {\n            return this.getOrganizationDecryptedExport(organizationId, format);\n        }\n    }\n\n    async getEventExport(events: EventView[]): Promise<string> {\n        return papa.unparse(events.map(e => new Event(e)));\n    }\n\n    getFileName(prefix: string = null, extension: string = 'csv'): string {\n        const now = new Date();\n        const dateString =\n            now.getFullYear() + '' + this.padNumber(now.getMonth() + 1, 2) + '' + this.padNumber(now.getDate(), 2) +\n            this.padNumber(now.getHours(), 2) + '' + this.padNumber(now.getMinutes(), 2) +\n            this.padNumber(now.getSeconds(), 2);\n\n        return 'bitwarden' + (prefix ? ('_' + prefix) : '') + '_export_' + dateString + '.' + extension;\n    }\n\n    private async getDecryptedExport(format: 'json' | 'csv'): Promise<string> {\n        let decFolders: FolderView[] = [];\n        let decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAllDecrypted().then(folders => {\n            decFolders = folders;\n        }));\n\n        promises.push(this.cipherService.getAllDecrypted().then(ciphers => {\n            decCiphers = ciphers.filter(f => f.deletedDate == null);\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const foldersMap = new Map<string, FolderView>();\n            decFolders.forEach(f => {\n                if (f.id != null) {\n                    foldersMap.set(f.id, f);\n                }\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach(c => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n                if (c.organizationId != null) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.folder = c.folderId != null && foldersMap.has(c.folderId) ?\n                    foldersMap.get(c.folderId).name : null;\n                cipher.favorite = c.favorite ? 1 : null;\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                encrypted: false,\n                folders: [],\n                items: [],\n            };\n\n            decFolders.forEach(f => {\n                if (f.id == null) {\n                    return;\n                }\n                const folder = new FolderExport();\n                folder.build(f);\n                jsonDoc.folders.push(folder);\n            });\n\n            decCiphers.forEach(c => {\n                if (c.organizationId != null) {\n                    return;\n                }\n                const cipher = new CipherExport();\n                cipher.build(c);\n                cipher.collectionIds = null;\n                jsonDoc.items.push(cipher);\n            });\n\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    private async getEncryptedExport(): Promise<string> {\n        let folders: Folder[] = [];\n        let ciphers: Cipher[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAll().then(f => {\n            folders = f;\n        }));\n\n        promises.push(this.cipherService.getAll().then(c => {\n            ciphers = c.filter(f => f.deletedDate == null);\n        }));\n\n        await Promise.all(promises);\n\n        const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n        const jsonDoc: any = {\n            encrypted: true,\n            encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n            folders: [],\n            items: [],\n        };\n\n        folders.forEach(f => {\n            if (f.id == null) {\n                return;\n            }\n            const folder = new FolderExport();\n            folder.build(f);\n            jsonDoc.folders.push(folder);\n        });\n\n        ciphers.forEach(c => {\n            if (c.organizationId != null) {\n                return;\n            }\n            const cipher = new CipherExport();\n            cipher.build(c);\n            cipher.collectionIds = null;\n            jsonDoc.items.push(cipher);\n        });\n\n        return JSON.stringify(jsonDoc, null, '  ');\n    }\n\n    private async getOrganizationDecryptedExport(organizationId: string, format: 'json' | 'csv'): Promise<string> {\n        const decCollections: CollectionView[] = [];\n        const decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then(collections => {\n            const collectionPromises: any = [];\n            if (collections != null && collections.data != null && collections.data.length > 0) {\n                collections.data.forEach(c => {\n                    const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n                    collectionPromises.push(collection.decrypt().then(decCol => {\n                        decCollections.push(decCol);\n                    }));\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then(ciphers => {\n            const cipherPromises: any = [];\n            if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n                ciphers.data.filter(c => c.deletedDate === null).forEach(c => {\n                    const cipher = new Cipher(new CipherData(c));\n                    cipherPromises.push(cipher.decrypt().then(decCipher => {\n                        decCiphers.push(decCipher);\n                    }));\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const collectionsMap = new Map<string, CollectionView>();\n            decCollections.forEach(c => {\n                collectionsMap.set(c.id, c);\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach(c => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.collections = [];\n                if (c.collectionIds != null) {\n                    cipher.collections = c.collectionIds.filter(id => collectionsMap.has(id))\n                        .map(id => collectionsMap.get(id).name);\n                }\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                encrypted: false,\n                collections: [],\n                items: [],\n            };\n\n            decCollections.forEach(c => {\n                const collection = new CollectionExport();\n                collection.build(c);\n                jsonDoc.collections.push(collection);\n            });\n\n            decCiphers.forEach(c => {\n                const cipher = new CipherExport();\n                cipher.build(c);\n                jsonDoc.items.push(cipher);\n            });\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n        const collections: Collection[] = [];\n        const ciphers: Cipher[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then(c => {\n            const collectionPromises: any = [];\n            if (c != null && c.data != null && c.data.length > 0) {\n                c.data.forEach(r => {\n                    const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n                    collections.push(collection);\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then(c => {\n            const cipherPromises: any = [];\n            if (c != null && c.data != null && c.data.length > 0) {\n                c.data.filter(item => item.deletedDate === null).forEach(item => {\n                    const cipher = new Cipher(new CipherData(item));\n                    ciphers.push(cipher);\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        const orgKey = await this.cryptoService.getOrgKey(organizationId);\n        const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n        const jsonDoc: any = {\n            encrypted: true,\n            encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n            collections: [],\n            items: [],\n        };\n\n        collections.forEach(c => {\n            const collection = new CollectionExport();\n            collection.build(c);\n            jsonDoc.collections.push(collection);\n        });\n\n        ciphers.forEach(c => {\n            const cipher = new CipherExport();\n            cipher.build(c);\n            jsonDoc.items.push(cipher);\n        });\n        return JSON.stringify(jsonDoc, null, '  ');\n    }\n\n    private padNumber(num: number, width: number, padCharacter: string = '0'): string {\n        const numString = num.toString();\n        return numString.length >= width ? numString :\n            new Array(width - numString.length + 1).join(padCharacter) + numString;\n    }\n\n    private buildCommonCipher(cipher: any, c: CipherView) {\n        cipher.type = null;\n        cipher.name = c.name;\n        cipher.notes = c.notes;\n        cipher.fields = null;\n        cipher.reprompt = c.reprompt;\n        // Login props\n        cipher.login_uri = null;\n        cipher.login_username = null;\n        cipher.login_password = null;\n        cipher.login_totp = null;\n\n        if (c.fields) {\n            c.fields.forEach((f: any) => {\n                if (!cipher.fields) {\n                    cipher.fields = '';\n                } else {\n                    cipher.fields += '\\n';\n                }\n\n                cipher.fields += ((f.name || '') + ': ' + f.value);\n            });\n        }\n\n        switch (c.type) {\n            case CipherType.Login:\n                cipher.type = 'login';\n                cipher.login_username = c.login.username;\n                cipher.login_password = c.login.password;\n                cipher.login_totp = c.login.totp;\n\n                if (c.login.uris) {\n                    cipher.login_uri = [];\n                    c.login.uris.forEach(u => {\n                        cipher.login_uri.push(u.uri);\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                cipher.type = 'note';\n                break;\n            default:\n                return;\n        }\n\n        return cipher;\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Cipher as CipherDomain } from '../domain/cipher';\nimport { EncString } from '../domain/encString';\n\nimport { Card } from './card';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { SecureNote } from './secureNote';\n\nexport class Cipher {\n    static template(): Cipher {\n        const req = new Cipher();\n        req.organizationId = null;\n        req.collectionIds = null;\n        req.folderId = null;\n        req.type = CipherType.Login;\n        req.name = 'Item name';\n        req.notes = 'Some notes about this item.';\n        req.favorite = false;\n        req.fields = [];\n        req.login = null;\n        req.secureNote = null;\n        req.card = null;\n        req.identity = null;\n        req.reprompt = CipherRepromptType.None;\n        return req;\n    }\n\n    static toView(req: Cipher, view = new CipherView()) {\n        view.type = req.type;\n        view.folderId = req.folderId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        if (view.collectionIds || req.collectionIds) {\n            const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n            view.collectionIds = Array.from(set.values());\n        }\n        view.name = req.name;\n        view.notes = req.notes;\n        view.favorite = req.favorite;\n        view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n        if (req.fields != null) {\n            view.fields = req.fields.map(f => Field.toView(f));\n        }\n\n        switch (req.type) {\n            case CipherType.Login:\n                view.login = Login.toView(req.login);\n                break;\n            case CipherType.SecureNote:\n                view.secureNote = SecureNote.toView(req.secureNote);\n                break;\n            case CipherType.Card:\n                view.card = Card.toView(req.card);\n                break;\n            case CipherType.Identity:\n                view.identity = Identity.toView(req.identity);\n                break;\n        }\n\n        return view;\n    }\n\n    static toDomain(req: Cipher, domain = new CipherDomain()) {\n        domain.type = req.type;\n        domain.folderId = req.folderId;\n        if (domain.organizationId == null) {\n            domain.organizationId = req.organizationId;\n        }\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        domain.notes = req.notes != null ? new EncString(req.notes) : null;\n        domain.favorite = req.favorite;\n        domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n        if (req.fields != null) {\n            domain.fields = req.fields.map(f => Field.toDomain(f));\n        }\n\n        switch (req.type) {\n            case CipherType.Login:\n                domain.login = Login.toDomain(req.login);\n                break;\n            case CipherType.SecureNote:\n                domain.secureNote = SecureNote.toDomain(req.secureNote);\n                break;\n            case CipherType.Card:\n                domain.card = Card.toDomain(req.card);\n                break;\n            case CipherType.Identity:\n                domain.identity = Identity.toDomain(req.identity);\n                break;\n        }\n\n        return domain;\n    }\n\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    collectionIds: string[];\n    name: string;\n    notes: string;\n    favorite: boolean;\n    fields: Field[];\n    login: Login;\n    secureNote: SecureNote;\n    card: Card;\n    identity: Identity;\n    reprompt: CipherRepromptType;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView | CipherDomain) {\n        this.organizationId = o.organizationId;\n        this.folderId = o.folderId;\n        this.type = o.type;\n        this.reprompt = o.reprompt;\n\n        if (o instanceof CipherView) {\n            this.name = o.name;\n            this.notes = o.notes;\n        } else {\n            this.name = o.name?.encryptedString;\n            this.notes = o.notes?.encryptedString;\n        }\n\n        this.favorite = o.favorite;\n\n        if (o.fields != null) {\n            if (o instanceof CipherView) {\n                this.fields = o.fields.map(f => new Field(f));\n            } else {\n                this.fields = o.fields.map(f => new Field(f));\n            }\n        }\n\n        switch (o.type) {\n            case CipherType.Login:\n                this.login = new Login(o.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(o.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new Card(o.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(o.identity);\n                break;\n        }\n    }\n}\n","import { CardView } from '../view/cardView';\n\nimport { Card as CardDomain } from '../domain/card';\nimport { EncString } from '../domain/encString';\n\nexport class Card {\n    static template(): Card {\n        const req = new Card();\n        req.cardholderName = 'John Doe';\n        req.brand = 'visa';\n        req.number = '4242424242424242';\n        req.expMonth = '04';\n        req.expYear = '2023';\n        req.code = '123';\n        return req;\n    }\n\n    static toView(req: Card, view = new CardView()) {\n        view.cardholderName = req.cardholderName;\n        view.brand = req.brand;\n        view.number = req.number;\n        view.expMonth = req.expMonth;\n        view.expYear = req.expYear;\n        view.code = req.code;\n        return view;\n    }\n\n    static toDomain(req: Card, domain = new CardDomain()) {\n        domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n        domain.brand = req.brand != null ? new EncString(req.brand) : null;\n        domain.number = req.number != null ? new EncString(req.number) : null;\n        domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n        domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n        domain.code = req.code != null ? new EncString(req.code) : null;\n        return domain;\n    }\n\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(o?: CardView | CardDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof CardView) {\n            this.cardholderName = o.cardholderName;\n            this.brand = o.brand;\n            this.number = o.number;\n            this.expMonth = o.expMonth;\n            this.expYear = o.expYear;\n            this.code = o.code;\n        } else {\n            this.cardholderName = o.cardholderName?.encryptedString;\n            this.brand = o.brand?.encryptedString;\n            this.number = o.number?.encryptedString;\n            this.expMonth = o.expMonth?.encryptedString;\n            this.expYear = o.expYear?.encryptedString;\n            this.code = o.code?.encryptedString;\n        }\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\nimport { LinkedIdType } from '../../enums/linkedIdType';\n\nimport { FieldView } from '../view/fieldView';\n\nimport { EncString } from '../domain/encString';\nimport { Field as FieldDomain } from '../domain/field';\n\nexport class Field {\n    static template(): Field {\n        const req = new Field();\n        req.name = 'Field name';\n        req.value = 'Some value';\n        req.type = FieldType.Text;\n        return req;\n    }\n\n    static toView(req: Field, view = new FieldView()) {\n        view.type = req.type;\n        view.value = req.value;\n        view.name = req.name;\n        view.linkedId = req.linkedId;\n        return view;\n    }\n\n    static toDomain(req: Field, domain = new FieldDomain()) {\n        domain.type = req.type;\n        domain.value = req.value != null ? new EncString(req.value) : null;\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        domain.linkedId = req.linkedId;\n        return domain;\n    }\n\n    name: string;\n    value: string;\n    type: FieldType;\n    linkedId: LinkedIdType;\n\n    constructor(o?: FieldView | FieldDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof FieldView) {\n            this.name = o.name;\n            this.value = o.value;\n        } else {\n            this.name = o.name?.encryptedString;\n            this.value = o.value?.encryptedString;\n        }\n        this.type = o.type;\n        this.linkedId = o.linkedId;\n    }\n}\n","import { IdentityView } from '../view/identityView';\n\nimport { EncString } from '../domain/encString';\nimport { Identity as IdentityDomain } from '../domain/identity';\n\nexport class Identity {\n    static template(): Identity {\n        const req = new Identity();\n        req.title = 'Mr';\n        req.firstName = 'John';\n        req.middleName = 'William';\n        req.lastName = 'Doe';\n        req.address1 = '123 Any St';\n        req.address2 = 'Apt #123';\n        req.address3 = null;\n        req.city = 'New York';\n        req.state = 'NY';\n        req.postalCode = '10001';\n        req.country = 'US';\n        req.company = 'Acme Inc.';\n        req.email = 'john@company.com';\n        req.phone = '5555551234';\n        req.ssn = '000-123-4567';\n        req.username = 'jdoe';\n        req.passportNumber = 'US-123456789';\n        req.licenseNumber = 'D123-12-123-12333';\n        return req;\n    }\n\n    static toView(req: Identity, view = new IdentityView()) {\n        view.title = req.title;\n        view.firstName = req.firstName;\n        view.middleName = req.middleName;\n        view.lastName = req.lastName;\n        view.address1 = req.address1;\n        view.address2 = req.address2;\n        view.address3 = req.address3;\n        view.city = req.city;\n        view.state = req.state;\n        view.postalCode = req.postalCode;\n        view.country = req.country;\n        view.company = req.company;\n        view.email = req.email;\n        view.phone = req.phone;\n        view.ssn = req.ssn;\n        view.username = req.username;\n        view.passportNumber = req.passportNumber;\n        view.licenseNumber = req.licenseNumber;\n        return view;\n    }\n\n    static toDomain(req: Identity, domain = new IdentityDomain()) {\n        domain.title = req.title != null ? new EncString(req.title) : null;\n        domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n        domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n        domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n        domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n        domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n        domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n        domain.city = req.city != null ? new EncString(req.city) : null;\n        domain.state = req.state != null ? new EncString(req.state) : null;\n        domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n        domain.country = req.country != null ? new EncString(req.country) : null;\n        domain.company = req.company != null ? new EncString(req.company) : null;\n        domain.email = req.email != null ? new EncString(req.email) : null;\n        domain.phone = req.phone != null ? new EncString(req.phone) : null;\n        domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n        domain.username = req.username != null ? new EncString(req.username) : null;\n        domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n        domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n        return domain;\n    }\n\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(o?: IdentityView | IdentityDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof IdentityView) {\n            this.title = o.title;\n            this.firstName = o.firstName;\n            this.middleName = o.middleName;\n            this.lastName = o.lastName;\n            this.address1 = o.address1;\n            this.address2 = o.address2;\n            this.address3 = o.address3;\n            this.city = o.city;\n            this.state = o.state;\n            this.postalCode = o.postalCode;\n            this.country = o.country;\n            this.company = o.company;\n            this.email = o.email;\n            this.phone = o.phone;\n            this.ssn = o.ssn;\n            this.username = o.username;\n            this.passportNumber = o.passportNumber;\n            this.licenseNumber = o.licenseNumber;\n        } else {\n            this.title = o.title?.encryptedString;\n            this.firstName = o.firstName?.encryptedString;\n            this.middleName = o.middleName?.encryptedString;\n            this.lastName = o.lastName?.encryptedString;\n            this.address1 = o.address1?.encryptedString;\n            this.address2 = o.address2?.encryptedString;\n            this.address3 = o.address3?.encryptedString;\n            this.city = o.city?.encryptedString;\n            this.state = o.state?.encryptedString;\n            this.postalCode = o.postalCode?.encryptedString;\n            this.country = o.country?.encryptedString;\n            this.company = o.company?.encryptedString;\n            this.email = o.email?.encryptedString;\n            this.phone = o.phone?.encryptedString;\n            this.ssn = o.ssn?.encryptedString;\n            this.username = o.username?.encryptedString;\n            this.passportNumber = o.passportNumber?.encryptedString;\n            this.licenseNumber = o.licenseNumber?.encryptedString;\n        }\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginView } from '../view/loginView';\n\nimport { EncString } from '../domain/encString';\nimport { Login as LoginDomain } from '../domain/login';\n\nexport class Login {\n    static template(): Login {\n        const req = new Login();\n        req.uris = [];\n        req.username = 'jdoe';\n        req.password = 'myp@ssword123';\n        req.totp = 'JBSWY3DPEHPK3PXP';\n        return req;\n    }\n\n    static toView(req: Login, view = new LoginView()) {\n        if (req.uris != null) {\n            view.uris = req.uris.map(u => LoginUri.toView(u));\n        }\n        view.username = req.username;\n        view.password = req.password;\n        view.totp = req.totp;\n        return view;\n    }\n\n    static toDomain(req: Login, domain = new LoginDomain()) {\n        if (req.uris != null) {\n            domain.uris = req.uris.map(u => LoginUri.toDomain(u));\n        }\n        domain.username = req.username != null ? new EncString(req.username) : null;\n        domain.password = req.password != null ? new EncString(req.password) : null;\n        domain.totp = req.totp != null ? new EncString(req.totp) : null;\n        return domain;\n    }\n\n    uris: LoginUri[];\n    username: string;\n    password: string;\n    totp: string;\n\n    constructor(o?: LoginView | LoginDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o.uris != null) {\n            if (o instanceof LoginView) {\n                this.uris = o.uris.map(u => new LoginUri(u));\n            } else {\n                this.uris = o.uris.map(u => new LoginUri(u));\n            }\n        }\n\n        if (o instanceof LoginView) {\n            this.username = o.username;\n            this.password = o.password;\n            this.totp = o.totp;\n        } else {\n            this.username = o.username?.encryptedString;\n            this.password = o.password?.encryptedString;\n            this.totp = o.totp?.encryptedString;\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport { EncString } from '../domain/encString';\nimport { LoginUri as LoginUriDomain } from '../domain/loginUri';\n\nexport class LoginUri {\n    static template(): LoginUri {\n        const req = new LoginUri();\n        req.uri = 'https://google.com';\n        req.match = null;\n        return req;\n    }\n\n    static toView(req: LoginUri, view = new LoginUriView()) {\n        view.uri = req.uri;\n        view.match = req.match;\n        return view;\n    }\n\n    static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n        domain.uri = req.uri != null ? new EncString(req.uri) : null;\n        domain.match = req.match;\n        return domain;\n    }\n\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(o?: LoginUriView | LoginUriDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof LoginUriView) {\n            this.uri = o.uri;\n        } else {\n            this.uri = o.uri?.encryptedString;\n        }\n        this.match = o.match;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteView } from '../view/secureNoteView';\n\nimport { SecureNote as SecureNoteDomain } from '../domain/secureNote';\n\nexport class SecureNote {\n    static template(): SecureNote {\n        const req = new SecureNote();\n        req.type = SecureNoteType.Generic;\n        return req;\n    }\n\n    static toView(req: SecureNote, view = new SecureNoteView()) {\n        view.type = req.type;\n        return view;\n    }\n\n    static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n        view.type = req.type;\n        return view;\n    }\n\n    type: SecureNoteType;\n\n    constructor(o?: SecureNoteView | SecureNoteDomain) {\n        if (o == null) {\n            return;\n        }\n\n        this.type = o.type;\n    }\n}\n","import { CollectionView } from '../view/collectionView';\n\nimport { Collection as CollectionDomain } from '../domain/collection';\nimport { EncString } from '../domain/encString';\n\nexport class Collection {\n    static template(): Collection {\n        const req = new Collection();\n        req.organizationId = '00000000-0000-0000-0000-000000000000';\n        req.name = 'Collection name';\n        req.externalId = null;\n        return req;\n    }\n\n    static toView(req: Collection, view = new CollectionView()) {\n        view.name = req.name;\n        view.externalId = req.externalId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        return view;\n    }\n\n    static toDomain(req: Collection, domain = new CollectionDomain()) {\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        domain.externalId = req.externalId;\n        if (domain.organizationId == null) {\n            domain.organizationId = req.organizationId;\n        }\n        return domain;\n    }\n\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView | CollectionDomain) {\n        this.organizationId = o.organizationId;\n        if (o instanceof CollectionView) {\n            this.name = o.name;\n        } else {\n            this.name = o.name?.encryptedString;\n        }\n        this.externalId = o.externalId;\n    }\n}\n","import { EventType } from '../../enums/eventType';\nimport { EventView } from '../view/eventView';\n\nexport class Event {\n    message: string;\n    appIcon: string;\n    appName: string;\n    userId: string;\n    userName: string;\n    userEmail: string;\n    date: string;\n    ip: string;\n    type: string;\n\n    constructor(event: EventView) {\n        this.message = event.humanReadableMessage;\n        this.appIcon = event.appIcon;\n        this.appName = event.appName;\n        this.userId = event.userId;\n        this.userName = event.userName;\n        this.userEmail = event.userEmail;\n        this.date = event.date;\n        this.ip = event.ip;\n        this.type = EventType[event.type];\n    }\n}\n","import { FolderView } from '../view/folderView';\n\nimport { EncString } from '../domain/encString';\nimport { Folder as FolderDomain } from '../domain/folder';\n\nexport class Folder {\n    static template(): Folder {\n        const req = new Folder();\n        req.name = 'Folder name';\n        return req;\n    }\n\n    static toView(req: Folder, view = new FolderView()) {\n        view.name = req.name;\n        return view;\n    }\n\n    static toDomain(req: Folder, domain = new FolderDomain()) {\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        return domain;\n    }\n\n    name: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView | FolderDomain) {\n        if (o instanceof FolderView) {\n            this.name = o.name;\n        } else {\n            this.name = o.name?.encryptedString;\n        }\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { FileUploadService as FileUploadServiceAbstraction } from '../abstractions/fileUpload.service';\nimport { LogService } from '../abstractions/log.service';\n\nimport { FileUploadType } from '../enums/fileUploadType';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\n\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\n\nimport { AzureFileUploadService } from './azureFileUpload.service';\nimport { BitwardenFileUploadService } from './bitwardenFileUpload.service';\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n    private azureFileUploadService: AzureFileUploadService;\n    private bitwardenFileUploadService: BitwardenFileUploadService;\n\n    constructor(private logService: LogService, private apiService: ApiService) {\n        this.azureFileUploadService = new AzureFileUploadService(logService);\n        this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n    }\n\n    async uploadSendFile(uploadData: SendFileUploadDataResponse, fileName: EncString, encryptedFileData: EncArrayBuffer) {\n        try {\n            switch (uploadData.fileUploadType) {\n                case FileUploadType.Direct:\n                    await this.bitwardenFileUploadService.upload(fileName.encryptedString, encryptedFileData,\n                        fd => this.apiService.postSendFile(uploadData.sendResponse.id, uploadData.sendResponse.file.id, fd));\n                    break;\n                case FileUploadType.Azure:\n                    const renewalCallback = async () => {\n                        const renewalResponse = await this.apiService.renewSendFileUploadUrl(uploadData.sendResponse.id,\n                            uploadData.sendResponse.file.id);\n                        return renewalResponse.url;\n                    };\n                    await this.azureFileUploadService.upload(uploadData.url, encryptedFileData,\n                        renewalCallback);\n                    break;\n                default:\n                    throw new Error('Unknown file upload type');\n            }\n        } catch (e) {\n            await this.apiService.deleteSend(uploadData.sendResponse.id);\n            throw e;\n        }\n    }\n\n    async uploadCipherAttachment(admin: boolean, uploadData: AttachmentUploadDataResponse, encryptedFileName: EncString,\n        encryptedFileData: EncArrayBuffer) {\n        const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n        try {\n            switch (uploadData.fileUploadType) {\n                case FileUploadType.Direct:\n                    await this.bitwardenFileUploadService.upload(encryptedFileName.encryptedString, encryptedFileData,\n                        fd => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd));\n                    break;\n                case FileUploadType.Azure:\n                    const renewalCallback = async () => {\n                        const renewalResponse = await this.apiService.renewAttachmentUploadUrl(response.id,\n                            uploadData.attachmentId);\n                        return renewalResponse.url;\n                    };\n                    await this.azureFileUploadService.upload(uploadData.url, encryptedFileData, renewalCallback);\n                    break;\n                default:\n                    throw new Error('Unknown file upload type.');\n            }\n        } catch (e) {\n            if (admin) {\n                await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n            } else {\n                await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n            }\n            throw e;\n        }\n    }\n}\n","export enum FileUploadType {\n    Direct = 0,\n    Azure = 1,\n}\n","import { LogService } from '../abstractions/log.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n    constructor(private logService: LogService) { }\n\n    async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n        if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n            return await this.azureUploadBlob(url, data);\n        } else {\n            return await this.azureUploadBlocks(url, data, renewalCallback);\n        }\n    }\n    private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n        const urlObject = Utils.getUrl(url);\n        const headers = new Headers({\n            'x-ms-date': new Date().toUTCString(),\n            'x-ms-version': urlObject.searchParams.get('sv'),\n            'Content-Length': data.buffer.byteLength.toString(),\n            'x-ms-blob-type': 'BlockBlob',\n        });\n\n        const request = new Request(url, {\n            body: data.buffer,\n            cache: 'no-store',\n            method: 'PUT',\n            headers: headers,\n        });\n\n        const blobResponse = await fetch(request);\n\n        if (blobResponse.status !== 201) {\n            throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n        }\n    }\n    private async azureUploadBlocks(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n        const baseUrl = Utils.getUrl(url);\n        const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get('sv'));\n        let blockIndex = 0;\n        const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n        const blocksStaged: string[] = [];\n\n        if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n            throw new Error(`Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`);\n        }\n\n        try {\n            while (blockIndex < numBlocks) {\n                url = await this.renewUrlIfNecessary(url, renewalCallback);\n                const blockUrl = Utils.getUrl(url);\n                const blockId = this.encodedBlockId(blockIndex);\n                blockUrl.searchParams.append('comp', 'block');\n                blockUrl.searchParams.append('blockid', blockId);\n                const start = blockIndex * blockSize;\n                const blockData = data.buffer.slice(start, start + blockSize);\n                const blockHeaders = new Headers({\n                    'x-ms-date': new Date().toUTCString(),\n                    'x-ms-version': blockUrl.searchParams.get('sv'),\n                    'Content-Length': blockData.byteLength.toString(),\n                });\n\n                const blockRequest = new Request(blockUrl.toString(), {\n                    body: blockData,\n                    cache: 'no-store',\n                    method: 'PUT',\n                    headers: blockHeaders,\n                });\n\n                const blockResponse = await fetch(blockRequest);\n\n                if (blockResponse.status !== 201) {\n                    const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n                    this.logService.error(message + '\\n' + await blockResponse.json());\n                    throw new Error(message);\n                }\n\n                blocksStaged.push(blockId);\n                blockIndex++;\n            }\n\n            url = await this.renewUrlIfNecessary(url, renewalCallback);\n            const blockListUrl = Utils.getUrl(url);\n            const blockListXml = this.blockListXml(blocksStaged);\n            blockListUrl.searchParams.append('comp', 'blocklist');\n            const headers = new Headers({\n                'x-ms-date': new Date().toUTCString(),\n                'x-ms-version': blockListUrl.searchParams.get('sv'),\n                'Content-Length': blockListXml.length.toString(),\n            });\n\n            const request = new Request(blockListUrl.toString(), {\n                body: blockListXml,\n                cache: 'no-store',\n                method: 'PUT',\n                headers: headers,\n            });\n\n            const response = await fetch(request);\n\n            if (response.status !== 201) {\n                const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n                this.logService.error(message + '\\n' + await response.json());\n                throw new Error(message);\n            }\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    private async renewUrlIfNecessary(url: string, renewalCallback: () => Promise<string>): Promise<string> {\n        const urlObject = Utils.getUrl(url);\n        const expiry = new Date(urlObject.searchParams.get('se') ?? '');\n\n        if (isNaN(expiry.getTime())) {\n            expiry.setTime(Date.now() + 3600000);\n        }\n\n        if (expiry.getTime() < Date.now() + 1000) {\n            return await renewalCallback();\n        }\n        return url;\n    }\n\n    private encodedBlockId(blockIndex: number) {\n        // Encoded blockId max size is 64, so pre-encoding max size is 48\n        const utfBlockId = ('000000000000000000000000000000000000000000000000' + blockIndex.toString()).slice(-48);\n        return Utils.fromUtf8ToB64(utfBlockId);\n    }\n\n    private blockListXml(blockIdList: string[]) {\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n        blockIdList.forEach(blockId => {\n            xml += `<Latest>${blockId}</Latest>`;\n        });\n        xml += '</BlockList>';\n        return xml;\n    }\n\n    private getMaxBlockSize(version: string) {\n        if (Version.compare(version, '2019-12-12') >= 0) {\n            return 4000 * 1024 * 1024; // 4000 MiB\n        } else if (Version.compare(version, '2016-05-31') >= 0) {\n            return 100 * 1024 * 1024; // 100 MiB\n        } else {\n            return 4 * 1024 * 1024; // 4 MiB\n        }\n    }\n}\n\nclass Version {\n    /**\n     * Compares two Azure Versions against each other\n     * @param a Version to compare\n     * @param b Version to compare\n     * @returns a number less than zero if b is newer than a, 0 if equal,\n     * and greater than zero if a is newer than b\n     */\n    static compare(a: Required<Version> | string, b: Required<Version> | string) {\n        if (typeof (a) === 'string') {\n            a = new Version(a);\n        }\n\n        if (typeof (b) === 'string') {\n            b = new Version(b);\n        }\n\n        return a.year !== b.year ? a.year - b.year :\n            a.month !== b.month ? a.month - b.month :\n                a.day !== b.day ? a.day - b.day :\n                    0;\n    }\n    year = 0;\n    month = 0;\n    day = 0;\n\n    constructor(version: string) {\n        try {\n            const parts = version.split('-').map(v => Number.parseInt(v, 10));\n            this.year = parts[0];\n            this.month = parts[1];\n            this.day = parts[2];\n        } catch {\n            // Ignore error\n        }\n    }\n    /**\n     * Compares two Azure Versions against each other\n     * @param compareTo Version to compare against\n     * @returns a number less than zero if compareTo is newer, 0 if equal,\n     * and greater than zero if this is greater than compareTo\n     */\n    compare(compareTo: Required<Version> | string) {\n        return Version.compare(this, compareTo);\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\n\nimport { Utils } from '../misc/utils';\n\nexport class BitwardenFileUploadService\n{\n    constructor(private apiService: ApiService) { }\n\n    async upload(encryptedFileName: string, encryptedFileData: EncArrayBuffer, apiCall: (fd: FormData) => Promise<any>) {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encryptedFileData.buffer], { type: 'application/octet-stream' });\n            fd.append('data', blob, encryptedFileName);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('data', Buffer.from(encryptedFileData.buffer) as any, {\n                    filepath: encryptedFileName,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        await apiCall(fd);\n    }\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderRequest } from '../models/request/folderRequest';\n\nimport { FolderResponse } from '../models/response/folderResponse';\n\nimport { FolderView } from '../models/view/folderView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService as FolderServiceAbstraction } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\nimport { CipherData } from '../models/data/cipherData';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    foldersPrefix: 'folders_',\n    ciphersPrefix: 'ciphers_',\n};\nconst NestingDelimiter = '/';\n\nexport class FolderService implements FolderServiceAbstraction {\n    decryptedFolderCache: FolderView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private storageService: StorageService,\n        private i18nService: I18nService, private cipherService: CipherService) { }\n\n    clearCache(): void {\n        this.decryptedFolderCache = null;\n    }\n\n    async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n        const folder = new Folder();\n        folder.id = model.id;\n        folder.name = await this.cryptoService.encrypt(model.name, key);\n        return folder;\n    }\n\n    async get(id: string): Promise<Folder> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null || !folders.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Folder(folders[id]);\n    }\n\n    async getAll(): Promise<Folder[]> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        const response: Folder[] = [];\n        for (const id in folders) {\n            if (folders.hasOwnProperty(id)) {\n                response.push(new Folder(folders[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<FolderView[]> {\n        if (this.decryptedFolderCache != null) {\n            return this.decryptedFolderCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decFolders: FolderView[] = [];\n        const promises: Promise<any>[] = [];\n        const folders = await this.getAll();\n        folders.forEach(folder => {\n            promises.push(folder.decrypt().then(f => decFolders.push(f)));\n        });\n\n        await Promise.all(promises);\n        decFolders.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        const noneFolder = new FolderView();\n        noneFolder.name = this.i18nService.t('noneFolder');\n        decFolders.push(noneFolder);\n\n        this.decryptedFolderCache = decFolders;\n        return this.decryptedFolderCache;\n    }\n\n    async getAllNested(): Promise<TreeNode<FolderView>[]> {\n        const folders = await this.getAllDecrypted();\n        const nodes: TreeNode<FolderView>[] = [];\n        folders.forEach(f => {\n            const folderCopy = new FolderView();\n            folderCopy.id = f.id;\n            folderCopy.revisionDate = f.revisionDate;\n            const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<FolderView>> {\n        const folders = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n    }\n\n    async saveWithServer(folder: Folder): Promise<any> {\n        const request = new FolderRequest(folder);\n\n        let response: FolderResponse;\n        if (folder.id == null) {\n            response = await this.apiService.postFolder(request);\n            folder.id = response.id;\n        } else {\n            response = await this.apiService.putFolder(folder.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new FolderData(response, userId);\n        await this.upsert(data);\n    }\n\n    async upsert(folder: FolderData | FolderData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            folders = {};\n        }\n\n        if (folder instanceof FolderData) {\n            const f = folder as FolderData;\n            folders[f.id] = f;\n        } else {\n            (folder as FolderData[]).forEach(f => {\n                folders[f.id] = f;\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async replace(folders: { [id: string]: FolderData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.foldersPrefix + userId);\n        this.decryptedFolderCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (folders[id] == null) {\n                return;\n            }\n            delete folders[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete folders[i];\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n\n        // Items in a deleted folder are re-assigned to \"No Folder\"\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(Keys.ciphersPrefix + userId);\n        if (ciphers != null) {\n            const updates: CipherData[] = [];\n            for (const cId in ciphers) {\n                if (ciphers[cId].folderId === id) {\n                    ciphers[cId].folderId = null;\n                    updates.push(ciphers[cId]);\n                }\n            }\n            if (updates.length > 0) {\n                this.cipherService.upsert(updates);\n            }\n        }\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteFolder(id);\n        await this.delete(id);\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport {\n    ImportOption,\n    ImportService as ImportServiceAbstraction,\n} from '../abstractions/import.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { Utils } from '../misc/utils';\n\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KvpRequest } from '../models/request/kvpRequest';\n\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { CipherView } from '../models/view/cipherView';\n\nimport { AscendoCsvImporter } from '../importers/ascendoCsvImporter';\nimport { AvastCsvImporter } from '../importers/avastCsvImporter';\nimport { AvastJsonImporter } from '../importers/avastJsonImporter';\nimport { AviraCsvImporter } from '../importers/aviraCsvImporter';\nimport { BitwardenCsvImporter } from '../importers/bitwardenCsvImporter';\nimport { BitwardenJsonImporter } from '../importers/bitwardenJsonImporter';\nimport { BlackBerryCsvImporter } from '../importers/blackBerryCsvImporter';\nimport { BlurCsvImporter } from '../importers/blurCsvImporter';\nimport { ButtercupCsvImporter } from '../importers/buttercupCsvImporter';\nimport { ChromeCsvImporter } from '../importers/chromeCsvImporter';\nimport { ClipperzHtmlImporter } from '../importers/clipperzHtmlImporter';\nimport { CodebookCsvImporter } from '../importers/codebookCsvImporter';\nimport { DashlaneJsonImporter } from '../importers/dashlaneJsonImporter';\nimport { EncryptrCsvImporter } from '../importers/encryptrCsvImporter';\nimport { EnpassCsvImporter } from '../importers/enpassCsvImporter';\nimport { EnpassJsonImporter } from '../importers/enpassJsonImporter';\nimport { FirefoxCsvImporter } from '../importers/firefoxCsvImporter';\nimport { FSecureFskImporter } from '../importers/fsecureFskImporter';\nimport { GnomeJsonImporter } from '../importers/gnomeJsonImporter';\nimport { Importer } from '../importers/importer';\nimport { KasperskyTxtImporter } from '../importers/kasperskyTxtImporter';\nimport { KeePass2XmlImporter } from '../importers/keepass2XmlImporter';\nimport { KeePassXCsvImporter } from '../importers/keepassxCsvImporter';\nimport { KeeperCsvImporter } from '../importers/keeperCsvImporter';\nimport { LastPassCsvImporter } from '../importers/lastpassCsvImporter';\nimport { LogMeOnceCsvImporter } from '../importers/logMeOnceCsvImporter';\nimport { MeldiumCsvImporter } from '../importers/meldiumCsvImporter';\nimport { MSecureCsvImporter } from '../importers/msecureCsvImporter';\nimport { MykiCsvImporter } from '../importers/mykiCsvImporter';\nimport { NordPassCsvImporter } from '../importers/nordpassCsvImporter';\nimport { OnePassword1PifImporter } from '../importers/onepasswordImporters/onepassword1PifImporter';\nimport { OnePasswordMacCsvImporter } from '../importers/onepasswordImporters/onepasswordMacCsvImporter';\nimport { OnePasswordWinCsvImporter } from '../importers/onepasswordImporters/onepasswordWinCsvImporter';\nimport { PadlockCsvImporter } from '../importers/padlockCsvImporter';\nimport { PassKeepCsvImporter } from '../importers/passkeepCsvImporter';\nimport { PassmanJsonImporter } from '../importers/passmanJsonImporter';\nimport { PasspackCsvImporter } from '../importers/passpackCsvImporter';\nimport { PasswordAgentCsvImporter } from '../importers/passwordAgentCsvImporter';\nimport { PasswordBossJsonImporter } from '../importers/passwordBossJsonImporter';\nimport { PasswordDragonXmlImporter } from '../importers/passwordDragonXmlImporter';\nimport { PasswordSafeXmlImporter } from '../importers/passwordSafeXmlImporter';\nimport { PasswordWalletTxtImporter } from '../importers/passwordWalletTxtImporter';\nimport { RememBearCsvImporter } from '../importers/rememBearCsvImporter';\nimport { RoboFormCsvImporter } from '../importers/roboformCsvImporter';\nimport { SafariCsvImporter } from '../importers/safariCsvImporter';\nimport { SafeInCloudXmlImporter } from '../importers/safeInCloudXmlImporter';\nimport { SaferPassCsvImporter } from '../importers/saferpassCsvImport';\nimport { SecureSafeCsvImporter } from '../importers/secureSafeCsvImporter';\nimport { SplashIdCsvImporter } from '../importers/splashIdCsvImporter';\nimport { StickyPasswordXmlImporter } from '../importers/stickyPasswordXmlImporter';\nimport { TrueKeyCsvImporter } from '../importers/truekeyCsvImporter';\nimport { UpmCsvImporter } from '../importers/upmCsvImporter';\nimport { YotiCsvImporter } from '../importers/yotiCsvImporter';\nimport { ZohoVaultCsvImporter } from '../importers/zohoVaultCsvImporter';\n\nexport class ImportService implements ImportServiceAbstraction {\n    featuredImportOptions = [\n        { id: 'bitwardenjson', name: 'Bitwarden (json)' },\n        { id: 'bitwardencsv', name: 'Bitwarden (csv)' },\n        { id: 'chromecsv', name: 'Chrome (csv)' },\n        { id: 'dashlanejson', name: 'Dashlane (json)' },\n        { id: 'firefoxcsv', name: 'Firefox (csv)' },\n        { id: 'keepass2xml', name: 'KeePass 2 (xml)' },\n        { id: 'lastpasscsv', name: 'LastPass (csv)' },\n        { id: 'safaricsv', name: 'Safari and macOS (csv)' },\n        { id: '1password1pif', name: '1Password (1pif)' },\n    ];\n\n    regularImportOptions: ImportOption[] = [\n        { id: 'keepassxcsv', name: 'KeePassX (csv)' },\n        { id: '1passwordwincsv', name: '1Password 6 and 7 Windows (csv)' },\n        { id: '1passwordmaccsv', name: '1Password 6 and 7 Mac (csv)' },\n        { id: 'roboformcsv', name: 'RoboForm (csv)' },\n        { id: 'keepercsv', name: 'Keeper (csv)' },\n        { id: 'enpasscsv', name: 'Enpass (csv)' },\n        { id: 'enpassjson', name: 'Enpass (json)' },\n        { id: 'safeincloudxml', name: 'SafeInCloud (xml)' },\n        { id: 'pwsafexml', name: 'Password Safe (xml)' },\n        { id: 'stickypasswordxml', name: 'Sticky Password (xml)' },\n        { id: 'msecurecsv', name: 'mSecure (csv)' },\n        { id: 'truekeycsv', name: 'True Key (csv)' },\n        { id: 'passwordbossjson', name: 'Password Boss (json)' },\n        { id: 'zohovaultcsv', name: 'Zoho Vault (csv)' },\n        { id: 'splashidcsv', name: 'SplashID (csv)' },\n        { id: 'passworddragonxml', name: 'Password Dragon (xml)' },\n        { id: 'padlockcsv', name: 'Padlock (csv)' },\n        { id: 'passboltcsv', name: 'Passbolt (csv)' },\n        { id: 'clipperzhtml', name: 'Clipperz (html)' },\n        { id: 'aviracsv', name: 'Avira (csv)' },\n        { id: 'saferpasscsv', name: 'SaferPass (csv)' },\n        { id: 'upmcsv', name: 'Universal Password Manager (csv)' },\n        { id: 'ascendocsv', name: 'Ascendo DataVault (csv)' },\n        { id: 'meldiumcsv', name: 'Meldium (csv)' },\n        { id: 'passkeepcsv', name: 'PassKeep (csv)' },\n        { id: 'operacsv', name: 'Opera (csv)' },\n        { id: 'vivaldicsv', name: 'Vivaldi (csv)' },\n        { id: 'gnomejson', name: 'GNOME Passwords and Keys/Seahorse (json)' },\n        { id: 'blurcsv', name: 'Blur (csv)' },\n        { id: 'passwordagentcsv', name: 'Password Agent (csv)' },\n        { id: 'passpackcsv', name: 'Passpack (csv)' },\n        { id: 'passmanjson', name: 'Passman (json)' },\n        { id: 'avastcsv', name: 'Avast Passwords (csv)' },\n        { id: 'avastjson', name: 'Avast Passwords (json)' },\n        { id: 'fsecurefsk', name: 'F-Secure KEY (fsk)' },\n        { id: 'kasperskytxt', name: 'Kaspersky Password Manager (txt)' },\n        { id: 'remembearcsv', name: 'RememBear (csv)' },\n        { id: 'passwordwallettxt', name: 'PasswordWallet (txt)' },\n        { id: 'mykicsv', name: 'Myki (csv)' },\n        { id: 'securesafecsv', name: 'SecureSafe (csv)' },\n        { id: 'logmeoncecsv', name: 'LogMeOnce (csv)' },\n        { id: 'blackberrycsv', name: 'BlackBerry Password Keeper (csv)' },\n        { id: 'buttercupcsv', name: 'Buttercup (csv)' },\n        { id: 'codebookcsv', name: 'Codebook (csv)' },\n        { id: 'encryptrcsv', name: 'Encryptr (csv)' },\n        { id: 'yoticsv', name: 'Yoti (csv)' },\n        { id: 'nordpasscsv', name: 'Nordpass (csv)' },\n    ];\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private apiService: ApiService, private i18nService: I18nService,\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService) { }\n\n    getImportOptions(): ImportOption[] {\n        return this.featuredImportOptions.concat(this.regularImportOptions);\n    }\n\n    async import(importer: Importer, fileContents: string, organizationId: string = null): Promise<Error> {\n        const importResult = await importer.parse(fileContents);\n        if (importResult.success) {\n            if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n                return new Error(this.i18nService.t('importNothingError'));\n            } else if (importResult.ciphers.length > 0) {\n                const halfway = Math.floor(importResult.ciphers.length / 2);\n                const last = importResult.ciphers.length - 1;\n\n                if (this.badData(importResult.ciphers[0]) &&\n                    this.badData(importResult.ciphers[halfway]) &&\n                    this.badData(importResult.ciphers[last])) {\n                    return new Error(this.i18nService.t('importFormatError'));\n                }\n            }\n            try {\n                await this.postImport(importResult, organizationId);\n            } catch (error) {\n                const errorResponse = new ErrorResponse(error, 400);\n                return this.handleServerError(errorResponse, importResult);\n            }\n            return null;\n        } else {\n            if (!Utils.isNullOrWhitespace(importResult.errorMessage)) {\n                return new Error(importResult.errorMessage);\n            } else {\n                return new Error(this.i18nService.t('importFormatError'));\n            }\n        }\n    }\n\n    getImporter(format: string, organizationId: string = null): Importer {\n        const importer = this.getImporterInstance(format);\n        if (importer == null) {\n            return null;\n        }\n        importer.organizationId = organizationId;\n        return importer;\n    }\n\n    private getImporterInstance(format: string) {\n        if (format == null || format === '') {\n            return null;\n        }\n\n        switch (format) {\n            case 'bitwardencsv':\n                return new BitwardenCsvImporter();\n            case 'bitwardenjson':\n                return new BitwardenJsonImporter(this.cryptoService, this.i18nService);\n            case 'lastpasscsv':\n            case 'passboltcsv':\n                return new LastPassCsvImporter();\n            case 'keepassxcsv':\n                return new KeePassXCsvImporter();\n            case 'aviracsv':\n                return new AviraCsvImporter();\n            case 'blurcsv':\n                return new BlurCsvImporter();\n            case 'safeincloudxml':\n                return new SafeInCloudXmlImporter();\n            case 'padlockcsv':\n                return new PadlockCsvImporter();\n            case 'keepass2xml':\n                return new KeePass2XmlImporter();\n            case 'chromecsv':\n            case 'operacsv':\n            case 'vivaldicsv':\n                return new ChromeCsvImporter();\n            case 'firefoxcsv':\n                return new FirefoxCsvImporter();\n            case 'upmcsv':\n                return new UpmCsvImporter();\n            case 'saferpasscsv':\n                return new SaferPassCsvImporter();\n            case 'safaricsv':\n                return new SafariCsvImporter();\n            case 'meldiumcsv':\n                return new MeldiumCsvImporter();\n            case '1password1pif':\n                return new OnePassword1PifImporter();\n            case '1passwordwincsv':\n                return new OnePasswordWinCsvImporter();\n            case '1passwordmaccsv':\n                return new OnePasswordMacCsvImporter();\n            case 'keepercsv':\n                return new KeeperCsvImporter();\n            case 'passworddragonxml':\n                return new PasswordDragonXmlImporter();\n            case 'enpasscsv':\n                return new EnpassCsvImporter();\n            case 'enpassjson':\n                return new EnpassJsonImporter();\n            case 'pwsafexml':\n                return new PasswordSafeXmlImporter();\n            case 'dashlanejson':\n                return new DashlaneJsonImporter();\n            case 'msecurecsv':\n                return new MSecureCsvImporter();\n            case 'stickypasswordxml':\n                return new StickyPasswordXmlImporter();\n            case 'truekeycsv':\n                return new TrueKeyCsvImporter();\n            case 'clipperzhtml':\n                return new ClipperzHtmlImporter();\n            case 'roboformcsv':\n                return new RoboFormCsvImporter();\n            case 'ascendocsv':\n                return new AscendoCsvImporter();\n            case 'passwordbossjson':\n                return new PasswordBossJsonImporter();\n            case 'zohovaultcsv':\n                return new ZohoVaultCsvImporter();\n            case 'splashidcsv':\n                return new SplashIdCsvImporter();\n            case 'passkeepcsv':\n                return new PassKeepCsvImporter();\n            case 'gnomejson':\n                return new GnomeJsonImporter();\n            case 'passwordagentcsv':\n                return new PasswordAgentCsvImporter();\n            case 'passpackcsv':\n                return new PasspackCsvImporter();\n            case 'passmanjson':\n                return new PassmanJsonImporter();\n            case 'avastcsv':\n                return new AvastCsvImporter();\n            case 'avastjson':\n                return new AvastJsonImporter();\n            case 'fsecurefsk':\n                return new FSecureFskImporter();\n            case 'kasperskytxt':\n                return new KasperskyTxtImporter();\n            case 'remembearcsv':\n                return new RememBearCsvImporter();\n            case 'passwordwallettxt':\n                return new PasswordWalletTxtImporter();\n            case 'mykicsv':\n                return new MykiCsvImporter();\n            case 'securesafecsv':\n                return new SecureSafeCsvImporter();\n            case 'logmeoncecsv':\n                return new LogMeOnceCsvImporter();\n            case 'blackberrycsv':\n                return new BlackBerryCsvImporter();\n            case 'buttercupcsv':\n                return new ButtercupCsvImporter();\n            case 'codebookcsv':\n                return new CodebookCsvImporter();\n            case 'encryptrcsv':\n                return new EncryptrCsvImporter();\n            case 'yoticsv':\n                return new YotiCsvImporter();\n            case 'nordpasscsv':\n                return new NordPassCsvImporter();\n            default:\n                return null;\n        }\n    }\n\n    private async postImport(importResult: ImportResult, organizationId: string = null) {\n        if (organizationId == null) {\n            const request = new ImportCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.folders != null) {\n                for (let i = 0; i < importResult.folders.length; i++) {\n                    const f = await this.folderService.encrypt(importResult.folders[i]);\n                    request.folders.push(new FolderRequest(f));\n                }\n            }\n            if (importResult.folderRelationships != null) {\n                importResult.folderRelationships.forEach(r =>\n                    request.folderRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportCiphers(request);\n        } else {\n            const request = new ImportOrganizationCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                importResult.ciphers[i].organizationId = organizationId;\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.collections != null) {\n                for (let i = 0; i < importResult.collections.length; i++) {\n                    importResult.collections[i].organizationId = organizationId;\n                    const c = await this.collectionService.encrypt(importResult.collections[i]);\n                    request.collections.push(new CollectionRequest(c));\n                }\n            }\n            if (importResult.collectionRelationships != null) {\n                importResult.collectionRelationships.forEach(r =>\n                    request.collectionRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportOrganizationCiphers(organizationId, request);\n        }\n    }\n\n    private badData(c: CipherView) {\n        return (c.name == null || c.name === '--') &&\n            (c.type === CipherType.Login && c.login != null && Utils.isNullOrWhitespace(c.login.password));\n    }\n\n    private handleServerError(errorResponse: ErrorResponse, importResult: ImportResult): Error {\n        if (errorResponse.validationErrors == null) {\n            return new Error(errorResponse.message);\n        }\n\n        let errorMessage = '';\n\n        Object.entries(errorResponse.validationErrors).forEach(([key, value], index) => {\n            let item;\n            let itemType;\n            const i = Number(key.match(/[0-9]+/)[0]);\n\n            switch (key.match(/^\\w+/)[0]) {\n                case 'Ciphers':\n                    item = importResult.ciphers[i];\n                    itemType = CipherType[item.type];\n                    break;\n                case 'Folders':\n                    item = importResult.folders[i];\n                    itemType = 'Folder';\n                    break;\n                case 'Collections':\n                    item = importResult.collections[i];\n                    itemType = 'Collection';\n                    break;\n                default:\n                    return;\n            }\n\n            if (index > 0) {\n                errorMessage += '\\n\\n';\n            }\n\n            if (itemType !== 'Folder' && itemType !== 'Collection') {\n                errorMessage += '[' + (i + 1) + '] ';\n            }\n\n            errorMessage += '[' + itemType + '] \"' + item.name + '\": ' + value;\n        });\n\n        return new Error(errorMessage);\n    }\n}\n","import { CipherRequest } from './cipherRequest';\nimport { FolderRequest } from './folderRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    folders: FolderRequest[] = [];\n    folderRelationships: KvpRequest<number, number>[] = [];\n}\n","import { CipherRequest } from './cipherRequest';\nimport { CollectionRequest } from './collectionRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportOrganizationCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    collections: CollectionRequest[] = [];\n    collectionRelationships: KvpRequest<number, number>[] = [];\n}\n","export class KvpRequest<TK, TV> {\n    key: TK;\n    value: TV;\n\n    constructor(key: TK, value: TV) {\n        this.key = key;\n        this.value = value;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 2) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const val: string = value[i + 2];\n                    const field: string = value[i + 1];\n                    if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n                        continue;\n                    }\n\n                    const fieldLower = field.toLowerCase();\n                    if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.password = this.getValueOrDefault(val);\n                    } else if (cipher.login.username == null &&\n                        this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.username = this.getValueOrDefault(val);\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                    } else {\n                        this.processKvp(cipher, field, val);\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AvastCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.login.uris = this.makeUriArray(value.web);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.username = this.getValueOrDefault(value.login);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class AvastJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        if (results.logins != null) {\n            results.logins.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.name = this.getValueOrDefault(value.custName);\n                cipher.notes = this.getValueOrDefault(value.note);\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.password = this.getValueOrDefault(value.pwd);\n                cipher.login.username = this.getValueOrDefault(value.loginName);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (results.notes != null) {\n            results.notes.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.label);\n                cipher.notes = this.getValueOrDefault(value.text);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (results.cards != null) {\n            results.cards.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.type = CipherType.Card;\n                cipher.name = this.getValueOrDefault(value.custName);\n                cipher.notes = this.getValueOrDefault(value.note);\n                cipher.card.cardholderName = this.getValueOrDefault(value.holderName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (value.expirationDate != null) {\n                    if (value.expirationDate.month != null) {\n                        cipher.card.expMonth = value.expirationDate.month + '';\n                    }\n                    if (value.expirationDate.year != null) {\n                        cipher.card.expYear = value.expirationDate.year + '';\n                    }\n                }\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name,\n                this.getValueOrDefault(this.nameFromUrl(value.website), '--'));\n            cipher.login.uris = this.makeUriArray(value.website);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.username) && !this.isNullOrWhitespace(value.secondary_username)) {\n                cipher.login.username = value.secondary_username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.notes = this.getValueOrDefault(value.secondary_username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherRepromptType } from '../enums/cipherRepromptType';\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n                const collections = (value.collections as string).split(',');\n                collections.forEach(col => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === col) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = col;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization) {\n                this.processFolder(result, value.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.favorite, '0') !== '0' ? true : false;\n            cipher.type = CipherType.Login;\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            try {\n                cipher.reprompt = parseInt(this.getValueOrDefault(value.reprompt, CipherRepromptType.None.toString()), 10);\n            } catch (e) {\n                // tslint:disable-next-line\n                console.error('Unable to parse reprompt value', e);\n                cipher.reprompt = CipherRepromptType.None;\n            }\n\n            if (!this.isNullOrWhitespace(value.fields)) {\n                const fields = this.splitNewLine(value.fields);\n                for (let i = 0; i < fields.length; i++) {\n                    if (this.isNullOrWhitespace(fields[i])) {\n                        continue;\n                    }\n\n                    const delimPosition = fields[i].lastIndexOf(': ');\n                    if (delimPosition === -1) {\n                        continue;\n                    }\n\n                    if (cipher.fields == null) {\n                        cipher.fields = [];\n                    }\n\n                    const field = new FieldView();\n                    field.name = fields[i].substr(0, delimPosition);\n                    field.value = null;\n                    field.type = FieldType.Text;\n                    if (fields[i].length > (delimPosition + 2)) {\n                        field.value = fields[i].substr(delimPosition + 2);\n                    }\n                    cipher.fields.push(field);\n                }\n            }\n\n            const valueType = value.type != null ? value.type.toLowerCase() : null;\n            switch (valueType) {\n                case 'note':\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote = new SecureNoteView();\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n                    cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n                    cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n                    const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n                    cipher.login.uris = this.makeUriArray(uris);\n                    break;\n            }\n\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { EncString } from '../models/domain/encString';\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherWithIds } from '../models/export/cipherWithIds';\nimport { CollectionWithId } from '../models/export/collectionWithId';\nimport { FolderWithId } from '../models/export/folderWithId';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\n\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\n    private results: any;\n    private result: ImportResult;\n\n    constructor(private cryptoService: CryptoService, private i18nService: I18nService) {\n        super();\n    }\n\n    async parse(data: string): Promise<ImportResult> {\n        this.result = new ImportResult();\n        this.results = JSON.parse(data);\n        if (this.results == null || this.results.items == null || this.results.items.length === 0) {\n            this.result.success = false;\n            return this.result;\n        }\n\n        if (this.results.encrypted) {\n            await this.parseEncrypted();\n        } else {\n            this.parseDecrypted();\n        }\n\n        return this.result;\n    }\n\n    private async parseEncrypted() {\n        if (this.results.encKeyValidation_DO_NOT_EDIT != null) {\n            const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const encKeyValidation = new EncString(this.results.encKeyValidation_DO_NOT_EDIT);\n            const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(encKeyValidation, orgKey);\n            if (encKeyValidationDecrypt === null) {\n                this.result.success = false;\n                this.result.errorMessage = this.i18nService.t('importEncKeyError');\n                return;\n            }\n        }\n\n        const groupingsMap = new Map<string, number>();\n\n        if (this.organization && this.results.collections != null) {\n            for (const c of this.results.collections as CollectionWithId[]) {\n                const collection = CollectionWithId.toDomain(c);\n                if (collection != null) {\n                    collection.id = null;\n                    collection.organizationId = this.organizationId;\n                    const view = await collection.decrypt();\n                    groupingsMap.set(c.id, this.result.collections.length);\n                    this.result.collections.push(view);\n                }\n            }\n        } else if (!this.organization && this.results.folders != null) {\n            for (const f of this.results.folders as FolderWithId[]) {\n                const folder = FolderWithId.toDomain(f);\n                if (folder != null) {\n                    folder.id = null;\n                    const view = await folder.decrypt();\n                    groupingsMap.set(f.id, this.result.folders.length);\n                    this.result.folders.push(view);\n                }\n            }\n        }\n\n        for (const c of this.results.items as CipherWithIds[]) {\n            const cipher = CipherWithIds.toDomain(c);\n            // reset ids incase they were set for some reason\n            cipher.id = null;\n            cipher.folderId = null;\n            cipher.organizationId = this.organizationId;\n            cipher.collectionIds = null;\n\n            // make sure password history is limited\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n            }\n\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n                this.result.folderRelationships.push([this.result.ciphers.length, groupingsMap.get(c.folderId)]);\n            } else if (this.organization && c.collectionIds != null) {\n                c.collectionIds.forEach(cId => {\n                    if (groupingsMap.has(cId)) {\n                        this.result.collectionRelationships.push([this.result.ciphers.length, groupingsMap.get(cId)]);\n                    }\n                });\n            }\n\n            const view = await cipher.decrypt();\n            this.cleanupCipher(view);\n            this.result.ciphers.push(view);\n        }\n\n        this.result.success = true;\n    }\n\n    private parseDecrypted() {\n        const groupingsMap = new Map<string, number>();\n        if (this.organization && this.results.collections != null) {\n            this.results.collections.forEach((c: CollectionWithId) => {\n                const collection = CollectionWithId.toView(c);\n                if (collection != null) {\n                    collection.id = null;\n                    collection.organizationId = null;\n                    groupingsMap.set(c.id, this.result.collections.length);\n                    this.result.collections.push(collection);\n                }\n            });\n        } else if (!this.organization && this.results.folders != null) {\n            this.results.folders.forEach((f: FolderWithId) => {\n                const folder = FolderWithId.toView(f);\n                if (folder != null) {\n                    folder.id = null;\n                    groupingsMap.set(f.id, this.result.folders.length);\n                    this.result.folders.push(folder);\n                }\n            });\n        }\n\n        this.results.items.forEach((c: CipherWithIds) => {\n            const cipher = CipherWithIds.toView(c);\n            // reset ids incase they were set for some reason\n            cipher.id = null;\n            cipher.folderId = null;\n            cipher.organizationId = null;\n            cipher.collectionIds = null;\n\n            // make sure password history is limited\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n            }\n\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n                this.result.folderRelationships.push([this.result.ciphers.length, groupingsMap.get(c.folderId)]);\n            } else if (this.organization && c.collectionIds != null) {\n                c.collectionIds.forEach(cId => {\n                    if (groupingsMap.has(cId)) {\n                        this.result.collectionRelationships.push([this.result.ciphers.length, groupingsMap.get(cId)]);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlackBerryCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.grouping === 'list') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.favorite = value.fav === '1';\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.extra);\n            if (value.grouping !== 'note') {\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.label === 'null') {\n                value.label = null;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.label,\n                this.getValueOrDefault(this.nameFromUrl(value.domain), '--'));\n            cipher.login.uris = this.makeUriArray(value.domain);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n                cipher.login.username = value.username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.email);\n                cipher.notes = this.getValueOrDefault(value.username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst OfficialProps = [\n    '!group_id', '!group_name', 'title', 'username', 'password', 'URL', 'id',\n];\n\nexport class ButtercupCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValueOrDefault(value['!group_name']));\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.title, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            let processingCustomFields = false;\n            for (const prop in value) {\n                if (value.hasOwnProperty(prop)) {\n                    if (!processingCustomFields && OfficialProps.indexOf(prop) === -1) {\n                        processingCustomFields = true;\n                    }\n                    if (processingCustomFields) {\n                        this.processKvp(cipher, prop, value[prop]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const textarea = doc.querySelector('textarea');\n        if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n            result.errorMessage = 'Missing textarea.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const entries = JSON.parse(textarea.textContent);\n        entries.forEach((entry: any) => {\n            const cipher = this.initLoginCipher();\n            if (!this.isNullOrWhitespace(entry.label)) {\n                cipher.name = entry.label.split(' ')[0];\n            }\n            if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n                cipher.notes = entry.data.notes.split('\\\\n').join('\\n');\n            }\n\n            if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n                for (const property in entry.currentVersion.fields) {\n                    if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n                        continue;\n                    }\n\n                    const field = entry.currentVersion.fields[property];\n                    const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n                    switch (actionType) {\n                        case 'password':\n                            cipher.login.password = this.getValueOrDefault(field.value);\n                            break;\n                        case 'email':\n                        case 'username':\n                        case 'user':\n                        case 'name':\n                            cipher.login.username = this.getValueOrDefault(field.value);\n                            break;\n                        case 'url':\n                            cipher.login.uris = this.makeUriArray(field.value);\n                            break;\n                        default:\n                            const labelLower = field.label != null ? field.label.toLowerCase() : null;\n                            if (cipher.login.password == null && this.passwordFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.password = this.getValueOrDefault(field.value);\n                            } else if (cipher.login.username == null &&\n                                this.usernameFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.username = this.getValueOrDefault(field.value);\n                            } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                                this.uriFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.uris = this.makeUriArray(field.value);\n                            } else {\n                                this.processKvp(cipher, field.label, field.value);\n                            }\n                            break;\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class CodebookCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValueOrDefault(value.Category));\n\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite) === 'True';\n            cipher.name = this.getValueOrDefault(value.Entry, '--');\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.login.username = this.getValueOrDefault(value.Username, value.Email);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.totp = this.getValueOrDefault(value.TOTP);\n            cipher.login.uris = this.makeUriArray(value.Website);\n\n            if (!this.isNullOrWhitespace(value.Username)) {\n                this.processKvp(cipher, 'Email', value.Email);\n            }\n            this.processKvp(cipher, 'Phone', value.Phone);\n            this.processKvp(cipher, 'PIN', value.PIN);\n            this.processKvp(cipher, 'Account', value.Account);\n            this.processKvp(cipher, 'Date', value.Date);\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst HandledResults = new Set(['ADDRESS', 'AUTHENTIFIANT', 'BANKSTATEMENT', 'IDCARD', 'IDENTITY',\n    'PAYMENTMEANS_CREDITCARD', 'PAYMENTMEAN_PAYPAL', 'EMAIL']);\n\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\n    private result: ImportResult;\n\n    parse(data: string): Promise<ImportResult> {\n        this.result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        if (results.ADDRESS != null) {\n            this.processAddress(results.ADDRESS);\n        }\n        if (results.AUTHENTIFIANT != null) {\n            this.processAuth(results.AUTHENTIFIANT);\n        }\n        if (results.BANKSTATEMENT != null) {\n            this.processNote(results.BANKSTATEMENT, 'BankAccountName');\n        }\n        if (results.IDCARD != null) {\n            this.processNote(results.IDCARD, 'Fullname');\n        }\n        if (results.PAYMENTMEANS_CREDITCARD != null) {\n            this.processCard(results.PAYMENTMEANS_CREDITCARD);\n        }\n        if (results.IDENTITY != null) {\n            this.processIdentity(results.IDENTITY);\n        }\n\n        for (const key in results) {\n            if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\n                this.processNote(results[key], null, 'Generic Note');\n            }\n        }\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    private processAuth(results: any[]) {\n        results.forEach((credential: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(credential.title);\n\n            cipher.login.username = this.getValueOrDefault(credential.login,\n                this.getValueOrDefault(credential.secondaryLogin));\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.domain);\n            cipher.notes += this.getValueOrDefault(credential.note, '');\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processIdentity(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.fullName, '');\n            const nameParts = cipher.name.split(' ');\n            if (nameParts.length > 0) {\n                cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n            }\n            if (nameParts.length === 2) {\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n            } else if (nameParts.length === 3) {\n                cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\n            }\n            cipher.identity.username = this.getValueOrDefault(obj.pseudo);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processAddress(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.addressName);\n            cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\n            cipher.identity.city = this.getValueOrDefault(obj.city);\n            cipher.identity.state = this.getValueOrDefault(obj.state);\n            cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\n            cipher.identity.country = this.getValueOrDefault(obj.country);\n            if (cipher.identity.country != null) {\n                cipher.identity.country = cipher.identity.country.toUpperCase();\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processCard(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.card = new CardView();\n            cipher.type = CipherType.Card;\n            cipher.name = this.getValueOrDefault(obj.bank);\n            cipher.card.number = this.getValueOrDefault(obj.cardNumber);\n            cipher.card.brand = this.getCardBrand(cipher.card.number);\n            cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\n            if (!this.isNullOrWhitespace(cipher.card.brand)) {\n                if (this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name = cipher.card.brand;\n                } else {\n                    cipher.name += (' - ' + cipher.card.brand);\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processNote(results: any[], nameProperty: string, name: string = null) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.secureNote = new SecureNoteView();\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote.type = SecureNoteType.Generic;\n            if (name != null) {\n                cipher.name = name;\n            } else {\n                cipher.name = this.getValueOrDefault(obj[nameProperty]);\n            }\n            for (const key in obj) {\n                if (obj.hasOwnProperty(key) && key !== nameProperty) {\n                    this.processKvp(cipher, key, obj[key].toString());\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class EncryptrCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Label, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            const text = this.getValueOrDefault(value.Text);\n            if (!this.isNullOrWhitespace(text)) {\n                if (this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = text;\n                } else {\n                    cipher.notes += ('\\n\\n' + text);\n                }\n            }\n\n            const type = value['Entry Type'];\n            if (type === 'Password') {\n                cipher.login.username = this.getValueOrDefault(value.Username);\n                cipher.login.password = this.getValueOrDefault(value.Password);\n                cipher.login.uris = this.makeUriArray(value['Site URL']);\n            } else if (type === 'Credit Card') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value['Name on card']);\n                cipher.card.number = this.getValueOrDefault(value['Card Number']);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.CVV);\n                const expiry = this.getValueOrDefault(value.Expiry);\n                if (!this.isNullOrWhitespace(expiry)) {\n                    const expParts = expiry.split('/');\n                    if (expParts.length > 1) {\n                        cipher.card.expMonth = parseInt(expParts[0], null).toString();\n                        cipher.card.expYear = (2000 + parseInt(expParts[1], null)).toString();\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let firstRow = true;\n        results.forEach(value => {\n            if (value.length < 2 || (firstRow && (value[0] === 'Title' || value[0] === 'title'))) {\n                firstRow = false;\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length === 2 || (!this.containsField(value, 'username') &&\n                !this.containsField(value, 'password') && !this.containsField(value, 'email') &&\n                !this.containsField(value, 'url'))) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            }\n\n            if (this.containsField(value, 'cardholder') && this.containsField(value, 'number') &&\n                this.containsField(value, 'expiry date')) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const fieldValue: string = value[i + 2];\n                    if (this.isNullOrWhitespace(fieldValue)) {\n                        continue;\n                    }\n\n                    const fieldName: string = value[i + 1];\n                    const fieldNameLower = fieldName.toLowerCase();\n\n                    if (cipher.type === CipherType.Login) {\n                        if (fieldNameLower === 'url' && (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n                            cipher.login.uris = this.makeUriArray(fieldValue);\n                            continue;\n                        } else if ((fieldNameLower === 'username' || fieldNameLower === 'email') &&\n                            this.isNullOrWhitespace(cipher.login.username)) {\n                            cipher.login.username = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                            cipher.login.password = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                            cipher.login.totp = fieldValue;\n                            continue;\n                        }\n                    } else if (cipher.type === CipherType.Card) {\n                        if (fieldNameLower === 'cardholder' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                            cipher.card.cardholderName = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'number' && this.isNullOrWhitespace(cipher.card.number)) {\n                            cipher.card.number = fieldValue;\n                            cipher.card.brand = this.getCardBrand(fieldValue);\n                            continue;\n                        } else if (fieldNameLower === 'cvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                            cipher.card.code = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'expiry date' && this.isNullOrWhitespace(cipher.card.expMonth) &&\n                            this.isNullOrWhitespace(cipher.card.expYear)) {\n                            if (this.setCardExpiration(cipher, fieldValue)) {\n                                continue;\n                            }\n                        } else if (fieldNameLower === 'type') {\n                            // Skip since brand was determined from number above\n                            continue;\n                        }\n                    }\n\n                    this.processKvp(cipher, fieldName, fieldValue);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private containsField(fields: any[], name: string) {\n        if (fields == null || name == null) {\n            return false;\n        }\n        return fields.filter(f => !this.isNullOrWhitespace(f) &&\n            f.toLowerCase() === name.toLowerCase()).length > 0;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\n\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null || results.items.length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, string>();\n        const foldersIndexMap = new Map<string, number>();\n        const folderTree = this.buildFolderTree(results.folders);\n        this.flattenFolderTree(null, folderTree, foldersMap);\n        foldersMap.forEach((val, key) => {\n            foldersIndexMap.set(key, result.folders.length);\n            const f = new FolderView();\n            f.name = val;\n            result.folders.push(f);\n        });\n\n        results.items.forEach((item: any) => {\n            if (item.folders != null && item.folders.length > 0 && foldersIndexMap.has(item.folders[0])) {\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(item.folders[0])]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(item.title);\n            cipher.favorite = item.favorite > 0;\n\n            if (item.template_type != null && item.fields != null && item.fields.length > 0) {\n                if (item.template_type.indexOf('login.') === 0 || item.template_type.indexOf('password.') === 0) {\n                    this.processLogin(cipher, item.fields);\n                } else if (item.template_type.indexOf('creditcard.') === 0) {\n                    this.processCard(cipher, item.fields);\n                } else if (item.template_type.indexOf('identity.') < 0 &&\n                    item.fields.some((f: any) => f.type === 'password' && !this.isNullOrWhitespace(f.value))) {\n                    this.processLogin(cipher, item.fields);\n                } else {\n                    this.processNote(cipher, item.fields);\n                }\n            }\n\n            cipher.notes += ('\\n' + this.getValueOrDefault(item.note, ''));\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private processLogin(cipher: CipherView, fields: any[]) {\n        const urls: string[] = [];\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n\n            if ((field.type === 'username' || field.type === 'email') &&\n                this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = field.value;\n            } else if (field.type === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                cipher.login.password = field.value;\n            } else if (field.type === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                cipher.login.totp = field.value;\n            } else if (field.type === 'url') {\n                urls.push(field.value);\n            } else {\n                this.processKvp(cipher, field.label, field.value,\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n            }\n        });\n        cipher.login.uris = this.makeUriArray(urls);\n    }\n\n    private processCard(cipher: CipherView, fields: any[]) {\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section' || field.type === 'ccType') {\n                return;\n            }\n\n            if (field.type === 'ccName' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                cipher.card.cardholderName = field.value;\n            } else if (field.type === 'ccNumber' && this.isNullOrWhitespace(cipher.card.number)) {\n                cipher.card.number = field.value;\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n            } else if (field.type === 'ccCvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                cipher.card.code = field.value;\n            } else if (field.type === 'ccExpiry' && this.isNullOrWhitespace(cipher.card.expYear)) {\n                if (!this.setCardExpiration(cipher, field.value)) {\n                    this.processKvp(cipher, field.label, field.value,\n                        field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n                }\n            } else {\n                this.processKvp(cipher, field.label, field.value,\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n            }\n        });\n    }\n\n    private processNote(cipher: CipherView, fields: any[]) {\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n            this.processKvp(cipher, field.label, field.value,\n                field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n        });\n    }\n\n    private buildFolderTree(folders: any[]): any[] {\n        if (folders == null) {\n            return [];\n        }\n        const folderTree: any[] = [];\n        const map = new Map<string, any>([]);\n        folders.forEach((obj: any) => {\n            map.set(obj.uuid, obj);\n            obj.children = [];\n        });\n        folders.forEach((obj: any) => {\n            if (obj.parent_uuid != null && obj.parent_uuid !== '' && map.has(obj.parent_uuid)) {\n                map.get(obj.parent_uuid).children.push(obj);\n            } else {\n                folderTree.push(obj);\n            }\n        });\n        return folderTree;\n    }\n\n    private flattenFolderTree(titlePrefix: string, tree: any[], map: Map<string, string>) {\n        if (tree == null) {\n            return;\n        }\n        tree.forEach((f: any) => {\n            if (f.title != null && f.title.trim() !== '') {\n                let title = f.title.trim();\n                if (titlePrefix != null && titlePrefix.trim() !== '') {\n                    title = titlePrefix + '/' + title;\n                }\n                map.set(f.uuid, title);\n                if (f.children != null && f.children.length !== 0) {\n                    this.flattenFolderTree(title, f.children, map);\n                }\n            }\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.filter(value => {\n            return value.url !== 'chrome://FirefoxAccounts';\n        }).forEach(value => {\n            const cipher = this.initLoginCipher();\n            const url = this.getValueOrDefault(value.url, this.getValueOrDefault(value.hostname));\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(url), '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class FSecureFskImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.data == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        for (const key in results.data) {\n            if (!results.data.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const value = results.data[key];\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.service);\n            cipher.notes = this.getValueOrDefault(value.notes);\n\n            if (value.style === 'website') {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.uris = this.makeUriArray(value.url);\n            } else if (value.style === 'creditcard') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.username);\n                cipher.card.number = this.getValueOrDefault(value.creditNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.creditCvv);\n                if (!this.isNullOrWhitespace(value.creditExpiry)) {\n                    if (!this.setCardExpiration(cipher, value.creditExpiry)) {\n                        this.processKvp(cipher, 'Expiration', value.creditExpiry);\n                    }\n                }\n                if (!this.isNullOrWhitespace(value.password)) {\n                    this.processKvp(cipher, 'PIN', value.password);\n                }\n            } else {\n                continue;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || Object.keys(results).length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        for (const keyRing in results) {\n            if (!results.hasOwnProperty(keyRing) || this.isNullOrWhitespace(keyRing) ||\n                results[keyRing].length === 0) {\n                continue;\n            }\n\n            results[keyRing].forEach((value: any) => {\n                if (this.isNullOrWhitespace(value.display_name) || value.display_name.indexOf('http') !== 0) {\n                    return;\n                }\n\n                this.processFolder(result, keyRing);\n                const cipher = this.initLoginCipher();\n                cipher.name = value.display_name.replace('http://', '').replace('https://', '');\n                if (cipher.name.length > 30) {\n                    cipher.name = cipher.name.substring(0, 30);\n                }\n                cipher.login.password = this.getValueOrDefault(value.secret);\n                cipher.login.uris = this.makeUriArray(value.display_name);\n\n                if (value.attributes != null) {\n                    cipher.login.username = value.attributes != null ?\n                        this.getValueOrDefault(value.attributes.username_value) : null;\n                    for (const attr in value.attributes) {\n                        if (!value.attributes.hasOwnProperty(attr) || attr === 'username_value' ||\n                            attr === 'xdg:schema') {\n                            continue;\n                        }\n                        this.processKvp(cipher, attr, value.attributes[attr]);\n                    }\n                }\n\n                this.convertToNoteIfNeeded(cipher);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst NotesHeader = 'Notes\\n\\n';\nconst ApplicationsHeader = 'Applications\\n\\n';\nconst WebsitesHeader = 'Websites\\n\\n';\nconst Delimiter = '\\n---\\n';\n\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n\n        let notesData: string;\n        let applicationsData: string;\n        let websitesData: string;\n        let workingData = this.splitNewLine(data).join('\\n');\n\n        if (workingData.indexOf(NotesHeader) !== -1) {\n            const parts = workingData.split(NotesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                notesData = parts[1];\n            }\n        }\n        if (workingData.indexOf(ApplicationsHeader) !== -1) {\n            const parts = workingData.split(ApplicationsHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                applicationsData = parts[1];\n            }\n        }\n        if (workingData.indexOf(WebsitesHeader) === 0) {\n            const parts = workingData.split(WebsitesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                websitesData = parts[1];\n            }\n        }\n\n        const notes = this.parseDataCategory(notesData);\n        const applications = this.parseDataCategory(applicationsData);\n        const websites = this.parseDataCategory(websitesData);\n\n        notes.forEach(n => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(n.get('Name'));\n            cipher.notes = this.getValueOrDefault(n.get('Text'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        websites.concat(applications).forEach(w => {\n            const cipher = this.initLoginCipher();\n            const nameKey = w.has('Website name') ? 'Website name' : 'Application';\n            cipher.name = this.getValueOrDefault(w.get(nameKey), '');\n            if (!this.isNullOrWhitespace(w.get('Login name'))) {\n                if (!this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name += ': ';\n                }\n                cipher.name += w.get('Login name');\n            }\n            cipher.notes = this.getValueOrDefault(w.get('Comment'));\n            if (w.has('Website URL')) {\n                cipher.login.uris = this.makeUriArray(w.get('Website URL'));\n            }\n            cipher.login.username = this.getValueOrDefault(w.get('Login'));\n            cipher.login.password = this.getValueOrDefault(w.get('Password'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseDataCategory(data: string): Map<string, string>[] {\n        if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\n            return [];\n        }\n        const items: Map<string, string>[] = [];\n        data.split(Delimiter).forEach(p => {\n            if (p.indexOf('\\n') === -1) {\n                return;\n            }\n            const item = new Map<string, string>();\n            let itemComment: string;\n            let itemCommentKey: string;\n            p.split('\\n').forEach(l => {\n                if (itemComment != null) {\n                    itemComment += ('\\n' + l);\n                    return;\n                }\n                const colonIndex = l.indexOf(':');\n                let key: string;\n                let val: string;\n                if (colonIndex === -1) {\n                    return;\n                } else {\n                    key = l.substring(0, colonIndex);\n                    if (l.length > colonIndex + 1) {\n                        val = l.substring(colonIndex + 2);\n                    }\n                }\n                if (key != null) {\n                    item.set(key, val);\n                }\n                if (key === 'Comment' || key === 'Text') {\n                    itemComment = val;\n                    itemCommentKey = key;\n                }\n            });\n            if (itemComment != null && itemCommentKey != null) {\n                item.set(itemCommentKey, itemComment);\n            }\n            if (item.size === 0) {\n                return;\n            }\n            items.push(item);\n        });\n        return items;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { FieldType } from '../enums/fieldType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): Promise<ImportResult> {\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        const rootGroup = doc.querySelector('KeePassFile > Root > Group');\n        if (rootGroup == null) {\n            this.result.errorMessage = 'Missing `KeePassFile > Root > Group` node.';\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        this.traverse(rootGroup, true, '');\n\n        if (this.organization) {\n            this.moveFoldersToCollections(this.result);\n        }\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n        const folderIndex = this.result.folders.length;\n        let groupName = groupPrefixName;\n\n        if (!isRootNode) {\n            if (groupName !== '') {\n                groupName += '/';\n            }\n            const nameEl = this.querySelectorDirectChild(node, 'Name');\n            groupName += nameEl == null ? '-' : nameEl.textContent;\n            const folder = new FolderView();\n            folder.name = groupName;\n            this.result.folders.push(folder);\n        }\n\n        this.querySelectorAllDirectChild(node, 'Entry').forEach(entry => {\n            const cipherIndex = this.result.ciphers.length;\n\n            const cipher = this.initLoginCipher();\n            this.querySelectorAllDirectChild(entry, 'String').forEach(entryString => {\n                const valueEl = this.querySelectorDirectChild(entryString, 'Value');\n                const value = valueEl != null ? valueEl.textContent : null;\n                if (this.isNullOrWhitespace(value)) {\n                    return;\n                }\n                const keyEl = this.querySelectorDirectChild(entryString, 'Key');\n                const key = keyEl != null ? keyEl.textContent : null;\n\n                if (key === 'URL') {\n                    cipher.login.uris = this.makeUriArray(value);\n                } else if (key === 'UserName') {\n                    cipher.login.username = value;\n                } else if (key === 'Password') {\n                    cipher.login.password = value;\n                }  else if (key === 'otp') {\n                    cipher.login.totp = value.replace('key=', '');\n                } else if (key === 'Title') {\n                    cipher.name = value;\n                } else if (key === 'Notes') {\n                    cipher.notes += (value + '\\n');\n                } else {\n                    let type = FieldType.Text;\n                    const attrs = (valueEl.attributes as any);\n                    if (attrs.length > 0 && attrs.ProtectInMemory != null &&\n                        attrs.ProtectInMemory.value === 'True') {\n                        type = FieldType.Hidden;\n                    }\n                    this.processKvp(cipher, key, value, type);\n                }\n            });\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n\n            if (!isRootNode) {\n                this.result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        this.querySelectorAllDirectChild(node, 'Group').forEach(group => {\n            this.traverse(group, false, groupName);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(value.Title)) {\n                return;\n            }\n\n            value.Group = !this.isNullOrWhitespace(value.Group) && value.Group.startsWith('Root/') ?\n                value.Group.replace('Root/', '') : value.Group;\n            const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n            this.processFolder(result, groupName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(value.Title, '--');\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 6) {\n                return;\n            }\n\n            this.processFolder(result, value[0]);\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[5]) + '\\n';\n            cipher.name = this.getValueOrDefault(value[1], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[4]);\n\n            if (value.length > 7) {\n                // we have some custom fields.\n                for (let i = 7; i < value.length; i = i + 2) {\n                    this.processKvp(cipher, value[i], value[i + 1]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\nimport { IdentityView } from '../models/view/identityView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach((value, index) => {\n            const cipherIndex = result.ciphers.length;\n            let folderIndex = result.folders.length;\n            let grouping = value.grouping;\n            if (grouping != null) {\n                grouping = grouping.replace(/\\\\/g, '/').replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '');\n            }\n            const hasFolder = this.getValueOrDefault(grouping, '(none)') !== '(none)';\n            let addFolder = hasFolder;\n\n            if (hasFolder) {\n                for (let i = 0; i < result.folders.length; i++) {\n                    if (result.folders[i].name === grouping) {\n                        addFolder = false;\n                        folderIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            const cipher = this.buildBaseCipher(value);\n            if (cipher.type === CipherType.Login) {\n                cipher.notes = this.getValueOrDefault(value.extra);\n                cipher.login = new LoginView();\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.totp = this.getValueOrDefault(value.totp);\n            } else if (cipher.type === CipherType.SecureNote) {\n                this.parseSecureNote(value, cipher);\n            } else if (cipher.type === CipherType.Card) {\n                cipher.card = this.parseCard(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n            } else if (cipher.type === CipherType.Identity) {\n                cipher.identity = this.parseIdentity(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n                if (!this.isNullOrWhitespace(value.ccnum)) {\n                    // there is a card on this identity too\n                    const cardCipher = this.buildBaseCipher(value);\n                    cardCipher.identity = null;\n                    cardCipher.type = CipherType.Card;\n                    cardCipher.card = this.parseCard(value);\n                    result.ciphers.push(cardCipher);\n                }\n            }\n\n            result.ciphers.push(cipher);\n\n            if (addFolder) {\n                const f = new FolderView();\n                f.name = grouping;\n                result.folders.push(f);\n            }\n            if (hasFolder) {\n                result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private buildBaseCipher(value: any) {\n        const cipher = new CipherView();\n        if (value.hasOwnProperty('profilename') && value.hasOwnProperty('profilelanguage')) {\n            // form fill\n            cipher.favorite = false;\n            cipher.name = this.getValueOrDefault(value.profilename, '--');\n            cipher.type = CipherType.Card;\n\n            if (!this.isNullOrWhitespace(value.title) || !this.isNullOrWhitespace(value.firstname) ||\n                !this.isNullOrWhitespace(value.lastname) || !this.isNullOrWhitespace(value.address1) ||\n                !this.isNullOrWhitespace(value.phone) || !this.isNullOrWhitespace(value.username) ||\n                !this.isNullOrWhitespace(value.email)) {\n                cipher.type = CipherType.Identity;\n            }\n        } else {\n            // site or secure note\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, '0') === '1';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.type = value.url === 'http://sn' ? CipherType.SecureNote : CipherType.Login;\n        }\n        return cipher;\n    }\n\n    private parseCard(value: any): CardView {\n        const card = new CardView();\n        card.cardholderName = this.getValueOrDefault(value.ccname);\n        card.number = this.getValueOrDefault(value.ccnum);\n        card.code = this.getValueOrDefault(value.cccsc);\n        card.brand = this.getCardBrand(value.ccnum);\n\n        if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf('-') > -1) {\n            const ccexpParts = (value.ccexp as string).split('-');\n            if (ccexpParts.length > 1) {\n                card.expYear = ccexpParts[0];\n                card.expMonth = ccexpParts[1];\n                if (card.expMonth.length === 2 && card.expMonth[0] === '0') {\n                    card.expMonth = card.expMonth[1];\n                }\n            }\n        }\n\n        return card;\n    }\n\n    private parseIdentity(value: any): IdentityView {\n        const identity = new IdentityView();\n        identity.title = this.getValueOrDefault(value.title);\n        identity.firstName = this.getValueOrDefault(value.firstname);\n        identity.middleName = this.getValueOrDefault(value.middlename);\n        identity.lastName = this.getValueOrDefault(value.lastname);\n        identity.username = this.getValueOrDefault(value.username);\n        identity.company = this.getValueOrDefault(value.company);\n        identity.ssn = this.getValueOrDefault(value.ssn);\n        identity.address1 = this.getValueOrDefault(value.address1);\n        identity.address2 = this.getValueOrDefault(value.address2);\n        identity.address3 = this.getValueOrDefault(value.address3);\n        identity.city = this.getValueOrDefault(value.city);\n        identity.state = this.getValueOrDefault(value.state);\n        identity.postalCode = this.getValueOrDefault(value.zip);\n        identity.country = this.getValueOrDefault(value.country);\n        identity.email = this.getValueOrDefault(value.email);\n        identity.phone = this.getValueOrDefault(value.phone);\n\n        if (!this.isNullOrWhitespace(identity.title)) {\n            identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n        }\n\n        return identity;\n    }\n\n    private parseSecureNote(value: any, cipher: CipherView) {\n        const extraParts = this.splitNewLine(value.extra);\n        let processedNote = false;\n\n        if (extraParts.length) {\n            const typeParts = extraParts[0].split(':');\n            if (typeParts.length > 1 && typeParts[0] === 'NoteType' &&\n                (typeParts[1] === 'Credit Card' || typeParts[1] === 'Address')) {\n                if (typeParts[1] === 'Credit Card') {\n                    const mappedData = this.parseSecureNoteMapping<CardView>(cipher, extraParts, {\n                        'Number': 'number',\n                        'Name on Card': 'cardholderName',\n                        'Security Code': 'code',\n                        // LP provides date in a format like 'June,2020'\n                        // Store in expMonth, then parse and modify\n                        'Expiration Date': 'expMonth',\n                    });\n\n                    if (this.isNullOrWhitespace(mappedData.expMonth) || mappedData.expMonth === ',') {\n                        // No expiration data\n                        mappedData.expMonth = undefined;\n                    } else {\n                        const [monthString, year] = mappedData.expMonth.split(',');\n                        // Parse month name into number\n                        if (!this.isNullOrWhitespace(monthString)) {\n                            const month = new Date(Date.parse(monthString.trim() + ' 1, 2012')).getMonth() + 1;\n                            if (isNaN(month)) {\n                                mappedData.expMonth = undefined;\n                            } else {\n                                mappedData.expMonth = month.toString();\n                            }\n                        } else {\n                            mappedData.expMonth = undefined;\n                        }\n                        if (!this.isNullOrWhitespace(year)) {\n                            mappedData.expYear = year;\n                        }\n                    }\n\n                    cipher.type = CipherType.Card;\n                    cipher.card = mappedData;\n                } else if (typeParts[1] === 'Address') {\n                    const mappedData = this.parseSecureNoteMapping<IdentityView>(cipher, extraParts, {\n                        'Title': 'title',\n                        'First Name': 'firstName',\n                        'Last Name': 'lastName',\n                        'Middle Name': 'middleName',\n                        'Company': 'company',\n                        'Address 1': 'address1',\n                        'Address 2': 'address2',\n                        'Address 3': 'address3',\n                        'City / Town': 'city',\n                        'State': 'state',\n                        'Zip / Postal Code': 'postalCode',\n                        'Country': 'country',\n                        'Email Address': 'email',\n                        'Username': 'username',\n                    });\n                    cipher.type = CipherType.Identity;\n                    cipher.identity = mappedData;\n                }\n                processedNote = true;\n            }\n        }\n\n        if (!processedNote) {\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n            cipher.notes = this.getValueOrDefault(value.extra);\n        }\n    }\n\n    private parseSecureNoteMapping<T>(cipher: CipherView, extraParts: string[], map: any): T {\n        const dataObj: any = {};\n\n        let processingNotes = false;\n        extraParts.forEach(extraPart => {\n            let key: string = null;\n            let val: string = null;\n            if (!processingNotes) {\n                if (this.isNullOrWhitespace(extraPart)) {\n                    return;\n                }\n                const colonIndex = extraPart.indexOf(':');\n                if (colonIndex === -1) {\n                    key = extraPart;\n                } else {\n                    key = extraPart.substring(0, colonIndex);\n                    if (extraPart.length > colonIndex) {\n                        val = extraPart.substring(colonIndex + 1);\n                    }\n                }\n                if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === 'NoteType') {\n                    return;\n                }\n            }\n\n            if (processingNotes) {\n                cipher.notes += ('\\n' + extraPart);\n            } else if (key === 'Notes') {\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes += ('\\n' + val);\n                } else {\n                    cipher.notes = val;\n                }\n                processingNotes = true;\n            } else if (map.hasOwnProperty(key)) {\n                dataObj[map[key]] = val;\n            } else {\n                this.processKvp(cipher, key, val);\n            }\n        });\n\n        return dataObj;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 4) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[1]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.DisplayName, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.login.username = this.getValueOrDefault(value.UserName);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 3) {\n                return;\n            }\n\n            const folderName = this.getValueOrDefault(value[0], 'Unassigned') !== 'Unassigned' ? value[0] : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[2], '--');\n\n            if (value[1] === 'Web Logins' || value[1] === 'Login') {\n                cipher.login.uris = this.makeUriArray(value[4]);\n                cipher.login.username = this.getValueOrDefault(value[5]);\n                cipher.login.password = this.getValueOrDefault(value[6]);\n                cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split('\\\\n').join('\\n') : null;\n            } else if (value.length > 3) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                for (let i = 3; i < value.length; i++) {\n                    if (!this.isNullOrWhitespace(value[i])) {\n                        cipher.notes += (value[i] + '\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n                cipher.name = value[1] + ': ' + cipher.name;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MykiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.nickname, '--');\n            cipher.notes = this.getValueOrDefault(value.additionalInfo);\n\n            if (value.url !== undefined) {\n                // Accounts\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.totp = this.getValueOrDefault(value.twoFactAuthToken);\n            } else if (value.cardNumber !== undefined) {\n                // Cards\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\n                cipher.card.expYear = this.getValueOrDefault(value.exp_year);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n            } else if (value.firstName !== undefined) {\n                // Identities\n                cipher.identity = new IdentityView();\n                cipher.type = CipherType.Identity;\n                cipher.identity.title = this.getValueOrDefault(value.title);\n                cipher.identity.firstName = this.getValueOrDefault(value.firstName);\n                cipher.identity.middleName = this.getValueOrDefault(value.middleName);\n                cipher.identity.lastName = this.getValueOrDefault(value.lastName);\n                cipher.identity.phone = this.getValueOrDefault(value.number);\n                cipher.identity.email = this.getValueOrDefault(value.email);\n                cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\n                cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\n                cipher.identity.city = this.getValueOrDefault(value.city);\n                cipher.identity.country = this.getValueOrDefault(value.country);\n                cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\n            } else if (value.content !== undefined) {\n                // Notes\n                cipher.secureNote = new SecureNoteView();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.content);\n            } else {\n                return;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { LoginView } from '../models/view/loginView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\ntype nodePassCsvParsed = {\n    name: string;\n    url: string;\n    username: string;\n    password: string;\n    note: string;\n    cardholdername: string;\n    cardnumber: string;\n    cvc: string;\n    expirydate: string;\n    zipcode: string;\n    folder: string;\n    full_name: string;\n    phone_number: string;\n    email: string;\n    address1: string;\n    address2: string;\n    city: string;\n    country: string;\n    state: string;\n};\n\nexport class NordPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results: nodePassCsvParsed[] = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(record => {\n\n            const recordType = this.evaluateType(record);\n            if (recordType === undefined) {\n                return;\n            }\n\n            if (!this.organization) {\n                this.processFolder(result, record.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.name = this.getValueOrDefault(record.name, '--');\n            cipher.notes = this.getValueOrDefault(record.note);\n\n            switch (recordType) {\n                case CipherType.Login:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.username = this.getValueOrDefault(record.username);\n                    cipher.login.password = this.getValueOrDefault(record.password);\n                    cipher.login.uris = this.makeUriArray(record.url);\n                    break;\n                case CipherType.Card:\n                    cipher.type = CipherType.Card;\n                    cipher.card.cardholderName = this.getValueOrDefault(record.cardholdername);\n                    cipher.card.number = this.getValueOrDefault(record.cardnumber);\n                    cipher.card.code = this.getValueOrDefault(record.cvc);\n                    cipher.card.brand = this.getCardBrand(cipher.card.number);\n                    this.setCardExpiration(cipher, record.expirydate);\n                    break;\n\n                case CipherType.Identity:\n                    cipher.type = CipherType.Identity;\n\n                    this.processName(cipher, this.getValueOrDefault(record.full_name));\n                    cipher.identity.address1 = this.getValueOrDefault(record.address1);\n                    cipher.identity.address2 = this.getValueOrDefault(record.address2);\n                    cipher.identity.city = this.getValueOrDefault(record.city);\n                    cipher.identity.state = this.getValueOrDefault(record.state);\n                    cipher.identity.postalCode = this.getValueOrDefault(record.zipcode);\n                    cipher.identity.country = this.getValueOrDefault(record.country);\n                    if (cipher.identity.country != null) {\n                        cipher.identity.country = cipher.identity.country.toUpperCase();\n                    }\n                    cipher.identity.email = this.getValueOrDefault(record.email);\n                    cipher.identity.phone = this.getValueOrDefault(record.phone_number);\n                    break;\n                case CipherType.SecureNote:\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    break;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private evaluateType(record: nodePassCsvParsed): CipherType {\n\n        if (!this.isNullOrWhitespace(record.username)) {\n            return CipherType.Login;\n        }\n\n        if (!this.isNullOrWhitespace(record.cardnumber)) {\n            return CipherType.Card;\n        }\n\n        if (!this.isNullOrWhitespace(record.full_name)) {\n            return CipherType.Identity;\n        }\n\n        if (!this.isNullOrWhitespace(record.note)) {\n            return CipherType.SecureNote;\n        }\n\n        return undefined;\n    }\n\n    private processName(cipher: CipherView, fullName: string) {\n\n        if (this.isNullOrWhitespace(fullName)) {\n            return;\n        }\n\n        const nameParts = fullName.split(' ');\n        if (nameParts.length > 0) {\n            cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n        }\n        if (nameParts.length === 2) {\n            cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n        } else if (nameParts.length >= 3) {\n            cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n            cipher.identity.lastName = nameParts.slice(2, nameParts.length).join(' ');\n        }\n    }\n}\n","import { BaseImporter } from '../baseImporter';\nimport { Importer } from '../importer';\n\nimport { ImportResult } from '../../models/domain/importResult';\n\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { IdentityView } from '../../models/view/identityView';\nimport { PasswordHistoryView } from '../../models/view/passwordHistoryView';\nimport { SecureNoteView } from '../../models/view/secureNoteView';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { FieldType } from '../../enums/fieldType';\nimport { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): Promise<ImportResult> {\n        data.split(this.newLineRegex).forEach(line => {\n            if (this.isNullOrWhitespace(line) || line[0] !== '{') {\n                return;\n            }\n            const item = JSON.parse(line);\n            if (item.trashed === true) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n\n            if (this.isNullOrWhitespace(item.hmac)) {\n                this.processStandardItem(item, cipher);\n            } else {\n                this.processWinOpVaultItem(item, cipher);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    private processWinOpVaultItem(item: any, cipher: CipherView) {\n        if (item.overview != null) {\n            cipher.name = this.getValueOrDefault(item.overview.title);\n            if (item.overview.URLs != null) {\n                const urls: string[] = [];\n                item.overview.URLs.forEach((url: any) => {\n                    if (!this.isNullOrWhitespace(url.u)) {\n                        urls.push(url.u);\n                    }\n                });\n                cipher.login.uris = this.makeUriArray(urls);\n            }\n        }\n\n        if (item.details != null) {\n            if (item.details.passwordHistory != null) {\n                this.parsePasswordHistory(item.details.passwordHistory, cipher);\n            }\n            if (!this.isNullOrWhitespace(item.details.ccnum) || !this.isNullOrWhitespace(item.details.cvv)) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            } else if (!this.isNullOrWhitespace(item.details.firstname) ||\n                !this.isNullOrWhitespace(item.details.address1)) {\n                cipher.type = CipherType.Identity;\n                cipher.identity = new IdentityView();\n            }\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\n                cipher.login.password = item.details.password;\n            }\n            if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n                cipher.notes = item.details.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (item.details.fields != null) {\n                this.parseFields(item.details.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.details.sections != null) {\n                item.details.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n        }\n    }\n\n    private processStandardItem(item: any, cipher: CipherView) {\n        cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n        cipher.name = this.getValueOrDefault(item.title);\n\n        if (item.typeName === 'securenotes.SecureNote') {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        } else if (item.typeName === 'wallet.financial.CreditCard') {\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n        } else if (item.typeName === 'identities.Identity') {\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n        } else {\n            cipher.login.uris = this.makeUriArray(item.location);\n        }\n\n        if (item.secureContents != null) {\n            if (item.secureContents.passwordHistory != null) {\n                this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\n            }\n            if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n                cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (cipher.type === CipherType.Login) {\n                if (!this.isNullOrWhitespace(item.secureContents.password)) {\n                    cipher.login.password = item.secureContents.password;\n                }\n                if (item.secureContents.URLs != null) {\n                    const urls: string[] = [];\n                    item.secureContents.URLs.forEach((u: any) => {\n                        if (!this.isNullOrWhitespace(u.url)) {\n                            urls.push(u.url);\n                        }\n                    });\n                    if (urls.length > 0) {\n                        cipher.login.uris = this.makeUriArray(urls);\n                    }\n                }\n            }\n            if (item.secureContents.fields != null) {\n                this.parseFields(item.secureContents.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.secureContents.sections != null) {\n                item.secureContents.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n        }\n    }\n\n    private parsePasswordHistory(items: any[], cipher: CipherView) {\n        const maxSize = items.length > 5 ? 5 : items.length;\n        cipher.passwordHistory = items\n            .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n            .sort((a, b) => b.time - a.time)\n            .slice(0, maxSize)\n            .map((h: any) => {\n                const ph = new PasswordHistoryView();\n                ph.password = h.value;\n                ph.lastUsedDate = new Date(('' + h.time).length >= 13 ? h.time : h.time * 1000);\n                return ph;\n            });\n    }\n\n    private parseFields(fields: any[], cipher: CipherView, designationKey: string, valueKey: string, nameKey: string) {\n        fields.forEach((field: any) => {\n            if (field[valueKey] == null || field[valueKey].toString().trim() === '') {\n                return;\n            }\n\n            const fieldValue = field[valueKey].toString();\n            const fieldDesignation = field[designationKey] != null ? field[designationKey].toString() : null;\n\n            if (cipher.type === CipherType.Login) {\n                if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === 'username') {\n                    cipher.login.username = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.password) && fieldDesignation === 'password') {\n                    cipher.login.password = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.totp) && fieldDesignation != null &&\n                    fieldDesignation.startsWith('TOTP_')) {\n                    cipher.login.totp = fieldValue;\n                    return;\n                }\n            } else if (cipher.type === CipherType.Card) {\n                if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === 'ccnum') {\n                    cipher.card.number = fieldValue;\n                    cipher.card.brand = this.getCardBrand(fieldValue);\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === 'cvv') {\n                    cipher.card.code = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && fieldDesignation === 'cardholder') {\n                    cipher.card.cardholderName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.expiration) && fieldDesignation === 'expiry' &&\n                    fieldValue.length === 6) {\n                    cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n                    if (cipher.card.expMonth[0] === '0') {\n                        cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                    }\n                    cipher.card.expYear = (fieldValue as string).substr(0, 4);\n                    return;\n                } else if (fieldDesignation === 'type') {\n                    // Skip since brand was determined from number above\n                    return;\n                }\n            } else if (cipher.type === CipherType.Identity) {\n                const identity = cipher.identity;\n                if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === 'firstname') {\n                    identity.firstName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === 'lastname') {\n                    identity.lastName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === 'initial') {\n                    identity.middleName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === 'defphone') {\n                    identity.phone = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === 'company') {\n                    identity.company = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === 'email') {\n                    identity.email = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === 'username') {\n                    identity.username = fieldValue;\n                    return;\n                } else if (fieldDesignation === 'address') {\n                    // fieldValue is an object casted into a string, so access the plain value instead\n                    const { street, city, country, zip } = field[valueKey];\n                    identity.address1 = this.getValueOrDefault(street);\n                    identity.city = this.getValueOrDefault(city);\n                    if (!this.isNullOrWhitespace(country)) {\n                        identity.country = country.toUpperCase();\n                    }\n                    identity.postalCode = this.getValueOrDefault(zip);\n                    return;\n                }\n            }\n\n            const fieldName = this.isNullOrWhitespace(field[nameKey]) ? 'no_name' : field[nameKey];\n            if (fieldName === 'password' && cipher.passwordHistory != null &&\n                cipher.passwordHistory.some(h => h.password === fieldValue)) {\n                return;\n            }\n\n            const fieldType = field.k === 'concealed' ? FieldType.Hidden : FieldType.Text;\n            this.processKvp(cipher, fieldName, fieldValue, fieldType);\n        });\n    }\n}\n","import { Importer } from '../importer';\nimport { IgnoredProperties, OnePasswordCsvImporter } from './onepasswordCsvImporter';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { IdentityView } from '../../models/view/identityView';\n\nexport class OnePasswordMacCsvImporter extends OnePasswordCsvImporter implements Importer {\n    setCipherType(value: any, cipher: CipherView) {\n        const onePassType = this.getValueOrDefault(this.getProp(value, 'type'), 'Login');\n        switch (onePassType) {\n            case 'Credit Card':\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                IgnoredProperties.push('type');\n                break;\n            case 'Identity':\n                cipher.type = CipherType.Identity;\n                cipher.identity = new IdentityView();\n                IgnoredProperties.push('type');\n                break;\n            case 'Login':\n            case 'Secure Note':\n                IgnoredProperties.push('type');\n            default:\n                break;\n        }\n    }\n}\n","import { CipherView } from '../../models/view/cipherView';\n\nexport class CipherImportContext {\n    lowerProperty: string;\n    constructor(public importRecord: any, public property: string, public cipher: CipherView) {\n        this.lowerProperty = property.toLowerCase();\n    }\n}\n","import { Importer } from '../importer';\nimport { CipherImportContext } from './cipherImportContext';\nimport { OnePasswordCsvImporter } from './onepasswordCsvImporter';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { IdentityView } from '../../models/view/identityView';\nimport { LoginView } from '../../models/view/loginView';\n\nexport class OnePasswordWinCsvImporter extends OnePasswordCsvImporter implements Importer {\n    constructor() {\n        super();\n        this.identityPropertyParsers.push(this.setIdentityAddress);\n    }\n\n    setCipherType(value: any, cipher: CipherView) {\n        cipher.type = CipherType.Login;\n        cipher.login = new LoginView();\n\n        if (!this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: number/i)) &&\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: expiry date/i))) {\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n        }\n\n        if (!this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: first name/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: initial/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: last name/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /internet \\d+: email/i))) {\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n        }\n    }\n\n    setIdentityAddress(context: CipherImportContext) {\n        if (context.lowerProperty.match(/address \\d+: address/i)) {\n            this.processKvp(context.cipher, 'address', context.importRecord[context.property]);\n            return true;\n        }\n        return false;\n    }\n\n    setCreditCardExpiry(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.expiration) && context.lowerProperty.includes('expiry date')) {\n            const expSplit = (context.importRecord[context.property] as string).split('/');\n            context.cipher.card.expMonth = expSplit[0];\n            if (context.cipher.card.expMonth[0] === '0' && context.cipher.card.expMonth.length === 2) {\n                context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n            }\n            context.cipher.card.expYear = expSplit[2].length > 4 ? expSplit[2].substr(0, 4) : expSplit[2];\n            return true;\n        }\n        return false;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let headers: string[] = null;\n        results.forEach(value => {\n            if (headers == null) {\n                headers = value.map((v: string) => v);\n                return;\n            }\n\n            if (value.length < 2 || value.length !== headers.length) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value[1])) {\n                if (this.organization) {\n                    const tags = (value[1] as string).split(',');\n                    tags.forEach(tag => {\n                        tag = tag.trim();\n                        let addCollection = true;\n                        let collectionIndex = result.collections.length;\n\n                        for (let i = 0; i < result.collections.length; i++) {\n                            if (result.collections[i].name === tag) {\n                                addCollection = false;\n                                collectionIndex = i;\n                                break;\n                            }\n                        }\n\n                        if (addCollection) {\n                            const collection = new CollectionView();\n                            collection.name = tag;\n                            result.collections.push(collection);\n                        }\n\n                        result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                    });\n                } else {\n                    const tags = (value[1] as string).split(',');\n                    const tag = tags.length > 0 ? tags[0].trim() : null;\n                    this.processFolder(result, tag);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            for (let i = 2; i < value.length; i++) {\n                const header = headers[i].trim().toLowerCase();\n                if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n                    continue;\n                }\n\n                if (this.usernameFieldNames.indexOf(header) > -1) {\n                    cipher.login.username = value[i];\n                } else if (this.passwordFieldNames.indexOf(header) > -1) {\n                    cipher.login.password = value[i];\n                } else if (this.uriFieldNames.indexOf(header) > -1) {\n                    cipher.login.uris = this.makeUriArray(value[i]);\n                } else {\n                    this.processKvp(cipher, headers[i], value[i]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValue('category', value));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValue('description', value);\n            cipher.name = this.getValueOrDefault(this.getValue('title', value), '--');\n            cipher.login.username = this.getValue('username', value);\n            cipher.login.password = this.getValue('password', value);\n            cipher.login.uris = this.makeUriArray(this.getValue('site', value));\n            this.processKvp(cipher, 'Password 2', this.getValue('password2', value));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private getValue(key: string, value: any) {\n        return this.getValueOrDefault(value[key], this.getValueOrDefault(value[(' ' + key)]));\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach((credential: any) => {\n            if (credential.tags != null && credential.tags.length > 0) {\n                const folderName = credential.tags[0].text;\n                this.processFolder(result, folderName);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = credential.label;\n\n            cipher.login.username = this.getValueOrDefault(credential.username);\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.url);\n            cipher.notes += this.getValueOrDefault(credential.description, '');\n            if (credential.otp != null) {\n                cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\n            }\n\n            if (credential.custom_fields != null) {\n                credential.custom_fields.forEach((customField: any) => {\n                    switch (customField.field_type) {\n                        case 'text':\n                        case 'password':\n                            this.processKvp(cipher, customField.label, customField.value);\n                            break;\n                    }\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\n            const tags: string[] = tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0 ?\n                tagsJson.tags.map((tagJson: string) => {\n                    try {\n                        const t = JSON.parse(tagJson);\n                        return this.getValueOrDefault(t.tag);\n                    } catch {\n                        // Ignore error\n                    }\n                    return null;\n                }).filter((t: string) => !this.isNullOrWhitespace(t)) : null;\n\n            if (this.organization && tags != null && tags.length > 0) {\n                tags.forEach(tag => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === tag) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = tag;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization && tags != null && tags.length > 0) {\n                this.processFolder(result, tags[0]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes, '');\n            cipher.notes += ('\\n\\n' + this.getValueOrDefault(value['Shared Notes'], '') + '\\n');\n            cipher.name = this.getValueOrDefault(value['Entry Name'], '--');\n            cipher.login.username = this.getValueOrDefault(value['User ID']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                value.__parsed_extra.forEach((extra: string) => {\n                    if (!this.isNullOrWhitespace(extra)) {\n                        cipher.notes += ('\\n' + extra);\n                    }\n                });\n            }\n\n            const fieldsJson = !this.isNullOrWhitespace(value['Extra Fields']) ?\n                JSON.parse(value['Extra Fields']) : null;\n            const fields = fieldsJson != null && fieldsJson.extraFields != null &&\n                fieldsJson.extraFields.length > 0 ? fieldsJson.extraFields.map((fieldJson: string) => {\n                    try {\n                        return JSON.parse(fieldJson);\n                    } catch {\n                        // Ignore error\n                    }\n                    return null;\n                }) : null;\n            if (fields != null) {\n                fields.forEach((f: any) => {\n                    if (f != null) {\n                        this.processKvp(cipher, f.name, f.data);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let newVersion = true;\n        results.forEach(value => {\n            if (value.length !== 5 && value.length < 9) {\n                return;\n            }\n            const altFormat = value.length === 10 && value[0] === '0';\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], '--');\n            cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\n            cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\n            if (value.length === 5) {\n                newVersion = false;\n                cipher.notes = this.getValueOrDefault(value[4]);\n                cipher.login.uris = this.makeUriArray(value[3]);\n            } else {\n                const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], '(None)');\n                let folderName = folder !== '(None)' ? folder.split('\\\\').join('/') : null;\n                if (folderName != null) {\n                    folderName = folder.split(' > ').join('/');\n                    folderName = folder.split('>').join('/');\n                }\n                this.processFolder(result, folderName);\n                cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (newVersion && this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, string>();\n        results.folders.forEach((value: any) => {\n            foldersMap.set(value.id, value.name);\n        });\n        const foldersIndexMap = new Map<string, number>();\n        foldersMap.forEach((val, key) => {\n            foldersIndexMap.set(key, result.folders.length);\n            const f = new FolderView();\n            f.name = val;\n            result.folders.push(f);\n        });\n\n        results.items.forEach((value: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.uris = this.makeUriArray(value.login_url);\n\n            if (value.folder != null && foldersIndexMap.has(value.folder)) {\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(value.folder)]);\n            }\n\n            if (value.identifiers == null) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n                cipher.notes = value.identifiers.notes.split('\\\\r\\\\n').join('\\n').split('\\\\n').join('\\n');\n            }\n\n            if (value.type === 'CreditCard') {\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n            }\n\n            for (const property in value.identifiers) {\n                if (!value.identifiers.hasOwnProperty(property)) {\n                    continue;\n                }\n                const valObj = value.identifiers[property];\n                const val = valObj != null ? valObj.toString() : null;\n                if (this.isNullOrWhitespace(val) || property === 'notes' || property === 'ignoreItemInSecurityScore') {\n                    continue;\n                }\n\n                if (property === 'custom_fields') {\n                    valObj.forEach((cf: any) => {\n                        this.processKvp(cipher, cf.name, cf.value);\n                    });\n                    continue;\n                }\n\n                if (cipher.type === CipherType.Card) {\n                    if (property === 'cardNumber') {\n                        cipher.card.number = val;\n                        cipher.card.brand = this.getCardBrand(val);\n                        continue;\n                    } else if (property === 'nameOnCard') {\n                        cipher.card.cardholderName = val;\n                        continue;\n                    } else if (property === 'security_code') {\n                        cipher.card.code = val;\n                        continue;\n                    } else if (property === 'expires') {\n                        try {\n                            const expDate = new Date(val);\n                            cipher.card.expYear = expDate.getFullYear().toString();\n                            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                        } catch {\n                            // Ignore error\n                        }\n                        continue;\n                    } else if (property === 'cardType') {\n                        continue;\n                    }\n                } else {\n                    if ((property === 'username' || property === 'email') &&\n                        this.isNullOrWhitespace(cipher.login.username)) {\n                        cipher.login.username = val;\n                        continue;\n                    } else if (property === 'password') {\n                        cipher.login.password = val;\n                        continue;\n                    } else if (property === 'totp') {\n                        cipher.login.totp = val;\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(property) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                        continue;\n                    }\n                }\n\n                this.processKvp(cipher, property, val);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const records = doc.querySelectorAll('PasswordManager > record');\n        Array.from(records).forEach(record => {\n            const category = this.querySelectorDirectChild(record, 'Category');\n            const categoryText = category != null && !this.isNullOrWhitespace(category.textContent) &&\n                category.textContent !== 'Unfiled' ? category.textContent : null;\n            this.processFolder(result, categoryText);\n\n            const accountName = this.querySelectorDirectChild(record, 'Account-Name');\n            const userId = this.querySelectorDirectChild(record, 'User-Id');\n            const password = this.querySelectorDirectChild(record, 'Password');\n            const url = this.querySelectorDirectChild(record, 'URL');\n            const notes = this.querySelectorDirectChild(record, 'Notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = accountName != null ? this.getValueOrDefault(accountName.textContent, '--') : '--';\n            cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : '';\n            cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            const attributes: string[] = [];\n            for (let i = 1; i <= 10; i++) {\n                attributes.push('Attribute-' + i);\n            }\n\n            this.querySelectorAllDirectChild(record, attributes.join(',')).forEach(attr => {\n                if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === 'null') {\n                    return;\n                }\n                this.processKvp(cipher, attr.tagName, attr.textContent);\n            });\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const passwordSafe = doc.querySelector('passwordsafe');\n        if (passwordSafe == null) {\n            result.errorMessage = 'Missing `passwordsafe` node.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const notesDelimiter = passwordSafe.getAttribute('delimiter');\n        const entries = doc.querySelectorAll('passwordsafe > entry');\n        Array.from(entries).forEach(entry => {\n            const group = this.querySelectorDirectChild(entry, 'group');\n            const groupText = group != null && !this.isNullOrWhitespace(group.textContent) ?\n                group.textContent.split('.').join('/') : null;\n            this.processFolder(result, groupText);\n\n            const title = this.querySelectorDirectChild(entry, 'title');\n            const username = this.querySelectorDirectChild(entry, 'username');\n            const email = this.querySelectorDirectChild(entry, 'email');\n            const password = this.querySelectorDirectChild(entry, 'password');\n            const url = this.querySelectorDirectChild(entry, 'url');\n            const notes = this.querySelectorDirectChild(entry, 'notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = title != null ? this.getValueOrDefault(title.textContent, '--') : '--';\n            cipher.notes = notes != null ?\n                this.getValueOrDefault(notes.textContent, '').split(notesDelimiter).join('\\n') : null;\n            cipher.login.username = username != null ? this.getValueOrDefault(username.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n                cipher.login.username = this.getValueOrDefault(email.textContent);\n            } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n                cipher.notes = this.isNullOrWhitespace(cipher.notes) ? 'Email: ' + email.textContent\n                    : (cipher.notes + '\\n' + 'Email: ' + email.textContent);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 1) {\n                return;\n            }\n            if (value.length > 5) {\n                this.processFolder(result, value[5]);\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            if (value.length > 4) {\n                cipher.notes = this.getValueOrDefault(value[4], '').split('¬').join('\\n');\n            }\n            if (value.length > 2) {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n            }\n            if (value.length > 3) {\n                cipher.login.password = this.getValueOrDefault(value[3]);\n            }\n            if (value.length > 1) {\n                cipher.login.uris = this.makeUriArray(value[1]);\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.trash === 'true') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.notes);\n            if (value.type === 'LoginItem') {\n                cipher.login.uris = this.makeUriArray(value.website);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            } else if (value.type === 'CreditCardItem') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.verification);\n\n                try {\n                    const expMonth = this.getValueOrDefault(value.expiryMonth);\n                    if (expMonth != null) {\n                        const expMonthNumber = parseInt(expMonth, null);\n                        if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\n                            cipher.card.expMonth = expMonthNumber.toString();\n                        }\n                    }\n                } catch {\n                    // Ignore error\n                }\n                try {\n                    const expYear = this.getValueOrDefault(value.expiryYear);\n                    if (expYear != null) {\n                        const expYearNumber = parseInt(expYear, null);\n                        if (expYearNumber != null) {\n                            cipher.card.expYear = expYearNumber.toString();\n                        }\n                    }\n                } catch {\n                    // Ignore error\n                }\n\n                const pin = this.getValueOrDefault(value.pin);\n                if (pin != null) {\n                    this.processKvp(cipher, 'PIN', pin);\n                }\n                const zip = this.getValueOrDefault(value.zipCode);\n                if (zip != null) {\n                    this.processKvp(cipher, 'Zip Code', zip);\n                }\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let i = 1;\n        results.forEach(value => {\n            const folder = !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith('/') ?\n                value.Folder.replace('/', '') : value.Folder;\n            const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value.Login);\n            cipher.login.password = this.getValueOrDefault(value.Pwd);\n            cipher.login.uris = this.makeUriArray(value.Url);\n\n            if (!this.isNullOrWhitespace(value.Rf_fields)) {\n                let fields: string[] = [value.Rf_fields];\n                if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                    fields = fields.concat(value.__parsed_extra);\n                }\n                fields.forEach((field: string) => {\n                    const parts = field.split(':');\n                    if (parts.length < 3) {\n                        return;\n                    }\n                    const key = parts[0] === '-no-name-' ? null : parts[0];\n                    const val = parts.length === 4 && parts[2] === 'rck' ? parts[1] : parts[2];\n                    this.processKvp(cipher, key, val);\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n\n            if (i === results.length && cipher.name === '--' && this.isNullOrWhitespace(cipher.login.password)) {\n                return;\n            }\n\n            result.ciphers.push(cipher);\n            i++;\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SafariCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Title, '--');\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            cipher.login.totp = this.getValueOrDefault(value.OTPAuth);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { FieldType } from '../enums/fieldType';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const db = doc.querySelector('database');\n        if (db == null) {\n            result.errorMessage = 'Missing `database` node.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, number>();\n\n        Array.from(doc.querySelectorAll('database > label')).forEach(labelEl => {\n            const name = labelEl.getAttribute('name');\n            const id = labelEl.getAttribute('id');\n            if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n                foldersMap.set(id, result.folders.length);\n                const folder = new FolderView();\n                folder.name = name;\n                result.folders.push(folder);\n            }\n        });\n\n        Array.from(doc.querySelectorAll('database > card')).forEach(cardEl => {\n            if (cardEl.getAttribute('template') === 'true' || cardEl.getAttribute('deleted') === 'true') {\n                return;\n            }\n\n            const labelIdEl = this.querySelectorDirectChild(cardEl, 'label_id');\n            if (labelIdEl != null) {\n                const labelId = labelIdEl.textContent;\n                if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n                    result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(cardEl.getAttribute('title'), '--');\n\n            if (cardEl.getAttribute('star') === 'true') {\n                cipher.favorite = true;\n            }\n\n            const cardType = cardEl.getAttribute('type');\n            if (cardType === 'note') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            } else {\n                Array.from(this.querySelectorAllDirectChild(cardEl, 'field')).forEach(fieldEl => {\n                    const text = fieldEl.textContent;\n                    if (this.isNullOrWhitespace(text)) {\n                        return;\n                    }\n                    const name = fieldEl.getAttribute('name');\n                    const fieldType = this.getValueOrDefault(fieldEl.getAttribute('type'), '').toLowerCase();\n                    if (fieldType === 'login') {\n                        cipher.login.username = text;\n                    } else if (fieldType === 'password' || fieldType === 'secret') {\n                        // safeInCloud allows for more than one password. we just insert them here and find the one used as password later\n                        this.processKvp(cipher, name, text, FieldType.Hidden);\n                    } else if (fieldType === 'one_time_password') {\n                        cipher.login.totp = text;\n                    } else if (fieldType === 'notes') {\n                        cipher.notes += (text + '\\n');\n                    } else if (fieldType === 'weblogin' || fieldType === 'website') {\n                        cipher.login.uris = this.makeUriArray(text);\n                    }\n                    else {\n                        this.processKvp(cipher, name, text);\n                    }\n                });\n            }\n\n            Array.from(this.querySelectorAllDirectChild(cardEl, 'notes')).forEach(notesEl => {\n                cipher.notes += (notesEl.textContent + '\\n');\n            });\n\n            this.setPassword(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    // Choose a password from all passwords. Take one that has password in its name, or the first one if there is no such entry\n    // if its name is password, we can safely remove it form the fields. otherwise, it would maybe be best to keep it as a hidden field\n    setPassword(cipher: CipherView) {\n        const candidates = cipher.fields.filter(field => field.type === FieldType.Hidden);\n        if (!candidates.length) {\n            return;\n        }\n\n        let choice: FieldView;\n        for (const field of candidates) {\n            if (this.passwordFieldNames.includes(field.name.toLowerCase())) {\n                choice = field;\n                cipher.fields = cipher.fields.filter(f => f !== choice);\n                break;\n            }\n        }\n\n        if (!choice) {\n            choice = candidates[0];\n        }\n\n        cipher.login.password = choice.value;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), '--');\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Title);\n            cipher.notes = this.getValueOrDefault(value.Comment);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view/cipherView';\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 3) {\n                return;\n            }\n\n            this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 2], '');\n            cipher.name = this.getValueOrDefault(value[1], '--');\n\n            if (value[0] === 'Web Logins' || value[0] === 'Servers' || value[0] === 'Email Accounts') {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n                cipher.login.password = this.getValueOrDefault(value[3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n                this.parseFieldsToNotes(cipher, 5, value);\n            } else {\n                this.parseFieldsToNotes(cipher, 2, value);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n        // last 3 rows do not get parsed\n        for (let i = startIndex; i < value.length - 3; i++) {\n            if (this.isNullOrWhitespace(value[i])) {\n                continue;\n            }\n            cipher.notes += (value[i] + '\\n');\n        }\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const loginNodes = doc.querySelectorAll('root > Database > Logins > Login');\n        Array.from(loginNodes).forEach(loginNode => {\n            const accountId = loginNode.getAttribute('ID');\n            if (this.isNullOrWhitespace(accountId)) {\n                return;\n            }\n\n            const usernameText = loginNode.getAttribute('Name');\n            const passwordText = loginNode.getAttribute('Password');\n            let titleText: string = null;\n            let linkText: string = null;\n            let notesText: string = null;\n            let groupId: string = null;\n            let groupText: string = null;\n\n            const accountLogin = doc.querySelector('root > Database > Accounts > Account > ' +\n                'LoginLinks > Login[SourceLoginID=\"' + accountId + '\"]');\n            if (accountLogin != null) {\n                const account = accountLogin.parentElement.parentElement;\n                if (account != null) {\n                    titleText = account.getAttribute('Name');\n                    linkText = account.getAttribute('Link');\n                    groupId = account.getAttribute('ParentID');\n                    notesText = account.getAttribute('Comments');\n                    if (!this.isNullOrWhitespace(notesText)) {\n                        notesText = notesText.split('/n').join('\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(groupId)) {\n                groupText = this.buildGroupText(doc, groupId, '');\n                this.processFolder(result, groupText);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(titleText, '--');\n            cipher.notes = this.getValueOrDefault(notesText);\n            cipher.login.username = this.getValueOrDefault(usernameText);\n            cipher.login.password = this.getValueOrDefault(passwordText);\n            cipher.login.uris = this.makeUriArray(linkText);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    buildGroupText(doc: Document, groupId: string, groupText: string): string {\n        const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n        if (group == null) {\n            return groupText;\n        }\n        if (!this.isNullOrWhitespace(groupText)) {\n            groupText = '/' + groupText;\n        }\n        groupText = group.getAttribute('Name') + groupText;\n        return this.buildGroupText(doc, group.getAttribute('ParentID'), groupText);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst PropertiesToIgnore = ['kind', 'autologin', 'favorite', 'hexcolor', 'protectedwithpassword', 'subdomainonly',\n    'type', 'tk_export_version', 'note', 'title', 'document_content',\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.favorite, '').toLowerCase() === 'true';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.notes = this.getValueOrDefault(value.memo, '');\n            cipher.login.username = this.getValueOrDefault(value.login);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n\n            if (value.kind !== 'login') {\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.note, '');\n            }\n\n            if (value.kind === 'cc') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (!this.isNullOrWhitespace(value.expiryDate)) {\n                    try {\n                        const expDate = new Date(value.expiryDate);\n                        cipher.card.expYear = expDate.getFullYear().toString();\n                        cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                    } catch {\n                        // Ignore error\n                    }\n                }\n            } else if (value.kind !== 'login') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = this.getValueOrDefault(value.document_content, '');\n                }\n                for (const property in value) {\n                    if (value.hasOwnProperty(property) && PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n                        !this.isNullOrWhitespace(value[property])) {\n                        this.processKvp(cipher, property, value[property]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length !== 5) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.notes = this.getValueOrDefault(value[4]);\n            cipher.login.username = this.getValueOrDefault(value[1]);\n            cipher.login.password = this.getValueOrDefault(value[2]);\n            cipher.login.uris = this.makeUriArray(value[3]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class YotiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value['User name']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view/cipherView';\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(value['Password Name']) && this.isNullOrWhitespace(value['Secret Name'])) {\n                return;\n            }\n            this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite, '0') === '1';\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(\n                value['Password Name'], this.getValueOrDefault(value['Secret Name'], '--'));\n            cipher.login.uris = this.makeUriArray(\n                this.getValueOrDefault(value['Password URL'], this.getValueOrDefault(value['Secret URL'])));\n            this.parseData(cipher, value.SecretData);\n            this.parseData(cipher, value.CustomData);\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseData(cipher: CipherView, data: string) {\n        if (this.isNullOrWhitespace(data)) {\n            return;\n        }\n        const dataLines = this.splitNewLine(data);\n        dataLines.forEach(line => {\n            const delimPosition = line.indexOf(':');\n            if (delimPosition < 0) {\n                return;\n            }\n            const field = line.substring(0, delimPosition);\n            const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n            if (this.isNullOrWhitespace(field) || this.isNullOrWhitespace(value) || field === 'SecretType') {\n                return;\n            }\n            const fieldLower = field.toLowerCase();\n            if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.username = value;\n            } else if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.password = value;\n            } else {\n                this.processKvp(cipher, field, value);\n            }\n        });\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from '../abstractions/keyConnector.service';\nimport { LogService } from '../abstractions/log.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { OrganizationUserType } from '../enums/organizationUserType';\n\nimport { Utils } from '../misc/utils';\n\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { KeyConnectorUserKeyRequest } from '../models/request/keyConnectorUserKeyRequest';\n\nconst Keys = {\n    usesKeyConnector: 'usesKeyConnector',\n    convertAccountToKeyConnector: 'convertAccountToKeyConnector',\n};\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n    private usesKeyConnector?: boolean = null;\n\n    constructor(private storageService: StorageService, private userService: UserService,\n        private cryptoService: CryptoService, private apiService: ApiService,\n        private tokenService: TokenService, private logService: LogService) { }\n\n    setUsesKeyConnector(usesKeyConnector: boolean) {\n        this.usesKeyConnector = usesKeyConnector;\n        return this.storageService.save(Keys.usesKeyConnector, usesKeyConnector);\n    }\n\n    async getUsesKeyConnector(): Promise<boolean> {\n        return this.usesKeyConnector ??= await this.storageService.get<boolean>(Keys.usesKeyConnector);\n    }\n\n    async userNeedsMigration() {\n        const loggedInUsingSso = this.tokenService.getIsExternal();\n        const requiredByOrganization = await this.getManagingOrganization() != null;\n        const userIsNotUsingKeyConnector = !await this.getUsesKeyConnector();\n\n        return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n    }\n\n    async migrateUser() {\n        const organization = await this.getManagingOrganization();\n        const key = await this.cryptoService.getKey();\n\n        try {\n            const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n            await this.apiService.postUserKeyToKeyConnector(organization.keyConnectorUrl, keyConnectorRequest);\n        } catch (e) {\n            throw new Error('Unable to reach key connector');\n        }\n\n        await this.apiService.postConvertToKeyConnector();\n    }\n\n    async getAndSetKey(url: string) {\n        try {\n            const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n            const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n            const k = new SymmetricCryptoKey(keyArr);\n            await this.cryptoService.setKey(k);\n        } catch (e) {\n            this.logService.error(e);\n            throw new Error('Unable to reach key connector');\n        }\n    }\n\n    async getManagingOrganization() {\n        const orgs = await this.userService.getAllOrganizations();\n        return orgs.find(o =>\n            o.keyConnectorEnabled &&\n            o.type !== OrganizationUserType.Admin &&\n            o.type !== OrganizationUserType.Owner &&\n            !o.isProviderUser);\n    }\n\n    async setConvertAccountRequired(status: boolean) {\n        await this.storageService.save(Keys.convertAccountToKeyConnector, status);\n    }\n\n    async getConvertAccountRequired(): Promise<boolean> {\n        return await this.storageService.get(Keys.convertAccountToKeyConnector);\n    }\n\n    async removeConvertAccountRequired() {\n        await this.storageService.remove(Keys.convertAccountToKeyConnector);\n    }\n\n    async clear() {\n        await this.removeConvertAccountRequired();\n    }\n}\n","import * as signalR from '@microsoft/signalr';\nimport * as signalRMsgPack from '@microsoft/signalr-protocol-msgpack';\n\nimport { NotificationType } from '../enums/notificationType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { EnvironmentService } from '../abstractions/environment.service';\nimport { LogService } from '../abstractions/log.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from '../abstractions/notifications.service';\nimport { SyncService } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\n\nimport {\n    NotificationResponse,\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n    private signalrConnection: signalR.HubConnection;\n    private url: string;\n    private connected = false;\n    private inited = false;\n    private inactive = false;\n    private reconnectTimer: any = null;\n\n    constructor(private userService: UserService, private syncService: SyncService,\n        private appIdService: AppIdService, private apiService: ApiService,\n        private vaultTimeoutService: VaultTimeoutService, private environmentService: EnvironmentService,\n        private logoutCallback: () => Promise<void>, private logService: LogService) {\n        this.environmentService.urls.subscribe(() => {\n            if (!this.inited) {\n                return;\n            }\n\n            this.init();\n        });\n    }\n\n    async init(): Promise<void> {\n        this.inited = false;\n        this.url = this.environmentService.getNotificationsUrl();\n\n        // Set notifications server URL to `https://-` to effectively disable communication\n        // with the notifications server from the client app\n        if (this.url === 'https://-') {\n            return;\n        }\n\n        if (this.signalrConnection != null) {\n            this.signalrConnection.off('ReceiveMessage');\n            this.signalrConnection.off('Heartbeat');\n            await this.signalrConnection.stop();\n            this.connected = false;\n            this.signalrConnection = null;\n        }\n\n        this.signalrConnection = new signalR.HubConnectionBuilder()\n            .withUrl(this.url + '/hub', {\n                accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n                skipNegotiation: true,\n                transport: signalR.HttpTransportType.WebSockets,\n            })\n            .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n            // .configureLogging(signalR.LogLevel.Trace)\n            .build();\n\n        this.signalrConnection.on('ReceiveMessage',\n            (data: any) => this.processNotification(new NotificationResponse(data)));\n        this.signalrConnection.on('Heartbeat',\n            (data: any) => { /*console.log('Heartbeat!');*/ });\n        this.signalrConnection.onclose(() => {\n            this.connected = false;\n            this.reconnect(true);\n        });\n        this.inited = true;\n        if (await this.isAuthedAndUnlocked()) {\n            await this.reconnect(false);\n        }\n    }\n\n    async updateConnection(sync = false): Promise<void> {\n        if (!this.inited) {\n            return;\n        }\n        try {\n            if (await this.isAuthedAndUnlocked()) {\n                await this.reconnect(sync);\n            } else {\n                await this.signalrConnection.stop();\n            }\n        } catch (e) {\n            this.logService.error(e.toString());\n        }\n    }\n\n    async reconnectFromActivity(): Promise<void> {\n        this.inactive = false;\n        if (this.inited && !this.connected) {\n            await this.reconnect(true);\n        }\n    }\n\n    async disconnectFromInactivity(): Promise<void> {\n        this.inactive = true;\n        if (this.inited && this.connected) {\n            await this.signalrConnection.stop();\n        }\n    }\n\n    private async processNotification(notification: NotificationResponse) {\n        const appId = await this.appIdService.getAppId();\n        if (notification == null || notification.contextId === appId) {\n            return;\n        }\n\n        const isAuthenticated = await this.userService.isAuthenticated();\n        const payloadUserId = notification.payload.userId || notification.payload.UserId;\n        const myUserId = await this.userService.getUserId();\n        if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n            return;\n        }\n\n        switch (notification.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherUpdate:\n                await this.syncService.syncUpsertCipher(notification.payload as SyncCipherNotification,\n                    notification.type === NotificationType.SyncCipherUpdate);\n                break;\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncLoginDelete:\n                await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderUpdate:\n                await this.syncService.syncUpsertFolder(notification.payload as SyncFolderNotification,\n                    notification.type === NotificationType.SyncFolderUpdate);\n                break;\n            case NotificationType.SyncFolderDelete:\n                await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncSettings:\n                if (isAuthenticated) {\n                    await this.syncService.fullSync(false);\n                }\n                break;\n            case NotificationType.SyncOrgKeys:\n                if (isAuthenticated) {\n                    await this.syncService.fullSync(true);\n                    // Stop so a reconnect can be made\n                    await this.signalrConnection.stop();\n                }\n                break;\n            case NotificationType.LogOut:\n                if (isAuthenticated) {\n                    this.logoutCallback();\n                }\n                break;\n            case NotificationType.SyncSendCreate:\n            case NotificationType.SyncSendUpdate:\n                await this.syncService.syncUpsertSend(notification.payload as SyncSendNotification,\n                    notification.type === NotificationType.SyncSendUpdate);\n                break;\n            case NotificationType.SyncSendDelete:\n                await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n            default:\n                break;\n        }\n    }\n\n    private async reconnect(sync: boolean) {\n        if (this.reconnectTimer != null) {\n            clearTimeout(this.reconnectTimer);\n            this.reconnectTimer = null;\n        }\n        if (this.connected || !this.inited || this.inactive) {\n            return;\n        }\n        const authedAndUnlocked = await this.isAuthedAndUnlocked();\n        if (!authedAndUnlocked) {\n            return;\n        }\n\n        try {\n            await this.signalrConnection.start();\n            this.connected = true;\n            if (sync) {\n                await this.syncService.fullSync(false);\n            }\n        } catch (e) {\n            this.logService.error(e);\n        }\n\n        if (!this.connected) {\n            this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n        }\n    }\n\n    private async isAuthedAndUnlocked() {\n        if (await this.userService.isAuthenticated()) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            return !locked;\n        }\n        return false;\n    }\n\n    private random(min: number, max: number) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { NotificationType } from '../../enums/notificationType';\n\nexport class NotificationResponse extends BaseResponse {\n    contextId: string;\n    type: NotificationType;\n    payload: any;\n\n    constructor(response: any) {\n        super(response);\n        this.contextId = this.getResponseProperty('ContextId');\n        this.type = this.getResponseProperty('Type');\n\n        const payload = this.getResponseProperty('Payload');\n        switch (this.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncCipherUpdate:\n            case NotificationType.SyncLoginDelete:\n                this.payload = new SyncCipherNotification(payload);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderDelete:\n            case NotificationType.SyncFolderUpdate:\n                this.payload = new SyncFolderNotification(payload);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncOrgKeys:\n            case NotificationType.SyncSettings:\n            case NotificationType.LogOut:\n                this.payload = new UserNotification(payload);\n                break;\n            case NotificationType.SyncSendCreate:\n            case NotificationType.SyncSendUpdate:\n            case NotificationType.SyncSendDelete:\n                this.payload = new SyncSendNotification(payload);\n            default:\n                break;\n        }\n    }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    organizationId: string;\n    collectionIds: string[];\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class UserNotification extends BaseResponse {\n    userId: string;\n    date: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.date = new Date(this.getResponseProperty('Date'));\n    }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n","import * as zxcvbn from 'zxcvbn';\n\nimport { EncString } from '../models/domain/encString';\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\nimport { Policy } from '../models/domain/policy';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from '../abstractions/passwordGeneration.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { EEFLongWordList } from '../misc/wordlist';\n\nimport { PolicyType } from '../enums/policyType';\n\nconst DefaultOptions = {\n    length: 14,\n    ambiguous: false,\n    number: true,\n    minNumber: 1,\n    uppercase: true,\n    minUppercase: 0,\n    lowercase: true,\n    minLowercase: 0,\n    special: false,\n    minSpecial: 1,\n    type: 'password',\n    numWords: 3,\n    wordSeparator: '-',\n    capitalize: false,\n    includeNumber: false,\n};\n\nconst Keys = {\n    options: 'passwordGenerationOptions',\n    history: 'generatedPasswordHistory',\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n    private optionsCache: any;\n    private history: GeneratedPasswordHistory[];\n\n    constructor(private cryptoService: CryptoService, private storageService: StorageService,\n        private policyService: PolicyService) { }\n\n    async generatePassword(options: any): Promise<string> {\n        // overload defaults with given options\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.type === 'passphrase') {\n            return this.generatePassphrase(options);\n        }\n\n        // sanitize\n        this.sanitizePasswordLength(o, true);\n\n        const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n        if (o.length < minLength) {\n            o.length = minLength;\n        }\n\n        const positions: string[] = [];\n        if (o.lowercase && o.minLowercase > 0) {\n            for (let i = 0; i < o.minLowercase; i++) {\n                positions.push('l');\n            }\n        }\n        if (o.uppercase && o.minUppercase > 0) {\n            for (let i = 0; i < o.minUppercase; i++) {\n                positions.push('u');\n            }\n        }\n        if (o.number && o.minNumber > 0) {\n            for (let i = 0; i < o.minNumber; i++) {\n                positions.push('n');\n            }\n        }\n        if (o.special && o.minSpecial > 0) {\n            for (let i = 0; i < o.minSpecial; i++) {\n                positions.push('s');\n            }\n        }\n        while (positions.length < o.length) {\n            positions.push('a');\n        }\n\n        // shuffle\n        await this.shuffleArray(positions);\n\n        // build out the char sets\n        let allCharSet = '';\n\n        let lowercaseCharSet = 'abcdefghijkmnopqrstuvwxyz';\n        if (o.ambiguous) {\n            lowercaseCharSet += 'l';\n        }\n        if (o.lowercase) {\n            allCharSet += lowercaseCharSet;\n        }\n\n        let uppercaseCharSet = 'ABCDEFGHJKLMNPQRSTUVWXYZ';\n        if (o.ambiguous) {\n            uppercaseCharSet += 'IO';\n        }\n        if (o.uppercase) {\n            allCharSet += uppercaseCharSet;\n        }\n\n        let numberCharSet = '23456789';\n        if (o.ambiguous) {\n            numberCharSet += '01';\n        }\n        if (o.number) {\n            allCharSet += numberCharSet;\n        }\n\n        const specialCharSet = '!@#$%^&*';\n        if (o.special) {\n            allCharSet += specialCharSet;\n        }\n\n        let password = '';\n        for (let i = 0; i < o.length; i++) {\n            let positionChars: string;\n            switch (positions[i]) {\n                case 'l':\n                    positionChars = lowercaseCharSet;\n                    break;\n                case 'u':\n                    positionChars = uppercaseCharSet;\n                    break;\n                case 'n':\n                    positionChars = numberCharSet;\n                    break;\n                case 's':\n                    positionChars = specialCharSet;\n                    break;\n                case 'a':\n                    positionChars = allCharSet;\n                    break;\n                default:\n                    break;\n            }\n\n            const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n            password += positionChars.charAt(randomCharIndex);\n        }\n\n        return password;\n    }\n\n    async generatePassphrase(options: any): Promise<string> {\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.numWords == null || o.numWords <= 2) {\n            o.numWords = DefaultOptions.numWords;\n        }\n        if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n            o.wordSeparator = ' ';\n        }\n        if (o.capitalize == null) {\n            o.capitalize = false;\n        }\n        if (o.includeNumber == null) {\n            o.includeNumber = false;\n        }\n\n        const listLength = EEFLongWordList.length - 1;\n        const wordList = new Array(o.numWords);\n        for (let i = 0; i < o.numWords; i++) {\n            const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n            if (o.capitalize) {\n                wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n            } else {\n                wordList[i] = EEFLongWordList[wordIndex];\n            }\n        }\n\n        if (o.includeNumber) {\n            await this.appendRandomNumberToRandomWord(wordList);\n        }\n        return wordList.join(o.wordSeparator);\n    }\n\n    async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n        if (this.optionsCache == null) {\n            const options = await this.storageService.get(Keys.options);\n            if (options == null) {\n                this.optionsCache = DefaultOptions;\n            } else {\n                this.optionsCache = Object.assign({}, DefaultOptions, options);\n            }\n        }\n        const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(this.optionsCache);\n        this.optionsCache = enforcedOptions[0];\n        return [this.optionsCache, enforcedOptions[1]];\n    }\n\n    async enforcePasswordGeneratorPoliciesOnOptions(options: any): Promise<[any, PasswordGeneratorPolicyOptions]> {\n        let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n        if (enforcedPolicyOptions != null) {\n            if (options.length < enforcedPolicyOptions.minLength) {\n                options.length = enforcedPolicyOptions.minLength;\n            }\n\n            if (enforcedPolicyOptions.useUppercase) {\n                options.uppercase = true;\n            }\n\n            if (enforcedPolicyOptions.useLowercase) {\n                options.lowercase = true;\n            }\n\n            if (enforcedPolicyOptions.useNumbers) {\n                options.number = true;\n            }\n\n            if (options.minNumber < enforcedPolicyOptions.numberCount) {\n                options.minNumber = enforcedPolicyOptions.numberCount;\n            }\n\n            if (enforcedPolicyOptions.useSpecial) {\n                options.special = true;\n            }\n\n            if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n                options.minSpecial = enforcedPolicyOptions.specialCount;\n            }\n\n            // Must normalize these fields because the receiving call expects all options to pass the current rules\n            if (options.minSpecial + options.minNumber > options.length) {\n                options.minSpecial = options.length - options.minNumber;\n            }\n\n            if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n                options.numWords = enforcedPolicyOptions.minNumberWords;\n            }\n\n            if (enforcedPolicyOptions.capitalize) {\n                options.capitalize = true;\n            }\n\n            if (enforcedPolicyOptions.includeNumber) {\n                options.includeNumber = true;\n            }\n\n            // Force default type if password/passphrase selected via policy\n            if (enforcedPolicyOptions.defaultType === 'password' ||\n                enforcedPolicyOptions.defaultType === 'passphrase') {\n                options.type = enforcedPolicyOptions.defaultType;\n            }\n        } else { // UI layer expects an instantiated object to prevent more explicit null checks\n            enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n        }\n        return [options, enforcedPolicyOptions];\n    }\n\n    async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n        const policies: Policy[] = this.policyService == null ? null :\n            await this.policyService.getAll(PolicyType.PasswordGenerator);\n        let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n        if (policies == null || policies.length === 0) {\n            return enforcedOptions;\n        }\n\n        policies.forEach(currentPolicy => {\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\n                return;\n            }\n\n            if (enforcedOptions == null) {\n                enforcedOptions = new PasswordGeneratorPolicyOptions();\n            }\n\n            // Password wins in multi-org collisions\n            if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== 'password') {\n                enforcedOptions.defaultType = currentPolicy.data.defaultType;\n            }\n\n            if (currentPolicy.data.minLength != null\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\n                enforcedOptions.minLength = currentPolicy.data.minLength;\n            }\n\n            if (currentPolicy.data.useUpper) {\n                enforcedOptions.useUppercase = true;\n            }\n\n            if (currentPolicy.data.useLower) {\n                enforcedOptions.useLowercase = true;\n            }\n\n            if (currentPolicy.data.useNumbers) {\n                enforcedOptions.useNumbers = true;\n            }\n\n            if (currentPolicy.data.minNumbers != null\n                && currentPolicy.data.minNumbers > enforcedOptions.numberCount) {\n                enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n            }\n\n            if (currentPolicy.data.useSpecial) {\n                enforcedOptions.useSpecial = true;\n            }\n\n            if (currentPolicy.data.minSpecial != null\n                && currentPolicy.data.minSpecial > enforcedOptions.specialCount) {\n                enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n            }\n\n            if (currentPolicy.data.minNumberWords != null\n                && currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords) {\n                enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n            }\n\n            if (currentPolicy.data.capitalize) {\n                enforcedOptions.capitalize = true;\n            }\n\n            if (currentPolicy.data.includeNumber) {\n                enforcedOptions.includeNumber = true;\n            }\n        });\n\n        return enforcedOptions;\n    }\n\n    async saveOptions(options: any) {\n        await this.storageService.save(Keys.options, options);\n        this.optionsCache = options;\n    }\n\n    async getHistory(): Promise<GeneratedPasswordHistory[]> {\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return new Array<GeneratedPasswordHistory>();\n        }\n\n        if (!this.history) {\n            const encrypted = await this.storageService.get<GeneratedPasswordHistory[]>(Keys.history);\n            this.history = await this.decryptHistory(encrypted);\n        }\n\n        return this.history || new Array<GeneratedPasswordHistory>();\n    }\n\n    async addHistory(password: string): Promise<any> {\n        // Cannot add new history if no key is available\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return;\n        }\n\n        const currentHistory = await this.getHistory();\n\n        // Prevent duplicates\n        if (this.matchesPrevious(password, currentHistory)) {\n            return;\n        }\n\n        currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n        // Remove old items.\n        if (currentHistory.length > MaxPasswordsInHistory) {\n            currentHistory.pop();\n        }\n\n        const newHistory = await this.encryptHistory(currentHistory);\n        return await this.storageService.save(Keys.history, newHistory);\n    }\n\n    async clear(): Promise<any> {\n        this.history = [];\n        return await this.storageService.remove(Keys.history);\n    }\n\n    passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n        if (password == null || password.length === 0) {\n            return null;\n        }\n        let globalUserInputs = ['bitwarden', 'bit', 'warden'];\n        if (userInputs != null && userInputs.length > 0) {\n            globalUserInputs = globalUserInputs.concat(userInputs);\n        }\n        // Use a hash set to get rid of any duplicate user inputs\n        const finalUserInputs = Array.from(new Set(globalUserInputs));\n        const result = zxcvbn(password, finalUserInputs);\n        return result;\n    }\n\n    normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n        options.minLowercase = 0;\n        options.minUppercase = 0;\n\n        if (!options.length || options.length < 5) {\n            options.length = 5;\n        } else if (options.length > 128) {\n            options.length = 128;\n        }\n\n        if (options.length < enforcedPolicyOptions.minLength) {\n            options.length = enforcedPolicyOptions.minLength;\n        }\n\n        if (!options.minNumber) {\n            options.minNumber = 0;\n        } else if (options.minNumber > options.length) {\n            options.minNumber = options.length;\n        } else if (options.minNumber > 9) {\n            options.minNumber = 9;\n        }\n\n        if (options.minNumber < enforcedPolicyOptions.numberCount) {\n            options.minNumber = enforcedPolicyOptions.numberCount;\n        }\n\n        if (!options.minSpecial) {\n            options.minSpecial = 0;\n        } else if (options.minSpecial > options.length) {\n            options.minSpecial = options.length;\n        } else if (options.minSpecial > 9) {\n            options.minSpecial = 9;\n        }\n\n        if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n            options.minSpecial = enforcedPolicyOptions.specialCount;\n        }\n\n        if (options.minSpecial + options.minNumber > options.length) {\n            options.minSpecial = options.length - options.minNumber;\n        }\n\n        if (options.numWords == null || options.length < 3) {\n            options.numWords = 3;\n        } else if (options.numWords > 20) {\n            options.numWords = 20;\n        }\n\n        if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n            options.numWords = enforcedPolicyOptions.minNumberWords;\n        }\n\n        if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n            options.wordSeparator = options.wordSeparator[0];\n        }\n\n        this.sanitizePasswordLength(options, false);\n    }\n\n    private capitalize(str: string) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    private async appendRandomNumberToRandomWord(wordList: string[]) {\n        if (wordList == null || wordList.length <= 0) {\n            return;\n        }\n        const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n        const num = await this.cryptoService.randomNumber(0, 9);\n        wordList[index] = wordList[index] + num;\n    }\n\n    private async encryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async item => {\n            const encrypted = await this.cryptoService.encrypt(item.password);\n            return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private async decryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async item => {\n            const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n            return new GeneratedPasswordHistory(decrypted, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n        if (history == null || history.length === 0) {\n            return false;\n        }\n\n        return history[history.length - 1].password === password;\n    }\n\n    // ref: https://stackoverflow.com/a/12646864/1090359\n    private async shuffleArray(array: string[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = await this.cryptoService.randomNumber(0, i);\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    private sanitizePasswordLength(options: any, forGeneration: boolean) {\n        let minUppercaseCalc = 0;\n        let minLowercaseCalc = 0;\n        let minNumberCalc: number = options.minNumber;\n        let minSpecialCalc: number = options.minSpecial;\n\n        if (options.uppercase && options.minUppercase <= 0) {\n            minUppercaseCalc = 1;\n        } else if (!options.uppercase) {\n            minUppercaseCalc = 0;\n        }\n\n        if (options.lowercase && options.minLowercase <= 0) {\n            minLowercaseCalc = 1;\n        } else if (!options.lowercase) {\n            minLowercaseCalc = 0;\n        }\n\n        if (options.number && options.minNumber <= 0) {\n            minNumberCalc = 1;\n        } else if (!options.number) {\n            minNumberCalc = 0;\n        }\n\n        if (options.special && options.minSpecial <= 0) {\n            minSpecialCalc = 1;\n        } else if (!options.special) {\n            minSpecialCalc = 0;\n        }\n\n        // This should never happen but is a final safety net\n        if (!options.length || options.length < 1) {\n            options.length = 10;\n        }\n\n        const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n        // Normalize and Generation both require this modification\n        if (options.length < minLength) {\n            options.length = minLength;\n        }\n\n        // Apply other changes if the options object passed in is for generation\n        if (forGeneration) {\n            options.minUppercase = minUppercaseCalc;\n            options.minLowercase = minLowercaseCalc;\n            options.minNumber = minNumberCalc;\n            options.minSpecial = minSpecialCalc;\n        }\n    }\n}\n","export class GeneratedPasswordHistory {\n    password: string;\n    date: number;\n\n    constructor(password: string, date: number) {\n        this.password = password;\n        this.date = date;\n    }\n}\n","import Domain from './domainBase';\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n    defaultType: string = '';\n    minLength: number = 0;\n    useUppercase: boolean = false;\n    useLowercase: boolean = false;\n    useNumbers: boolean = false;\n    numberCount: number = 0;\n    useSpecial: boolean = false;\n    specialCount: number = 0;\n    minNumberWords: number = 0;\n    capitalize: boolean = false;\n    includeNumber: boolean = false;\n\n    inEffect() {\n        return this.defaultType !== '' ||\n            this.minLength > 0 ||\n            this.numberCount > 0 ||\n            this.specialCount > 0 ||\n            this.useUppercase ||\n            this.useLowercase ||\n            this.useNumbers ||\n            this.useSpecial ||\n            this.minNumberWords > 0 ||\n            this.capitalize ||\n            this.includeNumber;\n    }\n}\n","import { PolicyService as PolicyServiceAbstraction } from '../abstractions/policy.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { PolicyData } from '../models/data/policyData';\n\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\nimport { Organization } from '../models/domain/organization';\nimport { Policy } from '../models/domain/policy';\nimport { ResetPasswordPolicyOptions } from '../models/domain/resetPasswordPolicyOptions';\n\nimport { OrganizationUserStatusType } from '../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../enums/organizationUserType';\nimport { PolicyType } from '../enums/policyType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { ListResponse } from '../models/response/listResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\n\nconst Keys = {\n    policiesPrefix: 'policies_',\n};\n\nexport class PolicyService implements PolicyServiceAbstraction {\n    policyCache: Policy[];\n\n    constructor(private userService: UserService, private storageService: StorageService,\n        private apiService: ApiService) {\n    }\n\n    clearCache(): void {\n        this.policyCache = null;\n    }\n\n    async getAll(type?: PolicyType): Promise<Policy[]> {\n        if (this.policyCache == null) {\n            const userId = await this.userService.getUserId();\n            const policies = await this.storageService.get<{ [id: string]: PolicyData; }>(\n                Keys.policiesPrefix + userId);\n            const response: Policy[] = [];\n            for (const id in policies) {\n                if (policies.hasOwnProperty(id)) {\n                    response.push(new Policy(policies[id]));\n                }\n            }\n            this.policyCache = response;\n        }\n        if (type != null) {\n            return this.policyCache.filter(p => p.type === type);\n        } else {\n            return this.policyCache;\n        }\n    }\n\n    async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n        const org = await this.userService.getOrganization(organizationId);\n        if (org?.isProviderUser) {\n            const orgPolicies = await this.apiService.getPolicies(organizationId);\n            const policy = orgPolicies.data.find(p => p.organizationId === organizationId);\n\n            if (policy == null) {\n                return null;\n            }\n\n            return new Policy(new PolicyData(policy));\n        }\n\n        const policies = await this.getAll(policyType);\n        return policies.find(p => p.organizationId === organizationId);\n    }\n\n    async replace(policies: { [id: string]: PolicyData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.policiesPrefix + userId, policies);\n        this.policyCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.policiesPrefix + userId);\n        this.policyCache = null;\n    }\n\n    async getMasterPasswordPoliciesForInvitedUsers(\n      orgId: string\n    ): Promise<MasterPasswordPolicyOptions> {\n      const userId = await this.userService.getUserId();\n      const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n      const policies = await this.mapPoliciesFromToken(response);\n      return this.getMasterPasswordPolicyOptions(policies);\n    }\n\n    async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n        if (policies == null) {\n            policies = await this.getAll(PolicyType.MasterPassword);\n        } else {\n            policies = policies.filter(p => p.type === PolicyType.MasterPassword);\n        }\n\n        if (policies == null || policies.length === 0) {\n            return enforcedOptions;\n        }\n\n        policies.forEach(currentPolicy => {\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\n                return;\n            }\n\n            if (enforcedOptions == null) {\n                enforcedOptions = new MasterPasswordPolicyOptions();\n            }\n\n            if (currentPolicy.data.minComplexity != null\n                && currentPolicy.data.minComplexity > enforcedOptions.minComplexity) {\n                enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n            }\n\n            if (currentPolicy.data.minLength != null\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\n                enforcedOptions.minLength = currentPolicy.data.minLength;\n            }\n\n            if (currentPolicy.data.requireUpper) {\n                enforcedOptions.requireUpper = true;\n            }\n\n            if (currentPolicy.data.requireLower) {\n                enforcedOptions.requireLower = true;\n            }\n\n            if (currentPolicy.data.requireNumbers) {\n                enforcedOptions.requireNumbers = true;\n            }\n\n            if (currentPolicy.data.requireSpecial) {\n                enforcedOptions.requireSpecial = true;\n            }\n        });\n\n        return enforcedOptions;\n    }\n\n    evaluateMasterPassword(passwordStrength: number, newPassword: string,\n        enforcedPolicyOptions: MasterPasswordPolicyOptions): boolean {\n        if (enforcedPolicyOptions == null) {\n            return true;\n        }\n\n        if (enforcedPolicyOptions.minComplexity > 0 && enforcedPolicyOptions.minComplexity > passwordStrength) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.minLength > 0 && enforcedPolicyOptions.minLength > newPassword.length) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireNumbers && !(/[0-9]/.test(newPassword))) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireSpecial && !(/[!@#$%\\^&*]/g.test(newPassword))) {\n            return false;\n        }\n\n        return true;\n    }\n\n    getResetPasswordPolicyOptions(policies: Policy[], orgId: string): [ResetPasswordPolicyOptions, boolean] {\n        const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n        if (policies == null || orgId == null) {\n            return [resetPasswordPolicyOptions, false];\n        }\n\n        const policy = policies.find(p => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled);\n        resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n        return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n    }\n\n    mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n        if (policiesResponse == null || policiesResponse.data == null) {\n            return null;\n        }\n\n        const policiesData = policiesResponse.data.map(p => new PolicyData(p));\n        return policiesData.map(p => new Policy(p));\n    }\n\n    async policyAppliesToUser(policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) {\n        const policies = await this.getAll(policyType);\n        const organizations = await this.userService.getAllOrganizations();\n        let filteredPolicies;\n\n        if (policyFilter != null) {\n            filteredPolicies = policies.filter(p => p.enabled && policyFilter(p));\n        }\n        else {\n            filteredPolicies = policies.filter(p => p.enabled);\n        }\n\n        const policySet = new Set(filteredPolicies.map(p => p.organizationId));\n\n        return organizations.some(o =>\n            o.enabled &&\n            o.status >= OrganizationUserStatusType.Accepted &&\n            o.usePolicies &&\n            !this.isExcemptFromPolicies(o, policyType) &&\n            policySet.has(o.id));\n    }\n\n    private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n        if (policyType === PolicyType.MaximumVaultTimeout) {\n            return organization.type === OrganizationUserType.Owner;\n        }\n\n        return organization.isExemptFromPolicies;\n    }\n}\n","import Domain from './domainBase';\n\nexport class ResetPasswordPolicyOptions extends Domain {\n    autoEnrollEnabled: boolean = false;\n}\n","import * as lunr from 'lunr';\n\nimport { CipherView } from '../models/view/cipherView';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { LogService } from '../abstractions/log.service';\nimport { SearchService as SearchServiceAbstraction } from '../abstractions/search.service';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\nimport { SendView } from '../models/view/sendView';\n\nexport class SearchService implements SearchServiceAbstraction {\n    indexedEntityId?: string = null;\n    private indexing = false;\n    private index: lunr.Index = null;\n    private searchableMinLength = 2;\n\n    constructor(private cipherService: CipherService, private logService: LogService,\n        private i18nService: I18nService) {\n        if (['zh-CN', 'zh-TW'].indexOf(i18nService.locale) !== -1) {\n            this.searchableMinLength = 1;\n        }\n    }\n\n    clearIndex(): void {\n        this.indexedEntityId = null;\n        this.index = null;\n    }\n\n    isSearchable(query: string): boolean {\n        const notSearchable = query == null || (this.index == null && query.length < this.searchableMinLength) ||\n            (this.index != null && query.length < this.searchableMinLength && query.indexOf('>') !== 0);\n        return !notSearchable;\n    }\n\n    async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n        if (this.indexing) {\n            return;\n        }\n\n        this.logService.time('search indexing');\n        this.indexing = true;\n        this.indexedEntityId = indexedEntityId;\n        this.index = null;\n        const builder = new lunr.Builder();\n        builder.ref('id');\n        builder.field('shortid', { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n        builder.field('name', { boost: 10 });\n        builder.field('subtitle', {\n            boost: 5,\n            extractor: (c: CipherView) => {\n                if (c.subTitle != null && c.type === CipherType.Card) {\n                    return c.subTitle.replace(/\\*/g, '');\n                }\n                return c.subTitle;\n            },\n        });\n        builder.field('notes');\n        builder.field('login.username', {\n            extractor: (c: CipherView) => c.type === CipherType.Login && c.login != null ? c.login.username : null,\n        });\n        builder.field('login.uris', { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n        builder.field('fields', { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n        builder.field('fields_joined', { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n        builder.field('attachments', { extractor: (c: CipherView) => this.attachmentExtractor(c, false) });\n        builder.field('attachments_joined',\n            { extractor: (c: CipherView) => this.attachmentExtractor(c, true) });\n        builder.field('organizationid', { extractor: (c: CipherView) => c.organizationId });\n        ciphers = ciphers || await this.cipherService.getAllDecrypted();\n        ciphers.forEach(c => builder.add(c));\n        this.index = builder.build();\n\n        this.indexing = false;\n\n        this.logService.timeEnd('search indexing');\n    }\n\n    async searchCiphers(query: string,\n        filter: (((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[])) = null,\n        ciphers: CipherView[] = null):\n        Promise<CipherView[]> {\n        const results: CipherView[] = [];\n        if (query != null) {\n            query = query.trim().toLowerCase();\n        }\n        if (query === '') {\n            query = null;\n        }\n\n        if (ciphers == null) {\n            ciphers = await this.cipherService.getAllDecrypted();\n        }\n\n        if (filter != null && Array.isArray(filter) && filter.length > 0) {\n            ciphers = ciphers.filter(c => filter.every(f => f == null || f(c)));\n        } else if (filter != null) {\n            ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n        }\n\n        if (!this.isSearchable(query)) {\n            return ciphers;\n        }\n\n        if (this.indexing) {\n            await new Promise(r => setTimeout(r, 250));\n            if (this.indexing) {\n                await new Promise(r => setTimeout(r, 500));\n            }\n        }\n\n        const index = this.getIndexForSearch();\n        if (index == null) {\n            // Fall back to basic search if index is not available\n            return this.searchCiphersBasic(ciphers, query);\n        }\n\n        const ciphersMap = new Map<string, CipherView>();\n        ciphers.forEach(c => ciphersMap.set(c.id, c));\n\n        let searchResults: lunr.Index.Result[] = null;\n        const isQueryString = query != null && query.length > 1 && query.indexOf('>') === 0;\n        if (isQueryString) {\n            try {\n                searchResults = index.search(query.substr(1).trim());\n            } catch (e) {\n                this.logService.error(e);\n            }\n        } else {\n            // tslint:disable-next-line\n            const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n            searchResults = index.query(q => {\n                lunr.tokenizer(query).forEach(token => {\n                    const t = token.toString();\n                    q.term(t, { fields: ['name'], wildcard: soWild });\n                    q.term(t, { fields: ['subtitle'], wildcard: soWild });\n                    q.term(t, { fields: ['login.uris'], wildcard: soWild });\n                    q.term(t, {});\n                });\n            });\n        }\n\n        if (searchResults != null) {\n            searchResults.forEach(r => {\n                if (ciphersMap.has(r.ref)) {\n                    results.push(ciphersMap.get(r.ref));\n                }\n            });\n        }\n        return results;\n    }\n\n    searchCiphersBasic(ciphers: CipherView[], query: string, deleted: boolean = false) {\n        query = query.trim().toLowerCase();\n        return ciphers.filter(c => {\n            if (deleted !== c.isDeleted) {\n                return false;\n            }\n            if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (query.length >= 8 && c.id.startsWith(query)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n\n    searchSends(sends: SendView[], query: string) {\n        query = query.trim().toLocaleLowerCase();\n\n        return sends.filter(s => {\n            if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (query.length >= 8 && (s.id.startsWith(query) || s.accessId.toLocaleLowerCase().startsWith(query) || (s.file?.id != null && s.file.id.startsWith(query)))) {\n                return true;\n            }\n            if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n        });\n    }\n\n    getIndexForSearch(): lunr.Index {\n        return this.index;\n    }\n\n    private fieldExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasFields) {\n            return null;\n        }\n        let fields: string[] = [];\n        c.fields.forEach(f => {\n            if (f.name != null) {\n                fields.push(f.name);\n            }\n            if (f.type === FieldType.Text && f.value != null) {\n                fields.push(f.value);\n            }\n        });\n        fields = fields.filter(f => f.trim() !== '');\n        if (fields.length === 0) {\n            return null;\n        }\n        return joined ? fields.join(' ') : fields;\n    }\n\n    private attachmentExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasAttachments) {\n            return null;\n        }\n        let attachments: string[] = [];\n        c.attachments.forEach(a => {\n            if (a != null && a.fileName != null) {\n                if (joined && a.fileName.indexOf('.') > -1) {\n                    attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf('.')));\n                } else {\n                    attachments.push(a.fileName);\n                }\n            }\n        });\n        attachments = attachments.filter(f => f.trim() !== '');\n        if (attachments.length === 0) {\n            return null;\n        }\n        return joined ? attachments.join(' ') : attachments;\n    }\n\n    private uriExtractor(c: CipherView) {\n        if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n            return null;\n        }\n        const uris: string[] = [];\n        c.login.uris.forEach(u => {\n            if (u.uri == null || u.uri === '') {\n                return;\n            }\n            if (u.hostname != null) {\n                uris.push(u.hostname);\n                return;\n            }\n            let uri = u.uri;\n            if (u.match !== UriMatchType.RegularExpression) {\n                const protocolIndex = uri.indexOf('://');\n                if (protocolIndex > -1) {\n                    uri = uri.substr(protocolIndex + 3);\n                }\n                const queryIndex = uri.search(/\\?|&|#/);\n                if (queryIndex > -1) {\n                    uri = uri.substring(0, queryIndex);\n                }\n            }\n            uris.push(uri);\n        });\n        return uris.length > 0 ? uris : null;\n    }\n}\n","import { SendData } from '../models/data/sendData';\n\nimport { SendRequest } from '../models/request/sendRequest';\n\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { SendResponse } from '../models/response/sendResponse';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { Send } from '../models/domain/send';\nimport { SendFile } from '../models/domain/sendFile';\nimport { SendText } from '../models/domain/sendText';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { FileUploadType } from '../enums/fileUploadType';\nimport { SendType } from '../enums/sendType';\n\nimport { SendView } from '../models/view/sendView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { FileUploadService } from '../abstractions/fileUpload.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { SendService as SendServiceAbstraction } from '../abstractions/send.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    sendsPrefix: 'sends_',\n};\n\nexport class SendService implements SendServiceAbstraction {\n    decryptedSendCache: SendView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private fileUploadService: FileUploadService,\n        private storageService: StorageService, private i18nService: I18nService,\n        private cryptoFunctionService: CryptoFunctionService) { }\n\n    clearCache(): void {\n        this.decryptedSendCache = null;\n    }\n\n    async encrypt(model: SendView, file: File | ArrayBuffer, password: string,\n        key?: SymmetricCryptoKey): Promise<[Send, EncArrayBuffer]> {\n        let fileData: EncArrayBuffer = null;\n        const send = new Send();\n        send.id = model.id;\n        send.type = model.type;\n        send.disabled = model.disabled;\n        send.hideEmail = model.hideEmail;\n        send.maxAccessCount = model.maxAccessCount;\n        if (model.key == null) {\n            model.key = await this.cryptoFunctionService.randomBytes(16);\n            model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n        }\n        if (password != null) {\n            const passwordHash = await this.cryptoFunctionService.pbkdf2(password, model.key, 'sha256', 100000);\n            send.password = Utils.fromBufferToB64(passwordHash);\n        }\n        send.key = await this.cryptoService.encrypt(model.key, key);\n        send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n        send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n        if (send.type === SendType.Text) {\n            send.text = new SendText();\n            send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n            send.text.hidden = model.text.hidden;\n        } else if (send.type === SendType.File) {\n            send.file = new SendFile();\n            if (file != null) {\n                if (file instanceof ArrayBuffer) {\n                    const [name, data] = await this.encryptFileData(model.file.fileName, file, model.cryptoKey);\n                    send.file.fileName = name;\n                    fileData = data;\n                } else {\n                    fileData = await this.parseFile(send, file, model.cryptoKey);\n                }\n            }\n        }\n\n        return [send, fileData];\n    }\n\n    async get(id: string): Promise<Send> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null || !sends.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Send(sends[id]);\n    }\n\n    async getAll(): Promise<Send[]> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        const response: Send[] = [];\n        for (const id in sends) {\n            if (sends.hasOwnProperty(id)) {\n                response.push(new Send(sends[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<SendView[]> {\n        if (this.decryptedSendCache != null) {\n            return this.decryptedSendCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decSends: SendView[] = [];\n        const promises: Promise<any>[] = [];\n        const sends = await this.getAll();\n        sends.forEach(send => {\n            promises.push(send.decrypt().then(f => decSends.push(f)));\n        });\n\n        await Promise.all(promises);\n        decSends.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        this.decryptedSendCache = decSends;\n        return this.decryptedSendCache;\n    }\n\n    async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n        const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n        let response: SendResponse;\n        if (sendData[0].id == null) {\n            if (sendData[0].type === SendType.Text) {\n                response = await this.apiService.postSend(request);\n            } else {\n                try {\n                    const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n                    response = uploadDataResponse.sendResponse;\n\n                    await this.fileUploadService.uploadSendFile(uploadDataResponse, sendData[0].file.fileName, sendData[1]);\n                } catch (e) {\n                    if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n                        response = await this.legacyServerSendFileUpload(sendData, request);\n                    } else if (e instanceof ErrorResponse) {\n                        throw new Error((e as ErrorResponse).getSingleMessage());\n                    } else {\n                        throw e;\n                    }\n                }\n            }\n            sendData[0].id = response.id;\n            sendData[0].accessId = response.accessId;\n        } else {\n            response = await this.apiService.putSend(sendData[0].id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new SendData(response, userId);\n        await this.upsert(data);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async legacyServerSendFileUpload(sendData: [Send, EncArrayBuffer], request: SendRequest): Promise<SendResponse>\n    {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([sendData[1].buffer], { type: 'application/octet-stream' });\n            fd.append('model', JSON.stringify(request));\n            fd.append('data', blob, sendData[0].file.fileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('model', JSON.stringify(request));\n                fd.append('data', Buffer.from(sendData[1].buffer) as any, {\n                    filepath: sendData[0].file.fileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n        return await this.apiService.postSendFileLegacy(fd);\n    }\n\n    async upsert(send: SendData | SendData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null) {\n            sends = {};\n        }\n\n        if (send instanceof SendData) {\n            const s = send as SendData;\n            sends[s.id] = s;\n        } else {\n            (send as SendData[]).forEach(s => {\n                sends[s.id] = s;\n            });\n        }\n\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async replace(sends: { [id: string]: SendData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.sendsPrefix + userId);\n        this.decryptedSendCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (sends[id] == null) {\n                return;\n            }\n            delete sends[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete sends[i];\n            });\n        }\n\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteSend(id);\n        await this.delete(id);\n    }\n\n    async removePasswordWithServer(id: string): Promise<any> {\n        const response = await this.apiService.putSendRemovePassword(id);\n        const userId = await this.userService.getUserId();\n        const data = new SendData(response, userId);\n        await this.upsert(data);\n    }\n\n    private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(file);\n            reader.onload = async evt => {\n                try {\n                    const [name, data] = await this.encryptFileData(file.name, evt.target.result as ArrayBuffer, key);\n                    send.file.fileName = name;\n                    resolve(data);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = evt => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    private async encryptFileData(fileName: string, data: ArrayBuffer,\n        key: SymmetricCryptoKey): Promise<[EncString, EncArrayBuffer]> {\n        const encFileName = await this.cryptoService.encrypt(fileName, key);\n        const encFileData = await this.cryptoService.encryptToBytes(data, key);\n        return [encFileName, encFileData];\n    }\n}\n","import { SendFileApi } from '../api/sendFileApi';\n\nexport class SendFileData {\n    id: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(data?: SendFileApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.id = data.id;\n        this.fileName = data.fileName;\n        this.key = data.key;\n        this.size = data.size;\n        this.sizeName = data.sizeName;\n    }\n}\n","import { SendTextApi } from '../api/sendTextApi';\n\nexport class SendTextData {\n    text: string;\n    hidden: boolean;\n\n    constructor(data?: SendTextApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.text = data.text;\n        this.hidden = data.hidden;\n    }\n}\n","import { CryptoService } from '../../abstractions/crypto.service';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { Utils } from '../../misc/utils';\n\nimport { SendData } from '../data/sendData';\n\nimport { SendView } from '../view/sendView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SendFile } from './sendFile';\nimport { SendText } from './sendText';\n\nexport class Send extends Domain {\n    id: string;\n    accessId: string;\n    userId: string;\n    type: SendType;\n    name: EncString;\n    notes: EncString;\n    file: SendFile;\n    text: SendText;\n    key: EncString;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: Date;\n    expirationDate: Date;\n    deletionDate: Date;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(obj?: SendData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            accessId: null,\n            userId: null,\n            name: null,\n            notes: null,\n            key: null,\n        }, alreadyEncrypted, ['id', 'accessId', 'userId']);\n\n        this.type = obj.type;\n        this.maxAccessCount = obj.maxAccessCount;\n        this.accessCount = obj.accessCount;\n        this.password = obj.password;\n        this.disabled = obj.disabled;\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n        this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n        this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n        this.hideEmail = obj.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendText(obj.text, alreadyEncrypted);\n                break;\n            case SendType.File:\n                this.file = new SendFile(obj.file, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n    }\n\n    async decrypt(): Promise<SendView> {\n        const model = new SendView(this);\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            model.key = await cryptoService.decryptToBytes(this.key, null);\n            model.cryptoKey = await cryptoService.makeSendKey(model.key);\n        } catch (e) {\n            // TODO: error?\n        }\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, null, model.cryptoKey);\n\n        switch (this.type) {\n            case SendType.File:\n                model.file = await this.file.decrypt(model.cryptoKey);\n                break;\n            case SendType.Text:\n                model.text = await this.text.decrypt(model.cryptoKey);\n                break;\n            default:\n                break;\n        }\n\n        return model;\n    }\n}\n","import { SettingsService as SettingsServiceAbstraction } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nconst Keys = {\n    settingsPrefix: 'settings_',\n    equivalentDomains: 'equivalentDomains',\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n    private settingsCache: any;\n\n    constructor(private userService: UserService, private storageService: StorageService) {\n    }\n\n    clearCache(): void {\n        this.settingsCache = null;\n    }\n\n    getEquivalentDomains(): Promise<any> {\n        return this.getSettingsKey(Keys.equivalentDomains);\n    }\n\n    async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n        await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n    }\n\n    async clear(userId: string): Promise<void> {\n        await this.storageService.remove(Keys.settingsPrefix + userId);\n        this.clearCache();\n    }\n\n    // Helpers\n\n    private async getSettings(): Promise<any> {\n        if (this.settingsCache == null) {\n            const userId = await this.userService.getUserId();\n            this.settingsCache = this.storageService.get(Keys.settingsPrefix + userId);\n        }\n        return this.settingsCache;\n    }\n\n    private async getSettingsKey(key: string): Promise<any> {\n        const settings = await this.getSettings();\n        if (settings != null && settings[key]) {\n            return settings[key];\n        }\n        return null;\n    }\n\n    private async setSettingsKey(key: string, value: any): Promise<void> {\n        const userId = await this.userService.getUserId();\n        let settings = await this.getSettings();\n        if (!settings) {\n            settings = {};\n        }\n\n        settings[key] = value;\n        await this.storageService.save(Keys.settingsPrefix + userId, settings);\n        this.settingsCache = settings;\n    }\n}\n","import { StateService as StateServiceAbstraction } from '../abstractions/state.service';\n\nexport class StateService implements StateServiceAbstraction {\n    private state: any = {};\n\n    get<T>(key: string): Promise<T> {\n        if (this.state.hasOwnProperty(key)) {\n            return Promise.resolve(this.state[key]);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        this.state[key] = obj;\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        delete this.state[key];\n        return Promise.resolve();\n    }\n\n    purge(): Promise<any> {\n        this.state = {};\n        return Promise.resolve();\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { KeyConnectorService } from '../abstractions/keyConnector.service';\nimport { LogService } from '../abstractions/log.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { SendService } from '../abstractions/send.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from '../abstractions/sync.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { FolderData } from '../models/data/folderData';\nimport { OrganizationData } from '../models/data/organizationData';\nimport { PolicyData } from '../models/data/policyData';\nimport { ProviderData } from '../models/data/providerData';\nimport { SendData } from '../models/data/sendData';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SendResponse } from '../models/response/sendResponse';\n\nconst Keys = {\n    lastSyncPrefix: 'lastSync_',\n};\n\nexport class SyncService implements SyncServiceAbstraction {\n    syncInProgress: boolean = false;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private settingsService: SettingsService, private folderService: FolderService,\n        private cipherService: CipherService, private cryptoService: CryptoService,\n        private collectionService: CollectionService, private storageService: StorageService,\n        private messagingService: MessagingService, private policyService: PolicyService,\n        private sendService: SendService, private logService: LogService,\n        private tokenService: TokenService, private keyConnectorService: KeyConnectorService,\n        private logoutCallback: (expired: boolean) => Promise<void>) {\n    }\n\n    async getLastSync(): Promise<Date> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return null;\n        }\n\n        const lastSync = await this.storageService.get<any>(Keys.lastSyncPrefix + userId);\n        if (lastSync) {\n            return new Date(lastSync);\n        }\n\n        return null;\n    }\n\n    async setLastSync(date: Date): Promise<any> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.lastSyncPrefix + userId, date.toJSON());\n    }\n\n    async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n        this.syncStarted();\n        const isAuthenticated = await this.userService.isAuthenticated();\n        if (!isAuthenticated) {\n            return this.syncCompleted(false);\n        }\n\n        const now = new Date();\n        let needsSync = false;\n        try {\n            needsSync = await this.needsSyncing(forceSync);\n        } catch (e) {\n            if (allowThrowOnError) {\n                throw e;\n            }\n        }\n\n        if (!needsSync) {\n            await this.setLastSync(now);\n            return this.syncCompleted(false);\n        }\n\n        const userId = await this.userService.getUserId();\n        try {\n            await this.apiService.refreshIdentityToken();\n            const response = await this.apiService.getSync();\n\n            await this.syncProfile(response.profile);\n            await this.syncFolders(userId, response.folders);\n            await this.syncCollections(response.collections);\n            await this.syncCiphers(userId, response.ciphers);\n            await this.syncSends(userId, response.sends);\n            await this.syncSettings(userId, response.domains);\n            await this.syncPolicies(response.policies);\n\n            await this.setLastSync(now);\n            return this.syncCompleted(true);\n        } catch (e) {\n            if (allowThrowOnError) {\n                throw e;\n            } else {\n                return this.syncCompleted(false);\n            }\n        }\n    }\n\n    async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                const localFolder = await this.folderService.get(notification.id);\n                if ((!isEdit && localFolder == null) ||\n                    (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)) {\n                    const remoteFolder = await this.apiService.getFolder(notification.id);\n                    if (remoteFolder != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.folderService.upsert(new FolderData(remoteFolder, userId));\n                        this.messagingService.send('syncedUpsertedFolder', { folderId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch (e) {\n                this.logService.error(e);\n            }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.folderService.delete(notification.id);\n            this.messagingService.send('syncedDeletedFolder', { folderId: notification.id });\n            this.syncCompleted(true);\n            return true;\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                let shouldUpdate = true;\n                const localCipher = await this.cipherService.get(notification.id);\n                if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n                    shouldUpdate = false;\n                }\n\n                let checkCollections = false;\n                if (shouldUpdate) {\n                    if (isEdit) {\n                        shouldUpdate = localCipher != null;\n                        checkCollections = true;\n                    } else {\n                        if (notification.collectionIds == null || notification.organizationId == null) {\n                            shouldUpdate = localCipher == null;\n                        } else {\n                            shouldUpdate = false;\n                            checkCollections = true;\n                        }\n                    }\n                }\n\n                if (!shouldUpdate && checkCollections && notification.organizationId != null &&\n                    notification.collectionIds != null && notification.collectionIds.length > 0) {\n                    const collections = await this.collectionService.getAll();\n                    if (collections != null) {\n                        for (let i = 0; i < collections.length; i++) {\n                            if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                                shouldUpdate = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (shouldUpdate) {\n                    const remoteCipher = await this.apiService.getCipher(notification.id);\n                    if (remoteCipher != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n                        this.messagingService.send('syncedUpsertedCipher', { cipherId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch (e) {\n                if (e != null && e.statusCode === 404 && isEdit) {\n                    await this.cipherService.delete(notification.id);\n                    this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n                    return this.syncCompleted(true);\n                }\n            }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.cipherService.delete(notification.id);\n            this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n            return this.syncCompleted(true);\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                const localSend = await this.sendService.get(notification.id);\n                if ((!isEdit && localSend == null) ||\n                    (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)) {\n                    const remoteSend = await this.apiService.getSend(notification.id);\n                    if (remoteSend != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.sendService.upsert(new SendData(remoteSend, userId));\n                        this.messagingService.send('syncedUpsertedSend', { sendId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch (e) {\n                this.logService.error(e);\n            }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.sendService.delete(notification.id);\n            this.messagingService.send('syncedDeletedSend', { sendId: notification.id });\n            this.syncCompleted(true);\n            return true;\n        }\n        return this.syncCompleted(false);\n    }\n\n    // Helpers\n\n    private syncStarted() {\n        this.syncInProgress = true;\n        this.messagingService.send('syncStarted');\n    }\n\n    private syncCompleted(successfully: boolean): boolean {\n        this.syncInProgress = false;\n        this.messagingService.send('syncCompleted', { successfully: successfully });\n        return successfully;\n    }\n\n    private async needsSyncing(forceSync: boolean) {\n        if (forceSync) {\n            return true;\n        }\n\n        const lastSync = await this.getLastSync();\n        if (lastSync == null || lastSync.getTime() === 0) {\n            return true;\n        }\n\n        const response = await this.apiService.getAccountRevisionDate();\n        if (new Date(response) <= lastSync) {\n            return false;\n        }\n        return true;\n    }\n\n    private async syncProfile(response: ProfileResponse) {\n        const stamp = await this.userService.getSecurityStamp();\n        if (stamp != null && stamp !== response.securityStamp) {\n            if (this.logoutCallback != null) {\n                await this.logoutCallback(true);\n            }\n\n            throw new Error('Stamp has changed');\n        }\n\n        await this.cryptoService.setEncKey(response.key);\n        await this.cryptoService.setEncPrivateKey(response.privateKey);\n        await this.cryptoService.setProviderKeys(response.providers);\n        await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n        await this.userService.setSecurityStamp(response.securityStamp);\n        await this.userService.setEmailVerified(response.emailVerified);\n        await this.userService.setForcePasswordReset(response.forcePasswordReset);\n        await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n        const organizations: { [id: string]: OrganizationData; } = {};\n        response.organizations.forEach(o => {\n            organizations[o.id] = new OrganizationData(o);\n        });\n\n        const providers: { [id: string]: ProviderData; } = {};\n        response.providers.forEach(p => {\n            providers[p.id] = new ProviderData(p);\n        });\n\n        response.providerOrganizations.forEach(o => {\n            if (organizations[o.id] == null) {\n                organizations[o.id] = new OrganizationData(o);\n                organizations[o.id].isProviderUser = true;\n            }\n        });\n\n        await Promise.all([\n            this.userService.replaceOrganizations(organizations),\n            this.userService.replaceProviders(providers),\n        ]);\n\n        if (await this.keyConnectorService.userNeedsMigration()) {\n            this.messagingService.send('convertAccountToKeyConnector');\n        } else {\n            this.keyConnectorService.removeConvertAccountRequired();\n        }\n    }\n\n    private async syncFolders(userId: string, response: FolderResponse[]) {\n        const folders: { [id: string]: FolderData; } = {};\n        response.forEach(f => {\n            folders[f.id] = new FolderData(f, userId);\n        });\n        return await this.folderService.replace(folders);\n    }\n\n    private async syncCollections(response: CollectionDetailsResponse[]) {\n        const collections: { [id: string]: CollectionData; } = {};\n        response.forEach(c => {\n            collections[c.id] = new CollectionData(c);\n        });\n        return await this.collectionService.replace(collections);\n    }\n\n    private async syncCiphers(userId: string, response: CipherResponse[]) {\n        const ciphers: { [id: string]: CipherData; } = {};\n        response.forEach(c => {\n            ciphers[c.id] = new CipherData(c, userId);\n        });\n        return await this.cipherService.replace(ciphers);\n    }\n\n    private async syncSends(userId: string, response: SendResponse[]) {\n        const sends: { [id: string]: SendData; } = {};\n        response.forEach(s => {\n            sends[s.id] = new SendData(s, userId);\n        });\n        return await this.sendService.replace(sends);\n    }\n\n    private async syncSettings(userId: string, response: DomainsResponse) {\n        let eqDomains: string[][] = [];\n        if (response != null && response.equivalentDomains != null) {\n            eqDomains = eqDomains.concat(response.equivalentDomains);\n        }\n\n        if (response != null && response.globalEquivalentDomains != null) {\n            response.globalEquivalentDomains.forEach(global => {\n                if (global.domains.length > 0) {\n                    eqDomains.push(global.domains);\n                }\n            });\n        }\n\n        return this.settingsService.setEquivalentDomains(eqDomains);\n    }\n\n    private async syncPolicies(response: PolicyResponse[]) {\n        const policies: { [id: string]: PolicyData; } = {};\n        if (response != null) {\n            response.forEach(p => {\n                policies[p.id] = new PolicyData(p);\n            });\n        }\n        return await this.policyService.replace(policies);\n    }\n}\n","import { ProfileOrganizationResponse } from '../response/profileOrganizationResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { ProductType } from '../../enums/productType';\n\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationData {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useSso: boolean;\n    useKeyConnector: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    hasPublicAndPrivateKeys: boolean;\n    providerId: string;\n    providerName: string;\n    isProviderUser: boolean;\n    familySponsorshipFriendlyName: string;\n    familySponsorshipAvailable: boolean;\n    planProductType: ProductType;\n    keyConnectorEnabled: boolean;\n    keyConnectorUrl: string;\n\n    constructor(response: ProfileOrganizationResponse) {\n        this.id = response.id;\n        this.name = response.name;\n        this.status = response.status;\n        this.type = response.type;\n        this.enabled = response.enabled;\n        this.usePolicies = response.usePolicies;\n        this.useGroups = response.useGroups;\n        this.useDirectory = response.useDirectory;\n        this.useEvents = response.useEvents;\n        this.useTotp = response.useTotp;\n        this.use2fa = response.use2fa;\n        this.useApi = response.useApi;\n        this.useSso = response.useSso;\n        this.useKeyConnector = response.useKeyConnector;\n        this.useResetPassword = response.useResetPassword;\n        this.selfHost = response.selfHost;\n        this.usersGetPremium = response.usersGetPremium;\n        this.seats = response.seats;\n        this.maxCollections = response.maxCollections;\n        this.maxStorageGb = response.maxStorageGb;\n        this.ssoBound = response.ssoBound;\n        this.identifier = response.identifier;\n        this.permissions = response.permissions;\n        this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n        this.userId = response.userId;\n        this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n        this.providerId = response.providerId;\n        this.providerName = response.providerName;\n        this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n        this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n        this.planProductType = response.planProductType;\n        this.keyConnectorEnabled = response.keyConnectorEnabled;\n        this.keyConnectorUrl = response.keyConnectorUrl;\n    }\n}\n","import { ProfileProviderResponse } from '../response/profileProviderResponse';\n\nimport { ProviderUserStatusType } from '../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../enums/providerUserType';\n\nexport class ProviderData {\n    id: string;\n    name: string;\n    status: ProviderUserStatusType;\n    type: ProviderUserType;\n    enabled: boolean;\n    userId: string;\n    useEvents: boolean;\n\n    constructor(response: ProfileProviderResponse) {\n        this.id = response.id;\n        this.name = response.name;\n        this.status = response.status;\n        this.type = response.type;\n        this.enabled = response.enabled;\n        this.userId = response.userId;\n        this.useEvents = response.useEvents;\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService as TokenServiceAbstraction } from '../abstractions/token.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    accessToken: 'accessToken',\n    refreshToken: 'refreshToken',\n    twoFactorTokenPrefix: 'twoFactorToken_',\n    clientId: 'apikey_clientId',\n    clientSecret: 'apikey_clientSecret',\n};\n\nexport class TokenService implements TokenServiceAbstraction {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n    clientId: string;\n    clientSecret: string;\n\n    constructor(private storageService: StorageService) {\n    }\n\n    async setTokens(accessToken: string, refreshToken: string, clientIdClientSecret: [string, string]): Promise<any> {\n        await this.setToken(accessToken);\n        await this.setRefreshToken(refreshToken);\n        if (clientIdClientSecret != null) {\n            await this.setClientId(clientIdClientSecret[0]);\n            await this.setClientSecret(clientIdClientSecret[1]);\n        }\n    }\n\n    async setClientId(clientId: string): Promise<any> {\n        this.clientId = clientId;\n        return this.storeTokenValue(Keys.clientId, clientId);\n    }\n\n    async getClientId(): Promise<string> {\n        if (this.clientId != null) {\n            return this.clientId;\n        }\n\n        this.clientId = await this.storageService.get<string>(Keys.clientId);\n        return this.clientId;\n    }\n\n    async setClientSecret(clientSecret: string): Promise<any> {\n        this.clientSecret = clientSecret;\n        return this.storeTokenValue(Keys.clientSecret, clientSecret);\n    }\n\n    async getClientSecret(): Promise<string> {\n        if (this.clientSecret != null) {\n            return this.clientSecret;\n        }\n\n        this.clientSecret = await this.storageService.get<string>(Keys.clientSecret);\n        return this.clientSecret;\n    }\n\n    async setToken(token: string): Promise<any> {\n        this.token = token;\n        this.decodedToken = null;\n        return this.storeTokenValue(Keys.accessToken, token);\n    }\n\n    async getToken(): Promise<string> {\n        if (this.token != null) {\n            return this.token;\n        }\n\n        this.token = await this.storageService.get<string>(Keys.accessToken);\n        return this.token;\n    }\n\n    async setRefreshToken(refreshToken: string): Promise<any> {\n        this.refreshToken = refreshToken;\n        return this.storeTokenValue(Keys.refreshToken, refreshToken);\n    }\n\n    async getRefreshToken(): Promise<string> {\n        if (this.refreshToken != null) {\n            return this.refreshToken;\n        }\n\n        this.refreshToken = await this.storageService.get<string>(Keys.refreshToken);\n        return this.refreshToken;\n    }\n\n    async toggleTokens(): Promise<any> {\n        const token = await this.getToken();\n        const refreshToken = await this.getRefreshToken();\n        const clientId = await this.getClientId();\n        const clientSecret = await this.getClientSecret();\n        const timeout = await this.storageService.get(ConstantsService.vaultTimeoutKey);\n        const action = await this.storageService.get(ConstantsService.vaultTimeoutActionKey);\n        if ((timeout != null || timeout === 0) && action === 'logOut') {\n            // if we have a vault timeout and the action is log out, reset tokens\n            await this.clearToken();\n            this.token = token;\n            this.refreshToken = refreshToken;\n            this.clientId = clientId;\n            this.clientSecret = clientSecret;\n            return;\n        }\n\n        await this.setToken(token);\n        await this.setRefreshToken(refreshToken);\n        await this.setClientId(clientId);\n        await this.setClientSecret(clientSecret);\n    }\n\n    setTwoFactorToken(token: string, email: string): Promise<any> {\n        return this.storageService.save(Keys.twoFactorTokenPrefix + email, token);\n    }\n\n    getTwoFactorToken(email: string): Promise<string> {\n        return this.storageService.get<string>(Keys.twoFactorTokenPrefix + email);\n    }\n\n    clearTwoFactorToken(email: string): Promise<any> {\n        return this.storageService.remove(Keys.twoFactorTokenPrefix + email);\n    }\n\n    async clearToken(): Promise<any> {\n        this.token = null;\n        this.decodedToken = null;\n        this.refreshToken = null;\n        this.clientId = null;\n        this.clientSecret = null;\n\n        await this.storageService.remove(Keys.accessToken);\n        await this.storageService.remove(Keys.refreshToken);\n        await this.storageService.remove(Keys.clientId);\n        await this.storageService.remove(Keys.clientSecret);\n    }\n\n    // jwthelper methods\n    // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n    decodeToken(): any {\n        if (this.decodedToken) {\n            return this.decodedToken;\n        }\n\n        if (this.token == null) {\n            throw new Error('Token not found.');\n        }\n\n        const parts = this.token.split('.');\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n        if (decoded == null) {\n            throw new Error('Cannot decode the token');\n        }\n\n        this.decodedToken = JSON.parse(decoded);\n        return this.decodedToken;\n    }\n\n    getTokenExpirationDate(): Date {\n        const decoded = this.decodeToken();\n        if (typeof decoded.exp === 'undefined') {\n            return null;\n        }\n\n        const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        d.setUTCSeconds(decoded.exp);\n        return d;\n    }\n\n    tokenSecondsRemaining(offsetSeconds: number = 0): number {\n        const d = this.getTokenExpirationDate();\n        if (d == null) {\n            return 0;\n        }\n\n        const msRemaining = d.valueOf() - (new Date().valueOf() + (offsetSeconds * 1000));\n        return Math.round(msRemaining / 1000);\n    }\n\n    tokenNeedsRefresh(minutes: number = 5): boolean {\n        const sRemaining = this.tokenSecondsRemaining();\n        return sRemaining < (60 * minutes);\n    }\n\n    getUserId(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.sub === 'undefined') {\n            throw new Error('No user id found');\n        }\n\n        return decoded.sub as string;\n    }\n\n    getEmail(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email === 'undefined') {\n            throw new Error('No email found');\n        }\n\n        return decoded.email as string;\n    }\n\n    getEmailVerified(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email_verified === 'undefined') {\n            throw new Error('No email verification found');\n        }\n\n        return decoded.email_verified as boolean;\n    }\n\n    getName(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.name === 'undefined') {\n            return null;\n        }\n\n        return decoded.name as string;\n    }\n\n    getPremium(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.premium === 'undefined') {\n            return false;\n        }\n\n        return decoded.premium as boolean;\n    }\n\n    getIssuer(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.iss === 'undefined') {\n            throw new Error('No issuer found');\n        }\n\n        return decoded.iss as string;\n    }\n\n    getIsExternal(): boolean {\n        const decoded = this.decodeToken();\n        if (!Array.isArray(decoded.amr)) {\n            throw new Error('No amr found');\n        }\n\n        return decoded.amr.includes('external');\n    }\n\n    private async storeTokenValue(key: string, value: string) {\n        if (await this.skipTokenStorage()) {\n            // if we have a vault timeout and the action is log out, don't store token\n            return;\n        }\n\n        return this.storageService.save(key, value);\n    }\n\n    private async skipTokenStorage(): Promise<boolean> {\n        const timeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        const action = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n        return timeout != null && action === 'logOut';\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { LogService } from '../abstractions/log.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TotpService as TotpServiceAbstraction } from '../abstractions/totp.service';\n\nimport { Utils } from '../misc/utils';\n\nconst B32Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\nconst SteamChars = '23456789BCDFGHJKMNPQRTVWXY';\n\nexport class TotpService implements TotpServiceAbstraction {\n    constructor(private storageService: StorageService, private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService) { }\n\n    async getCode(key: string): Promise<string> {\n        if (key == null) {\n            return null;\n        }\n        let period = 30;\n        let alg: 'sha1' | 'sha256' | 'sha512' = 'sha1';\n        let digits = 6;\n        let keyB32 = key;\n        const isOtpAuth = key.toLowerCase().indexOf('otpauth://') === 0;\n        const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf('steam://') === 0;\n        if (isOtpAuth) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('digits') && params.get('digits') != null) {\n                try {\n                    const digitParams = parseInt(params.get('digits').trim(), null);\n                    if (digitParams > 10) {\n                        digits = 10;\n                    } else if (digitParams > 0) {\n                        digits = digitParams;\n                    }\n                } catch {\n                    this.logService.error('Invalid digits param.');\n                }\n            }\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    const periodParam = parseInt(params.get('period').trim(), null);\n                    if (periodParam > 0) {\n                        period = periodParam;\n                    }\n                } catch {\n                    this.logService.error('Invalid period param.');\n                }\n            }\n            if (params.has('secret') && params.get('secret') != null) {\n                keyB32 = params.get('secret');\n            }\n            if (params.has('algorithm') && params.get('algorithm') != null) {\n                const algParam = params.get('algorithm').toLowerCase();\n                if (algParam === 'sha1' || algParam === 'sha256' || algParam === 'sha512') {\n                    alg = algParam;\n                }\n            }\n        } else if (isSteamAuth) {\n            keyB32 = key.substr('steam://'.length);\n            digits = 5;\n        }\n\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, '0');\n        const timeBytes = Utils.fromHexToArray(timeHex);\n        const keyBytes = this.b32ToBytes(keyB32);\n\n        if (!keyBytes.length || !timeBytes.length) {\n            return null;\n        }\n\n        const hash = await this.sign(keyBytes, timeBytes, alg);\n        if (hash.length === 0) {\n            return null;\n        }\n\n        /* tslint:disable */\n        const offset = (hash[hash.length - 1] & 0xf);\n        const binary = ((hash[offset] & 0x7f) << 24) | ((hash[offset + 1] & 0xff) << 16) |\n            ((hash[offset + 2] & 0xff) << 8) | (hash[offset + 3] & 0xff);\n        /* tslint:enable */\n\n        let otp = '';\n        if (isSteamAuth) {\n            // tslint:disable-next-line\n            let fullCode = binary & 0x7fffffff;\n            for (let i = 0; i < digits; i++) {\n                otp += SteamChars[fullCode % SteamChars.length];\n                fullCode = Math.trunc(fullCode / SteamChars.length);\n            }\n        } else {\n            otp = (binary % Math.pow(10, digits)).toString();\n            otp = this.leftPad(otp, digits, '0');\n        }\n\n        return otp;\n    }\n\n    getTimeInterval(key: string): number {\n        let period = 30;\n        if (key != null && key.toLowerCase().indexOf('otpauth://') === 0) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    period = parseInt(params.get('period').trim(), null);\n                } catch {\n                    this.logService.error('Invalid period param.');\n                }\n            }\n        }\n        return period;\n    }\n\n    async isAutoCopyEnabled(): Promise<boolean> {\n        return !(await this.storageService.get<boolean>(ConstantsService.disableAutoTotpCopyKey));\n    }\n\n    // Helpers\n\n    private leftPad(s: string, l: number, p: string): string {\n        if (l + 1 >= s.length) {\n            s = Array(l + 1 - s.length).join(p) + s;\n        }\n        return s;\n    }\n\n    private decToHex(d: number): string {\n        return (d < 15.5 ? '0' : '') + Math.round(d).toString(16);\n    }\n\n    private b32ToHex(s: string): string {\n        s = s.toUpperCase();\n        let cleanedInput = '';\n\n        for (let i = 0; i < s.length; i++) {\n            if (B32Chars.indexOf(s[i]) < 0) {\n                continue;\n            }\n\n            cleanedInput += s[i];\n        }\n        s = cleanedInput;\n\n        let bits = '';\n        let hex = '';\n        for (let i = 0; i < s.length; i++) {\n            const byteIndex = B32Chars.indexOf(s.charAt(i));\n            if (byteIndex < 0) {\n                continue;\n            }\n            bits += this.leftPad(byteIndex.toString(2), 5, '0');\n        }\n        for (let i = 0; i + 4 <= bits.length; i += 4) {\n            const chunk = bits.substr(i, 4);\n            hex = hex + parseInt(chunk, 2).toString(16);\n        }\n        return hex;\n    }\n\n    private b32ToBytes(s: string): Uint8Array {\n        return Utils.fromHexToArray(this.b32ToHex(s));\n    }\n\n    private async sign(keyBytes: Uint8Array, timeBytes: Uint8Array, alg: 'sha1' | 'sha256' | 'sha512') {\n        const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n        return new Uint8Array(signature);\n    }\n}\n","import { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService as UserServiceAbstraction } from '../abstractions/user.service';\n\nimport { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nimport { KdfType } from '../enums/kdfType';\n\nimport { ProviderData } from '../models/data/providerData';\nimport { Provider } from '../models/domain/provider';\n\nconst Keys = {\n    userId: 'userId',\n    userEmail: 'userEmail',\n    stamp: 'securityStamp',\n    kdf: 'kdf',\n    kdfIterations: 'kdfIterations',\n    organizationsPrefix: 'organizations_',\n    providersPrefix: 'providers_',\n    emailVerified: 'emailVerified',\n    forcePasswordReset: 'forcePasswordReset',\n};\n\nexport class UserService implements UserServiceAbstraction {\n    private userId: string;\n    private email: string;\n    private stamp: string;\n    private kdf: KdfType;\n    private kdfIterations: number;\n    private emailVerified: boolean;\n    private forcePasswordReset: boolean;\n\n    constructor(private tokenService: TokenService, private storageService: StorageService) { }\n\n    async setInformation(userId: string, email: string, kdf: KdfType, kdfIterations: number): Promise<any> {\n        this.email = email;\n        this.userId = userId;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n\n        await this.storageService.save(Keys.userEmail, email);\n        await this.storageService.save(Keys.userId, userId);\n        await this.storageService.save(Keys.kdf, kdf);\n        await this.storageService.save(Keys.kdfIterations, kdfIterations);\n    }\n\n    setSecurityStamp(stamp: string): Promise<any> {\n        this.stamp = stamp;\n        return this.storageService.save(Keys.stamp, stamp);\n    }\n\n    setEmailVerified(emailVerified: boolean) {\n        this.emailVerified = emailVerified;\n        return this.storageService.save(Keys.emailVerified, emailVerified);\n    }\n\n    setForcePasswordReset(forcePasswordReset: boolean) {\n        this.forcePasswordReset = forcePasswordReset;\n        return this.storageService.save(Keys.forcePasswordReset, forcePasswordReset);\n    }\n\n    async getUserId(): Promise<string> {\n        if (this.userId == null) {\n            this.userId = await this.storageService.get<string>(Keys.userId);\n        }\n        return this.userId;\n    }\n\n    async getEmail(): Promise<string> {\n        if (this.email == null) {\n            this.email = await this.storageService.get<string>(Keys.userEmail);\n        }\n        return this.email;\n    }\n\n    async getSecurityStamp(): Promise<string> {\n        if (this.stamp == null) {\n            this.stamp = await this.storageService.get<string>(Keys.stamp);\n        }\n        return this.stamp;\n    }\n\n    async getKdf(): Promise<KdfType> {\n        if (this.kdf == null) {\n            this.kdf = await this.storageService.get<KdfType>(Keys.kdf);\n        }\n        return this.kdf;\n    }\n\n    async getKdfIterations(): Promise<number> {\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.storageService.get<number>(Keys.kdfIterations);\n        }\n        return this.kdfIterations;\n    }\n\n    async getEmailVerified(): Promise<boolean> {\n        if (this.emailVerified == null) {\n            this.emailVerified = await this.storageService.get<boolean>(Keys.emailVerified);\n        }\n        return this.emailVerified;\n    }\n\n    async getForcePasswordReset(): Promise<boolean> {\n        if (this.forcePasswordReset == null) {\n            this.forcePasswordReset = await this.storageService.get<boolean>(Keys.forcePasswordReset);\n        }\n        return this.forcePasswordReset;\n    }\n\n    async clear(): Promise<any> {\n        const userId = await this.getUserId();\n\n        await this.storageService.remove(Keys.userId);\n        await this.storageService.remove(Keys.userEmail);\n        await this.storageService.remove(Keys.stamp);\n        await this.storageService.remove(Keys.kdf);\n        await this.storageService.remove(Keys.kdfIterations);\n        await this.storageService.remove(Keys.forcePasswordReset);\n        await this.clearOrganizations(userId);\n        await this.clearProviders(userId);\n\n        this.userId = this.email = this.stamp = null;\n        this.kdf = null;\n        this.kdfIterations = null;\n    }\n\n    async isAuthenticated(): Promise<boolean> {\n        const token = await this.tokenService.getToken();\n        if (token == null) {\n            return false;\n        }\n\n        const userId = await this.getUserId();\n        return userId != null;\n    }\n\n    async canAccessPremium(): Promise<boolean> {\n        const authed = await this.isAuthenticated();\n        if (!authed) {\n            return false;\n        }\n\n        const tokenPremium = this.tokenService.getPremium();\n        if (tokenPremium) {\n            return true;\n        }\n\n        const orgs = await this.getAllOrganizations();\n        for (let i = 0; i < orgs.length; i++) {\n            if (orgs[i].usersGetPremium && orgs[i].enabled) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async canManageSponsorships(): Promise<boolean> {\n        const orgs = await this.getAllOrganizations();\n        return orgs.some(o => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null);\n    }\n\n    async getOrganization(id: string): Promise<Organization> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        if (organizations == null || !organizations.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Organization(organizations[id]);\n    }\n\n    async getOrganizationByIdentifier(identifier: string): Promise<Organization> {\n        const organizations = await this.getAllOrganizations();\n        if (organizations == null || organizations.length === 0) {\n            return null;\n        }\n\n        return organizations.find(o => o.identifier === identifier);\n    }\n\n    async getAllOrganizations(): Promise<Organization[]> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        const response: Organization[] = [];\n        for (const id in organizations) {\n            if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n                response.push(new Organization(organizations[id]));\n            }\n        }\n        return response;\n    }\n\n    async replaceOrganizations(organizations: { [id: string]: OrganizationData; }): Promise<any> {\n        const userId = await this.getUserId();\n        await this.storageService.save(Keys.organizationsPrefix + userId, organizations);\n    }\n\n    async clearOrganizations(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.organizationsPrefix + userId);\n    }\n\n    async getProvider(id: string): Promise<Provider> {\n        const userId = await this.getUserId();\n        const providers = await this.storageService.get<{ [id: string]: ProviderData; }>(\n            Keys.providersPrefix + userId);\n        if (providers == null || !providers.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Provider(providers[id]);\n    }\n\n    async getAllProviders(): Promise<Provider[]> {\n        const userId = await this.getUserId();\n        const providers = await this.storageService.get<{ [id: string]: ProviderData; }>(\n            Keys.providersPrefix + userId);\n        const response: Provider[] = [];\n        for (const id in providers) {\n            if (providers.hasOwnProperty(id)) {\n                response.push(new Provider(providers[id]));\n            }\n        }\n        return response;\n    }\n\n    async replaceProviders(providers: { [id: string]: ProviderData; }): Promise<any> {\n        const userId = await this.getUserId();\n        await this.storageService.save(Keys.providersPrefix + userId, providers);\n    }\n\n    async clearProviders(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.providersPrefix + userId);\n    }\n}\n","import { ProviderUserStatusType } from '../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../enums/providerUserType';\nimport { ProviderData } from '../data/providerData';\n\nexport class Provider {\n    id: string;\n    name: string;\n    status: ProviderUserStatusType;\n    type: ProviderUserType;\n    enabled: boolean;\n    userId: string;\n    useEvents: boolean;\n\n    constructor(obj?: ProviderData) {\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.name = obj.name;\n        this.status = obj.status;\n        this.type = obj.type;\n        this.enabled = obj.enabled;\n        this.userId = obj.userId;\n        this.useEvents = obj.useEvents;\n    }\n\n    get canAccess() {\n        if (this.isProviderAdmin) {\n            return true;\n        }\n        return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n    }\n\n    get canCreateOrganizations() {\n        return this.enabled && this.isProviderAdmin;\n    }\n\n    get canManageUsers() {\n        return this.isProviderAdmin;\n    }\n\n    get canAccessEventLogs() {\n        return this.isProviderAdmin;\n    }\n\n    get isProviderAdmin() {\n        return this.type === ProviderUserType.ProviderAdmin;\n    }\n}\n","import { UserVerificationService as UserVerificationServiceAbstraction } from '../abstractions/userVerification.service';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\n\nimport { VerificationType } from '../enums/verificationType';\n\nimport { VerifyOTPRequest } from '../models/request/account/verifyOTPRequest';\nimport { SecretVerificationRequest } from '../models/request/secretVerificationRequest';\n\nimport { Verification } from '../types/verification';\n\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n    constructor(private cryptoService: CryptoService, private i18nService: I18nService,\n        private apiService: ApiService) { }\n\n    async buildRequest<T extends SecretVerificationRequest>(verification: Verification,\n        requestClass?: new () => T, alreadyHashed?: boolean) {\n        this.validateInput(verification);\n\n        const request = requestClass != null\n            ? new requestClass()\n            : new SecretVerificationRequest() as T;\n\n        if (verification.type === VerificationType.OTP) {\n            request.otp = verification.secret;\n        } else {\n            request.masterPasswordHash = alreadyHashed\n                ? verification.secret\n                : await this.cryptoService.hashPassword(verification.secret, null);\n        }\n\n        return request;\n    }\n\n    async verifyUser(verification: Verification): Promise<boolean> {\n        this.validateInput(verification);\n\n        if (verification.type === VerificationType.OTP) {\n            const request = new VerifyOTPRequest(verification.secret);\n            try {\n                await this.apiService.postAccountVerifyOTP(request);\n            } catch (e) {\n                throw new Error(this.i18nService.t('invalidVerificationCode'));\n            }\n        } else {\n            const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(verification.secret, null);\n            if (!passwordValid) {\n                throw new Error(this.i18nService.t('invalidMasterPassword'));\n            }\n        }\n        return true;\n    }\n\n    async requestOTP() {\n        await this.apiService.postAccountRequestOTP();\n    }\n\n    private validateInput(verification: Verification) {\n        if (verification?.secret == null || verification.secret === '') {\n            if (verification.type === VerificationType.OTP) {\n                throw new Error(this.i18nService.t('verificationCodeRequired'));\n            } else {\n                throw new Error(this.i18nService.t('masterPassRequired'));\n            }\n        }\n    }\n}\n","export class VerifyOTPRequest {\n    OTP: string;\n\n    constructor(OTP: string) {\n        this.OTP = OTP;\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { KeyConnectorService } from '../abstractions/keyConnector.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from '../abstractions/vaultTimeout.service';\n\nimport { PolicyType } from '../enums/policyType';\nimport { EncString } from '../models/domain/encString';\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n    pinProtectedKey: EncString = null;\n    biometricLocked: boolean = true;\n    everBeenUnlocked: boolean = false;\n\n    private inited = false;\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private collectionService: CollectionService, private cryptoService: CryptoService,\n        protected platformUtilsService: PlatformUtilsService, private storageService: StorageService,\n        private messagingService: MessagingService, private searchService: SearchService,\n        private userService: UserService, private tokenService: TokenService, private policyService: PolicyService,\n        private keyConnectorService: KeyConnectorService,\n        private lockedCallback: () => Promise<void> = null, private loggedOutCallback: () => Promise<void> = null) {\n    }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.startCheck();\n        }\n    }\n\n    startCheck() {\n        this.checkVaultTimeout();\n        setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n\n    // Keys aren't stored for a device that is locked or logged out.\n    async isLocked(): Promise<boolean> {\n        // Handle never lock startup situation\n        if (await this.cryptoService.hasKeyStored('auto') && !this.everBeenUnlocked) {\n            await this.cryptoService.getKey('auto');\n        }\n\n        return !this.cryptoService.hasKeyInMemory();\n    }\n\n    async checkVaultTimeout(): Promise<void> {\n        if (await this.platformUtilsService.isViewOpen()) {\n            // Do not lock\n            return;\n        }\n\n        // \"is logged out check\" - similar to isLocked, below\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        if (await this.isLocked()) {\n            return;\n        }\n\n        const vaultTimeout = await this.getVaultTimeout();\n        if (vaultTimeout == null || vaultTimeout < 0) {\n            return;\n        }\n\n        const lastActive = await this.storageService.get<number>(ConstantsService.lastActiveKey);\n        if (lastActive == null) {\n            return;\n        }\n\n        const vaultTimeoutSeconds = vaultTimeout * 60;\n        const diffSeconds = ((new Date()).getTime() - lastActive) / 1000;\n        if (diffSeconds >= vaultTimeoutSeconds) {\n            // Pivot based on the saved vault timeout action\n            const timeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n            timeoutAction === 'logOut' ? await this.logOut() : await this.lock(true);\n        }\n    }\n\n    async lock(allowSoftLock = false): Promise<void> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        if (await this.keyConnectorService.getUsesKeyConnector()) {\n            const pinSet = await this.isPinLockSet();\n            const pinLock = (pinSet[0] && this.pinProtectedKey != null) || pinSet[1];\n\n            if (!pinLock && !await this.isBiometricLockSet()) {\n                await this.logOut();\n            }\n        }\n\n        this.biometricLocked = true;\n        this.everBeenUnlocked = true;\n        await this.cryptoService.clearKey(false);\n        await this.cryptoService.clearOrgKeys(true);\n        await this.cryptoService.clearKeyPair(true);\n        await this.cryptoService.clearEncKey(true);\n\n        this.folderService.clearCache();\n        this.cipherService.clearCache();\n        this.collectionService.clearCache();\n        this.searchService.clearIndex();\n        this.messagingService.send('locked');\n        if (this.lockedCallback != null) {\n            await this.lockedCallback();\n        }\n    }\n\n    async logOut(): Promise<void> {\n        if (this.loggedOutCallback != null) {\n            await this.loggedOutCallback();\n        }\n    }\n\n    async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n        await this.storageService.save(ConstantsService.vaultTimeoutKey, timeout);\n        await this.storageService.save(ConstantsService.vaultTimeoutActionKey, action);\n        await this.cryptoService.toggleKey();\n        await this.tokenService.toggleTokens();\n    }\n\n    async isPinLockSet(): Promise<[boolean, boolean]> {\n        const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n        const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n        return [protectedPin != null, pinProtectedKey != null];\n    }\n\n    async isBiometricLockSet(): Promise<boolean> {\n        return await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\n    }\n\n    async getVaultTimeout(): Promise<number> {\n        const vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n\n        if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n            const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n            // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n            let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n            if (vaultTimeout == null || timeout < 0) {\n                timeout = policy[0].data.minutes;\n            }\n\n            // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n            if (vaultTimeout !== timeout) {\n                await this.storageService.save(ConstantsService.vaultTimeoutKey, timeout);\n            }\n\n            return timeout;\n        }\n\n        return vaultTimeout;\n    }\n\n    clear(): Promise<any> {\n        this.everBeenUnlocked = false;\n        this.pinProtectedKey = null;\n        return this.storageService.remove(ConstantsService.protectedPin);\n    }\n}\n","import * as forge from 'node-forge';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n    private crypto: Crypto;\n    private subtle: SubtleCrypto;\n    private isIE: boolean;\n    private isOldSafari: boolean;\n\n    constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n        this.crypto = typeof win.crypto !== 'undefined' ? win.crypto : null;\n        this.subtle = (!!this.crypto && typeof win.crypto.subtle !== 'undefined') ? win.crypto.subtle : null;\n        this.isIE = platformUtilsService.isIE();\n        const ua = win.navigator.userAgent;\n        this.isOldSafari = platformUtilsService.isSafari() &&\n            (ua.indexOf(' Version/10.') > -1 || ua.indexOf(' Version/9.') > -1);\n    }\n\n    async pbkdf2(password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number): Promise<ArrayBuffer> {\n        if (this.isIE || this.isOldSafari) {\n            const forgeLen = algorithm === 'sha256' ? 32 : 64;\n            const passwordBytes = this.toByteString(password);\n            const saltBytes = this.toByteString(salt);\n            const derivedKeyBytes = (forge as any).pbkdf2(passwordBytes, saltBytes, iterations, forgeLen, algorithm);\n            return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n        }\n\n        const wcLen = algorithm === 'sha256' ? 256 : 512;\n        const passwordBuf = this.toBuf(password);\n        const saltBuf = this.toBuf(salt);\n\n        const pbkdf2Params: Pbkdf2Params = {\n            name: 'PBKDF2',\n            salt: saltBuf,\n            iterations: iterations,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', passwordBuf, { name: 'PBKDF2' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n    }\n\n    async hkdf(ikm: ArrayBuffer, salt: string | ArrayBuffer, info: string | ArrayBuffer,\n        outputByteSize: number, algorithm: 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        const saltBuf = this.toBuf(salt);\n        const infoBuf = this.toBuf(info);\n\n        const hkdfParams: HkdfParams = {\n            name: 'HKDF',\n            salt: saltBuf,\n            info: infoBuf,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', ikm, { name: 'HKDF' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n    }\n\n    // ref: https://tools.ietf.org/html/rfc5869\n    async hkdfExpand(prk: ArrayBuffer, info: string | ArrayBuffer, outputByteSize: number,\n        algorithm: 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        const hashLen = algorithm === 'sha256' ? 32 : 64;\n        if (outputByteSize > 255 * hashLen) {\n            throw new Error('outputByteSize is too large.');\n        }\n        const prkArr = new Uint8Array(prk);\n        if (prkArr.length < hashLen) {\n            throw new Error('prk is too small.');\n        }\n        const infoBuf = this.toBuf(info);\n        const infoArr = new Uint8Array(infoBuf);\n        let runningOkmLength = 0;\n        let previousT = new Uint8Array(0);\n        const n = Math.ceil(outputByteSize / hashLen);\n        const okm = new Uint8Array(n * hashLen);\n        for (let i = 0; i < n; i++) {\n            const t = new Uint8Array(previousT.length + infoArr.length + 1);\n            t.set(previousT);\n            t.set(infoArr, previousT.length);\n            t.set([i + 1], t.length - 1);\n            previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n            okm.set(previousT, runningOkmLength);\n            runningOkmLength += previousT.length;\n            if (runningOkmLength >= outputByteSize) {\n                break;\n            }\n        }\n        return okm.slice(0, outputByteSize).buffer;\n    }\n\n    async hash(value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): Promise<ArrayBuffer> {\n        if ((this.isIE && algorithm === 'sha1') || algorithm === 'md5') {\n            const md = algorithm === 'md5' ? forge.md.md5.create() : forge.md.sha1.create();\n            const valueBytes = this.toByteString(value);\n            md.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(md.digest().data).buffer;\n        }\n\n        const valueBuf = this.toBuf(value);\n        return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n    }\n\n    async hmac(value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        if (this.isIE && algorithm === 'sha512') {\n            const hmac = (forge as any).hmac.create();\n            const keyBytes = this.toByteString(key);\n            const valueBytes = this.toByteString(value);\n            hmac.start(algorithm, keyBytes);\n            hmac.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n        }\n\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', key, signingAlgorithm, false, ['sign']);\n        return await this.subtle.sign(signingAlgorithm, impKey, value);\n    }\n\n    // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n    // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n    // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n    async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n        const macKey = await this.randomBytes(32);\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        };\n        const impKey = await this.subtle.importKey('raw', macKey, signingAlgorithm, false, ['sign']);\n        const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n        const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n        if (mac1.byteLength !== mac2.byteLength) {\n            return false;\n        }\n\n        const arr1 = new Uint8Array(mac1);\n        const arr2 = new Uint8Array(mac2);\n        for (let i = 0; i < arr2.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hmacFast(value: string, key: string, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<string> {\n        const hmac = (forge as any).hmac.create();\n        hmac.start(algorithm, key);\n        hmac.update(value);\n        const bytes = hmac.digest().getBytes();\n        return Promise.resolve(bytes);\n    }\n\n    async compareFast(a: string, b: string): Promise<boolean> {\n        const rand = await this.randomBytes(32);\n        const bytes = new Uint32Array(rand);\n        const buffer = forge.util.createBuffer();\n        for (let i = 0; i < bytes.length; i++) {\n            buffer.putInt32(bytes[i]);\n        }\n        const macKey = buffer.getBytes();\n\n        const hmac = (forge as any).hmac.create();\n        hmac.start('sha256', macKey);\n        hmac.update(a);\n        const mac1 = hmac.digest().getBytes();\n\n        hmac.start(null, null);\n        hmac.update(b);\n        const mac2 = hmac.digest().getBytes();\n\n        const equals = mac1 === mac2;\n        return equals;\n    }\n\n    async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['encrypt']);\n        return await this.subtle.encrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    aesDecryptFastParameters(data: string, iv: string, mac: string, key: SymmetricCryptoKey):\n        DecryptParameters<string> {\n        const p = new DecryptParameters<string>();\n        if (key.meta != null) {\n            p.encKey = key.meta.encKeyByteString;\n            p.macKey = key.meta.macKeyByteString;\n        }\n\n        if (p.encKey == null) {\n            p.encKey = forge.util.decode64(key.encKeyB64);\n        }\n        p.data = forge.util.decode64(data);\n        p.iv = forge.util.decode64(iv);\n        p.macData = p.iv + p.data;\n        if (p.macKey == null && key.macKeyB64 != null) {\n            p.macKey = forge.util.decode64(key.macKeyB64);\n        }\n        if (mac != null) {\n            p.mac = forge.util.decode64(mac);\n        }\n\n        // cache byte string keys for later\n        if (key.meta == null) {\n            key.meta = {};\n        }\n        if (key.meta.encKeyByteString == null) {\n            key.meta.encKeyByteString = p.encKey;\n        }\n        if (p.macKey != null && key.meta.macKeyByteString == null) {\n            key.meta.macKeyByteString = p.macKey;\n        }\n\n        return p;\n    }\n\n    aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n        const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n        const decipher = (forge as any).cipher.createDecipher('AES-CBC', parameters.encKey);\n        decipher.start({ iv: parameters.iv });\n        decipher.update(dataBuffer);\n        decipher.finish();\n        const val = decipher.output.toString('utf8');\n        return Promise.resolve(val);\n    }\n\n    async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['decrypt']);\n        return await this.subtle.decrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('spki', publicKey, rsaParams, false, ['encrypt']);\n        return await this.subtle.encrypt(rsaParams, impKey, data);\n    }\n\n    async rsaDecrypt(data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, false, ['decrypt']);\n        return await this.subtle.decrypt(rsaParams, impKey, data);\n    }\n\n    async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const impPrivateKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, true, ['decrypt']);\n        const jwkPrivateKey = await this.subtle.exportKey('jwk', impPrivateKey);\n        const jwkPublicKeyParams = {\n            kty: 'RSA',\n            e: jwkPrivateKey.e,\n            n: jwkPrivateKey.n,\n            alg: 'RSA-OAEP',\n            ext: true,\n        };\n        const impPublicKey = await this.subtle.importKey('jwk', jwkPublicKeyParams, rsaParams, true, ['encrypt']);\n        return await this.subtle.exportKey('spki', impPublicKey);\n    }\n\n    async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            modulusLength: length,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const keyPair = (await this.subtle.generateKey(rsaParams, true, ['encrypt', 'decrypt'])) as CryptoKeyPair;\n        const publicKey = await this.subtle.exportKey('spki', keyPair.publicKey);\n        const privateKey = await this.subtle.exportKey('pkcs8', keyPair.privateKey);\n        return [publicKey, privateKey];\n    }\n\n    randomBytes(length: number): Promise<ArrayBuffer> {\n        const arr = new Uint8Array(length);\n        this.crypto.getRandomValues(arr);\n        return Promise.resolve(arr.buffer);\n    }\n\n    private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n        let buf: ArrayBuffer;\n        if (typeof (value) === 'string') {\n            buf = Utils.fromUtf8ToArray(value).buffer;\n        } else {\n            buf = value;\n        }\n        return buf;\n    }\n\n    private toByteString(value: string | ArrayBuffer): string {\n        let bytes: string;\n        if (typeof (value) === 'string') {\n            bytes = forge.util.encodeUtf8(value);\n        } else {\n            bytes = Utils.fromBufferToByteString(value);\n        }\n        return bytes;\n    }\n\n    private toWebCryptoAlgorithm(algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): string {\n        if (algorithm === 'md5') {\n            throw new Error('MD5 is not supported in WebCrypto.');\n        }\n        return algorithm === 'sha1' ? 'SHA-1' : algorithm === 'sha256' ? 'SHA-256' : 'SHA-512';\n    }\n}\n","export class DecryptParameters<T> {\n    encKey: T;\n    data: T;\n    iv: T;\n    macKey: T;\n    mac: T;\n    macData: T;\n}\n","import { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\n\nexport abstract class FileUploadService {\n    uploadSendFile: (uploadData: SendFileUploadDataResponse, fileName: EncString,\n        encryptedFileData: EncArrayBuffer) => Promise<any>;\n    uploadCipherAttachment: (admin: boolean, uploadData: AttachmentUploadDataResponse, fileName: EncString,\n        encryptedFileData: EncArrayBuffer) => Promise<any>;\n}\n","import {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    Injectable,\n    Injector,\n} from '@angular/core';\nimport * as jq from 'jquery';\nimport { first } from 'rxjs/operators';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { ModalRef } from 'jslib-angular/components/modal/modal.ref';\nimport { ModalService as BaseModalService } from 'jslib-angular/services/modal.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n    el: any = null;\n    modalOpen: boolean = false;\n\n    constructor(componentFactoryResolver: ComponentFactoryResolver, applicationRef: ApplicationRef,\n        injector: Injector, private messagingService: MessagingService) {\n        super(componentFactoryResolver, applicationRef, injector);\n    }\n\n    protected setupHandlers(modalRef: ModalRef) {\n        modalRef.onCreated.pipe(first()).subscribe(() => {\n            const modals = Array.from(document.querySelectorAll('.modal'));\n            if (modals.length > 0) {\n                this.el = jq(modals[0]);\n                this.el.modal('show');\n\n                this.el.on('show.bs.modal', () => {\n                    modalRef.show();\n                    this.messagingService.send('modalShow');\n                });\n                this.el.on('shown.bs.modal', () => {\n                    modalRef.shown();\n                    this.messagingService.send('modalShown');\n                    if (!Utils.isMobileBrowser) {\n                        this.el.find('*[appAutoFocus]').focus();\n                    }\n                });\n                this.el.on('hide.bs.modal', () => {\n                    this.messagingService.send('modalClose');\n                });\n                this.el.on('hidden.bs.modal', () => {\n                    modalRef.closed();\n                    this.messagingService.send('modalClosed');\n                });\n            }\n        });\n\n        modalRef.onClose.pipe(first()).subscribe(() => {\n            if (this.el != null) {\n                this.el.modal('hide');\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class WildcardRoutingModule { }\n"],"sourceRoot":""}