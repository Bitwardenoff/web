{"version":3,"file":"app/main.26acc2c96712f4c276e4.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/app.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/main.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/services/provider-guard.service.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/services/provider-type-guard.service.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/avatar.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/ciphers.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/export.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/groupings.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/password-generator.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/verify-master-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/verify-master-password.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/blur-click.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/color-password.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/auth-guard.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/lock-guard.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/unauth-guard.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/validation.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/event.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/folder.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/import.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/organization.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/policy.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/sync.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/userVerification.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/permissions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/ascendoCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/avastCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/avastJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/aviraCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/baseImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/bitwardenCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/bitwardenJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/blackBerryCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/blurCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/buttercupCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/chromeCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/clipperzHtmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/codebookCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/dashlaneJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/encryptrCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/enpassCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/enpassJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/firefoxCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/fsecureFskImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/gnomeJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/kasperskyTxtImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/keepass2XmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/keepassxCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/keeperImporters/keeperCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/keeperImporters/keeperJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/lastpassCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/logMeOnceCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/meldiumCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/msecureCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/mykiCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/nordpassCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/cipherImportContext.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepassword1PifImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepasswordCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepasswordMacCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepasswordWinCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/padlockCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passkeepCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passmanJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passpackCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordAgentCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordBossJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordDragonXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordSafeXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordWalletTxtImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/rememBearCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/roboformCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/safariCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/safeInCloudXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/saferpassCsvImport.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/secureSafeCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/splashIdCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/stickyPasswordXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/truekeyCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/upmCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/yotiCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/zohoVaultCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/tldjs.noop.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/cardApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/fieldApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/identityApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/loginApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/loginUriApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/permissionsApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/secureNoteApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/sendFileApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/sendTextApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/ssoConfigApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/attachmentData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/cardData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/cipherData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/collectionData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/eventData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/fieldData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/folderData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/identityData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/loginData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/loginUriData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/organizationData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/passwordHistoryData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/policyData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/providerData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/secureNoteData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/sendData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/sendFileData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/sendTextData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/authResult.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/decryptParameters.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/domainBase.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/encArrayBuffer.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/encString.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/encryptedObject.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/environmentUrls.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/globalState.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/importResult.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/loginUri.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/secureNote.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sendAccess.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sendFile.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sendText.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/treeNode.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/windowState.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/card.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/cipher.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/cipherWithIds.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/collection.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/collectionWithId.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/event.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/field.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/folder.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/folderWithId.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/identity.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/login.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/loginUri.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/secureNote.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/attachmentRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/bitPayInvoiceRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherCreateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherShareRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/collectionRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/deleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/deviceRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emailTokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessInviteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/eventRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/folderRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/folderWithIdRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/groupRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/importCiphersRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/importOrganizationCiphersRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/kdfRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/keysRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/kvpRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organization/organizationSponsorshipRedeemRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organization/organizationSsoRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationCreateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationKeysRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationSubscriptionUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUpgradeRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserBulkRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserInviteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/passwordHintRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/passwordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/paymentRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/policyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/preloginRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerSetupRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserBulkRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserInviteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/referenceEventRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/registerRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/secretVerificationRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/selectionReadOnlyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/sendAccessRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/sendRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/sendWithIdRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/setPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/storageRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/taxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/tokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/twoFactorProviderRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/twoFactorRecoveryRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateDomainsRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateKeyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateProfileRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/verifyBankRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/verifyEmailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/apiKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/attachmentResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/baseResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/billingResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/breachAccountResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/cipherResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/collectionResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/domainsResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/errorResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/eventResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/folderResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/globalDomainResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/groupResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/identityTokenResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/keysResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/listResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/notificationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationKeysResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationUserResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/paymentResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/planResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/policyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/preloginResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileProviderResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendAccessResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/subscriptionResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/syncResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/taxInfoResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/taxRateResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/userKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/attachmentView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/cardView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/cipherView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/collectionView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/eventView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/fieldView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/folderView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/identityView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/itemView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/loginUriView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/loginView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/passwordHistoryView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/secureNoteView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendAccessView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendFileView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendTextView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/event.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/folder.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/import.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/organization.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/policy.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/sync.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/userVerification.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/./src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/components/password-strength.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-strength.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-billing.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/export.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/export.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/import.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/import.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/groupings.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/groupings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/services/event.service.ts","webpack://@bitwarden/web-vault/./src/app/services/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/services/organization-guard.service.ts","webpack://@bitwarden/web-vault/./src/app/services/organization-type-guard.service.ts","webpack://@bitwarden/web-vault/./src/app/services/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/services/router.service.ts","webpack://@bitwarden/web-vault/./src/app/services/services.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/settings/options.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/options.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organizations.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organizations.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-billing.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/tools/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/tools/cipher-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/export.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/import.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/groupings.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/./src/models/account.ts","webpack://@bitwarden/web-vault/./src/models/globalState.ts","webpack://@bitwarden/web-vault/./src/services/broadcasterMessaging.service.ts","webpack://@bitwarden/web-vault/./src/services/htmlStorage.service.ts","webpack://@bitwarden/web-vault/./src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/./src/services/state.service.ts","webpack://@bitwarden/web-vault/./src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/./src/services/webPlatformUtils.service.ts","webpack://@bitwarden/web-vault/./src/scss/export.module.scss","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: async () => (await import(\"./providers/providers.module\")).ProvidersModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"src/app/app.component\";\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","<router-outlet></router-outlet>\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { BitwardenToastModule } from \"jslib-angular/components/toastr.component\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\nimport { OssRoutingModule } from \"src/app/oss-routing.module\";\nimport { OssModule } from \"src/app/oss.module\";\nimport { ServicesModule } from \"src/app/services/services.module\";\nimport { WildcardRoutingModule } from \"src/app/wildcard-routing.module\";\n\n@NgModule({\n  imports: [\n    OssModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ServicesModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule,\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    MaximumVaultTimeoutPolicyComponent,\n    DisablePersonalVaultExportPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\n// tslint:disable-next-line\nrequire(\"src/scss/styles.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { OrganizationSsoRequest } from \"jslib-common/models/request/organization/organizationSsoRequest\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent implements OnInit {\n  samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\n  ];\n\n  loading = true;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<any>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  enabled = this.formBuilder.control(false);\n  data = this.formBuilder.group({\n    configType: [],\n\n    keyConnectorEnabled: [],\n    keyConnectorUrl: [],\n\n    // OpenId\n    authority: [],\n    clientId: [],\n    clientSecret: [],\n    metadataAddress: [],\n    redirectBehavior: [],\n    getClaimsFromUserInfoEndpoint: [],\n    additionalScopes: [],\n    additionalUserIdClaimTypes: [],\n    additionalEmailClaimTypes: [],\n    additionalNameClaimTypes: [],\n    acrValues: [],\n    expectedReturnAcrValue: [],\n\n    // SAML\n    spNameIdFormat: [],\n    spOutboundSigningAlgorithm: [],\n    spSigningBehavior: [],\n    spMinIncomingSigningAlgorithm: [],\n    spWantAssertionsSigned: [],\n    spValidateCertificates: [],\n\n    idpEntityId: [],\n    idpBindingType: [],\n    idpSingleSignOnServiceUrl: [],\n    idpSingleLogoutServiceUrl: [],\n    idpArtifactResolutionServiceUrl: [],\n    idpX509PublicCert: [],\n    idpOutboundSigningAlgorithm: [],\n    idpAllowUnsolicitedAuthnResponse: [],\n    idpDisableOutboundLogoutRequests: [],\n    idpWantAuthnRequestsSigned: [],\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.apiService.getOrganizationSso(this.organizationId);\n\n    this.data.patchValue(ssoSettings.data);\n    this.enabled.setValue(ssoSettings.enabled);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.keyConnectorUrl.markAsDirty();\n\n    this.loading = false;\n  }\n\n  copy(value: string) {\n    this.platformUtilsService.copyToClipboard(value);\n  }\n\n  launchUri(url: string) {\n    this.platformUtilsService.launchUri(url);\n  }\n\n  async submit() {\n    this.formPromise = this.postData();\n\n    try {\n      const response = await this.formPromise;\n\n      this.data.patchValue(response.data);\n      this.enabled.setValue(response.enabled);\n\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async postData() {\n    if (this.data.get(\"keyConnectorEnabled\").value) {\n      await this.validateKeyConnectorUrl();\n\n      if (this.keyConnectorUrl.hasError(\"invalidUrl\")) {\n        throw new Error(this.i18nService.t(\"keyConnectorTestFail\"));\n      }\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.data = this.data.value;\n\n    return this.apiService.postOrganizationSso(this.organizationId, request);\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.keyConnectorUrl.pristine) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: true,\n      });\n    }\n\n    this.keyConnectorUrl.markAsPristine();\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.data.get(\"keyConnectorEnabled\").value &&\n      this.keyConnectorUrl != null &&\n      this.keyConnectorUrl.value !== \"\"\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.data.get(\"keyConnectorUrl\");\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"data\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n  ngNativeValidate\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"allowSso\" | i18n }}</label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"allowSsoDesc\" | i18n }}</small>\n  </div>\n\n  <div class=\"form-group\">\n    <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        id=\"memberDecryptionPass\"\n        [value]=\"false\"\n        formControlName=\"keyConnectorEnabled\"\n      />\n      <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n        {{ \"masterPass\" | i18n }}\n        <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        id=\"memberDecryptionKey\"\n        [value]=\"true\"\n        formControlName=\"keyConnectorEnabled\"\n        [attr.disabled]=\"!organization.useKeyConnector || null\"\n      />\n      <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n        {{ \"keyConnector\" | i18n }}\n        <a\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          href=\"https://bitwarden.com/help/about-key-connector/\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n\n  <ng-container *ngIf=\"data.value.keyConnectorEnabled\">\n    <app-callout type=\"warning\" [useAlertRole]=\"true\">\n      {{ \"keyConnectorWarning\" | i18n }}\n    </app-callout>\n\n    <div class=\"form-group\">\n      <label for=\"keyConnectorUrl\">{{ \"keyConnectorUrl\" | i18n }}</label>\n      <div class=\"input-group\">\n        <input\n          class=\"form-control\"\n          formControlName=\"keyConnectorUrl\"\n          id=\"keyConnectorUrl\"\n          required\n        />\n        <div class=\"input-group-append\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary\"\n            (click)=\"validateKeyConnectorUrl()\"\n            [disabled]=\"!enableTestKeyConnector\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"keyConnectorUrl.pending\"\n            ></i>\n            <span *ngIf=\"!keyConnectorUrl.pending\">\n              {{ \"keyConnectorTest\" | i18n }}\n            </span>\n          </button>\n        </div>\n      </div>\n      <ng-container *ngIf=\"keyConnectorUrl.pristine && !keyConnectorUrl.pending\">\n        <div class=\"text-danger\" *ngIf=\"keyConnectorUrl.hasError('invalidUrl')\" role=\"alert\">\n          <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n          {{ \"keyConnectorTestFail\" | i18n }}\n        </div>\n        <div class=\"text-success\" *ngIf=\"!keyConnectorUrl.hasError('invalidUrl')\" role=\"alert\">\n          <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n          {{ \"keyConnectorTestSuccess\" | i18n }}\n        </div>\n      </ng-container>\n    </div>\n  </ng-container>\n\n  <div class=\"form-group\">\n    <label for=\"type\">{{ \"type\" | i18n }}</label>\n    <select class=\"form-control\" id=\"type\" formControlName=\"configType\">\n      <option [ngValue]=\"0\" disabled>{{ \"selectType\" | i18n }}</option>\n      <option [ngValue]=\"1\">OpenID Connect</option>\n      <option [ngValue]=\"2\">SAML 2.0</option>\n    </select>\n  </div>\n\n  <!-- OIDC -->\n  <div *ngIf=\"data.value.configType == 1\">\n    <div class=\"config-section\">\n      <h2>{{ \"openIdConnectConfig\" | i18n }}</h2>\n      <div class=\"form-group\">\n        <label>{{ \"callbackPath\" | i18n }}</label>\n        <div class=\"input-group\">\n          <input class=\"form-control\" readonly [value]=\"callbackPath\" />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n              (click)=\"copy(callbackPath)\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label>{{ \"signedOutCallbackPath\" | i18n }}</label>\n        <div class=\"input-group\">\n          <input class=\"form-control\" readonly [value]=\"signedOutCallbackPath\" />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n              (click)=\"copy(signedOutCallbackPath)\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"authority\">{{ \"authority\" | i18n }}</label>\n        <input class=\"form-control\" formControlName=\"authority\" id=\"authority\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"clientId\">{{ \"clientId\" | i18n }}</label>\n        <input class=\"form-control\" formControlName=\"clientId\" id=\"clientId\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"clientSecret\">{{ \"clientSecret\" | i18n }}</label>\n        <input class=\"form-control\" formControlName=\"clientSecret\" id=\"clientSecret\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"metadataAddress\">{{ \"metadataAddress\" | i18n }}</label>\n        <input class=\"form-control\" formControlName=\"metadataAddress\" id=\"metadataAddress\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"redirectBehavior\">{{ \"oidcRedirectBehavior\" | i18n }}</label>\n        <select class=\"form-control\" formControlName=\"redirectBehavior\" id=\"redirectBehavior\">\n          <option [ngValue]=\"0\">Redirect GET</option>\n          <option [ngValue]=\"1\">Form POST</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"getClaimsFromUserInfoEndpoint\"\n            formControlName=\"getClaimsFromUserInfoEndpoint\"\n          />\n          <label class=\"form-check-label\" for=\"getClaimsFromUserInfoEndpoint\">\n            {{ \"getClaimsFromUserInfoEndpoint\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"additionalScopes\">{{ \"additionalScopes\" | i18n }}</label>\n        <input class=\"form-control\" formControlName=\"additionalScopes\" id=\"additionalScopes\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"additionalUserIdClaimTypes\">{{ \"additionalUserIdClaimTypes\" | i18n }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"additionalUserIdClaimTypes\"\n          id=\"additionalUserIdClaimTypes\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"additionalEmailClaimTypes\">{{ \"additionalEmailClaimTypes\" | i18n }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"additionalEmailClaimTypes\"\n          id=\"additionalEmailClaimTypes\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"additionalNameClaimTypes\">{{ \"additionalNameClaimTypes\" | i18n }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"additionalNameClaimTypes\"\n          id=\"additionalNameClaimTypes\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"acrValues\">{{ \"acrValues\" | i18n }}</label>\n        <input class=\"form-control\" formControlName=\"acrValues\" id=\"acrValues\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"expectedReturnAcrValue\">{{ \"expectedReturnAcrValue\" | i18n }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"expectedReturnAcrValue\"\n          id=\"expectedReturnAcrValue\"\n        />\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"data.value.configType == 2\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2>{{ \"samlSpConfig\" | i18n }}</h2>\n      <div class=\"form-group\">\n        <label>{{ \"spEntityId\" | i18n }}</label>\n        <div class=\"input-group\">\n          <input class=\"form-control\" readonly [value]=\"spEntityId\" />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n              (click)=\"copy(spEntityId)\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label>{{ \"spMetadataUrl\" | i18n }}</label>\n        <div class=\"input-group\">\n          <input class=\"form-control\" readonly [value]=\"spMetadataUrl\" />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              appA11yTitle=\"{{ 'launch' | i18n }}\"\n              (click)=\"launchUri(spMetadataUrl)\"\n            >\n              <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n              (click)=\"copy(spMetadataUrl)\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label>{{ \"spAcsUrl\" | i18n }}</label>\n        <div class=\"input-group\">\n          <input class=\"form-control\" readonly [value]=\"spAcsUrl\" />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n              (click)=\"copy(spAcsUrl)\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"spNameIdFormat\">{{ \"spNameIdFormat\" | i18n }}</label>\n        <select class=\"form-control\" formControlName=\"spNameIdFormat\" id=\"spNameIdFormat\">\n          <option [ngValue]=\"0\">Not Configured</option>\n          <option [ngValue]=\"1\">Unspecified</option>\n          <option [ngValue]=\"2\">Email Address</option>\n          <option [ngValue]=\"3\">X.509 Subject Name</option>\n          <option [ngValue]=\"4\">Windows Domain Qualified Name</option>\n          <option [ngValue]=\"5\">Kerberos Principal Name</option>\n          <option [ngValue]=\"6\">Entity Identifier</option>\n          <option [ngValue]=\"7\">Persistent</option>\n          <option [ngValue]=\"8\">Transient</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"spOutboundSigningAlgorithm\">{{ \"spOutboundSigningAlgorithm\" | i18n }}</label>\n        <select\n          class=\"form-control\"\n          formControlName=\"spOutboundSigningAlgorithm\"\n          id=\"spOutboundSigningAlgorithm\"\n        >\n          <option *ngFor=\"let o of samlSigningAlgorithms\" [ngValue]=\"o\">{{ o }}</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"spSigningBehavior\">{{ \"spSigningBehavior\" | i18n }}</label>\n        <select class=\"form-control\" formControlName=\"spSigningBehavior\" id=\"spSigningBehavior\">\n          <option [ngValue]=\"0\">If IdP Wants Authn Requests Signed</option>\n          <option [ngValue]=\"1\">Always</option>\n          <option [ngValue]=\"3\">Never</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"spMinIncomingSigningAlgorithm\">{{\n          \"spMinIncomingSigningAlgorithm\" | i18n\n        }}</label>\n        <select\n          class=\"form-control\"\n          formControlName=\"spMinIncomingSigningAlgorithm\"\n          id=\"spMinIncomingSigningAlgorithm\"\n        >\n          <option *ngFor=\"let o of samlSigningAlgorithms\" [ngValue]=\"o\">{{ o }}</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"spWantAssertionsSigned\"\n            formControlName=\"spWantAssertionsSigned\"\n          />\n          <label class=\"form-check-label\" for=\"spWantAssertionsSigned\">\n            {{ \"spWantAssertionsSigned\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"spValidateCertificates\"\n            formControlName=\"spValidateCertificates\"\n          />\n          <label class=\"form-check-label\" for=\"spValidateCertificates\">\n            {{ \"spValidateCertificates\" | i18n }}\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2>{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <div class=\"form-group\">\n        <label for=\"idpEntityId\">{{ \"idpEntityId\" | i18n }}</label>\n        <input class=\"form-control\" formControlName=\"idpEntityId\" id=\"idpEntityId\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"idpBindingType\">{{ \"idpBindingType\" | i18n }}</label>\n        <select class=\"form-control\" formControlName=\"idpBindingType\" id=\"idpBindingType\">\n          <option [ngValue]=\"1\">Redirect</option>\n          <option [ngValue]=\"2\">HTTP POST</option>\n          <option [ngValue]=\"4\">Artifact</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"idpSingleSignOnServiceUrl\">{{ \"idpSingleSignOnServiceUrl\" | i18n }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"idpSingleSignOnServiceUrl\"\n          id=\"idpSingleSignOnServiceUrl\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"idpSingleLogoutServiceUrl\">{{ \"idpSingleLogoutServiceUrl\" | i18n }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"idpSingleLogoutServiceUrl\"\n          id=\"idpSingleLogoutServiceUrl\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"idpArtifactResolutionServiceUrl\">{{\n          \"idpArtifactResolutionServiceUrl\" | i18n\n        }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"idpArtifactResolutionServiceUrl\"\n          id=\"idpArtifactResolutionServiceUrl\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"idpX509PublicCert\">{{ \"idpX509PublicCert\" | i18n }}</label>\n        <textarea\n          formControlName=\"idpX509PublicCert\"\n          class=\"form-control form-control-sm text-monospace\"\n          rows=\"6\"\n          id=\"idpX509PublicCert\"\n        ></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"idpOutboundSigningAlgorithm\">{{ \"idpOutboundSigningAlgorithm\" | i18n }}</label>\n        <select\n          class=\"form-control\"\n          formControlName=\"idpOutboundSigningAlgorithm\"\n          id=\"idpOutboundSigningAlgorithm\"\n        >\n          <option *ngFor=\"let o of samlSigningAlgorithms\" [ngValue]=\"o\">{{ o }}</option>\n        </select>\n      </div>\n      <div class=\"form-group\" [hidden]=\"true\">\n        <!--TODO: Unhide once Unsolicited IdP Response is supported-->\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"idpAllowUnsolicitedAuthnResponse\"\n            formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n          />\n          <label class=\"form-check-label\" for=\"idpAllowUnsolicitedAuthnResponse\">\n            {{ \"idpAllowUnsolicitedAuthnResponse\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"idpDisableOutboundLogoutRequests\"\n            formControlName=\"idpDisableOutboundLogoutRequests\"\n          />\n          <label class=\"form-check-label\" for=\"idpDisableOutboundLogoutRequests\">\n            {{ \"idpDisableOutboundLogoutRequests\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"idpWantAuthnRequestsSigned\"\n            formControlName=\"idpWantAuthnRequestsSigned\"\n          />\n          <label class=\"form-check-label\" for=\"idpWantAuthnRequestsSigned\">\n            {{ \"idpWantAuthnRequestsSigned\" | i18n }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\n\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\nimport { OrganizationLayoutComponent } from \"src/app/layouts/organization-layout.component\";\nimport { ManageComponent } from \"src/app/organizations/manage/manage.component\";\nimport { OrganizationGuardService } from \"src/app/services/organization-guard.service\";\nimport { OrganizationTypeGuardService } from \"src/app/services/organization-type-guard.service\";\n\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuardService, OrganizationGuardService],\n    children: [\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: {\n          permissions: [\n            Permissions.CreateNewCollections,\n            Permissions.EditAnyCollection,\n            Permissions.DeleteAnyCollection,\n            Permissions.EditAssignedCollections,\n            Permissions.DeleteAssignedCollections,\n            Permissions.AccessEventLogs,\n            Permissions.ManageGroups,\n            Permissions.ManageUsers,\n            Permissions.ManagePolicies,\n            Permissions.ManageSso,\n          ],\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { OssModule } from \"src/app/oss.module\";\n\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, OssModule, OrganizationsRoutingModule],\n  declarations: [SsoComponent],\n})\nexport class OrganizationsModule {}\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: FormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\n\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProviderUserType } from \"jslib-common/enums/providerUserType\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"jslib-common/models/response/provider/providerOrganizationResponse\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: any;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<any>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.apiService.getOrganization(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"o.organizationName\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            ></app-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"jslib-common/models/request/provider/providerUserAcceptRequest\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: any) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: any) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a routerLink=\"/\" [queryParams]=\"{ email: email }\" class=\"btn btn-primary btn-block\">\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkConfirmRequest } from \"jslib-common/models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"jslib-common/models/request/provider/providerUserBulkRequest\";\n\nimport { ProviderUserStatusType } from \"jslib-common/enums/providerUserStatusType\";\n\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"src/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"src/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl: \"../../../../../../src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"jslib-common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"src/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl: \"../../../../../../src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ \"removeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\n\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\n\nimport { EventService } from \"src/app/services/event.service\";\n\nimport { BaseEventsComponent } from \"src/app/common/base.events.component\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName: string = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe\n  ) {\n    super(eventService, i18nService, exportService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    return userId != null && this.providerUsersUserIdMap.has(userId)\n      ? this.providerUsersUserIdMap.get(userId)\n      : null;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\n\nimport { ProviderUserStatusType } from \"jslib-common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"jslib-common/enums/providerUserType\";\n\nimport { SearchPipe } from \"jslib-angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\n\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { ProviderUserUserDetailsResponse } from \"jslib-common/models/response/provider/providerUserResponse\";\n\nimport { ProviderUserBulkRequest } from \"jslib-common/models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"jslib-common/models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserBulkResponse } from \"jslib-common/models/response/provider/providerUserBulkResponse\";\n\nimport { BasePeopleComponent } from \"src/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"src/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"src/app/organizations/manage/entity-events.component\";\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityEventsComponent,\n      this.eventsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.entityId = user.id;\n        comp.showUser = false;\n        comp.entity = \"user\";\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id),\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{\n          acceptedCount\n        }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-remove\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ProviderUserInviteRequest } from \"jslib-common/models/request/provider/providerUserInviteRequest\";\n\nimport { PermissionsApi } from \"jslib-common/models/api/permissionsApi\";\n\nimport { ProviderUserType } from \"jslib-common/enums/providerUserType\";\nimport { ProviderUserUpdateRequest } from \"jslib-common/models/request/provider/providerUserUpdateRequest\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode: boolean = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nimport { FrontendLayoutComponent } from \"src/app/layouts/frontend-layout.component\";\n\nimport { ProvidersComponent } from \"src/app/providers/providers.component\";\nimport { ProviderGuardService } from \"./services/provider-guard.service\";\nimport { ProviderTypeGuardService } from \"./services/provider-type-guard.service\";\nimport { AccountComponent } from \"./settings/account.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuardService],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderGuardService],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderTypeGuardService],\n                data: {\n                  titleId: \"people\",\n                  permissions: [Permissions.ManageUsers],\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderTypeGuardService],\n                data: {\n                  titleId: \"eventLogs\",\n                  permissions: [Permissions.AccessEventLogs],\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderTypeGuardService],\n                data: {\n                  titleId: \"myProvider\",\n                  permissions: [Permissions.ManageProvider],\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver } from \"@angular/core\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { ProviderGuardService } from \"./services/provider-guard.service\";\nimport { ProviderTypeGuardService } from \"./services/provider-type-guard.service\";\nimport { WebProviderService } from \"./services/webProvider.service\";\n\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\n\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\n\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\n\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nimport { OssModule } from \"src/app/oss.module\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderGuardService, ProviderTypeGuardService],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\n@Injectable()\nexport class ProviderGuardService implements CanActivate {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private providerService: ProviderService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\n@Injectable()\nexport class ProviderTypeGuardService implements CanActivate {\n  constructor(private providerService: ProviderService, private router: Router) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    const permissions = route.data == null ? null : (route.data.permissions as Permissions[]);\n\n    if (\n      (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && provider.canAccessEventLogs) ||\n      (permissions.indexOf(Permissions.ManageProvider) !== -1 && provider.isProviderAdmin) ||\n      (permissions.indexOf(Permissions.ManageUsers) !== -1 && provider.canManageUsers)\n    ) {\n      return true;\n    }\n\n    this.router.navigate([\"/providers\", provider.id]);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { ProviderAddOrganizationRequest } from \"jslib-common/models/request/provider/providerAddOrganizationRequest\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { ProviderUpdateRequest } from \"jslib-common/models/request/provider/providerUpdateRequest\";\n\nimport { ProviderResponse } from \"jslib-common/models/response/provider/providerResponse\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ provider.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      const provider = await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: any) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  // tslint:disable-next-line\n  async unauthedHandler(qParams: any) {}\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a routerLink=\"/\" [queryParams]=\"{ email: email }\" class=\"btn btn-primary btn-block\">\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\n\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { ProviderSetupRequest } from \"jslib-common/models/request/provider/providerSetupRequest\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SecureNoteType } from \"jslib-common/enums/secureNoteType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\n\nimport { CardView } from \"jslib-common/models/view/cardView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { IdentityView } from \"jslib-common/models/view/identityView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\nimport { SecureNoteView } from \"jslib-common/models/view/secureNoteView\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode: boolean = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n\n  editMode: boolean = false;\n  cipher: CipherView;\n  folders: FolderView[];\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword: boolean = false;\n  showCardNumber: boolean = false;\n  showCardCode: boolean = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt: boolean = false;\n  canUseReprompt: boolean = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders = await this.folderService.getAllDecrypted();\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (\n      this.cipher.login != null &&\n      this.cipher.login.password != null &&\n      this.cipher.login.password.length\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://help.bitwarden.com/article/update-encryption-key/\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const buf = await response.arrayBuffer();\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-avatar\",\n  template:\n    '<img *ngIf=\"src\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n    \"[ngClass]=\\\"{'rounded-circle': circle}\\\">\",\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n  @Input() data: string;\n  @Input() email: string;\n  @Input() size = 45;\n  @Input() charCount = 2;\n  @Input() textColor = \"#ffffff\";\n  @Input() fontSize = 20;\n  @Input() fontWeight = 300;\n  @Input() dynamic = false;\n  @Input() circle = false;\n\n  src: string;\n\n  constructor(\n    public sanitizer: DomSanitizer,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dynamic) {\n      this.generate();\n    }\n  }\n\n  ngOnChanges() {\n    if (this.dynamic) {\n      this.generate();\n    }\n  }\n\n  private async generate() {\n    const enableGravatars = await this.stateService.getEnableGravitars();\n    if (enableGravatars && this.email != null) {\n      const hashBytes = await this.cryptoFunctionService.hash(\n        this.email.toLowerCase().trim(),\n        \"md5\"\n      );\n      const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n      this.src = \"https://www.gravatar.com/avatar/\" + hash + \"?s=\" + this.size + \"&r=pg&d=retro\";\n    } else {\n      let chars: string = null;\n      const upperData = this.data.toUpperCase();\n\n      if (this.charCount > 1) {\n        chars = this.getFirstLetters(upperData, this.charCount);\n      }\n      if (chars == null) {\n        chars = this.unicodeSafeSubstring(upperData, this.charCount);\n      }\n\n      // If the chars contain an emoji, only show it.\n      if (chars.match(Utils.regexpEmojiPresentation)) {\n        chars = chars.match(Utils.regexpEmojiPresentation)[0];\n      }\n\n      const charObj = this.getCharText(chars);\n      const color = this.stringToColor(upperData);\n      const svg = this.getSvg(this.size, color);\n      svg.appendChild(charObj);\n      const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n      const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n      this.src = \"data:image/svg+xml;base64,\" + svgHtml;\n    }\n  }\n\n  private stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      // tslint:disable-next-line\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      // tslint:disable-next-line\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private getSvg(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private getCharText(character: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", this.textColor);\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.fontWeight.toString();\n    textTag.style.fontSize = this.fontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CaptchaIFrame } from \"jslib-common/misc/captcha_iframe\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { KdfType } from \"jslib-common/enums/kdfType\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded: boolean = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted: boolean = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n    this.loaded = false;\n    this.ciphers = [];\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy: boolean = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n\n    const secret = this.exportForm.get(\"secret\").value;\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    return this.exportService.getExport(this.format);\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<any> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.platformUtilsService.saveFile(this.win, csv, { type: \"text/plain\" }, fileName);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode: boolean = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderService.saveWithServer(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\n\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Directive()\nexport class GroupingsComponent {\n  @Input() showFolders = true;\n  @Input() showCollections = true;\n  @Input() showFavorites = true;\n  @Input() showTrash = true;\n\n  @Output() onAllClicked = new EventEmitter();\n  @Output() onFavoritesClicked = new EventEmitter();\n  @Output() onTrashClicked = new EventEmitter();\n  @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n  @Output() onFolderClicked = new EventEmitter<FolderView>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n  @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded: boolean = false;\n  cipherType = CipherType;\n  selectedAll: boolean = false;\n  selectedFavorites: boolean = false;\n  selectedTrash: boolean = false;\n  selectedType: CipherType = null;\n  selectedFolder: boolean = false;\n  selectedFolderId: string = null;\n  selectedCollectionId: string = null;\n\n  private collapsedGroupings: Set<string>;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected folderService: FolderService,\n    protected stateService: StateService\n  ) {}\n\n  async load(setLoaded = true) {\n    const collapsedGroupings = await this.stateService.getCollapsedGroupings();\n    if (collapsedGroupings == null) {\n      this.collapsedGroupings = new Set<string>();\n    } else {\n      this.collapsedGroupings = new Set(collapsedGroupings);\n    }\n\n    await this.loadFolders();\n    await this.loadCollections();\n\n    if (setLoaded) {\n      this.loaded = true;\n    }\n  }\n\n  async loadCollections(organizationId?: string) {\n    if (!this.showCollections) {\n      return;\n    }\n    const collections = await this.collectionService.getAllDecrypted();\n    if (organizationId != null) {\n      this.collections = collections.filter((c) => c.organizationId === organizationId);\n    } else {\n      this.collections = collections;\n    }\n    this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n  }\n\n  async loadFolders() {\n    if (!this.showFolders) {\n      return;\n    }\n    this.folders = await this.folderService.getAllDecrypted();\n    this.nestedFolders = await this.folderService.getAllNested();\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.onAllClicked.emit();\n  }\n\n  selectFavorites() {\n    this.clearSelections();\n    this.selectedFavorites = true;\n    this.onFavoritesClicked.emit();\n  }\n\n  selectTrash() {\n    this.clearSelections();\n    this.selectedTrash = true;\n    this.onTrashClicked.emit();\n  }\n\n  selectType(type: CipherType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.onCipherTypeClicked.emit(type);\n  }\n\n  selectFolder(folder: FolderView) {\n    this.clearSelections();\n    this.selectedFolder = true;\n    this.selectedFolderId = folder.id;\n    this.onFolderClicked.emit(folder);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.clearSelections();\n    this.selectedCollectionId = collection.id;\n    this.onCollectionClicked.emit(collection);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedFavorites = false;\n    this.selectedTrash = false;\n    this.selectedType = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n    this.selectedCollectionId = null;\n  }\n\n  async collapse(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    if (grouping.id == null) {\n      return;\n    }\n    const id = idPrefix + grouping.id;\n    if (this.isCollapsed(grouping, idPrefix)) {\n      this.collapsedGroupings.delete(id);\n    } else {\n      this.collapsedGroupings.add(id);\n    }\n    await this.stateService.setCollapsedGroupings(this.collapsedGroupings);\n  }\n\n  isCollapsed(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    return this.collapsedGroupings.has(idPrefix + grouping.id);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { PasswordHintRequest } from \"jslib-common/models/request/passwordHintRequest\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nexport class HintComponent {\n  email: string = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img [src]=\"image\" appFallbackSrc=\"{{ fallbackImage }}\" *ngIf=\"imageEnabled && image\" alt=\"\" />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword: string = \"\";\n  pin: string = \"\";\n  showPassword: boolean = false;\n  email: string;\n  pinLock: boolean = false;\n  webVaultHostname: string = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute: string = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount.subscribe(async (_userId) => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setBiometricLocked(false);\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\n\nimport { take } from \"rxjs/operators\";\n\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email: string = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword: string = \"\";\n  showPassword: boolean = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail: boolean = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.authService.logIn(this.email, this.masterPassword, this.captchaToken);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.twoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { GeneratedPasswordHistory } from \"jslib-common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PasswordGeneratorPolicyOptions } from \"jslib-common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class PasswordGeneratorComponent implements OnInit {\n  @Input() showSelect: boolean = false;\n  @Output() onSelected = new EventEmitter<string>();\n\n  passTypeOptions: any[];\n  options: any = {};\n  password: string = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPolicyOptions: PasswordGeneratorPolicyOptions;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n\n  async ngOnInit() {\n    const optionsResponse = await this.passwordGenerationService.getOptions();\n    this.options = optionsResponse[0];\n    this.enforcedPolicyOptions = optionsResponse[1];\n    this.avoidAmbiguous = !this.options.ambiguous;\n    this.options.type = this.options.type === \"passphrase\" ? \"passphrase\" : \"password\";\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderChanged() {\n    this.saveOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizeOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n  }\n\n  async saveOptions(regenerate: boolean = true) {\n    this.normalizeOptions();\n    await this.passwordGenerationService.saveOptions(this.options);\n\n    if (regenerate) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  copy() {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.password);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  private normalizeOptions() {\n    // Application level normalize options depedent on class variables\n    this.options.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.options.uppercase &&\n      !this.options.lowercase &&\n      !this.options.number &&\n      !this.options.special\n    ) {\n      this.options.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"jslib-common/models/request/registerRequest\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { KdfType } from \"jslib-common/enums/kdfType\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  name: string = \"\";\n  email: string = \"\";\n  masterPassword: string = \"\";\n  confirmMasterPassword: string = \"\";\n  hint: string = \"\";\n  showPassword: boolean = false;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  acceptPolicies: boolean = false;\n\n  protected successRoute = \"login\";\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  async submit() {\n    if (!this.acceptPolicies && this.showTerms) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesError\")\n      );\n      return;\n    }\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return;\n    }\n    if (this.masterPassword !== this.confirmMasterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    if (this.hint === this.masterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"hintEqualsPassword\")\n      );\n      return;\n    }\n\n    this.name = this.name === \"\" ? null : this.name;\n    this.email = this.email.trim().toLowerCase();\n    const kdf = KdfType.PBKDF2_SHA256;\n    const useLowerKdf = this.platformUtilsService.isIE();\n    const kdfIterations = useLowerKdf ? 10000 : 100000;\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      this.email,\n      this.name,\n      hashedPassword,\n      this.hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"newAccountCreated\"));\n      this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing: boolean = false;\n  leaving: boolean = false;\n\n  loading: boolean = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { SendFileView } from \"jslib-common/models/view/sendFileView\";\nimport { SendTextView } from \"jslib-common/models/view/sendTextView\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { EncArrayBuffer } from \"jslib-common/models/domain/encArrayBuffer\";\nimport { Send } from \"jslib-common/models/domain/send\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new FormGroup({\n    selectedDeletionDatePreset: new FormControl(),\n    selectedExpirationDatePreset: new FormControl(),\n    defaultDeletionDateTime: new FormControl(),\n    defaultExpirationDateTime: new FormControl(),\n    fallbackDeletionDate: new FormControl(),\n    fallbackDeletionTime: new FormControl(),\n    fallbackExpirationDate: new FormControl(),\n    fallbackExpirationTime: new FormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as FormControl;\n  }\n\n  get selectedExpirationDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as FormControl;\n  }\n\n  get defaultDeletionDateTime(): FormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as FormControl;\n  }\n\n  get defaultExpirationDateTime(): FormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as FormControl;\n  }\n\n  get fallbackDeletionDate(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as FormControl;\n  }\n\n  get fallbackDeletionTime(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as FormControl;\n  }\n\n  get fallbackExpirationDate(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as FormControl;\n  }\n\n  get fallbackExpirationTime(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as FormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default:\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default:\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\n\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired: boolean = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"jslib-common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading: boolean = true;\n  showPassword: boolean = false;\n  hint: string = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = KdfType.PBKDF2_SHA256;\n    const useLowerKdf = this.platformUtilsService.isIE();\n    this.kdfIterations = useLowerKdf ? 10000 : 100000;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  static CUSTOM_VALUE = -100;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  // tslint:disable-next-line\n  registerOnTouched(onTouched: any): void {}\n\n  // tslint:disable-next-line\n  setDisabledState?(isDisabled: boolean): void {}\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    this.initiateSsoFormPromise = this.preValidate();\n    if (await this.initiateSsoFormPromise) {\n      const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n      this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n    }\n  }\n\n  async preValidate(): Promise<boolean> {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return false;\n    }\n    return await this.apiService.preValidateSso(this.identifier);\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      this.formPromise = this.authService.logInSso(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      const response = await this.formPromise;\n      if (response.twoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n      if (e.message === \"Unable to reach key connector\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorUnavailable\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.authService.getSupportedTwoFactorProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://help.bitwarden.com/article/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\n\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { TwoFactorProviders } from \"jslib-common/services/auth.service\";\n\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { WebAuthnIFrame } from \"jslib-common/misc/webauthn_iframe\";\n\n@Directive()\nexport class TwoFactorComponent implements OnInit, OnDestroy {\n  token: string = \"\";\n  remember: boolean = false;\n  webAuthnReady: boolean = false;\n  webAuthnNewTab: boolean = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported: boolean = false;\n  webAuthn: WebAuthnIFrame = null;\n  title: string = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService\n  ) {\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.authService.twoFactorProvidersData == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(\n      this.webAuthnSupported\n    );\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.authService.twoFactorProvidersData.size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      this.selectedProviderType,\n      this.token,\n      this.remember\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { PasswordRequest } from \"jslib-common/models/request/passwordRequest\";\n\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { Verification } from \"jslib-common/types/verification\";\n\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword: boolean = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    await this.stateService.setLoginRedirect(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { UpdateTempPasswordRequest } from \"jslib-common/models/request/updateTempPasswordRequest\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword: boolean = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\n\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-verify-master-password\",\n  templateUrl: \"verify-master-password.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VerifyMasterPasswordComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class VerifyMasterPasswordComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector: boolean = false;\n  disableRequestOTP: boolean = false;\n  sentCode: boolean = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\n\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if (\n          (e instanceof ErrorResponse || e.constructor.name === \"ErrorResponse\") &&\n          (e as ErrorResponse).captchaRequired\n        ) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\n\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NgControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += '<span class=\"password-' + type + '\">' + character + \"</span>\";\n    }\n    return colorizedPassword;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (!isAuthed) {\n      this.messagingService.send(\"authBlocked\");\n      return false;\n    }\n\n    const locked = await this.vaultTimeoutService.isLocked();\n    if (locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      this.router.navigate([\"lock\"], { queryParams: { promptBiometric: true } });\n      return false;\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      this.router.navigate([\"/remove-password\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"jslib-common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateService } from \"jslib-common/services/state.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { AuthGuardService } from \"./auth-guard.service\";\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\nimport { ValidationService } from \"./validation.service\";\n\nimport { Account } from \"jslib-common/models/domain/account\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\n\nimport { GlobalStateFactory } from \"jslib-common/factories/globalStateFactory\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    { provide: \"WINDOW\", useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    ValidationService,\n    AuthGuardService,\n    UnauthGuardService,\n    LockGuardService,\n    ModalService,\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [StorageServiceAbstraction],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        I18nServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        LogService,\n        CryptoFunctionServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useFactory: (\n        tokenService: TokenServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction\n      ) =>\n        new ApiService(\n          tokenService,\n          platformUtilsService,\n          environmentService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useFactory: (\n        apiService: ApiServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        cipherService: CipherServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        sendService: SendServiceAbstraction,\n        logService: LogService,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction,\n        organizationService: OrganizationServiceAbstraction,\n        providerService: ProviderServiceAbstraction\n      ) =>\n        new SyncService(\n          apiService,\n          settingsService,\n          folderService,\n          cipherService,\n          cryptoService,\n          collectionService,\n          messagingService,\n          policyService,\n          sendService,\n          logService,\n          keyConnectorService,\n          stateService,\n          organizationService,\n          providerService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useFactory: (\n        cipherService: CipherServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        searchService: SearchServiceAbstraction,\n        tokenService: TokenServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction\n      ) =>\n        new VaultTimeoutService(\n          cipherService,\n          folderService,\n          collectionService,\n          cryptoService,\n          platformUtilsService,\n          messagingService,\n          searchService,\n          tokenService,\n          policyService,\n          keyConnectorService,\n          stateService,\n          null,\n          async () => messagingService.send(\"logout\", { expired: false })\n        ),\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction,\n        logService: LogService,\n        stateMigrationService: StateMigrationServiceAbstraction\n      ) =>\n        new StateService(\n          storageService,\n          secureStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [\n        StorageServiceAbstraction,\n        \"SECURE_STORAGE\",\n        LogService,\n        StateMigrationServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction\n      ) =>\n        new StateMigrationService(\n          storageService,\n          secureStorageService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [StorageServiceAbstraction, \"SECURE_STORAGE\"],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useFactory: (\n        syncService: SyncServiceAbstraction,\n        appIdService: AppIdServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        vaultTimeoutService: VaultTimeoutServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new NotificationsService(\n          syncService,\n          appIdService,\n          apiService,\n          vaultTimeoutService,\n          environmentService,\n          async () => messagingService.send(\"logout\", { expired: true }),\n          logService,\n          stateService\n        ),\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [\"WINDOW\", PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class LockGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    if (await this.vaultTimeoutService.isLocked()) {\n      return true;\n    }\n\n    const redirectUrl = (await this.stateService.getIsAuthenticated())\n      ? [this.homepage]\n      : [this.loginpage];\n\n    this.router.navigate(redirectUrl);\n    return false;\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals: boolean = false;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config?: ModalConfig) {\n    if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n      return;\n    }\n\n    const [modalRef, _] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", (event) => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { ModalService } from \"./modal.service\";\n\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (isAuthed) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      if (locked) {\n        this.router.navigate([\"lock\"]);\n      } else {\n        this.router.navigate([this.homepage]);\n      }\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\n\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\n\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TokenRequest } from \"../models/request/tokenRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\n\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\n\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  postIdentityToken: (\n    request: TokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserBilling: () => Promise<BillingResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getFolder: (id: string) => Promise<FolderResponse>;\n  postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n  putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n  deleteFolder: (id: string) => Promise<any>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  putPolicy: (\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ) => Promise<PolicyResponse>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<boolean>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\n\nimport { AuthResult } from \"../models/domain/authResult\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class AuthService {\n  email: string;\n  masterPasswordHash: string;\n  code: string;\n  codeVerifier: string;\n  ssoRedirectUrl: string;\n  clientId: string;\n  clientSecret: string;\n  twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  selectedTwoFactorProviderType: TwoFactorProviderType;\n\n  logIn: (email: string, masterPassword: string, captchaToken?: string) => Promise<AuthResult>;\n  logInSso: (\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    orgId: string\n  ) => Promise<AuthResult>;\n  logInApiKey: (clientId: string, clientSecret: string) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ) => Promise<AuthResult>;\n  logInComplete: (\n    email: string,\n    masterPassword: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean,\n    captchaToken?: string\n  ) => Promise<AuthResult>;\n  logInSsoComplete: (\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ) => Promise<AuthResult>;\n  logInApiKeyComplete: (\n    clientId: string,\n    clientSecret: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ) => Promise<AuthResult>;\n  logOut: (callback: Function) => void;\n  getSupportedTwoFactorProviders: (win: Window) => any[];\n  getDefaultTwoFactorProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\n\nimport { CipherData } from \"../models/data/cipherData\";\n\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\n\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\n\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport abstract class ExportService {\n  getExport: (format?: \"csv\" | \"json\" | \"encrypted_json\") => Promise<string>;\n  getOrganizationExport: (\n    organizationId: string,\n    format?: \"csv\" | \"json\" | \"encrypted_json\"\n  ) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { FolderData } from \"../models/data/folderData\";\n\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\n\nimport { FolderView } from \"../models/view/folderView\";\n\nexport abstract class FolderService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAll: () => Promise<Folder[]>;\n  getAllDecrypted: () => Promise<FolderView[]>;\n  getAllNested: () => Promise<TreeNode<FolderView>[]>;\n  getNested: (id: string) => Promise<TreeNode<FolderView>>;\n  saveWithServer: (folder: Folder) => Promise<any>;\n  upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n}\n","export abstract class I18nService {\n  locale: string;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Importer } from \"../importers/importer\";\n\nexport interface ImportOption {\n  id: string;\n  name: string;\n}\nexport abstract class ImportService {\n  featuredImportOptions: ImportOption[];\n  regularImportOptions: ImportOption[];\n  getImportOptions: () => ImportOption[];\n  import: (importer: Importer, fileContents: string, organizationId?: string) => Promise<Error>;\n  getImporter: (format: string, organizationId: string) => Importer;\n}\n","import { Organization } from \"../models/domain/organization\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\n\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { DeviceType } from \"../enums/deviceType\";\nimport { ThemeType } from \"../enums/themeType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  identityClientId: string;\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isIE: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n  onDefaultSystemThemeChange: (\n    callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown\n  ) => unknown;\n  getEffectiveTheme: () => Promise<ThemeType>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyData } from \"../models/data/policyData\";\n\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\n\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nimport { PolicyType } from \"../enums/policyType\";\n\nexport abstract class PolicyService {\n  clearCache: () => void;\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\n\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/sendData\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricLocked: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricLocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<Set<string>>;\n  setCollapsedGroupings: (value: Set<string>, options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedFolders: (options?: StorageOptions) => Promise<FolderView[]>;\n  setDecryptedFolders: (value: FolderView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLegacyEtmKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setLegacyEtmKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getLoginRedirect: (options?: StorageOptions) => Promise<any>;\n  setLoginRedirect: (value: any, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class StorageService {\n  get: <T>(key: string, options?: StorageOptions) => Promise<T>;\n  has: (key: string, options?: StorageOptions) => Promise<boolean>;\n  save: (key: string, obj: any, options?: StorageOptions) => Promise<any>;\n  remove: (key: string, options?: StorageOptions) => Promise<any>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","export abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  toggleTokens: () => Promise<any>;\n  setTwoFactorToken: (token: string, email: string) => Promise<any>;\n  getTwoFactorToken: (email: string) => Promise<string>;\n  clearTwoFactorToken: (email: string) => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getPremium: () => Promise<boolean>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n  isAutoCopyEnabled: () => Promise<boolean>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\n\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class VaultTimeoutService {\n  isLocked: (userId?: string) => Promise<boolean>;\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","export enum Permissions {\n  AccessEventLogs,\n  AccessImportExport,\n  AccessReports,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAllCollections,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAssignedCollections,\n  ManageGroups,\n  ManageOrganization,\n  ManagePolicies,\n  ManageProvider,\n  ManageUsers,\n  ManageUsersPassword,\n  CreateNewCollections,\n  EditAnyCollection,\n  DeleteAnyCollection,\n  EditAssignedCollections,\n  DeleteAssignedCollections,\n  ManageSso,\n}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Latest = Two,\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 2) {\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      if (value.length > 2 && value.length % 2 === 0) {\n        for (let i = 0; i < value.length - 2; i += 2) {\n          const val: string = value[i + 2];\n          const field: string = value[i + 1];\n          if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n            continue;\n          }\n\n          const fieldLower = field.toLowerCase();\n          if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n            cipher.login.password = this.getValueOrDefault(val);\n          } else if (\n            cipher.login.username == null &&\n            this.usernameFieldNames.indexOf(fieldLower) > -1\n          ) {\n            cipher.login.username = this.getValueOrDefault(val);\n          } else if (\n            (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n            this.uriFieldNames.indexOf(fieldLower) > -1\n          ) {\n            cipher.login.uris = this.makeUriArray(val);\n          } else {\n            this.processKvp(cipher, field, val);\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class AvastCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.login.uris = this.makeUriArray(value.web);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.username = this.getValueOrDefault(value.login);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\nexport class AvastJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    if (results.logins != null) {\n      results.logins.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.name = this.getValueOrDefault(value.custName);\n        cipher.notes = this.getValueOrDefault(value.note);\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.password = this.getValueOrDefault(value.pwd);\n        cipher.login.username = this.getValueOrDefault(value.loginName);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (results.notes != null) {\n      results.notes.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote.type = SecureNoteType.Generic;\n        cipher.name = this.getValueOrDefault(value.label);\n        cipher.notes = this.getValueOrDefault(value.text);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (results.cards != null) {\n      results.cards.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.Card;\n        cipher.name = this.getValueOrDefault(value.custName);\n        cipher.notes = this.getValueOrDefault(value.note);\n        cipher.card.cardholderName = this.getValueOrDefault(value.holderName);\n        cipher.card.number = this.getValueOrDefault(value.cardNumber);\n        cipher.card.code = this.getValueOrDefault(value.cvv);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        if (value.expirationDate != null) {\n          if (value.expirationDate.month != null) {\n            cipher.card.expMonth = value.expirationDate.month + \"\";\n          }\n          if (value.expirationDate.year != null) {\n            cipher.card.expYear = value.expirationDate.year + \"\";\n          }\n        }\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(\n        value.name,\n        this.getValueOrDefault(this.nameFromUrl(value.website), \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(value.website);\n      cipher.login.password = this.getValueOrDefault(value.password);\n\n      if (\n        this.isNullOrWhitespace(value.username) &&\n        !this.isNullOrWhitespace(value.secondary_username)\n      ) {\n        cipher.login.username = value.secondary_username;\n      } else {\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.notes = this.getValueOrDefault(value.secondary_username);\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { LogService } from \"../abstractions/log.service\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { LoginUriView } from \"../models/view/loginUriView\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { FieldView } from \"../models/view/fieldView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { CipherRepromptType } from \"../enums/cipherRepromptType\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\nimport { ConsoleLogService } from \"../services/consoleLog.service\";\n\nexport abstract class BaseImporter {\n  organizationId: string = null;\n\n  protected logService: LogService = new ConsoleLogService(false);\n\n  protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n  protected passwordFieldNames = [\n    \"password\",\n    \"pass word\",\n    \"passphrase\",\n    \"pass phrase\",\n    \"pass\",\n    \"code\",\n    \"code word\",\n    \"codeword\",\n    \"secret\",\n    \"secret word\",\n    \"personpwd\",\n    \"key\",\n    \"keyword\",\n    \"key word\",\n    \"keyphrase\",\n    \"key phrase\",\n    \"form_pw\",\n    \"wppassword\",\n    \"pin\",\n    \"pwd\",\n    \"pw\",\n    \"pword\",\n    \"passwd\",\n    \"p\",\n    \"serial\",\n    \"serial#\",\n    \"license key\",\n    \"reg #\",\n\n    // Non-English names\n    \"passwort\",\n  ];\n\n  protected usernameFieldNames = [\n    \"user\",\n    \"name\",\n    \"user name\",\n    \"username\",\n    \"login name\",\n    \"email\",\n    \"e-mail\",\n    \"id\",\n    \"userid\",\n    \"user id\",\n    \"login\",\n    \"form_loginname\",\n    \"wpname\",\n    \"mail\",\n    \"loginid\",\n    \"login id\",\n    \"log\",\n    \"personlogin\",\n    \"first name\",\n    \"last name\",\n    \"card#\",\n    \"account #\",\n    \"member\",\n    \"member #\",\n\n    // Non-English names\n    \"nom\",\n    \"benutzername\",\n  ];\n\n  protected notesFieldNames = [\n    \"note\",\n    \"notes\",\n    \"comment\",\n    \"comments\",\n    \"memo\",\n    \"description\",\n    \"free form\",\n    \"freeform\",\n    \"free text\",\n    \"freetext\",\n    \"free\",\n\n    // Non-English names\n    \"kommentar\",\n  ];\n\n  protected uriFieldNames: string[] = [\n    \"url\",\n    \"hyper link\",\n    \"hyperlink\",\n    \"link\",\n    \"host\",\n    \"hostname\",\n    \"host name\",\n    \"server\",\n    \"address\",\n    \"hyper ref\",\n    \"href\",\n    \"web\",\n    \"website\",\n    \"web site\",\n    \"site\",\n    \"web-site\",\n    \"uri\",\n\n    // Non-English names\n    \"ort\",\n    \"adresse\",\n  ];\n\n  protected parseCsvOptions = {\n    encoding: \"UTF-8\",\n    skipEmptyLines: false,\n  };\n\n  protected get organization() {\n    return this.organizationId != null;\n  }\n\n  protected parseXml(data: string): Document {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(data, \"application/xml\");\n    return doc != null && doc.querySelector(\"parsererror\") == null ? doc : null;\n  }\n\n  protected parseCsv(data: string, header: boolean, options: any = {}): any[] {\n    const parseOptions: papa.ParseConfig<string> = Object.assign(\n      { header: header },\n      this.parseCsvOptions,\n      options\n    );\n    data = this.splitNewLine(data).join(\"\\n\").trim();\n    const result = papa.parse(data, parseOptions);\n    if (result.errors != null && result.errors.length > 0) {\n      result.errors.forEach((e) => {\n        if (e.row != null) {\n          // tslint:disable-next-line\n          this.logService.warning(\"Error parsing row \" + e.row + \": \" + e.message);\n        }\n      });\n    }\n    return result.data && result.data.length > 0 ? result.data : null;\n  }\n\n  protected parseSingleRowCsv(rowData: string) {\n    if (this.isNullOrWhitespace(rowData)) {\n      return null;\n    }\n    const parsedRow = this.parseCsv(rowData, false);\n    if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n      return parsedRow[0];\n    }\n    return null;\n  }\n\n  protected makeUriArray(uri: string | string[]): LoginUriView[] {\n    if (uri == null) {\n      return null;\n    }\n\n    if (typeof uri === \"string\") {\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.fixUri(uri);\n      if (this.isNullOrWhitespace(loginUri.uri)) {\n        return null;\n      }\n      loginUri.match = null;\n      return [loginUri];\n    }\n\n    if (uri.length > 0) {\n      const returnArr: LoginUriView[] = [];\n      uri.forEach((u) => {\n        const loginUri = new LoginUriView();\n        loginUri.uri = this.fixUri(u);\n        if (this.isNullOrWhitespace(loginUri.uri)) {\n          return;\n        }\n        loginUri.match = null;\n        returnArr.push(loginUri);\n      });\n      return returnArr.length === 0 ? null : returnArr;\n    }\n\n    return null;\n  }\n\n  protected fixUri(uri: string) {\n    if (uri == null) {\n      return null;\n    }\n    uri = uri.trim();\n    if (uri.indexOf(\"://\") === -1 && uri.indexOf(\".\") >= 0) {\n      uri = \"http://\" + uri;\n    }\n    if (uri.length > 1000) {\n      return uri.substring(0, 1000);\n    }\n    return uri;\n  }\n\n  protected nameFromUrl(url: string) {\n    const hostname = Utils.getHostname(url);\n    if (this.isNullOrWhitespace(hostname)) {\n      return null;\n    }\n    return hostname.startsWith(\"www.\") ? hostname.replace(\"www.\", \"\") : hostname;\n  }\n\n  protected isNullOrWhitespace(str: string): boolean {\n    return Utils.isNullOrWhitespace(str);\n  }\n\n  protected getValueOrDefault(str: string, defaultValue: string = null): string {\n    if (this.isNullOrWhitespace(str)) {\n      return defaultValue;\n    }\n    return str;\n  }\n\n  protected splitNewLine(str: string): string[] {\n    return str.split(this.newLineRegex);\n  }\n\n  // ref https://stackoverflow.com/a/5911300\n  protected getCardBrand(cardNum: string) {\n    if (this.isNullOrWhitespace(cardNum)) {\n      return null;\n    }\n\n    // Visa\n    let re = new RegExp(\"^4\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    // Mastercard\n    // Updated for Mastercard 2017 BINs expansion\n    if (\n      /^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/.test(\n        cardNum\n      )\n    ) {\n      return \"Mastercard\";\n    }\n\n    // AMEX\n    re = new RegExp(\"^3[47]\");\n    if (cardNum.match(re) != null) {\n      return \"Amex\";\n    }\n\n    // Discover\n    re = new RegExp(\n      \"^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)\"\n    );\n    if (cardNum.match(re) != null) {\n      return \"Discover\";\n    }\n\n    // Diners\n    re = new RegExp(\"^36\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // Diners - Carte Blanche\n    re = new RegExp(\"^30[0-5]\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // JCB\n    re = new RegExp(\"^35(2[89]|[3-8][0-9])\");\n    if (cardNum.match(re) != null) {\n      return \"JCB\";\n    }\n\n    // Visa Electron\n    re = new RegExp(\"^(4026|417500|4508|4844|491(3|7))\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    return null;\n  }\n\n  protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\n    if (!this.isNullOrWhitespace(expiration)) {\n      expiration = expiration.replace(/\\s/g, \"\");\n      const parts = expiration.split(\"/\");\n      if (parts.length === 2) {\n        let month: string = null;\n        let year: string = null;\n        if (parts[0].length === 1 || parts[0].length === 2) {\n          month = parts[0];\n          if (month.length === 2 && month[0] === \"0\") {\n            month = month.substr(1, 1);\n          }\n        }\n        if (parts[1].length === 2 || parts[1].length === 4) {\n          year = month.length === 2 ? \"20\" + parts[1] : parts[1];\n        }\n        if (month != null && year != null) {\n          cipher.card.expMonth = month;\n          cipher.card.expYear = year;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  protected moveFoldersToCollections(result: ImportResult) {\n    result.folderRelationships.forEach((r) => result.collectionRelationships.push(r));\n    result.collections = result.folders.map((f) => {\n      const collection = new CollectionView();\n      collection.name = f.name;\n      return collection;\n    });\n    result.folderRelationships = [];\n    result.folders = [];\n  }\n\n  protected querySelectorDirectChild(parentEl: Element, query: string) {\n    const els = this.querySelectorAllDirectChild(parentEl, query);\n    return els.length === 0 ? null : els[0];\n  }\n\n  protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n    return Array.from(parentEl.querySelectorAll(query)).filter((el) => el.parentNode === parentEl);\n  }\n\n  protected initLoginCipher() {\n    const cipher = new CipherView();\n    cipher.favorite = false;\n    cipher.notes = \"\";\n    cipher.fields = [];\n    cipher.login = new LoginView();\n    cipher.type = CipherType.Login;\n    return cipher;\n  }\n\n  protected cleanupCipher(cipher: CipherView) {\n    if (cipher == null) {\n      return;\n    }\n    if (cipher.type !== CipherType.Login) {\n      cipher.login = null;\n    }\n    if (this.isNullOrWhitespace(cipher.name)) {\n      cipher.name = \"--\";\n    }\n    if (this.isNullOrWhitespace(cipher.notes)) {\n      cipher.notes = null;\n    } else {\n      cipher.notes = cipher.notes.trim();\n    }\n    if (cipher.fields != null && cipher.fields.length === 0) {\n      cipher.fields = null;\n    }\n  }\n\n  protected processKvp(\n    cipher: CipherView,\n    key: string,\n    value: string,\n    type: FieldType = FieldType.Text\n  ) {\n    if (this.isNullOrWhitespace(value)) {\n      return;\n    }\n    if (this.isNullOrWhitespace(key)) {\n      key = \"\";\n    }\n    if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n      if (cipher.notes == null) {\n        cipher.notes = \"\";\n      }\n      cipher.notes += key + \": \" + this.splitNewLine(value).join(\"\\n\") + \"\\n\";\n    } else {\n      if (cipher.fields == null) {\n        cipher.fields = [];\n      }\n      const field = new FieldView();\n      field.type = type;\n      field.name = key;\n      field.value = value;\n      cipher.fields.push(field);\n    }\n  }\n\n  protected processFolder(result: ImportResult, folderName: string) {\n    let folderIndex = result.folders.length;\n    const hasFolder = !this.isNullOrWhitespace(folderName);\n    let addFolder = hasFolder;\n\n    if (hasFolder) {\n      for (let i = 0; i < result.folders.length; i++) {\n        if (result.folders[i].name === folderName) {\n          addFolder = false;\n          folderIndex = i;\n          break;\n        }\n      }\n    }\n\n    if (addFolder) {\n      const f = new FolderView();\n      f.name = folderName;\n      result.folders.push(f);\n    }\n    if (hasFolder) {\n      result.folderRelationships.push([result.ciphers.length, folderIndex]);\n    }\n  }\n\n  protected convertToNoteIfNeeded(cipher: CipherView) {\n    if (\n      cipher.type === CipherType.Login &&\n      this.isNullOrWhitespace(cipher.login.username) &&\n      this.isNullOrWhitespace(cipher.login.password) &&\n      (cipher.login.uris == null || cipher.login.uris.length === 0)\n    ) {\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n    }\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { CipherRepromptType } from \"../enums/cipherRepromptType\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n        const collections = (value.collections as string).split(\",\");\n        collections.forEach((col) => {\n          let addCollection = true;\n          let collectionIndex = result.collections.length;\n\n          for (let i = 0; i < result.collections.length; i++) {\n            if (result.collections[i].name === col) {\n              addCollection = false;\n              collectionIndex = i;\n              break;\n            }\n          }\n\n          if (addCollection) {\n            const collection = new CollectionView();\n            collection.name = col;\n            result.collections.push(collection);\n          }\n\n          result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n        });\n      } else if (!this.organization) {\n        this.processFolder(result, value.folder);\n      }\n\n      const cipher = new CipherView();\n      cipher.favorite =\n        !this.organization && this.getValueOrDefault(value.favorite, \"0\") !== \"0\" ? true : false;\n      cipher.type = CipherType.Login;\n      cipher.notes = this.getValueOrDefault(value.notes);\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      try {\n        cipher.reprompt = parseInt(\n          this.getValueOrDefault(value.reprompt, CipherRepromptType.None.toString()),\n          10\n        );\n      } catch (e) {\n        // tslint:disable-next-line\n        console.error(\"Unable to parse reprompt value\", e);\n        cipher.reprompt = CipherRepromptType.None;\n      }\n\n      if (!this.isNullOrWhitespace(value.fields)) {\n        const fields = this.splitNewLine(value.fields);\n        for (let i = 0; i < fields.length; i++) {\n          if (this.isNullOrWhitespace(fields[i])) {\n            continue;\n          }\n\n          const delimPosition = fields[i].lastIndexOf(\": \");\n          if (delimPosition === -1) {\n            continue;\n          }\n\n          if (cipher.fields == null) {\n            cipher.fields = [];\n          }\n\n          const field = new FieldView();\n          field.name = fields[i].substr(0, delimPosition);\n          field.value = null;\n          field.type = FieldType.Text;\n          if (fields[i].length > delimPosition + 2) {\n            field.value = fields[i].substr(delimPosition + 2);\n          }\n          cipher.fields.push(field);\n        }\n      }\n\n      const valueType = value.type != null ? value.type.toLowerCase() : null;\n      switch (valueType) {\n        case \"note\":\n          cipher.type = CipherType.SecureNote;\n          cipher.secureNote = new SecureNoteView();\n          cipher.secureNote.type = SecureNoteType.Generic;\n          break;\n        default:\n          cipher.type = CipherType.Login;\n          cipher.login = new LoginView();\n          cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n          cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n          cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n          const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n          cipher.login.uris = this.makeUriArray(uris);\n          break;\n      }\n\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { EncString } from \"../models/domain/encString\";\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CipherWithIds } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId } from \"../models/export/collectionWithId\";\nimport { FolderWithId } from \"../models/export/folderWithId\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\n  private results: any;\n  private result: ImportResult;\n\n  constructor(private cryptoService: CryptoService, private i18nService: I18nService) {\n    super();\n  }\n\n  async parse(data: string): Promise<ImportResult> {\n    this.result = new ImportResult();\n    this.results = JSON.parse(data);\n    if (this.results == null || this.results.items == null || this.results.items.length === 0) {\n      this.result.success = false;\n      return this.result;\n    }\n\n    if (this.results.encrypted) {\n      await this.parseEncrypted();\n    } else {\n      this.parseDecrypted();\n    }\n\n    return this.result;\n  }\n\n  private async parseEncrypted() {\n    if (this.results.encKeyValidation_DO_NOT_EDIT != null) {\n      const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const encKeyValidation = new EncString(this.results.encKeyValidation_DO_NOT_EDIT);\n      const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(\n        encKeyValidation,\n        orgKey\n      );\n      if (encKeyValidationDecrypt === null) {\n        this.result.success = false;\n        this.result.errorMessage = this.i18nService.t(\"importEncKeyError\");\n        return;\n      }\n    }\n\n    const groupingsMap = new Map<string, number>();\n\n    if (this.organization && this.results.collections != null) {\n      for (const c of this.results.collections as CollectionWithId[]) {\n        const collection = CollectionWithId.toDomain(c);\n        if (collection != null) {\n          collection.id = null;\n          collection.organizationId = this.organizationId;\n          const view = await collection.decrypt();\n          groupingsMap.set(c.id, this.result.collections.length);\n          this.result.collections.push(view);\n        }\n      }\n    } else if (!this.organization && this.results.folders != null) {\n      for (const f of this.results.folders as FolderWithId[]) {\n        const folder = FolderWithId.toDomain(f);\n        if (folder != null) {\n          folder.id = null;\n          const view = await folder.decrypt();\n          groupingsMap.set(f.id, this.result.folders.length);\n          this.result.folders.push(view);\n        }\n      }\n    }\n\n    for (const c of this.results.items as CipherWithIds[]) {\n      const cipher = CipherWithIds.toDomain(c);\n      // reset ids incase they were set for some reason\n      cipher.id = null;\n      cipher.folderId = null;\n      cipher.organizationId = this.organizationId;\n      cipher.collectionIds = null;\n\n      // make sure password history is limited\n      if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n        cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n      }\n\n      if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n        this.result.folderRelationships.push([\n          this.result.ciphers.length,\n          groupingsMap.get(c.folderId),\n        ]);\n      } else if (this.organization && c.collectionIds != null) {\n        c.collectionIds.forEach((cId) => {\n          if (groupingsMap.has(cId)) {\n            this.result.collectionRelationships.push([\n              this.result.ciphers.length,\n              groupingsMap.get(cId),\n            ]);\n          }\n        });\n      }\n\n      const view = await cipher.decrypt();\n      this.cleanupCipher(view);\n      this.result.ciphers.push(view);\n    }\n\n    this.result.success = true;\n  }\n\n  private parseDecrypted() {\n    const groupingsMap = new Map<string, number>();\n    if (this.organization && this.results.collections != null) {\n      this.results.collections.forEach((c: CollectionWithId) => {\n        const collection = CollectionWithId.toView(c);\n        if (collection != null) {\n          collection.id = null;\n          collection.organizationId = null;\n          groupingsMap.set(c.id, this.result.collections.length);\n          this.result.collections.push(collection);\n        }\n      });\n    } else if (!this.organization && this.results.folders != null) {\n      this.results.folders.forEach((f: FolderWithId) => {\n        const folder = FolderWithId.toView(f);\n        if (folder != null) {\n          folder.id = null;\n          groupingsMap.set(f.id, this.result.folders.length);\n          this.result.folders.push(folder);\n        }\n      });\n    }\n\n    this.results.items.forEach((c: CipherWithIds) => {\n      const cipher = CipherWithIds.toView(c);\n      // reset ids incase they were set for some reason\n      cipher.id = null;\n      cipher.folderId = null;\n      cipher.organizationId = null;\n      cipher.collectionIds = null;\n\n      // make sure password history is limited\n      if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n        cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n      }\n\n      if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n        this.result.folderRelationships.push([\n          this.result.ciphers.length,\n          groupingsMap.get(c.folderId),\n        ]);\n      } else if (this.organization && c.collectionIds != null) {\n        c.collectionIds.forEach((cId) => {\n          if (groupingsMap.has(cId)) {\n            this.result.collectionRelationships.push([\n              this.result.ciphers.length,\n              groupingsMap.get(cId),\n            ]);\n          }\n        });\n      }\n\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n\n    this.result.success = true;\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class BlackBerryCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.grouping === \"list\") {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.favorite = value.fav === \"1\";\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.notes = this.getValueOrDefault(value.extra);\n      if (value.grouping !== \"note\") {\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.username = this.getValueOrDefault(value.username);\n      }\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.label === \"null\") {\n        value.label = null;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(\n        value.label,\n        this.getValueOrDefault(this.nameFromUrl(value.domain), \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(value.domain);\n      cipher.login.password = this.getValueOrDefault(value.password);\n\n      if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n        cipher.login.username = value.username;\n      } else {\n        cipher.login.username = this.getValueOrDefault(value.email);\n        cipher.notes = this.getValueOrDefault(value.username);\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nconst OfficialProps = [\"!group_id\", \"!group_name\", \"title\", \"username\", \"password\", \"URL\", \"id\"];\n\nexport class ButtercupCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValueOrDefault(value[\"!group_name\"]));\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n\n      let processingCustomFields = false;\n      for (const prop in value) {\n        if (value.hasOwnProperty(prop)) {\n          if (!processingCustomFields && OfficialProps.indexOf(prop) === -1) {\n            processingCustomFields = true;\n          }\n          if (processingCustomFields) {\n            this.processKvp(cipher, prop, value[prop]);\n          }\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const textarea = doc.querySelector(\"textarea\");\n    if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n      result.errorMessage = \"Missing textarea.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const entries = JSON.parse(textarea.textContent);\n    entries.forEach((entry: any) => {\n      const cipher = this.initLoginCipher();\n      if (!this.isNullOrWhitespace(entry.label)) {\n        cipher.name = entry.label.split(\" \")[0];\n      }\n      if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n        cipher.notes = entry.data.notes.split(\"\\\\n\").join(\"\\n\");\n      }\n\n      if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n        for (const property in entry.currentVersion.fields) {\n          if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n            continue;\n          }\n\n          const field = entry.currentVersion.fields[property];\n          const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n          switch (actionType) {\n            case \"password\":\n              cipher.login.password = this.getValueOrDefault(field.value);\n              break;\n            case \"email\":\n            case \"username\":\n            case \"user\":\n            case \"name\":\n              cipher.login.username = this.getValueOrDefault(field.value);\n              break;\n            case \"url\":\n              cipher.login.uris = this.makeUriArray(field.value);\n              break;\n            default:\n              const labelLower = field.label != null ? field.label.toLowerCase() : null;\n              if (\n                cipher.login.password == null &&\n                this.passwordFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.password = this.getValueOrDefault(field.value);\n              } else if (\n                cipher.login.username == null &&\n                this.usernameFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.username = this.getValueOrDefault(field.value);\n              } else if (\n                (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                this.uriFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.uris = this.makeUriArray(field.value);\n              } else {\n                this.processKvp(cipher, field.label, field.value);\n              }\n              break;\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class CodebookCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValueOrDefault(value.Category));\n\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.Favorite) === \"True\";\n      cipher.name = this.getValueOrDefault(value.Entry, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Note);\n      cipher.login.username = this.getValueOrDefault(value.Username, value.Email);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.totp = this.getValueOrDefault(value.TOTP);\n      cipher.login.uris = this.makeUriArray(value.Website);\n\n      if (!this.isNullOrWhitespace(value.Username)) {\n        this.processKvp(cipher, \"Email\", value.Email);\n      }\n      this.processKvp(cipher, \"Phone\", value.Phone);\n      this.processKvp(cipher, \"PIN\", value.PIN);\n      this.processKvp(cipher, \"Account\", value.Account);\n      this.processKvp(cipher, \"Date\", value.Date);\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { IdentityView } from \"../models/view/identityView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\nconst HandledResults = new Set([\n  \"ADDRESS\",\n  \"AUTHENTIFIANT\",\n  \"BANKSTATEMENT\",\n  \"IDCARD\",\n  \"IDENTITY\",\n  \"PAYMENTMEANS_CREDITCARD\",\n  \"PAYMENTMEAN_PAYPAL\",\n  \"EMAIL\",\n]);\n\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\n  private result: ImportResult;\n\n  parse(data: string): Promise<ImportResult> {\n    this.result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.length === 0) {\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    if (results.ADDRESS != null) {\n      this.processAddress(results.ADDRESS);\n    }\n    if (results.AUTHENTIFIANT != null) {\n      this.processAuth(results.AUTHENTIFIANT);\n    }\n    if (results.BANKSTATEMENT != null) {\n      this.processNote(results.BANKSTATEMENT, \"BankAccountName\");\n    }\n    if (results.IDCARD != null) {\n      this.processNote(results.IDCARD, \"Fullname\");\n    }\n    if (results.PAYMENTMEANS_CREDITCARD != null) {\n      this.processCard(results.PAYMENTMEANS_CREDITCARD);\n    }\n    if (results.IDENTITY != null) {\n      this.processIdentity(results.IDENTITY);\n    }\n\n    for (const key in results) {\n      if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\n        this.processNote(results[key], null, \"Generic Note\");\n      }\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processAuth(results: any[]) {\n    results.forEach((credential: any) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(credential.title);\n\n      cipher.login.username = this.getValueOrDefault(\n        credential.login,\n        this.getValueOrDefault(credential.secondaryLogin)\n      );\n      if (this.isNullOrWhitespace(cipher.login.username)) {\n        cipher.login.username = this.getValueOrDefault(credential.email);\n      } else if (!this.isNullOrWhitespace(credential.email)) {\n        cipher.notes = \"Email: \" + credential.email + \"\\n\";\n      }\n\n      cipher.login.password = this.getValueOrDefault(credential.password);\n      cipher.login.uris = this.makeUriArray(credential.domain);\n      cipher.notes += this.getValueOrDefault(credential.note, \"\");\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processIdentity(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.identity = new IdentityView();\n      cipher.type = CipherType.Identity;\n      cipher.name = this.getValueOrDefault(obj.fullName, \"\");\n      const nameParts = cipher.name.split(\" \");\n      if (nameParts.length > 0) {\n        cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n      }\n      if (nameParts.length === 2) {\n        cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n      } else if (nameParts.length === 3) {\n        cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n        cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\n      }\n      cipher.identity.username = this.getValueOrDefault(obj.pseudo);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processAddress(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.identity = new IdentityView();\n      cipher.type = CipherType.Identity;\n      cipher.name = this.getValueOrDefault(obj.addressName);\n      cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\n      cipher.identity.city = this.getValueOrDefault(obj.city);\n      cipher.identity.state = this.getValueOrDefault(obj.state);\n      cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\n      cipher.identity.country = this.getValueOrDefault(obj.country);\n      if (cipher.identity.country != null) {\n        cipher.identity.country = cipher.identity.country.toUpperCase();\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processCard(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.card = new CardView();\n      cipher.type = CipherType.Card;\n      cipher.name = this.getValueOrDefault(obj.bank);\n      cipher.card.number = this.getValueOrDefault(obj.cardNumber);\n      cipher.card.brand = this.getCardBrand(cipher.card.number);\n      cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\n      if (!this.isNullOrWhitespace(cipher.card.brand)) {\n        if (this.isNullOrWhitespace(cipher.name)) {\n          cipher.name = cipher.card.brand;\n        } else {\n          cipher.name += \" - \" + cipher.card.brand;\n        }\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processNote(results: any[], nameProperty: string, name: string = null) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.secureNote = new SecureNoteView();\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote.type = SecureNoteType.Generic;\n      if (name != null) {\n        cipher.name = name;\n      } else {\n        cipher.name = this.getValueOrDefault(obj[nameProperty]);\n      }\n      for (const key in obj) {\n        if (obj.hasOwnProperty(key) && key !== nameProperty) {\n          this.processKvp(cipher, key, obj[key].toString());\n        }\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CardView } from \"../models/view/cardView\";\n\nimport { CipherType } from \"../enums/cipherType\";\n\nexport class EncryptrCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Label, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      const text = this.getValueOrDefault(value.Text);\n      if (!this.isNullOrWhitespace(text)) {\n        if (this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes = text;\n        } else {\n          cipher.notes += \"\\n\\n\" + text;\n        }\n      }\n\n      const type = value[\"Entry Type\"];\n      if (type === \"Password\") {\n        cipher.login.username = this.getValueOrDefault(value.Username);\n        cipher.login.password = this.getValueOrDefault(value.Password);\n        cipher.login.uris = this.makeUriArray(value[\"Site URL\"]);\n      } else if (type === \"Credit Card\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value[\"Name on card\"]);\n        cipher.card.number = this.getValueOrDefault(value[\"Card Number\"]);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.CVV);\n        const expiry = this.getValueOrDefault(value.Expiry);\n        if (!this.isNullOrWhitespace(expiry)) {\n          const expParts = expiry.split(\"/\");\n          if (expParts.length > 1) {\n            cipher.card.expMonth = parseInt(expParts[0], null).toString();\n            cipher.card.expYear = (2000 + parseInt(expParts[1], null)).toString();\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\nimport { CardView } from \"../models/view/cardView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let firstRow = true;\n    results.forEach((value) => {\n      if (value.length < 2 || (firstRow && (value[0] === \"Title\" || value[0] === \"title\"))) {\n        firstRow = false;\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      if (\n        value.length === 2 ||\n        (!this.containsField(value, \"username\") &&\n          !this.containsField(value, \"password\") &&\n          !this.containsField(value, \"email\") &&\n          !this.containsField(value, \"url\"))\n      ) {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n      }\n\n      if (\n        this.containsField(value, \"cardholder\") &&\n        this.containsField(value, \"number\") &&\n        this.containsField(value, \"expiry date\")\n      ) {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n      }\n\n      if (value.length > 2 && value.length % 2 === 0) {\n        for (let i = 0; i < value.length - 2; i += 2) {\n          const fieldValue: string = value[i + 2];\n          if (this.isNullOrWhitespace(fieldValue)) {\n            continue;\n          }\n\n          const fieldName: string = value[i + 1];\n          const fieldNameLower = fieldName.toLowerCase();\n\n          if (cipher.type === CipherType.Login) {\n            if (\n              fieldNameLower === \"url\" &&\n              (cipher.login.uris == null || cipher.login.uris.length === 0)\n            ) {\n              cipher.login.uris = this.makeUriArray(fieldValue);\n              continue;\n            } else if (\n              (fieldNameLower === \"username\" || fieldNameLower === \"email\") &&\n              this.isNullOrWhitespace(cipher.login.username)\n            ) {\n              cipher.login.username = fieldValue;\n              continue;\n            } else if (\n              fieldNameLower === \"password\" &&\n              this.isNullOrWhitespace(cipher.login.password)\n            ) {\n              cipher.login.password = fieldValue;\n              continue;\n            } else if (fieldNameLower === \"totp\" && this.isNullOrWhitespace(cipher.login.totp)) {\n              cipher.login.totp = fieldValue;\n              continue;\n            }\n          } else if (cipher.type === CipherType.Card) {\n            if (\n              fieldNameLower === \"cardholder\" &&\n              this.isNullOrWhitespace(cipher.card.cardholderName)\n            ) {\n              cipher.card.cardholderName = fieldValue;\n              continue;\n            } else if (fieldNameLower === \"number\" && this.isNullOrWhitespace(cipher.card.number)) {\n              cipher.card.number = fieldValue;\n              cipher.card.brand = this.getCardBrand(fieldValue);\n              continue;\n            } else if (fieldNameLower === \"cvc\" && this.isNullOrWhitespace(cipher.card.code)) {\n              cipher.card.code = fieldValue;\n              continue;\n            } else if (\n              fieldNameLower === \"expiry date\" &&\n              this.isNullOrWhitespace(cipher.card.expMonth) &&\n              this.isNullOrWhitespace(cipher.card.expYear)\n            ) {\n              if (this.setCardExpiration(cipher, fieldValue)) {\n                continue;\n              }\n            } else if (fieldNameLower === \"type\") {\n              // Skip since brand was determined from number above\n              continue;\n            }\n          }\n\n          this.processKvp(cipher, fieldName, fieldValue);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private containsField(fields: any[], name: string) {\n    if (fields == null || name == null) {\n      return false;\n    }\n    return (\n      fields.filter((f) => !this.isNullOrWhitespace(f) && f.toLowerCase() === name.toLowerCase())\n        .length > 0\n    );\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\n\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.items == null || results.items.length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, string>();\n    const foldersIndexMap = new Map<string, number>();\n    const folderTree = this.buildFolderTree(results.folders);\n    this.flattenFolderTree(null, folderTree, foldersMap);\n    foldersMap.forEach((val, key) => {\n      foldersIndexMap.set(key, result.folders.length);\n      const f = new FolderView();\n      f.name = val;\n      result.folders.push(f);\n    });\n\n    results.items.forEach((item: any) => {\n      if (item.folders != null && item.folders.length > 0 && foldersIndexMap.has(item.folders[0])) {\n        result.folderRelationships.push([\n          result.ciphers.length,\n          foldersIndexMap.get(item.folders[0]),\n        ]);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(item.title);\n      cipher.favorite = item.favorite > 0;\n\n      if (item.template_type != null && item.fields != null && item.fields.length > 0) {\n        if (\n          item.template_type.indexOf(\"login.\") === 0 ||\n          item.template_type.indexOf(\"password.\") === 0\n        ) {\n          this.processLogin(cipher, item.fields);\n        } else if (item.template_type.indexOf(\"creditcard.\") === 0) {\n          this.processCard(cipher, item.fields);\n        } else if (\n          item.template_type.indexOf(\"identity.\") < 0 &&\n          item.fields.some((f: any) => f.type === \"password\" && !this.isNullOrWhitespace(f.value))\n        ) {\n          this.processLogin(cipher, item.fields);\n        } else {\n          this.processNote(cipher, item.fields);\n        }\n      }\n\n      cipher.notes += \"\\n\" + this.getValueOrDefault(item.note, \"\");\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private processLogin(cipher: CipherView, fields: any[]) {\n    const urls: string[] = [];\n    fields.forEach((field: any) => {\n      if (this.isNullOrWhitespace(field.value) || field.type === \"section\") {\n        return;\n      }\n\n      if (\n        (field.type === \"username\" || field.type === \"email\") &&\n        this.isNullOrWhitespace(cipher.login.username)\n      ) {\n        cipher.login.username = field.value;\n      } else if (field.type === \"password\" && this.isNullOrWhitespace(cipher.login.password)) {\n        cipher.login.password = field.value;\n      } else if (field.type === \"totp\" && this.isNullOrWhitespace(cipher.login.totp)) {\n        cipher.login.totp = field.value;\n      } else if (field.type === \"url\") {\n        urls.push(field.value);\n      } else {\n        this.processKvp(\n          cipher,\n          field.label,\n          field.value,\n          field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n        );\n      }\n    });\n    cipher.login.uris = this.makeUriArray(urls);\n  }\n\n  private processCard(cipher: CipherView, fields: any[]) {\n    cipher.card = new CardView();\n    cipher.type = CipherType.Card;\n    fields.forEach((field: any) => {\n      if (\n        this.isNullOrWhitespace(field.value) ||\n        field.type === \"section\" ||\n        field.type === \"ccType\"\n      ) {\n        return;\n      }\n\n      if (field.type === \"ccName\" && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n        cipher.card.cardholderName = field.value;\n      } else if (field.type === \"ccNumber\" && this.isNullOrWhitespace(cipher.card.number)) {\n        cipher.card.number = field.value;\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n      } else if (field.type === \"ccCvc\" && this.isNullOrWhitespace(cipher.card.code)) {\n        cipher.card.code = field.value;\n      } else if (field.type === \"ccExpiry\" && this.isNullOrWhitespace(cipher.card.expYear)) {\n        if (!this.setCardExpiration(cipher, field.value)) {\n          this.processKvp(\n            cipher,\n            field.label,\n            field.value,\n            field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n          );\n        }\n      } else {\n        this.processKvp(\n          cipher,\n          field.label,\n          field.value,\n          field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n        );\n      }\n    });\n  }\n\n  private processNote(cipher: CipherView, fields: any[]) {\n    fields.forEach((field: any) => {\n      if (this.isNullOrWhitespace(field.value) || field.type === \"section\") {\n        return;\n      }\n      this.processKvp(\n        cipher,\n        field.label,\n        field.value,\n        field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n      );\n    });\n  }\n\n  private buildFolderTree(folders: any[]): any[] {\n    if (folders == null) {\n      return [];\n    }\n    const folderTree: any[] = [];\n    const map = new Map<string, any>([]);\n    folders.forEach((obj: any) => {\n      map.set(obj.uuid, obj);\n      obj.children = [];\n    });\n    folders.forEach((obj: any) => {\n      if (obj.parent_uuid != null && obj.parent_uuid !== \"\" && map.has(obj.parent_uuid)) {\n        map.get(obj.parent_uuid).children.push(obj);\n      } else {\n        folderTree.push(obj);\n      }\n    });\n    return folderTree;\n  }\n\n  private flattenFolderTree(titlePrefix: string, tree: any[], map: Map<string, string>) {\n    if (tree == null) {\n      return;\n    }\n    tree.forEach((f: any) => {\n      if (f.title != null && f.title.trim() !== \"\") {\n        let title = f.title.trim();\n        if (titlePrefix != null && titlePrefix.trim() !== \"\") {\n          title = titlePrefix + \"/\" + title;\n        }\n        map.set(f.uuid, title);\n        if (f.children != null && f.children.length !== 0) {\n          this.flattenFolderTree(title, f.children, map);\n        }\n      }\n    });\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results\n      .filter((value) => {\n        return value.url !== \"chrome://FirefoxAccounts\";\n      })\n      .forEach((value) => {\n        const cipher = this.initLoginCipher();\n        const url = this.getValueOrDefault(value.url, this.getValueOrDefault(value.hostname));\n        cipher.name = this.getValueOrDefault(this.nameFromUrl(url), \"--\");\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.uris = this.makeUriArray(url);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CardView } from \"../models/view/cardView\";\n\nimport { CipherType } from \"../enums/cipherType\";\n\nexport class FSecureFskImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.data == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    for (const key in results.data) {\n      if (!results.data.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const value = results.data[key];\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.service);\n      cipher.notes = this.getValueOrDefault(value.notes);\n\n      if (value.style === \"website\" || value.style === \"globe\") {\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.uris = this.makeUriArray(value.url);\n      } else if (value.style === \"creditcard\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.username);\n        cipher.card.number = this.getValueOrDefault(value.creditNumber);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.creditCvv);\n        if (!this.isNullOrWhitespace(value.creditExpiry)) {\n          if (!this.setCardExpiration(cipher, value.creditExpiry)) {\n            this.processKvp(cipher, \"Expiration\", value.creditExpiry);\n          }\n        }\n        if (!this.isNullOrWhitespace(value.password)) {\n          this.processKvp(cipher, \"PIN\", value.password);\n        }\n      } else {\n        continue;\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || Object.keys(results).length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    for (const keyRing in results) {\n      if (\n        !results.hasOwnProperty(keyRing) ||\n        this.isNullOrWhitespace(keyRing) ||\n        results[keyRing].length === 0\n      ) {\n        continue;\n      }\n\n      results[keyRing].forEach((value: any) => {\n        if (\n          this.isNullOrWhitespace(value.display_name) ||\n          value.display_name.indexOf(\"http\") !== 0\n        ) {\n          return;\n        }\n\n        this.processFolder(result, keyRing);\n        const cipher = this.initLoginCipher();\n        cipher.name = value.display_name.replace(\"http://\", \"\").replace(\"https://\", \"\");\n        if (cipher.name.length > 30) {\n          cipher.name = cipher.name.substring(0, 30);\n        }\n        cipher.login.password = this.getValueOrDefault(value.secret);\n        cipher.login.uris = this.makeUriArray(value.display_name);\n\n        if (value.attributes != null) {\n          cipher.login.username =\n            value.attributes != null\n              ? this.getValueOrDefault(value.attributes.username_value)\n              : null;\n          for (const attr in value.attributes) {\n            if (\n              !value.attributes.hasOwnProperty(attr) ||\n              attr === \"username_value\" ||\n              attr === \"xdg:schema\"\n            ) {\n              continue;\n            }\n            this.processKvp(cipher, attr, value.attributes[attr]);\n          }\n        }\n\n        this.convertToNoteIfNeeded(cipher);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nconst NotesHeader = \"Notes\\n\\n\";\nconst ApplicationsHeader = \"Applications\\n\\n\";\nconst WebsitesHeader = \"Websites\\n\\n\";\nconst Delimiter = \"\\n---\\n\";\n\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n\n    let notesData: string;\n    let applicationsData: string;\n    let websitesData: string;\n    let workingData = this.splitNewLine(data).join(\"\\n\");\n\n    if (workingData.indexOf(NotesHeader) !== -1) {\n      const parts = workingData.split(NotesHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        notesData = parts[1];\n      }\n    }\n    if (workingData.indexOf(ApplicationsHeader) !== -1) {\n      const parts = workingData.split(ApplicationsHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        applicationsData = parts[1];\n      }\n    }\n    if (workingData.indexOf(WebsitesHeader) === 0) {\n      const parts = workingData.split(WebsitesHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        websitesData = parts[1];\n      }\n    }\n\n    const notes = this.parseDataCategory(notesData);\n    const applications = this.parseDataCategory(applicationsData);\n    const websites = this.parseDataCategory(websitesData);\n\n    notes.forEach((n) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(n.get(\"Name\"));\n      cipher.notes = this.getValueOrDefault(n.get(\"Text\"));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    websites.concat(applications).forEach((w) => {\n      const cipher = this.initLoginCipher();\n      const nameKey = w.has(\"Website name\") ? \"Website name\" : \"Application\";\n      cipher.name = this.getValueOrDefault(w.get(nameKey), \"\");\n      if (!this.isNullOrWhitespace(w.get(\"Login name\"))) {\n        if (!this.isNullOrWhitespace(cipher.name)) {\n          cipher.name += \": \";\n        }\n        cipher.name += w.get(\"Login name\");\n      }\n      cipher.notes = this.getValueOrDefault(w.get(\"Comment\"));\n      if (w.has(\"Website URL\")) {\n        cipher.login.uris = this.makeUriArray(w.get(\"Website URL\"));\n      }\n      cipher.login.username = this.getValueOrDefault(w.get(\"Login\"));\n      cipher.login.password = this.getValueOrDefault(w.get(\"Password\"));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseDataCategory(data: string): Map<string, string>[] {\n    if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\n      return [];\n    }\n    const items: Map<string, string>[] = [];\n    data.split(Delimiter).forEach((p) => {\n      if (p.indexOf(\"\\n\") === -1) {\n        return;\n      }\n      const item = new Map<string, string>();\n      let itemComment: string;\n      let itemCommentKey: string;\n      p.split(\"\\n\").forEach((l) => {\n        if (itemComment != null) {\n          itemComment += \"\\n\" + l;\n          return;\n        }\n        const colonIndex = l.indexOf(\":\");\n        let key: string;\n        let val: string;\n        if (colonIndex === -1) {\n          return;\n        } else {\n          key = l.substring(0, colonIndex);\n          if (l.length > colonIndex + 1) {\n            val = l.substring(colonIndex + 2);\n          }\n        }\n        if (key != null) {\n          item.set(key, val);\n        }\n        if (key === \"Comment\" || key === \"Text\") {\n          itemComment = val;\n          itemCommentKey = key;\n        }\n      });\n      if (itemComment != null && itemCommentKey != null) {\n        item.set(itemCommentKey, itemComment);\n      }\n      if (item.size === 0) {\n        return;\n      }\n      items.push(item);\n    });\n    return items;\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { FieldType } from \"../enums/fieldType\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    const rootGroup = doc.querySelector(\"KeePassFile > Root > Group\");\n    if (rootGroup == null) {\n      this.result.errorMessage = \"Missing `KeePassFile > Root > Group` node.\";\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    this.traverse(rootGroup, true, \"\");\n\n    if (this.organization) {\n      this.moveFoldersToCollections(this.result);\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n    const folderIndex = this.result.folders.length;\n    let groupName = groupPrefixName;\n\n    if (!isRootNode) {\n      if (groupName !== \"\") {\n        groupName += \"/\";\n      }\n      const nameEl = this.querySelectorDirectChild(node, \"Name\");\n      groupName += nameEl == null ? \"-\" : nameEl.textContent;\n      const folder = new FolderView();\n      folder.name = groupName;\n      this.result.folders.push(folder);\n    }\n\n    this.querySelectorAllDirectChild(node, \"Entry\").forEach((entry) => {\n      const cipherIndex = this.result.ciphers.length;\n\n      const cipher = this.initLoginCipher();\n      this.querySelectorAllDirectChild(entry, \"String\").forEach((entryString) => {\n        const valueEl = this.querySelectorDirectChild(entryString, \"Value\");\n        const value = valueEl != null ? valueEl.textContent : null;\n        if (this.isNullOrWhitespace(value)) {\n          return;\n        }\n        const keyEl = this.querySelectorDirectChild(entryString, \"Key\");\n        const key = keyEl != null ? keyEl.textContent : null;\n\n        if (key === \"URL\") {\n          cipher.login.uris = this.makeUriArray(value);\n        } else if (key === \"UserName\") {\n          cipher.login.username = value;\n        } else if (key === \"Password\") {\n          cipher.login.password = value;\n        } else if (key === \"otp\") {\n          cipher.login.totp = value.replace(\"key=\", \"\");\n        } else if (key === \"Title\") {\n          cipher.name = value;\n        } else if (key === \"Notes\") {\n          cipher.notes += value + \"\\n\";\n        } else {\n          let type = FieldType.Text;\n          const attrs = valueEl.attributes as any;\n          if (\n            attrs.length > 0 &&\n            attrs.ProtectInMemory != null &&\n            attrs.ProtectInMemory.value === \"True\"\n          ) {\n            type = FieldType.Hidden;\n          }\n          this.processKvp(cipher, key, value, type);\n        }\n      });\n\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n\n      if (!isRootNode) {\n        this.result.folderRelationships.push([cipherIndex, folderIndex]);\n      }\n    });\n\n    this.querySelectorAllDirectChild(node, \"Group\").forEach((group) => {\n      this.traverse(group, false, groupName);\n    });\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.isNullOrWhitespace(value.Title)) {\n        return;\n      }\n\n      value.Group =\n        !this.isNullOrWhitespace(value.Group) && value.Group.startsWith(\"Root/\")\n          ? value.Group.replace(\"Root/\", \"\")\n          : value.Group;\n      const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n      this.processFolder(result, groupName);\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.name = this.getValueOrDefault(value.Title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport { ImportResult } from \"../../models/domain/importResult\";\n\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 6) {\n        return;\n      }\n\n      this.processFolder(result, value[0]);\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[5]) + \"\\n\";\n      cipher.name = this.getValueOrDefault(value[1], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[2]);\n      cipher.login.password = this.getValueOrDefault(value[3]);\n      cipher.login.uris = this.makeUriArray(value[4]);\n\n      if (value.length > 7) {\n        // we have some custom fields.\n        for (let i = 7; i < value.length; i = i + 2) {\n          this.processKvp(cipher, value[i], value[i + 1]);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport { ImportResult } from \"../../models/domain/importResult\";\n\nimport { KeeperJsonExport, RecordsEntity } from \"./types/keeperJsonTypes\";\n\nexport class KeeperJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const keeperExport: KeeperJsonExport = JSON.parse(data);\n    if (keeperExport == null || keeperExport.records == null || keeperExport.records.length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    keeperExport.records.forEach((record) => {\n      this.parseFolders(result, record);\n\n      const cipher = this.initLoginCipher();\n      cipher.name = record.title;\n      cipher.login.username = record.login;\n      cipher.login.password = record.password;\n\n      cipher.login.uris = this.makeUriArray(record.login_url);\n      cipher.notes = record.notes;\n\n      if (record.custom_fields != null) {\n        let customfieldKeys = Object.keys(record.custom_fields);\n        if (record.custom_fields[\"TFC:Keeper\"] != null) {\n          customfieldKeys = customfieldKeys.filter((item) => item !== \"TFC:Keeper\");\n          cipher.login.totp = record.custom_fields[\"TFC:Keeper\"];\n        }\n\n        customfieldKeys.forEach((key) => {\n          this.processKvp(cipher, key, record.custom_fields[key]);\n        });\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseFolders(result: ImportResult, record: RecordsEntity) {\n    if (record.folders == null || record.folders.length === 0) {\n      return;\n    }\n\n    record.folders.forEach((item) => {\n      if (item.folder != null) {\n        this.processFolder(result, item.folder);\n        return;\n      }\n\n      if (item.shared_folder != null) {\n        this.processFolder(result, item.shared_folder);\n        return;\n      }\n    });\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { IdentityView } from \"../models/view/identityView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value, index) => {\n      const cipherIndex = result.ciphers.length;\n      let folderIndex = result.folders.length;\n      let grouping = value.grouping;\n      if (grouping != null) {\n        grouping = grouping.replace(/\\\\/g, \"/\").replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, \"\");\n      }\n      const hasFolder = this.getValueOrDefault(grouping, \"(none)\") !== \"(none)\";\n      let addFolder = hasFolder;\n\n      if (hasFolder) {\n        for (let i = 0; i < result.folders.length; i++) {\n          if (result.folders[i].name === grouping) {\n            addFolder = false;\n            folderIndex = i;\n            break;\n          }\n        }\n      }\n\n      const cipher = this.buildBaseCipher(value);\n      if (cipher.type === CipherType.Login) {\n        cipher.notes = this.getValueOrDefault(value.extra);\n        cipher.login = new LoginView();\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.totp = this.getValueOrDefault(value.totp);\n      } else if (cipher.type === CipherType.SecureNote) {\n        this.parseSecureNote(value, cipher);\n      } else if (cipher.type === CipherType.Card) {\n        cipher.card = this.parseCard(value);\n        cipher.notes = this.getValueOrDefault(value.notes);\n      } else if (cipher.type === CipherType.Identity) {\n        cipher.identity = this.parseIdentity(value);\n        cipher.notes = this.getValueOrDefault(value.notes);\n        if (!this.isNullOrWhitespace(value.ccnum)) {\n          // there is a card on this identity too\n          const cardCipher = this.buildBaseCipher(value);\n          cardCipher.identity = null;\n          cardCipher.type = CipherType.Card;\n          cardCipher.card = this.parseCard(value);\n          result.ciphers.push(cardCipher);\n        }\n      }\n\n      result.ciphers.push(cipher);\n\n      if (addFolder) {\n        const f = new FolderView();\n        f.name = grouping;\n        result.folders.push(f);\n      }\n      if (hasFolder) {\n        result.folderRelationships.push([cipherIndex, folderIndex]);\n      }\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private buildBaseCipher(value: any) {\n    const cipher = new CipherView();\n    if (value.hasOwnProperty(\"profilename\") && value.hasOwnProperty(\"profilelanguage\")) {\n      // form fill\n      cipher.favorite = false;\n      cipher.name = this.getValueOrDefault(value.profilename, \"--\");\n      cipher.type = CipherType.Card;\n\n      if (\n        !this.isNullOrWhitespace(value.title) ||\n        !this.isNullOrWhitespace(value.firstname) ||\n        !this.isNullOrWhitespace(value.lastname) ||\n        !this.isNullOrWhitespace(value.address1) ||\n        !this.isNullOrWhitespace(value.phone) ||\n        !this.isNullOrWhitespace(value.username) ||\n        !this.isNullOrWhitespace(value.email)\n      ) {\n        cipher.type = CipherType.Identity;\n      }\n    } else {\n      // site or secure note\n      cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, \"0\") === \"1\";\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.type = value.url === \"http://sn\" ? CipherType.SecureNote : CipherType.Login;\n    }\n    return cipher;\n  }\n\n  private parseCard(value: any): CardView {\n    const card = new CardView();\n    card.cardholderName = this.getValueOrDefault(value.ccname);\n    card.number = this.getValueOrDefault(value.ccnum);\n    card.code = this.getValueOrDefault(value.cccsc);\n    card.brand = this.getCardBrand(value.ccnum);\n\n    if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf(\"-\") > -1) {\n      const ccexpParts = (value.ccexp as string).split(\"-\");\n      if (ccexpParts.length > 1) {\n        card.expYear = ccexpParts[0];\n        card.expMonth = ccexpParts[1];\n        if (card.expMonth.length === 2 && card.expMonth[0] === \"0\") {\n          card.expMonth = card.expMonth[1];\n        }\n      }\n    }\n\n    return card;\n  }\n\n  private parseIdentity(value: any): IdentityView {\n    const identity = new IdentityView();\n    identity.title = this.getValueOrDefault(value.title);\n    identity.firstName = this.getValueOrDefault(value.firstname);\n    identity.middleName = this.getValueOrDefault(value.middlename);\n    identity.lastName = this.getValueOrDefault(value.lastname);\n    identity.username = this.getValueOrDefault(value.username);\n    identity.company = this.getValueOrDefault(value.company);\n    identity.ssn = this.getValueOrDefault(value.ssn);\n    identity.address1 = this.getValueOrDefault(value.address1);\n    identity.address2 = this.getValueOrDefault(value.address2);\n    identity.address3 = this.getValueOrDefault(value.address3);\n    identity.city = this.getValueOrDefault(value.city);\n    identity.state = this.getValueOrDefault(value.state);\n    identity.postalCode = this.getValueOrDefault(value.zip);\n    identity.country = this.getValueOrDefault(value.country);\n    identity.email = this.getValueOrDefault(value.email);\n    identity.phone = this.getValueOrDefault(value.phone);\n\n    if (!this.isNullOrWhitespace(identity.title)) {\n      identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n    }\n\n    return identity;\n  }\n\n  private parseSecureNote(value: any, cipher: CipherView) {\n    const extraParts = this.splitNewLine(value.extra);\n    let processedNote = false;\n\n    if (extraParts.length) {\n      const typeParts = extraParts[0].split(\":\");\n      if (\n        typeParts.length > 1 &&\n        typeParts[0] === \"NoteType\" &&\n        (typeParts[1] === \"Credit Card\" || typeParts[1] === \"Address\")\n      ) {\n        if (typeParts[1] === \"Credit Card\") {\n          const mappedData = this.parseSecureNoteMapping<CardView>(cipher, extraParts, {\n            Number: \"number\",\n            \"Name on Card\": \"cardholderName\",\n            \"Security Code\": \"code\",\n            // LP provides date in a format like 'June,2020'\n            // Store in expMonth, then parse and modify\n            \"Expiration Date\": \"expMonth\",\n          });\n\n          if (this.isNullOrWhitespace(mappedData.expMonth) || mappedData.expMonth === \",\") {\n            // No expiration data\n            mappedData.expMonth = undefined;\n          } else {\n            const [monthString, year] = mappedData.expMonth.split(\",\");\n            // Parse month name into number\n            if (!this.isNullOrWhitespace(monthString)) {\n              const month = new Date(Date.parse(monthString.trim() + \" 1, 2012\")).getMonth() + 1;\n              if (isNaN(month)) {\n                mappedData.expMonth = undefined;\n              } else {\n                mappedData.expMonth = month.toString();\n              }\n            } else {\n              mappedData.expMonth = undefined;\n            }\n            if (!this.isNullOrWhitespace(year)) {\n              mappedData.expYear = year;\n            }\n          }\n\n          cipher.type = CipherType.Card;\n          cipher.card = mappedData;\n        } else if (typeParts[1] === \"Address\") {\n          const mappedData = this.parseSecureNoteMapping<IdentityView>(cipher, extraParts, {\n            Title: \"title\",\n            \"First Name\": \"firstName\",\n            \"Last Name\": \"lastName\",\n            \"Middle Name\": \"middleName\",\n            Company: \"company\",\n            \"Address 1\": \"address1\",\n            \"Address 2\": \"address2\",\n            \"Address 3\": \"address3\",\n            \"City / Town\": \"city\",\n            State: \"state\",\n            \"Zip / Postal Code\": \"postalCode\",\n            Country: \"country\",\n            \"Email Address\": \"email\",\n            Username: \"username\",\n          });\n          cipher.type = CipherType.Identity;\n          cipher.identity = mappedData;\n        }\n        processedNote = true;\n      }\n    }\n\n    if (!processedNote) {\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n      cipher.notes = this.getValueOrDefault(value.extra);\n    }\n  }\n\n  private parseSecureNoteMapping<T>(cipher: CipherView, extraParts: string[], map: any): T {\n    const dataObj: any = {};\n\n    let processingNotes = false;\n    extraParts.forEach((extraPart) => {\n      let key: string = null;\n      let val: string = null;\n      if (!processingNotes) {\n        if (this.isNullOrWhitespace(extraPart)) {\n          return;\n        }\n        const colonIndex = extraPart.indexOf(\":\");\n        if (colonIndex === -1) {\n          key = extraPart;\n        } else {\n          key = extraPart.substring(0, colonIndex);\n          if (extraPart.length > colonIndex) {\n            val = extraPart.substring(colonIndex + 1);\n          }\n        }\n        if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === \"NoteType\") {\n          return;\n        }\n      }\n\n      if (processingNotes) {\n        cipher.notes += \"\\n\" + extraPart;\n      } else if (key === \"Notes\") {\n        if (!this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes += \"\\n\" + val;\n        } else {\n          cipher.notes = val;\n        }\n        processingNotes = true;\n      } else if (map.hasOwnProperty(key)) {\n        dataObj[map[key]] = val;\n      } else {\n        this.processKvp(cipher, key, val);\n      }\n    });\n\n    return dataObj;\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 4) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[2]);\n      cipher.login.password = this.getValueOrDefault(value[3]);\n      cipher.login.uris = this.makeUriArray(value[1]);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.DisplayName, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.login.username = this.getValueOrDefault(value.UserName);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.Url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 3) {\n        return;\n      }\n\n      const folderName =\n        this.getValueOrDefault(value[0], \"Unassigned\") !== \"Unassigned\" ? value[0] : null;\n      this.processFolder(result, folderName);\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[2], \"--\");\n\n      if (value[1] === \"Web Logins\" || value[1] === \"Login\") {\n        cipher.login.uris = this.makeUriArray(value[4]);\n        cipher.login.username = this.getValueOrDefault(value[5]);\n        cipher.login.password = this.getValueOrDefault(value[6]);\n        cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split(\"\\\\n\").join(\"\\n\") : null;\n      } else if (value.length > 3) {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n        for (let i = 3; i < value.length; i++) {\n          if (!this.isNullOrWhitespace(value[i])) {\n            cipher.notes += value[i] + \"\\n\";\n          }\n        }\n      }\n\n      if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n        cipher.name = value[1] + \": \" + cipher.name;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\nimport { CardView } from \"../models/view/cardView\";\nimport { IdentityView } from \"../models/view/identityView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class MykiCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.nickname, \"--\");\n      cipher.notes = this.getValueOrDefault(value.additionalInfo);\n\n      if (value.url !== undefined) {\n        // Accounts\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.totp = this.getValueOrDefault(value.twoFactAuthToken);\n      } else if (value.cardNumber !== undefined) {\n        // Cards\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\n        cipher.card.number = this.getValueOrDefault(value.cardNumber);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\n        cipher.card.expYear = this.getValueOrDefault(value.exp_year);\n        cipher.card.code = this.getValueOrDefault(value.cvv);\n      } else if (value.firstName !== undefined) {\n        // Identities\n        cipher.identity = new IdentityView();\n        cipher.type = CipherType.Identity;\n        cipher.identity.title = this.getValueOrDefault(value.title);\n        cipher.identity.firstName = this.getValueOrDefault(value.firstName);\n        cipher.identity.middleName = this.getValueOrDefault(value.middleName);\n        cipher.identity.lastName = this.getValueOrDefault(value.lastName);\n        cipher.identity.phone = this.getValueOrDefault(value.number);\n        cipher.identity.email = this.getValueOrDefault(value.email);\n        cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\n        cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\n        cipher.identity.city = this.getValueOrDefault(value.city);\n        cipher.identity.country = this.getValueOrDefault(value.country);\n        cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\n      } else if (value.content !== undefined) {\n        // Notes\n        cipher.secureNote = new SecureNoteView();\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote.type = SecureNoteType.Generic;\n        cipher.name = this.getValueOrDefault(value.title, \"--\");\n        cipher.notes = this.getValueOrDefault(value.content);\n      } else {\n        return;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { LoginView } from \"../models/view/loginView\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\ntype nodePassCsvParsed = {\n  name: string;\n  url: string;\n  username: string;\n  password: string;\n  note: string;\n  cardholdername: string;\n  cardnumber: string;\n  cvc: string;\n  expirydate: string;\n  zipcode: string;\n  folder: string;\n  full_name: string;\n  phone_number: string;\n  email: string;\n  address1: string;\n  address2: string;\n  city: string;\n  country: string;\n  state: string;\n};\n\nexport class NordPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results: nodePassCsvParsed[] = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((record) => {\n      const recordType = this.evaluateType(record);\n      if (recordType === undefined) {\n        return;\n      }\n\n      if (!this.organization) {\n        this.processFolder(result, record.folder);\n      }\n\n      const cipher = new CipherView();\n      cipher.name = this.getValueOrDefault(record.name, \"--\");\n      cipher.notes = this.getValueOrDefault(record.note);\n\n      switch (recordType) {\n        case CipherType.Login:\n          cipher.type = CipherType.Login;\n          cipher.login = new LoginView();\n          cipher.login.username = this.getValueOrDefault(record.username);\n          cipher.login.password = this.getValueOrDefault(record.password);\n          cipher.login.uris = this.makeUriArray(record.url);\n          break;\n        case CipherType.Card:\n          cipher.type = CipherType.Card;\n          cipher.card.cardholderName = this.getValueOrDefault(record.cardholdername);\n          cipher.card.number = this.getValueOrDefault(record.cardnumber);\n          cipher.card.code = this.getValueOrDefault(record.cvc);\n          cipher.card.brand = this.getCardBrand(cipher.card.number);\n          this.setCardExpiration(cipher, record.expirydate);\n          break;\n\n        case CipherType.Identity:\n          cipher.type = CipherType.Identity;\n\n          this.processName(cipher, this.getValueOrDefault(record.full_name));\n          cipher.identity.address1 = this.getValueOrDefault(record.address1);\n          cipher.identity.address2 = this.getValueOrDefault(record.address2);\n          cipher.identity.city = this.getValueOrDefault(record.city);\n          cipher.identity.state = this.getValueOrDefault(record.state);\n          cipher.identity.postalCode = this.getValueOrDefault(record.zipcode);\n          cipher.identity.country = this.getValueOrDefault(record.country);\n          if (cipher.identity.country != null) {\n            cipher.identity.country = cipher.identity.country.toUpperCase();\n          }\n          cipher.identity.email = this.getValueOrDefault(record.email);\n          cipher.identity.phone = this.getValueOrDefault(record.phone_number);\n          break;\n        case CipherType.SecureNote:\n          cipher.type = CipherType.SecureNote;\n          cipher.secureNote.type = SecureNoteType.Generic;\n          break;\n        default:\n          break;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private evaluateType(record: nodePassCsvParsed): CipherType {\n    if (!this.isNullOrWhitespace(record.username)) {\n      return CipherType.Login;\n    }\n\n    if (!this.isNullOrWhitespace(record.cardnumber)) {\n      return CipherType.Card;\n    }\n\n    if (!this.isNullOrWhitespace(record.full_name)) {\n      return CipherType.Identity;\n    }\n\n    if (!this.isNullOrWhitespace(record.note)) {\n      return CipherType.SecureNote;\n    }\n\n    return undefined;\n  }\n\n  private processName(cipher: CipherView, fullName: string) {\n    if (this.isNullOrWhitespace(fullName)) {\n      return;\n    }\n\n    const nameParts = fullName.split(\" \");\n    if (nameParts.length > 0) {\n      cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n    }\n    if (nameParts.length === 2) {\n      cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n    } else if (nameParts.length >= 3) {\n      cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n      cipher.identity.lastName = nameParts.slice(2, nameParts.length).join(\" \");\n    }\n  }\n}\n","import { CipherView } from \"../../models/view/cipherView\";\n\nexport class CipherImportContext {\n  lowerProperty: string;\n  constructor(public importRecord: any, public property: string, public cipher: CipherView) {\n    this.lowerProperty = property.toLowerCase();\n  }\n}\n","import { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport { ImportResult } from \"../../models/domain/importResult\";\n\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { PasswordHistoryView } from \"../../models/view/passwordHistoryView\";\nimport { SecureNoteView } from \"../../models/view/secureNoteView\";\n\nimport { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    data.split(this.newLineRegex).forEach((line) => {\n      if (this.isNullOrWhitespace(line) || line[0] !== \"{\") {\n        return;\n      }\n      const item = JSON.parse(line);\n      if (item.trashed === true) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n\n      if (this.isNullOrWhitespace(item.hmac)) {\n        this.processStandardItem(item, cipher);\n      } else {\n        this.processWinOpVaultItem(item, cipher);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processWinOpVaultItem(item: any, cipher: CipherView) {\n    if (item.overview != null) {\n      cipher.name = this.getValueOrDefault(item.overview.title);\n      if (item.overview.URLs != null) {\n        const urls: string[] = [];\n        item.overview.URLs.forEach((url: any) => {\n          if (!this.isNullOrWhitespace(url.u)) {\n            urls.push(url.u);\n          }\n        });\n        cipher.login.uris = this.makeUriArray(urls);\n      }\n    }\n\n    if (item.details != null) {\n      if (item.details.passwordHistory != null) {\n        this.parsePasswordHistory(item.details.passwordHistory, cipher);\n      }\n      if (\n        !this.isNullOrWhitespace(item.details.ccnum) ||\n        !this.isNullOrWhitespace(item.details.cvv)\n      ) {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n      } else if (\n        !this.isNullOrWhitespace(item.details.firstname) ||\n        !this.isNullOrWhitespace(item.details.address1)\n      ) {\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n      }\n      if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\n        cipher.login.password = item.details.password;\n      }\n      if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n        cipher.notes = item.details.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n      }\n      if (item.details.fields != null) {\n        this.parseFields(item.details.fields, cipher, \"designation\", \"value\", \"name\");\n      }\n      if (item.details.sections != null) {\n        item.details.sections.forEach((section: any) => {\n          if (section.fields != null) {\n            this.parseFields(section.fields, cipher, \"n\", \"v\", \"t\");\n          }\n        });\n      }\n    }\n  }\n\n  private processStandardItem(item: any, cipher: CipherView) {\n    cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n    cipher.name = this.getValueOrDefault(item.title);\n\n    if (item.typeName === \"securenotes.SecureNote\") {\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n    } else if (item.typeName === \"wallet.financial.CreditCard\") {\n      cipher.type = CipherType.Card;\n      cipher.card = new CardView();\n    } else if (item.typeName === \"identities.Identity\") {\n      cipher.type = CipherType.Identity;\n      cipher.identity = new IdentityView();\n    } else {\n      cipher.login.uris = this.makeUriArray(item.location);\n    }\n\n    if (item.secureContents != null) {\n      if (item.secureContents.passwordHistory != null) {\n        this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\n      }\n      if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n        cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n      }\n      if (cipher.type === CipherType.Login) {\n        if (!this.isNullOrWhitespace(item.secureContents.password)) {\n          cipher.login.password = item.secureContents.password;\n        }\n        if (item.secureContents.URLs != null) {\n          const urls: string[] = [];\n          item.secureContents.URLs.forEach((u: any) => {\n            if (!this.isNullOrWhitespace(u.url)) {\n              urls.push(u.url);\n            }\n          });\n          if (urls.length > 0) {\n            cipher.login.uris = this.makeUriArray(urls);\n          }\n        }\n      }\n      if (item.secureContents.fields != null) {\n        this.parseFields(item.secureContents.fields, cipher, \"designation\", \"value\", \"name\");\n      }\n      if (item.secureContents.sections != null) {\n        item.secureContents.sections.forEach((section: any) => {\n          if (section.fields != null) {\n            this.parseFields(section.fields, cipher, \"n\", \"v\", \"t\");\n          }\n        });\n      }\n    }\n  }\n\n  private parsePasswordHistory(items: any[], cipher: CipherView) {\n    const maxSize = items.length > 5 ? 5 : items.length;\n    cipher.passwordHistory = items\n      .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n      .sort((a, b) => b.time - a.time)\n      .slice(0, maxSize)\n      .map((h: any) => {\n        const ph = new PasswordHistoryView();\n        ph.password = h.value;\n        ph.lastUsedDate = new Date((\"\" + h.time).length >= 13 ? h.time : h.time * 1000);\n        return ph;\n      });\n  }\n\n  private parseFields(\n    fields: any[],\n    cipher: CipherView,\n    designationKey: string,\n    valueKey: string,\n    nameKey: string\n  ) {\n    fields.forEach((field: any) => {\n      if (field[valueKey] == null || field[valueKey].toString().trim() === \"\") {\n        return;\n      }\n\n      // TODO: when date FieldType exists, store this as a date field type instead of formatted Text if k is 'date'\n      const fieldValue =\n        field.k === \"date\"\n          ? new Date(field[valueKey] * 1000).toUTCString()\n          : field[valueKey].toString();\n      const fieldDesignation =\n        field[designationKey] != null ? field[designationKey].toString() : null;\n\n      if (cipher.type === CipherType.Login) {\n        if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === \"username\") {\n          cipher.login.username = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.login.password) &&\n          fieldDesignation === \"password\"\n        ) {\n          cipher.login.password = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.login.totp) &&\n          fieldDesignation != null &&\n          fieldDesignation.startsWith(\"TOTP_\")\n        ) {\n          cipher.login.totp = fieldValue;\n          return;\n        }\n      } else if (cipher.type === CipherType.Card) {\n        if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === \"ccnum\") {\n          cipher.card.number = fieldValue;\n          cipher.card.brand = this.getCardBrand(fieldValue);\n          return;\n        } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === \"cvv\") {\n          cipher.card.code = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.card.cardholderName) &&\n          fieldDesignation === \"cardholder\"\n        ) {\n          cipher.card.cardholderName = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.card.expiration) &&\n          fieldDesignation === \"expiry\" &&\n          fieldValue.length === 6\n        ) {\n          cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n          if (cipher.card.expMonth[0] === \"0\") {\n            cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n          }\n          cipher.card.expYear = (fieldValue as string).substr(0, 4);\n          return;\n        } else if (fieldDesignation === \"type\") {\n          // Skip since brand was determined from number above\n          return;\n        }\n      } else if (cipher.type === CipherType.Identity) {\n        const identity = cipher.identity;\n        if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === \"firstname\") {\n          identity.firstName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === \"lastname\") {\n          identity.lastName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === \"initial\") {\n          identity.middleName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === \"defphone\") {\n          identity.phone = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === \"company\") {\n          identity.company = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === \"email\") {\n          identity.email = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === \"username\") {\n          identity.username = fieldValue;\n          return;\n        } else if (fieldDesignation === \"address\") {\n          // fieldValue is an object casted into a string, so access the plain value instead\n          const { street, city, country, zip } = field[valueKey];\n          identity.address1 = this.getValueOrDefault(street);\n          identity.city = this.getValueOrDefault(city);\n          if (!this.isNullOrWhitespace(country)) {\n            identity.country = country.toUpperCase();\n          }\n          identity.postalCode = this.getValueOrDefault(zip);\n          return;\n        }\n      }\n\n      const fieldName = this.isNullOrWhitespace(field[nameKey]) ? \"no_name\" : field[nameKey];\n      if (\n        fieldName === \"password\" &&\n        cipher.passwordHistory != null &&\n        cipher.passwordHistory.some((h) => h.password === fieldValue)\n      ) {\n        return;\n      }\n\n      const fieldType = field.k === \"concealed\" ? FieldType.Hidden : FieldType.Text;\n      this.processKvp(cipher, fieldName, fieldValue, fieldType);\n    });\n  }\n}\n","import { ImportResult } from \"../../models/domain/importResult\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { CipherImportContext } from \"./cipherImportContext\";\n\nexport const IgnoredProperties = [\n  \"ainfo\",\n  \"autosubmit\",\n  \"notesplain\",\n  \"ps\",\n  \"scope\",\n  \"tags\",\n  \"title\",\n  \"uuid\",\n  \"notes\",\n];\n\nexport abstract class OnePasswordCsvImporter extends BaseImporter implements Importer {\n  protected loginPropertyParsers = [\n    this.setLoginUsername,\n    this.setLoginPassword,\n    this.setLoginUris,\n  ];\n  protected creditCardPropertyParsers = [\n    this.setCreditCardNumber,\n    this.setCreditCardVerification,\n    this.setCreditCardCardholderName,\n    this.setCreditCardExpiry,\n  ];\n  protected identityPropertyParsers = [\n    this.setIdentityFirstName,\n    this.setIdentityInitial,\n    this.setIdentityLastName,\n    this.setIdentityUserName,\n    this.setIdentityEmail,\n    this.setIdentityPhone,\n    this.setIdentityCompany,\n  ];\n\n  abstract setCipherType(value: any, cipher: CipherView): void;\n\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true, {\n      quoteChar: '\"',\n      escapeChar: \"\\\\\",\n    });\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.isNullOrWhitespace(this.getProp(value, \"title\"))) {\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(this.getProp(value, \"title\"), \"--\");\n\n      this.setNotes(value, cipher);\n\n      this.setCipherType(value, cipher);\n\n      let altUsername: string = null;\n      for (const property in value) {\n        if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n          continue;\n        }\n\n        const context = new CipherImportContext(value, property, cipher);\n        if (cipher.type === CipherType.Login && this.setKnownLoginValue(context)) {\n          continue;\n        } else if (cipher.type === CipherType.Card && this.setKnownCreditCardValue(context)) {\n          continue;\n        } else if (cipher.type === CipherType.Identity && this.setKnownIdentityValue(context)) {\n          continue;\n        }\n\n        altUsername = this.setUnknownValue(context, altUsername);\n      }\n\n      if (\n        cipher.type === CipherType.Login &&\n        !this.isNullOrWhitespace(altUsername) &&\n        this.isNullOrWhitespace(cipher.login.username) &&\n        altUsername.indexOf(\"://\") === -1\n      ) {\n        cipher.login.username = altUsername;\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  protected getProp(obj: any, name: string): any {\n    const lowerObj = Object.entries(obj).reduce((agg: any, entry: [string, any]) => {\n      agg[entry[0].toLowerCase()] = entry[1];\n      return agg;\n    }, {});\n    return lowerObj[name.toLowerCase()];\n  }\n\n  protected getPropByRegexp(obj: any, regexp: RegExp): any {\n    const matchingKeys = Object.keys(obj).reduce((agg: string[], key: string) => {\n      if (key.match(regexp)) {\n        agg.push(key);\n      }\n      return agg;\n    }, []);\n    if (matchingKeys.length === 0) {\n      return null;\n    } else {\n      return obj[matchingKeys[0]];\n    }\n  }\n\n  protected getPropIncluding(obj: any, name: string): any {\n    const includesMap = Object.keys(obj).reduce((agg: string[], entry: string) => {\n      if (entry.toLowerCase().includes(name.toLowerCase())) {\n        agg.push(entry);\n      }\n      return agg;\n    }, []);\n    if (includesMap.length === 0) {\n      return null;\n    } else {\n      return obj[includesMap[0]];\n    }\n  }\n\n  protected setNotes(importRecord: any, cipher: CipherView) {\n    cipher.notes =\n      this.getValueOrDefault(this.getProp(importRecord, \"notesPlain\"), \"\") +\n      \"\\n\" +\n      this.getValueOrDefault(this.getProp(importRecord, \"notes\"), \"\") +\n      \"\\n\";\n    cipher.notes.trim();\n  }\n\n  protected setKnownLoginValue(context: CipherImportContext): boolean {\n    return this.loginPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setKnownCreditCardValue(context: CipherImportContext): boolean {\n    return this.creditCardPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setKnownIdentityValue(context: CipherImportContext): boolean {\n    return this.identityPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setUnknownValue(context: CipherImportContext, altUsername: string): string {\n    if (\n      IgnoredProperties.indexOf(context.lowerProperty) === -1 &&\n      !context.lowerProperty.startsWith(\"section:\") &&\n      !context.lowerProperty.startsWith(\"section \")\n    ) {\n      if (altUsername == null && context.lowerProperty === \"email\") {\n        return context.importRecord[context.property];\n      } else if (\n        context.lowerProperty === \"created date\" ||\n        context.lowerProperty === \"modified date\"\n      ) {\n        const readableDate = new Date(\n          parseInt(context.importRecord[context.property], 10) * 1000\n        ).toUTCString();\n        this.processKvp(context.cipher, \"1Password \" + context.property, readableDate);\n        return null;\n      }\n      if (\n        context.lowerProperty.includes(\"password\") ||\n        context.lowerProperty.includes(\"key\") ||\n        context.lowerProperty.includes(\"secret\")\n      ) {\n        this.processKvp(\n          context.cipher,\n          context.property,\n          context.importRecord[context.property],\n          FieldType.Hidden\n        );\n      } else {\n        this.processKvp(context.cipher, context.property, context.importRecord[context.property]);\n      }\n    }\n    return null;\n  }\n\n  protected setIdentityFirstName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.firstName) &&\n      context.lowerProperty.includes(\"first name\")\n    ) {\n      context.cipher.identity.firstName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityInitial(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.middleName) &&\n      context.lowerProperty.includes(\"initial\")\n    ) {\n      context.cipher.identity.middleName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityLastName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.lastName) &&\n      context.lowerProperty.includes(\"last name\")\n    ) {\n      context.cipher.identity.lastName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityUserName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.username) &&\n      context.lowerProperty.includes(\"username\")\n    ) {\n      context.cipher.identity.username = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityCompany(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.company) &&\n      context.lowerProperty.includes(\"company\")\n    ) {\n      context.cipher.identity.company = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityPhone(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.phone) &&\n      context.lowerProperty.includes(\"default phone\")\n    ) {\n      context.cipher.identity.phone = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityEmail(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.email) &&\n      context.lowerProperty.includes(\"email\")\n    ) {\n      context.cipher.identity.email = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardNumber(context: CipherImportContext): boolean {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.number) &&\n      context.lowerProperty.includes(\"number\")\n    ) {\n      context.cipher.card.number = context.importRecord[context.property];\n      context.cipher.card.brand = this.getCardBrand(context.cipher.card.number);\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardVerification(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.code) &&\n      context.lowerProperty.includes(\"verification number\")\n    ) {\n      context.cipher.card.code = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardCardholderName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.cardholderName) &&\n      context.lowerProperty.includes(\"cardholder name\")\n    ) {\n      context.cipher.card.cardholderName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardExpiry(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.expiration) &&\n      context.lowerProperty.includes(\"expiry date\") &&\n      context.importRecord[context.property].length === 7\n    ) {\n      context.cipher.card.expMonth = (context.importRecord[context.property] as string).substr(\n        0,\n        2\n      );\n      if (context.cipher.card.expMonth[0] === \"0\") {\n        context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n      }\n      context.cipher.card.expYear = (context.importRecord[context.property] as string).substr(3, 4);\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginPassword(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.login.password) &&\n      context.lowerProperty === \"password\"\n    ) {\n      context.cipher.login.password = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginUsername(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.login.username) &&\n      context.lowerProperty === \"username\"\n    ) {\n      context.cipher.login.username = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginUris(context: CipherImportContext) {\n    if (\n      (context.cipher.login.uris == null || context.cipher.login.uris.length === 0) &&\n      context.lowerProperty === \"urls\"\n    ) {\n      const urls = context.importRecord[context.property].split(this.newLineRegex);\n      context.cipher.login.uris = this.makeUriArray(urls);\n      return true;\n    } else if (context.lowerProperty === \"url\") {\n      if (context.cipher.login.uris == null) {\n        context.cipher.login.uris = [];\n      }\n      context.cipher.login.uris.concat(this.makeUriArray(context.importRecord[context.property]));\n      return true;\n    }\n    return false;\n  }\n}\n","import { Importer } from \"../importer\";\nimport { IgnoredProperties, OnePasswordCsvImporter } from \"./onepasswordCsvImporter\";\n\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\n\nexport class OnePasswordMacCsvImporter extends OnePasswordCsvImporter implements Importer {\n  setCipherType(value: any, cipher: CipherView) {\n    const onePassType = this.getValueOrDefault(this.getProp(value, \"type\"), \"Login\");\n    switch (onePassType) {\n      case \"Credit Card\":\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        IgnoredProperties.push(\"type\");\n        break;\n      case \"Identity\":\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n        IgnoredProperties.push(\"type\");\n        break;\n      case \"Login\":\n      case \"Secure Note\":\n        IgnoredProperties.push(\"type\");\n      default:\n        break;\n    }\n  }\n}\n","import { Importer } from \"../importer\";\nimport { CipherImportContext } from \"./cipherImportContext\";\nimport { OnePasswordCsvImporter } from \"./onepasswordCsvImporter\";\n\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { LoginView } from \"../../models/view/loginView\";\n\nexport class OnePasswordWinCsvImporter extends OnePasswordCsvImporter implements Importer {\n  constructor() {\n    super();\n    this.identityPropertyParsers.push(this.setIdentityAddress);\n  }\n\n  setCipherType(value: any, cipher: CipherView) {\n    cipher.type = CipherType.Login;\n    cipher.login = new LoginView();\n\n    if (\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: number/i)) &&\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: expiry date/i))\n    ) {\n      cipher.type = CipherType.Card;\n      cipher.card = new CardView();\n    }\n\n    if (\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: first name/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: initial/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: last name/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /internet \\d+: email/i))\n    ) {\n      cipher.type = CipherType.Identity;\n      cipher.identity = new IdentityView();\n    }\n  }\n\n  setIdentityAddress(context: CipherImportContext) {\n    if (context.lowerProperty.match(/address \\d+: address/i)) {\n      this.processKvp(context.cipher, \"address\", context.importRecord[context.property]);\n      return true;\n    }\n    return false;\n  }\n\n  setCreditCardExpiry(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.expiration) &&\n      context.lowerProperty.includes(\"expiry date\")\n    ) {\n      const expSplit = (context.importRecord[context.property] as string).split(\"/\");\n      context.cipher.card.expMonth = expSplit[0];\n      if (context.cipher.card.expMonth[0] === \"0\" && context.cipher.card.expMonth.length === 2) {\n        context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n      }\n      context.cipher.card.expYear = expSplit[2].length > 4 ? expSplit[2].substr(0, 4) : expSplit[2];\n      return true;\n    }\n    return false;\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let headers: string[] = null;\n    results.forEach((value) => {\n      if (headers == null) {\n        headers = value.map((v: string) => v);\n        return;\n      }\n\n      if (value.length < 2 || value.length !== headers.length) {\n        return;\n      }\n\n      if (!this.isNullOrWhitespace(value[1])) {\n        if (this.organization) {\n          const tags = (value[1] as string).split(\",\");\n          tags.forEach((tag) => {\n            tag = tag.trim();\n            let addCollection = true;\n            let collectionIndex = result.collections.length;\n\n            for (let i = 0; i < result.collections.length; i++) {\n              if (result.collections[i].name === tag) {\n                addCollection = false;\n                collectionIndex = i;\n                break;\n              }\n            }\n\n            if (addCollection) {\n              const collection = new CollectionView();\n              collection.name = tag;\n              result.collections.push(collection);\n            }\n\n            result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n          });\n        } else {\n          const tags = (value[1] as string).split(\",\");\n          const tag = tags.length > 0 ? tags[0].trim() : null;\n          this.processFolder(result, tag);\n        }\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      for (let i = 2; i < value.length; i++) {\n        const header = headers[i].trim().toLowerCase();\n        if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n          continue;\n        }\n\n        if (this.usernameFieldNames.indexOf(header) > -1) {\n          cipher.login.username = value[i];\n        } else if (this.passwordFieldNames.indexOf(header) > -1) {\n          cipher.login.password = value[i];\n        } else if (this.uriFieldNames.indexOf(header) > -1) {\n          cipher.login.uris = this.makeUriArray(value[i]);\n        } else {\n          this.processKvp(cipher, headers[i], value[i]);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValue(\"category\", value));\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValue(\"description\", value);\n      cipher.name = this.getValueOrDefault(this.getValue(\"title\", value), \"--\");\n      cipher.login.username = this.getValue(\"username\", value);\n      cipher.login.password = this.getValue(\"password\", value);\n      cipher.login.uris = this.makeUriArray(this.getValue(\"site\", value));\n      this.processKvp(cipher, \"Password 2\", this.getValue(\"password2\", value));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private getValue(key: string, value: any) {\n    return this.getValueOrDefault(value[key], this.getValueOrDefault(value[\" \" + key]));\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((credential: any) => {\n      if (credential.tags != null && credential.tags.length > 0) {\n        const folderName = credential.tags[0].text;\n        this.processFolder(result, folderName);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = credential.label;\n\n      cipher.login.username = this.getValueOrDefault(credential.username);\n      if (this.isNullOrWhitespace(cipher.login.username)) {\n        cipher.login.username = this.getValueOrDefault(credential.email);\n      } else if (!this.isNullOrWhitespace(credential.email)) {\n        cipher.notes = \"Email: \" + credential.email + \"\\n\";\n      }\n\n      cipher.login.password = this.getValueOrDefault(credential.password);\n      cipher.login.uris = this.makeUriArray(credential.url);\n      cipher.notes += this.getValueOrDefault(credential.description, \"\");\n      if (credential.otp != null) {\n        cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\n      }\n\n      if (credential.custom_fields != null) {\n        credential.custom_fields.forEach((customField: any) => {\n          switch (customField.field_type) {\n            case \"text\":\n            case \"password\":\n              this.processKvp(cipher, customField.label, customField.value);\n              break;\n          }\n        });\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\n      const tags: string[] =\n        tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0\n          ? tagsJson.tags\n              .map((tagJson: string) => {\n                try {\n                  const t = JSON.parse(tagJson);\n                  return this.getValueOrDefault(t.tag);\n                } catch {\n                  // Ignore error\n                }\n                return null;\n              })\n              .filter((t: string) => !this.isNullOrWhitespace(t))\n          : null;\n\n      if (this.organization && tags != null && tags.length > 0) {\n        tags.forEach((tag) => {\n          let addCollection = true;\n          let collectionIndex = result.collections.length;\n\n          for (let i = 0; i < result.collections.length; i++) {\n            if (result.collections[i].name === tag) {\n              addCollection = false;\n              collectionIndex = i;\n              break;\n            }\n          }\n\n          if (addCollection) {\n            const collection = new CollectionView();\n            collection.name = tag;\n            result.collections.push(collection);\n          }\n\n          result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n        });\n      } else if (!this.organization && tags != null && tags.length > 0) {\n        this.processFolder(result, tags[0]);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Notes, \"\");\n      cipher.notes += \"\\n\\n\" + this.getValueOrDefault(value[\"Shared Notes\"], \"\") + \"\\n\";\n      cipher.name = this.getValueOrDefault(value[\"Entry Name\"], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[\"User ID\"]);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n\n      if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n        value.__parsed_extra.forEach((extra: string) => {\n          if (!this.isNullOrWhitespace(extra)) {\n            cipher.notes += \"\\n\" + extra;\n          }\n        });\n      }\n\n      const fieldsJson = !this.isNullOrWhitespace(value[\"Extra Fields\"])\n        ? JSON.parse(value[\"Extra Fields\"])\n        : null;\n      const fields =\n        fieldsJson != null && fieldsJson.extraFields != null && fieldsJson.extraFields.length > 0\n          ? fieldsJson.extraFields.map((fieldJson: string) => {\n              try {\n                return JSON.parse(fieldJson);\n              } catch {\n                // Ignore error\n              }\n              return null;\n            })\n          : null;\n      if (fields != null) {\n        fields.forEach((f: any) => {\n          if (f != null) {\n            this.processKvp(cipher, f.name, f.data);\n          }\n        });\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let newVersion = true;\n    results.forEach((value) => {\n      if (value.length !== 5 && value.length < 9) {\n        return;\n      }\n      const altFormat = value.length === 10 && value[0] === \"0\";\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\n      cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\n      if (value.length === 5) {\n        newVersion = false;\n        cipher.notes = this.getValueOrDefault(value[4]);\n        cipher.login.uris = this.makeUriArray(value[3]);\n      } else {\n        const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], \"(None)\");\n        let folderName = folder !== \"(None)\" ? folder.split(\"\\\\\").join(\"/\") : null;\n        if (folderName != null) {\n          folderName = folder.split(\" > \").join(\"/\");\n          folderName = folder.split(\">\").join(\"/\");\n        }\n        this.processFolder(result, folderName);\n        cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\n        cipher.login.uris = this.makeUriArray(value[4]);\n      }\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (newVersion && this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CardView } from \"../models/view/cardView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { CipherType } from \"../enums/cipherType\";\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.items == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, string>();\n    results.folders.forEach((value: any) => {\n      foldersMap.set(value.id, value.name);\n    });\n    const foldersIndexMap = new Map<string, number>();\n    foldersMap.forEach((val, key) => {\n      foldersIndexMap.set(key, result.folders.length);\n      const f = new FolderView();\n      f.name = val;\n      result.folders.push(f);\n    });\n\n    results.items.forEach((value: any) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.login.uris = this.makeUriArray(value.login_url);\n\n      if (value.folder != null && foldersIndexMap.has(value.folder)) {\n        result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(value.folder)]);\n      }\n\n      if (value.identifiers == null) {\n        return;\n      }\n\n      if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n        cipher.notes = value.identifiers.notes.split(\"\\\\r\\\\n\").join(\"\\n\").split(\"\\\\n\").join(\"\\n\");\n      }\n\n      if (value.type === \"CreditCard\") {\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n      }\n\n      for (const property in value.identifiers) {\n        if (!value.identifiers.hasOwnProperty(property)) {\n          continue;\n        }\n        const valObj = value.identifiers[property];\n        const val = valObj != null ? valObj.toString() : null;\n        if (\n          this.isNullOrWhitespace(val) ||\n          property === \"notes\" ||\n          property === \"ignoreItemInSecurityScore\"\n        ) {\n          continue;\n        }\n\n        if (property === \"custom_fields\") {\n          valObj.forEach((cf: any) => {\n            this.processKvp(cipher, cf.name, cf.value);\n          });\n          continue;\n        }\n\n        if (cipher.type === CipherType.Card) {\n          if (property === \"cardNumber\") {\n            cipher.card.number = val;\n            cipher.card.brand = this.getCardBrand(val);\n            continue;\n          } else if (property === \"nameOnCard\") {\n            cipher.card.cardholderName = val;\n            continue;\n          } else if (property === \"security_code\") {\n            cipher.card.code = val;\n            continue;\n          } else if (property === \"expires\") {\n            try {\n              const expDate = new Date(val);\n              cipher.card.expYear = expDate.getFullYear().toString();\n              cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n            } catch {\n              // Ignore error\n            }\n            continue;\n          } else if (property === \"cardType\") {\n            continue;\n          }\n        } else {\n          if (\n            (property === \"username\" || property === \"email\") &&\n            this.isNullOrWhitespace(cipher.login.username)\n          ) {\n            cipher.login.username = val;\n            continue;\n          } else if (property === \"password\") {\n            cipher.login.password = val;\n            continue;\n          } else if (property === \"totp\") {\n            cipher.login.totp = val;\n            continue;\n          } else if (\n            (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n            this.uriFieldNames.indexOf(property) > -1\n          ) {\n            cipher.login.uris = this.makeUriArray(val);\n            continue;\n          }\n        }\n\n        this.processKvp(cipher, property, val);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const records = doc.querySelectorAll(\"PasswordManager > record\");\n    Array.from(records).forEach((record) => {\n      const category = this.querySelectorDirectChild(record, \"Category\");\n      const categoryText =\n        category != null &&\n        !this.isNullOrWhitespace(category.textContent) &&\n        category.textContent !== \"Unfiled\"\n          ? category.textContent\n          : null;\n      this.processFolder(result, categoryText);\n\n      const accountName = this.querySelectorDirectChild(record, \"Account-Name\");\n      const userId = this.querySelectorDirectChild(record, \"User-Id\");\n      const password = this.querySelectorDirectChild(record, \"Password\");\n      const url = this.querySelectorDirectChild(record, \"URL\");\n      const notes = this.querySelectorDirectChild(record, \"Notes\");\n      const cipher = this.initLoginCipher();\n      cipher.name =\n        accountName != null ? this.getValueOrDefault(accountName.textContent, \"--\") : \"--\";\n      cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : \"\";\n      cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n      cipher.login.password =\n        password != null ? this.getValueOrDefault(password.textContent) : null;\n      cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n      const attributes: string[] = [];\n      for (let i = 1; i <= 10; i++) {\n        attributes.push(\"Attribute-\" + i);\n      }\n\n      this.querySelectorAllDirectChild(record, attributes.join(\",\")).forEach((attr) => {\n        if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === \"null\") {\n          return;\n        }\n        this.processKvp(cipher, attr.tagName, attr.textContent);\n      });\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const passwordSafe = doc.querySelector(\"passwordsafe\");\n    if (passwordSafe == null) {\n      result.errorMessage = \"Missing `passwordsafe` node.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const notesDelimiter = passwordSafe.getAttribute(\"delimiter\");\n    const entries = doc.querySelectorAll(\"passwordsafe > entry\");\n    Array.from(entries).forEach((entry) => {\n      const group = this.querySelectorDirectChild(entry, \"group\");\n      const groupText =\n        group != null && !this.isNullOrWhitespace(group.textContent)\n          ? group.textContent.split(\".\").join(\"/\")\n          : null;\n      this.processFolder(result, groupText);\n\n      const title = this.querySelectorDirectChild(entry, \"title\");\n      const username = this.querySelectorDirectChild(entry, \"username\");\n      const email = this.querySelectorDirectChild(entry, \"email\");\n      const password = this.querySelectorDirectChild(entry, \"password\");\n      const url = this.querySelectorDirectChild(entry, \"url\");\n      const notes = this.querySelectorDirectChild(entry, \"notes\");\n      const cipher = this.initLoginCipher();\n      cipher.name = title != null ? this.getValueOrDefault(title.textContent, \"--\") : \"--\";\n      cipher.notes =\n        notes != null\n          ? this.getValueOrDefault(notes.textContent, \"\").split(notesDelimiter).join(\"\\n\")\n          : null;\n      cipher.login.username =\n        username != null ? this.getValueOrDefault(username.textContent) : null;\n      cipher.login.password =\n        password != null ? this.getValueOrDefault(password.textContent) : null;\n      cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n      if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n        cipher.login.username = this.getValueOrDefault(email.textContent);\n      } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n        cipher.notes = this.isNullOrWhitespace(cipher.notes)\n          ? \"Email: \" + email.textContent\n          : cipher.notes + \"\\n\" + \"Email: \" + email.textContent;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 1) {\n        return;\n      }\n      if (value.length > 5) {\n        this.processFolder(result, value[5]);\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      if (value.length > 4) {\n        cipher.notes = this.getValueOrDefault(value[4], \"\").split(\"¬\").join(\"\\n\");\n      }\n      if (value.length > 2) {\n        cipher.login.username = this.getValueOrDefault(value[2]);\n      }\n      if (value.length > 3) {\n        cipher.login.password = this.getValueOrDefault(value[3]);\n      }\n      if (value.length > 1) {\n        cipher.login.uris = this.makeUriArray(value[1]);\n      }\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { CipherType } from \"../enums/cipherType\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CardView } from \"../models/view/cardView\";\n\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.trash === \"true\") {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.notes = this.getValueOrDefault(value.notes);\n      if (value.type === \"LoginItem\") {\n        cipher.login.uris = this.makeUriArray(value.website);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.username = this.getValueOrDefault(value.username);\n      } else if (value.type === \"CreditCardItem\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n        cipher.card.number = this.getValueOrDefault(value.number);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.verification);\n\n        try {\n          const expMonth = this.getValueOrDefault(value.expiryMonth);\n          if (expMonth != null) {\n            const expMonthNumber = parseInt(expMonth, null);\n            if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\n              cipher.card.expMonth = expMonthNumber.toString();\n            }\n          }\n        } catch {\n          // Ignore error\n        }\n        try {\n          const expYear = this.getValueOrDefault(value.expiryYear);\n          if (expYear != null) {\n            const expYearNumber = parseInt(expYear, null);\n            if (expYearNumber != null) {\n              cipher.card.expYear = expYearNumber.toString();\n            }\n          }\n        } catch {\n          // Ignore error\n        }\n\n        const pin = this.getValueOrDefault(value.pin);\n        if (pin != null) {\n          this.processKvp(cipher, \"PIN\", pin);\n        }\n        const zip = this.getValueOrDefault(value.zipCode);\n        if (zip != null) {\n          this.processKvp(cipher, \"Zip Code\", zip);\n        }\n      }\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let i = 1;\n    results.forEach((value) => {\n      const folder =\n        !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith(\"/\")\n          ? value.Folder.replace(\"/\", \"\")\n          : value.Folder;\n      const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n      this.processFolder(result, folderName);\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Note);\n      cipher.name = this.getValueOrDefault(value.Name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Login);\n      cipher.login.password = this.getValueOrDefault(value.Pwd);\n      cipher.login.uris = this.makeUriArray(value.Url);\n\n      if (!this.isNullOrWhitespace(value.Rf_fields)) {\n        let fields: string[] = [value.Rf_fields];\n        if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n          fields = fields.concat(value.__parsed_extra);\n        }\n        fields.forEach((field: string) => {\n          const parts = field.split(\":\");\n          if (parts.length < 3) {\n            return;\n          }\n          const key = parts[0] === \"-no-name-\" ? null : parts[0];\n          const val = parts.length === 4 && parts[2] === \"rck\" ? parts[1] : parts[2];\n          this.processKvp(cipher, key, val);\n        });\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n\n      if (\n        i === results.length &&\n        cipher.name === \"--\" &&\n        this.isNullOrWhitespace(cipher.login.password)\n      ) {\n        return;\n      }\n\n      result.ciphers.push(cipher);\n      i++;\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class SafariCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.Url);\n      cipher.login.totp = this.getValueOrDefault(value.OTPAuth);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { FolderView } from \"../models/view/folderView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\nimport { FieldType } from \"../enums/fieldType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const db = doc.querySelector(\"database\");\n    if (db == null) {\n      result.errorMessage = \"Missing `database` node.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, number>();\n\n    Array.from(doc.querySelectorAll(\"database > label\")).forEach((labelEl) => {\n      const name = labelEl.getAttribute(\"name\");\n      const id = labelEl.getAttribute(\"id\");\n      if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n        foldersMap.set(id, result.folders.length);\n        const folder = new FolderView();\n        folder.name = name;\n        result.folders.push(folder);\n      }\n    });\n\n    Array.from(doc.querySelectorAll(\"database > card\")).forEach((cardEl) => {\n      if (cardEl.getAttribute(\"template\") === \"true\" || cardEl.getAttribute(\"deleted\") === \"true\") {\n        return;\n      }\n\n      const labelIdEl = this.querySelectorDirectChild(cardEl, \"label_id\");\n      if (labelIdEl != null) {\n        const labelId = labelIdEl.textContent;\n        if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n          result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n        }\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(cardEl.getAttribute(\"title\"), \"--\");\n\n      if (cardEl.getAttribute(\"star\") === \"true\") {\n        cipher.favorite = true;\n      }\n\n      const cardType = cardEl.getAttribute(\"type\");\n      if (cardType === \"note\") {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n      } else {\n        Array.from(this.querySelectorAllDirectChild(cardEl, \"field\")).forEach((fieldEl) => {\n          const text = fieldEl.textContent;\n          if (this.isNullOrWhitespace(text)) {\n            return;\n          }\n          const name = fieldEl.getAttribute(\"name\");\n          const fieldType = this.getValueOrDefault(fieldEl.getAttribute(\"type\"), \"\").toLowerCase();\n          if (fieldType === \"login\") {\n            cipher.login.username = text;\n          } else if (fieldType === \"password\" || fieldType === \"secret\") {\n            // safeInCloud allows for more than one password. we just insert them here and find the one used as password later\n            this.processKvp(cipher, name, text, FieldType.Hidden);\n          } else if (fieldType === \"one_time_password\") {\n            cipher.login.totp = text;\n          } else if (fieldType === \"notes\") {\n            cipher.notes += text + \"\\n\";\n          } else if (fieldType === \"weblogin\" || fieldType === \"website\") {\n            cipher.login.uris = this.makeUriArray(text);\n          } else {\n            this.processKvp(cipher, name, text);\n          }\n        });\n      }\n\n      Array.from(this.querySelectorAllDirectChild(cardEl, \"notes\")).forEach((notesEl) => {\n        cipher.notes += notesEl.textContent + \"\\n\";\n      });\n\n      this.setPassword(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  // Choose a password from all passwords. Take one that has password in its name, or the first one if there is no such entry\n  // if its name is password, we can safely remove it form the fields. otherwise, it would maybe be best to keep it as a hidden field\n  setPassword(cipher: CipherView) {\n    const candidates = cipher.fields.filter((field) => field.type === FieldType.Hidden);\n    if (!candidates.length) {\n      return;\n    }\n\n    let choice: FieldView;\n    for (const field of candidates) {\n      if (this.passwordFieldNames.includes(field.name.toLowerCase())) {\n        choice = field;\n        cipher.fields = cipher.fields.filter((f) => f !== choice);\n        break;\n      }\n    }\n\n    if (!choice) {\n      choice = candidates[0];\n    }\n\n    cipher.login.password = choice.value;\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), \"--\");\n      cipher.notes = this.getValueOrDefault(value.notes);\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Title);\n      cipher.notes = this.getValueOrDefault(value.Comment);\n      cipher.login.uris = this.makeUriArray(value.Url);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 3) {\n        return;\n      }\n\n      this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 2], \"\");\n      cipher.name = this.getValueOrDefault(value[1], \"--\");\n\n      if (value[0] === \"Web Logins\" || value[0] === \"Servers\" || value[0] === \"Email Accounts\") {\n        cipher.login.username = this.getValueOrDefault(value[2]);\n        cipher.login.password = this.getValueOrDefault(value[3]);\n        cipher.login.uris = this.makeUriArray(value[4]);\n        this.parseFieldsToNotes(cipher, 5, value);\n      } else {\n        this.parseFieldsToNotes(cipher, 2, value);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n    // last 3 rows do not get parsed\n    for (let i = startIndex; i < value.length - 3; i++) {\n      if (this.isNullOrWhitespace(value[i])) {\n        continue;\n      }\n      cipher.notes += value[i] + \"\\n\";\n    }\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const loginNodes = doc.querySelectorAll(\"root > Database > Logins > Login\");\n    Array.from(loginNodes).forEach((loginNode) => {\n      const accountId = loginNode.getAttribute(\"ID\");\n      if (this.isNullOrWhitespace(accountId)) {\n        return;\n      }\n\n      const usernameText = loginNode.getAttribute(\"Name\");\n      const passwordText = loginNode.getAttribute(\"Password\");\n      let titleText: string = null;\n      let linkText: string = null;\n      let notesText: string = null;\n      let groupId: string = null;\n      let groupText: string = null;\n\n      const accountLogin = doc.querySelector(\n        \"root > Database > Accounts > Account > \" +\n          'LoginLinks > Login[SourceLoginID=\"' +\n          accountId +\n          '\"]'\n      );\n      if (accountLogin != null) {\n        const account = accountLogin.parentElement.parentElement;\n        if (account != null) {\n          titleText = account.getAttribute(\"Name\");\n          linkText = account.getAttribute(\"Link\");\n          groupId = account.getAttribute(\"ParentID\");\n          notesText = account.getAttribute(\"Comments\");\n          if (!this.isNullOrWhitespace(notesText)) {\n            notesText = notesText.split(\"/n\").join(\"\\n\");\n          }\n        }\n      }\n\n      if (!this.isNullOrWhitespace(groupId)) {\n        groupText = this.buildGroupText(doc, groupId, \"\");\n        this.processFolder(result, groupText);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(titleText, \"--\");\n      cipher.notes = this.getValueOrDefault(notesText);\n      cipher.login.username = this.getValueOrDefault(usernameText);\n      cipher.login.password = this.getValueOrDefault(passwordText);\n      cipher.login.uris = this.makeUriArray(linkText);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  buildGroupText(doc: Document, groupId: string, groupText: string): string {\n    const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n    if (group == null) {\n      return groupText;\n    }\n    if (!this.isNullOrWhitespace(groupText)) {\n      groupText = \"/\" + groupText;\n    }\n    groupText = group.getAttribute(\"Name\") + groupText;\n    return this.buildGroupText(doc, group.getAttribute(\"ParentID\"), groupText);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CardView } from \"../models/view/cardView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\n\nconst PropertiesToIgnore = [\n  \"kind\",\n  \"autologin\",\n  \"favorite\",\n  \"hexcolor\",\n  \"protectedwithpassword\",\n  \"subdomainonly\",\n  \"type\",\n  \"tk_export_version\",\n  \"note\",\n  \"title\",\n  \"document_content\",\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.favorite, \"\").toLowerCase() === \"true\";\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.notes = this.getValueOrDefault(value.memo, \"\");\n      cipher.login.username = this.getValueOrDefault(value.login);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n\n      if (value.kind !== \"login\") {\n        cipher.name = this.getValueOrDefault(value.title, \"--\");\n        cipher.notes = this.getValueOrDefault(value.note, \"\");\n      }\n\n      if (value.kind === \"cc\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n        cipher.card.number = this.getValueOrDefault(value.number);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        if (!this.isNullOrWhitespace(value.expiryDate)) {\n          try {\n            const expDate = new Date(value.expiryDate);\n            cipher.card.expYear = expDate.getFullYear().toString();\n            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n          } catch {\n            // Ignore error\n          }\n        }\n      } else if (value.kind !== \"login\") {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n        if (!this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes = this.getValueOrDefault(value.document_content, \"\");\n        }\n        for (const property in value) {\n          if (\n            value.hasOwnProperty(property) &&\n            PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n            !this.isNullOrWhitespace(value[property])\n          ) {\n            this.processKvp(cipher, property, value[property]);\n          }\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length !== 5) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      cipher.notes = this.getValueOrDefault(value[4]);\n      cipher.login.username = this.getValueOrDefault(value[1]);\n      cipher.login.password = this.getValueOrDefault(value[2]);\n      cipher.login.uris = this.makeUriArray(value[3]);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nexport class YotiCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value[\"User name\"]);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (\n        this.isNullOrWhitespace(value[\"Password Name\"]) &&\n        this.isNullOrWhitespace(value[\"Secret Name\"])\n      ) {\n        return;\n      }\n      this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.Favorite, \"0\") === \"1\";\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.name = this.getValueOrDefault(\n        value[\"Password Name\"],\n        this.getValueOrDefault(value[\"Secret Name\"], \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(\n        this.getValueOrDefault(value[\"Password URL\"], this.getValueOrDefault(value[\"Secret URL\"]))\n      );\n      this.parseData(cipher, value.SecretData);\n      this.parseData(cipher, value.CustomData);\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseData(cipher: CipherView, data: string) {\n    if (this.isNullOrWhitespace(data)) {\n      return;\n    }\n    const dataLines = this.splitNewLine(data);\n    dataLines.forEach((line) => {\n      const delimPosition = line.indexOf(\":\");\n      if (delimPosition < 0) {\n        return;\n      }\n      const field = line.substring(0, delimPosition);\n      const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n      if (\n        this.isNullOrWhitespace(field) ||\n        this.isNullOrWhitespace(value) ||\n        field === \"SecretType\"\n      ) {\n        return;\n      }\n      const fieldLower = field.toLowerCase();\n      if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n        cipher.login.username = value;\n      } else if (\n        cipher.login.password == null &&\n        this.passwordFieldNames.indexOf(fieldLower) > -1\n      ) {\n        cipher.login.password = value;\n      } else {\n        this.processKvp(cipher, field, value);\n      }\n    });\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nexport abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { ItemView } from \"../models/view/itemView\";\n\nimport { LinkedIdType } from \"../enums/linkedIdType\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","export function getDomain(host: string): string | null {\n  return null;\n}\n\nexport function isValid(host: string): boolean {\n  return true;\n}\n","import * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\n// tslint:disable-next-line\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      // tslint:disable-next-line\n      const r = (Math.random() * 16) | 0;\n      // tslint:disable-next-line\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    // tslint:disable-next-line\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      // tslint:disable-next-line\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function,\n    private errorCallback: Function,\n    private infoCallback: Function\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nenum SsoType {\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nenum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nenum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n  Artifact = 4,\n}\n\nenum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nenum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n\nexport class SsoConfigApi extends BaseResponse {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpArtifactResolutionServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpArtifactResolutionServiceUrl = this.getResponseProperty(\n      \"IdpArtifactResolutionServiceUrl\"\n    );\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  userId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  sizeName: string;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.userId = userId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  userId: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse, userId: string) {\n    this.userId = userId;\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { PolicyResponse } from \"../response/policyResponse\";\n\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nimport { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nimport { SendResponse } from \"../response/sendResponse\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse, userId?: string) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.userId = userId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.key = data.key;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { OrganizationData } from \"../data/organizationData\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  collapsedGroupings?: Set<string>;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","import { AttachmentData } from \"../data/attachmentData\";\n\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { CryptoService } from \"../../abstractions/crypto.service\";\n\nimport { Utils } from \"../../misc/utils\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string;\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nexport class AuthResult {\n  twoFactor: boolean = false;\n  captchaSiteKey: string = \"\";\n  resetMasterPassword: boolean = false;\n  forcePasswordReset: boolean = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n}\n","import { CardData } from \"../data/cardData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nimport { CardView } from \"../view/cardView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(this),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { CipherData } from \"../data/cipherData\";\n\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        userId: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"userId\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login, alreadyEncrypted);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card, alreadyEncrypted);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(userId: string): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.userId = this.organizationId != null ? userId : null;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\n\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { EncString } from \"./encString\";\n\nimport { View } from \"../view/view\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    alreadyEncrypted: boolean,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      // tslint:disable-next-line\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\n\nimport { CryptoService } from \"../../abstractions/crypto.service\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { FieldData } from \"../data/fieldData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nimport { FieldView } from \"../view/fieldView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\n\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      alreadyEncrypted,\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string = \"en\";\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import { IdentityData } from \"../data/identityData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { IdentityView } from \"../view/identityView\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(this),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class ImportResult {\n  success = false;\n  errorMessage: string;\n  ciphers: CipherView[] = [];\n  folders: FolderView[] = [];\n  folderRelationships: [number, number][] = [];\n  collections: CollectionView[] = [];\n  collectionRelationships: [number, number][] = [];\n}\n","import { LoginUri } from \"./loginUri\";\n\nimport { LoginData } from \"../data/loginData\";\n\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u, alreadyEncrypted));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { LoginUriData } from \"../data/loginUriData\";\n\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity: number = 0;\n  minLength: number = 0;\n  requireUpper: boolean = false;\n  requireLower: boolean = false;\n  requireNumbers: boolean = false;\n  requireSpecial: boolean = false;\n}\n","import { OrganizationData } from \"../data/organizationData\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        password: null,\n      },\n      alreadyEncrypted\n    );\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType: string = \"\";\n  minLength: number = 0;\n  useUppercase: boolean = false;\n  useLowercase: boolean = false;\n  useNumbers: boolean = false;\n  numberCount: number = 0;\n  useSpecial: boolean = false;\n  specialCount: number = 0;\n  minNumberWords: number = 0;\n  capitalize: boolean = false;\n  includeNumber: boolean = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled: boolean = false;\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { SecureNoteData } from \"../data/secureNoteData\";\n\nimport Domain from \"./domainBase\";\n\nimport { SecureNoteView } from \"../view/secureNoteView\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\n\nimport { SendType } from \"../../enums/sendType\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { SendData } from \"../data/sendData\";\n\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        userId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"accessId\", \"userId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\n\nimport { SendAccessResponse } from \"../response/sendAccessResponse\";\n\nimport { SendAccessView } from \"../view/sendAccessView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { SendFileData } from \"../data/sendFileData\";\n\nimport { SendFileView } from \"../view/sendFileView\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nimport { SendTextData } from \"../data/sendTextData\";\n\nimport { SendTextView } from \"../view/sendTextView\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData, alreadyEncrypted: boolean = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\n\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { CardView } from \"../view/cardView\";\n\nimport { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\n\nexport class Card {\n  static template(): Card {\n    const req = new Card();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: Card, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: Card, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\n\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { SecureNote } from \"./secureNote\";\n\nexport class Cipher {\n  static template(): Cipher {\n    const req = new Cipher();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: Cipher, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => Field.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = Login.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNote.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = Card.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = Identity.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: Cipher, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => Field.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = Login.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = Card.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: Field[];\n  login: Login;\n  secureNote: SecureNote;\n  card: Card;\n  identity: Identity;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new Field(f));\n      } else {\n        this.fields = o.fields.map((f) => new Field(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new Login(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher } from \"./cipher\";\n\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\n\nexport class CipherWithIds extends Cipher {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { CollectionView } from \"../view/collectionView\";\n\nimport { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\n\nexport class Collection {\n  static template(): Collection {\n    const req = new Collection();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: Collection, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: Collection, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection } from \"./collection\";\n\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { Collection as CollectionDomain } from \"../domain/collection\";\n\nexport class CollectionWithId extends Collection {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class Event {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { FieldView } from \"../view/fieldView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\n\nexport class Field {\n  static template(): Field {\n    const req = new Field();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: Field, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: Field, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { FolderView } from \"../view/folderView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\n\nexport class Folder {\n  static template(): Folder {\n    const req = new Folder();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: Folder, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: Folder, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder } from \"./folder\";\n\nimport { FolderView } from \"../view/folderView\";\n\nimport { Folder as FolderDomain } from \"../domain/folder\";\n\nexport class FolderWithId extends Folder {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { IdentityView } from \"../view/identityView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\n\nexport class Identity {\n  static template(): Identity {\n    const req = new Identity();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: Identity, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: Identity, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { LoginUri } from \"./loginUri\";\n\nimport { LoginView } from \"../view/loginView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\n\nexport class Login {\n  static template(): Login {\n    const req = new Login();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: Login, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUri.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: Login, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUri.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUri[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\n\nexport class LoginUri {\n  static template(): LoginUri {\n    const req = new LoginUri();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUri, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\n\nexport class SecureNote {\n  static template(): SecureNote {\n    const req = new SecureNote();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNote, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { KeysRequest } from \"../keysRequest\";\n\nimport { KdfType } from \"../../../enums/kdfType\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { EmailTokenRequest } from \"./emailTokenRequest\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { FolderRequest } from \"./folderRequest\";\n\nimport { Folder } from \"../domain/folder\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","import { CipherRequest } from \"./cipherRequest\";\nimport { FolderRequest } from \"./folderRequest\";\nimport { KvpRequest } from \"./kvpRequest\";\n\nexport class ImportCiphersRequest {\n  ciphers: CipherRequest[] = [];\n  folders: FolderRequest[] = [];\n  folderRelationships: KvpRequest<number, number>[] = [];\n}\n","import { CipherRequest } from \"./cipherRequest\";\nimport { CollectionRequest } from \"./collectionRequest\";\nimport { KvpRequest } from \"./kvpRequest\";\n\nexport class ImportOrganizationCiphersRequest {\n  ciphers: CipherRequest[] = [];\n  collections: CollectionRequest[] = [];\n  collectionRelationships: KvpRequest<number, number>[] = [];\n}\n","import { PasswordRequest } from \"./passwordRequest\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","export class KvpRequest<TK, TV> {\n  key: TK;\n  value: TV;\n\n  constructor(key: TK, value: TV) {\n    this.key = key;\n    this.value = value;\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\n\nexport class OrganizationSsoRequest {\n  enabled: boolean = false;\n  data: SsoConfigApi;\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","export class OrganizationSubscriptionUpdateRequest {\n  constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) {}\n}\n","import { TaxInfoUpdateRequest } from \"./taxInfoUpdateRequest\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","import { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","export class OrganizationUserResetPasswordEnrollmentRequest {\n  resetPasswordKey: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../request/organizationTaxInfoUpdateRequest\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { OrganizationCreateRequest } from \"../organizationCreateRequest\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","import { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","import { SendType } from \"../../enums/sendType\";\n\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendRequest } from \"./sendRequest\";\n\nimport { Send } from \"../domain/send\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { DeviceRequest } from \"./deviceRequest\";\n\nimport { Utils } from \"../../misc/utils\";\n\nexport class TokenRequest implements CaptchaProtectedRequest {\n  email: string;\n  masterPasswordHash: string;\n  code: string;\n  codeVerifier: string;\n  redirectUri: string;\n  clientId: string;\n  clientSecret: string;\n  device?: DeviceRequest;\n\n  constructor(\n    credentials: string[],\n    codes: string[],\n    clientIdClientSecret: string[],\n    public provider: TwoFactorProviderType,\n    public token: string,\n    public remember: boolean,\n    public captchaResponse: string,\n    device?: DeviceRequest\n  ) {\n    if (credentials != null && credentials.length > 1) {\n      this.email = credentials[0];\n      this.masterPasswordHash = credentials[1];\n    } else if (codes != null && codes.length > 2) {\n      this.code = codes[0];\n      this.codeVerifier = codes[1];\n      this.redirectUri = codes[2];\n    } else if (clientIdClientSecret != null && clientIdClientSecret.length > 1) {\n      this.clientId = clientIdClientSecret[0];\n      this.clientSecret = clientIdClientSecret[1];\n    }\n    this.device = device != null ? device : null;\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.clientSecret != null) {\n      obj.scope = clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n      obj.grant_type = \"client_credentials\";\n      obj.client_secret = this.clientSecret;\n    } else if (this.masterPasswordHash != null && this.email != null) {\n      obj.grant_type = \"password\";\n      obj.username = this.email;\n      obj.password = this.masterPasswordHash;\n    } else if (this.code != null && this.codeVerifier != null && this.redirectUri != null) {\n      obj.grant_type = \"authorization_code\";\n      obj.code = this.code;\n      obj.code_verifier = this.codeVerifier;\n      obj.redirect_uri = this.redirectUri;\n    } else {\n      throw new Error(\"must provide credentials or codes\");\n    }\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.token && this.provider != null) {\n      obj.twoFactorToken = this.token;\n      obj.twoFactorProvider = this.provider;\n      obj.twoFactorRemember = this.remember ? \"1\" : \"0\";\n    }\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    if (this.clientSecret == null && this.masterPasswordHash != null && this.email != null) {\n      headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"./folderWithIdRequest\";\nimport { SendWithIdRequest } from \"./sendWithIdRequest\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { NotificationType } from \"../../enums/notificationType\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data = new SsoConfigApi(this.getResponseProperty(\"Data\"));\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nimport { PlanType } from \"../../enums/planType\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { KdfType } from \"../../enums/kdfType\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\n\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premium: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premium = this.getResponseProperty(\"Premium\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nimport { PermissionsApi } from \"../../api/permissionsApi\";\n\nimport { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { SendType } from \"../../enums/sendType\";\n\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { SendType } from \"../../enums/sendType\";\n\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { View } from \"./view\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { ItemView } from \"./itemView\";\n\nimport { Card } from \"../domain/card\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\n\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  // tslint:disable\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n  // tslint:enable\n\n  constructor(c?: Card) {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { ItemView } from \"./itemView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { View } from \"./view\";\n\nimport { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\n\nimport { View } from \"./view\";\n\nimport { Field } from \"../domain/field\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField: boolean = false; // Marks if the field is new and hasn't been saved\n  showValue: boolean = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { View } from \"./view\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { ItemView } from \"./itemView\";\n\nimport { Identity } from \"../domain/identity\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\n\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  // tslint:disable\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n  // tslint:enable\n\n  constructor(i?: Identity) {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { View } from \"./view\";\n\nimport { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\n\nimport { View } from \"./view\";\n\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { Utils } from \"../../misc/utils\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  // tslint:disable\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n  // tslint:enable\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nimport { Utils } from \"../../misc/utils\";\n\nimport { Login } from \"../domain/login\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\n\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { View } from \"./view\";\n\nimport { Password } from \"../domain/password\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\n\nimport { ItemView } from \"./itemView\";\n\nimport { SecureNote } from \"../domain/secureNote\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\n\nimport { SendAccess } from \"../domain/sendAccess\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { View } from \"./view\";\n\nimport { SendFile } from \"../domain/sendFile\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { View } from \"./view\";\n\nimport { SendText } from \"../domain/sendText\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount: number = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled: boolean = false;\n  hideEmail: boolean = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\n\nimport { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\n\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TokenRequest } from \"../models/request/tokenRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport { TwoFactorWebAuthnResponse } from \"../models/response/twoFactorWebAuthnResponse\";\nimport { ChallengeResponse } from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\n\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  protected apiKeyRefresh: (clientId: string, clientSecret: string) => Promise<any>;\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: TokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(\n          request.toIdentityToken(request.clientId ?? this.platformUtilsService.identityClientId)\n        ),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken(request.email);\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserBilling(): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\"POST\", \"/accounts/prelogin\", request, false, true);\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/register\", request, false, false);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<boolean> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      return true;\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" + sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (\n      Utils.isNullOrWhitespace(clientId) ||\n      Utils.isNullOrWhitespace(clientSecret) ||\n      this.apiKeyRefresh == null\n    ) {\n      throw new Error();\n    }\n\n    await this.apiKeyRefresh(clientId, clientSecret);\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { Utils } from \"../misc/utils\";\n\nimport { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key);\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid);\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\n\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\n\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\n\nimport {\n  Account,\n  AccountData,\n  AccountKeys,\n  AccountProfile,\n  AccountTokens,\n} from \"../models/domain/account\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { TokenRequest } from \"../models/request/tokenRequest\";\n\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport const TwoFactorProviders = {\n  [TwoFactorProviderType.Authenticator]: {\n    type: TwoFactorProviderType.Authenticator,\n    name: null as string,\n    description: null as string,\n    priority: 1,\n    sort: 1,\n    premium: false,\n  },\n  [TwoFactorProviderType.Yubikey]: {\n    type: TwoFactorProviderType.Yubikey,\n    name: null as string,\n    description: null as string,\n    priority: 3,\n    sort: 2,\n    premium: true,\n  },\n  [TwoFactorProviderType.Duo]: {\n    type: TwoFactorProviderType.Duo,\n    name: \"Duo\",\n    description: null as string,\n    priority: 2,\n    sort: 3,\n    premium: true,\n  },\n  [TwoFactorProviderType.OrganizationDuo]: {\n    type: TwoFactorProviderType.OrganizationDuo,\n    name: \"Duo (Organization)\",\n    description: null as string,\n    priority: 10,\n    sort: 4,\n    premium: false,\n  },\n  [TwoFactorProviderType.Email]: {\n    type: TwoFactorProviderType.Email,\n    name: null as string,\n    description: null as string,\n    priority: 0,\n    sort: 6,\n    premium: false,\n  },\n  [TwoFactorProviderType.WebAuthn]: {\n    type: TwoFactorProviderType.WebAuthn,\n    name: null as string,\n    description: null as string,\n    priority: 4,\n    sort: 5,\n    premium: true,\n  },\n};\n\nexport class AuthService implements AuthServiceAbstraction {\n  email: string;\n  masterPasswordHash: string;\n  localMasterPasswordHash: string;\n  code: string;\n  codeVerifier: string;\n  ssoRedirectUrl: string;\n  clientId: string;\n  clientSecret: string;\n  twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  selectedTwoFactorProviderType: TwoFactorProviderType = null;\n  captchaToken: string;\n\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    private cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    private i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private logService: LogService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    private keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    private setCryptoKeys = true\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  async logIn(email: string, masterPassword: string, captchaToken?: string): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    const key = await this.makePreloginKey(masterPassword, email);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    return await this.logInHelper(\n      email,\n      hashedPassword,\n      localHashedPassword,\n      null,\n      null,\n      null,\n      null,\n      null,\n      key,\n      null,\n      null,\n      null,\n      captchaToken,\n      null\n    );\n  }\n\n  async logInSso(\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    orgId: string\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      code,\n      codeVerifier,\n      redirectUrl,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      orgId\n    );\n  }\n\n  async logInApiKey(clientId: string, clientSecret: string): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      clientId,\n      clientSecret,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null\n    );\n  }\n\n  async logInTwoFactor(\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ): Promise<AuthResult> {\n    return await this.logInHelper(\n      this.email,\n      this.masterPasswordHash,\n      this.localMasterPasswordHash,\n      this.code,\n      this.codeVerifier,\n      this.ssoRedirectUrl,\n      this.clientId,\n      this.clientSecret,\n      this.key,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      this.captchaToken,\n      null\n    );\n  }\n\n  async logInComplete(\n    email: string,\n    masterPassword: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean,\n    captchaToken?: string\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    const key = await this.makePreloginKey(masterPassword, email);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    return await this.logInHelper(\n      email,\n      hashedPassword,\n      localHashedPassword,\n      null,\n      null,\n      null,\n      null,\n      null,\n      key,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      captchaToken,\n      null\n    );\n  }\n\n  async logInSsoComplete(\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      code,\n      codeVerifier,\n      redirectUrl,\n      null,\n      null,\n      null,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      null,\n      null\n    );\n  }\n\n  async logInApiKeyComplete(\n    clientId: string,\n    clientSecret: string,\n    twoFactorProvider: TwoFactorProviderType,\n    twoFactorToken: string,\n    remember?: boolean\n  ): Promise<AuthResult> {\n    this.selectedTwoFactorProviderType = null;\n    return await this.logInHelper(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      clientId,\n      clientSecret,\n      null,\n      twoFactorProvider,\n      twoFactorToken,\n      remember,\n      null,\n      null\n    );\n  }\n\n  logOut(callback: Function) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  getSupportedTwoFactorProviders(win: Window): any[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultTwoFactorProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  authingWithApiKey(): boolean {\n    return this.clientId != null && this.clientSecret != null;\n  }\n\n  authingWithSso(): boolean {\n    return this.code != null && this.codeVerifier != null && this.ssoRedirectUrl != null;\n  }\n\n  authingWithPassword(): boolean {\n    return this.email != null && this.masterPasswordHash != null;\n  }\n\n  private async logInHelper(\n    email: string,\n    hashedPassword: string,\n    localHashedPassword: string,\n    code: string,\n    codeVerifier: string,\n    redirectUrl: string,\n    clientId: string,\n    clientSecret: string,\n    key: SymmetricCryptoKey,\n    twoFactorProvider?: TwoFactorProviderType,\n    twoFactorToken?: string,\n    remember?: boolean,\n    captchaToken?: string,\n    orgId?: string\n  ): Promise<AuthResult> {\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    let emailPassword: string[] = [];\n    let codeCodeVerifier: string[] = [];\n    let clientIdClientSecret: [string, string] = [null, null];\n\n    if (email != null && hashedPassword != null) {\n      emailPassword = [email, hashedPassword];\n    } else {\n      emailPassword = null;\n    }\n    if (code != null && codeVerifier != null && redirectUrl != null) {\n      codeCodeVerifier = [code, codeVerifier, redirectUrl];\n    } else {\n      codeCodeVerifier = null;\n    }\n    if (clientId != null && clientSecret != null) {\n      clientIdClientSecret = [clientId, clientSecret];\n    } else {\n      clientIdClientSecret = null;\n    }\n\n    let request: TokenRequest;\n    if (twoFactorToken != null && twoFactorProvider != null) {\n      request = new TokenRequest(\n        emailPassword,\n        codeCodeVerifier,\n        clientIdClientSecret,\n        twoFactorProvider,\n        twoFactorToken,\n        remember,\n        captchaToken,\n        deviceRequest\n      );\n    } else if (storedTwoFactorToken != null) {\n      request = new TokenRequest(\n        emailPassword,\n        codeCodeVerifier,\n        clientIdClientSecret,\n        TwoFactorProviderType.Remember,\n        storedTwoFactorToken,\n        false,\n        captchaToken,\n        deviceRequest\n      );\n    } else {\n      request = new TokenRequest(\n        emailPassword,\n        codeCodeVerifier,\n        clientIdClientSecret,\n        null,\n        null,\n        false,\n        captchaToken,\n        deviceRequest\n      );\n    }\n\n    const response = await this.apiService.postIdentityToken(request);\n\n    this.clearState();\n    const result = new AuthResult();\n    result.captchaSiteKey = (response as any).siteKey;\n    if (!!result.captchaSiteKey) {\n      return result;\n    }\n    result.twoFactor = !!(response as any).twoFactorProviders2;\n\n    if (result.twoFactor) {\n      // two factor required\n      this.email = email;\n      this.masterPasswordHash = hashedPassword;\n      this.localMasterPasswordHash = localHashedPassword;\n      this.code = code;\n      this.codeVerifier = codeVerifier;\n      this.ssoRedirectUrl = redirectUrl;\n      this.clientId = clientId;\n      this.clientSecret = clientSecret;\n      this.key = this.setCryptoKeys ? key : null;\n      const twoFactorResponse = response as IdentityTwoFactorResponse;\n      this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;\n      result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n      this.captchaToken = twoFactorResponse.captchaToken;\n      return result;\n    }\n\n    const tokenResponse = response as IdentityTokenResponse;\n    result.resetMasterPassword = tokenResponse.resetMasterPassword;\n    result.forcePasswordReset = tokenResponse.forcePasswordReset;\n\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            apiKeyClientId: clientId,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        keys: {\n          ...new AccountKeys(),\n          ...{\n            apiKeyClientSecret: clientSecret,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n\n    if (tokenResponse.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\n    }\n\n    if (this.setCryptoKeys) {\n      if (key != null) {\n        await this.cryptoService.setKey(key);\n      }\n      if (localHashedPassword != null) {\n        await this.cryptoService.setKeyHash(localHashedPassword);\n      }\n\n      // Skip this step during SSO new user flow. No key is returned from server.\n      if (code == null || tokenResponse.key != null) {\n        if (tokenResponse.keyConnectorUrl != null) {\n          await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n        } else if (tokenResponse.apiUseKeyConnector) {\n          const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n          await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n        }\n\n        await this.cryptoService.setEncKey(tokenResponse.key);\n\n        // User doesn't have a key pair yet (old account), let's generate one for them\n        if (tokenResponse.privateKey == null) {\n          try {\n            const keyPair = await this.cryptoService.makeKeyPair();\n            await this.apiService.postAccountKeys(\n              new KeysRequest(keyPair[0], keyPair[1].encryptedString)\n            );\n            tokenResponse.privateKey = keyPair[1].encryptedString;\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n\n        await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\n      } else if (tokenResponse.keyConnectorUrl != null) {\n        const password = await this.cryptoFunctionService.randomBytes(64);\n\n        const k = await this.cryptoService.makeKey(\n          Utils.fromBufferToB64(password),\n          await this.tokenService.getEmail(),\n          tokenResponse.kdf,\n          tokenResponse.kdfIterations\n        );\n        const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n        await this.cryptoService.setKey(k);\n\n        const encKey = await this.cryptoService.makeEncKey(k);\n        await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n        const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n        try {\n          await this.apiService.postUserKeyToKeyConnector(\n            tokenResponse.keyConnectorUrl,\n            keyConnectorRequest\n          );\n        } catch (e) {\n          throw new Error(\"Unable to reach key connector\");\n        }\n\n        const keys = new KeysRequest(pubKey, privKey.encryptedString);\n        const setPasswordRequest = new SetKeyConnectorKeyRequest(\n          encKey[1].encryptedString,\n          tokenResponse.kdf,\n          tokenResponse.kdfIterations,\n          orgId,\n          keys\n        );\n        await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n      }\n    }\n\n    if (this.vaultTimeoutService != null) {\n      await this.stateService.setBiometricLocked(false);\n    }\n    this.messagingService.send(\"loggedIn\");\n    return result;\n  }\n\n  private clearState(): void {\n    this.key = null;\n    this.email = null;\n    this.masterPasswordHash = null;\n    this.localMasterPasswordHash = null;\n    this.code = null;\n    this.codeVerifier = null;\n    this.ssoRedirectUrl = null;\n    this.clientId = null;\n    this.clientSecret = null;\n    this.twoFactorProvidersData = null;\n    this.selectedTwoFactorProviderType = null;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\n\nimport { CipherData } from \"../models/data/cipherData\";\n\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\n\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(\n    groupingId: string,\n    folder: boolean = true\n  ): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host:\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(\n    url: string,\n    autofillOnPageLoad: boolean = false\n  ): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, await this.stateService.getUserId(), collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    await this.apiService.putShareCiphers(request);\n    const userId = await this.stateService.getUserId();\n    await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = (_evt) => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData(await this.stateService.getUserId());\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === \"Array\") {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      // tslint:disable-next-line\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { CollectionData } from \"../models/data/collectionData\";\n\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\n\nimport { CollectionView } from \"../models/view/collectionView\";\n\nimport { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\n\nimport * as hrtime from \"browser-hrtime\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // tslint:disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // tslint:disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // tslint:disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // tslint:disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label: string = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label: string = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  async getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    const key =\n      keySuffix === KeySuffixOptions.Auto\n        ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n        : await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId });\n\n    return key != null;\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage: boolean = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    // tslint:disable-next-line\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKey(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy: number = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject; // tslint:disable-line\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async (_userId) => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { EventType } from \"../enums/eventType\";\n\nimport { EventData } from \"../models/data/eventData\";\n\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { CipherType } from \"../enums/cipherType\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { ExportService as ExportServiceAbstraction } from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\n\nimport { CipherWithIds as CipherExport } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId as CollectionExport } from \"../models/export/collectionWithId\";\nimport { Event } from \"../models/export/event\";\nimport { FolderWithId as FolderExport } from \"../models/export/folderWithId\";\nimport { EventView } from \"../models/view/eventView\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService\n  ) {}\n\n  async getExport(format: \"csv\" | \"json\" | \"encrypted_json\" = \"csv\"): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: \"csv\" | \"json\" | \"encrypted_json\" = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new Event(e)));\n  }\n\n  getFileName(prefix: string = null, extension: string = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter: string = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport { FileUploadType } from \"../enums/fileUploadType\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\n\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure:\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure:\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderData } from \"../models/data/folderData\";\n\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\n\nimport { FolderRequest } from \"../models/request/folderRequest\";\n\nimport { FolderResponse } from \"../models/response/folderResponse\";\n\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { CipherData } from \"../models/data/cipherData\";\n\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(): Promise<TreeNode<FolderView>[]> {\n    const folders = await this.getAllDecrypted();\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new FolderData(response, userId);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","import { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  locale: string;\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ko\", \"한국어\"],\n    [\"lv\", \"Latvietis\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: \"base\" });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) ||\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport {\n  ImportOption,\n  ImportService as ImportServiceAbstraction,\n} from \"../abstractions/import.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { CipherType } from \"../enums/cipherType\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KvpRequest } from \"../models/request/kvpRequest\";\n\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nimport { AscendoCsvImporter } from \"../importers/ascendoCsvImporter\";\nimport { AvastCsvImporter } from \"../importers/avastCsvImporter\";\nimport { AvastJsonImporter } from \"../importers/avastJsonImporter\";\nimport { AviraCsvImporter } from \"../importers/aviraCsvImporter\";\nimport { BitwardenCsvImporter } from \"../importers/bitwardenCsvImporter\";\nimport { BitwardenJsonImporter } from \"../importers/bitwardenJsonImporter\";\nimport { BlackBerryCsvImporter } from \"../importers/blackBerryCsvImporter\";\nimport { BlurCsvImporter } from \"../importers/blurCsvImporter\";\nimport { ButtercupCsvImporter } from \"../importers/buttercupCsvImporter\";\nimport { ChromeCsvImporter } from \"../importers/chromeCsvImporter\";\nimport { ClipperzHtmlImporter } from \"../importers/clipperzHtmlImporter\";\nimport { CodebookCsvImporter } from \"../importers/codebookCsvImporter\";\nimport { DashlaneJsonImporter } from \"../importers/dashlaneJsonImporter\";\nimport { EncryptrCsvImporter } from \"../importers/encryptrCsvImporter\";\nimport { EnpassCsvImporter } from \"../importers/enpassCsvImporter\";\nimport { EnpassJsonImporter } from \"../importers/enpassJsonImporter\";\nimport { FirefoxCsvImporter } from \"../importers/firefoxCsvImporter\";\nimport { FSecureFskImporter } from \"../importers/fsecureFskImporter\";\nimport { GnomeJsonImporter } from \"../importers/gnomeJsonImporter\";\nimport { Importer } from \"../importers/importer\";\nimport { KasperskyTxtImporter } from \"../importers/kasperskyTxtImporter\";\nimport { KeePass2XmlImporter } from \"../importers/keepass2XmlImporter\";\nimport { KeePassXCsvImporter } from \"../importers/keepassxCsvImporter\";\nimport { KeeperCsvImporter } from \"../importers/keeperImporters/keeperCsvImporter\";\nimport { KeeperJsonImporter } from \"../importers/keeperImporters/keeperJsonImporter\";\nimport { LastPassCsvImporter } from \"../importers/lastpassCsvImporter\";\nimport { LogMeOnceCsvImporter } from \"../importers/logMeOnceCsvImporter\";\nimport { MeldiumCsvImporter } from \"../importers/meldiumCsvImporter\";\nimport { MSecureCsvImporter } from \"../importers/msecureCsvImporter\";\nimport { MykiCsvImporter } from \"../importers/mykiCsvImporter\";\nimport { NordPassCsvImporter } from \"../importers/nordpassCsvImporter\";\nimport { OnePassword1PifImporter } from \"../importers/onepasswordImporters/onepassword1PifImporter\";\nimport { OnePasswordMacCsvImporter } from \"../importers/onepasswordImporters/onepasswordMacCsvImporter\";\nimport { OnePasswordWinCsvImporter } from \"../importers/onepasswordImporters/onepasswordWinCsvImporter\";\nimport { PadlockCsvImporter } from \"../importers/padlockCsvImporter\";\nimport { PassKeepCsvImporter } from \"../importers/passkeepCsvImporter\";\nimport { PassmanJsonImporter } from \"../importers/passmanJsonImporter\";\nimport { PasspackCsvImporter } from \"../importers/passpackCsvImporter\";\nimport { PasswordAgentCsvImporter } from \"../importers/passwordAgentCsvImporter\";\nimport { PasswordBossJsonImporter } from \"../importers/passwordBossJsonImporter\";\nimport { PasswordDragonXmlImporter } from \"../importers/passwordDragonXmlImporter\";\nimport { PasswordSafeXmlImporter } from \"../importers/passwordSafeXmlImporter\";\nimport { PasswordWalletTxtImporter } from \"../importers/passwordWalletTxtImporter\";\nimport { RememBearCsvImporter } from \"../importers/rememBearCsvImporter\";\nimport { RoboFormCsvImporter } from \"../importers/roboformCsvImporter\";\nimport { SafariCsvImporter } from \"../importers/safariCsvImporter\";\nimport { SafeInCloudXmlImporter } from \"../importers/safeInCloudXmlImporter\";\nimport { SaferPassCsvImporter } from \"../importers/saferpassCsvImport\";\nimport { SecureSafeCsvImporter } from \"../importers/secureSafeCsvImporter\";\nimport { SplashIdCsvImporter } from \"../importers/splashIdCsvImporter\";\nimport { StickyPasswordXmlImporter } from \"../importers/stickyPasswordXmlImporter\";\nimport { TrueKeyCsvImporter } from \"../importers/truekeyCsvImporter\";\nimport { UpmCsvImporter } from \"../importers/upmCsvImporter\";\nimport { YotiCsvImporter } from \"../importers/yotiCsvImporter\";\nimport { ZohoVaultCsvImporter } from \"../importers/zohoVaultCsvImporter\";\n\nexport class ImportService implements ImportServiceAbstraction {\n  featuredImportOptions = [\n    { id: \"bitwardenjson\", name: \"Bitwarden (json)\" },\n    { id: \"bitwardencsv\", name: \"Bitwarden (csv)\" },\n    { id: \"chromecsv\", name: \"Chrome (csv)\" },\n    { id: \"dashlanejson\", name: \"Dashlane (json)\" },\n    { id: \"firefoxcsv\", name: \"Firefox (csv)\" },\n    { id: \"keepass2xml\", name: \"KeePass 2 (xml)\" },\n    { id: \"lastpasscsv\", name: \"LastPass (csv)\" },\n    { id: \"safaricsv\", name: \"Safari and macOS (csv)\" },\n    { id: \"1password1pif\", name: \"1Password (1pif)\" },\n  ];\n\n  regularImportOptions: ImportOption[] = [\n    { id: \"keepassxcsv\", name: \"KeePassX (csv)\" },\n    { id: \"1passwordwincsv\", name: \"1Password 6 and 7 Windows (csv)\" },\n    { id: \"1passwordmaccsv\", name: \"1Password 6 and 7 Mac (csv)\" },\n    { id: \"roboformcsv\", name: \"RoboForm (csv)\" },\n    { id: \"keepercsv\", name: \"Keeper (csv)\" },\n    // Temporarily remove this option for the Feb release\n    // { id: \"keeperjson\", name: \"Keeper (json)\" },\n    { id: \"enpasscsv\", name: \"Enpass (csv)\" },\n    { id: \"enpassjson\", name: \"Enpass (json)\" },\n    { id: \"safeincloudxml\", name: \"SafeInCloud (xml)\" },\n    { id: \"pwsafexml\", name: \"Password Safe (xml)\" },\n    { id: \"stickypasswordxml\", name: \"Sticky Password (xml)\" },\n    { id: \"msecurecsv\", name: \"mSecure (csv)\" },\n    { id: \"truekeycsv\", name: \"True Key (csv)\" },\n    { id: \"passwordbossjson\", name: \"Password Boss (json)\" },\n    { id: \"zohovaultcsv\", name: \"Zoho Vault (csv)\" },\n    { id: \"splashidcsv\", name: \"SplashID (csv)\" },\n    { id: \"passworddragonxml\", name: \"Password Dragon (xml)\" },\n    { id: \"padlockcsv\", name: \"Padlock (csv)\" },\n    { id: \"passboltcsv\", name: \"Passbolt (csv)\" },\n    { id: \"clipperzhtml\", name: \"Clipperz (html)\" },\n    { id: \"aviracsv\", name: \"Avira (csv)\" },\n    { id: \"saferpasscsv\", name: \"SaferPass (csv)\" },\n    { id: \"upmcsv\", name: \"Universal Password Manager (csv)\" },\n    { id: \"ascendocsv\", name: \"Ascendo DataVault (csv)\" },\n    { id: \"meldiumcsv\", name: \"Meldium (csv)\" },\n    { id: \"passkeepcsv\", name: \"PassKeep (csv)\" },\n    { id: \"operacsv\", name: \"Opera (csv)\" },\n    { id: \"vivaldicsv\", name: \"Vivaldi (csv)\" },\n    { id: \"gnomejson\", name: \"GNOME Passwords and Keys/Seahorse (json)\" },\n    { id: \"blurcsv\", name: \"Blur (csv)\" },\n    { id: \"passwordagentcsv\", name: \"Password Agent (csv)\" },\n    { id: \"passpackcsv\", name: \"Passpack (csv)\" },\n    { id: \"passmanjson\", name: \"Passman (json)\" },\n    { id: \"avastcsv\", name: \"Avast Passwords (csv)\" },\n    { id: \"avastjson\", name: \"Avast Passwords (json)\" },\n    { id: \"fsecurefsk\", name: \"F-Secure KEY (fsk)\" },\n    { id: \"kasperskytxt\", name: \"Kaspersky Password Manager (txt)\" },\n    { id: \"remembearcsv\", name: \"RememBear (csv)\" },\n    { id: \"passwordwallettxt\", name: \"PasswordWallet (txt)\" },\n    { id: \"mykicsv\", name: \"Myki (csv)\" },\n    { id: \"securesafecsv\", name: \"SecureSafe (csv)\" },\n    { id: \"logmeoncecsv\", name: \"LogMeOnce (csv)\" },\n    { id: \"blackberrycsv\", name: \"BlackBerry Password Keeper (csv)\" },\n    { id: \"buttercupcsv\", name: \"Buttercup (csv)\" },\n    { id: \"codebookcsv\", name: \"Codebook (csv)\" },\n    { id: \"encryptrcsv\", name: \"Encryptr (csv)\" },\n    { id: \"yoticsv\", name: \"Yoti (csv)\" },\n    { id: \"nordpasscsv\", name: \"Nordpass (csv)\" },\n  ];\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService\n  ) {}\n\n  getImportOptions(): ImportOption[] {\n    return this.featuredImportOptions.concat(this.regularImportOptions);\n  }\n\n  async import(\n    importer: Importer,\n    fileContents: string,\n    organizationId: string = null\n  ): Promise<Error> {\n    const importResult = await importer.parse(fileContents);\n    if (importResult.success) {\n      if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n        return new Error(this.i18nService.t(\"importNothingError\"));\n      } else if (importResult.ciphers.length > 0) {\n        const halfway = Math.floor(importResult.ciphers.length / 2);\n        const last = importResult.ciphers.length - 1;\n\n        if (\n          this.badData(importResult.ciphers[0]) &&\n          this.badData(importResult.ciphers[halfway]) &&\n          this.badData(importResult.ciphers[last])\n        ) {\n          return new Error(this.i18nService.t(\"importFormatError\"));\n        }\n      }\n      try {\n        await this.postImport(importResult, organizationId);\n      } catch (error) {\n        const errorResponse = new ErrorResponse(error, 400);\n        return this.handleServerError(errorResponse, importResult);\n      }\n      return null;\n    } else {\n      if (!Utils.isNullOrWhitespace(importResult.errorMessage)) {\n        return new Error(importResult.errorMessage);\n      } else {\n        return new Error(this.i18nService.t(\"importFormatError\"));\n      }\n    }\n  }\n\n  getImporter(format: string, organizationId: string = null): Importer {\n    const importer = this.getImporterInstance(format);\n    if (importer == null) {\n      return null;\n    }\n    importer.organizationId = organizationId;\n    return importer;\n  }\n\n  private getImporterInstance(format: string) {\n    if (format == null || format === \"\") {\n      return null;\n    }\n\n    switch (format) {\n      case \"bitwardencsv\":\n        return new BitwardenCsvImporter();\n      case \"bitwardenjson\":\n        return new BitwardenJsonImporter(this.cryptoService, this.i18nService);\n      case \"lastpasscsv\":\n      case \"passboltcsv\":\n        return new LastPassCsvImporter();\n      case \"keepassxcsv\":\n        return new KeePassXCsvImporter();\n      case \"aviracsv\":\n        return new AviraCsvImporter();\n      case \"blurcsv\":\n        return new BlurCsvImporter();\n      case \"safeincloudxml\":\n        return new SafeInCloudXmlImporter();\n      case \"padlockcsv\":\n        return new PadlockCsvImporter();\n      case \"keepass2xml\":\n        return new KeePass2XmlImporter();\n      case \"chromecsv\":\n      case \"operacsv\":\n      case \"vivaldicsv\":\n        return new ChromeCsvImporter();\n      case \"firefoxcsv\":\n        return new FirefoxCsvImporter();\n      case \"upmcsv\":\n        return new UpmCsvImporter();\n      case \"saferpasscsv\":\n        return new SaferPassCsvImporter();\n      case \"safaricsv\":\n        return new SafariCsvImporter();\n      case \"meldiumcsv\":\n        return new MeldiumCsvImporter();\n      case \"1password1pif\":\n        return new OnePassword1PifImporter();\n      case \"1passwordwincsv\":\n        return new OnePasswordWinCsvImporter();\n      case \"1passwordmaccsv\":\n        return new OnePasswordMacCsvImporter();\n      case \"keepercsv\":\n        return new KeeperCsvImporter();\n      case \"keeperjson\":\n        return new KeeperJsonImporter();\n      case \"passworddragonxml\":\n        return new PasswordDragonXmlImporter();\n      case \"enpasscsv\":\n        return new EnpassCsvImporter();\n      case \"enpassjson\":\n        return new EnpassJsonImporter();\n      case \"pwsafexml\":\n        return new PasswordSafeXmlImporter();\n      case \"dashlanejson\":\n        return new DashlaneJsonImporter();\n      case \"msecurecsv\":\n        return new MSecureCsvImporter();\n      case \"stickypasswordxml\":\n        return new StickyPasswordXmlImporter();\n      case \"truekeycsv\":\n        return new TrueKeyCsvImporter();\n      case \"clipperzhtml\":\n        return new ClipperzHtmlImporter();\n      case \"roboformcsv\":\n        return new RoboFormCsvImporter();\n      case \"ascendocsv\":\n        return new AscendoCsvImporter();\n      case \"passwordbossjson\":\n        return new PasswordBossJsonImporter();\n      case \"zohovaultcsv\":\n        return new ZohoVaultCsvImporter();\n      case \"splashidcsv\":\n        return new SplashIdCsvImporter();\n      case \"passkeepcsv\":\n        return new PassKeepCsvImporter();\n      case \"gnomejson\":\n        return new GnomeJsonImporter();\n      case \"passwordagentcsv\":\n        return new PasswordAgentCsvImporter();\n      case \"passpackcsv\":\n        return new PasspackCsvImporter();\n      case \"passmanjson\":\n        return new PassmanJsonImporter();\n      case \"avastcsv\":\n        return new AvastCsvImporter();\n      case \"avastjson\":\n        return new AvastJsonImporter();\n      case \"fsecurefsk\":\n        return new FSecureFskImporter();\n      case \"kasperskytxt\":\n        return new KasperskyTxtImporter();\n      case \"remembearcsv\":\n        return new RememBearCsvImporter();\n      case \"passwordwallettxt\":\n        return new PasswordWalletTxtImporter();\n      case \"mykicsv\":\n        return new MykiCsvImporter();\n      case \"securesafecsv\":\n        return new SecureSafeCsvImporter();\n      case \"logmeoncecsv\":\n        return new LogMeOnceCsvImporter();\n      case \"blackberrycsv\":\n        return new BlackBerryCsvImporter();\n      case \"buttercupcsv\":\n        return new ButtercupCsvImporter();\n      case \"codebookcsv\":\n        return new CodebookCsvImporter();\n      case \"encryptrcsv\":\n        return new EncryptrCsvImporter();\n      case \"yoticsv\":\n        return new YotiCsvImporter();\n      case \"nordpasscsv\":\n        return new NordPassCsvImporter();\n      default:\n        return null;\n    }\n  }\n\n  private async postImport(importResult: ImportResult, organizationId: string = null) {\n    if (organizationId == null) {\n      const request = new ImportCiphersRequest();\n      for (let i = 0; i < importResult.ciphers.length; i++) {\n        const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n        request.ciphers.push(new CipherRequest(c));\n      }\n      if (importResult.folders != null) {\n        for (let i = 0; i < importResult.folders.length; i++) {\n          const f = await this.folderService.encrypt(importResult.folders[i]);\n          request.folders.push(new FolderRequest(f));\n        }\n      }\n      if (importResult.folderRelationships != null) {\n        importResult.folderRelationships.forEach((r) =>\n          request.folderRelationships.push(new KvpRequest(r[0], r[1]))\n        );\n      }\n      return await this.apiService.postImportCiphers(request);\n    } else {\n      const request = new ImportOrganizationCiphersRequest();\n      for (let i = 0; i < importResult.ciphers.length; i++) {\n        importResult.ciphers[i].organizationId = organizationId;\n        const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n        request.ciphers.push(new CipherRequest(c));\n      }\n      if (importResult.collections != null) {\n        for (let i = 0; i < importResult.collections.length; i++) {\n          importResult.collections[i].organizationId = organizationId;\n          const c = await this.collectionService.encrypt(importResult.collections[i]);\n          request.collections.push(new CollectionRequest(c));\n        }\n      }\n      if (importResult.collectionRelationships != null) {\n        importResult.collectionRelationships.forEach((r) =>\n          request.collectionRelationships.push(new KvpRequest(r[0], r[1]))\n        );\n      }\n      return await this.apiService.postImportOrganizationCiphers(organizationId, request);\n    }\n  }\n\n  private badData(c: CipherView) {\n    return (\n      (c.name == null || c.name === \"--\") &&\n      c.type === CipherType.Login &&\n      c.login != null &&\n      Utils.isNullOrWhitespace(c.login.password)\n    );\n  }\n\n  private handleServerError(errorResponse: ErrorResponse, importResult: ImportResult): Error {\n    if (errorResponse.validationErrors == null) {\n      return new Error(errorResponse.message);\n    }\n\n    let errorMessage = \"\";\n\n    Object.entries(errorResponse.validationErrors).forEach(([key, value], index) => {\n      let item;\n      let itemType;\n      const i = Number(key.match(/[0-9]+/)[0]);\n\n      switch (key.match(/^\\w+/)[0]) {\n        case \"Ciphers\":\n          item = importResult.ciphers[i];\n          itemType = CipherType[item.type];\n          break;\n        case \"Folders\":\n          item = importResult.folders[i];\n          itemType = \"Folder\";\n          break;\n        case \"Collections\":\n          item = importResult.collections[i];\n          itemType = \"Collection\";\n          break;\n        default:\n          return;\n      }\n\n      if (index > 0) {\n        errorMessage += \"\\n\\n\";\n      }\n\n      if (itemType !== \"Folder\" && itemType !== \"Collection\") {\n        errorMessage += \"[\" + (i + 1) + \"] \";\n      }\n\n      errorMessage += \"[\" + itemType + '] \"' + item.name + '\": ' + value;\n    });\n\n    return new Error(errorMessage);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\n\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.logService.error(e);\n      throw new Error(\"Unable to reach key connector\");\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { NotificationType } from \"../enums/notificationType\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\n\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: () => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback();\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    if (await this.stateService.getIsAuthenticated()) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      return !locked;\n    }\n    return false;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { OrganizationData } from \"../models/data/organizationData\";\n\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nimport { PolicyType } from \"../enums/policyType\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { PolicyData } from \"../models/data/policyData\";\n\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\n\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { ProviderData } from \"../models/data/providerData\";\n\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherView } from \"../models/view/cipherView\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\n\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", { boost: 10 });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = query.trim().toLowerCase();\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      // tslint:disable-next-line\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted: boolean = false) {\n    query = query.trim().toLowerCase();\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = query.trim().toLocaleLowerCase();\n\n    return sends.filter((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        return true;\n      }\n      if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n    });\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\n\nimport { SendRequest } from \"../models/request/sendRequest\";\n\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { SendType } from \"../enums/sendType\";\n\nimport { SendView } from \"../models/view/sendView\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        100000\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","import { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\n\nimport { Account, AccountData } from \"../models/domain/account\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\n\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\n\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { WindowState } from \"../models/domain/windowState\";\n\nimport { StateFactory } from \"../factories/stateFactory\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited: boolean = false;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.tokens.accessToken = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? true\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? false\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    if (account.profile.hasPremiumPersonally) {\n      return true;\n    }\n\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<Set<string>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: Set<string>, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collapsedGroupings = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.secureStorageService.save(`${options.userId}${partialKeys.autoKey}`, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.secureStorageService.save(\n      `${options.userId}${partialKeys.masterKey}`,\n      value,\n      options\n    );\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.secureStorageService.save(\n      `${options.userId}${partialKeys.biometricKey}`,\n      value,\n      options\n    );\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.localData;\n  }\n\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.localData = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLoginRedirect(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.loginRedirect;\n  }\n\n  async setLoginRedirect(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.loginRedirect = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.providers = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.tokens.refreshToken = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    await this.scaffoldNewAccountLocalStorage(account);\n    await this.scaffoldNewAccountSessionStorage(account);\n    await this.scaffoldNewAccountMemoryStorage(account);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.storageService.get<TAccount>(\n      account.profile.userId,\n      await this.defaultOnDiskLocalOptions()\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskLocalOptions()\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.storageService.get<TAccount>(\n      account.profile.userId,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.storageService.get<TAccount>(\n      account.profile.userId,\n      await this.defaultOnDiskOptions()\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskOptions()\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.storageService.get<TAccount>(userId, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    await this.storageService.save(\n      userId,\n      this.resetAccount(storedAccount),\n      await this.defaultOnDiskLocalOptions()\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.storageService.get<TAccount>(userId, {\n      htmlStorageLocation: HtmlStorageLocation.Session,\n    });\n    await this.storageService.save(\n      userId,\n      this.resetAccount(storedAccount),\n      await this.defaultOnDiskOptions()\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        delete this.state.accounts[userId];\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    const index = this.state.authenticatedAccounts.indexOf(userId);\n    if (index > -1) {\n      this.state.authenticatedAccounts.splice(index, 1);\n      await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    }\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\n\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nimport { GlobalStateFactory } from \"../factories/globalStateFactory\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys + userId),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys + userId),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\n\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\n\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress: boolean = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    const userId = await this.stateService.getUserId();\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(userId, response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(userId, response.ciphers);\n      await this.syncSends(userId, response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            const userId = await this.stateService.getUserId();\n            await this.folderService.upsert(new FolderData(remoteFolder, userId));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            const userId = await this.stateService.getUserId();\n            await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            const userId = await this.stateService.getUserId();\n            await this.sendService.upsert(new SendData(remoteSend, userId));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await Promise.all([\n      this.organizationService.save(organizations),\n      this.providerService.save(providers),\n    ]);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(userId: string, response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f, userId);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(userId: string, response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c, userId);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(userId: string, response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s, userId);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    if ((await this.skipTokenStorage()) || clientId == null) {\n      return;\n    }\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    if ((await this.skipTokenStorage()) || clientSecret == null) {\n      return;\n    }\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    if (await this.skipTokenStorage()) {\n      return;\n    }\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async toggleTokens(): Promise<any> {\n    const token = await this.getToken();\n    const refreshToken = await this.getRefreshToken();\n    const clientId = await this.getClientId();\n    const clientSecret = await this.getClientSecret();\n    const timeout = await this.stateService.getVaultTimeout();\n    const action = await this.stateService.getVaultTimeoutAction();\n\n    if ((timeout != null || timeout === 0) && action === \"logOut\") {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.clearToken();\n    }\n\n    await this.setToken(token);\n    await this.setRefreshToken(refreshToken);\n    await this.setClientId(clientId);\n    await this.setClientSecret(clientSecret);\n  }\n\n  async setTwoFactorToken(token: string): Promise<any> {\n    return await this.stateService.setTwoFactorToken(token);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds: number = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes: number = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getPremium(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.premium === \"undefined\") {\n      return false;\n    }\n\n    return decoded.premium as boolean;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n\n  private async skipTokenStorage(): Promise<boolean> {\n    const timeout = await this.stateService.getVaultTimeout();\n    const action = await this.stateService.getVaultTimeoutAction();\n    return timeout != null && action === \"logOut\";\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    /* tslint:disable */\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n    /* tslint:enable */\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      // tslint:disable-next-line\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nimport { VerificationType } from \"../enums/verificationType\";\n\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\n\nimport { Verification } from \"../types/verification\";\n\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\n\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private lockedCallback: () => Promise<void> = null,\n    private loggedOutCallback: (userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  // Keys aren't stored for a device that is locked or logged out.\n  async isLocked(userId?: string): Promise<boolean> {\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    return !(await this.cryptoService.hasKeyInMemory(userId));\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut();\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback();\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n    await this.stateService.setVaultTimeoutAction(action);\n    await this.cryptoService.toggleKey();\n    await this.tokenService.toggleTokens();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async isLoggedOut(userId?: string): Promise<boolean> {\n    return !(await this.stateService.getIsAuthenticated({ userId: userId }));\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    if (await this.isLoggedOut(userId)) {\n      return false;\n    }\n\n    if (await this.isLocked(userId)) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut() : await this.lock(true, userId);\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nimport { Utils } from \"../misc/utils\";\n\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n  private isIE: boolean;\n  private isOldSafari: boolean;\n\n  constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n    this.isIE = platformUtilsService.isIE();\n    const ua = win.navigator.userAgent;\n    this.isOldSafari =\n      platformUtilsService.isSafari() &&\n      (ua.indexOf(\" Version/10.\") > -1 || ua.indexOf(\" Version/9.\") > -1);\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    if (this.isIE || this.isOldSafari) {\n      const forgeLen = algorithm === \"sha256\" ? 32 : 64;\n      const passwordBytes = this.toByteString(password);\n      const saltBytes = this.toByteString(salt);\n      const derivedKeyBytes = (forge as any).pbkdf2(\n        passwordBytes,\n        saltBytes,\n        iterations,\n        forgeLen,\n        algorithm\n      );\n      return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n    }\n\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if ((this.isIE && algorithm === \"sha1\") || algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    if (this.isIE && algorithm === \"sha512\") {\n      const hmac = (forge as any).hmac.create();\n      const keyBytes = this.toByteString(key);\n      const valueBytes = this.toByteString(value);\n      hmac.start(algorithm, keyBytes);\n      hmac.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n    }\n\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = (forge as any).hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = (forge as any).hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n    const decipher = (forge as any).cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString(\"utf8\");\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { StateService as BaseStateService } from \"jslib-common/abstractions/state.service\";\n\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\n\nexport abstract class StateService extends BaseStateService<Account> {\n  getRememberEmail: (options?: StorageOptions) => Promise<boolean>;\n  setRememberEmail: (value: boolean, options?: StorageOptions) => Promise<void>;\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"jslib-common/models/request/emergencyAccessAcceptRequest\";\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: any): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: any): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a routerLink=\"/\" [queryParams]=\"{ email: email }\" class=\"btn btn-primary btn-block\">\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { OrganizationUserAcceptRequest } from \"jslib-common/models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private logService: LogService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: any): Promise<void> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      this.actionPromise = this.apiService\n        .postOrganizationUserAccept(qParams.organizationId, qParams.organizationUserId, request)\n        .then(() => {\n          // Retrieve Public Key\n          return this.apiService.getOrganizationKeys(qParams.organizationId);\n        })\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n          }\n\n          const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n          // RSA Encrypt user's encKey.key with organization public key\n          const encKey = await this.cryptoService.getEncKey();\n          const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n          // Create request and execute enrollment\n          const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n          resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n          return this.apiService.putOrganizationUserResetPasswordEnrollment(\n            qParams.organizationId,\n            await this.stateService.getUserId(),\n            resetRequest\n          );\n        });\n    } else {\n      this.actionPromise = this.apiService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    }\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: any): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: any): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.apiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a routerLink=\"/\" [queryParams]=\"{ email: email }\" class=\"btn btn-primary btn-block\">\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { HintComponent as BaseHintComponent } from \"jslib-angular/components/hint.component\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { RouterService } from \"../services/router.service\";\n\nimport { LockComponent as BaseLockComponent } from \"jslib-angular/components/lock.component\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigate([this.successRoute]);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\n\nimport { StateService } from \"../../abstractions/state.service\";\n\nimport { LoginComponent as BaseLoginComponent } from \"jslib-angular/components/login.component\";\n\nimport { PolicyData } from \"jslib-common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private policyService: PolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.stateService.setLoginRedirect({ route: \"/settings/premium\" });\n      } else if (qParams.org != null) {\n        this.stateService.setLoginRedirect({\n          route: \"/settings/create-organization\",\n          qParams: { plan: qParams.org },\n        });\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        this.stateService.setLoginRedirect({\n          route: \"/setup/families-for-enterprise\",\n          qParams: { token: qParams.sponsorshipToken },\n        });\n      }\n      await super.ngOnInit();\n      this.rememberEmail = await this.stateService.getRememberEmail();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.apiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.enforcedPasswordPolicyOptions =\n          await this.policyService.getMasterPasswordPolicyOptions(policyList);\n      }\n    }\n  }\n\n  async goAfterLogIn() {\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          this.masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const loginRedirect = await this.stateService.getLoginRedirect();\n    if (loginRedirect != null) {\n      this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n      await this.stateService.setLoginRedirect(null);\n    } else {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  async submit() {\n    await this.stateService.setRememberEmail(this.rememberEmail);\n    if (!this.rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit();\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"mb-2 logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"showResetPasswordAutoEnrollWarning\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"form-text\">\n              <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n            </small>\n          </div>\n          <div class=\"form-check mb-3\">\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              id=\"rememberEmail\"\n              name=\"RememberEmail\"\n              [(ngModel)]=\"rememberEmail\"\n            />\n            <label class=\"form-check-label\" for=\"rememberEmail\">{{ \"rememberEmail\" | i18n }}</label>\n          </div>\n          <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n            >\n              <i class=\"bwi bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n          <div class=\"d-flex\">\n            <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\">\n              <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { DeleteRecoverRequest } from \"jslib-common/models/request/deleteRecoverRequest\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { TwoFactorRecoveryRequest } from \"jslib-common/models/request/twoFactorRecoveryRequest\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"jslib-angular/components/register.component\";\n\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\n\nimport { PolicyData } from \"jslib-common/models/data/policyData\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  showCreateOrgMessage = false;\n  layout = \"\";\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  private policies: Policy[];\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.stateService.setLoginRedirect({ route: \"/settings/premium\" });\n      } else if (qParams.org != null) {\n        this.showCreateOrgMessage = true;\n        this.referenceData.flow = qParams.org;\n        this.stateService.setLoginRedirect({\n          route: \"/settings/create-organization\",\n          qParams: { plan: qParams.org },\n        });\n      }\n      if (qParams.layout != null) {\n        this.layout = this.referenceData.layout = qParams.layout;\n      }\n      if (qParams.reference != null) {\n        this.referenceData.id = qParams.reference;\n      } else {\n        this.referenceData.id = (\"; \" + document.cookie)\n          .split(\"; reference=\")\n          .pop()\n          .split(\";\")\n          .shift();\n      }\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        this.stateService.setLoginRedirect({\n          route: \"/setup/families-for-enterprise\",\n          qParams: { token: qParams.sponsorshipToken },\n        });\n      }\n      if (this.referenceData.id === \"\") {\n        this.referenceData.id = null;\n      }\n    });\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.apiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n\n    await super.ngOnInit();\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.masterPasswordScore,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit();\n  }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n  <!-- TEAMS 1 Header -->\n  <header\n    class=\"header\"\n    *ngIf=\"\n      layout === 'default' ||\n      layout === 'teams' ||\n      layout === 'teams1' ||\n      layout === 'teams2' ||\n      layout === 'enterprise' ||\n      layout === 'enterprise1' ||\n      layout === 'enterprise2' ||\n      layout === 'cnetcmpgnent' ||\n      layout === 'cnetcmpgnteams' ||\n      layout === 'cnetcmpgnind'\n    \"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-7\">\n          <img\n            alt=\"Bitwarden\"\n            class=\"logo mb-2\"\n            src=\"../../images/register-layout/logo-horizontal-white.svg\"\n          />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row\">\n      <div class=\"col-7\" *ngIf=\"layout\">\n        <div class=\"mt-5\">\n          <!-- Default Body -->\n          <div\n            *ngIf=\"\n              layout === 'teams' ||\n              layout === 'enterprise' ||\n              layout === 'enterprise1' ||\n              layout === 'default'\n            \"\n          >\n            <h1>The Bitwarden Password Manager</h1>\n            <h2>\n              Trusted by millions of individuals, teams, and organizations worldwide for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Collaborate and share securely</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'teams1' || layout === 'teams2' || layout === 'enterprise2'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'teams1' || layout === 'teams1'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'enterprise2'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnent'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'cnetcmpgnteams'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'cnetcmpgnent'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Premium Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnind'\">\n            <h1>Start Your Premium Account Now</h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Secure your account with advanced two-step login</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'col-5': layout, 'col-12': !layout }\">\n        <div class=\"row justify-content-md-center mt-5\">\n          <div [ngClass]=\"{ 'col-5': !layout, 'col-12': layout }\">\n            <p class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</p>\n            <div class=\"card d-block\">\n              <div class=\"card-body\">\n                <app-callout\n                  title=\"{{ 'createOrganizationStep1' | i18n }}\"\n                  type=\"info\"\n                  icon=\"bwi bwi-thumb-tack\"\n                  *ngIf=\"showCreateOrgMessage\"\n                >\n                  {{ \"createOrganizationCreatePersonalAccount\" | i18n }}\n                </app-callout>\n                <div class=\"form-group\">\n                  <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n                  <input\n                    id=\"email\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    name=\"Email\"\n                    [(ngModel)]=\"email\"\n                    required\n                    [appAutofocus]=\"email === ''\"\n                    inputmode=\"email\"\n                    appInputVerbatim=\"false\"\n                  />\n                  <small class=\"form-text text-muted\">{{ \"emailAddressDesc\" | i18n }}</small>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"name\">{{ \"yourName\" | i18n }}</label>\n                  <input\n                    id=\"name\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    name=\"Name\"\n                    [(ngModel)]=\"name\"\n                    [appAutofocus]=\"email !== ''\"\n                  />\n                  <small class=\"form-text text-muted\">{{ \"yourNameDesc\" | i18n }}</small>\n                </div>\n                <div class=\"form-group\">\n                  <app-callout\n                    type=\"info\"\n                    [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n                    *ngIf=\"enforcedPolicyOptions\"\n                  >\n                  </app-callout>\n                  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                  <div class=\"d-flex\">\n                    <div class=\"w-100\">\n                      <input\n                        id=\"masterPassword\"\n                        type=\"{{ showPassword ? 'text' : 'password' }}\"\n                        name=\"MasterPassword\"\n                        class=\"text-monospace form-control mb-1\"\n                        [(ngModel)]=\"masterPassword\"\n                        (input)=\"updatePasswordStrength()\"\n                        required\n                        appInputVerbatim\n                      />\n                      <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                      </app-password-strength>\n                    </div>\n                    <div>\n                      <button\n                        type=\"button\"\n                        class=\"ml-1 btn btn-link\"\n                        appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                        (click)=\"togglePassword(false)\"\n                      >\n                        <i\n                          class=\"bwi bwi-lg\"\n                          aria-hidden=\"true\"\n                          [ngClass]=\"{\n                            'bwi-eye': !showPassword,\n                            'bwi-eye-slash': showPassword\n                          }\"\n                        ></i>\n                      </button>\n                      <div class=\"progress-bar invisible\"></div>\n                    </div>\n                  </div>\n                  <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                  <div class=\"d-flex\">\n                    <input\n                      id=\"masterPasswordRetype\"\n                      type=\"{{ showPassword ? 'text' : 'password' }}\"\n                      name=\"MasterPasswordRetype\"\n                      class=\"text-monospace form-control\"\n                      [(ngModel)]=\"confirmMasterPassword\"\n                      required\n                      appInputVerbatim\n                    />\n                    <button\n                      type=\"button\"\n                      class=\"ml-1 btn btn-link\"\n                      appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                      (click)=\"togglePassword(true)\"\n                    >\n                      <i\n                        class=\"bwi bwi-lg\"\n                        aria-hidden=\"true\"\n                        [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                      ></i>\n                    </button>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n                  <input\n                    id=\"hint\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    name=\"Hint\"\n                    [(ngModel)]=\"hint\"\n                  />\n                  <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n                </div>\n                <div [hidden]=\"!showCaptcha()\">\n                  <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n                </div>\n                <div class=\"form-group\" *ngIf=\"showTerms\">\n                  <div class=\"form-check\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      id=\"acceptPolicies\"\n                      [(ngModel)]=\"acceptPolicies\"\n                      name=\"AcceptPolicies\"\n                    />\n                    <label class=\"form-check-label small text-muted\" for=\"acceptPolicies\">\n                      {{ \"acceptPolicies\" | i18n }}<br />\n                      <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n                        \"termsOfService\" | i18n\n                      }}</a\n                      >,\n                      <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n                        \"privacyPolicy\" | i18n\n                      }}</a>\n                    </label>\n                  </div>\n                </div>\n                <hr />\n                <div class=\"d-flex mb-2\">\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary btn-block btn-submit\"\n                    [disabled]=\"form.loading\"\n                  >\n                    <span>{{ \"submit\" | i18n }}</span>\n                    <i\n                      class=\"bwi bwi-spinner bwi-spin\"\n                      title=\"{{ 'loading' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                  </button>\n                  <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                    {{ \"cancel\" | i18n }}\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-7 d-flex align-items-center\">\n        <div\n          *ngIf=\"\n            layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/cnet-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"cnet logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              \"No more excuses; start using Bitwarden today. The identity you save could be your\n              own. The money definitely will be.\"\n            </blockquote>\n          </figure>\n        </div>\n\n        <div\n          *ngIf=\"\n            layout === 'teams' ||\n            layout === 'teams1' ||\n            layout === 'teams2' ||\n            layout === 'enterprise' ||\n            layout === 'enterprise1' ||\n            layout === 'enterprise2' ||\n            layout === 'default'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/forbes-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"Forbes Logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              “Bitwarden boasts the backing of some of the world's best security experts and an\n              attractive, easy-to-use interface”\n            </blockquote>\n          </figure>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'teams' ||\n          layout === 'teams1' ||\n          layout === 'teams2' ||\n          layout === 'enterprise' ||\n          layout === 'enterprise1' ||\n          layout === 'enterprise2' ||\n          layout === 'default'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"jslib-angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"jslib-angular/components/set-password.component\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  (input)=\"updatePasswordStrength()\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { SsoComponent as BaseSsoComponent } from \"jslib-angular/components/sso.component\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"organizationIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"jslib-angular/components/two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(authService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"jslib-angular/components/two-factor.component\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    const loginRedirect = await this.stateService.getLoginRedirect();\n    if (loginRedirect != null) {\n      this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n      await this.stateService.setLoginRedirect(null);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"jslib-angular/components/update-password.component\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    (input)=\"updatePasswordStrength()\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [score]=\"masterPasswordScore\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"jslib-angular/components/update-temp-password.component\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  (input)=\"updatePasswordStrength()\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { VerifyEmailRequest } from \"jslib-common/models/request/verifyEmailRequest\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { VerifyDeleteRecoverRequest } from \"jslib-common/models/request/verifyDeleteRecoverRequest\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SettingsService } from \"jslib-common/abstractions/settings.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { StorageService } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { PolicyListService } from \"./services/policy-list.service\";\nimport { RouterService } from \"./services/router.service\";\n\nimport { DisableSendPolicy } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicy } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicy } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicy } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicy } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicy } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicy } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicy } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicy } from \"./organizations/policies/two-factor-authentication.component\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n\n  constructor(\n    private broadcasterService: BroadcasterService,\n    private tokenService: TokenService,\n    private folderService: FolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventService: EventService,\n    private policyService: PolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n          case \"loggedOut\":\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            window.setTimeout(() => this.routerService.setPreviousUrl(message.url), 500);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\":\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          case \"premiumRequired\":\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/premium\"]);\n            }\n            break;\n          case \"emailVerificationRequired\":\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n      new ResetPasswordPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.eventService.clearEvents(),\n      this.syncService.setLastSync(new Date(0)),\n      this.tokenService.clearToken(),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: any): Promise<void>;\n  abstract unauthedHandler(qParams: any): Promise<void>;\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      await this.stateService.setLoginRedirect(null);\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          await this.stateService.setLoginRedirect({\n            route: this.getRedirectRoute(),\n            qParams: qParams,\n          });\n\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n\n  getRedirectRoute() {\n    const urlTree = this.router.parseUrl(this.router.url);\n    urlTree.queryParams = {};\n    return urlTree.toString();\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { EventView } from \"jslib-common/models/view/eventView\";\n\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\n\nimport { EventService } from \"src/app/services/event.service\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates: boolean = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.i18nService.t(\"unknown\"),\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.platformUtilsService.saveFile(window, data, { type: \"text/plain\" }, fileName);\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\n\nimport { SearchPipe } from \"jslib-angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\n\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"jslib-common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"jslib-common/enums/providerUserType\";\n\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"jslib-common/models/response/organizationUserResponse\";\nimport { ProviderUserUserDetailsResponse } from \"jslib-common/models/response/provider/providerUserResponse\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.allUsers != null ? this.allUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.allUsers != null &&\n      this.statusMap != null &&\n      this.allUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<any>;\n\n  protected allUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<any>;\n  abstract reinviteUser(id: string): Promise<any>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<any>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.allUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.deleteWarningMessage(user),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected deleteWarningMessage(user: UserType): string {\n    return this.i18nService.t(\"removeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"jslib-angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h2>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() score?: number;\n  @Input() showText = false;\n\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnChanges(): void {\n    this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\n    switch (this.score) {\n      case 4:\n        this.color = \"bg-success\";\n        this.text = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        this.color = \"bg-primary\";\n        this.text = this.i18nService.t(\"good\");\n        break;\n      case 2:\n        this.color = \"bg-warning\";\n        this.text = this.i18nService.t(\"weak\");\n        break;\n      default:\n        this.color = \"bg-danger\";\n        this.text = this.score != null ? this.i18nService.t(\"weak\") : null;\n        break;\n    }\n  }\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year: string = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }}, Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year: string = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }}, Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\n\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure provides are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"myVault\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/settings\">{{ \"settings\" | i18n }}</a>\n        </li>\n      </ul>\n    </div>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li class=\"nav-item dropdown\">\n        <a\n          class=\"nav-item nav-link dropdown-toggle\"\n          href=\"#\"\n          id=\"nav-profile\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </a>\n        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"nav-profile\">\n          <div class=\"dropdown-item-text d-flex align-items-center\" *ngIf=\"name\" appStopProp>\n            <app-avatar\n              [data]=\"name\"\n              [email]=\"email\"\n              size=\"25\"\n              fontSize=\"14\"\n              [circle]=\"true\"\n            ></app-avatar>\n            <div class=\"ml-2 overflow-hidden\">\n              <span>{{ \"loggedInAs\" | i18n }}</span>\n              <small class=\"text-muted\">{{ name }}</small>\n            </div>\n          </div>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/settings/account\">\n            <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a class=\"dropdown-item\" href=\"https://help.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n            <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n            {{ \"getHelp\" | i18n }}\n          </a>\n          <a\n            class=\"dropdown-item\"\n            href=\"https://bitwarden.com/download/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n            {{ \"getApps\" | i18n }}\n          </a>\n          <div class=\"dropdown-divider\"></div>\n          <button type=\"button\" class=\"dropdown-item\" (click)=\"lock()\">\n            <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n            {{ \"lockNow\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\">\n            <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n            {{ \"logOut\" | i18n }}\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nconst BroadcasterSubscriptionId = \"OrganizationLayoutComponent\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization: Organization;\n  businessTokenPromise: Promise<any>;\n  private organizationId: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"updatedOrgLicense\":\n            await this.load();\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showToolsTab || this.organization.isOwner;\n  }\n\n  get showManageTab(): boolean {\n    return (\n      this.organization.canManageUsers ||\n      this.organization.canViewAllCollections ||\n      this.organization.canViewAssignedCollections ||\n      this.organization.canManageGroups ||\n      this.organization.canManagePolicies ||\n      this.organization.canAccessEventLogs\n    );\n  }\n\n  get showToolsTab(): boolean {\n    return this.organization.canAccessImportExport || this.organization.canAccessReports;\n  }\n\n  get toolsRoute(): string {\n    return this.organization.canAccessImportExport\n      ? \"tools/import\"\n      : \"tools/exposed-passwords-report\";\n  }\n\n  get manageRoute(): string {\n    let route: string;\n    switch (true) {\n      case this.organization.canManageUsers:\n        route = \"manage/people\";\n        break;\n      case this.organization.canViewAssignedCollections || this.organization.canViewAllCollections:\n        route = \"manage/collections\";\n        break;\n      case this.organization.canManageGroups:\n        route = \"manage/groups\";\n        break;\n      case this.organization.canManagePolicies:\n        route = \"manage/policies\";\n        break;\n      case this.organization.canAccessEventLogs:\n        route = \"manage/events\";\n        break;\n    }\n    return route;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"organization.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ organization.name }}</span>\n          <small class=\"text-muted\">{{ \"organization\" | i18n }}</small>\n        </div>\n        <div\n          class=\"ml-3 card border-danger text-danger bg-transparent\"\n          *ngIf=\"!organization.enabled\"\n        >\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"organizationIsDisabled\" | i18n }}\n          </div>\n        </div>\n        <div\n          class=\"ml-3 card border-info text-info bg-transparent\"\n          *ngIf=\"organization.isProviderUser\"\n        >\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"accessingUsingProvider\" | i18n: organization.providerName }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-lock\" aria-hidden=\"true\"></i>\n            {{ \"vault\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showToolsTab\">\n          <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-wrench\" aria-hidden=\"true\"></i>\n            {{ \"tools\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"organization.isOwner\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { OrganizationUserBulkConfirmRequest } from \"jslib-common/models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"jslib-common/models/request/organizationUserBulkRequest\";\n\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading: boolean = true;\n  done: boolean = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new OrganizationUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"jslib-common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading: boolean = false;\n  done: boolean = false;\n  error: string;\n\n  constructor(protected apiService: ApiService, protected i18nService: I18nService) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <app-avatar\n                [data]=\"item.user | userName\"\n                [email]=\"item.user.email\"\n                size=\"25\"\n                [circle]=\"true\"\n                [fontSize]=\"14\"\n              ></app-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"jslib-common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading: boolean = false;\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { CollectionRequest } from \"jslib-common/models/request/collectionRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { GroupResponse } from \"jslib-common/models/response/groupResponse\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode: boolean = false;\n  accessGroups: boolean = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"jslib-common/models/response/collectionResponse\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate: boolean = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\n\nimport { EventService } from \"../../services/event.service\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.apiService.getOrganizationUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && refreshBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && refreshBtn.loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && moreBtn.loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\n\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { OrganizationUserUserDetailsResponse } from \"jslib-common/models/response/organizationUserResponse\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  async loadUsers() {\n    const users = await this.apiService.getOrganizationUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div\n        class=\"modal-body\"\n        *ngIf=\"\n          !loading && users && (users | search: searchText:'name':'email':'id') as searchedUsers\n        \"\n      >\n        <div class=\"d-flex\">\n          <div class=\"mr-3\">\n            <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n            <input\n              type=\"search\"\n              class=\"form-control form-control-sm\"\n              id=\"search\"\n              placeholder=\"{{ 'search' | i18n }}\"\n              name=\"SearchText\"\n              [(ngModel)]=\"searchText\"\n            />\n          </div>\n          <div class=\"btn-group btn-group-sm\" role=\"group\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              [ngClass]=\"{ active: !showSelected }\"\n              (click)=\"filterSelected(false)\"\n            >\n              {{ \"all\" | i18n }}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              [ngClass]=\"{ active: showSelected }\"\n              (click)=\"filterSelected(true)\"\n            >\n              {{ \"selected\" | i18n }}\n              <span class=\"badge badge-pill badge-info\" *ngIf=\"selectedCount\">{{\n                selectedCount\n              }}</span>\n            </button>\n          </div>\n        </div>\n        <ng-container *ngIf=\"!searchedUsers.length\">\n          <hr />\n          {{ \"noUsersInList\" | i18n }}\n        </ng-container>\n        <ng-container *ngIf=\"searchedUsers.length\">\n          <table class=\"table table-hover table-list mb-0\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let u of searchedUsers\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <app-avatar\n                    [data]=\"u | userName\"\n                    [email]=\"u.email\"\n                    size=\"25\"\n                    [circle]=\"true\"\n                    [fontSize]=\"14\"\n                  >\n                  </app-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    class=\"badge badge-secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    class=\"badge badge-warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\n\nimport { EventService } from \"../../services/event.service\";\n\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName: string = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService\n  ) {\n    super(eventService, i18nService, exportService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.useEvents) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getOrganizationUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (userId == null) {\n      return null;\n    }\n\n    if (this.orgUsersUserIdMap.has(userId)) {\n      return this.orgUsersUserIdMap.get(userId);\n    }\n\n    if (r.providerId != null && r.providerId === this.organization.providerId) {\n      return {\n        name: this.organization.providerName,\n      };\n    }\n\n    return null;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { GroupRequest } from \"jslib-common/models/request/groupRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"jslib-common/models/response/collectionResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode: boolean = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { GroupResponse } from \"jslib-common/models/response/groupResponse\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      if (organization == null || !organization.useGroups) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n  accessPolicies: boolean = false;\n  accessGroups: boolean = false;\n  accessEvents: boolean = false;\n  accessSso: boolean = false;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.accessPolicies = this.organization.usePolicies;\n      this.accessSso = this.organization.useSso;\n      this.accessEvents = this.organization.useEvents;\n      this.accessGroups = this.organization.useGroups;\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups && accessGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManagePolicies && accessPolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageSso && accessSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { OrganizationKeysRequest } from \"jslib-common/models/request/organizationKeysRequest\";\nimport { OrganizationUserBulkRequest } from \"jslib-common/models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"jslib-common/models/request/organizationUserConfirmRequest\";\n\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { OrganizationUserBulkResponse } from \"jslib-common/models/response/organizationUserBulkResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"jslib-common/models/response/organizationUserResponse\";\n\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { SearchPipe } from \"jslib-angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organizationId: string;\n  status: OrganizationUserStatusType = null;\n  accessEvents = false;\n  accessGroups = false;\n  canResetPassword = false; // User permission (admin/custom)\n  orgUseResetPassword = false; // Org plan ability\n  orgHasKeys = false; // Org public/private keys\n  orgResetPasswordPolicyEnabled = false;\n  callingUserType: OrganizationUserType = null;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      if (!organization.canManageUsers) {\n        this.router.navigate([\"../collections\"], { relativeTo: this.route });\n        return;\n      }\n      this.accessEvents = organization.useEvents;\n      this.accessGroups = organization.useGroups;\n      this.canResetPassword = organization.canManageUsersPassword;\n      this.orgUseResetPassword = organization.useResetPassword;\n      this.callingUserType = organization.type;\n      this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n      // Backfill pub/priv key if necessary\n      if (this.canResetPassword && !this.orgHasKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        const response = await this.apiService.postOrganizationKeys(this.organizationId, request);\n        if (response != null) {\n          this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n          await this.syncService.fullSync(true); // Replace oganizations with new data\n        } else {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n      }\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const resetPasswordPolicy = await this.policyService.getPolicyForOrganization(\n      PolicyType.ResetPassword,\n      this.organizationId\n    );\n    this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n    super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.apiService.getOrganizationUsers(this.organizationId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteOrganizationUser(this.organizationId, id);\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<any> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.callingUserType) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.canResetPassword &&\n      callingUserHasPermission &&\n      this.orgUseResetPassword &&\n      this.orgHasKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.orgUseResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new OrganizationUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyOrganizationUserReinvite(\n        this.organizationId,\n        request\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityEventsComponent,\n      this.eventsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.entityId = user.id;\n        comp.showUser = false;\n        comp.entity = \"user\";\n      }\n    );\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organizationId;\n        comp.id = user != null ? user.id : null;\n\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected deleteWarningMessage(user: OrganizationUserUserDetailsResponse): string {\n    if (user.usesKeyConnector) {\n      return this.i18nService.t(\"removeUserConfirmationKeyConnector\");\n    }\n\n    return super.deleteWarningMessage(user);\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id),\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{\n          acceptedCount\n        }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\nimport { PolicyListService } from \"../../services/policy-list.service\";\nimport { BasePolicy } from \"../policies/base-policy.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.usePolicies) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span class=\"badge badge-success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"enabled\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies/base-policy.component\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.apiService.getPolicy(this.organizationId, this.policy.type);\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e);\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.putPolicy(this.organizationId, this.policy.type, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { OrganizationUserResetPasswordRequest } from \"jslib-common/models/request/organizationUserResetPasswordRequest\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword: boolean = false;\n  masterPasswordScore: number;\n  formPromise: Promise<any>;\n  private newPasswordStrengthTimeout: any;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // Get Enforced Policy Options\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.updatePasswordStrength();\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.masterPasswordScore,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.masterPasswordScore < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.apiService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.apiService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  updatePasswordStrength() {\n    if (this.newPasswordStrengthTimeout != null) {\n      clearTimeout(this.newPasswordStrengthTimeout);\n    }\n    this.newPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.newPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n                (input)=\"updatePasswordStrength()\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { OrganizationUserInviteRequest } from \"jslib-common/models/request/organizationUserInviteRequest\";\nimport { OrganizationUserUpdateRequest } from \"jslib-common/models/request/organizationUserUpdateRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"jslib-common/models/response/collectionResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { PermissionsApi } from \"jslib-common/models/api/permissionsApi\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector: boolean = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode: boolean = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        const request = new OrganizationUserUpdateRequest();\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.collections = collections;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        this.formPromise = this.apiService.putOrganizationUser(\n          this.organizationId,\n          this.organizationUserId,\n          request\n        );\n      } else {\n        const request = new OrganizationUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        request.collections = collections;\n        this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <small>{{ \"customDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Manager Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Admin Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { OrganizationUserUpdateGroupsRequest } from \"jslib-common/models/request/organizationUserUpdateGroupsRequest\";\nimport { GroupResponse } from \"jslib-common/models/response/groupResponse\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.apiService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.apiService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"g.checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new FormControl(false);\n  data: FormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPass\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: FormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{\n      \"personalOwnershipCheckboxDesc\" | i18n\n    }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo: boolean = false;\n\n  constructor(private formBuilder: FormBuilder, private organizationService: OrganizationService) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: FormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLogin\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { OrganizationKeysRequest } from \"jslib-common/models/request/organizationKeysRequest\";\nimport { OrganizationUpdateRequest } from \"jslib-common/models/request/organizationUpdateRequest\";\n\nimport { OrganizationResponse } from \"jslib-common/models/response/organizationResponse\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\nimport { TaxInfoComponent } from \"../../settings/tax-info.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  selfHosted = false;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      try {\n        this.org = await this.apiService.getOrganization(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.apiService.postOrganizationApiKey.bind(this.apiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.apiService.postOrganizationRotateApiKey.bind(this.apiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myOrganization\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"identifier\">{{ \"identifier\" | i18n }}</label>\n        <input\n          id=\"identifier\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Identifier\"\n          [(ngModel)]=\"org.identifier\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ org.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"taxInformation\" | i18n }}</h1>\n</div>\n<p>{{ \"taxInformationDesc\" | i18n }}</p>\n<div *ngIf=\"!org || loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #formTax\n  (ngSubmit)=\"submitTaxInfo()\"\n  [appApiAction]=\"taxFormPromise\"\n  ngNativeValidate\n>\n  <app-tax-info></app-tax-info>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { OrganizationSubscriptionUpdateRequest } from \"jslib-common/models/request/organizationSubscriptionUpdateRequest\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  formPromise: Promise<any>;\n  limitSubscription: boolean;\n  newSeatCount: number;\n  newMaxSeats: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.limitSubscription = this.maxAutoscaleSeats != null;\n    this.newSeatCount = this.currentSeatCount;\n    this.newMaxSeats = this.maxAutoscaleSeats;\n  }\n\n  async submit() {\n    try {\n      const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n      const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n      this.formPromise = this.apiService.postOrganizationUpdateSubscription(\n        this.organizationId,\n        request\n      );\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"subscriptionUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.onAdjusted.emit();\n  }\n\n  limitSubscriptionChanged() {\n    if (!this.limitSubscription) {\n      this.newMaxSeats = null;\n    }\n  }\n\n  get adjustedSeatTotal(): number {\n    return this.newSeatCount * this.seatPrice;\n  }\n\n  get maxSeatTotal(): number {\n    return this.newMaxSeats * this.seatPrice;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"newSeatCount\">{{ \"subscriptionSeats\" | i18n }}</label>\n        <input\n          id=\"newSeatCount\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"NewSeatCount\"\n          [(ngModel)]=\"newSeatCount\"\n          min=\"0\"\n          step=\"1\"\n          required\n        />\n        <small class=\"d-block text-muted mb-4\">\n          <strong>{{ \"total\" | i18n }}:</strong> {{ newSeatCount || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ adjustedSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"form-group col-sm\">\n        <div class=\"form-check\">\n          <input\n            id=\"limitSubscription\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"LimitSubscription\"\n            [(ngModel)]=\"limitSubscription\"\n            (change)=\"limitSubscriptionChanged()\"\n          />\n          <label for=\"limitSubscription\">{{ \"limitSubscription\" | i18n }}</label>\n        </div>\n        <small class=\"d-block text-muted\">{{ \"limitSubscriptionDesc\" | i18n }}</small>\n      </div>\n    </div>\n    <div class=\"row mb-4\" [hidden]=\"!limitSubscription\">\n      <div class=\"form-group col-sm\">\n        <label for=\"maxAutoscaleSeats\">{{ \"maxSeatLimit\" | i18n }}</label>\n        <input\n          id=\"maxAutoscaleSeats\"\n          class=\"form-control col-6\"\n          type=\"number\"\n          name=\"MaxAutoscaleSeats\"\n          [(ngModel)]=\"newMaxSeats\"\n          [min]=\"newSeatCount == null ? 1 : newSeatCount\"\n          step=\"1\"\n          [required]=\"limitSubscription\"\n        />\n        <small class=\"d-block text-muted\">\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong> {{ newMaxSeats || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ maxSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"save\" | i18n }}</span>\n    </button>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\n\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n  defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n  defaultUpgradeProduct: ProductType = ProductType.Families;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div class=\"card card-org-plans\">\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h2 class=\"card-body-header\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p class=\"mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [plan]=\"defaultUpgradePlan\"\n      [product]=\"defaultUpgradeProduct\"\n      [organizationId]=\"organizationId\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { Verification } from \"jslib-common/types/verification\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent {\n  organizationId: string;\n  descriptionKey = \"deleteOrganizationDesc\";\n  @Output() onSuccess: EventEmitter<any> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.deleteOrganization(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ descriptionKey | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteOrganizationWarning\" | i18n }}</app-callout>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-download-license\",\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onDownloaded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  installationId: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.installationId == null || this.installationId === \"\") {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.getOrganizationLicense(\n        this.organizationId,\n        this.installationId\n      );\n      const license = await this.formPromise;\n      const licenseString = JSON.stringify(license, null, 2);\n      this.platformUtilsService.saveFile(\n        window,\n        licenseString,\n        null,\n        \"bitwarden_organization_license.json\"\n      );\n      this.onDownloaded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"downloadLicense\" | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <div class=\"d-flex\">\n          <label for=\"installationId\">{{ \"enterInstallationId\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"installationId\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"InstallationId\"\n          [(ngModel)]=\"installationId\"\n          required\n        />\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { UserBillingComponent } from \"../../settings/user-billing.component\";\n\n@Component({\n  selector: \"app-org-billing\",\n  templateUrl: \"../../settings/user-billing.component.html\",\n})\nexport class OrganizationBillingComponent extends UserBillingComponent implements OnInit {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>\n    {{ \"billing\" | i18n }}\n  </h1>\n  <button\n    (click)=\"load()\"\n    class=\"btn btn-sm btn-outline-primary ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"addCredit()\"\n    *ngIf=\"!showAddCredit\"\n  >\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <label class=\"sr-only\" for=\"verifyAmount1\">{{ \"amount\" | i18n: \"1\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount1\"\n            placeholder=\"xx\"\n            name=\"Amount1\"\n            [(ngModel)]=\"verifyAmount1\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <label class=\"sr-only\" for=\"verifyAmount2\">{{ \"amount\" | i18n: \"2\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount2\"\n            placeholder=\"xx\"\n            name=\"Amount2\"\n            [(ngModel)]=\"verifyAmount2\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-outline-primary btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"changePayment()\"\n    *ngIf=\"!showAdjustPayment\"\n  >\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    [organizationId]=\"organizationId\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <h2 class=\"spaced-header\">{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { OrganizationSubscriptionResponse } from \"jslib-common/models/response/organizationSubscriptionResponse\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PlanType } from \"jslib-common/enums/planType\";\n\n@Component({\n  selector: \"app-org-subscription\",\n  templateUrl: \"organization-subscription.component.html\",\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  organizationId: string;\n  adjustSeatsAdd = true;\n  showAdjustSeats = false;\n  showAdjustSeatAutoscale = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  showDownloadLicense = false;\n  showChangePlan = false;\n  sub: OrganizationSubscriptionResponse;\n  selfHosted = false;\n\n  userOrg: Organization;\n\n  removeSponsorshipPromise: Promise<any>;\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    this.userOrg = await this.organizationService.get(this.organizationId);\n    this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async changePlan() {\n    this.showChangePlan = !this.showChangePlan;\n  }\n\n  closeChangePlan(changed: boolean) {\n    this.showChangePlan = false;\n  }\n\n  downloadLicense() {\n    this.showDownloadLicense = !this.showDownloadLicense;\n  }\n\n  closeDownloadLicense() {\n    this.showDownloadLicense = false;\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(updated: boolean) {\n    this.showUpdateLicense = false;\n    if (updated) {\n      this.load();\n      this.messagingService.send(\"updatedOrgLicense\");\n    }\n  }\n\n  subscriptionAdjusted() {\n    this.load();\n  }\n\n  adjustStorage(add: boolean) {\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async removeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeSponsorshipConfirmation\"),\n      this.i18nService.t(\"removeSponsorship\"),\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    try {\n      this.removeSponsorshipPromise = this.apiService.deleteRemoveSponsorship(this.organizationId);\n      await this.removeSponsorshipPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removeSponsorshipSuccess\")\n      );\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  get isExpired() {\n    return (\n      this.sub != null && this.sub.expiration != null && new Date(this.sub.expiration) < new Date()\n    );\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  get storageGbPrice() {\n    return this.sub.plan.additionalStoragePricePerGb;\n  }\n\n  get seatPrice() {\n    return this.sub.plan.seatPrice;\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.hasAdditionalSeatsOption;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get canDownloadLicense() {\n    return (\n      (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n      (this.subscription != null && !this.subscription.cancelled)\n    );\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionFamiliesPlan\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      return this.i18nService.t(\"subscriptionMaxReached\", this.sub.seats.toString());\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      return this.i18nService.t(\"subscriptionUserSeatsUnlimitedAutoscale\");\n    } else {\n      return this.i18nService.t(\n        \"subscriptionUserSeatsLimitedAutoscale\",\n        this.sub.maxAutoscaleSeats.toString()\n      );\n    }\n  }\n\n  get showChangePlanButton() {\n    return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <dl>\n          <dt>{{ \"billingPlan\" | i18n }}</dt>\n          <dd>{{ sub.plan.name }}</dd>\n          <ng-container *ngIf=\"subscription\">\n            <dt>{{ \"status\" | i18n }}</dt>\n            <dd>\n              <span class=\"text-capitalize\">{{\n                isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n              }}</span>\n              <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n                \"pendingCancellation\" | i18n\n              }}</span>\n            </dd>\n            <dt>{{ \"nextCharge\" | i18n }}</dt>\n            <dd>\n              {{\n                nextInvoice\n                  ? (nextInvoice.date | date: \"mediumDate\") +\n                    \", \" +\n                    (nextInvoice.amount | currency: \"$\")\n                  : \"-\"\n              }}\n            </dd>\n          </ng-container>\n        </dl>\n      </div>\n      <div class=\"col-8\" *ngIf=\"subscription\">\n        <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n        <table class=\"table\">\n          <tbody>\n            <tr *ngFor=\"let i of subscription.items\">\n              <td>\n                {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n                {{ i.amount | currency: \"$\" }}\n              </td>\n              <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <ng-container *ngIf=\"userOrg?.providerId != null\">\n        <div class=\"col-sm\">\n          <dl>\n            <dt>{{ \"provider\" | i18n }}</dt>\n            <dd>{{ \"yourProviderIs\" | i18n: userOrg.providerName }}</dd>\n          </dl>\n        </div>\n      </ng-container>\n    </div>\n    <ng-container>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"changePlan()\"\n        *ngIf=\"showChangePlanButton\"\n      >\n        {{ \"changeBillingPlan\" | i18n }}\n      </button>\n      <app-change-plan\n        [organizationId]=\"organizationId\"\n        (onChanged)=\"closeChangePlan(true)\"\n        (onCanceled)=\"closeChangePlan(false)\"\n        *ngIf=\"showChangePlan\"\n      ></app-change-plan>\n    </ng-container>\n    <h2 class=\"spaced-header\">{{ \"manageSubscription\" | i18n }}</h2>\n    <p class=\"mb-4\">{{ subscriptionDesc }}</p>\n    <ng-container\n      *ngIf=\"\n        subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\n      \"\n    >\n      <div class=\"mt-3\">\n        <app-adjust-subscription\n          [seatPrice]=\"seatPrice\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          [currentSeatCount]=\"seats\"\n          [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        >\n        </app-adjust-subscription>\n      </div>\n    </ng-container>\n    <button\n      #removeSponsorshipBtn\n      type=\"button\"\n      class=\"btn btn-outline-danger btn-submit\"\n      (click)=\"removeSponsorship()\"\n      [appApiAction]=\"removeSponsorshipPromise\"\n      [disabled]=\"removeSponsorshipBtn.loading\"\n      *ngIf=\"isSponsoredSubscription\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"removeSponsorship\" | i18n }}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"storageGbPrice\"\n          [add]=\"adjustStorageAdd\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n\n    <h2 class=\"spaced-header\">{{ \"additionalOptions\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"additionalOptionsDesc\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"canDownloadLicense\"\n        [disabled]=\"showDownloadLicense\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-1\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n      <app-download-license\n        [organizationId]=\"organizationId\"\n        (onDownloaded)=\"closeDownloadLicense()\"\n        (onCanceled)=\"closeDownloadLicense()\"\n      ></app-download-license>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"selfHosted\">\n    <dl>\n      <dt>{{ \"billingPlan\" | i18n }}</dt>\n      <dd>{{ sub.plan.name }}</dd>\n      <dt>{{ \"expiration\" | i18n }}</dt>\n      <dd *ngIf=\"sub.expiration\">\n        {{ sub.expiration | date: \"mediumDate\" }}\n        <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n          <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {{ \"licenseIsExpired\" | i18n }}\n        </span>\n      </dd>\n      <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n    </dl>\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          [organizationId]=\"organizationId\"\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        ></app-update-license>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  access2fa = false;\n  selfHosted: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.selfHosted = await this.platformUtilsService.isSelfHost();\n      const organization = await this.organizationService.get(params.organizationId);\n      this.access2fa = organization.use2fa;\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myOrganization\" | i18n }}\n          </a>\n          <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!selfHosted\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"access2fa\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo:\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"twoStepLogin\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<p *ngIf=\"organizationId\">{{ \"twoStepLoginOrganizationDesc\" | i18n }}</p>\n<app-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</app-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<app-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</app-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <a\n          href=\"#\"\n          appStopClick\n          class=\"badge badge-primary\"\n          *ngIf=\"!canAccessPremium && p.premium\"\n          (click)=\"premiumRequired()\"\n        >\n          {{ \"premium\" | i18n }}\n        </a>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary btn-sm\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { PlanSponsorshipType } from \"jslib-common/enums/planSponsorshipType\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { OrganizationSponsorshipRedeemRequest } from \"jslib-common/models/request/organization/organizationSponsorshipRedeemRequest\";\n\nimport { DeleteOrganizationComponent } from \"src/app/organizations/settings/delete-organization.component\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n\n  showNewOrganization: boolean = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId: string = \"\";\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n\n      this.existingFamilyOrganizations = (await this.organizationService.getAll()).filter(\n        (o) => o.planProductType === ProductType.Families\n      );\n\n      if (this.existingFamilyOrganizations.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.descriptionKey = \"orgCreatedSponsorshipInvalid\";\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { ExportComponent as BaseExportComponent } from \"../../tools/export.component\";\n\n@Component({\n  selector: \"app-org-export\",\n  templateUrl: \"../../tools/export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    private route: ActivatedRoute,\n    policyService: PolicyService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n    });\n  }\n\n  async checkExportDisabled() {\n    return;\n  }\n\n  getExportData() {\n    return this.exportService.getOrganizationExport(this.organizationId, this.format);\n  }\n\n  getFileName() {\n    return super.getFileName(\"org\");\n  }\n\n  async collectEvent(): Promise<any> {\n    // TODO\n    // await this.eventService.collect(EventType.Organization_ClientExportedVault);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  ngNativeValidate\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"exportForm\"\n>\n  <div class=\"page-header\">\n    <h1>{{ \"exportVault\" | i18n }}</h1>\n  </div>\n\n  <app-callout type=\"error\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n    {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n  </app-callout>\n\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n      <select class=\"form-control\" id=\"format\" name=\"Format\" formControlName=\"format\">\n        <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <app-verify-master-password ngDefaultControl formControlName=\"secret\" name=\"secret\">\n      </app-verify-master-password>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || exportForm.disabled\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n      *ngIf=\"form.loading\"\n    ></i>\n    <span *ngIf=\"!form.loading\">{{ \"exportVault\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../tools/exposed-passwords-report.component\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"../../tools/exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      auditService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  ngOnInit() {\n    const dynamicSuper = Object.getPrototypeOf(this.constructor.prototype);\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      // TODO: We should do something about this, calling super in an async function is bad\n      dynamicSuper.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"button\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\" (click)=\"load()\">\n  <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n  <span>{{ \"checkExposedPasswords\" | i18n }}</span>\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span class=\"badge badge-warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ImportService } from \"jslib-common/abstractions/import.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\n\nimport { ImportComponent as BaseImportComponent } from \"../../tools/import.component\";\n\n@Component({\n  selector: \"app-org-import\",\n  templateUrl: \"../../tools/import.component.html\",\n})\nexport class ImportComponent extends BaseImportComponent {\n  organizationName: string;\n\n  constructor(\n    i18nService: I18nService,\n    importService: ImportService,\n    router: Router,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(i18nService, importService, router, platformUtilsService, policyService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.successNavigate = [\"organizations\", this.organizationId, \"vault\"];\n      await super.ngOnInit();\n      this.importBlockedByPolicy = false;\n    });\n    const organization = await this.organizationService.get(this.organizationId);\n    this.organizationName = organization.name;\n  }\n\n  async submit() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"importWarning\", this.organizationName),\n      this.i18nService.t(\"warning\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    super.submit();\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"importData\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"importBlockedByPolicy\">\n  {{ \"personalOwnershipPolicyInEffectImports\" | i18n }}\n</app-callout>\n<form #form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"type\">1. {{ \"selectFormat\" | i18n }}</label>\n        <select\n          id=\"type\"\n          name=\"Format\"\n          [(ngModel)]=\"format\"\n          class=\"form-control\"\n          [disabled]=\"importBlockedByPolicy\"\n          required\n        >\n          <option *ngFor=\"let o of featuredImportOptions\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          <ng-container *ngIf=\"importOptions && importOptions.length\">\n            <option value=\"-\" disabled></option>\n            <option *ngFor=\"let o of importOptions\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </ng-container>\n        </select>\n      </div>\n    </div>\n  </div>\n  <app-callout type=\"info\" title=\"{{ getFormatInstructionTitle() }}\" *ngIf=\"format\">\n    <ng-container *ngIf=\"format === 'bitwardencsv' || format === 'bitwardenjson'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/export-your-data/\">\n        https://bitwarden.com/help/export-your-data/</a\n      >\n    </ng-container>\n    <ng-container *ngIf=\"format === 'lastpasscsv'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-lastpass/\">\n        https://bitwarden.com/help/import-from-lastpass/</a\n      >\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keepassxcsv'\">\n      Using the KeePassX desktop application, navigate to \"Database\" &rarr; \"Export to CSV file\" and\n      save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'aviracsv'\">\n      In the Avira web vault, go to \"Settings\" &rarr; \"My Data\" &rarr; \"Export data\" and save the\n      CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'blurcsv'\">\n      In the Blur web vault, click your username at the top and go to \"Settings\" &rarr; \"Export\n      Data\", then click \"Export CSV\" for your \"Accounts\".\n    </ng-container>\n    <ng-container *ngIf=\"format === 'safeincloudxml'\">\n      Using the SaveInCloud desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As XML\"\n      and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'padlockcsv'\">\n      Using the Padlock desktop application, click the hamburger icon in the top left corner and\n      navigate to \"Settings\" &rarr; \"Export\" button and save the file \"As CSV\".\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keepass2xml'\">\n      Using the KeePass 2 desktop application, navigate to \"File\" &rarr; \"Export\" and select the\n      \"KeePass XML (2.x)\" option.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'upmcsv'\">\n      Using the Universal Password Manager desktop application, navigate to \"Database\" &rarr;\n      \"Export\" and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'saferpasscsv'\">\n      Using the SaferPass browser extension, click the hamburger icon in the top left corner and\n      navigate to \"Settings\". Click the \"Export accounts\" button to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'meldiumcsv'\">\n      Using the Meldium web vault, navigate to \"Settings\". Locate the \"Export data\" function and\n      click \"Show me my data\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keepercsv'\">\n      Log into the Keeper web vault (keepersecurity.com/vault). Click on your \"account email\" (top\n      right) and select \"Settings\". Go to \"Export\" and find the \"Export to .csv File\" option. Click\n      \"Export\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keeperjson'\">\n      Log into the Keeper web vault (keepersecurity.com/vault). Click on your \"account email\" (top\n      right) and select \"Settings\". Go to \"Export\" and find the \"Export to .json File\" option. Click\n      \"Export\" to save the JSON file.\n    </ng-container>\n    <ng-container\n      *ngIf=\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\"\n    >\n      <span *ngIf=\"format !== 'chromecsv'\">\n        The process is exactly the same as importing from Google Chrome.\n      </span>\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-chrome/\">\n        https://bitwarden.com/help/import-from-chrome/</a\n      >\n    </ng-container>\n    <ng-container *ngIf=\"format === 'firefoxcsv'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-firefox/\">\n        https://bitwarden.com/help/import-from-firefox/</a\n      >.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'safaricsv'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-safari/\">\n        https://bitwarden.com/help/import-from-safari/</a\n      >.\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        format === '1password1pif' || format === '1passwordwincsv' || format === '1passwordmaccsv'\n      \"\n    >\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-1password/\">\n        https://bitwarden.com/help/import-from-1password/</a\n      >.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passworddragonxml'\">\n      Using the Password Dragon desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"To\n      XML\". In the dialog that pops up select \"All Rows\" and check all fields. Click the \"Export\"\n      button and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'enpasscsv'\">\n      Using the Enpass desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As CSV\".\n      Select \"OK\" to the warning alert and save the CSV file. Note that the importer only supports\n      files exported while Enpass is set to the English language, so adjust your settings\n      accordingly.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'enpassjson'\">\n      Using the Enpass 6 desktop application, click the menu button and navigate to \"File\" &rarr;\n      \"Export\". Select the \".json\" file format option and save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'pwsafexml'\">\n      Using the Password Safe desktop application, navigate to \"File\" &rarr; \"Export To\" &rarr; \"XML\n      format...\" and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'dashlanejson'\">\n      Using the Dashlane desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"Unsecured\n      archive (readable) in JSON format\" and save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'msecurecsv'\">\n      Using the mSecure desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"CSV File...\"\n      and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'stickypasswordxml'\">\n      Using the Sticky Password desktop application, navigate to \"Menu\" (top right) &rarr; \"Export\"\n      &rarr; \"Export all\". Select the unencrypted format XML option and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'truekeycsv'\">\n      Using the True Key desktop application, click the gear icon (top right) and then navigate to\n      \"App Settings\". Click the \"Export\" button, enter your password and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'clipperzhtml'\">\n      Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the\n      top right to expand the navigation bar. Navigate to \"Data\" &rarr; \"Export\". Click the\n      \"download HTML+JSON\" button to save the HTML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'roboformcsv'\">\n      Using the RoboForm Editor desktop application, navigate to \"RoboForm\" (top left) &rarr;\n      \"Options\" &rarr; \"Account &amp; Data\" and click the \"Export\" button. Select all of your data,\n      change the \"Format\" to \"CSV file\" and then click the \"Export\" button to save the CSV file.\n      Note: RoboForm only allows you to export Logins. Other items will not be exported.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passboltcsv'\">\n      Log into the Passbolt web vault and navigate to the \"Passwords\" listing. Select all of the\n      passwords you would like to export and click the \"Export\" button at the top of the listing.\n      Choose the \"csv (lastpass)\" export format and click the \"Export\" button.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'ascendocsv'\">\n      Using the Ascendo DataVault desktop application, navigate to \"Tools\" &rarr; \"Export\". In the\n      dialog that pops up, select the \"All Items (DVX, CSV)\" option. Click the \"Ok\" button to save\n      the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passwordbossjson'\">\n      Using the Password Boss desktop application, navigate to \"File\" &rarr; \"Export data\" &rarr;\n      \"Password Boss JSON - not encrypted\" and save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'zohovaultcsv'\">\n      Log into the Zoho web vault (vault.zoho.com). Navigate to \"Tools\" &rarr; \"Export Secrets\".\n      Select \"All Secrets\" and click the \"Zoho Vault Format CSV\" button. Highlight and copy the data\n      from the textarea. Open a text editor like Notepad and paste the data. Save the data from the\n      text editor as\n      <code>zoho_export.csv</code>.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'splashidcsv'\">\n      Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top\n      right corner. Navigate to \"Export\" &rarr; \"Export as CSV\" and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passkeepcsv'\">\n      Using the PassKeep mobile app, navigate to \"Backup/Restore\". Locate the \"CSV Backup/Restore\"\n      section and click \"Backup to CSV\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'gnomejson'\">\n      Make sure you have python-keyring and python-gnomekeyring installed. Save the\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bit.ly/2GpOMTg\"\n        >GNOME Keyring Import/Export</a\n      >\n      python script to your desktop as <code>pw_helper.py</code>. Open terminal and run\n      <code>chmod +rx Desktop/pw_helper.py</code> and then\n      <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the\n      resulting <code>my_passwords.json</code> file here to Bitwarden.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passwordagentcsv'\">\n      Using the Password Agent desktop application navigate to \"File\" &rarr; \"Export\", select the\n      \"Fields to export\" button and check all of the fields, change the \"Output format\" to \"CSV\",\n      and then click the \"Start\" button to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passpackcsv'\">\n      Log into the Passpack website vault and navigate to \"Settings\" &rarr; \"Export\", then click the\n      \"Download\" button to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passmanjson'\">\n      Open your Passman vault and click on \"Settings\" in the bottom left corner. In the \"Settings\"\n      window switch to the \"Export credentials\" tab and choose \"JSON\" as the export type. Enter your\n      vault's passphrase and click the \"Export\" button to save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'avastcsv'\">\n      Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export\n      data\". Select the \"Export\" button for the \"Export to CSV file\" option to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'avastjson'\">\n      Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export\n      data\". Select the \"Export\" button for the \"Export to JSON file\" option to save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'fsecurefsk'\">\n      Open the F-Secure KEY desktop application and navigate to \"Settings\" &rarr; \"Export\n      Passwords\". Select the \"Export\" button, enter your master password, and save the FSK file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'kasperskytxt'\">\n      Open the Kaspersky Password Manager desktop application and navigate to \"Settings\" &rarr;\n      \"Import/Export\". Locate the \"Export to text file\" section and select the \"Export\" button to\n      save the TXT file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'remembearcsv'\">\n      Open the RememBear desktop application and navigate to \"Settings\" &rarr; \"Account\" &rarr;\n      \"Export\". Enter your master password and select the \"Export Anyway\" button to save the CSV\n      file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passwordwallettxt'\">\n      Open the PasswordWallet desktop application and navigate to \"File\" &rarr; \"Export\" &rarr;\n      \"Visible entries to text file\". Enter your password and select the \"Ok\" button to save the TXT\n      file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'mykicsv'\">\n      Open the Myki desktop browser extension and navigate to \"Advanced\" &rarr; \"Export Accounts\"\n      and then scan the QR code with your mobile device. Various CSV files will then be saved to\n      your computer's downloads folder.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'securesafecsv'\">\n      Export your SecureSafe password safe to a CSV file with a comma delimiter.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'logmeoncecsv'\">\n      Open the LogMeOnce browser extension, then navigate to \"Open Menu\" &rarr; \"Export To\" and\n      select \"CSV File\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'blackberrycsv'\">\n      Open the BlackBerry Password Keeper application, then navigate to \"Settings\" &rarr;\n      \"Import/Export\". Select \"Export Passwords\" and follow the instructions on screen to save the\n      unencrypted CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'buttercupcsv'\">\n      Open the Buttercup desktop application and unlock your vault. Right click on your vault's icon\n      and select \"Export\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'codebookcsv'\">\n      Open the Codebook desktop application and log in. Navigate to \"File\" &rarr; \"Export all\", then\n      click \"Yes\" on the dialog and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'encryptrcsv'\">\n      Open the newest version of the Encryptr desktop application and allow all of your data to\n      sync. Once syncing of your data is complete, the download icon in the top right corner will\n      turn pink. Click the download icon and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'yoticsv'\">\n      From the Yoti browser extension, click on \"Settings\", then \"Export Saved Logins\" and save the\n      CSV file.\n    </ng-container>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"file\">2. {{ \"selectImportFile\" | i18n }}</label>\n        <input\n          type=\"file\"\n          id=\"file\"\n          class=\"form-control-file\"\n          name=\"file\"\n          [disabled]=\"importBlockedByPolicy\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"fileContents\">{{ \"orCopyPasteFileContents\" | i18n }}</label>\n    <textarea\n      id=\"fileContents\"\n      class=\"form-control\"\n      name=\"FileContents\"\n      [(ngModel)]=\"fileContents\"\n      [disabled]=\"importBlockedByPolicy\"\n    ></textarea>\n  </div>\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary btn-submit\"\n    [disabled]=\"loading || importBlockedByPolicy\"\n    [ngClass]=\"{ manual: importBlockedByPolicy }\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"importData\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../tools/inactive-two-factor-report.component\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../tools/inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      modalService,\n      messagingService,\n      stateService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              class=\"badge badge-primary\"\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../tools/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../tools/reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span class=\"badge badge-warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\n\n@Component({\n  selector: \"app-org-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent {\n  organization: Organization;\n  accessReports = false;\n  loading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private messagingService: MessagingService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      this.accessReports = this.organization.useTotp;\n      this.loading = false;\n    });\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n  }\n}\n","<div class=\"container page-content\">\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\">\n          <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n          <div class=\"list-group list-group-flush\">\n            <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"importData\" | i18n }}\n            </a>\n            <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"exportVault\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"card\" *ngIf=\"organization.canAccessReports\">\n          <div class=\"card-header d-flex\">\n            {{ \"reports\" | i18n }}\n            <div class=\"ml-auto\">\n              <a\n                href=\"#\"\n                appStopClick\n                class=\"badge badge-primary\"\n                *ngIf=\"!accessReports\"\n                (click)=\"upgradeOrganization()\"\n              >\n                {{ \"upgrade\" | i18n }}\n              </a>\n            </div>\n          </div>\n          <div class=\"list-group list-group-flush\">\n            <a\n              routerLink=\"exposed-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"exposedPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"reused-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"reusedPasswordsReport\" | i18n }}\n            </a>\n            <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"weakPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"unsecured-websites-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"unsecuredWebsitesReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"inactive-two-factor-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"inactive2faReport\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../tools/unsecured-websites-report.component\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../tools/unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../tools/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../tools/weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordGenerationService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span class=\"badge badge-{{ passwordStrengthMap.get(c.id)[1] }}\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\n\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherCreateRequest } from \"jslib-common/models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"jslib-common/models/request/cipherRequest\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  organization: Organization;\n  originalCipher: Cipher = null;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n    this.originalCipher = new Cipher(data);\n    return new Cipher(data);\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"checkPasswordBtn.loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!checkPasswordBtn.loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div *ngIf=\"!cipher.login.totp || !totpCode\">\n                <img\n                  src=\"../../images/totp-countdown.png\"\n                  id=\"totpImage\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  class=\"ml-2\"\n                />\n                <a\n                  href=\"#\"\n                  appStopClick\n                  class=\"badge badge-primary ml-3\"\n                  (click)=\"premiumRequired()\"\n                  *ngIf=\"!organization && !cipher.organizationId && !canAccessPremium\"\n                >\n                  {{ \"premium\" | i18n }}\n                </a>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  class=\"badge badge-primary ml-3\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\">\n                <span class=\"totp-countdown mr-3 ml-2\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span class=\"totp-code mr-2\" title=\"{{ 'verificationCodeTotp' | i18n }}\">{{\n                  totpCodeFormatted\n                }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <select\n                id=\"cardBrand\"\n                class=\"form-control\"\n                name=\"Card.Brand\"\n                [(ngModel)]=\"cipher.card.brand\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <select\n                id=\"cardExpMonth\"\n                class=\"form-control\"\n                name=\"Card.ExpMonth\"\n                [(ngModel)]=\"cipher.card.expMonth\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <select\n                id=\"idTitle\"\n                class=\"form-control\"\n                name=\"Identity.Title\"\n                [(ngModel)]=\"cipher.identity.title\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"c.checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <span class=\"password-wrapper text-monospace ml-2\">{{ ph.password }}</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"a.downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"reuploadBtn.loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"deleteBtn.loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"deleteBtn.loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!deleteBtn.loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"../../vault/ciphers.component\";\n\n@Component({\n  selector: \"app-org-vault-ciphers\",\n  templateUrl: \"../../vault/ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  organization: Organization;\n  accessEvents = false;\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    eventService: EventService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            href=\"#\"\n            appStopClick\n            appStopProp\n            (click)=\"selectCipher(c)\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"!organization && c.organizationId\">\n            <i\n              class=\"bwi bwi-collection\"\n              appStopProp\n              title=\"{{ 'shared' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n          </ng-container>\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n              <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"copy(c, c.login.username, 'username', 'Username')\"\n                >\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copyUsername\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                  *ngIf=\"c.viewPassword\"\n                >\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copyPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                  *ngIf=\"displayTotpCopyButton(c)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copyVerificationCode\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  *ngIf=\"c.login.canLaunch\"\n                  (click)=\"launch(c.login.launchUri)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                  {{ \"launch\" | i18n }}\n                </a>\n              </ng-container>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"attachments(c)\">\n                <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                {{ \"attachments\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n                (click)=\"clone(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n                {{ \"clone\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n                (click)=\"share(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n                {{ \"moveToOrganization\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"c.organizationId && !c.isDeleted\"\n                (click)=\"collections(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n                {{ \"collections\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"c.organizationId && accessEvents\"\n                (click)=\"events(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                {{ \"eventLogs\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"restore(c)\"\n                *ngIf=\"c.isDeleted\"\n              >\n                <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n                {{ \"restore\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"jslib-common/models/request/cipherCollectionsRequest\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CollectionDetailsResponse } from \"jslib-common/models/response/collectionResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { GroupingsComponent as BaseGroupingsComponent } from \"../../vault/groupings.component\";\n\n@Component({\n  selector: \"app-org-vault-groupings\",\n  templateUrl: \"../../vault/groupings.component.html\",\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    folderService: FolderService,\n    stateService: StateService,\n    private apiService: ApiService,\n    private i18nService: I18nService\n  ) {\n    super(collectionService, folderService, stateService);\n  }\n\n  async loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      await super.loadCollections(this.organization.id);\n      return;\n    }\n\n    const collections = await this.apiService.getCollections(this.organization.id);\n    if (collections != null && collections.data != null && collections.data.length) {\n      const collectionDomains = collections.data.map(\n        (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n      );\n      this.collections = await this.collectionService.decryptMany(collectionDomains);\n    } else {\n      this.collections = [];\n    }\n\n    const unassignedCollection = new CollectionView();\n    unassignedCollection.name = this.i18nService.t(\"unassigned\");\n    unassignedCollection.id = \"unassigned\";\n    unassignedCollection.organizationId = this.organization.id;\n    unassignedCollection.readOnly = true;\n    this.collections.push(unassignedCollection);\n    this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n  }\n\n  async collapse(grouping: CollectionView) {\n    await super.collapse(grouping, \"org_\");\n  }\n\n  isCollapsed(grouping: CollectionView) {\n    return super.isCollapsed(grouping, \"org_\");\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"card-header d-flex\">\n    {{ \"filters\" | i18n }}\n    <a\n      class=\"ml-auto\"\n      href=\"https://bitwarden.com/help/searching-vault/\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n    >\n      <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n    </a>\n  </div>\n  <div class=\"card-body\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      class=\"form-control\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchTextChanged()\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <ul class=\"bwi-ul card-ul\">\n      <li [ngClass]=\"{ active: selectedAll }\">\n        <a href=\"#\" appStopClick (click)=\"selectAll()\">\n          <i class=\"bwi bwi-li bwi-fw bwi-filter\"></i>{{ \"allItems\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedFavorites }\" *ngIf=\"showFavorites\">\n        <a href=\"#\" appStopClick (click)=\"selectFavorites()\">\n          <i class=\"bwi bwi-li bwi-fw bwi-star\"></i>{{ \"favorites\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedTrash }\" *ngIf=\"showTrash\">\n        <a href=\"#\" appStopClick (click)=\"selectTrash()\">\n          <i class=\"bwi bwi-li bwi-fw bwi-trash\"></i>{{ \"trash\" | i18n }}\n        </a>\n      </li>\n    </ul>\n    <h3>{{ \"types\" | i18n }}</h3>\n    <ul class=\"bwi-ul card-ul\">\n      <li [ngClass]=\"{ active: selectedType === cipherType.Login }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Login)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-globe\"></i>{{ \"typeLogin\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedType === cipherType.Card }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Card)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-credit-card\"></i>{{ \"typeCard\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedType === cipherType.Identity }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Identity)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-id-card\"></i>{{ \"typeIdentity\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedType === cipherType.SecureNote }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.SecureNote)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-sticky-note\"></i>{{ \"typeSecureNote\" | i18n }}\n        </a>\n      </li>\n    </ul>\n    <p *ngIf=\"!loaded\" class=\"text-muted\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n    <ng-container *ngIf=\"loaded\">\n      <ng-container *ngIf=\"showFolders\">\n        <h3 class=\"d-flex\">\n          {{ \"folders\" | i18n }}\n          <a\n            href=\"#\"\n            class=\"text-muted ml-auto\"\n            appStopClick\n            (click)=\"addFolder()\"\n            appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <ul class=\"bwi-ul card-ul\">\n          <ng-template #recursiveFolders let-folders>\n            <li\n              *ngFor=\"let f of folders\"\n              [ngClass]=\"{ active: selectedFolder && f.node.id === selectedFolderId }\"\n            >\n              <div class=\"d-flex\">\n                <i\n                  *ngIf=\"f.children.length\"\n                  class=\"bwi-li bwi\"\n                  title=\"{{ 'toggleCollapse' | i18n }}\"\n                  [ngClass]=\"{\n                    'bwi-angle-right': isCollapsed(f.node),\n                    'bwi-angle-down': !isCollapsed(f.node)\n                  }\"\n                  (click)=\"collapse(f.node)\"\n                ></i>\n                <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectFolder(f.node)\">\n                  <i\n                    *ngIf=\"f.children.length === 0\"\n                    class=\"bwi bwi-li bwi-folder\"\n                    aria-hidden=\"true\"\n                  ></i\n                  >{{ f.node.name }}\n                </a>\n                <a\n                  href=\"#\"\n                  class=\"text-muted ml-auto show-active\"\n                  appStopClick\n                  (click)=\"editFolder(f.node)\"\n                  appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n                  *ngIf=\"f.node.id\"\n                >\n                  <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n              <ul class=\"bwi-ul card-ul carets\" *ngIf=\"f.children.length && !isCollapsed(f.node)\">\n                <ng-container\n                  *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\"\n                >\n                </ng-container>\n              </ul>\n            </li>\n          </ng-template>\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\">\n          </ng-container>\n        </ul>\n      </ng-container>\n      <ng-container *ngIf=\"showCollections && collections && collections.length\">\n        <h3>{{ \"collections\" | i18n }}</h3>\n        <ul class=\"bwi-ul card-ul\">\n          <ng-template #recursiveCollections let-collections>\n            <li\n              *ngFor=\"let c of collections\"\n              [ngClass]=\"{ active: c.node.id === selectedCollectionId }\"\n            >\n              <i\n                *ngIf=\"c.children.length\"\n                class=\"bwi-li bwi\"\n                title=\"{{ 'toggleCollapse' | i18n }}\"\n                [ngClass]=\"{\n                  'bwi-angle-right': isCollapsed(c.node),\n                  'bwi-angle-down': !isCollapsed(c.node)\n                }\"\n                (click)=\"collapse(c.node)\"\n              ></i>\n              <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectCollection(c.node)\">\n                <i\n                  *ngIf=\"c.children.length === 0\"\n                  class=\"bwi bwi-li bwi-collection\"\n                  aria-hidden=\"true\"\n                ></i\n                >{{ c.node.name }}\n              </a>\n              <ul class=\"bwi-ul card-ul carets\" *ngIf=\"c.children.length && !isCollapsed(c.node)\">\n                <ng-container\n                  *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n                >\n                </ng-container>\n              </ul>\n            </li>\n          </ng-template>\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n          >\n          </ng-container>\n        </ul>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { GroupingsComponent } from \"./groupings.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  deleted: boolean = false;\n  trashCleanupWarning: string = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    this.route.parent.params.pipe(first()).subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.groupingsComponent.organization = this.organization;\n      this.ciphersComponent.organization = this.organization;\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.groupingsComponent.load(),\n                      this.ciphersComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n        await this.groupingsComponent.load();\n\n        if (qParams == null) {\n          this.groupingsComponent.selectedAll = true;\n          await this.ciphersComponent.reload();\n        } else {\n          if (qParams.deleted) {\n            this.groupingsComponent.selectedTrash = true;\n            await this.filterDeleted(true);\n          } else if (qParams.type) {\n            const t = parseInt(qParams.type, null);\n            this.groupingsComponent.selectedType = t;\n            await this.filterCipherType(t, true);\n          } else if (qParams.collectionId) {\n            this.groupingsComponent.selectedCollectionId = qParams.collectionId;\n            await this.filterCollection(qParams.collectionId, true);\n          } else {\n            this.groupingsComponent.selectedAll = true;\n            await this.ciphersComponent.reload();\n          }\n        }\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async clearGroupingFilters() {\n    this.ciphersComponent.showAddNew = true;\n    this.ciphersComponent.deleted = false;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchVault\");\n    await this.ciphersComponent.applyFilter();\n    this.clearFilters();\n    this.go();\n  }\n\n  async filterCipherType(type: CipherType, load = false) {\n    this.ciphersComponent.showAddNew = true;\n    this.ciphersComponent.deleted = false;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchType\");\n    const filter = (c: CipherView) => c.type === type;\n    if (load) {\n      await this.ciphersComponent.reload(filter);\n    } else {\n      await this.ciphersComponent.applyFilter(filter);\n    }\n    this.clearFilters();\n    this.type = type;\n    this.go();\n  }\n\n  async filterCollection(collectionId: string, load = false) {\n    this.ciphersComponent.showAddNew = true;\n    this.ciphersComponent.deleted = false;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n    const filter = (c: CipherView) => {\n      if (collectionId === \"unassigned\") {\n        return c.collectionIds == null || c.collectionIds.length === 0;\n      } else {\n        return c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1;\n      }\n    };\n    if (load) {\n      await this.ciphersComponent.reload(filter);\n    } else {\n      await this.ciphersComponent.applyFilter(filter);\n    }\n    this.clearFilters();\n    this.collectionId = collectionId;\n    this.go();\n  }\n\n  async filterDeleted(load: boolean = false) {\n    this.ciphersComponent.showAddNew = false;\n    this.ciphersComponent.deleted = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n    if (load) {\n      await this.ciphersComponent.reload(null, true);\n    } else {\n      await this.ciphersComponent.applyFilter(null);\n    }\n    this.clearFilters();\n    this.deleted = true;\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async (c: CipherView) => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async (c: CipherView) => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async (c: CipherView) => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private clearFilters() {\n    this.collectionId = null;\n    this.type = null;\n    this.deleted = false;\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.type,\n        collectionId: this.collectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      replaceUrl: true,\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <app-org-vault-groupings\n        [showFolders]=\"false\"\n        [showFavorites]=\"false\"\n        [showTrash]=\"true\"\n        (onAllClicked)=\"clearGroupingFilters()\"\n        (onCipherTypeClicked)=\"filterCipherType($event)\"\n        (onCollectionClicked)=\"filterCollection($event.id)\"\n        (onSearchTextChanged)=\"filterSearchText($event)\"\n        (onTrashClicked)=\"filterDeleted()\"\n      >\n      </app-org-vault-groupings>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vault\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-ciphers>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\n\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"./organizations/manage/collections.component\";\nimport { EventsComponent as OrgEventsComponent } from \"./organizations/manage/events.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"./organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"./organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"./organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"./organizations/manage/policies.component\";\n\nimport { AccountComponent as OrgAccountComponent } from \"./organizations/settings/account.component\";\nimport { OrganizationBillingComponent } from \"./organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingsComponent } from \"./organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"./organizations/settings/two-factor-setup.component\";\n\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExportComponent as OrgExportComponent } from \"./organizations/tools/export.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"./organizations/tools/exposed-passwords-report.component\";\nimport { ImportComponent as OrgImportComponent } from \"./organizations/tools/import.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"./organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"./organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"./organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"./organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"./organizations/tools/weak-passwords-report.component\";\n\nimport { VaultComponent as OrgVaultComponent } from \"./organizations/vault/vault.component\";\n\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\n\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { OrganizationsComponent } from \"./settings/organizations.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { UserBillingComponent } from \"./settings/user-billing.component\";\nimport { UserSubscriptionComponent } from \"./settings/user-subscription.component\";\n\nimport { BreachReportComponent } from \"./tools/breach-report.component\";\nimport { ExportComponent } from \"./tools/export.component\";\nimport { ExposedPasswordsReportComponent } from \"./tools/exposed-passwords-report.component\";\nimport { ImportComponent } from \"./tools/import.component\";\nimport { InactiveTwoFactorReportComponent } from \"./tools/inactive-two-factor-report.component\";\nimport { PasswordGeneratorComponent } from \"./tools/password-generator.component\";\nimport { ReusedPasswordsReportComponent } from \"./tools/reused-passwords-report.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./tools/weak-passwords-report.component\";\n\nimport { VaultComponent } from \"./vault/vault.component\";\n\nimport { OrganizationGuardService } from \"./services/organization-guard.service\";\nimport { OrganizationTypeGuardService } from \"./services/organization-type-guard.service\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\nimport { LockGuardService } from \"jslib-angular/services/lock-guard.service\";\nimport { UnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\n\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      { path: \"\", pathMatch: \"full\", component: LoginComponent, canActivate: [UnauthGuardService] },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuardService] },\n      {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"createAccount\" },\n      },\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuardService],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\" },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\" },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuardService],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuardService],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuardService],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      { path: \"vault\", component: VaultComponent, data: { titleId: \"myVault\" } },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          { path: \"options\", component: OptionsComponent, data: { titleId: \"options\" } },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"two-factor\",\n            component: TwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          { path: \"premium\", component: PremiumComponent, data: { titleId: \"goPremium\" } },\n          { path: \"billing\", component: UserBillingComponent, data: { titleId: \"billing\" } },\n          {\n            path: \"subscription\",\n            component: UserSubscriptionComponent,\n            data: { titleId: \"premiumMembership\" },\n          },\n          {\n            path: \"organizations\",\n            component: OrganizationsComponent,\n            data: { titleId: \"organizations\" },\n          },\n          {\n            path: \"create-organization\",\n            component: CreateOrganizationComponent,\n            data: { titleId: \"newOrganization\" },\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuardService],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          { path: \"import\", component: ImportComponent, data: { titleId: \"importData\" } },\n          { path: \"export\", component: ExportComponent, data: { titleId: \"exportVault\" } },\n          {\n            path: \"generator\",\n            component: PasswordGeneratorComponent,\n            data: { titleId: \"passwordGenerator\" },\n          },\n          {\n            path: \"breach-report\",\n            component: BreachReportComponent,\n            data: { titleId: \"dataBreachReport\" },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: ReusedPasswordsReportComponent,\n            data: { titleId: \"reusedPasswordsReport\" },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: UnsecuredWebsitesReportComponent,\n            data: { titleId: \"unsecuredWebsitesReport\" },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: WeakPasswordsReportComponent,\n            data: { titleId: \"weakPasswordsReport\" },\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: ExposedPasswordsReportComponent,\n            data: { titleId: \"exposedPasswordsReport\" },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: InactiveTwoFactorReportComponent,\n            data: { titleId: \"inactive2faReport\" },\n          },\n        ],\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuardService, OrganizationGuardService],\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      { path: \"vault\", component: OrgVaultComponent, data: { titleId: \"vault\" } },\n      {\n        path: \"tools\",\n        component: OrgToolsComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: { permissions: [Permissions.AccessImportExport, Permissions.AccessReports] },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"import\",\n          },\n          {\n            path: \"import\",\n            component: OrgImportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"importData\",\n              permissions: [Permissions.AccessImportExport],\n            },\n          },\n          {\n            path: \"export\",\n            component: OrgExportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"exportVault\",\n              permissions: [Permissions.AccessImportExport],\n            },\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: OrgExposedPasswordsReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"exposedPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: OrgInactiveTwoFactorReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"inactive2faReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: OrgReusedPasswordsReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"reusedPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: OrgUnsecuredWebsitesReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: OrgWeakPasswordsReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"weakPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n        ],\n      },\n      {\n        path: \"manage\",\n        component: OrgManageComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: {\n          permissions: [\n            Permissions.CreateNewCollections,\n            Permissions.EditAnyCollection,\n            Permissions.DeleteAnyCollection,\n            Permissions.EditAssignedCollections,\n            Permissions.DeleteAssignedCollections,\n            Permissions.AccessEventLogs,\n            Permissions.ManageGroups,\n            Permissions.ManageUsers,\n            Permissions.ManagePolicies,\n          ],\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"people\",\n          },\n          {\n            path: \"collections\",\n            component: OrgManageCollectionsComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"collections\",\n              permissions: [\n                Permissions.CreateNewCollections,\n                Permissions.EditAnyCollection,\n                Permissions.DeleteAnyCollection,\n                Permissions.EditAssignedCollections,\n                Permissions.DeleteAssignedCollections,\n              ],\n            },\n          },\n          {\n            path: \"events\",\n            component: OrgEventsComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"eventLogs\",\n              permissions: [Permissions.AccessEventLogs],\n            },\n          },\n          {\n            path: \"groups\",\n            component: OrgGroupsComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"groups\",\n              permissions: [Permissions.ManageGroups],\n            },\n          },\n          {\n            path: \"people\",\n            component: OrgPeopleComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"people\",\n              permissions: [Permissions.ManageUsers, Permissions.ManageUsersPassword],\n            },\n          },\n          {\n            path: \"policies\",\n            component: OrgPoliciesComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"policies\",\n              permissions: [Permissions.ManagePolicies],\n            },\n          },\n        ],\n      },\n      {\n        path: \"settings\",\n        component: OrgSettingsComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: { permissions: [Permissions.ManageOrganization] },\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: OrgAccountComponent, data: { titleId: \"myOrganization\" } },\n          {\n            path: \"two-factor\",\n            component: OrgTwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          {\n            path: \"billing\",\n            component: OrganizationBillingComponent,\n            data: { titleId: \"billing\" },\n          },\n          {\n            path: \"subscription\",\n            component: OrganizationSubscriptionComponent,\n            data: { titleId: \"subscription\" },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { DatePipe, registerLocaleData } from \"@angular/common\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { NestedCheckboxComponent } from \"./components/nested-checkbox.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PasswordStrengthComponent } from \"./components/password-strength.component\";\n\nimport { FooterComponent } from \"./layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"./layouts/navbar.component\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\n\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"./organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"./organizations/manage/bulk/bulk-remove.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"./organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"./organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"./organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"./organizations/manage/entity-events.component\";\nimport { EntityUsersComponent as OrgEntityUsersComponent } from \"./organizations/manage/entity-users.component\";\nimport { EventsComponent as OrgEventsComponent } from \"./organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"./organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"./organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"./organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"./organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"./organizations/manage/policies.component\";\nimport { PolicyEditComponent as OrgPolicyEditComponent } from \"./organizations/manage/policy-edit.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"./organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"./organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"./organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"./organizations/manage/user-groups.component\";\n\nimport { AccountComponent as OrgAccountComponent } from \"./organizations/settings/account.component\";\nimport { AdjustSubscription } from \"./organizations/settings/adjust-subscription.component\";\nimport { ChangePlanComponent } from \"./organizations/settings/change-plan.component\";\nimport { DeleteOrganizationComponent } from \"./organizations/settings/delete-organization.component\";\nimport { DownloadLicenseComponent } from \"./organizations/settings/download-license.component\";\nimport { OrganizationBillingComponent } from \"./organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingComponent } from \"./organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"./organizations/settings/two-factor-setup.component\";\n\nimport { ExportComponent as OrgExportComponent } from \"./organizations/tools/export.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"./organizations/tools/exposed-passwords-report.component\";\nimport { ImportComponent as OrgImportComponent } from \"./organizations/tools/import.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"./organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"./organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"./organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"./organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"./organizations/tools/weak-passwords-report.component\";\n\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"./organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"./organizations/vault/attachments.component\";\nimport { CiphersComponent as OrgCiphersComponent } from \"./organizations/vault/ciphers.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"./organizations/vault/collections.component\";\nimport { GroupingsComponent as OrgGroupingsComponent } from \"./organizations/vault/groupings.component\";\nimport { VaultComponent as OrgVaultComponent } from \"./organizations/vault/vault.component\";\n\nimport { AccessComponent } from \"./send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"./send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendComponent } from \"./send/send.component\";\n\nimport { AccountComponent } from \"./settings/account.component\";\nimport { AddCreditComponent } from \"./settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"./settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"./settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"./settings/api-key.component\";\nimport { ChangeEmailComponent } from \"./settings/change-email.component\";\nimport { ChangeKdfComponent } from \"./settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"./settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"./settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./settings/delete-account.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"./settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"./settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"./settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"./settings/emergency-add-edit.component\";\nimport { LinkSsoComponent } from \"./settings/link-sso.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { OrganizationPlansComponent } from \"./settings/organization-plans.component\";\nimport { OrganizationsComponent } from \"./settings/organizations.component\";\nimport { PaymentComponent } from \"./settings/payment.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { ProfileComponent } from \"./settings/profile.component\";\nimport { PurgeVaultComponent } from \"./settings/purge-vault.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"./settings/sponsoring-org-row.component\";\nimport { TaxInfoComponent } from \"./settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"./settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"./settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"./settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"./settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"./settings/update-license.component\";\nimport { UserBillingComponent } from \"./settings/user-billing.component\";\nimport { UserSubscriptionComponent } from \"./settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"./settings/verify-email.component\";\n\nimport { BreachReportComponent } from \"./tools/breach-report.component\";\nimport { ExportComponent } from \"./tools/export.component\";\nimport { ExposedPasswordsReportComponent } from \"./tools/exposed-passwords-report.component\";\nimport { ImportComponent } from \"./tools/import.component\";\nimport { InactiveTwoFactorReportComponent } from \"./tools/inactive-two-factor-report.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./tools/password-generator-history.component\";\nimport { PasswordGeneratorComponent } from \"./tools/password-generator.component\";\nimport { ReusedPasswordsReportComponent } from \"./tools/reused-passwords-report.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./tools/weak-passwords-report.component\";\n\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { BulkActionsComponent } from \"./vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"./vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"./vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"./vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"./vault/bulk-share.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { FolderAddEditComponent } from \"./vault/folder-add-edit.component\";\nimport { GroupingsComponent } from \"./vault/groupings.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultComponent } from \"./vault/vault.component\";\n\nimport { ProvidersComponent } from \"./providers/providers.component\";\n\nimport { AvatarComponent } from \"jslib-angular/components/avatar.component\";\nimport { CalloutComponent } from \"jslib-angular/components/callout.component\";\nimport { IconComponent } from \"jslib-angular/components/icon.component\";\nimport { BitwardenToast } from \"jslib-angular/components/toastr.component\";\nimport { VerifyMasterPasswordComponent } from \"jslib-angular/components/verify-master-password.component\";\n\nimport { A11yTitleDirective } from \"jslib-angular/directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"jslib-angular/directives/api-action.directive\";\nimport { AutofocusDirective } from \"jslib-angular/directives/autofocus.directive\";\nimport { BlurClickDirective } from \"jslib-angular/directives/blur-click.directive\";\nimport { BoxRowDirective } from \"jslib-angular/directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"jslib-angular/directives/fallback-src.directive\";\nimport { InputVerbatimDirective } from \"jslib-angular/directives/input-verbatim.directive\";\nimport { SelectCopyDirective } from \"jslib-angular/directives/select-copy.directive\";\nimport { StopClickDirective } from \"jslib-angular/directives/stop-click.directive\";\nimport { StopPropDirective } from \"jslib-angular/directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"jslib-angular/directives/true-false-value.directive\";\n\nimport { ColorPasswordPipe } from \"jslib-angular/pipes/color-password.pipe\";\nimport { I18nPipe } from \"jslib-angular/pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"jslib-angular/pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"jslib-angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\n\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nimport { DisableSendPolicyComponent } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicyComponent } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicyComponent } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"./organizations/policies/two-factor-authentication.component\";\n\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    ToastrModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n  declarations: [\n    A11yTitleDirective,\n    AcceptEmergencyComponent,\n    AccessComponent,\n    AcceptOrganizationComponent,\n    AccountComponent,\n    SetPasswordComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustSubscription,\n    AdjustStorageComponent,\n    ApiActionDirective,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    AutofocusDirective,\n    AvatarComponent,\n    BlurClickDirective,\n    BoxRowDirective,\n    BreachReportComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    CalloutComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    ColorPasswordPipe,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    ExportComponent,\n    ExposedPasswordsReportComponent,\n    FallbackSrcDirective,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    GroupingsComponent,\n    HintComponent,\n    I18nPipe,\n    IconComponent,\n    ImportComponent,\n    InactiveTwoFactorReportComponent,\n    InputVerbatimDirective,\n    LinkSsoComponent,\n    LockComponent,\n    LoginComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OptionsComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkStatusComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRemoveComponent,\n    OrgCiphersComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEntityUsersComponent,\n    OrgEventsComponent,\n    OrgExportComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgImportComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupingsComponent,\n    OrgGroupsComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPolicyEditComponent,\n    OrgPoliciesComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrganizationsComponent,\n    OrganizationLayoutComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgVaultComponent,\n    OrgWeakPasswordsReportComponent,\n    PasswordGeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordStrengthComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PremiumComponent,\n    ProfileComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    ReusedPasswordsReportComponent,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    StopClickDirective,\n    StopPropDirective,\n    TaxInfoComponent,\n    ToolsComponent,\n    TrueFalseValueDirective,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UnsecuredWebsitesReportComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdateTempPasswordComponent,\n    UpdatePasswordComponent,\n    UserBillingComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserNamePipe,\n    VaultComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n    WeakPasswordsReportComponent,\n    ProvidersComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    MasterPasswordPolicyComponent,\n    SingleOrgPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    RequireSsoPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    DisableSendPolicyComponent,\n    SendOptionsPolicyComponent,\n    ResetPasswordPolicyComponent,\n    VaultTimeoutInputComponent,\n    AddEditCustomFieldsComponent,\n    VerifyMasterPasswordComponent,\n    RemovePasswordComponent,\n  ],\n  exports: [\n    A11yTitleDirective,\n    AvatarComponent,\n    CalloutComponent,\n    ApiActionDirective,\n    StopClickDirective,\n    StopPropDirective,\n    I18nPipe,\n    SearchPipe,\n    UserNamePipe,\n    NavbarComponent,\n    FooterComponent,\n    OrganizationPlansComponent,\n  ],\n  providers: [DatePipe, SearchPipe, UserNamePipe],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  @Input() vault = false;\n\n  providers: Provider[];\n  loaded: boolean = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<ng-container *ngIf=\"vault\">\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <ul class=\"bwi-ul card-ul carets\" *ngIf=\"providers && providers.length\">\n      <li *ngFor=\"let p of providers\">\n        <a [routerLink]=\"['/providers', p.id]\" class=\"text-body\">\n          <i class=\"bwi bwi-li bwi-caret-right\" aria-hidden=\"true\"></i> {{ p.name }}\n          <ng-container *ngIf=\"!p.enabled\">\n            <i\n              class=\"bwi bwi-exclamation-triangle text-danger\"\n              title=\"{{ 'providerIsDisabled' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n          </ng-container>\n        </a>\n      </li>\n    </ul>\n  </ng-container>\n</ng-container>\n<ng-container *ngIf=\"!vault\">\n  <app-navbar></app-navbar>\n  <div class=\"container page-content\">\n    <div class=\"page-header d-flex\">\n      <h1>{{ \"providers\" | i18n }}</h1>\n    </div>\n    <p *ngIf=\"!loaded\" class=\"text-muted\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n    <ng-container *ngIf=\"loaded\">\n      <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n        <tbody>\n          <tr *ngFor=\"let p of providers\">\n            <td width=\"30\">\n              <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n            </td>\n            <td>\n              <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n              <ng-container *ngIf=\"!p.enabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle text-danger\"\n                  title=\"{{ 'providerIsDisabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n              </ng-container>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </ng-container>\n  </div>\n  <app-footer></app-footer>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { SendAccess } from \"jslib-common/models/domain/sendAccess\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { SendAccessView } from \"jslib-common/models/view/sendAccessView\";\n\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendAccessRequest } from \"jslib-common/models/request/sendAccessRequest\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { SendAccessResponse } from \"jslib-common/models/response/sendAccessResponse\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, this.decKey);\n      this.platformUtilsService.saveFile(window, decBuf, null, this.send.file.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        100000\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <p class=\"lead text-center mb-4\">Bitwarden Send</p>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [(ngModel)]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { DatePipe } from \"@angular/common\";\n\nimport { Component } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/send/add-edit.component\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged(o)\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input\n            type=\"text\"\n            readonly\n            id=\"link\"\n            name=\"Link\"\n            [(ngModel)]=\"link\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">{{ \"options\" | i18n }}</h3>\n          <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\">\n            <i\n              class=\"bwi\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !showOptions, 'bwi-chevron-up': showOptions }\"\n            ></i>\n          </a>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\n\nimport { Component } from \"@angular/core\";\n\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"jslib-angular/components/send/efflux-dates.component\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n              [readOnly]=\"disableSend\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        comp.onSavedSend.subscribe(async (s: SendView) => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedSend.subscribe(async (s: SendView) => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <ul class=\"bwi-ul card-ul\">\n            <li [ngClass]=\"{ active: selectedAll }\">\n              <a href=\"#\" appStopClick (click)=\"selectAll()\">\n                <i class=\"bwi bwi-li bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n              </a>\n            </li>\n          </ul>\n          <h3>{{ \"types\" | i18n }}</h3>\n          <ul class=\"bwi-ul card-ul\">\n            <li [ngClass]=\"{ active: selectedType === sendType.Text }\">\n              <a href=\"#\" appStopClick (click)=\"selectType(sendType.Text)\">\n                <i class=\"bwi bwi-li bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n              </a>\n            </li>\n            <li [ngClass]=\"{ active: selectedType === sendType.File }\">\n              <a href=\"#\" appStopClick (click)=\"selectType(sendType.File)\">\n                <i class=\"bwi bwi-li bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <div class=\"dropdown\" appListDropdown>\n                <button\n                  class=\"btn btn-outline-secondary dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  appA11yTitle=\"{{ 'options' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                  <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(s)\">\n                    <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                    {{ \"copySendLink\" | i18n }}\n                  </a>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"removePassword(s)\"\n                    *ngIf=\"s.password && !disableSend\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                    {{ \"removePassword\" | i18n }}\n                  </a>\n                  <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(s)\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </a>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\n\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\n\n@Injectable()\nexport class EventService {\n  constructor(private i18nService: I18nService, private policyService: PolicyService) {}\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      /*\n            case EventType.Organization_ClientExportedVault:\n                msg = this.i18nService.t('exportedOrganizationVault');\n                break;\n            */\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      // Policies\n      case EventType.Policy_Updated:\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policies = await this.policyService.getAll();\n        const policy = policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/groups?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nimport { ModalRef } from \"jslib-angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"jslib-angular/services/modal.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen: boolean = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class OrganizationGuardService implements CanActivate {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const org = await this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\n\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\n@Injectable()\nexport class OrganizationTypeGuardService implements CanActivate {\n  constructor(private organizationService: OrganizationService, private router: Router) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const org = await this.organizationService.get(route.params.organizationId);\n    const permissions = route.data == null ? null : (route.data.permissions as Permissions[]);\n\n    if (\n      (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && org.canAccessEventLogs) ||\n      (permissions.indexOf(Permissions.AccessImportExport) !== -1 && org.canAccessImportExport) ||\n      (permissions.indexOf(Permissions.AccessReports) !== -1 && org.canAccessReports) ||\n      (permissions.indexOf(Permissions.CreateNewCollections) !== -1 &&\n        org.canCreateNewCollections) ||\n      (permissions.indexOf(Permissions.EditAnyCollection) !== -1 && org.canEditAnyCollection) ||\n      (permissions.indexOf(Permissions.DeleteAnyCollection) !== -1 && org.canDeleteAnyCollection) ||\n      (permissions.indexOf(Permissions.EditAssignedCollections) !== -1 &&\n        org.canEditAssignedCollections) ||\n      (permissions.indexOf(Permissions.DeleteAssignedCollections) !== -1 &&\n        org.canDeleteAssignedCollections) ||\n      (permissions.indexOf(Permissions.ManageGroups) !== -1 && org.canManageGroups) ||\n      (permissions.indexOf(Permissions.ManageOrganization) !== -1 && org.isOwner) ||\n      (permissions.indexOf(Permissions.ManagePolicies) !== -1 && org.canManagePolicies) ||\n      (permissions.indexOf(Permissions.ManageUsers) !== -1 && org.canManageUsers) ||\n      (permissions.indexOf(Permissions.ManageUsersPassword) !== -1 && org.canManageUsersPassword) ||\n      (permissions.indexOf(Permissions.ManageSso) !== -1 && org.canManageSso)\n    ) {\n      return true;\n    }\n\n    this.router.navigate([\"/organizations\", org.id]);\n    return false;\n  }\n}\n","import { BasePolicy } from \"../organizations/policies/base-policy.component\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n    router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.previousUrl = this.currentUrl;\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let titleId: string = null;\n        let rawTitle: string = null;\n        let child = this.activatedRoute.firstChild;\n        while (child != null) {\n          if (child.firstChild != null) {\n            child = child.firstChild;\n          } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\n            rawTitle = child.snapshot.data.title;\n            break;\n          } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\n            titleId = child.snapshot.data.titleId;\n            break;\n          } else {\n            titleId = null;\n            rawTitle = null;\n            break;\n          }\n        }\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n      }\n    });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import { APP_INITIALIZER, Injector, NgModule } from \"@angular/core\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { BroadcasterMessagingService } from \"../../services/broadcasterMessaging.service\";\nimport { HtmlStorageService } from \"../../services/htmlStorage.service\";\nimport { I18nService } from \"../../services/i18n.service\";\nimport { MemoryStorageService } from \"../../services/memoryStorage.service\";\nimport { PasswordRepromptService } from \"../../services/passwordReprompt.service\";\nimport { StateService } from \"../../services/state.service\";\nimport { StateMigrationService } from \"../../services/stateMigration.service\";\nimport { WebPlatformUtilsService } from \"../../services/webPlatformUtils.service\";\n\nimport { EventService } from \"./event.service\";\nimport { ModalService } from \"./modal.service\";\nimport { OrganizationGuardService } from \"./organization-guard.service\";\nimport { OrganizationTypeGuardService } from \"./organization-type-guard.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\n\nimport { JslibServicesModule } from \"jslib-angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"jslib-angular/services/modal.service\";\n\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { ContainerService } from \"jslib-common/services/container.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EventService as EventLoggingService } from \"jslib-common/services/event.service\";\nimport { ImportService } from \"jslib-common/services/import.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\n\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventLoggingServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { ImportService as ImportServiceAbstraction } from \"jslib-common/abstractions/import.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { Account } from \"../../models/account\";\nimport { GlobalState } from \"../../models/globalState\";\n\nimport { GlobalStateFactory } from \"jslib-common/factories/globalStateFactory\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\n\nimport { StateService as StateServiceAbstraction } from \"../../abstractions/state.service\";\n\nexport function initFactory(\n  window: Window,\n  environmentService: EnvironmentServiceAbstraction,\n  notificationsService: NotificationsServiceAbstraction,\n  vaultTimeoutService: VaultTimeoutService,\n  i18nService: I18nService,\n  eventLoggingService: EventLoggingService,\n  authService: AuthService,\n  stateService: StateServiceAbstraction,\n  platformUtilsService: PlatformUtilsServiceAbstraction,\n  cryptoService: CryptoServiceAbstraction\n): Function {\n  return async () => {\n    await stateService.init();\n\n    const urls = process.env.URLS as Urls;\n    urls.base ??= window.location.origin;\n    environmentService.setUrls(urls);\n\n    setTimeout(() => notificationsService.init(), 3000);\n\n    vaultTimeoutService.init(true);\n    const locale = await stateService.getLocale();\n    await i18nService.init(locale);\n    eventLoggingService.init(true);\n    authService.init();\n    const htmlEl = window.document.documentElement;\n    htmlEl.classList.add(\"locale_\" + i18nService.translationLocale);\n\n    // Initial theme is set in index.html which must be updated if there are any changes to theming logic\n    platformUtilsService.onDefaultSystemThemeChange(async (sysTheme) => {\n      const bwTheme = await stateService.getTheme();\n      if (bwTheme === ThemeType.System) {\n        htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n        htmlEl.classList.add(\"theme_\" + sysTheme);\n      }\n    });\n\n    const containerService = new ContainerService(cryptoService);\n    containerService.attachToWindow(window);\n  };\n}\n\n@NgModule({\n  imports: [ToastrModule, JslibServicesModule],\n  declarations: [],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initFactory,\n      deps: [\n        \"WINDOW\",\n        EnvironmentServiceAbstraction,\n        NotificationsServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        I18nServiceAbstraction,\n        EventLoggingServiceAbstraction,\n        AuthServiceAbstraction,\n        StateServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n      multi: true,\n    },\n    OrganizationGuardService,\n    OrganizationTypeGuardService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: I18nServiceAbstraction,\n      useFactory: (window: Window) => new I18nService(window.navigator.language, \"locales\"),\n      deps: [\"WINDOW\"],\n    },\n    { provide: StorageServiceAbstraction, useClass: HtmlStorageService },\n    {\n      provide: \"SECURE_STORAGE\",\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useFactory: (\n        i18nService: I18nServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) => new WebPlatformUtilsService(i18nService, messagingService, logService, stateService),\n      deps: [\n        I18nServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: ImportServiceAbstraction,\n      useClass: ImportService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CollectionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction\n      ) =>\n        new StateMigrationService(\n          storageService,\n          secureStorageService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [StorageServiceAbstraction, \"SECURE_STORAGE\"],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction,\n        logService: LogService,\n        stateMigrationService: StateMigrationServiceAbstraction\n      ) =>\n        new StateService(\n          storageService,\n          secureStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [\n        StorageServiceAbstraction,\n        \"SECURE_STORAGE\",\n        LogService,\n        StateMigrationServiceAbstraction,\n      ],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangePassword = true;\n  showChangeKdf = true;\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail =\n      this.showChangeKdf =\n      this.showChangePassword =\n        !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<ng-container *ngIf=\"showChangePassword\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n  </div>\n  <app-change-password></app-change-password>\n</ng-container>\n<ng-container *ngIf=\"showChangeKdf\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"encKeySettings\" | i18n }}</h1>\n  </div>\n  <app-change-kdf></app-change-kdf>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { PayPalConfig } from \"jslib-common/abstractions/environment.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\n\nimport { BitPayInvoiceRequest } from \"jslib-common/models/request/bitPayInvoiceRequest\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PaymentRequest } from \"jslib-common/models/request/paymentRequest\";\n\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.apiService.postOrganizationPayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { StorageRequest } from \"jslib-common/models/request/storageRequest\";\n\nimport { PaymentResponse } from \"jslib-common/models/response/paymentResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.apiService.postOrganizationStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\n\nimport { ApiKeyResponse } from \"jslib-common/models/response/apiKeyResponse\";\n\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-verify-master-password\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-verify-master-password>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { EmailRequest } from \"jslib-common/models/request/emailRequest\";\nimport { EmailTokenRequest } from \"jslib-common/models/request/emailTokenRequest\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { KdfRequest } from \"jslib-common/models/request/kdfRequest\";\n\nimport { KdfType } from \"jslib-common/enums/kdfType\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (100000 | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"changeKdf\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"jslib-angular/components/change-password.component\";\n\nimport { EmergencyAccessStatusType } from \"jslib-common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { CipherWithIdRequest } from \"jslib-common/models/request/cipherWithIdRequest\";\nimport { EmergencyAccessUpdateRequest } from \"jslib-common/models/request/emergencyAccessUpdateRequest\";\nimport { FolderWithIdRequest } from \"jslib-common/models/request/folderWithIdRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { PasswordRequest } from \"jslib-common/models/request/passwordRequest\";\nimport { SendWithIdRequest } from \"jslib-common/models/request/sendWithIdRequest\";\nimport { UpdateKeyRequest } from \"jslib-common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await this.folderService.getAllDecrypted();\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0]);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.apiService.getOrganizationKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n    }\n  }\n}\n","<app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          (input)=\"updatePasswordStrength()\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [score]=\"masterPasswordScore\"\n          [showText]=\"true\"\n        ></app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"changeMasterPassword\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newOrganizationDesc\" | i18n }}</p>\n<app-organization-plans></app-organization-plans>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.deleteAccount(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { UpdateDomainsRequest } from \"jslib-common/models/request/updateDomainsRequest\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { EmergencyAccessType } from \"jslib-common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"jslib-common/models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessUpdateRequest } from \"jslib-common/models/request/emergencyAccessUpdateRequest\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly: boolean = false;\n  editMode: boolean = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          <span class=\"badge badge-primary\" *ngIf=\"readOnly\">{{ \"premium\" | i18n }}</span>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          #submitBtn\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          [disabled]=\"loading || submitBtn.loading || readOnly\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"loading || submitBtn.loading\"\n          ></i>\n          <span *ngIf=\"!loading && !submitBtn.loading\">{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { PolicyData } from \"jslib-common/models/data/policyData\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessPasswordRequest } from \"jslib-common/models/request/emergencyAccessPasswordRequest\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nimport { ChangePasswordComponent } from \"jslib-angular/components/change-password.component\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        policies\n      );\n    }\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                (input)=\"updatePasswordStrength()\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessViewResponse } from \"jslib-common/models/response/emergencyAccessResponse\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { EmergencyAccessConfirmRequest } from \"jslib-common/models/request/emergencyAccessConfirmRequest\";\n\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"jslib-common/models/response/emergencyAccessResponse\";\n\nimport { EmergencyAccessStatusType } from \"jslib-common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"jslib-common/enums/emergencyAccessType\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <a\n      href=\"#\"\n      appStopClick\n      class=\"badge badge-primary\"\n      *ngIf=\"!canAccessPremium\"\n      (click)=\"premiumRequired()\"\n    >\n      {{ \"premium\" | i18n }}\n    </a>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          class=\"badge badge-secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{\n          \"accepted\" | i18n\n        }}</span>\n        <span\n          class=\"badge badge-warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          class=\"badge badge-success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{\n          \"view\" | i18n\n        }}</span>\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <div class=\"dropdown\" appListDropdown>\n          <button\n            class=\"btn btn-outline-secondary dropdown-toggle\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <div class=\"dropdown-menu dropdown-menu-right\">\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              appStopClick\n              (click)=\"reinvite(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            >\n              <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n              {{ \"resendInvitation\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item text-success\"\n              href=\"#\"\n              appStopClick\n              (click)=\"confirm(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            >\n              <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n              {{ \"confirm\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item text-success\"\n              href=\"#\"\n              appStopClick\n              (click)=\"approve(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            >\n              <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n              {{ \"approve\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item text-warning\"\n              href=\"#\"\n              appStopClick\n              (click)=\"reject(c)\"\n              *ngIf=\"\n                c.status === emergencyAccessStatusType.RecoveryInitiated ||\n                c.status === emergencyAccessStatusType.RecoveryApproved\n              \"\n            >\n              <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n              {{ \"reject\" | i18n }}\n            </a>\n            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\">\n              <i class=\"bwi bwi-fw bwi-remove\" aria-hidden=\"true\"></i>\n              {{ \"remove\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<p *ngIf=\"!trustedContacts || !trustedContacts.length\">{{ \"noTrustedContacts\" | i18n }}</p>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span\n          class=\"badge badge-secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{\n          \"accepted\" | i18n\n        }}</span>\n        <span\n          class=\"badge badge-warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          class=\"badge badge-success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{\n          \"view\" | i18n\n        }}</span>\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <div class=\"dropdown\" appListDropdown>\n          <button\n            class=\"btn btn-outline-secondary dropdown-toggle\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <div class=\"dropdown-menu dropdown-menu-right\">\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              appStopClick\n              (click)=\"requestAccess(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            >\n              <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n              {{ \"requestAccess\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              appStopClick\n              (click)=\"takeover(c)\"\n              *ngIf=\"\n                c.status === emergencyAccessStatusType.RecoveryApproved &&\n                c.type === emergencyAccessType.Takeover\n              \"\n            >\n              <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n              {{ \"takeover\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item\"\n              [routerLink]=\"c.id\"\n              *ngIf=\"\n                c.status === emergencyAccessStatusType.RecoveryApproved &&\n                c.type === emergencyAccessType.View\n              \"\n            >\n              <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n              {{ \"view\" | i18n }}\n            </a>\n            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\">\n              <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n              {{ \"remove\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<p *ngIf=\"!grantedContacts || !grantedContacts.length\">{{ \"noGrantedAccess\" | i18n }}</p>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\n\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { SsoComponent } from \"jslib-angular/components/sso.component\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri: string = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"submit(returnUri, true)\">\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  vaultTimeoutAction: string = \"lock\";\n  disableIcons: boolean;\n  enableGravatars: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: FormControl = new FormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.disableIcons = await this.stateService.getDisableFavicon();\n    this.enableGravatars = await this.stateService.getEnableGravitars();\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = await this.stateService.getLocale();\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(this.disableIcons);\n    await this.stateService.setEnableGravitars(this.enableGravatars);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.stateService.setTheme(this.theme);\n      this.startingTheme = this.theme;\n      const effectiveTheme = await this.platformUtilsService.getEffectiveTheme();\n      const htmlEl = window.document.documentElement;\n      htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n      htmlEl.classList.add(\"theme_\" + effectiveTheme);\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"optionsUpdated\"));\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"options\" | i18n }}</h1>\n</div>\n<p>{{ \"optionsDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"disableIcons\"\n        name=\"DisableIcons\"\n        [(ngModel)]=\"disableIcons\"\n      />\n      <label class=\"form-check-label\" for=\"disableIcons\">\n        {{ \"disableIcons\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"disableIconsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableGravatars\"\n        name=\"enableGravatars\"\n        [(ngModel)]=\"enableGravatars\"\n      />\n      <label class=\"form-check-label\" for=\"enableGravatars\">\n        {{ \"enableGravatars\" | i18n }}\n      </label>\n      <a\n        href=\"https://gravatar.com/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableGravatarsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\n\nimport { OrganizationCreateRequest } from \"jslib-common/models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"jslib-common/models/request/organizationKeysRequest\";\nimport { OrganizationUpgradeRequest } from \"jslib-common/models/request/organizationUpgradeRequest\";\nimport { ProviderOrganizationCreateRequest } from \"jslib-common/models/request/provider/providerOrganizationCreateRequest\";\n\nimport { PlanResponse } from \"jslib-common/models/response/planResponse\";\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  loading: boolean = true;\n  selfHosted: boolean = false;\n  ownedBusiness: boolean = false;\n  premiumAccessAddon: boolean = false;\n  additionalStorage: number = 0;\n  additionalSeats: number = 0;\n  name: string;\n  billingEmail: string;\n  clientOwnerEmail: string;\n  businessName: string;\n  productTypes = ProductType;\n  formPromise: Promise<any>;\n  singleOrgPolicyBlock: boolean = false;\n  discount = 0;\n\n  plans: PlanResponse[];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.ownedBusiness = true;\n      }\n    }\n\n    if (this.providerId) {\n      this.ownedBusiness = true;\n      this.changedOwnedBusiness();\n    }\n\n    this.loading = false;\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.plan);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.ownedBusiness) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans.filter(\n      (plan) => !plan.legacyYear && !plan.disabled && plan.product === this.product\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return plan.additionalStoragePricePerGb * Math.abs(this.additionalStorage || 0);\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.additionalSeats || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (this.selectedPlan.hasAdditionalSeatsOption && this.additionalSeats) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (this.selectedPlan.hasAdditionalStorageOption && this.additionalStorage) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.plan = this.selectablePlans[0].type;\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.premiumAccessAddon = false;\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.additionalStorage = 0;\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.additionalSeats = 0;\n    } else if (\n      !this.additionalSeats &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.additionalSeats = 1;\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.ownedBusiness || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.product = ProductType.Teams;\n    this.plan = PlanType.TeamsAnnually;\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n        if (!this.acceptingSponsorship) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async userHasBlockingSingleOrgPolicy() {\n    return this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.ownedBusiness ? this.businessName : null;\n    request.additionalSeats = this.additionalSeats;\n    request.additionalStorageGb = this.additionalStorage;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.name;\n    request.billingEmail = this.billingEmail;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.ownedBusiness ? this.businessName : null;\n      request.additionalSeats = this.additionalSeats;\n      request.additionalStorageGb = this.additionalStorage;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(this.clientOwnerEmail, request);\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.apiService.postOrganization(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.apiService.postOrganizationLicense(fd);\n    const orgId = response.id;\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.apiService.postOrganizationKeys(orgId, request);\n\n    return orgId;\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n>\n  <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"row\" *ngIf=\"createOrganization\">\n    <div class=\"form-group col-6\">\n      <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n      <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n      <input\n        id=\"billingEmail\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"BillingEmail\"\n        [(ngModel)]=\"billingEmail\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!!providerId\">\n      <label for=\"email\">{{ \"clientOwnerEmail\" | i18n }}</label>\n      <input\n        id=\"email\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"Email\"\n        [(ngModel)]=\"clientOwnerEmail\"\n        required\n      />\n      <small class=\"text-muted\">{{ \"clientOwnerDesc\" | i18n: \"20\" }}</small>\n    </div>\n  </div>\n  <div *ngIf=\"!providerId && !acceptingSponsorship\">\n    <div class=\"form-group form-check\">\n      <input\n        id=\"ownedBusiness\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        name=\"OwnedBusiness\"\n        [(ngModel)]=\"ownedBusiness\"\n        (change)=\"changedOwnedBusiness()\"\n      />\n      <label for=\"ownedBusiness\" class=\"form-check-label\">{{\n        \"accountOwnedBusiness\" | i18n\n      }}</label>\n    </div>\n    <div class=\"row\" *ngIf=\"ownedBusiness\">\n      <div class=\"form-group col-6\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"businessName\"\n        />\n      </div>\n    </div>\n  </div>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      [(ngModel)]=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"product !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"AdditionalSeats\"\n            [(ngModel)]=\"additionalSeats\"\n            min=\"1\"\n            max=\"100000\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"AdditionalSeats\"\n          [(ngModel)]=\"additionalSeats\"\n          min=\"0\"\n          max=\"100000\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"AdditionalStorageGb\"\n          [(ngModel)]=\"additionalStorage\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"PremiumAccessAddon\"\n            [(ngModel)]=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"BillingInterval\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        [(ngModel)]=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ additionalSeats || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ additionalSeats || 0 }} &times; {{ selectablePlan.seatPrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"month\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\n\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Component({\n  selector: \"app-organizations\",\n  templateUrl: \"organizations.component.html\",\n})\nexport class OrganizationsComponent implements OnInit {\n  @Input() vault = false;\n\n  organizations: Organization[];\n  policies: Policy[];\n  loaded: boolean = false;\n  actionPromise: Promise<any>;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    if (!this.vault) {\n      await this.syncService.fullSync(true);\n      await this.load();\n    }\n  }\n\n  async load() {\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.organizations = orgs;\n    this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n    this.loaded = true;\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    // Set variables\n    let keyString: string = null;\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    // Enrolling\n    if (!org.resetPasswordEnrolled) {\n      // Alert user about enrollment\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"resetPasswordEnrollmentWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        return;\n      }\n\n      // Retrieve Public Key\n      this.actionPromise = this.apiService\n        .getOrganizationKeys(org.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n          }\n\n          const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n          // RSA Encrypt user's encKey.key with organization public key\n          const encKey = await this.cryptoService.getEncKey();\n          const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n          keyString = encryptedKey.encryptedString;\n          toastStringRef = \"enrollPasswordResetSuccess\";\n\n          // Create request and execute enrollment\n          const request = new OrganizationUserResetPasswordEnrollmentRequest();\n          request.resetPasswordKey = keyString;\n          return this.apiService.putOrganizationUserResetPasswordEnrollment(\n            org.id,\n            org.userId,\n            request\n          );\n        })\n        .then(() => {\n          return this.syncService.fullSync(true);\n        });\n    } else {\n      // Withdrawal\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.resetPasswordKey = keyString;\n      this.actionPromise = this.apiService\n        .putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request)\n        .then(() => {\n          return this.syncService.fullSync(true);\n        });\n    }\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<ng-container *ngIf=\"vault\">\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <ul class=\"bwi-ul card-ul carets\" *ngIf=\"organizations && organizations.length\">\n      <li *ngFor=\"let o of organizations\">\n        <a [routerLink]=\"['/organizations', o.id]\" class=\"text-body\">\n          <i class=\"bwi bwi-li bwi-caret-right\" aria-hidden=\"true\"></i> {{ o.name }}\n          <ng-container *ngIf=\"!o.enabled\">\n            <i\n              class=\"bwi bwi-exclamation-triangle text-danger\"\n              title=\"{{ 'organizationIsDisabled' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"organizationIsDisabled\" | i18n }}</span>\n          </ng-container>\n        </a>\n      </li>\n    </ul>\n    <p *ngIf=\"!organizations || !organizations.length\">{{ \"noOrganizationsList\" | i18n }}</p>\n  </ng-container>\n  <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-block btn-outline-primary\">\n    <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    {{ \"newOrganization\" | i18n }}\n  </a>\n</ng-container>\n<ng-container *ngIf=\"!vault\">\n  <div class=\"page-header d-flex\">\n    <h1>\n      {{ \"organizations\" | i18n }}\n      <small [appApiAction]=\"actionPromise\" #action>\n        <ng-container *ngIf=\"action.loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n      </small>\n    </h1>\n    <a\n      href=\"#\"\n      routerLink=\"/settings/create-organization\"\n      class=\"btn btn-sm btn-outline-primary ml-auto\"\n      *ngIf=\"!loaded || (organizations && organizations.length)\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newOrganization\" | i18n }}\n    </a>\n  </div>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"loaded\">\n    <ng-container *ngIf=\"!organizations || !organizations.length\">\n      <p>{{ \"noOrganizationsList\" | i18n }}</p>\n      <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-outline-primary\">\n        <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n        {{ \"newOrganization\" | i18n }}\n      </a>\n    </ng-container>\n    <table class=\"table table-hover table-list\" *ngIf=\"organizations && organizations.length\">\n      <tbody>\n        <tr *ngFor=\"let o of organizations\">\n          <td width=\"30\">\n            <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/organizations', o.id]\">{{ o.name }}</a>\n            <ng-container *ngIf=\"!o.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'organizationIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"organizationIsDisabled\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(o)\">\n              <i\n                class=\"bwi bwi-key\"\n                appStopProp\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  *ngIf=\"allowEnrollmentChanges(o) && !o.resetPasswordEnrolled\"\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"toggleResetPasswordEnrollment(o)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"enrollPasswordReset\" | i18n }}\n                </a>\n                <a\n                  *ngIf=\"allowEnrollmentChanges(o) && o.resetPasswordEnrolled\"\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"toggleResetPasswordEnrollment(o)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n                  {{ \"withdrawPasswordReset\" | i18n }}\n                </a>\n                <ng-container *ngIf=\"o.useSso && o.identifier\">\n                  <a\n                    *ngIf=\"o.ssoBound; else linkSso\"\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"unlinkSso(o)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n                    {{ \"unlinkSso\" | i18n }}\n                  </a>\n                  <ng-template #linkSso>\n                    <app-link-sso [organization]=\"o\"> </app-link-sso>\n                  </ng-template>\n                </ng-container>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"leave(o)\">\n                  <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n                  {{ \"leave\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport ThemeVariables from \"src/scss/export.module.scss\";\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    await this.setTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // tslint:disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private async setTheme() {\n    const theme = await this.platformUtilsService.getEffectiveTheme();\n    if (theme === ThemeType.Dark) {\n      this.StripeElementStyle.base.color = darkInputColor;\n      this.StripeElementStyle.base[\"::placeholder\"].color = darkInputPlaceholderColor;\n      this.StripeElementStyle.invalid.color = darkInputColor;\n    } else {\n      this.StripeElementStyle.base.color = lightInputColor;\n      this.StripeElementStyle.base[\"::placeholder\"].color = lightInputPlaceholderColor;\n      this.StripeElementStyle.invalid.color = lightInputColor;\n    }\n  }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div class=\"form-group col-4\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div class=\"form-group col-4\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premium = await this.tokenService.getPremium();\n    if (premium) {\n      this.router.navigate([\"/settings/subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<app-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</app-callout>\n<app-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    class=\"btn btn-outline-secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</app-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { UpdateProfileRequest } from \"jslib-common/models/request/updateProfileRequest\";\n\nimport { ProfileResponse } from \"jslib-common/models/response/profileResponse\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n  hidePasswordHint = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n    this.hidePasswordHint = await this.keyConnectorService.getUsesKeyConnector();\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n      <div class=\"form-group\" *ngIf=\"!hidePasswordHint\">\n        <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n        <input\n          id=\"masterPasswordHint\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"MasterPasswordHint\"\n          [(ngModel)]=\"profile.masterPasswordHint\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <app-avatar\n          data=\"{{ profile | userName }}\"\n          [email]=\"profile.email\"\n          dynamic=\"true\"\n          size=\"75\"\n          fontSize=\"35\"\n        >\n        </app-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.tokenService.getPremium();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"options\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"options\" | i18n }}\n          </a>\n          <a routerLink=\"organizations\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"organizations\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"premium\"\n          >\n            {{ \"premiumMembership\" | i18n }}\n          </a>\n          <a\n            routerLink=\"premium\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!selfHosted\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { PlanSponsorshipType } from \"jslib-common/enums/planSponsorshipType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit {\n  loading = false;\n\n  availableSponsorshipOrgs: Organization[] = [];\n  activeSponsorshipOrgs: Organization[] = [];\n  selectedSponsorshipOrgId: string = \"\";\n  sponsorshipEmail: string = \"\";\n\n  // Conditional display properties\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(this.selectedSponsorshipOrgId, {\n      sponsoredEmail: this.sponsorshipEmail,\n      planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n      friendlyName: this.sponsorshipEmail,\n    });\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.load(true);\n  }\n\n  async load(forceReload: boolean = false) {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    if (forceReload) {\n      await this.syncService.fullSync(true);\n    }\n\n    const allOrgs = await this.organizationService.getAll();\n    this.availableSponsorshipOrgs = allOrgs.filter((org) => org.familySponsorshipAvailable);\n\n    this.activeSponsorshipOrgs = allOrgs.filter(\n      (org) => org.familySponsorshipFriendlyName !== null\n    );\n\n    if (this.availableSponsorshipOrgs.length === 1) {\n      this.selectedSponsorshipOrgId = this.availableSponsorshipOrgs[0].id;\n    }\n    this.loading = false;\n  }\n\n  private async resetForm() {\n    this.sponsorshipEmail = \"\";\n    this.selectedSponsorshipOrgId = \"\";\n  }\n\n  get anyActiveSponsorships(): boolean {\n    return this.activeSponsorshipOrgs.length > 0;\n  }\n\n  get anyOrgsAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 0;\n  }\n\n  get moreThanOneOrgAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 1;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable\"\n  >\n    <div *ngIf=\"moreThanOneOrgAvailable\" class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"accountEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"accountEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        [(ngModel)]=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n      />\n      <button class=\"btn btn-primary btn-submit mt-4\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs\">\n            <tr sponsoring-org-row [sponsoringOrg]=\"o\" (sponsorshipRemoved)=\"load(true)\"></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent {\n  @Input() sponsoringOrg: Organization = null;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"resendEmailBtn.loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"revokeSponsorshipBtn.loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationTaxInfoUpdateRequest } from \"jslib-common/models/request/organizationTaxInfoUpdateRequest\";\nimport { TaxInfoUpdateRequest } from \"jslib-common/models/request/taxInfoUpdateRequest\";\nimport { TaxRateResponse } from \"jslib-common/models/response/taxRateResponse\";\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\nexport class TaxInfoComponent {\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading: boolean = true;\n  organizationId: string;\n  taxInfo: any = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: any = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        const taxInfo = await this.apiService.getTaxInfo();\n        if (taxInfo) {\n          this.taxInfo.postalCode = taxInfo.postalCode;\n          this.taxInfo.country = taxInfo.country || \"US\";\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    const taxRates = await this.apiService.getTaxRates();\n    this.taxRates = taxRates.data;\n    this.loading = false;\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.apiService.putOrganizationTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"col-3\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { UpdateTwoFactorAuthenticatorRequest } from \"jslib-common/models/request/updateTwoFactorAuthenticatorRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"jslib-common/models/response/twoFactorAuthenticatorResponse\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<any>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      const qr = new (window as any).QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\n\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { TwoFactorProviderRequest } from \"jslib-common/models/request/twoFactorProviderRequest\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: any) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<any>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"jslib-common/models/request/updateTwoFactorDuoRequest\";\nimport { TwoFactorDuoResponse } from \"jslib-common/models/response/twoFactorDuoResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" title=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorEmailRequest } from \"jslib-common/models/request/updateTwoFactorEmailRequest\";\nimport { TwoFactorEmailResponse } from \"jslib-common/models/response/twoFactorEmailResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"sendBtn.loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { TwoFactorRecoverResponse } from \"jslib-common/models/response/twoFactorRescoverResponse\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { TwoFactorProviders } from \"jslib-common/services/auth.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { ModalRef } from \"jslib-angular/components/modal/modal.ref\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  modal: ModalRef;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    for (const key in TwoFactorProviders) {\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n    await this.load();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator:\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      case TwoFactorProviderType.Yubikey:\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      case TwoFactorProviderType.Duo:\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      case TwoFactorProviderType.Email:\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      case TwoFactorProviderType.WebAuthn:\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = await this.policyService.policyAppliesToUser(\n        PolicyType.TwoFactorAuthentication\n      );\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { Verification } from \"jslib-common/types/verification\";\n\nimport { TwoFactorAuthenticatorResponse } from \"jslib-common/models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"jslib-common/models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"jslib-common/models/response/twoFactorEmailResponse\";\nimport { TwoFactorRecoverResponse } from \"jslib-common/models/response/twoFactorRescoverResponse\";\nimport { TwoFactorWebAuthnResponse } from \"jslib-common/models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"jslib-common/models/response/twoFactorYubiKeyResponse\";\n\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\n\ntype TwoFactorResponse =\n  | TwoFactorRecoverResponse\n  | TwoFactorDuoResponse\n  | TwoFactorEmailResponse\n  | TwoFactorWebAuthnResponse\n  | TwoFactorAuthenticatorResponse\n  | TwoFactorYubiKeyResponse;\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<any>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-verify-master-password [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-verify-master-password>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"jslib-common/models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"jslib-common/models/request/updateTwoFactorWebAuthnRequest\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"jslib-common/models/response/twoFactorWebAuthnResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: any[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: any) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // tslint:disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // tslint:disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"removeKeyBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"readKeyBtn.loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!readKeyBtn.loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { UpdateTwoFactorYubioOtpRequest } from \"jslib-common/models/request/updateTwoFactorYubioOtpRequest\";\nimport { TwoFactorYubiKeyResponse } from \"jslib-common/models/response/twoFactorYubiKeyResponse\";\n\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: any[];\n  nfc = false;\n\n  formPromise: Promise<any>;\n  disablePromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: any) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\nimport { EncString } from \"jslib-common/models/domain/encString\";\n\nimport { CipherWithIdRequest } from \"jslib-common/models/request/cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"jslib-common/models/request/folderWithIdRequest\";\nimport { UpdateKeyRequest } from \"jslib-common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await this.folderService.getAllDecrypted();\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<any> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { BillingResponse } from \"jslib-common/models/response/billingResponse\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { TransactionType } from \"jslib-common/enums/transactionType\";\nimport { VerifyBankRequest } from \"jslib-common/models/request/verifyBankRequest\";\n\n@Component({\n  selector: \"app-user-billing\",\n  templateUrl: \"user-billing.component.html\",\n})\nexport class UserBillingComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n  organizationId: string;\n  verifyAmount1: number;\n  verifyAmount2: number;\n\n  verifyBankPromise: Promise<any>;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    if (this.organizationId != null) {\n      this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n    } else {\n      this.billing = await this.apiService.getUserBilling();\n    }\n    this.loading = false;\n  }\n\n  async verifyBank() {\n    if (this.loading) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyAmount1;\n      request.amount2 = this.verifyAmount2;\n      this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(\n        this.organizationId,\n        request\n      );\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { SubscriptionResponse } from \"jslib-common/models/response/subscriptionResponse\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private tokenService: TokenService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.tokenService.getPremium()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.platformUtilsService.saveFile(\n      window,\n      licenseString,\n      null,\n      \"bitwarden_premium_license.json\"\n    );\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"premiumMembership\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"ml-1 btn btn-outline-secondary\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"jslib-angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.postAccountVerifyEmail();\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"checkInboxForVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"sendBtn.loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"jslib-common/models/response/breachAccountResponse\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"checkBreaches\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async (c: CipherView) => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedCipher.subscribe(async (c: CipherView) => {\n          modal.close();\n          await this.load();\n        });\n        comp.onRestoredCipher.subscribe(async (c: CipherView) => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    } else {\n      const accessPremium = await this.stateService.getCanAccessPremium();\n      if (this.requiresPaid && !accessPremium) {\n        this.messagingService.send(\"premiumRequired\");\n        this.loading = false;\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { ExportComponent as BaseExportComponent } from \"jslib-angular/components/export.component\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  organizationId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"exportSuccess\"));\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ImportOption, ImportService } from \"jslib-common/abstractions/import.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\n@Component({\n  selector: \"app-import\",\n  templateUrl: \"import.component.html\",\n})\nexport class ImportComponent implements OnInit {\n  featuredImportOptions: ImportOption[];\n  importOptions: ImportOption[];\n  format: string = null;\n  fileContents: string;\n  formPromise: Promise<Error>;\n  loading: boolean = false;\n  importBlockedByPolicy: boolean = false;\n\n  protected organizationId: string = null;\n  protected successNavigate: any[] = [\"vault\"];\n\n  constructor(\n    protected i18nService: I18nService,\n    protected importService: ImportService,\n    protected router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.setImportOptions();\n    this.importOptions.sort((a, b) => {\n      if (a.name == null && b.name != null) {\n        return -1;\n      }\n      if (a.name != null && b.name == null) {\n        return 1;\n      }\n      if (a.name == null && b.name == null) {\n        return 0;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(a.name, b.name)\n        : a.name.localeCompare(b.name);\n    });\n\n    this.importBlockedByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.PersonalOwnership\n    );\n  }\n\n  async submit() {\n    if (this.importBlockedByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalOwnershipPolicyInEffectImports\")\n      );\n      return;\n    }\n\n    this.loading = true;\n\n    const importer = this.importService.getImporter(this.format, this.organizationId);\n    if (importer === null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFormat\")\n      );\n      this.loading = false;\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (\n      (files == null || files.length === 0) &&\n      (this.fileContents == null || this.fileContents === \"\")\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      this.loading = false;\n      return;\n    }\n\n    let fileContents = this.fileContents;\n    if (files != null && files.length > 0) {\n      try {\n        const content = await this.getFileContents(files[0]);\n        if (content != null) {\n          fileContents = content;\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (fileContents == null || fileContents === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      this.loading = false;\n      return;\n    }\n\n    try {\n      this.formPromise = this.importService.import(importer, fileContents, this.organizationId);\n      const error = await this.formPromise;\n      if (error != null) {\n        this.error(error);\n        this.loading = false;\n        return;\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"importSuccess\"));\n      this.router.navigate(this.successNavigate);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  getFormatInstructionTitle() {\n    if (this.format == null) {\n      return null;\n    }\n\n    const results = this.featuredImportOptions\n      .concat(this.importOptions)\n      .filter((o) => o.id === this.format);\n    if (results.length > 0) {\n      return this.i18nService.t(\"instructionsFor\", results[0].name);\n    }\n    return null;\n  }\n\n  protected setImportOptions() {\n    this.featuredImportOptions = [\n      {\n        id: null,\n        name: \"-- \" + this.i18nService.t(\"select\") + \" --\",\n      },\n      ...this.importService.featuredImportOptions,\n    ];\n    this.importOptions = this.importService.regularImportOptions;\n  }\n\n  private async error(error: Error) {\n    await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: \"error\" as SweetAlertIcon,\n      iconHtml: `<i class=\"swal-custom-icon bwi bwi-error text-danger\"></i>`,\n      input: \"textarea\",\n      inputValue: error.message,\n      inputAttributes: {\n        readonly: \"true\",\n      },\n      titleText: this.i18nService.t(\"importError\"),\n      text: this.i18nService.t(\"importErrorDesc\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"ok\"),\n      onOpen: (popupEl) => {\n        popupEl.querySelector(\".swal2-textarea\").scrollTo(0, 0);\n      },\n    });\n  }\n\n  private getFileContents(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsText(file, \"utf-8\");\n      reader.onload = (evt) => {\n        if (this.format === \"lastpasscsv\" && file.type === \"text/html\") {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString((evt.target as any).result, \"text/html\");\n          const pre = doc.querySelector(\"pre\");\n          if (pre != null) {\n            resolve(pre.textContent);\n            return;\n          }\n          reject();\n          return;\n        }\n\n        resolve((evt.target as any).result);\n      };\n      reader.onerror = () => {\n        reject();\n      };\n    });\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"jslib-angular/components/password-generator-history.component\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"password-row\">\n              <div\n                class=\"text-monospace password-wrapper\"\n                [innerHTML]=\"h.password | colorPassword\"\n                appSelectCopy\n              ></div>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PasswordGeneratorComponent as BasePasswordGeneratorComponent } from \"jslib-angular/components/password-generator.component\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private modalService: ModalService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"passwordGenerator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions?.inEffect()\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-password bg-light my-4\">\n  <div class=\"card-body\">\n    <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n  </div>\n</div>\n<div class=\"form-group\">\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"options.type\"\n      name=\"Type_{{ o.value }}\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"saveOptions()\"\n      [checked]=\"options.type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"options.type === 'passphrase'\">\n  <div class=\"row\">\n    <div class=\"form-group col-4\">\n      <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n      <input\n        id=\"num-words\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"3\"\n        max=\"20\"\n        [(ngModel)]=\"options.numWords\"\n        (blur)=\"saveOptions()\"\n      />\n    </div>\n    <div class=\"form-group col-4\">\n      <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n      <input\n        id=\"word-separator\"\n        class=\"form-control\"\n        type=\"text\"\n        maxlength=\"1\"\n        [(ngModel)]=\"options.wordSeparator\"\n        (blur)=\"saveOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        id=\"capitalize\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.capitalize\"\n        [disabled]=\"enforcedPolicyOptions?.capitalize\"\n      />\n      <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        id=\"include-number\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.includeNumber\"\n        [disabled]=\"enforcedPolicyOptions?.includeNumber\"\n      />\n      <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"options.type === 'password'\">\n  <div class=\"row\">\n    <div class=\"form-group col-4\">\n      <label for=\"length\">{{ \"length\" | i18n }}</label>\n      <input\n        id=\"length\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"5\"\n        max=\"128\"\n        [(ngModel)]=\"options.length\"\n        (blur)=\"saveOptions()\"\n        (change)=\"lengthChanged()\"\n      />\n    </div>\n    <div class=\"form-group col-4\">\n      <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"min-number\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"0\"\n        max=\"9\"\n        (blur)=\"saveOptions()\"\n        [(ngModel)]=\"options.minNumber\"\n        (change)=\"minNumberChanged()\"\n      />\n    </div>\n    <div class=\"form-group col-4\">\n      <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"min-special\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"0\"\n        max=\"9\"\n        (blur)=\"saveOptions()\"\n        [(ngModel)]=\"options.minSpecial\"\n        (change)=\"minSpecialChanged()\"\n      />\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        id=\"uppercase\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.uppercase\"\n        [disabled]=\"enforcedPolicyOptions?.useUppercase\"\n      />\n      <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        id=\"lowercase\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.lowercase\"\n        [disabled]=\"enforcedPolicyOptions?.useLowercase\"\n      />\n      <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        id=\"numbers\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.number\"\n        [disabled]=\"enforcedPolicyOptions?.useNumbers\"\n      />\n      <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        id=\"special\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.special\"\n        [disabled]=\"enforcedPolicyOptions?.useSpecial\"\n      />\n      <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        id=\"ambiguous\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"avoidAmbiguous\"\n      />\n      <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n    </div>\n  </div>\n</ng-container>\n<div class=\"d-flex\">\n  <div>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n      {{ \"regeneratePassword\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyPassword\" | i18n }}\n    </button>\n  </div>\n  <div class=\"ml-auto\">\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"history()\"\n      appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n    >\n      <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</div>\n<ng-template #historyTemplate></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"passwordGenerator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card\">\n        <div class=\"card-header d-flex\">\n          {{ \"reports\" | i18n }}\n          <div class=\"ml-auto\">\n            <a\n              href=\"#\"\n              appStopClick\n              class=\"badge badge-primary\"\n              *ngIf=\"!canAccessPremium\"\n              (click)=\"premiumRequired()\"\n            >\n              {{ \"premium\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"exposed-passwords-report\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n          >\n            {{ \"exposedPasswordsReport\" | i18n }}\n          </a>\n          <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"reusedPasswordsReport\" | i18n }}\n          </a>\n          <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"weakPasswordsReport\" | i18n }}\n          </a>\n          <a\n            routerLink=\"unsecured-websites-report\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n          >\n            {{ \"unsecuredWebsitesReport\" | i18n }}\n          </a>\n          <a\n            routerLink=\"inactive-two-factor-report\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n          >\n            {{ \"inactive2faReport\" | i18n }}\n          </a>\n          <a routerLink=\"breach-report\" class=\"list-group-item d-flex\" routerLinkActive=\"active\">\n            {{ \"dataBreachReport\" | i18n }}\n            <div class=\"ml-auto\">\n              <span class=\"badge badge-success\" *ngIf=\"!canAccessPremium\">\n                {{ \"free\" | i18n | uppercase }}\n              </span>\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, string]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, string] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"jslib-angular/components/add-edit-custom-fields.component\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/add-edit.component\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n\n  protected totpInterval: number;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventService: EventService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())[0];\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\nexport class BulkActionsComponent {\n  @Input() ciphersComponent: CiphersComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.ciphersComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"jslib-common/models/request/cipherBulkDeleteRequest\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent: boolean = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders: FolderView[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders = await this.folderService.getAllDecrypted();\n    this.folderId = this.folders[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<any>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections\n      .filter((c) => (c as any).checked)\n      .map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"jslib-angular/components/ciphers.component\";\n\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventService: EventService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService\n  ) {\n    super(searchService);\n  }\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"jslib-angular/components/collections.component\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"jslib-angular/components/folder-add-edit.component\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, i18nService, platformUtilsService, logService);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { GroupingsComponent as BaseGroupingsComponent } from \"jslib-angular/components/groupings.component\";\n\n@Component({\n  selector: \"app-vault-groupings\",\n  templateUrl: \"groupings.component.html\",\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchText: string = \"\";\n  searchPlaceholder: string = null;\n\n  constructor(\n    collectionService: CollectionService,\n    folderService: FolderService,\n    stateService: StateService\n  ) {\n    super(collectionService, folderService, stateService);\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { ShareComponent as BaseShareComponent } from \"jslib-angular/components/share.component\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n        {{ \"noOrganizationsList\" | i18n }}\n      </div>\n      <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n        <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n          *ngIf=\"organizations && organizations.length\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <a\n          href=\"#\"\n          routerLink=\"/settings/create-organization\"\n          class=\"btn btn-primary\"\n          *ngIf=\"!organizations || !organizations.length\"\n        >\n          {{ \"newOrganization\" | i18n }}\n        </a>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { first } from \"rxjs/operators\";\n\nimport { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { OrganizationsComponent } from \"../settings/organizations.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { GroupingsComponent } from \"./groupings.component\";\nimport { ShareComponent } from \"./share.component\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(OrganizationsComponent, { static: true })\n  organizationsComponent: OrganizationsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  favorites: boolean = false;\n  type: CipherType = null;\n  folderId: string = null;\n  collectionId: string = null;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  showProviders = false;\n  deleted: boolean = false;\n  trashCleanupWarning: string = null;\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.showProviders = (await this.providerService.getAll()).length > 0;\n\n      await Promise.all([this.groupingsComponent.load(), this.organizationsComponent.load()]);\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      if (params == null) {\n        this.groupingsComponent.selectedAll = true;\n        await this.ciphersComponent.reload();\n      } else {\n        if (params.deleted) {\n          this.groupingsComponent.selectedTrash = true;\n          await this.filterDeleted();\n        } else if (params.favorites) {\n          this.groupingsComponent.selectedFavorites = true;\n          await this.filterFavorites();\n        } else if (params.type) {\n          const t = parseInt(params.type, null);\n          this.groupingsComponent.selectedType = t;\n          await this.filterCipherType(t);\n        } else if (params.folderId) {\n          this.groupingsComponent.selectedFolder = true;\n          this.groupingsComponent.selectedFolderId = params.folderId;\n          await this.filterFolder(params.folderId);\n        } else if (params.collectionId) {\n          this.groupingsComponent.selectedCollectionId = params.collectionId;\n          await this.filterCollection(params.collectionId);\n        } else {\n          this.groupingsComponent.selectedAll = true;\n          await this.ciphersComponent.reload();\n        }\n      }\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.groupingsComponent.load(),\n                  this.organizationsComponent.load(),\n                  this.ciphersComponent.load(this.ciphersComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async clearGroupingFilters() {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchVault\");\n    await this.ciphersComponent.reload();\n    this.clearFilters();\n    this.go();\n  }\n\n  async filterFavorites() {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchFavorites\");\n    await this.ciphersComponent.reload((c) => c.favorite);\n    this.clearFilters();\n    this.favorites = true;\n    this.go();\n  }\n\n  async filterDeleted() {\n    this.ciphersComponent.showAddNew = false;\n    this.ciphersComponent.deleted = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n    await this.ciphersComponent.reload(null, true);\n    this.clearFilters();\n    this.deleted = true;\n    this.go();\n  }\n\n  async filterCipherType(type: CipherType) {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchType\");\n    await this.ciphersComponent.reload((c) => c.type === type);\n    this.clearFilters();\n    this.type = type;\n    this.go();\n  }\n\n  async filterFolder(folderId: string) {\n    this.ciphersComponent.showAddNew = true;\n    folderId = folderId === \"none\" ? null : folderId;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n    await this.ciphersComponent.reload((c) => c.folderId === folderId);\n    this.clearFilters();\n    this.folderId = folderId == null ? \"none\" : folderId;\n    this.go();\n  }\n\n  async filterCollection(collectionId: string) {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n    await this.ciphersComponent.reload(\n      (c) => c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1\n    );\n    this.clearFilters();\n    this.collectionId = collectionId;\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.groupingsComponent.loadFolders();\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.groupingsComponent.loadFolders();\n        });\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.groupingsComponent.loadFolders();\n          await this.filterFolder(\"none\");\n          this.groupingsComponent.selectedFolderId = null;\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.type;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.collectionId != null) {\n      const collection = this.groupingsComponent.collections.filter(\n        (c) => c.id === this.collectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.collectionId];\n      }\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async (c: CipherView) => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async (c: CipherView) => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async (c: CipherView) => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private clearFilters() {\n    this.folderId = null;\n    this.collectionId = null;\n    this.favorites = false;\n    this.type = null;\n    this.deleted = false;\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.favorites ? true : null,\n        type: this.type,\n        folderId: this.folderId,\n        collectionId: this.collectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      replaceUrl: true,\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <app-vault-groupings\n        (onAllClicked)=\"clearGroupingFilters()\"\n        (onFavoritesClicked)=\"filterFavorites()\"\n        (onCipherTypeClicked)=\"filterCipherType($event)\"\n        (onFolderClicked)=\"filterFolder($event.id)\"\n        (onAddFolder)=\"addFolder()\"\n        (onEditFolder)=\"editFolder($event.id)\"\n        (onCollectionClicked)=\"filterCollection($event.id)\"\n        (onSearchTextChanged)=\"filterSearchText($event)\"\n        (onTrashClicked)=\"filterDeleted()\"\n      >\n      </app-vault-groupings>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"myVault\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [deleted]=\"deleted\">\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-vault-ciphers>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/premium\">\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card mb-4\">\n        <div class=\"card-header d-flex\">\n          {{ \"organizations\" | i18n }}\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/about-organizations/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <div class=\"card-body\">\n          <app-organizations [vault]=\"true\"></app-organizations>\n        </div>\n      </div>\n      <div class=\"card mt-4\" *ngIf=\"showProviders\">\n        <div class=\"card-header d-flex\">\n          {{ \"providers\" | i18n }}\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/providers/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <div class=\"card-body\">\n          <app-providers vault=\"true\"></app-providers>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"jslib-common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { GlobalState as BaseGlobalState } from \"jslib-common/models/domain/globalState\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail: boolean = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { StorageService } from \"jslib-common/abstractions/storage.service\";\n\nimport { HtmlStorageLocation } from \"jslib-common/enums/htmlStorageLocation\";\n\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\n@Injectable()\nexport class HtmlStorageService implements StorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { I18nService as BaseI18nService } from \"jslib-common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"az\",\n      \"bg\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"eo\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"fi\",\n      \"fr\",\n      \"he\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"sk\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { StorageService } from \"jslib-common/abstractions/storage.service\";\n\nexport class MemoryStorageService implements StorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"jslib-angular/services/passwordReprompt.service\";\nimport { PasswordRepromptComponent } from \"../app/components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { StateService as BaseStateService } from \"jslib-common/services/state.service\";\n\nimport { Account } from \"../models/account\";\nimport { GlobalState } from \"../models/globalState\";\n\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\n\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply web overides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getRememberEmail(options?: StorageOptions) {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberEmail;\n  }\n\n  async setRememberEmail(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"jslib-common/services/stateMigration.service\";\n\nimport { Account } from \"../models/account\";\nimport { GlobalState } from \"../models/globalState\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","import Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  identityClientId: string = \"web\";\n\n  private browserCache: DeviceType = null;\n  private prefersColorSchemeDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isIE(): boolean {\n    return this.getDevice() === DeviceType.IEBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n    let blob: Blob = null;\n    let type: string = null;\n    const fileNameLower = fileName.toLowerCase();\n    let doDownload = true;\n    if (fileNameLower.endsWith(\".pdf\")) {\n      type = \"application/pdf\";\n      doDownload = false;\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      type = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      type = \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      type = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      type = \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      type = \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      type = \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      type = \"image/gif\";\n    }\n    if (type != null) {\n      blobOptions = blobOptions || {};\n      if (blobOptions.type == null) {\n        blobOptions.type = type;\n      }\n    }\n    if (blobOptions != null && !this.isIE()) {\n      blob = new Blob([blobData], blobOptions);\n    } else {\n      blob = new Blob([blobData]);\n    }\n    if (navigator.msSaveOrOpenBlob) {\n      navigator.msSaveBlob(blob, fileName);\n    } else {\n      const a = win.document.createElement(\"a\");\n      if (doDownload) {\n        a.download = fileName;\n      } else if (!this.isSafari()) {\n        a.target = \"_blank\";\n      }\n      a.href = URL.createObjectURL(blob);\n      a.style.position = \"fixed\";\n      win.document.body.appendChild(a);\n      a.click();\n      win.document.body.removeChild(a);\n    }\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml: boolean = false\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // tslint:disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n\n  getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n  }\n\n  async getEffectiveTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    const theme = await this.stateService.getTheme();\n    if (theme === ThemeType.Dark) {\n      return ThemeType.Dark;\n    } else if (theme === ThemeType.System) {\n      return this.getDefaultSystemTheme();\n    } else {\n      return ThemeType.Light;\n    }\n  }\n\n  onDefaultSystemThemeChange(callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown) {\n    try {\n      this.prefersColorSchemeDark.addEventListener(\"change\", ({ matches }) => {\n        callback(matches ? ThemeType.Dark : ThemeType.Light);\n      });\n    } catch (e) {\n      // Safari older than v14\n      this.prefersColorSchemeDark.addListener((ev) => {\n        callback(ev.matches ? ThemeType.Dark : ThemeType.Light);\n      });\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(19471)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","routes","path","loadChildren","ProvidersModule","AppRoutingModule","RouterModule","forChild","AppComponent","ngOnInit","super","this","policyListService","addPolicies","MaximumVaultTimeoutPolicy","DisablePersonalVaultExportPolicy","AppModule","OssModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","ServicesModule","BitwardenToastModule","forRoot","maxOpened","autoDismiss","closeButton","InfiniteScrollModule","DragDropModule","OssRoutingModule","OrganizationsModule","WildcardRoutingModule","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","SsoComponent","constructor","formBuilder","route","apiService","platformUtilsService","i18nService","organizationService","samlSigningAlgorithms","loading","enabled","control","data","group","configType","keyConnectorEnabled","keyConnectorUrl","authority","clientId","clientSecret","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpArtifactResolutionServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","parent","params","subscribe","organizationId","load","organization","get","ssoSettings","getOrganizationSso","patchValue","setValue","callbackPath","urls","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","markAsDirty","copy","value","copyToClipboard","launchUri","url","submit","formPromise","postData","response","showToast","t","validateKeyConnectorUrl","hasError","Error","request","OrganizationSsoRequest","postOrganizationSso","pristine","markAsPending","getKeyConnectorAlive","updateValueAndValidity","setErrors","invalidUrl","markAsPristine","enableTestKeyConnector","component","OrganizationLayoutComponent","canActivate","AuthGuardService","OrganizationGuardService","children","ManageComponent","OrganizationTypeGuardService","permissions","Permissions","CreateNewCollections","EditAnyCollection","DeleteAnyCollection","EditAssignedCollections","DeleteAssignedCollections","AccessEventLogs","ManageGroups","ManageUsers","ManagePolicies","ManageSso","OrganizationsRoutingModule","CommonModule","BasePolicy","name","description","type","PolicyType","DisablePersonalVaultExport","DisablePersonalVaultExportPolicyComponent","BasePolicyComponent","MaximumVaultTimeout","MaximumVaultTimeoutPolicyComponent","hours","minutes","loadData","policyResponse","Math","floor","buildRequestData","buildRequest","policiesEnabledMap","singleOrgEnabled","SingleOrg","AddOrganizationComponent","providerService","webProviderService","validationService","onAddedOrganization","EventEmitter","providerId","provider","add","showDialog","addOrganizationToProvider","id","e","showError","emit","DisallowedPlanTypes","PlanType","Free","FamiliesAnnually2019","FamiliesAnnually","ClientsComponent","searchService","logService","modalService","manageOrganizations","showAddExisting","didScroll","pageSize","pagedClientsCount","queryParams","pipe","first","qParams","searchText","search","getProviderClients","clients","length","ProviderUserType","ProviderAdmin","candidateOrgs","getAll","filter","o","isOwner","allowedOrgsIds","Promise","all","map","getOrganization","then","orgs","includes","planType","addableOrganizations","isPaging","searching","isSearching","resetPaging","isSearchable","pagedClients","loadMore","pagedLength","pagedSize","concat","slice","addExistingOrganization","modal","openViewRef","addModalRef","comp","organizations","close","error","remove","organizationName","actionPromise","detachOrganizastion","ViewContainerRef","CreateOrganizationComponent","OrganizationPlansComponent","AcceptProviderComponent","BaseAcceptComponent","router","stateService","platformUtilService","failedMessage","requiredParameters","authedHandler","ProviderUserAcceptRequest","token","postProviderUserAccept","providerUserId","timeout","navigate","unauthedHandler","providerName","BulkConfirmComponent","isAccepted","user","status","ProviderUserStatusType","Accepted","getPublicKeys","ProviderUserBulkRequest","filteredUsers","postProviderUsersPublicKey","getCryptoKey","cryptoService","getProviderKey","postConfirmRequest","userIdsWithKeys","ProviderUserBulkConfirmRequest","postProviderUserBulkConfirm","BulkRemoveComponent","deleteUsers","users","deleteManyProviderUsers","EventsComponent","BaseEventsComponent","eventService","exportService","userNamePipe","exportFileName","providerUsersUserIdMap","Map","providerUsersIdMap","useEvents","getProviderUsers","forEach","u","transform","set","email","userId","loadEvents","loaded","requestEvents","startDate","endDate","continuationToken","getEventsProvider","getUserName","r","has","exportEvents","accessEvents","PeopleComponent","BasePeopleComponent","searchPipe","userType","userStatusType","canManageUsers","viewEvents","Confirmed","events","relativeTo","getUsers","deleteUser","deleteProviderUser","reinviteUser","postProviderUserReinvite","confirmUser","publicKey","providerKey","key","rsaEncrypt","buffer","ProviderUserConfirmRequest","encryptedString","postProviderUserConfirm","edit","UserAddEditComponent","addEditModalRef","onSavedUser","onDeletedUser","removeUser","EntityEventsComponent","eventsModalRef","entityId","showUser","entity","bulkRemove","bulkRemoveModalRef","getCheckedUsers","onClosedPromise","bulkReinvite","Invited","postManyProviderUserReinvite","showBulkStatus","bulkConfirm","bulkConfirmModalRef","successfullMessage","childComponent","BulkStatusComponent","bulkStatusModalRef","onShown","keyedErrors","reduce","a","x","keyedFilteredUsers","message","hasOwnProperty","selectAll","invite","editMode","ServiceUser","PermissionsApi","showCustom","access","title","getProviderUser","ProviderUserUpdateRequest","putProviderUser","ProviderUserInviteRequest","emails","trim","split","postProviderUserInvite","delete","deletePromise","ProvidersLayoutComponent","document","body","classList","showMenuBar","showManageTab","showSettingsTab","canAccessEventLogs","isProviderAdmin","manageRoute","ProvidersComponent","FrontendLayoutComponent","SetupProviderComponent","titleId","SetupComponent","ProviderGuardService","pathMatch","redirectTo","ProviderTypeGuardService","SettingsComponent","AccountComponent","ManageProvider","ProvidersRoutingModule","componentFactoryResolver","registerComponentFactoryResolver","WebProviderService","indexOf","syncService","orgKey","getOrgKey","encryptedOrgKey","encrypt","ProviderAddOrganizationRequest","postProviderAddOrganization","fullSync","deleteProviderOrganization","selfHosted","isSelfHost","getProvider","ProviderUpdateRequest","businessName","billingEmail","putProvider","failedShortMessage","authed","replaceUrl","doSubmit","makeShareKey","ProviderSetupRequest","postProviderSetup","AddEditCustomFieldsComponent","addFieldType","FieldType","Text","linkedFieldOptions","cipherType","CipherType","fieldType","eventType","EventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","ngOnChanges","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","cipher","fields","f","FieldView","newField","linkedId","push","removeField","field","i","splice","toggleFieldValue","showValue","collect","Cipher_ClientToggledHiddenFieldVisible","trackByFunction","index","item","drop","event","moveItemInArray","previousIndex","currentIndex","options","linkedFieldOption","i18nKey","sort","Utils","getSortFunction","AddEditComponent","cipherService","folderService","auditService","collectionService","messagingService","policyService","passwordRepromptService","cloneMode","folderId","onSavedCipher","onDeletedCipher","onRestoredCipher","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","collections","showPassword","showCardNumber","showCardCode","ownershipOptions","currentDate","Date","allowPersonal","reprompt","canUseReprompt","typeOptions","Login","Card","Identity","SecureNote","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","UriMatchType","Domain","Host","StartsWith","RegularExpression","Exact","Never","autofillOnPageLoadOptions","init","policyAppliesToUser","PersonalOwnership","myEmail","getEmail","OrganizationUserStatusType","writeableCollections","loadCollections","cipherId","addEditCipherInfo","getAddEditCipherInfo","collectionIds","setAddEditCipherInfo","loadCipher","decrypt","CipherView","login","LoginView","uris","LoginUriView","card","CardView","identity","IdentityView","secureNote","SecureNoteView","SecureNoteType","Generic","CipherRepromptType","None","organizationChanged","c","checked","folders","getAllDecrypted","previousCipherId","Cipher_ClientViewed","isDeleted","restore","uri","encryptCipher","saveCipher","send","addUri","removeUri","cancel","attachments","share","editCollections","deleteCipher","restorePromise","restoreCipher","generatePassword","password","togglePassword","getElementById","focus","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","showOptions","match","loginUriMatchChanged","org","organizationUseTotp","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","toString","repromptChanged","Password","readOnly","saveWithServer","deleteWithServer","softDeleteWithServer","restoreWithServer","AttachmentsComponent","win","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","files","size","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","download","downloading","canAccessAttachments","getAttachmentData","ErrorResponse","statusCode","getSingleMessage","fetch","Request","cache","buf","arrayBuffer","decBuf","decryptFromBytes","saveFile","fileName","hasEncKey","canAccessPremium","getCanAccessPremium","reuploadCipherAttachment","admin","resolve","saveAttachmentRawWithServer","foundAttachment","a2","file","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","Window","AvatarComponent","sanitizer","cryptoFunctionService","charCount","textColor","fontSize","fontWeight","dynamic","circle","generate","getEnableGravitars","hashBytes","hash","toLowerCase","fromBufferToHex","src","chars","upperData","toUpperCase","getFirstLetters","unicodeSafeSubstring","regexpEmojiPresentation","charObj","getCharText","color","stringToColor","svg","getSvg","appendChild","html","window","createElement","outerHTML","svgHtml","btoa","unescape","encodeURIComponent","str","charCodeAt","substr","count","parts","text","svgTag","setAttribute","style","backgroundColor","width","height","character","textTag","textContent","characters","join","CalloutComponent","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","minComplexity","CaptchaProtectedComponent","environmentService","captchaSiteKey","captchaToken","setupCaptcha","webVaultUrl","getWebVaultUrl","captcha","CaptchaIFrame","info","showCaptcha","isNullOrWhitespace","handleCaptchaRequired","ChangePasswordComponent","passwordGenerationService","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","kdf","getKdfType","kdfIterations","getKdfIterations","makeKey","masterPassword","masterPasswordHash","hashPassword","encKey","getEncKey","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordRetype","strengthResult","passwordStrength","getPasswordStrengthUserInput","evaluateMasterPassword","score","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","setTimeout","masterPasswordScore","logOut","userInput","atPosition","CiphersComponent","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","searchCiphers","CollectionsComponent","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","ExportComponent","userVerificationService","onSaved","disabledByPolicy","exportForm","format","secret","formatOptions","checkExportDisabled","disable","encryptedFormat","warningDialog","verifyUser","getExportData","downloadFile","saved","collectEvent","getExport","getFileName","prefix","extension","User_ClientExportedVault","csv","FolderAddEditComponent","onSavedFolder","onDeletedFolder","folder","FolderView","GroupingsComponent","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","selectedAll","selectedFavorites","selectedTrash","selectedType","selectedFolder","selectedFolderId","selectedCollectionId","setLoaded","collapsedGroupings","getCollapsedGroupings","Set","loadFolders","nestedCollections","getAllNested","nestedFolders","clearSelections","selectFavorites","selectTrash","selectType","selectFolder","addFolder","editFolder","selectCollection","collection","collapse","grouping","idPrefix","isCollapsed","setCollapsedGroupings","successRoute","postPasswordHint","PasswordHintRequest","onSuccessfulSubmit","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","IconComponent","iconsUrl","getIconsUrl","image","fallbackImage","imageEnabled","getDisableFavicon","setLoginIcon","setCardIcon","hostnameUri","isWebsite","getHostname","brand","LockComponent","vaultTimeoutService","keyConnectorService","ngZone","pin","pinLock","webVaultHostname","invalidPinAttempts","activeAccount","_userId","failed","pinSet","makeKeyFromPin","getDecryptedPinProtected","protectedPin","getProtectedPin","decryptToUtf8","EncString","setKeyAndContinue","passwordValid","getKeyHash","compareAndUpdateKeyHash","SecretVerificationRequest","serverKeyHash","HashPurpose","ServerAuthorization","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","unlockBiometric","biometricLock","success","getKey","KeySuffixOptions","Biometric","doContinue","input","isStable","onStable","take","setKey","setBiometricLocked","setEverBeenUnlocked","disableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","LoginComponent","authService","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","getRememberedEmail","isBrowser","isNode","focusInput","logIn","setRememberedEmail","twoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","launchSsoBrowser","ssoRedirectUri","passwordOptions","uppercase","lowercase","numbers","special","state","ssoCodeVerifier","codeVerifierHash","codeChallenge","fromBufferToUrlB64","setSsoState","setSsoCodeVerifier","webUrl","DynamicModalComponent","cd","el","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","detectChanges","created","nativeElement","focusTrap","create","querySelector","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","clear","createComponent","ngOnDestroy","destroy","getFocus","autoFocusEl","_parentInjector","_additionalTokens","notFoundValue","flags","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","onCreated","asObservable","onClose","onClosed","onShow","show","next","shown","result","lastResult","closed","toPromise","PasswordGeneratorHistoryComponent","history","getHistory","copyOptions","PasswordGeneratorComponent","showSelect","onSelected","avoidAmbiguous","passTypeOptions","optionsResponse","getOptions","ambiguous","addHistory","sliderChanged","saveOptions","sliderInput","normalizeOptions","regenerate","select","toggleOptions","number","PasswordRepromptComponent","RegisterComponent","confirmMasterPassword","hint","showTerms","acceptPolicies","masterPasswordScoreWidth","masterPasswordScoreColor","masterPasswordScoreText","KdfType","PBKDF2_SHA256","isIE","hashedPassword","keys","makeKeyPair","RegisterRequest","referenceData","KeysRequest","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","confirmField","RemovePasswordComponent","continuing","leaving","getManagingOrganization","convert","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","datePipe","sendService","onSavedSend","onDeletedSend","copyLink","disableSend","disableHideEmail","sendType","SendType","emailVerified","alertShown","File","sendLinkBaseUrl","getSendUrl","link","accessId","urlB64Key","isSafari","isDateTimeLocalSupported","isFirefox","sendId","setDates","deletionDate","expirationDate","DisableSend","SendOptions","p","getEmailVerified","loadSend","SendView","SendFileView","SendTextView","setDate","getDate","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","typeChanged","sendData","togglePasswordVisible","BrowserPath","DateField","DatePreset","EffluxDatesComponent","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","FormControl","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","browserPath","Firefox","Safari","Default","formattedDeletionDate","now","miliseconds","setTime","getTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","m","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","SendComponent","refreshing","expired","sends","filteredSends","hasSearched","onSuccessfulLoad","s","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","searchSends","SetPasswordComponent","syncLoading","identifier","resetPasswordAutoEnroll","getOrganizationAutoEnrollStatus","orgId","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","useLowerKdf","SetPasswordRequest","setPassword","onSetPasswordSuccess","getOrganizationKeys","getUserId","fromB64ToArray","userEncKey","encryptedKey","resetRequest","OrganizationUserResetPasswordEnrollmentRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","VaultTimeoutInputComponent","form","vaultTimeout","custom","CUSTOM_VALUE","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","onChange","getVaultTimeout","current","max","writeValue","every","registerOnChange","registerOnTouched","onTouched","setDisabledState","isDisabled","validate","policyError","registerOnValidatorChange","fn","ShareComponent","onSharedCipher","allCollections","filterCollections","cipherView","orgName","find","shareWithServer","canSave","loggingIn","changePasswordRoute","code","codeVerifier","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","redirectUri","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","authorizeUrl","buildAuthorizeUrl","sameWindow","preValidateSso","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","logInSso","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","BitwardenToast","toastrService","toastPackage","trigger","opacity","transition","animate","BitwardenToastGlobalConfig","DefaultNoComponentGlobalConfig","toastComponent","static","config","ngModule","providers","provide","TOAST_CONFIG","useValue","default","TwoFactorOptionsComponent","onProviderSelected","onRecoverSelected","getSupportedTwoFactorProviders","choose","recover","TwoFactorComponent","remember","webAuthnReady","webAuthnNewTab","TwoFactorProviders","providerType","TwoFactorProviderType","selectedProviderType","Authenticator","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","supportsWebAuthn","webAuthnAllow","authing","twoFactorProvidersData","needsLock","WebAuthnIFrame","getDefaultTwoFactorProvider","cleanupWebAuthn","providerData","WebAuthn","authWebAuthn","Duo","OrganizationDuo","DuoWebSDK","iframe","host","sig_request","Signature","submit_callback","sig","Email","sendEmail","stop","replace","start","logInTwoFactor","doToast","emailPromise","TwoFactorEmailRequest","postTwoFactorEmail","cleanup","authingWithPassword","authingWithSso","authingWithApiKey","UpdatePasswordComponent","setOrganizationInvitation","setLoginRedirect","currentMasterPassword","VerificationType","MasterPassword","PasswordRequest","newMasterPasswordHash","postPassword","UpdateTempPasswordComponent","newKey","newPasswordHash","newEncKey","UpdateTempPasswordRequest","masterPasswordHint","putUpdateTempPassword","VerifyMasterPasswordComponent","disableRequestOTP","sentCode","processChanges","requestOTP","obj","enable","OTP","NG_VALUE_ACCESSOR","multi","useExisting","A11yTitleDirective","renderer","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","captchaRequired","AutofocusDirective","appAutofocus","condition","autofocus","isMobileBrowser","BlurClickDirective","onClick","blur","FallbackSrcDirective","onError","appFallbackSrc","InputVerbatimDirective","appInputVerbatim","disableComplete","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","substring","StopClickDirective","$event","preventDefault","StopPropDirective","stopPropagation","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","ev","target","setProperty","forwardRef","ColorPasswordPipe","passwordArray","Array","from","colorizedPassword","isSpecial","I18nPipe","p1","p2","p3","SearchPipe","items","prop1","prop2","prop3","UserNamePipe","routerState","getIsAuthenticated","isLocked","promptBiometric","getConvertAccountRequired","BroadcasterService","JslibServicesModule","LOCALE_ID","useFactory","translationLocale","deps","I18nService","ValidationService","UnauthGuardService","LockGuardService","ModalService","AppIdService","useClass","StorageService","AuditService","CryptoFunctionService","ApiService","AuthService","CryptoService","TokenService","PlatformUtilsService","MessagingService","VaultTimeoutService","LogService","KeyConnectorService","EnvironmentService","StateService","CipherService","settingsService","fileUploadService","injector","SearchService","SettingsService","FileUploadService","Injector","FolderService","ConsoleLogService","CollectionService","TotpService","PasswordGenerationService","PolicyService","tokenService","SyncService","SendService","OrganizationService","ProviderService","storageService","secureStorageService","stateMigrationService","StateFactory","GlobalState","Account","StateMigrationService","ExportService","NotificationsService","appIdService","WebCryptoFunctionService","EventService","UserVerificationService","PasswordRepromptService","homepage","loginpage","redirectUrl","ModalConfig","allowMultipleModals","applicationRef","modalList","factoryResolvers","addEventListener","modalCount","topModal","viewContainerRef","modalComponentRef","openInternal","insert","hostView","open","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","zIndex","prepend","modals","querySelectorAll","closeElement","ModalRef","WeakMap","ModalInjector","protectedFields","showPasswordPrompt","ref","defaultErrorMessage","errors","validationErrors","getAllMessages","indexedEntityId","DeviceType","EmergencyAccessStatusType","EmergencyAccessType","EncryptionType","FileUploadType","HtmlStorageLocation","LoginLinkedId","CardLinkedId","IdentityLinkedId","LogLevelType","NotificationType","OrganizationUserType","PaymentMethodType","PlanSponsorshipType","ProductType","StateVersion","StorageLocation","ThemeType","TransactionType","accountConstructor","args","globalStateConstructor","globalStateFactory","GlobalStateFactory","accountFactory","AccountFactory","createGlobal","createAccount","AscendoCsvImporter","BaseImporter","parse","ImportResult","results","parseCsv","initLoginCipher","notes","getValueOrDefault","val","fieldLower","passwordFieldNames","username","usernameFieldNames","uriFieldNames","makeUriArray","processKvp","convertToNoteIfNeeded","cleanupCipher","AvastCsvImporter","web","AvastJsonImporter","JSON","logins","custName","note","pwd","loginName","label","cards","cardholderName","holderName","cardNumber","cvv","getCardBrand","month","expMonth","year","expYear","AviraCsvImporter","nameFromUrl","website","secondary_username","newLineRegex","notesFieldNames","parseCsvOptions","encoding","skipEmptyLines","parseXml","doc","DOMParser","parseFromString","header","parseOptions","Object","assign","splitNewLine","papa","row","warning","parseSingleRowCsv","rowData","parsedRow","loginUri","fixUri","returnArr","hostname","startsWith","defaultValue","cardNum","re","RegExp","test","setCardExpiration","expiration","moveFoldersToCollections","folderRelationships","collectionRelationships","CollectionView","querySelectorDirectChild","parentEl","query","els","querySelectorAllDirectChild","parentNode","favorite","processFolder","folderName","folderIndex","hasFolder","BitwardenCsvImporter","col","addCollection","collectionIndex","parseInt","console","delimPosition","lastIndexOf","totp","login_totp","login_username","login_password","login_uri","BitwardenJsonImporter","encrypted","parseEncrypted","parseDecrypted","encKeyValidation_DO_NOT_EDIT","encKeyValidation","errorMessage","groupingsMap","CollectionWithId","toDomain","view","FolderWithId","CipherWithIds","passwordHistory","cId","toView","BlackBerryCsvImporter","fav","extra","BlurCsvImporter","domain","OfficialProps","ButtercupCsvImporter","URL","processingCustomFields","prop","ChromeCsvImporter","ClipperzHtmlImporter","textarea","entry","currentVersion","property","actionType","labelLower","CodebookCsvImporter","Category","Favorite","Entry","Note","Username","TOTP","Website","Phone","PIN","HandledResults","DashlaneJsonImporter","ADDRESS","processAddress","AUTHENTIFIANT","processAuth","BANKSTATEMENT","processNote","IDCARD","PAYMENTMEANS_CREDITCARD","processCard","IDENTITY","processIdentity","credential","secondaryLogin","fullName","nameParts","firstName","lastName","middleName","pseudo","addressName","address1","addressFull","city","postalCode","zipcode","country","bank","owner","nameProperty","EncryptrCsvImporter","Label","Notes","CVV","expiry","Expiry","expParts","EnpassCsvImporter","firstRow","containsField","fieldValue","fieldName","fieldNameLower","EnpassJsonImporter","foldersMap","foldersIndexMap","folderTree","buildFolderTree","flattenFolderTree","template_type","processLogin","some","sensitive","uuid","parent_uuid","titlePrefix","tree","FirefoxCsvImporter","FSecureFskImporter","service","creditNumber","creditCvv","creditExpiry","GnomeJsonImporter","keyRing","display_name","attributes","username_value","attr","NotesHeader","ApplicationsHeader","WebsitesHeader","Delimiter","KasperskyTxtImporter","notesData","applicationsData","websitesData","workingData","parseDataCategory","applications","websites","n","w","nameKey","itemComment","itemCommentKey","l","colonIndex","KeePass2XmlImporter","rootGroup","traverse","node","isRootNode","groupPrefixName","groupName","nameEl","cipherIndex","entryString","valueEl","keyEl","attrs","ProtectInMemory","KeePassXCsvImporter","Title","Group","KeeperCsvImporter","KeeperJsonImporter","keeperExport","records","record","parseFolders","login_url","custom_fields","customfieldKeys","shared_folder","LastPassCsvImporter","buildBaseCipher","parseSecureNote","parseCard","parseIdentity","ccnum","cardCipher","profilename","firstname","lastname","phone","ccname","cccsc","ccexp","ccexpParts","middlename","company","ssn","address2","address3","zip","charAt","extraParts","processedNote","typeParts","mappedData","parseSecureNoteMapping","Number","monthString","getMonth","isNaN","Company","State","Country","dataObj","processingNotes","extraPart","LogMeOnceCsvImporter","MeldiumCsvImporter","DisplayName","UserName","Url","MSecureCsvImporter","MykiCsvImporter","nickname","additionalInfo","twoFactAuthToken","cardName","exp_month","exp_year","firstAddressLine","secondAddressLine","zipCode","content","NordPassCsvImporter","recordType","evaluateType","cardholdername","cardnumber","cvc","expirydate","processName","full_name","phone_number","importRecord","lowerProperty","OnePassword1PifImporter","line","trashed","hmac","processStandardItem","processWinOpVaultItem","overview","URLs","details","parsePasswordHistory","notesPlain","parseFields","sections","section","openContents","faveIndex","typeName","location","secureContents","maxSize","time","b","ph","PasswordHistoryView","lastUsedDate","designationKey","valueKey","k","toUTCString","fieldDesignation","street","IgnoredProperties","OnePasswordCsvImporter","loginPropertyParsers","setLoginUsername","setLoginPassword","setLoginUris","creditCardPropertyParsers","setCreditCardNumber","setCreditCardVerification","setCreditCardCardholderName","setCreditCardExpiry","identityPropertyParsers","setIdentityFirstName","setIdentityInitial","setIdentityLastName","setIdentityUserName","setIdentityEmail","setIdentityPhone","setIdentityCompany","quoteChar","escapeChar","getProp","setNotes","setCipherType","altUsername","context","CipherImportContext","setKnownLoginValue","setKnownCreditCardValue","setKnownIdentityValue","setUnknownValue","entries","agg","getPropByRegexp","regexp","matchingKeys","getPropIncluding","includesMap","func","bind","readableDate","OnePasswordMacCsvImporter","OnePasswordWinCsvImporter","setIdentityAddress","expSplit","PadlockCsvImporter","headers","v","tag","tags","PassKeepCsvImporter","getValue","PassmanJsonImporter","otp","customField","field_type","PasspackCsvImporter","tagsJson","Tags","tagJson","__parsed_extra","fieldsJson","extraFields","fieldJson","PasswordAgentCsvImporter","newVersion","altFormat","PasswordBossJsonImporter","identifiers","valObj","expDate","getFullYear","cf","PasswordDragonXmlImporter","category","categoryText","accountName","tagName","PasswordSafeXmlImporter","passwordSafe","notesDelimiter","getAttribute","groupText","PasswordWalletTxtImporter","RememBearCsvImporter","trash","cardholder","verification","expiryMonth","expMonthNumber","expiryYear","expYearNumber","RoboFormCsvImporter","Folder","Name","Pwd","Rf_fields","SafariCsvImporter","OTPAuth","SafeInCloudXmlImporter","labelEl","cardEl","labelIdEl","labelId","fieldEl","notesEl","candidates","choice","SaferPassCsvImporter","SecureSafeCsvImporter","Comment","SplashIdCsvImporter","parseFieldsToNotes","startIndex","StickyPasswordXmlImporter","loginNodes","loginNode","accountId","usernameText","passwordText","titleText","linkText","notesText","groupId","accountLogin","account","parentElement","buildGroupText","PropertiesToIgnore","TrueKeyCsvImporter","memo","kind","expiryDate","document_content","UpmCsvImporter","YotiCsvImporter","ZohoVaultCsvImporter","ChamberName","parseData","SecretData","CustomData","IFrameComponent","successCallback","errorCallback","infoCallback","parsedMessage","siteKey","initComponent","createParams","locale","iframeId","parseFunction","parseMessage","connectorLink","sendMessage","contentWindow","postMessage","base64Encode","String","fromCharCode","removeEventListener","version","URLSearchParams","stringify","href","validMessage","origin","LinkedMetadata","propertyKey","_i18nKey","prototype","cacheKey","descriptor","originalMethod","caches","getCache","argsCacheKey","onFinally","apply","catch","err","ServiceUtils","nodeTree","partIndex","delimiter","end","partName","TreeNode","nestedTraverse","newPartName","getTreeNodeObject","limit","throttleKey","allThrottles","throttles","getThrottles","argsThrottleKey","queue","reject","exec","nodeURL","inited","process","release","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","Uint8Array","Buffer","binaryString","atob","bytes","fromUrlB64ToB64","strUtf8","arr","binary","byteLength","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","call","urlB64Str","output","fromB64ToUtf8","utfStr","fromUtf8ToArray","random","uriString","getUrl","httpUrl","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","pair","collator","compare","localeCompare","source","ipString","mobile","navigator","userAgent","vendor","opera","hasProtocol","anchor","btnText","append","allow","EEFLongWordList","CardApi","BaseResponse","getResponseProperty","FieldApi","IdentityApi","passportNumber","licenseNumber","LoginApi","passwordRevisionDate","autofillOnPageLoad","LoginUriApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","SecureNoteApi","SendFileApi","sizeName","SendTextApi","hidden","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","SsoConfigApi","viewPassword","revisionDate","deletedDate","LoginData","SecureNoteData","CardData","IdentityData","FieldData","AttachmentData","PasswordHistoryData","externalId","LoginUriData","usePolicies","useGroups","useDirectory","use2fa","useApi","useSso","useKeyConnector","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","ssoBound","resetPasswordEnrolled","hasPublicAndPrivateKeys","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","maxAccessCount","accessCount","disabled","hideEmail","SendTextData","SendFileData","EncryptionPair","DataEncryptionPair","AccountData","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","AccountSettings","environmentUrls","EnvironmentUrls","pinProtected","vaultTimeoutAction","AccountTokens","profile","settings","tokens","Attachment","alreadyEncrypted","buildDomainModel","decryptObj","AttachmentView","containerService","bitwardenContainerService","getCryptoService","decValue","decryptToBytes","SymmetricCryptoKey","toAttachmentData","buildDataModel","twoFactorProviders","toCardData","Cipher","localData","Field","model","promise","decAttachment","decField","decPh","toCipherData","CipherData","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","hidePasswords","notEncList","objProp","notEncStringList","viewModel","promises","self","theProp","mapProp","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decryptedValue","base","api","icons","notifications","webVault","keyConnector","date","theme","System","WindowState","stateVersion","One","LoginUri","toLoginUriData","MasterPasswordPolicyOptions","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","isProviderUser","canAccess","Owner","isManager","Manager","Admin","isAdmin","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManagePolicies","canManageUsersPassword","isExemptFromPolicies","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","Policy","canCreateOrganizations","ResetPasswordPolicyOptions","autoEnrollEnabled","Send","SendText","SendFile","cryptoKey","makeSendKey","SendAccess","creatorIdentifier","SendAccessView","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","globals","accounts","authenticatedAccounts","accountActivity","macKey","keyB64","encKeyB64","macKeyB64","req","values","build","humanReadableMessage","appIcon","appName","userName","userEmail","ip","orgIdentifier","ids","CipherWithIdRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","AttachmentRequest","groups","appId","getDevice","getDeviceString","pushToken","EmailRequest","EmailTokenRequest","FolderWithIdRequest","FolderRequest","KdfRequest","encryptedPrivateKey","OrganizationKeysRequest","seatAdjustment","maxAutoscaleSeats","OrganizationTaxInfoUpdateRequest","TaxInfoUpdateRequest","groupIds","PaymentRequest","clientOwnerEmail","organizationCreateRequest","captchaResponse","fileLength","SendWithIdRequest","SendRequest","credentials","codes","clientIdClientSecret","device","toIdentityToken","scope","client_id","grant_type","client_secret","code_verifier","redirect_uri","deviceType","deviceIdentifier","deviceName","twoFactorToken","twoFactorProvider","twoFactorRemember","alterIdentityTokenHeaders","fromUtf8ToUrlB64","TwoFactorProviderRequest","TwoFactorRecoveryRequest","culture","OrganizationUserResetPasswordRequest","UpdateTwoFactorAuthenticatorRequest","UpdateTwoFactorDuoRequest","UpdateTwoFactorEmailRequest","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","UpdateTwoFactorYubioOtpRequest","ApiKeyResponse","apiKey","AttachmentResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","CipherResponse","propertyName","exactName","otherCasePropertyName","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","PasswordHistoryResponse","CollectionResponse","SelectionReadOnlyResponse","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","GlobalDomainResponse","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","identityResponse","errorModel","responseErrorModel","HCaptcha_SiteKey","messages","lastSep","EventResponse","collectionId","policyId","providerOrganizationId","actingUserId","ipAddress","FolderResponse","domains","excluded","GroupResponse","accessAll","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","IdentityTwoFactorResponse","twoFactorProviders2","KeyConnectorUserKeyResponse","KeysResponse","ListResponse","dr","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","OrganizationSsoResponse","SsoUrls","OrganizationAutoEnrollStatusResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","plan","PlanResponse","OrganizationSubscriptionResponse","storageName","storageGb","subscription","BillingSubscriptionResponse","upcomingInvoice","BillingSubscriptionUpcomingInvoiceResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","OrganizationUserResponse","twoFactorEnabled","OrganizationUserResetPasswordDetailsReponse","PaymentResponse","userProfile","ProfileResponse","paymentIntentClientSecret","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PolicyResponse","PreloginResponse","ProfileOrganizationResponse","ProfileProviderOrganizationResponse","ProfileProviderResponse","providerOrganizations","premium","securityStamp","ProviderOrganizationResponse","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","SendAccessResponse","SendFileDownloadDataResponse","SendFileUploadDataResponse","sendResponse","SendResponse","SubscriptionResponse","license","usingInAppPurchase","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","SyncResponse","CollectionDetailsResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","fileSize","ItemView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","exp","formatYear","CardholderName","ExpMonth","ExpYear","Code","Brand","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","linkedFieldValue","linkedFieldI18nKey","maskedValue","_firstName","_lastName","fullAddress","address","fullAddressPart2","addressPart2","MiddleName","Address1","Address2","Address3","City","PostalCode","Ssn","PassportNumber","LicenseNumber","FirstName","LastName","FullName","CanLaunchWhitelist","_uri","_domain","_hostname","_host","_canLaunch","getHost","hostnameOrUri","hostOrUri","canLaunch","hasUris","maskedPassword","maskedText","maxAccessCountReached","pendingDelete","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","qsStringify","identityClientId","getCredentials","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","refreshIdentityToken","doAuthRefresh","getProfile","getUserBilling","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","postEmailToken","postEmail","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getFolder","postFolder","putFolder","deleteFolder","getSend","postSendAccess","apiUrl","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","CollectionGroupDetailsResponse","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","GroupDetailsResponse","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","OrganizationUserDetailsResponse","getOrganizationUserGroups","getOrganizationUsers","OrganizationUserUserDetailsResponse","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganizationBilling","getOrganizationSubscription","getOrganizationLicense","installationId","getOrganizationTaxInfo","postOrganization","putOrganization","putOrganizationTaxInfo","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","postOrganizationRotateApiKey","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","postOrganizationKeys","ProviderUserUserDetailsResponse","ProviderOrganizationOrganizationDetailsResponse","postProviderCreateOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","apiKeyRefresh","decodedToken","decodeToken","tokenResponse","setTokens","hasResponse","alterHeaders","requestUrl","getApiUrl","requestInit","FormData","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","getAppId","makeAndGetAppId","getAnonymousAppId","existingId","guid","newGuid","save","hashStart","hashEnding","breachedAccounts","throttle","priority","Yubikey","setCryptoKeys","selectedTwoFactorProviderType","makePreloginKey","localHashedPassword","logInHelper","logInApiKey","localMasterPasswordHash","ssoRedirectUrl","logInComplete","logInSsoComplete","logInApiKeyComplete","callback","supportsDuo","providerPriority","_value","preloginResponse","PreloginRequest","storedTwoFactorToken","getTwoFactorToken","deviceRequest","DeviceRequest","emailPassword","codeCodeVerifier","TokenRequest","Remember","clearState","AuthResult","twoFactorResponse","accountInformation","addAccount","sub","apiKeyClientId","hasPremiumPersonally","kdfType","apiKeyClientSecret","setTwoFactorToken","getAndSetKey","getKeyConnectorUrl","keyPair","randomBytes","keyConnectorRequest","KeyConnectorUserKeyRequest","pubKey","privKey","setPasswordRequest","SetKeyConnectorKeyRequest","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","searchParams","blobResponse","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","ceil","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","day","compareTo","encryptedFileName","encryptedFileData","apiCall","fd","blob","Blob","filepath","contentType","subscribers","messageCallback","unsubscribe","DomainMatchBlacklist","sortedCiphersCache","SortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","getDefaultUriMatch","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","CipherCreateRequest","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","CipherShareRequest","shareManyWithServer","encCiphers","CipherBulkShareRequest","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","_evt","filename","encFileName","dataEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","CipherCollectionsRequest","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","CipherBulkMoveRequest","deleteManyWithServer","CipherBulkDeleteRequest","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","CipherBulkRestoreRequest","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","sequentialize","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","nodes","collectionCopy","getNested","CollectionData","setEncryptedCollections","isDev","timersMap","debug","write","Debug","Info","Warning","level","log","warn","hrtime","timeEnd","elapsed","attachToWindow","attachToGlobal","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","orgKeys","providerOrg","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getDecryptedCryptoSymmetricKey","getEncryptedCryptoSymmetricKey","decEncKey","encKeyCipher","stretchKey","symmetricCryptoKey","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","encOrgKeys","getEncryptedOrganizationKeys","rsaDecrypt","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","salt","pbkdf2","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","decKey","shareKey","rsaGenerateKeyPair","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForEncryption","buildEncKey","plainValue","plainBuf","encObj","aesEncrypt","encValue","macLen","encBytes","EncArrayBuffer","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","decipher","aesDecryptToBytes","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","EncryptedObject","macData","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","compareFast","aesDecryptFast","aesDecrypt","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","bigInt","fromArray","remainder","mod","divide","encKeyEnc","urlsSubject","setUrlsFromStorage","getNotificationsUrl","notificationsUrl","identityUrl","eventsUrl","getEnvironmentUrls","envUrls","setUrls","formatUrl","setEnvironmentUrls","getUrls","checkOnInterval","uploadEvents","setInterval","uploadImmediately","orgIds","eventCollection","getEventCollection","EventData","setEventCollection","EventRequest","clearEvents","getEncryptedExport","getDecryptedExport","getOrganizationExport","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","unparse","Event","padNumber","getHours","getMinutes","getSeconds","decFolders","exportCiphers","buildCommonCipher","jsonDoc","collectionPromises","decCol","cipherPromises","decCipher","collectionsMap","num","padCharacter","numString","azureFileUploadService","AzureFileUploadService","bitwardenFileUploadService","BitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","setDecryptedFolders","getEncryptedFolders","decryptedFolders","getDecryptedFolders","noneFolder","folderCopy","FolderData","setEncryptedFolders","updates","systemLanguage","localesDirectory","getLocalesJson","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","replaceToken","replaceContent","featuredImportOptions","regularImportOptions","getImportOptions","import","importer","fileContents","importResult","halfway","last","badData","postImport","errorResponse","handleServerError","getImporter","getImporterInstance","ImportCiphersRequest","KvpRequest","ImportOrganizationCiphersRequest","CollectionRequest","itemType","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","userKeyResponse","keyArr","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","connected","inactive","reconnectTimer","signalrConnection","off","signalR","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","withHubProtocol","signalRMsgPack","MessagePackHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","getOrganizations","Organization","getByIdentifier","setOrganizations","canManageSponsorships","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","GeneratedPasswordHistory","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","zxcvbn","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","setDecryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","policy","getPolicyForOrganization","policyType","PolicyData","setEncryptedPolicies","mapPoliciesFromToken","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","isExcemptFromPolicies","getProviders","Provider","setProviders","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","setDecryptedSends","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","SendData","setEncryptedSends","Keys","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","partialKeys","stateFactory","BehaviorSubject","createGlobals","hasBeenInited","needsMigration","migrate","initAccountState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getAccount","defaultOnDiskOptions","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","setApiKeyClientId","getApiKeyClientSecret","setApiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricLocked","biometricLocked","setBiometricText","biometricUnlock","setBiometricUnlock","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","convertAccountToKeyConnector","cryptoMasterKey","defaultSecureStorageOptions","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","setDecodedToken","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableGa","disableGa","setDisableGa","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","getEverBeenUnlocked","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","setLastActive","getLastSync","lastSync","setLastSync","legacyEtmKey","getLocale","setLocale","getLoginRedirect","loginRedirect","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","passwordGenerationOptions","setProtectedPin","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","getTheme","setTheme","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","htmlStorageLocation","Local","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","clearV1Keys","clearingUserId","keyPrefix","Two","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","authenticationStatus","syncInProgress","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","successfully","OrganizationData","ProviderData","setToken","setClientId","setClientSecret","skipTokenStorage","toggleTokens","action","clearToken","storedToken","decoded","fromUrlB64ToUtf8","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","email_verified","getName","getPremium","getIssuer","iss","amr","B32Chars","SteamChars","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","fullCode","trunc","getTimeInterval","isAutoCopyEnabled","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","requestClass","alreadyHashed","validateInput","VerifyOTPRequest","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","lock","allowSoftLock","setVaultTimeoutOptions","isLoggedOut","vaultTimeoutSeconds","crypto","subtle","ua","isOldSafari","algorithm","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","forge","fromByteStringToArray","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","md5","sha1","valueBytes","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","util","createBuffer","putInt32","DecryptParameters","meta","encKeyByteString","macKeyByteString","decode64","parameters","dataBuffer","createDecipher","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","encodeUtf8","fromBufferToByteString","AcceptEmergencyComponent","EmergencyAccessAcceptRequest","AcceptOrganizationComponent","OrganizationUserAcceptRequest","performResetPasswordAutoEnroll","policyList","HintComponent","routerService","previousUrl","getPreviousUrl","showResetPasswordAutoEnrollWarning","goAfterLogIn","getRememberEmail","resetPasswordPolicy","enforcedPasswordPolicyOptions","policiesData","setRememberEmail","RecoverDeleteComponent","DeleteRecoverRequest","RecoverTwoFactorComponent","recoveryCode","showCreateOrgMessage","layout","ReferenceEventRequest","flow","reference","cookie","shift","storedIdentifier","anotherMethod","twoFactorOptionsModal","VerifyEmailTokenComponent","VerifyEmailRequest","VerifyRecoverDeleteComponent","VerifyDeleteRecoverRequest","BroadcasterSubscriptionId","broadcasterService","notificationsService","lastActivity","idleTimer","isIdle","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","run","command","setPreviousUrl","setFullWidth","NavigationEnd","jq","TwoFactorAuthenticationPolicy","MasterPasswordPolicy","PasswordGeneratorPolicy","SingleOrgPolicy","RequireSsoPolicy","PersonalOwnershipPolicy","DisableSendPolicy","SendOptionsPolicy","ResetPasswordPolicy","idleStateChanged","msg","sanitize","SecurityContext","HTML","enableHtml","trustedHtml","timeOut","getRedirectRoute","urlTree","parseUrl","dirtyDates","defaultDates","getDefaultDateFilters","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","clearExisting","loadAndParseEvents","refreshPromise","morePromise","eventInfo","getEventInfo","EventView","formatDateFilters","statusMap","pagedUsers","allUsers","pagedUsersCount","allCount","invitedCount","acceptedCount","confirmedCount","showConfirmUsers","showBulkConfirmUsers","iterateEnum","checkUser","selectCount","deleteWarningMessage","reinvite","confirm","mapIndex","updateUser","publicKeyResponse","autoConfirm","UserConfirmComponent","confirmModalRef","onConfirmedUser","fingerprint","NestedCheckboxComponent","parentIndeterminate","parentChecked","checkboxes","pascalize","camelToPascalCase","PasswordStrengthComponent","showText","scoreWidth","FooterComponent","getApplicationVersion","NavbarComponent","showToolsTab","toolsRoute","UserLayoutComponent","publicKeys","fingerprints","statuses","done","excludedUsers","OrganizationUserBulkRequest","OrganizationUserBulkConfirmRequest","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","accessGroups","groupsResponse","check","SelectionReadOnlyRequest","canCreate","pagedCollectionsCount","decryptCollections","assignedCollections","pagedCollections","canEdit","canDelete","removeCollection","EntityUsersComponent","usersModalRef","entityName","onEditedUsers","orgUsersUserIdMap","orgUsersIdMap","organizationUserType","organizationUserStatusType","showSelected","selectedCount","loadUsers","selectedChanged","filterSelected","selections","GroupAddEditComponent","onSavedGroup","onDeletedGroup","GroupRequest","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","accessPolicies","accessSso","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","orgShareKey","OrganizationUserConfirmRequest","allowResetPassword","orgUser","callingUserHasPermission","showEnrolledStatus","UserGroupsComponent","groupsModalRef","resetPassword","ResetPasswordComponent","resetPasswordModalRef","onPasswordReset","PoliciesComponent","policyIdFromEvents","orgPolicy","orgPolicies","op","PolicyEditComponent","editModalRef","onSavedPolicy","cdr","factory","policyComponent","policyFormRef","Enabled","loggedOutWarningName","orgSymKey","decPrivateKey","newPasswordStrengthTimeout","User","manageAllCollectionsCheckboxes","manageAssignedCollectionsCheckboxes","customUserTypeSelected","setRequestPermissions","clearPermissions","handleDependentPermissions","OrganizationUserUpdateRequest","OrganizationUserInviteRequest","dontAskAgain","userGroups","ug","OrganizationUserUpdateGroupsRequest","display","PolicyRequest","DisableSendPolicyComponent","MasterPasswordPolicyComponent","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicyComponent","RequireSso","RequireSsoPolicyComponent","ResetPasswordPolicyComponent","SendOptionsPolicyComponent","SingleOrgPolicyComponent","TwoFactorAuthentication","TwoFactorAuthenticationPolicyComponent","canUseApi","OrganizationUpdateRequest","submitTaxInfo","taxFormPromise","taxInfo","DeleteOrganizationComponent","deleteModalRef","onSuccess","purgeVault","PurgeVaultComponent","purgeModalRef","viewApiKey","ApiKeyComponent","apiKeyModalRef","keyType","postKey","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKey","rotateApiKeyModalRef","isRotation","TaxInfoComponent","AdjustSubscription","onAdjusted","limitSubscription","newSeatCount","currentSeatCount","newMaxSeats","OrganizationSubscriptionUpdateRequest","limitSubscriptionChanged","adjustedSeatTotal","maxSeatTotal","ChangePlanComponent","onChanged","onCanceled","defaultUpgradePlan","defaultUpgradeProduct","Families","descriptionKey","DownloadLicenseComponent","onDownloaded","licenseString","OrganizationBillingComponent","UserBillingComponent","firstLoaded","OrganizationSubscriptionComponent","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showDownloadLicense","showChangePlan","userOrg","reinstate","reinstatePromise","cancelPromise","changePlan","closeChangePlan","changed","downloadLicense","closeDownloadLicense","updateLicense","closeUpdateLicense","updated","subscriptionAdjusted","adjustStorage","closeStorage","removeSponsorship","removeSponsorshipPromise","isExpired","subscriptionMarkedForCancel","nextInvoice","storagePercentage","toFixed","storageProgressWidth","billingInterval","storageGbPrice","canAdjustSeats","isSponsoredSubscription","canDownloadLicense","subscriptionDesc","showChangePlanButton","access2fa","TwoFactorSetupComponent","manage","duoComp","openModal","duoModalRef","TwoFactorDuoComponent","onUpdated","updateStatus","filterProvider","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","acceptingSponsorship","onOrganizationCreateSuccess","existingFamilyOrganizations","selectedFamilyOrganizationId","OrganizationSponsorshipRedeemRequest","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","ExposedPasswordsReportComponent","dynamicSuper","getPrototypeOf","manageableCiphers","getAllCiphers","canManageCipher","ImportComponent","importService","successNavigate","importBlockedByPolicy","InactiveTwoFactorReportComponent","ReusedPasswordsReportComponent","ToolsComponent","upgradeOrganization","UnsecuredWebsitesReportComponent","WeakPasswordsReportComponent","totpService","allowOwnershipAssignment","viewOnly","reupload","showFixOldAttachments","onEventsClicked","allCiphers","collectionDomains","unassignedCollection","VaultComponent","changeDetectorRef","trashCleanupWarning","groupingsComponent","ciphersComponent","filterDeleted","filterCipherType","filterCollection","clearGroupingFilters","showAddNew","clearFilters","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","editCipherCollections","collectionsModalRef","editCipher","cipherAddEditModalRef","cloneCipher","AccessComponent","OptionsComponent","DomainRulesComponent","PremiumComponent","UserSubscriptionComponent","OrganizationsComponent","EmergencyAccessComponent","EmergencyAccessViewComponent","SponsoredFamiliesComponent","BreachReportComponent","AccessImportExport","AccessReports","ManageUsersPassword","ManageOrganization","useHash","paramsInheritanceStrategy","registerLocaleData","DatePipe","ToastrModule","vault","passwordRequired","unavailable","sendText","downloadData","accessRequest","toggleText","keyArray","SendAccessRequest","sendAccess","ControlContainer","NgForm","addSend","editSend","sendAddEditModalRef","toDateTimeLocalString","filterStart","filterEnd","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","User_LoggedIn","User_ChangedPassword","User_Updated2fa","User_Disabled2fa","User_Recovered2fa","User_FailedLogIn","User_FailedLogIn2fa","User_UpdatedTempPassword","User_MigratedKeyToKeyConnector","Cipher_Created","formatCipherId","getShortId","Cipher_Updated","Cipher_Deleted","Cipher_SoftDeleted","Cipher_Restored","Cipher_AttachmentCreated","Cipher_AttachmentDeleted","Cipher_Shared","Cipher_ClientCopiedHiddenField","Cipher_ClientCopiedPassword","Cipher_ClientCopiedCardCode","Cipher_ClientAutofilled","Cipher_UpdatedCollections","Collection_Created","formatCollectionId","Collection_Updated","Collection_Deleted","Group_Created","formatGroupId","Group_Updated","Group_Deleted","OrganizationUser_Invited","formatOrgUserId","OrganizationUser_Confirmed","OrganizationUser_Updated","OrganizationUser_Removed","OrganizationUser_UpdatedGroups","OrganizationUser_UnlinkedSso","OrganizationUser_ResetPassword_Enroll","OrganizationUser_ResetPassword_Withdraw","OrganizationUser_AdminResetPassword","OrganizationUser_ResetSsoLink","OrganizationUser_FirstSsoLogin","Organization_Updated","Organization_PurgedVault","Organization_VaultAccessed","Organization_EnabledSso","Organization_DisabledSso","Organization_EnabledKeyConnector","Organization_DisabledKeyConnector","Policy_Updated","formatPolicyId","ProviderUser_Invited","formatProviderUserId","ProviderUser_Confirmed","ProviderUser_Updated","ProviderUser_Removed","ProviderOrganization_Created","formatProviderOrganizationId","ProviderOrganization_Added","ProviderOrganization_Removed","ProviderOrganization_VaultAccessed","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","shortId","cipherInfo","makeAnchor","innerHTML","pad","norm","abs","modalOpen","RouterService","activatedRoute","titleService","currentUrl","rawTitle","child","firstChild","snapshot","newTitle","setTitle","initFactory","eventLoggingService","htmlEl","documentElement","onDefaultSystemThemeChange","sysTheme","Light","Dark","ContainerService","APP_INITIALIZER","PolicyListService","language","HtmlStorageService","MemoryStorageService","WebPlatformUtilsService","BroadcasterMessagingService","ImportService","showChangePassword","showChangeKdf","showChangeEmail","deauthorizeSessions","DeauthorizeSessionsComponent","deauthModalRef","DeleteAccountComponent","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","AddCreditComponent","PayPal","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","BitPay","BitPayInvoiceRequest","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","ElementRef","AdjustPaymentComponent","paymentComponent","createPaymentToken","paymentToken","taxInfoComponent","changeCountry","hideBank","BankAccount","changeMethod","PaymentComponent","AdjustStorageComponent","storageAdjustment","StorageRequest","storageGbAdjustment","paymentFailed","handleStripeCardPayment","adjustedStorageTotal","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","reset","ChangeKdfComponent","kdfOptions","rotateEncKey","rotateEncKeyClicked","updateKey","UpdateKeyRequest","updateEmergencyAccesses","updateAllResetPasswordKeys","emergencyAccess","allowedStatuses","RecoveryInitiated","RecoveryApproved","filteredAccesses","updateRequest","EmergencyAccessUpdateRequest","orgPlansComponent","TeamsAnnually","Teams","EnterpriseAnnually","Enterprise","toggleExcluded","globalDomain","customize","UpdateDomainsRequest","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAddEditComponent","onDeleted","View","emergencyAccessType","waitTimes","waitTime","EmergencyAccessInviteRequest","EmergencyAccessAttachmentsComponent","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","oldKeyBuffer","oldEncKey","EmergencyAccessPasswordRequest","EmergencyAddEditComponent","viewAttachments","cipherData","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","premiumRequired","contact","doConfirmation","removeGrantee","removeGrantor","requestAccess","approve","takeover","takeoverModalRef","EmergencyAccessConfirmRequest","LinkSsoComponent","ngAfterContentInit","localeOptions","themeOptions","disableIcons","startingLocale","startingTheme","valid","effectiveTheme","getEffectiveTheme","vaultTimeoutActionChanged","newValue","showFree","showCancel","ownedBusiness","premiumAccessAddon","additionalStorage","additionalSeats","productTypes","singleOrgPolicyBlock","discount","plans","changedOwnedBusiness","createOrganization","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","familyPlan","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","additionalStorageTotal","seatTotal","subtotal","subTotal","freeTrial","taxCharges","taxComponent","taxRate","total","paymentDesc","changedProduct","changedCountry","userHasBlockingSingleOrgPolicy","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","OrganizationUpgradeRequest","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","OrganizationCreateRequest","collectionName","tokenResult","includeTaxId","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","ProviderOrganizationCreateRequest","allowEnrollmentChanges","unlinkSso","toggleResetPasswordEnrollment","keyString","toastStringRef","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","showMethods","hidePaypal","hideCredit","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSmoothing","invalid","StripeElementClasses","empty","Credit","head","removeChild","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","shape","tagline","createErr","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","handleCardPayment","paymentIntent","classes","placeholder","mount","premiumPrice","finalizePremium","paymentResponse","ProfileComponent","hidePasswordHint","UpdateProfileRequest","hasFamilySponsorshipAvailable","availableSponsorshipOrgs","activeSponsorshipOrgs","selectedSponsorshipOrgId","sponsorshipEmail","sponsoredEmail","friendlyName","resetForm","forceReload","allOrgs","anyActiveSponsorships","anyOrgsAvailable","moreThanOneOrgAvailable","SponsoringOrgRowComponent","sponsoringOrg","sponsorshipRemoved","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmail","resendEmailPromise","onCountryChanged","taxRates","localTaxRate","getTaxInfoRequest","hasChanged","TwoFactorAuthenticatorComponent","TwoFactorBaseComponent","qrScript","auth","authResponse","processResponse","buildRequestModel","QRious","element","twoFactorProviderType","hashedSecret","verificationType","enableFunction","ikey","skey","TwoFactorEmailComponent","sentEmail","TwoFactorRecoveryComponent","print","onafterprint","formatString","showPolicyWarning","evaluatePolicies","authenticatorModalRef","yubikeyModalRef","TwoFactorYubiKeyComponent","emailModalRef","webAuthnModalRef","TwoFactorWebAuthnComponent","recoveryModalRef","TwoFactorVerifyComponent","onAuthed","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","readKey","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","webAuthnListening","webAuthnError","listening","configured","disablePromise","existingKey","padRight","UpdateKeyComponent","makeRequest","UpdateLicenseComponent","updatePromise","showAdjustPayment","showAddCredit","transactionType","billing","verifyBank","VerifyBankRequest","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","addCredit","paymentSourceInApp","closeAddCredit","changePayment","closePayment","isCreditBalance","creditOrBalance","AppleInApp","GoogleInApp","NG_VALIDATORS","VerifyEmailComponent","checkedUsername","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","repromptCipher","checkAccess","accessPremium","exposedPasswordMap","exposedPasswordCiphers","exposedCount","setImportOptions","importOptions","getFileContents","getFormatInstructionTitle","fire","heightAuto","buttonsStyling","iconHtml","inputValue","inputAttributes","readonly","showConfirmButton","confirmButtonText","onOpen","popupEl","scrollTo","readAsText","pre","services","cipherDocs","load2fa","inactive2faCiphers","docs","serviceData","documentation","additionalDomain","historyModalRef","lengthChanged","minNumberChanged","minSpecialChanged","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","unsecuredCiphers","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","scoreKey","showRevisionDate","viewingPasswordHistory","cleanUp","totpUpdateCode","totpTick","totpInterval","toggleFavorite","launch","typeI18nKey","aType","confirmed","viewHistory","clearInterval","totpCode","half","totpCodeFormatted","intervalSeconds","totpSec","totpDash","totpLow","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","getSelectedIds","BulkDeleteComponent","bulkDeleteModalRef","permanent","cipherIds","bulkRestore","BulkRestoreComponent","bulkRestoreModalRef","onRestored","bulkShare","selectedCiphers","getSelected","BulkShareComponent","bulkShareModalRef","onShared","bulkMove","BulkMoveComponent","bulkMoveModalRef","onMoved","deleteCiphersAdmin","deleteCiphers","deleteRequest","nonShareableCount","shareableCiphers","checkedCollectionIds","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","pagedCiphers","userHasPremiumAccess","pagedCiphersCount","clone","displayTotpCopyButton","checkCipher","onSearchTextChanged","favorites","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","showProviders","organizationsComponent","filterFavorites","filterFolder","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","subscriber","arg","localStorage","getItem","sessionStorage","setItem","removeItem","filePath","localesResult","store","migrationStateFrom1To2","browserCache","prefersColorSchemeDark","matchMedia","chrome","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","rel","click","blobData","blobOptions","fileNameLower","doDownload","endsWith","msSaveOrOpenBlob","msSaveBlob","createObjectURL","position","PublicKeyCredential","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","showCancelButton","cancelButtonText","clipboardData","setData","queryCommandSupported","copyEl","contains","execCommand","readFromClipboard","authenticateBiometric","getDefaultSystemTheme","addListener","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}