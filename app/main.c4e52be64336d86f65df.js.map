{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./jslib/common/src/abstractions/i18n.service.ts","webpack:///./jslib/common/src/abstractions/platformUtils.service.ts","webpack:///./jslib/common/src/abstractions/api.service.ts","webpack:///./jslib/common/src/abstractions/user.service.ts","webpack:///./jslib/angular/src/pipes/i18n.pipe.ts","webpack:///./jslib/common/src/abstractions/crypto.service.ts","webpack:///./jslib/common/src/abstractions/messaging.service.ts","webpack:///./jslib/angular/src/directives/a11y-title.directive.ts","webpack:///./jslib/angular/src/directives/api-action.directive.ts","webpack:///./jslib/angular/src/components/callout.component.ts","webpack:///./jslib/angular/src/components/callout.component.html","webpack:///./jslib/angular/src/services/modal.service.ts","webpack:///./jslib/common/src/abstractions/cipher.service.ts","webpack:///./jslib/common/src/models/response/baseResponse.ts","webpack:///./jslib/common/src/abstractions/policy.service.ts","webpack:///./jslib/common/src/misc/utils.ts","webpack:///./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/common/src/importers/baseImporter.ts","webpack:///./jslib/common/src/models/domain/importResult.ts","webpack:///./jslib/common/src/abstractions/state.service.ts","webpack:///./jslib/angular/src/directives/stop-click.directive.ts","webpack:///./jslib/common/src/abstractions/storage.service.ts","webpack:///./jslib/common/src/enums/cipherType.ts","webpack:///./jslib/common/src/abstractions/sync.service.ts","webpack:///./jslib/angular/src/directives/input-verbatim.directive.ts","webpack:///./jslib/common/src/abstractions/environment.service.ts","webpack:///./jslib/common/src/abstractions/collection.service.ts","webpack:///./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack:///./jslib/angular/src/directives/stop-prop.directive.ts","webpack:///./jslib/common/src/abstractions/auth.service.ts","webpack:///./jslib/common/src/abstractions/folder.service.ts","webpack:///./jslib/common/src/enums/policyType.ts","webpack:///./jslib/common/src/abstractions/search.service.ts","webpack:///./jslib/common/src/abstractions/event.service.ts","webpack:///./jslib/angular/src/directives/autofocus.directive.ts","webpack:///./jslib/angular/src/pipes/user-name.pipe.ts","webpack:///./jslib/common/src/services/constants.service.ts","webpack:///./src/app/components/avatar.component.ts","webpack:///./jslib/common/src/abstractions/log.service.ts","webpack:///./jslib/common/src/models/domain/domainBase.ts","webpack:///./jslib/common/src/models/request/passwordVerificationRequest.ts","webpack:///./jslib/common/src/models/view/cardView.ts","webpack:///./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack:///./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack:///./jslib/angular/src/services/validation.service.ts","webpack:///./jslib/common/src/models/domain/encString.ts","webpack:///./jslib/common/src/abstractions/audit.service.ts","webpack:///./jslib/common/src/models/view/secureNoteView.ts","webpack:///./jslib/common/src/enums/secureNoteType.ts","webpack:///./jslib/angular/src/components/icon.component.ts","webpack:///./jslib/angular/src/components/icon.component.html","webpack:///./jslib/common/src/abstractions/token.service.ts","webpack:///./jslib/common/src/abstractions/export.service.ts","webpack:///./jslib/angular/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/enums/twoFactorProviderType.ts","webpack:///./src/app/organizations/policies/base-policy.component.ts","webpack:///./jslib/angular/src/pipes/search.pipe.ts","webpack:///./jslib/common/src/abstractions/totp.service.ts","webpack:///./jslib/common/src/enums/fieldType.ts","webpack:///./jslib/common/src/abstractions/send.service.ts","webpack:///./src/app/settings/payment.component.ts","webpack:///./src/app/settings/payment.component.html","webpack:///./jslib/common/src/models/view/cipherView.ts","webpack:///./jslib/common/src/models/view/identityView.ts","webpack:///./jslib/common/src/models/view/folderView.ts","webpack:///./src/app/settings/tax-info.component.ts","webpack:///./src/app/settings/tax-info.component.html","webpack:///./src/app/services/event.service.ts","webpack:///./jslib/common/src/models/view/loginView.ts","webpack:///./jslib/common/src/models/domain/collection.ts","webpack:///./jslib/common/src/models/view/collectionView.ts","webpack:///./jslib/common/src/models/data/cipherData.ts","webpack:///./jslib/common/src/enums/cipherRepromptType.ts","webpack:///./jslib/common/src/enums/sendType.ts","webpack:///./jslib/common/src/models/response/errorResponse.ts","webpack:///./jslib/common/src/enums/eventType.ts","webpack:///./jslib/common/src/enums/organizationUserStatusType.ts","webpack:///./jslib/common/src/models/api/permissionsApi.ts","webpack:///./src/app/components/password-strength.component.ts","webpack:///./src/app/components/password-strength.component.html","webpack:///./jslib/common/src/models/data/collectionData.ts","webpack:///./src/app/settings/two-factor-verify.component.ts","webpack:///./src/app/settings/two-factor-verify.component.html","webpack:///./jslib/common/src/models/domain/cipher.ts","webpack:///./src/app/layouts/navbar.component.ts","webpack:///./src/app/layouts/navbar.component.html","webpack:///./src/app/layouts/footer.component.ts","webpack:///./src/app/layouts/footer.component.html","webpack:///./src/app/settings/organization-plans.component.ts","webpack:///./src/app/settings/organization-plans.component.html","webpack:///./jslib/common/src/models/request/cipherRequest.ts","webpack:///./jslib/angular/src/components/modal/modal.ref.ts","webpack:///./jslib/common/src/enums/permissions.ts","webpack:///./bitwarden_license/src/app/providers/services/provider.service.ts","webpack:///./jslib/common/src/enums/planType.ts","webpack:///./jslib/common/src/enums/paymentMethodType.ts","webpack:///./src/app/services/router.service.ts","webpack:///./jslib/common/src/enums/kdfType.ts","webpack:///./jslib/common/src/enums/organizationUserType.ts","webpack:///./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack:///./src/app/services/policy-list.service.ts","webpack:///./src/app/settings/two-factor-base.component.ts","webpack:///./src/app/tools/cipher-report.component.ts","webpack:///./jslib/common/src/models/view/fieldView.ts","webpack:///./src/app/vault/add-edit.component.ts","webpack:///./src/app/vault/add-edit.component.html","webpack:///./jslib/common/src/abstractions/import.service.ts","webpack:///./src/app/vault/ciphers.component.ts","webpack:///./src/app/vault/ciphers.component.html","webpack:///./jslib/angular/src/services/auth-guard.service.ts","webpack:///./jslib/common/src/enums/providerUserType.ts","webpack:///./jslib/common/src/enums/themeType.ts","webpack:///./jslib/common/src/models/request/keysRequest.ts","webpack:///./src/app/common/base.accept.component.ts","webpack:///./src/app/organizations/manage/entity-events.component.ts","webpack:///./src/app/organizations/manage/entity-events.component.html","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///./jslib/common/src/enums/hashPurpose.ts","webpack:///./jslib/common/src/models/data/policyData.ts","webpack:///./jslib/angular/src/components/change-password.component.ts","webpack:///./jslib/common/src/models/request/selectionReadOnlyRequest.ts","webpack:///./jslib/common/src/models/response/policyResponse.ts","webpack:///./jslib/common/src/models/view/loginUriView.ts","webpack:///./jslib/common/src/enums/uriMatchType.ts","webpack:///./src/app/vault/add-edit-custom-fields.component.ts","webpack:///./src/app/vault/add-edit-custom-fields.component.html","webpack:///./src/app/vault/groupings.component.ts","webpack:///./src/app/vault/groupings.component.html","webpack:///./jslib/common/src/models/domain/organization.ts","webpack:///./jslib/common/src/models/view/sendFileView.ts","webpack:///./jslib/common/src/models/view/sendTextView.ts","webpack:///./jslib/common/src/models/response/cipherResponse.ts","webpack:///./src/app/settings/organizations.component.ts","webpack:///./src/app/settings/organizations.component.html","webpack:///./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/common/src/enums/encryptionType.ts","webpack:///./jslib/common/src/enums/productType.ts","webpack:///./jslib/common/src/models/request/organizationKeysRequest.ts","webpack:///./jslib/common/src/enums/deviceType.ts","webpack:///./jslib/common/src/enums/providerUserStatusType.ts","webpack:///./jslib/common/src/models/request/provider/providerUserBulkRequest.ts","webpack:///./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-status.component.html","webpack:///./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack:///./jslib/common/src/models/request/organizationUserBulkRequest.ts","webpack:///./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack:///./src/app/layouts/frontend-layout.component.ts","webpack:///./src/app/layouts/frontend-layout.component.html","webpack:///./src/app/providers/providers.component.ts","webpack:///./src/app/providers/providers.component.html","webpack:///./src/app/oss.module.ts","webpack:///./src/app/layouts/organization-layout.component.ts","webpack:///./src/app/layouts/organization-layout.component.html","webpack:///./jslib/common/src/models/domain/policy.ts","webpack:///./jslib/common/src/services/auth.service.ts","webpack:///./src/app/organizations/manage/entity-users.component.ts","webpack:///./src/app/organizations/manage/entity-users.component.html","webpack:///./src/app/organizations/manage/manage.component.ts","webpack:///./src/app/organizations/manage/manage.component.html","webpack:///./src/app/settings/api-key.component.ts","webpack:///./src/app/settings/api-key.component.html","webpack:///./src/app/settings/purge-vault.component.ts","webpack:///./src/app/settings/purge-vault.component.html","webpack:///./src/app/settings/user-billing.component.ts","webpack:///./src/app/settings/user-billing.component.html","webpack:///./src/app/settings/add-credit.component.ts","webpack:///./src/app/settings/add-credit.component.html","webpack:///./src/app/settings/adjust-payment.component.ts","webpack:///./src/app/settings/adjust-payment.component.html","webpack:///./src/app/settings/adjust-storage.component.ts","webpack:///./src/app/settings/adjust-storage.component.html","webpack:///./src/app/settings/update-license.component.ts","webpack:///./src/app/settings/update-license.component.html","webpack:///./src/app/settings/two-factor-duo.component.ts","webpack:///./src/app/settings/two-factor-duo.component.html","webpack:///./src/app/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-setup.component.html","webpack:///./src/app/tools/export.component.ts","webpack:///./src/app/tools/export.component.html","webpack:///./src/app/tools/exposed-passwords-report.component.ts","webpack:///./src/app/tools/exposed-passwords-report.component.html","webpack:///./src/app/organizations/vault/add-edit.component.ts","webpack:///./jslib/common/src/models/domain/card.ts","webpack:///./jslib/common/src/models/domain/field.ts","webpack:///./jslib/common/src/models/domain/identity.ts","webpack:///./jslib/common/src/models/domain/login.ts","webpack:///./jslib/common/src/models/domain/loginUri.ts","webpack:///./jslib/common/src/models/view/passwordHistoryView.ts","webpack:///./jslib/common/src/models/domain/secureNote.ts","webpack:///./src/app/tools/import.component.ts","webpack:///./src/app/tools/import.component.html","webpack:///./src/app/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/tools/inactive-two-factor-report.component.html","webpack:///./src/app/tools/reused-passwords-report.component.ts","webpack:///./src/app/tools/reused-passwords-report.component.html","webpack:///./src/app/tools/unsecured-websites-report.component.ts","webpack:///./src/app/tools/unsecured-websites-report.component.html","webpack:///./src/app/tools/weak-passwords-report.component.ts","webpack:///./src/app/tools/weak-passwords-report.component.html","webpack:///./src/app/vault/attachments.component.ts","webpack:///./src/app/vault/attachments.component.html","webpack:///./src/app/organizations/vault/ciphers.component.ts","webpack:///./src/app/vault/collections.component.ts","webpack:///./src/app/vault/collections.component.html","webpack:///./src/app/organizations/vault/groupings.component.ts","webpack:///./src/app/vault/bulk-actions.component.ts","webpack:///./src/app/vault/bulk-actions.component.html","webpack:///./jslib/common/src/models/domain/sendFile.ts","webpack:///./jslib/common/src/models/domain/sendText.ts","webpack:///./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/common/src/models/request/folderRequest.ts","webpack:///./jslib/common/src/models/api/sendFileApi.ts","webpack:///./jslib/common/src/models/api/sendTextApi.ts","webpack:///./jslib/angular/src/directives/select-copy.directive.ts","webpack:///./jslib/angular/src/pipes/color-password.pipe.ts","webpack:///./jslib/common/src/abstractions/notifications.service.ts","webpack:///./jslib/common/src/abstractions/settings.service.ts","webpack:///./src/app/services/organization-guard.service.ts","webpack:///./src/app/services/organization-type-guard.service.ts","webpack:///./jslib/common/src/models/response/profileResponse.ts","webpack:///./jslib/common/src/models/response/sendResponse.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./bitwarden_license/src/app/providers/services/provider-guard.service.ts","webpack:///./bitwarden_license/src/app/providers/services/provider-type-guard.service.ts","webpack:///./bitwarden_license/src/app/providers/providers-layout.component.ts","webpack:///./bitwarden_license/src/app/providers/providers-layout.component.html","webpack:///./bitwarden_license/src/app/providers/clients/clients.component.ts","webpack:///./bitwarden_license/src/app/providers/clients/clients.component.html","webpack:///./bitwarden_license/src/app/providers/clients/add-organization.component.ts","webpack:///./bitwarden_license/src/app/providers/clients/add-organization.component.html","webpack:///./bitwarden_license/src/app/providers/clients/create-organization.component.ts","webpack:///./bitwarden_license/src/app/providers/clients/create-organization.component.html","webpack:///./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack:///./jslib/common/src/models/request/taxInfoUpdateRequest.ts","webpack:///./bitwarden_license/src/app/providers/manage/accept-provider.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/accept-provider.component.html","webpack:///./bitwarden_license/src/app/providers/manage/events.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/events.component.html","webpack:///./src/app/common/base.events.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/manage.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/manage.component.html","webpack:///./bitwarden_license/src/app/providers/manage/people.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/people.component.html","webpack:///./src/app/common/base.people.component.ts","webpack:///./src/app/organizations/manage/user-confirm.component.ts","webpack:///./src/app/organizations/manage/user-confirm.component.html","webpack:///./bitwarden_license/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/user-add-edit.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/user-add-edit.component.html","webpack:///./bitwarden_license/src/app/providers/settings/settings.component.ts","webpack:///./bitwarden_license/src/app/providers/settings/settings.component.html","webpack:///./bitwarden_license/src/app/providers/setup/setup-provider.component.ts","webpack:///./bitwarden_license/src/app/providers/setup/setup-provider.component.html","webpack:///./bitwarden_license/src/app/providers/setup/setup.component.ts","webpack:///./bitwarden_license/src/app/providers/setup/setup.component.html","webpack:///./bitwarden_license/src/app/providers/settings/account.component.ts","webpack:///./bitwarden_license/src/app/providers/settings/account.component.html","webpack:///./src/app/components/nested-checkbox.component.ts","webpack:///./src/app/components/nested-checkbox.component.html","webpack:///./src/app/components/password-reprompt.component.ts","webpack:///./src/app/components/password-reprompt.component.html","webpack:///./jslib/angular/src/components/password-reprompt.component.ts","webpack:///./jslib/angular/src/directives/blur-click.directive.ts","webpack:///./src/app/layouts/user-layout.component.ts","webpack:///./src/app/layouts/user-layout.component.html","webpack:///./src/app/accounts/accept-emergency.component.ts","webpack:///./src/app/accounts/accept-emergency.component.html","webpack:///./src/app/accounts/accept-organization.component.ts","webpack:///./src/app/accounts/accept-organization.component.html","webpack:///./src/app/accounts/hint.component.ts","webpack:///./src/app/accounts/hint.component.html","webpack:///./src/app/accounts/lock.component.ts","webpack:///./src/app/accounts/lock.component.html","webpack:///./src/app/accounts/login.component.ts","webpack:///./src/app/accounts/login.component.html","webpack:///./jslib/angular/src/components/captchaProtected.component.ts","webpack:///./src/app/accounts/recover-delete.component.ts","webpack:///./src/app/accounts/recover-delete.component.html","webpack:///./src/app/accounts/recover-two-factor.component.ts","webpack:///./src/app/accounts/recover-two-factor.component.html","webpack:///./src/app/accounts/register.component.ts","webpack:///./src/app/accounts/register.component.html","webpack:///./src/app/accounts/set-password.component.ts","webpack:///./src/app/accounts/set-password.component.html","webpack:///./src/app/accounts/sso.component.ts","webpack:///./src/app/accounts/sso.component.html","webpack:///./jslib/angular/src/components/sso.component.ts","webpack:///./src/app/accounts/two-factor-options.component.ts","webpack:///./src/app/accounts/two-factor-options.component.html","webpack:///./src/app/accounts/two-factor.component.ts","webpack:///./src/app/accounts/two-factor.component.html","webpack:///./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack:///./src/app/accounts/update-temp-password.component.ts","webpack:///./src/app/accounts/update-temp-password.component.html","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///./src/app/accounts/verify-email-token.component.ts","webpack:///./src/app/accounts/verify-email-token.component.html","webpack:///./src/app/accounts/verify-recover-delete.component.ts","webpack:///./src/app/accounts/verify-recover-delete.component.html","webpack:///./src/app/organizations/manage/collection-add-edit.component.ts","webpack:///./src/app/organizations/manage/collection-add-edit.component.html","webpack:///./jslib/common/src/models/request/collectionRequest.ts","webpack:///./src/app/organizations/manage/collections.component.ts","webpack:///./src/app/organizations/manage/collections.component.html","webpack:///./src/app/organizations/manage/events.component.ts","webpack:///./src/app/organizations/manage/events.component.html","webpack:///./src/app/organizations/manage/group-add-edit.component.ts","webpack:///./src/app/organizations/manage/group-add-edit.component.html","webpack:///./src/app/organizations/manage/groups.component.ts","webpack:///./src/app/organizations/manage/groups.component.html","webpack:///./src/app/organizations/manage/people.component.ts","webpack:///./src/app/organizations/manage/people.component.html","webpack:///./src/app/organizations/manage/reset-password.component.ts","webpack:///./src/app/organizations/manage/reset-password.component.html","webpack:///./src/app/organizations/manage/user-add-edit.component.ts","webpack:///./src/app/organizations/manage/user-add-edit.component.html","webpack:///./src/app/organizations/manage/user-groups.component.ts","webpack:///./src/app/organizations/manage/user-groups.component.html","webpack:///./src/app/organizations/manage/policies.component.ts","webpack:///./src/app/organizations/manage/policies.component.html","webpack:///./src/app/organizations/manage/policy-edit.component.ts","webpack:///./src/app/organizations/manage/policy-edit.component.html","webpack:///./src/app/organizations/settings/account.component.ts","webpack:///./src/app/organizations/settings/account.component.html","webpack:///./src/app/organizations/settings/delete-organization.component.ts","webpack:///./src/app/organizations/settings/delete-organization.component.html","webpack:///./src/app/organizations/settings/adjust-subscription.component.ts","webpack:///./src/app/organizations/settings/adjust-subscription.component.html","webpack:///./src/app/organizations/settings/change-plan.component.ts","webpack:///./src/app/organizations/settings/change-plan.component.html","webpack:///./src/app/organizations/settings/download-license.component.ts","webpack:///./src/app/organizations/settings/download-license.component.html","webpack:///./src/app/organizations/settings/organization-billing.component.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.html","webpack:///./src/app/organizations/settings/settings.component.ts","webpack:///./src/app/organizations/settings/settings.component.html","webpack:///./src/app/organizations/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.html","webpack:///./src/app/settings/two-factor-email.component.ts","webpack:///./src/app/settings/two-factor-email.component.html","webpack:///./src/app/settings/two-factor-recovery.component.ts","webpack:///./src/app/settings/two-factor-recovery.component.html","webpack:///./src/app/settings/two-factor-webauthn.component.ts","webpack:///./src/app/settings/two-factor-webauthn.component.html","webpack:///./src/app/settings/two-factor-yubikey.component.ts","webpack:///./src/app/settings/two-factor-yubikey.component.html","webpack:///./src/app/organizations/tools/export.component.ts","webpack:///./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack:///./jslib/common/src/models/data/attachmentData.ts","webpack:///./jslib/common/src/models/data/cardData.ts","webpack:///./jslib/common/src/models/data/fieldData.ts","webpack:///./jslib/common/src/models/data/identityData.ts","webpack:///./jslib/common/src/models/data/loginData.ts","webpack:///./jslib/common/src/models/data/loginUriData.ts","webpack:///./jslib/common/src/models/data/passwordHistoryData.ts","webpack:///./jslib/common/src/models/data/secureNoteData.ts","webpack:///./jslib/common/src/models/domain/attachment.ts","webpack:///./jslib/common/src/models/domain/password.ts","webpack:///./jslib/common/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/common/src/models/api/cardApi.ts","webpack:///./jslib/common/src/models/api/fieldApi.ts","webpack:///./jslib/common/src/models/api/identityApi.ts","webpack:///./jslib/common/src/models/api/loginApi.ts","webpack:///./jslib/common/src/models/api/loginUriApi.ts","webpack:///./jslib/common/src/models/api/secureNoteApi.ts","webpack:///./jslib/angular/src/directives/true-false-value.directive.ts","webpack:///./jslib/angular/src/directives/fallback-src.directive.ts","webpack:///./src/app/organizations/tools/import.component.ts","webpack:///./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/organizations/tools/reused-passwords-report.component.ts","webpack:///./src/app/organizations/tools/tools.component.ts","webpack:///./src/app/organizations/tools/tools.component.html","webpack:///./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack:///./src/app/organizations/tools/weak-passwords-report.component.ts","webpack:///./src/app/organizations/vault/attachments.component.ts","webpack:///./jslib/angular/src/components/attachments.component.ts","webpack:///./src/app/organizations/vault/collections.component.ts","webpack:///./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack:///./src/app/organizations/vault/vault.component.ts","webpack:///./src/app/organizations/vault/vault.component.html","webpack:///./src/app/vault/bulk-delete.component.ts","webpack:///./src/app/vault/bulk-delete.component.html","webpack:///./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./src/app/vault/bulk-move.component.ts","webpack:///./src/app/vault/bulk-move.component.html","webpack:///./src/app/vault/bulk-restore.component.ts","webpack:///./src/app/vault/bulk-restore.component.html","webpack:///./src/app/vault/bulk-share.component.ts","webpack:///./src/app/vault/bulk-share.component.html","webpack:///./src/app/send/access.component.ts","webpack:///./src/app/send/access.component.html","webpack:///./src/app/send/add-edit.component.ts","webpack:///./src/app/send/add-edit.component.html","webpack:///./jslib/common/src/models/view/sendView.ts","webpack:///./src/app/send/efflux-dates.component.ts","webpack:///./src/app/send/efflux-dates.component.html","webpack:///./src/app/send/send.component.ts","webpack:///./src/app/send/send.component.html","webpack:///./src/app/settings/account.component.ts","webpack:///./src/app/settings/account.component.html","webpack:///./src/app/settings/deauthorize-sessions.component.ts","webpack:///./src/app/settings/deauthorize-sessions.component.html","webpack:///./src/app/settings/delete-account.component.ts","webpack:///./src/app/settings/delete-account.component.html","webpack:///./src/app/settings/profile.component.ts","webpack:///./src/app/settings/profile.component.html","webpack:///./src/app/settings/change-email.component.ts","webpack:///./src/app/settings/change-email.component.html","webpack:///./jslib/common/src/models/request/emailTokenRequest.ts","webpack:///./src/app/settings/change-password.component.ts","webpack:///./src/app/settings/change-password.component.html","webpack:///./jslib/common/src/enums/emergencyAccessStatusType.ts","webpack:///./jslib/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack:///./jslib/common/src/models/request/folderWithIdRequest.ts","webpack:///./jslib/common/src/models/request/passwordRequest.ts","webpack:///./jslib/common/src/models/request/sendRequest.ts","webpack:///./jslib/common/src/models/request/updateKeyRequest.ts","webpack:///./src/app/settings/change-kdf.component.ts","webpack:///./src/app/settings/change-kdf.component.html","webpack:///./src/app/settings/create-organization.component.ts","webpack:///./src/app/settings/create-organization.component.html","webpack:///./src/app/settings/domain-rules.component.ts","webpack:///./src/app/settings/domain-rules.component.html","webpack:///./src/app/settings/emergency-access-add-edit.component.ts","webpack:///./src/app/settings/emergency-access-add-edit.component.html","webpack:///./jslib/common/src/enums/emergencyAccessType.ts","webpack:///./src/app/settings/emergency-access-attachments.component.ts","webpack:///./src/app/settings/emergency-access-confirm.component.ts","webpack:///./src/app/settings/emergency-access-confirm.component.html","webpack:///./src/app/settings/emergency-access-takeover.component.ts","webpack:///./src/app/settings/emergency-access-takeover.component.html","webpack:///./src/app/settings/emergency-access-view.component.ts","webpack:///./src/app/settings/emergency-access-view.component.html","webpack:///./src/app/settings/emergency-add-edit.component.ts","webpack:///./src/app/settings/emergency-access.component.ts","webpack:///./src/app/settings/emergency-access.component.html","webpack:///./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack:///./jslib/common/src/models/response/attachmentResponse.ts","webpack:///./src/app/settings/link-sso.component.ts","webpack:///./src/app/settings/link-sso.component.html","webpack:///./src/app/settings/options.component.ts","webpack:///./src/app/settings/options.component.html","webpack:///./src/app/settings/vault-timeout-input.component.ts","webpack:///./src/app/settings/vault-timeout-input.component.html","webpack:///./src/app/settings/premium.component.ts","webpack:///./src/app/settings/premium.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/update-key.component.ts","webpack:///./src/app/settings/update-key.component.html","webpack:///./src/app/settings/user-subscription.component.ts","webpack:///./src/app/settings/user-subscription.component.html","webpack:///./src/app/settings/verify-email.component.ts","webpack:///./src/app/settings/verify-email.component.html","webpack:///./src/app/tools/breach-report.component.ts","webpack:///./src/app/tools/breach-report.component.html","webpack:///./src/app/tools/password-generator-history.component.ts","webpack:///./src/app/tools/password-generator-history.component.html","webpack:///./src/app/tools/password-generator.component.ts","webpack:///./src/app/tools/password-generator.component.html","webpack:///./src/app/tools/tools.component.ts","webpack:///./src/app/tools/tools.component.html","webpack:///./src/app/vault/folder-add-edit.component.ts","webpack:///./src/app/vault/folder-add-edit.component.html","webpack:///./src/app/vault/share.component.ts","webpack:///./src/app/vault/share.component.html","webpack:///./src/app/vault/vault.component.ts","webpack:///./src/app/vault/vault.component.html","webpack:///./src/app/organizations/policies/disable-send.component.ts","webpack:///./src/app/organizations/policies/disable-send.component.html","webpack:///./src/app/organizations/policies/master-password.component.ts","webpack:///./src/app/organizations/policies/master-password.component.html","webpack:///./src/app/organizations/policies/password-generator.component.ts","webpack:///./src/app/organizations/policies/password-generator.component.html","webpack:///./src/app/organizations/policies/personal-ownership.component.ts","webpack:///./src/app/organizations/policies/personal-ownership.component.html","webpack:///./src/app/organizations/policies/require-sso.component.ts","webpack:///./src/app/organizations/policies/require-sso.component.html","webpack:///./src/app/organizations/policies/reset-password.component.ts","webpack:///./src/app/organizations/policies/reset-password.component.html","webpack:///./src/app/organizations/policies/send-options.component.ts","webpack:///./src/app/organizations/policies/send-options.component.html","webpack:///./src/app/organizations/policies/single-org.component.ts","webpack:///./src/app/organizations/policies/single-org.component.html","webpack:///./src/app/organizations/policies/two-factor-authentication.component.ts","webpack:///./src/app/organizations/policies/two-factor-authentication.component.html","webpack:///./bitwarden_license/src/app/policies/disable-personal-vault-export.component.ts","webpack:///./bitwarden_license/src/app/policies/disable-personal-vault-export.component.html","webpack:///./bitwarden_license/src/app/policies/maximum-vault-timeout.component.ts","webpack:///./bitwarden_license/src/app/policies/maximum-vault-timeout.component.html","webpack:///./bitwarden_license/src/app/organizations/manage/sso.component.ts","webpack:///./bitwarden_license/src/app/organizations/manage/sso.component.html","webpack:///./jslib/angular/src/services/lock-guard.service.ts","webpack:///./jslib/angular/src/services/unauth-guard.service.ts","webpack:///./jslib/common/src/models/response/collectionResponse.ts","webpack:///./jslib/common/src/models/response/domainsResponse.ts","webpack:///./jslib/common/src/models/response/folderResponse.ts","webpack:///./jslib/common/src/models/response/organizationResponse.ts","webpack:///./jslib/common/src/models/response/planResponse.ts","webpack:///./jslib/common/src/models/response/subscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///./jslib/common/src/misc/sequentialize.ts","webpack:///./jslib/common/src/misc/serviceUtils.ts","webpack:///./jslib/common/src/services/consoleLog.service.ts","webpack:///./jslib/common/src/misc/wordlist.ts","webpack:///./jslib/common/src/models/export/cipherWithIds.ts","webpack:///./jslib/common/src/models/export/collectionWithId.ts","webpack:///./jslib/common/src/models/export/folderWithId.ts","webpack:///./jslib/common/src/models/domain/folder.ts","webpack:///./jslib/common/src/models/data/folderData.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordCsvImporter.ts","webpack:///./jslib/common/src/enums/notificationType.ts","webpack:///./jslib/common/src/models/data/sendData.ts","webpack:///./bitwarden_license/src/app/main.ts","webpack:///./src/scss/styles.scss?580e","webpack:///./bitwarden_license/src/app/app.module.ts","webpack:///./bitwarden_license/src/app/app-routing.module.ts","webpack:///./bitwarden_license/src/app/providers/providers.module.ts","webpack:///./jslib/angular/src/components/modal/dynamic-modal.component.ts","webpack:///./jslib/angular/src/components/modal/modal-injector.ts","webpack:///./jslib/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack:///./jslib/common/src/misc/tldjs.noop.ts","webpack:///./bitwarden_license/src/app/providers/providers-routing.module.ts","webpack:///./src/scss/export.module.scss","webpack:///./jslib/common/src/models/request/organizationCreateRequest.ts","webpack:///./jslib/common/src/models/request/organizationUpgradeRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack:///./jslib/common/src/models/view/eventView.ts","webpack:///./jslib/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserInviteRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerSetupRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUpdateRequest.ts","webpack:///./jslib/common/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserAcceptRequest.ts","webpack:///./jslib/angular/src/components/hint.component.ts","webpack:///./jslib/common/src/models/request/passwordHintRequest.ts","webpack:///./jslib/angular/src/components/lock.component.ts","webpack:///./jslib/angular/src/components/login.component.ts","webpack:///./jslib/common/src/misc/captcha_iframe.ts","webpack:///./jslib/common/src/misc/iframe_component.ts","webpack:///./jslib/common/src/models/request/deleteRecoverRequest.ts","webpack:///./jslib/common/src/models/request/twoFactorRecoveryRequest.ts","webpack:///./jslib/angular/src/components/register.component.ts","webpack:///./jslib/common/src/models/request/registerRequest.ts","webpack:///./jslib/common/src/models/request/referenceEventRequest.ts","webpack:///./jslib/angular/src/components/set-password.component.ts","webpack:///./jslib/common/src/models/request/setPasswordRequest.ts","webpack:///./jslib/angular/src/components/two-factor-options.component.ts","webpack:///./jslib/angular/src/components/two-factor.component.ts","webpack:///./jslib/common/src/models/domain/authResult.ts","webpack:///./jslib/common/src/models/request/deviceRequest.ts","webpack:///./jslib/common/src/models/request/preloginRequest.ts","webpack:///./jslib/common/src/models/request/tokenRequest.ts","webpack:///./jslib/common/src/misc/webauthn_iframe.ts","webpack:///./jslib/angular/src/components/update-temp-password.component.ts","webpack:///./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack:///./jslib/common/src/models/request/verifyEmailRequest.ts","webpack:///./jslib/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack:///./jslib/common/src/models/request/groupRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserConfirmRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserInviteRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserUpdateRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack:///./jslib/common/src/models/request/policyRequest.ts","webpack:///./jslib/common/src/models/request/organizationUpdateRequest.ts","webpack:///./jslib/common/src/models/request/organizationSubscriptionUpdateRequest.ts","webpack:///./jslib/common/src/enums/transactionType.ts","webpack:///./jslib/common/src/models/request/verifyBankRequest.ts","webpack:///./jslib/common/src/models/request/bitPayInvoiceRequest.ts","webpack:///./jslib/common/src/models/request/paymentRequest.ts","webpack:///./jslib/common/src/models/request/storageRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack:///./jslib/common/src/models/request/twoFactorProviderRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack:///./jslib/angular/src/components/export.component.ts","webpack:///./jslib/common/src/models/view/attachmentView.ts","webpack:///./jslib/common/src/models/request/attachmentRequest.ts","webpack:///./jslib/angular/src/components/add-edit.component.ts","webpack:///./jslib/angular/src/components/add-edit-custom-fields.component.ts","webpack:///./jslib/angular/src/components/ciphers.component.ts","webpack:///./jslib/angular/src/components/collections.component.ts","webpack:///./jslib/angular/src/components/groupings.component.ts","webpack:///./jslib/common/src/models/domain/sendAccess.ts","webpack:///./jslib/common/src/models/view/sendAccessView.ts","webpack:///./jslib/common/src/models/request/sendAccessRequest.ts","webpack:///./jslib/angular/src/components/send/add-edit.component.ts","webpack:///./jslib/angular/src/components/send/efflux-dates.component.ts","webpack:///./jslib/angular/src/components/send/send.component.ts","webpack:///./jslib/common/src/models/request/updateProfileRequest.ts","webpack:///./jslib/common/src/models/request/emailRequest.ts","webpack:///./jslib/common/src/models/request/sendWithIdRequest.ts","webpack:///./jslib/common/src/models/request/kdfRequest.ts","webpack:///./jslib/common/src/models/request/updateDomainsRequest.ts","webpack:///./jslib/common/src/models/request/emergencyAccessInviteRequest.ts","webpack:///./jslib/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack:///./jslib/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack:///./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./jslib/angular/src/components/password-generator-history.component.ts","webpack:///./jslib/angular/src/components/password-generator.component.ts","webpack:///./jslib/angular/src/components/folder-add-edit.component.ts","webpack:///./jslib/angular/src/components/share.component.ts","webpack:///./jslib/angular/src/directives/box-row.directive.ts","webpack:///./jslib/angular/src/pipes/search-ciphers.pipe.ts","webpack:///./bitwarden_license/src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./bitwarden_license/src/app/organizations/organizations.module.ts","webpack:///./jslib/common/src/models/request/organization/organizationSsoRequest.ts","webpack:///./bitwarden_license/src/app/organizations/organizations-routing.module.ts","webpack:///./src/app/oss-routing.module.ts","webpack:///./src/app/services/services.module.ts","webpack:///./src/services/broadcasterMessaging.service.ts","webpack:///./src/services/htmlStorage.service.ts","webpack:///./src/services/i18n.service.ts","webpack:///./jslib/common/src/services/i18n.service.ts","webpack:///./src/services/memoryStorage.service.ts","webpack:///./src/services/passwordReprompt.service.ts","webpack:///./jslib/angular/src/services/passwordReprompt.service.ts","webpack:///./src/services/webPlatformUtils.service.ts","webpack:///./jslib/common/src/services/api.service.ts","webpack:///./jslib/common/src/models/response/apiKeyResponse.ts","webpack:///./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/billingResponse.ts","webpack:///./jslib/common/src/models/response/breachAccountResponse.ts","webpack:///./jslib/common/src/models/response/globalDomainResponse.ts","webpack:///./jslib/common/src/models/response/eventResponse.ts","webpack:///./jslib/common/src/models/response/groupResponse.ts","webpack:///./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack:///./jslib/common/src/models/response/identityTokenResponse.ts","webpack:///./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/common/src/models/response/listResponse.ts","webpack:///./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///./jslib/common/src/models/api/ssoConfigApi.ts","webpack:///./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///./jslib/common/src/models/response/organizationKeysResponse.ts","webpack:///./jslib/common/src/models/response/keysResponse.ts","webpack:///./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserResponse.ts","webpack:///./jslib/common/src/models/response/paymentResponse.ts","webpack:///./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderResponse.ts","webpack:///./jslib/common/src/models/response/preloginResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack:///./jslib/common/src/models/response/sendAccessResponse.ts","webpack:///./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/syncResponse.ts","webpack:///./jslib/common/src/models/response/taxInfoResponse.ts","webpack:///./jslib/common/src/models/response/taxRateResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/common/src/models/response/userKeyResponse.ts","webpack:///./jslib/common/src/services/appId.service.ts","webpack:///./jslib/common/src/services/audit.service.ts","webpack:///./jslib/common/src/misc/throttle.ts","webpack:///./jslib/common/src/services/cipher.service.ts","webpack:///./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/common/src/models/request/cipherShareRequest.ts","webpack:///./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/common/src/services/collection.service.ts","webpack:///./jslib/common/src/models/domain/treeNode.ts","webpack:///./jslib/common/src/enums/logLevelType.ts","webpack:///./jslib/common/src/services/container.service.ts","webpack:///./jslib/common/src/services/crypto.service.ts","webpack:///./jslib/common/src/models/domain/encArrayBuffer.ts","webpack:///./jslib/common/src/models/domain/encryptedObject.ts","webpack:///./jslib/common/src/services/environment.service.ts","webpack:///./jslib/common/src/models/domain/environmentUrls.ts","webpack:///./jslib/common/src/services/event.service.ts","webpack:///./jslib/common/src/models/data/eventData.ts","webpack:///./jslib/common/src/models/request/eventRequest.ts","webpack:///./jslib/common/src/services/export.service.ts","webpack:///./jslib/common/src/models/export/cipher.ts","webpack:///./jslib/common/src/models/export/card.ts","webpack:///./jslib/common/src/models/export/field.ts","webpack:///./jslib/common/src/models/export/identity.ts","webpack:///./jslib/common/src/models/export/login.ts","webpack:///./jslib/common/src/models/export/loginUri.ts","webpack:///./jslib/common/src/models/export/secureNote.ts","webpack:///./jslib/common/src/models/export/collection.ts","webpack:///./jslib/common/src/models/export/event.ts","webpack:///./jslib/common/src/models/export/folder.ts","webpack:///./jslib/common/src/services/fileUpload.service.ts","webpack:///./jslib/common/src/enums/fileUploadType.ts","webpack:///./jslib/common/src/services/azureFileUpload.service.ts","webpack:///./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack:///./jslib/common/src/services/folder.service.ts","webpack:///./jslib/common/src/services/import.service.ts","webpack:///./jslib/common/src/models/request/importCiphersRequest.ts","webpack:///./jslib/common/src/models/request/importOrganizationCiphersRequest.ts","webpack:///./jslib/common/src/models/request/kvpRequest.ts","webpack:///./jslib/common/src/importers/ascendoCsvImporter.ts","webpack:///./jslib/common/src/importers/avastCsvImporter.ts","webpack:///./jslib/common/src/importers/avastJsonImporter.ts","webpack:///./jslib/common/src/importers/aviraCsvImporter.ts","webpack:///./jslib/common/src/importers/bitwardenCsvImporter.ts","webpack:///./jslib/common/src/importers/bitwardenJsonImporter.ts","webpack:///./jslib/common/src/importers/blackBerryCsvImporter.ts","webpack:///./jslib/common/src/importers/blurCsvImporter.ts","webpack:///./jslib/common/src/importers/buttercupCsvImporter.ts","webpack:///./jslib/common/src/importers/chromeCsvImporter.ts","webpack:///./jslib/common/src/importers/clipperzHtmlImporter.ts","webpack:///./jslib/common/src/importers/codebookCsvImporter.ts","webpack:///./jslib/common/src/importers/dashlaneJsonImporter.ts","webpack:///./jslib/common/src/importers/encryptrCsvImporter.ts","webpack:///./jslib/common/src/importers/enpassCsvImporter.ts","webpack:///./jslib/common/src/importers/enpassJsonImporter.ts","webpack:///./jslib/common/src/importers/firefoxCsvImporter.ts","webpack:///./jslib/common/src/importers/fsecureFskImporter.ts","webpack:///./jslib/common/src/importers/gnomeJsonImporter.ts","webpack:///./jslib/common/src/importers/kasperskyTxtImporter.ts","webpack:///./jslib/common/src/importers/keepass2XmlImporter.ts","webpack:///./jslib/common/src/importers/keepassxCsvImporter.ts","webpack:///./jslib/common/src/importers/keeperCsvImporter.ts","webpack:///./jslib/common/src/importers/lastpassCsvImporter.ts","webpack:///./jslib/common/src/importers/logMeOnceCsvImporter.ts","webpack:///./jslib/common/src/importers/meldiumCsvImporter.ts","webpack:///./jslib/common/src/importers/msecureCsvImporter.ts","webpack:///./jslib/common/src/importers/mykiCsvImporter.ts","webpack:///./jslib/common/src/importers/nordpassCsvImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepassword1PifImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordMacCsvImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/cipherImportContext.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordWinCsvImporter.ts","webpack:///./jslib/common/src/importers/padlockCsvImporter.ts","webpack:///./jslib/common/src/importers/passkeepCsvImporter.ts","webpack:///./jslib/common/src/importers/passmanJsonImporter.ts","webpack:///./jslib/common/src/importers/passpackCsvImporter.ts","webpack:///./jslib/common/src/importers/passwordAgentCsvImporter.ts","webpack:///./jslib/common/src/importers/passwordBossJsonImporter.ts","webpack:///./jslib/common/src/importers/passwordDragonXmlImporter.ts","webpack:///./jslib/common/src/importers/passwordSafeXmlImporter.ts","webpack:///./jslib/common/src/importers/passwordWalletTxtImporter.ts","webpack:///./jslib/common/src/importers/rememBearCsvImporter.ts","webpack:///./jslib/common/src/importers/roboformCsvImporter.ts","webpack:///./jslib/common/src/importers/safeInCloudXmlImporter.ts","webpack:///./jslib/common/src/importers/saferpassCsvImport.ts","webpack:///./jslib/common/src/importers/secureSafeCsvImporter.ts","webpack:///./jslib/common/src/importers/splashIdCsvImporter.ts","webpack:///./jslib/common/src/importers/stickyPasswordXmlImporter.ts","webpack:///./jslib/common/src/importers/truekeyCsvImporter.ts","webpack:///./jslib/common/src/importers/upmCsvImporter.ts","webpack:///./jslib/common/src/importers/yotiCsvImporter.ts","webpack:///./jslib/common/src/importers/zohoVaultCsvImporter.ts","webpack:///./jslib/common/src/services/notifications.service.ts","webpack:///./jslib/common/src/models/response/notificationResponse.ts","webpack:///./jslib/common/src/services/passwordGeneration.service.ts","webpack:///./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/common/src/services/policy.service.ts","webpack:///./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///./jslib/common/src/services/search.service.ts","webpack:///./jslib/common/src/services/send.service.ts","webpack:///./jslib/common/src/models/data/sendFileData.ts","webpack:///./jslib/common/src/models/data/sendTextData.ts","webpack:///./jslib/common/src/models/domain/send.ts","webpack:///./jslib/common/src/services/settings.service.ts","webpack:///./jslib/common/src/services/state.service.ts","webpack:///./jslib/common/src/services/sync.service.ts","webpack:///./jslib/common/src/models/data/organizationData.ts","webpack:///./jslib/common/src/models/data/providerData.ts","webpack:///./jslib/common/src/services/token.service.ts","webpack:///./jslib/common/src/services/totp.service.ts","webpack:///./jslib/common/src/services/user.service.ts","webpack:///./jslib/common/src/models/domain/provider.ts","webpack:///./jslib/common/src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/services/webCryptoFunction.service.ts","webpack:///./jslib/common/src/models/domain/decryptParameters.ts","webpack:///./jslib/common/src/abstractions/fileUpload.service.ts","webpack:///./src/app/services/modal.service.ts","webpack:///./src/app/wildcard-routing.module.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","I18nService","PlatformUtilsService","ApiService","UserService","i18nService","transform","id","p1","p2","p3","this","I18nPipe","Pipe","CryptoService","MessagingService","el","renderer","title","ngOnInit","nativeElement","hasAttribute","setAttribute","A11yTitleDirective","Directive","selector","appA11yTitle","Input","validationService","logService","ngOnChanges","changes","appApiAction","then","loading","response","e","ErrorResponse","constructor","captchaRequired","error","getSingleMessage","showError","ApiActionDirective","type","calloutStyle","undefined","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","str","minComplexity","CalloutComponent","Component","templateUrl","clickable","allowMultipleModals","ModalConfig","componentFactoryResolver","applicationRef","injector","modalCount","factoryResolvers","Map","openViewRef","componentType","viewContainerRef","setComponentParameters","openInternal","modalRef","modalComponentRef","instance","insert","hostView","onCreated","pipe","first","toPromise","componentRef","open","config","registerComponentFactoryResolver","set","resolveComponentFactory","has","attachToDom","createModalComponent","childComponentType","attachView","domElem","rootNodes","document","body","appendChild","onClosed","subscribe","detachView","destroy","setupHandlers","backdrop","classList","add","createElement","className","style","zIndex","querySelector","addEventListener","stopPropagation","Array","from","querySelectorAll","event","close","onClose","closed","remove","removeChild","ModalRef","map","WeakMap","DynamicModalComponent","ModalInjector","ModalService","Injectable","CipherService","getResponseProperty","propertyName","exactName","Error","otherCasePropertyName","charAt","toUpperCase","toLowerCase","BaseResponse","PolicyService","nodeURL","init","Utils","inited","isNode","process","release","isBrowser","isNativeScript","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","fromB64ToArray","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromUrlB64ToArray","fromUrlB64ToB64","fromHexToArray","parseInt","substr","fromUtf8ToArray","strUtf8","unescape","encodeURIComponent","arr","fromByteStringToArray","fromBufferToB64","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromBufferToUrlB64","fromB64toUrlB64","b64Str","replace","fromBufferToUtf8","encodedString","decodeURIComponent","escape","fromBufferToByteString","fromBufferToHex","x","join","urlB64Str","output","fromUrlB64ToUtf8","fromB64ToUtf8","fromUtf8ToB64","utfStr","fromUtf8ToUrlB64","newGuid","Math","random","isGuid","RegExp","test","getHostname","uriString","url","getUrl","hostname","getHost","host","getDomain","trim","startsWith","httpUrl","indexOf","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","domain","getQueryParams","search","split","forEach","pair","parts","getSortFunction","prop","a","b","collator","compare","localeCompare","isNullOrWhitespace","nameOf","assign","target","source","iterateEnum","obj","keys","filter","k","Number","isNaN","camelToPascalCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","parse","hasProtocol","anchor","href","regexpEmojiPresentation","PasswordGenerationService","organizationId","ConsoleLogService","newLineRegex","passwordFieldNames","usernameFieldNames","notesFieldNames","uriFieldNames","parseCsvOptions","encoding","skipEmptyLines","parseXml","doc","DOMParser","parseFromString","parseCsv","header","options","parseOptions","splitNewLine","papa","errors","row","warning","message","parseSingleRowCsv","rowData","parsedRow","makeUriArray","uri","loginUri","LoginUriView","fixUri","u","substring","nameFromUrl","getValueOrDefault","defaultValue","getCardBrand","cardNum","re","setCardExpiration","cipher","expiration","month","year","card","expMonth","expYear","moveFoldersToCollections","folderRelationships","collectionRelationships","collections","folders","f","collection","CollectionView","querySelectorDirectChild","parentEl","query","els","querySelectorAllDirectChild","parentNode","initLoginCipher","CipherView","favorite","notes","fields","login","LoginView","CipherType","Login","cleanupCipher","processKvp","FieldType","Text","field","FieldView","processFolder","folderName","folderIndex","hasFolder","addFolder","FolderView","ciphers","convertToNoteIfNeeded","username","password","uris","SecureNote","secureNote","SecureNoteView","SecureNoteType","Generic","BaseImporter","success","ImportResult","StateService","onClick","$event","preventDefault","StopClickDirective","HostListener","StorageService","SyncService","condition","disableComplete","InputVerbatimDirective","appInputVerbatim","EnvironmentService","CollectionService","PasswordRepromptService","StopPropDirective","AuthService","FolderService","PolicyType","indexedEntityId","SearchService","EventService","autofocus","focus","AutofocusDirective","appAutofocus","user","email","UserNamePipe","environmentUrlsKey","ConstantsService","disableGaKey","disableAddLoginNotificationKey","disableContextMenuItemKey","disableFaviconKey","disableBadgeCounterKey","disableAutoTotpCopyKey","disableAutoBiometricsPromptKey","enableAutoFillOnPageLoadKey","autoFillOnPageLoadDefaultKey","vaultTimeoutKey","vaultTimeoutActionKey","lastActiveKey","neverDomainsKey","installedVersionKey","localeKey","themeKey","collapsedGroupingsKey","autoConfirmFingerprints","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","defaultUriMatch","pinProtectedKey","protectedPin","clearClipboardKey","eventCollectionKey","ssoCodeVerifierKey","ssoStateKey","biometricUnlockKey","biometricText","biometricAwaitingAcceptance","biometricFingerprintValidated","disableChangedPasswordNotificationKey","LogService","buildDomainModel","dataObj","alreadyEncrypted","notEncList","objProp","EncString","buildDataModel","notEncStringList","encryptedString","decryptObj","viewModel","orgId","promises","self","theProp","Promise","resolve","mapProp","decrypt","val","all","PasswordVerificationRequest","cardholderName","code","_brand","_number","_subTitle","repeat","number","brand","count","exp","formatYear","CardView","CryptoFunctionService","VaultTimeoutService","platformUtilsService","defaultErrorMessage","validationErrors","concat","getAllMessages","showToast","timeout","ValidationService","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","EncryptionType","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decryptedValue","containerService","bitwardenContainerService","cryptoService","getCryptoService","getOrgKey","decryptToUtf8","AuditService","IconMap","environmentService","stateService","iconsUrl","getIconsUrl","image","fallbackImage","imageEnabled","load","setLoginIcon","Card","Identity","hostnameUri","isWebsite","IconComponent","TokenService","ExportService","BroadcasterService","TwoFactorProviderType","display","organization","BasePolicy","enabled","FormControl","setValue","policyResponse","loadData","patchValue","buildRequestData","buildRequest","policiesEnabledMap","request","PolicyRequest","policy","BasePolicyComponent","items","searchText","prop1","prop2","prop3","SearchPipe","TotpService","SendService","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","apiService","showMethods","showOptions","method","PaymentMethodType","hideBank","hidePaypal","hideCredit","bank","routing_number","account_number","account_holder_name","account_holder_type","currency","country","paymentMethodType","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","src","async","onload","Stripe","elements","setStripeElement","btScript","StripeElementStyle","base","color","fontFamily","fontSize","fontSmoothing","invalid","StripeElementClasses","empty","PayPal","BankAccount","Credit","setTheme","head","ngOnDestroy","setTimeout","btStylesheet","changeMethod","braintree","dropin","authorization","container","paymentOptionPriority","paypal","flow","buttonStyle","label","size","shape","tagline","createErr","console","createPaymentToken","reject","requestPaymentMethod","payload","nonce","catch","err","postSetupPayment","clientSecret","handleCardSetup","setupIntent","status","payment_method","createToken","token","handleStripeCardPayment","successCallback","paymentIntent","classes","placeholder","mount","getEffectiveTheme","ThemeType","Dark","PaymentComponent","folderId","organizationUseTotp","edit","viewPassword","identity","IdentityView","attachments","passwordHistory","collectionIds","revisionDate","deletedDate","reprompt","CipherRepromptType","None","localData","subTitle","hasAttachments","passwordRevisionDate","middleName","address1","address2","address3","city","state","postalCode","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","address","addressPart2","route","onCountryChanged","EventEmitter","taxInfo","taxId","line1","line2","includeTaxId","pristine","parent","params","getOrganizationTaxInfo","getTaxInfo","emit","getTaxRates","taxRates","localTaxRate","find","rate","getTaxInfoRequest","OrganizationTaxInfoUpdateRequest","TaxInfoUpdateRequest","submitTaxInfo","hasChanged","putOrganizationTaxInfo","putTaxInfo","changeCountry","TaxInfoComponent","Output","policyService","getDefaultDateFilters","Date","end","getFullYear","getMonth","getDate","setDate","start","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","getTime","toISOString","getEventInfo","ev","EventOptions","appInfo","getAppInfo","deviceType","getEventMessage","humanReadableMessage","appIcon","appName","msg","humanReadableMsg","EventType","User_LoggedIn","User_ChangedPassword","User_Updated2fa","User_Disabled2fa","User_Recovered2fa","User_FailedLogIn","User_FailedLogIn2fa","User_ClientExportedVault","User_UpdatedTempPassword","Cipher_Created","Cipher_Updated","Cipher_Deleted","Cipher_SoftDeleted","Cipher_Restored","Cipher_AttachmentCreated","Cipher_AttachmentDeleted","Cipher_Shared","Cipher_ClientViewed","Cipher_ClientToggledPasswordVisible","Cipher_ClientToggledHiddenFieldVisible","Cipher_ClientToggledCardCodeVisible","Cipher_ClientCopiedHiddenField","Cipher_ClientCopiedPassword","Cipher_ClientCopiedCardCode","Cipher_ClientAutofilled","Cipher_UpdatedCollections","Collection_Created","Collection_Updated","Collection_Deleted","Group_Created","Group_Updated","Group_Deleted","OrganizationUser_Invited","OrganizationUser_Confirmed","OrganizationUser_Updated","OrganizationUser_Removed","OrganizationUser_UpdatedGroups","OrganizationUser_UnlinkedSso","OrganizationUser_ResetPassword_Enroll","OrganizationUser_ResetPassword_Withdraw","OrganizationUser_AdminResetPassword","OrganizationUser_ResetSsoLink","Organization_Updated","Organization_PurgedVault","Organization_VaultAccessed","Policy_Updated","ProviderUser_Invited","ProviderUser_Confirmed","ProviderUser_Updated","ProviderUser_Removed","ProviderOrganization_Created","ProviderOrganization_Added","ProviderOrganization_Removed","ProviderOrganization_VaultAccessed","formatCipherId","getShortId","cipherId","formatCollectionId","collectionId","formatGroupId","groupId","formatOrgUserId","organizationUserId","formatPolicyId","getAll","policies","policyId","formatProviderUserId","providerUserId","formatProviderOrganizationId","providerOrganizationId","DeviceType","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","WindowsDesktop","MacOsDesktop","LinuxDesktop","ChromeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","VivaldiBrowser","EdgeBrowser","IEBrowser","UnknownBrowser","shortId","cipherInfo","makeAnchor","outerHTML","providerId","innerHTML","date","pad","getHours","getMinutes","num","norm","floor","abs","EventInfo","totp","autofillOnPageLoad","hasUris","some","canLaunch","launchUri","externalId","readOnly","hidePasswords","Collection","userId","LoginData","SecureNoteData","CardData","IdentityData","FieldData","AttachmentData","ph","PasswordHistoryData","CipherData","SendType","identityResponse","errorModel","responseErrorModel","captchaSiteKey","HCaptcha_SiteKey","statusCode","messages","item","prefix","lastSep","lastIndexOf","OrganizationUserStatusType","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","PermissionsApi","showText","scoreWidth","score","text","PasswordStrengthComponent","CollectionData","toasterService","onAuthed","submit","masterPassword","popAsync","hashPassword","masterPasswordHash","formPromise","getTwoFactorRecover","Duo","OrganizationDuo","getTwoFactorOrganizationDuo","getTwoFactorDuo","Email","getTwoFactorEmail","WebAuthn","getTwoFactorWebAuthn","Authenticator","getTwoFactorAuthenticator","Yubikey","getTwoFactorYubiKey","TwoFactorVerifyComponent","Attachment","Field","Password","encKey","model","reduce","promise","attachment","decAttachment","decField","decPh","toCipherData","toLoginData","toSecureNoteData","toCardData","toIdentityData","toFieldData","toAttachmentData","toPasswordHistoryData","Cipher","messagingService","tokenService","userService","syncService","selfHosted","providers","isSelfHost","getName","getEmail","getLastSync","fullSync","getAllProviders","lock","send","logOut","NavbarComponent","getApplicationVersion","version","FooterComponent","router","showFree","showCancel","product","ProductType","Free","plan","PlanType","onSuccess","onCanceled","ownedBusiness","premiumAccessAddon","additionalStorage","additionalSeats","productTypes","singleOrgPolicyBlock","getPlans","plans","Enterprise","Teams","changedOwnedBusiness","selectedPlan","isAnnual","validPlans","Custom","canBeUsedByBusiness","legacyYear","disabled","additionalStoragePriceMonthly","additionalStoragePricePerGb","seatPriceMonthly","seatPrice","additionalStorageTotal","hasAdditionalStorageOption","seatTotal","hasAdditionalSeatsOption","subTotal","basePrice","hasPremiumAccessOption","premiumAccessOptionPrice","trialPeriodDays","taxComponent","taxRate","subtotal","taxCharges","changedProduct","selectablePlans","baseSeats","TeamsAnnually","changedCountry","paymentComponent","cancel","userHasBlockingSingleOrgPolicy","doSubmit","createOrganization","makeShareKey","shareKey","encrypt","collectionCt","makeKeyPair","orgKeys","createSelfHosted","createCloudHosted","updateOrganization","refreshIdentityToken","navigate","policyAppliesToUser","SingleOrg","OrganizationUpgradeRequest","businessName","additionalStorageGb","planType","billingAddressCountry","billingAddressPostalCode","getOrganization","hasPublicAndPrivateKeys","orgShareKey","OrganizationKeysRequest","postOrganizationUpgrade","paymentIntentClientSecret","orgKey","OrganizationCreateRequest","collectionName","billingEmail","tokenResult","paymentToken","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","getProviderKey","providerKey","organizationCreateRequest","postProviderCreateOrganization","postOrganization","fileEl","getElementById","files","fd","FormData","append","postOrganizationLicense","postOrganizationKeys","OrganizationPlansComponent","ViewChild","lastKnownRevisionDate","LoginApi","LoginUriApi","SecureNoteApi","CardApi","IdentityApi","FieldApi","lastUsedDate","attachments2","fileName","attachmentRequest","AttachmentRequest","CipherRequest","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","asObservable","onShow","onShown","show","next","shown","lastResult","created","onClosedPromise","Permissions","addOrganizationToProvider","encryptedOrgKey","ProviderAddOrganizationRequest","postProviderAddOrganization","detachOrganizastion","deleteProviderOrganization","ProviderService","activatedRoute","titleService","previousUrl","currentUrl","events","NavigationEnd","titleId","rawTitle","child","firstChild","snapshot","newTitle","setTitle","getPreviousUrl","setPreviousUrl","RouterService","KdfType","OrganizationUserType","macKey","keyB64","encKeyB64","macKeyB64","SymmetricCryptoKey","addPolicies","getPolicies","PolicyListService","onUpdated","twoFactorProviderType","authed","auth","authResponse","enable","enableFunction","disable","showDialog","TwoFactorProviderRequest","putTwoFactorOrganizationDisable","putTwoFactorDisable","TwoFactorBaseComponent","modalService","passwordRepromptService","requiresPaid","hasLoaded","setCiphers","selectCipher","repromptCipher","AddEditComponent","cipherAddEditModalRef","comp","onSavedCipher","modal","onDeletedCipher","onRestoredCipher","checkAccess","useTotp","canAccessPremium","accessPremium","showPasswordPrompt","CipherReportComponent","ViewContainerRef","read","static","newField","showValue","cipherService","folderService","auditService","collectionService","totpService","passwordGenerationService","eventService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","getTimeInterval","totpTick","totpInterval","setInterval","toggleFavorite","launch","copy","typeI18nKey","aType","copyToClipboard","editMode","collect","generatePassword","confirmed","getOptions","premiumRequired","upgradeOrganization","viewHistory","clearInterval","getCode","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","cloneMode","ownershipOptions","allowPersonal","intervalSeconds","epoch","round","mod","totpSec","totpDash","totpLow","ImportService","searchService","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","pagedCiphers","pageSize","cipherType","userHasPremiumAccess","didScroll","pagedCiphersCount","refreshing","selectAll","loadMore","pagedLength","pagedSize","refresh","reload","deleted","isPaging","searching","isSearching","resetPaging","doSearch","indexedCiphers","searchCiphers","deletedFilter","share","clone","delete","actionPromise","permanent","isDeleted","deleteCipher","restore","restoreWithServer","protectedFields","includes","displayTotpCopyButton","select","selectCount","checkCipher","checked","getSelected","getSelectedIds","hasTotp","deleteWithServer","softDeleteWithServer","showFixOldAttachments","hasOldAttachments","CiphersComponent","vaultTimeoutService","canActivate","routerState","isAuthenticated","isLocked","queryParams","promptBiometric","AuthGuardService","ProviderUserType","publicKey","encryptedPrivateKey","KeysRequest","requiredParameters","failedShortMessage","failedMessage","fired","qParams","errorMessage","authedHandler","save","getRedirectRoute","unauthedHandler","toast","urlTree","parseUrl","BaseAcceptComponent","userNamePipe","showUser","loaded","orgUsersUserIdMap","orgUsersIdMap","defaultDates","getOrganizationUsers","loadEvents","clearExisting","refreshPromise","morePromise","dates","entity","getEventsProviderUser","entityId","continuationToken","getEventsOrganizationUser","getEventsCipher","actingUserId","eventInfo","userName","userEmail","ip","ipAddress","EntityEventsComponent","OrganizationUserResetPasswordEnrollmentRequest","HashPurpose","PolicyData","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","kdf","getKdf","kdfIterations","getKdfIterations","makeKey","getEncKey","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordRetype","strengthResult","passwordStrength","getPasswordStrengthUserInput","evaluateMasterPassword","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","masterPasswordScore","userInput","atPosition","ChangePasswordComponent","SelectionReadOnlyRequest","PolicyResponse","CanLaunchWhitelist","_uri","_domain","_hostname","_host","_canLaunch","UriMatchType","RegularExpression","AddEditCustomFieldsComponent","storageService","onSearchTextChanged","searchPlaceholder","searchTextChanged","GroupingsComponent","selectType","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useSso","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","ssoBound","identifier","permissions","resetPasswordEnrolled","providerName","isProviderUser","Owner","Confirmed","Manager","Admin","isAdmin","isManager","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canDeleteAssignedCollections","canEditAssignedCollections","canManagePolicies","Organization","sizeName","SendFileView","hidden","SendTextView","AttachmentResponse","h","PasswordHistoryResponse","CipherResponse","vault","getAllOrganizations","orgs","sort","organizations","ResetPassword","allowEnrollmentChanges","org","autoEnrollEnabled","showEnrolledStatus","unlinkSso","deleteSsoUser","leave","postLeaveOrganization","toggleResetPasswordEnrollment","keyString","toastStringRef","getOrganizationKeys","rsaEncrypt","encryptedKey","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","OrganizationsComponent","SelectionReadOnlyResponse","ProviderUserStatusType","ids","ProviderUserBulkRequest","BulkStatusComponent","publicKeys","fingerprints","statuses","done","excludedUsers","users","isAccepted","filteredUsers","getPublicKeys","entry","getFingerprint","fingerprint","getCryptoKey","userIdsWithKeys","postConfirmRequest","Accepted","OrganizationUserBulkRequest","postOrganizationUsersPublicKey","OrganizationUserBulkConfirmRequest","postOrganizationUserBulkConfirm","BulkConfirmComponent","deleteUsers","deleteManyOrganizationUsers","BulkRemoveComponent","FrontendLayoutComponent","ProvidersComponent","registerLocaleData","OssModule","DatePipe","CommonModule","FormsModule","InfiniteScrollModule","DragDropModule","ToasterModule","forChild","ReactiveFormsModule","RouterModule","AcceptEmergencyComponent","AccessComponent","AcceptOrganizationComponent","AccountComponent","SetPasswordComponent","AddCreditComponent","AdjustPaymentComponent","AdjustSubscription","AdjustStorageComponent","ApiKeyComponent","AttachmentsComponent","AvatarComponent","BlurClickDirective","BoxRowDirective","BreachReportComponent","BulkActionsComponent","BulkDeleteComponent","BulkMoveComponent","BulkRestoreComponent","BulkShareComponent","ChangeEmailComponent","ChangeKdfComponent","ChangePlanComponent","CollectionsComponent","ColorPasswordPipe","CreateOrganizationComponent","DeauthorizeSessionsComponent","DeleteAccountComponent","DeleteOrganizationComponent","DomainRulesComponent","DownloadLicenseComponent","EmergencyAccessAddEditComponent","EmergencyAccessAttachmentsComponent","EmergencyAccessComponent","EmergencyAccessConfirmComponent","EmergencyAccessTakeoverComponent","EmergencyAccessViewComponent","EmergencyAddEditComponent","ExportComponent","ExposedPasswordsReportComponent","FallbackSrcDirective","FolderAddEditComponent","HintComponent","ImportComponent","InactiveTwoFactorReportComponent","LinkSsoComponent","LockComponent","LoginComponent","NestedCheckboxComponent","OptionsComponent","OrganizationBillingComponent","OrganizationSubscriptionComponent","OrganizationLayoutComponent","PasswordGeneratorComponent","PasswordGeneratorHistoryComponent","PasswordRepromptComponent","PremiumComponent","ProfileComponent","PurgeVaultComponent","RecoverDeleteComponent","RecoverTwoFactorComponent","RegisterComponent","ReusedPasswordsReportComponent","SearchCiphersPipe","SelectCopyDirective","SendComponent","SettingsComponent","ShareComponent","SsoComponent","ToolsComponent","TrueFalseValueDirective","TwoFactorAuthenticatorComponent","TwoFactorComponent","TwoFactorDuoComponent","TwoFactorEmailComponent","TwoFactorOptionsComponent","TwoFactorRecoveryComponent","TwoFactorSetupComponent","TwoFactorWebAuthnComponent","TwoFactorYubiKeyComponent","UnsecuredWebsitesReportComponent","UpdateKeyComponent","UpdateLicenseComponent","UpdateTempPasswordComponent","UserBillingComponent","UserLayoutComponent","UserSubscriptionComponent","VaultComponent","VerifyEmailComponent","VerifyEmailTokenComponent","VerifyRecoverDeleteComponent","WeakPasswordsReportComponent","TwoFactorAuthenticationPolicyComponent","MasterPasswordPolicyComponent","SingleOrgPolicyComponent","PasswordGeneratorPolicyComponent","RequireSsoPolicyComponent","PersonalOwnershipPolicyComponent","DisableSendPolicyComponent","SendOptionsPolicyComponent","ResetPasswordPolicyComponent","VaultTimeoutInputComponent","NgModule","imports","declarations","bootstrap","BroadcasterSubscriptionId","broadcasterService","ngZone","run","command","unsubscribe","showManageTab","showToolsTab","isOwner","canManageUsers","canViewAllCollections","canViewAssignedCollections","canManageGroups","canAccessEventLogs","canAccessImportExport","canAccessReports","Policy","TwoFactorProviders","description","priority","premium","appIdService","setCryptoKeys","selectedTwoFactorProviderType","logIn","captchaToken","makePreloginKey","hashedPassword","LocalAuthorization","localHashedPassword","logInHelper","logInSso","codeVerifier","redirectUrl","logInApiKey","clientId","logInTwoFactor","twoFactorProvider","twoFactorToken","remember","localMasterPasswordHash","ssoRedirectUrl","logInComplete","logInSsoComplete","logInApiKeyComplete","callback","getSupportedTwoFactorProviders","twoFactorProvidersData","supportsDuo","supportsWebAuthn","getDefaultTwoFactorProvider","webAuthnSupported","providerType","providerPriority","provider","postPrelogin","PreloginRequest","preloginResponse","authingWithApiKey","authingWithSso","authingWithPassword","getTwoFactorToken","storedTwoFactorToken","getAppId","appId","deviceRequest","DeviceRequest","emailPassword","codeCodeVerifier","clientIdClientSecret","TokenRequest","Remember","postIdentityToken","clearState","AuthResult","siteKey","twoFactor","twoFactorProviders2","twoFactorResponse","twoFactorProviders","tokenResponse","resetMasterPassword","forcePasswordReset","setTwoFactorToken","setTokens","accessToken","refreshToken","setInformation","getUserId","setKey","setKeyHash","setEncKey","privateKey","keyPair","postAccountKeys","setEncPrivateKey","biometricLocked","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","getGroupUsers","getCollectionUsers","accessAll","check","selectedChanged","filterSelected","selections","putGroupUsers","putCollectionUsers","EntityUsersComponent","entityName","accessPolicies","accessGroups","accessEvents","accessSso","ManageComponent","postKey","apiKey","keyType","postPurgeCiphers","firstLoaded","showAdjustPayment","showAddCredit","transactionType","TransactionType","getOrganizationBilling","billing","getUserBilling","verifyBank","VerifyBankRequest","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","postOrganizationVerifyBank","addCredit","paymentSourceInApp","closeAddCredit","changePayment","closePayment","balance","paymentSource","AppleInApp","GoogleInApp","invoices","transactions","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","location","ppButtonFormRef","BitPay","req","BitPayInvoiceRequest","credit","amount","creditAmountNumber","postBitPayInvoice","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","ElementRef","onAdjusted","PaymentRequest","taxInfoComponent","postAccountPayment","postOrganizationPayment","currentType","storageGbPrice","interval","storageAdjustment","StorageRequest","storageGbAdjustment","action","postAccountStorage","postOrganizationStorage","relativeTo","updatePromise","postAccountLicense","postOrganizationLicenseUpdate","processResponse","UpdateTwoFactorDuoRequest","integrationKey","ikey","secretKey","skey","putTwoFactorOrganizationDuo","putTwoFactorDuo","showPolicyWarning","filterProvider","getTwoFactorProviders","evaluatePolicies","manage","openModal","authenticatorModalRef","updateStatus","yubikeyModalRef","duoModalRef","emailModalRef","webAuthnModalRef","recoveryCode","recoveryModalRef","ref","childComponent","TwoFactorAuthentication","exportService","saved","exposedPasswordMap","getAllCiphers","allCiphers","exposedPasswordCiphers","passwordLeaked","exposedCount","getAllDecrypted","canManageCipher","originalCipher","loadCollections","loadCipher","getCipherAdmin","encryptCipher","saveCipher","putCipherAdmin","CipherCreateRequest","postCipherAdmin","deleteCipherAdmin","putDeleteCipherAdmin","LoginUri","view","toLoginUriData","LoginUriData","PasswordHistoryView","importService","format","importBlockedByPolicy","successNavigate","setImportOptions","importOptions","PersonalOwnership","importer","getImporter","fileContents","getFileContents","content","import","getFormatInstructionTitle","results","featuredImportOptions","regularImportOptions","fire","heightAuto","buttonsStyling","iconHtml","input","inputValue","inputAttributes","titleText","showConfirmButton","confirmButtonText","onOpen","popupEl","scrollTo","file","reader","FileReader","readAsText","evt","pre","textContent","onerror","services","cipherDocs","load2fa","fetch","Request","json","categoryName","responseJson","serviceName","category","service","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","unsecuredCiphers","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","cacheKey","scoreKey","reupload","reuploadCipherAttachment","onEventsClicked","getAllFromApiForOrganization","indexCiphers","applyFilter","getCollections","collectionDomains","decryptMany","unassignedCollection","getAllNested","nestedCollections","collapse","grouping","isCollapsed","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","cipherIds","onDeleted","bulkRestore","bulkRestoreModalRef","onRestored","bulkShare","selectedCiphers","bulkShareModalRef","onShared","bulkMove","bulkMoveModalRef","onMoved","notProtected","SendFile","SendText","CipherWithIdRequest","folder","FolderRequest","SendFileApi","SendTextApi","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","passwordArray","colorizedPassword","character","isSpecial","NotificationsService","SettingsService","OrganizationGuardService","AccessEventLogs","AccessImportExport","AccessReports","CreateNewCollections","EditAnyCollection","DeleteAnyCollection","EditAssignedCollections","DeleteAssignedCollections","ManageGroups","ManageOrganization","ManagePolicies","ManageUsers","ManageUsersPassword","canManageUsersPassword","ManageSso","canManageSso","OrganizationTypeGuardService","providerOrganizations","emailVerified","masterPasswordHint","culture","twoFactorEnabled","securityStamp","ProfileOrganizationResponse","ProfileProviderResponse","ProfileProviderOrganizationResponse","ProfileResponse","accessId","maxAccessCount","accessCount","expirationDate","deletionDate","hideEmail","SendResponse","webpackEmptyAsyncContext","getProvider","isProviderAdmin","ProviderGuardService","ManageProvider","ProviderTypeGuardService","showSettingsTab","ProvidersLayoutComponent","DisallowedPlanTypes","FamiliesAnnually2019","FamiliesAnnually","providerService","manageOrganizations","showAddExisting","pagedClientsCount","queryParamsSub","getProviderClients","clients","ProviderAdmin","candidateOrgs","allowedOrgsIds","addableOrganizations","isSearchable","pagedClients","addExistingOrganization","AddOrganizationComponent","addModalRef","onAddedOrganization","organizationName","ClientsComponent","orgPlansComponent","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","MasterPasswordPolicyOptions","ProviderUserAcceptRequest","postProviderUserAccept","AcceptProviderComponent","exportFileName","providerUsersUserIdMap","providerUsersIdMap","getProviderUsers","requestEvents","startDate","endDate","getEventsProvider","getUserName","EventsComponent","exportEvents","BaseEventsComponent","dirtyDates","appApiPromiseUnfulfilled","parseDates","exportPromise","export","loadAndParseEvents","EventView","getEventExport","getFileName","saveFile","searchPipe","userType","userStatusType","viewEvents","getUsers","deleteUser","deleteProviderUser","reinviteUser","postProviderUserReinvite","confirmUser","ProviderUserConfirmRequest","postProviderUserConfirm","UserAddEditComponent","addEditModalRef","onSavedUser","onDeletedUser","removeUser","eventsModalRef","bulkRemove","bulkRemoveModalRef","getCheckedUsers","bulkReinvite","Invited","postManyProviderUserReinvite","showBulkStatus","bulkConfirm","bulkConfirmModalRef","successfullMessage","bulkStatusModalRef","PeopleComponent","invite","BasePeopleComponent","groupsModalRef","statusMap","pagedUsers","pagedUsersCount","confirmedCount","acceptedCount","clear","checkUser","reinvite","confirm","mapIndex","updateUser","getUserPublicKey","publicKeyResponse","autoConfirm","UserConfirmComponent","confirmModalRef","onConfirmedUser","info","index","dontAskAgain","postProviderUsersPublicKey","ProviderUserBulkConfirmRequest","postProviderUserBulkConfirm","deleteManyProviderUsers","ServiceUser","showCustom","access","getProviderUser","ProviderUserUpdateRequest","putProviderUser","ProviderUserInviteRequest","emails","postProviderUserInvite","deletePromise","SetupProviderComponent","replaceUrl","ProviderSetupRequest","postProviderSetup","SetupComponent","ProviderUpdateRequest","putProvider","parentChecked","checkboxes","every","pascalize","parentId","togglePassword","showPassword","compareAndUpdateKeyHash","blur","EmergencyAccessAcceptRequest","postEmergencyAccessAccept","OrganizationUserAcceptRequest","performResetPasswordAutoEnroll","postOrganizationUserAccept","resetRequest","orgName","policyList","getPoliciesByToken","mapPoliciesFromToken","getResetPasswordPolicyOptions","routerService","onSuccessfulSubmit","successRoute","authService","cryptoFunctionService","showResetPasswordAutoEnrollWarning","onSuccessfulLoginNavigate","goAfterLogIn","loginRedirect","setupCaptcha","webVaultUrl","getWebVaultUrl","captcha","CaptchaIFrame","showCaptcha","handleCaptchaRequired","CaptchaProtectedComponent","DeleteRecoverRequest","postAccountRecoverDelete","TwoFactorRecoveryRequest","postTwoFactorRecover","showCreateOrgMessage","layout","referenceData","ReferenceEventRequest","reference","cookie","pop","policiesData","IdentifierStorageKey","redirectUri","origin","storedIdentifier","loggingIn","twoFactorRoute","changePasswordRoute","forcePasswordResetRoute","checkState","getOrgIdentiferFromState","codeChallenge","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","buildAuthorizeUrl","authorizeUrl","sameWindow","preValidateSso","passwordOptions","uppercase","lowercase","numbers","special","hash","codeVerifierHash","getIdentityUrl","getSsoUserIdentifier","userIdentifier","orgIdFromState","onSuccessfulLoginTwoFactorNavigate","sso","onSuccessfulLoginChangePasswordNavigate","onSuccessfulLoginForceResetNavigate","disableFavicon","onSuccessfulLogin","stateSplit","checkStateSplit","recover","anotherMethod","twoFactorOptionsModal","onProviderSelected","selectedProviderType","onRecoverSelected","TwoFactorEmailRequest","OrganizationUserResetPasswordRequest","postAccountVerifyEmailToken","VerifyEmailRequest","VerifyDeleteRecoverRequest","postAccountRecoverDeleteToken","onSavedCollection","onDeletedCollection","groups","getGroups","groupsResponse","getCollectionDetails","group","g","CollectionRequest","putCollection","postCollection","deleteCollection","CollectionAddEditComponent","canSave","canDelete","canCreate","pagedCollectionsCount","decryptCollections","getUserCollections","assignedCollections","pagedCollections","canEdit","removeCollection","usersModalRef","getEventsOrganization","onSavedGroup","onDeletedGroup","getGroupDetails","GroupRequest","putGroup","postGroup","deleteGroup","GroupAddEditComponent","pagedGroupsCount","pagedGroups","removeGroup","GroupsComponent","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","getPolicyForOrganization","resetPasswordPolicy","deleteOrganizationUser","postOrganizationUserReinvite","OrganizationUserConfirmRequest","postOrganizationUserConfirm","allowResetPassword","orgUser","callingUserHasPermission","UserGroupsComponent","postManyOrganizationUserReinvite","resetPassword","ResetPasswordComponent","resetPasswordModalRef","onPasswordReset","newPassword","getOrganizationUserResetPasswordDetails","kdfType","orgSymKey","decryptToBytes","decPrivateKey","rsaDecrypt","decValue","userEncKey","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putOrganizationUserResetPassword","newPasswordStrengthTimeout","User","manageAllCollectionsCheckboxes","v","manageAssignedCollectionsCheckboxes","getOrganizationUser","setRequestPermissions","clearPermissions","handleDependentPermissions","OrganizationUserUpdateRequest","putOrganizationUser","OrganizationUserInviteRequest","postOrganizationUserInvite","getOrganizationUserGroups","userGroups","ug","OrganizationUserUpdateGroupsRequest","groupIds","putOrganizationUserGroups","policyListService","policyIdFromEvents","orgPolicies","orgPolicy","op","PolicyEditComponent","editModalRef","onSavedPolicy","PoliciesComponent","cdr","policyType","ngAfterViewInit","factory","component","policyComponent","policyFormRef","createComponent","detectChanges","getPolicy","Enabled","putPolicy","canUseApi","OrganizationUpdateRequest","putOrganization","taxFormPromise","deleteOrganization","deleteModalRef","purgeVault","purgeModalRef","viewApiKey","apiKeyModalRef","postOrganizationApiKey","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKey","rotateApiKeyModalRef","isRotation","postOrganizationRotateApiKey","limitSubscription","maxAutoscaleSeats","newSeatCount","currentSeatCount","newMaxSeats","seatAdjustment","OrganizationSubscriptionUpdateRequest","postOrganizationUpdateSubscription","limitSubscriptionChanged","onChanged","defaultUpgradePlan","defaultUpgradeProduct","Families","onDownloaded","installationId","getOrganizationLicense","license","licenseString","JSON","stringify","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showDownloadLicense","showChangePlan","userOrg","getOrganizationSubscription","sub","reinstate","reinstatePromise","postOrganizationReinstate","cancelPromise","postOrganizationCancel","changePlan","closeChangePlan","changed","downloadLicense","closeDownloadLicense","updateLicense","closeUpdateLicense","updated","subscriptionAdjusted","adjustStorage","closeStorage","subscription","cancelled","cancelAtEndDate","upcomingInvoice","storageGb","storagePercentage","access2fa","duoComp","getTwoFactorOrganizationProviders","qrScript","UpdateTwoFactorAuthenticatorRequest","putTwoFactorAuthenticator","QRious","element","sendEmail","emailPromise","postTwoFactorEmailSetup","sentEmail","UpdateTwoFactorEmailRequest","putTwoFactorEmail","print","w","write","onafterprint","formatString","keyIdAvailable","keysConfiguredCount","webAuthnResponse","UpdateTwoFactorWebAuthnRequest","deviceResponse","putTwoFactorWebAuthn","removePromise","UpdateTwoFactorWebAuthnDeleteRequest","deleteTwoFactorWebAuthn","readKey","challengePromise","getTwoFactorWebAuthnChallenge","challenge","readDevice","webAuthnChallenge","log","resetWebAuthn","credentials","webAuthnListening","webAuthnError","listening","configured","migrated","nfc","UpdateTwoFactorYubioOtpRequest","key1","key2","key3","key4","key5","putTwoFactorYubiKey","disablePromise","existingKey","padRight","max","checkExportDisabled","getExportData","getOrganizationExport","collectEvent","manageableCiphers","AttachmentView","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","onError","appFallbackSrc","saveCipherAttachment","saveAttachmentWithServer","cipherDomain","deleteCipherAttachment","attachmentId","deleteCipherAttachmentAdmin","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","download","downloading","canAccessAttachments","getAttachmentData","attachmentDownloadResponse","cache","arrayBuffer","buf","decryptFromBytes","decBuf","hasEncKey","admin","saveAttachmentRawWithServer","foundAttachment","a2","deleteAttachmentWithServer","Window","allowSelectNone","loadCipherCollections","saveCollections","CipherCollectionsRequest","putCipherCollectionsAdmin","changeDetectorRef","trashCleanupWarning","groupingsComponent","successfully","selectedAll","selectedTrash","filterDeleted","selectedType","filterCipherType","selectedCollectionId","filterCollection","clearGroupingFilters","clearFilters","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","editCipherCollections","collectionsModalRef","onSavedCollections","addCipher","editCipher","cloneCipher","deleteCiphers","deleteCiphersAdmin","deleteManyWithServer","softDeleteManyWithServer","deleteRequest","CipherBulkDeleteRequest","deleteManyCiphersAdmin","putDeleteManyCiphersAdmin","moveManyWithServer","restoreManyWithServer","nonShareableCount","shareableCiphers","writeableCollections","allCollections","filterCollections","checkedCollectionIds","shareManyWithServer","sendType","passwordRequired","unavailable","maskedText","creatorIdentifier","sendId","decKey","getSendFileDownloadData","accessRequest","downloadData","toggleText","keyArray","SendAccessRequest","pbkdf2","passwordHash","sendResponse","postSendAccess","sendAccess","SendAccess","makeSendKey","datePipe","sendService","copyLinkToClipboard","link","SendView","EffluxDatesComponent","ControlContainer","NgForm","viewProviders","addSend","disableSend","editSend","sendAddEditModalRef","onSavedSend","onDeletedSend","deauthorizeSessions","deauthModalRef","deleteAccount","viewUserApiKey","viewUserApiKeyModalRef","postUserApiKey","rotateUserApiKey","rotateUserApiKeyModalRef","postUserRotateApiKey","postSecurityStamp","getProfile","profile","UpdateProfileRequest","putProfile","tokenSent","showTwoFactorEmailWarning","newEmail","EmailTokenRequest","postEmailToken","EmailRequest","postEmail","reset","rotateEncKey","rotateEncKeyClicked","currentMasterPassword","PasswordRequest","postPassword","updateKey","getPrivateKey","encPrivateKey","UpdateKeyRequest","FolderWithIdRequest","sends","cryptoKey","SendWithIdRequest","postAccountKey","updateEmergencyAccesses","updateAllResetPasswordKeys","getEmergencyAccessTrusted","emergencyAccess","allowedStatuses","EmergencyAccessStatusType","RecoveryInitiated","RecoveryApproved","filteredAccesses","details","granteeId","updateRequest","EmergencyAccessUpdateRequest","waitTimeDays","keyEncrypted","putEmergencyAccess","fileLength","File","SendRequest","PBKDF2_SHA256","kdfOptions","KdfRequest","postAccountKdf","EnterpriseAnnually","custom","getSettingsDomains","equivalentDomains","globalEquivalentDomains","domains","excluded","toggleExcluded","globalDomain","customize","UpdateDomainsRequest","excludedGlobalEquivalentDomains","d2","putSettingsDomains","indexTrackBy","onSaved","EmergencyAccessType","View","emergencyAccessType","waitTimes","getEmergencyAccess","waitTime","EmergencyAccessInviteRequest","postEmergencyAccessInvite","onConfirmed","onDone","getEmergencyGrantorPolicies","postEmergencyAccessTakeover","takeoverResponse","oldKeyBuffer","oldEncKey","EmergencyAccessPasswordRequest","postEmergencyAccessPassword","postEmergencyAccessView","viewAttachments","decCiphers","cipherResponse","cipherData","getLocaleSortingFunction","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","getEmergencyAccessGranted","grantedContacts","contact","postEmergencyAccessReinvite","doConfirmation","deleteEmergencyAccess","EmergencyAccessGranteeDetailsResponse","removeGrantee","removeGrantor","requestAccess","postEmergencyAccessInitiate","approve","postEmergencyAccessApprove","postEmergencyAccessReject","takeover","takeoverModalRef","EmergencyAccessConfirmRequest","postEmergencyAccessConfirm","creationDate","grantorId","EmergencyAccessGrantorDetailsResponse","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","ngAfterContentInit","vaultTimeoutAction","theme","vaultTimeout","vaultTimeouts","isDev","localeOptions","supportedTranslationLocales","locale","localeNames","themeOptions","System","getVaultTimeout","disableIcons","enableGravatars","enableFullWidth","startingLocale","startingTheme","valid","setVaultTimeoutOptions","effectiveTheme","htmlEl","documentElement","Light","vaultTimeoutActionChanged","newValue","NG_VALIDATORS","premiumPrice","getPremium","getEmailVerified","finalizePremium","postPremium","paymentResponse","makeRequest","getKey","getUserSubscription","usingInAppPurchase","postReinstatePremium","postCancelPremium","postAccountVerifyEmail","breachedAccounts","checkedUsername","history","historyModalRef","lengthChanged","minNumberChanged","minSpecialChanged","regenerate","favorites","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","showProviders","organizationsComponent","selectedFavorites","filterFavorites","selectedFolder","selectedFolderId","filterFolder","shareCipher","shareModalRef","onSharedCipher","folderAddEditModalRef","onSavedFolder","loadFolders","editFolder","onDeletedFolder","updateKeyModalRef","DisableSend","DisableSendPolicy","MasterPassword","MasterPasswordPolicy","fb","passwordScores","PasswordGenerator","PasswordGeneratorPolicy","defaultType","useUpper","useLower","useNumbers","useSpecial","minNumbers","minSpecial","minNumberWords","capitalize","includeNumber","defaultTypes","PersonalOwnershipPolicy","RequireSso","RequireSsoPolicy","singleOrgEnabled","ResetPasswordPolicy","SendOptions","SendOptionsPolicy","disableHideEmail","SingleOrgPolicy","MaximumVaultTimeout","TwoFactorAuthenticationPolicy","DisablePersonalVaultExport","DisablePersonalVaultExportPolicyComponent","DisablePersonalVaultExportPolicy","MaximumVaultTimeoutPolicyComponent","MaximumVaultTimeoutPolicy","hours","minutes","samlSigningAlgorithms","control","configType","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpArtifactResolutionServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","getOrganizationSso","ssoSettings","callbackPath","urls","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationSsoRequest","postOrganizationSso","homepage","LockGuardService","UnauthGuardService","CollectionResponse","CollectionDetailsResponse","CollectionGroupDetailsResponse","GlobalDomainResponse","DomainsResponse","FolderResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","PlanResponse","OrganizationResponse","nameLocalizationKey","descriptionLocalizationKey","baseStorageGb","maxUsers","maxAdditionalSeats","maxAdditionalStorage","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","storageName","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","SubscriptionResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","BillingSubscriptionItemResponse","quantity","OrganizationUserBulkPublicKeyResponse","KeyResponse","TwoFactorWebAuthnResponse","attestation","authenticatorSelection","excludeCredentials","extensions","pubKeyCredParams","rp","ChallengeResponse","propertyKey","descriptor","originalMethod","caches","getCache","argsCacheKey","args","onFinally","nestedTraverse","nodeTree","partIndex","delimiter","partName","node","TreeNode","ServiceUtils","children","newPartName","getTreeNodeObject","timersMap","debug","LogLevelType","Debug","Info","Warning","level","warn","time","hrtime","timeEnd","elapsed","EEFLongWordList","build","CipherWithIds","CollectionWithId","Folder","FolderWithId","FolderData","IgnoredProperties","loginPropertyParsers","setLoginUsername","setLoginPassword","setLoginUris","creditCardPropertyParsers","setCreditCardNumber","setCreditCardVerification","setCreditCardCardholderName","setCreditCardExpiry","identityPropertyParsers","setIdentityFirstName","setIdentityInitial","setIdentityLastName","setIdentityUserName","setIdentityEmail","setIdentityPhone","setIdentityCompany","quoteChar","escapeChar","getProp","setNotes","setCipherType","altUsername","context","CipherImportContext","setKnownLoginValue","setKnownCreditCardValue","setKnownIdentityValue","setUnknownValue","entries","agg","getPropByRegexp","regexp","matchingKeys","getPropIncluding","includesMap","importRecord","func","lowerProperty","readableDate","toUTCString","Hidden","OnePasswordCsvImporter","NotificationType","SendTextData","SendFileData","SendData","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","AppModule","AppComponent","BrowserAnimationsModule","ServicesModule","forRoot","AppRoutingModule","OssRoutingModule","OrganizationsModule","WildcardRoutingModule","routes","path","loadChildren","ProvidersModule","ProvidersRoutingModule","cd","loadChildComponent","componentFactory","modalContentRef","template","_parentInjector","_additionalTokens","notFoundValue","flags","pathMatch","redirectTo","subscribers","messageCallback","postPasswordHint","PasswordHintRequest","pin","pinLock","webVaultHostname","invalidPinAttempts","isPinLockSet","pinSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricLock","vaultUrl","failed","makeKeyFromPin","decPin","setKeyAndContinue","getKeyHash","storedKeyHash","passwordValid","ServerAuthorization","serverKeyHash","postAccountVerifyPassword","localKeyHash","makePinKey","pinKey","unlockBiometric","doContinue","everBeenUnlocked","Keys","rememberEmail","focusInput","launchSsoBrowser","ssoRedirectUri","ssoCodeVerifier","webUrl","errorCallback","infoCallback","parsedMessage","iframe","height","width","initComponent","createParams","translationLocale","IFrameComponent","iframeId","parseFunction","parseMessage","connectorLink","stop","sendMessage","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","URLSearchParams","validMessage","confirmMasterPassword","hint","showTerms","acceptPolicies","useLowerKdf","isIE","RegisterRequest","orgInvite","postRegister","confirmField","captchaResponse","syncLoading","resetPasswordAutoEnroll","getOrganizationAutoEnrollStatus","resetPasswordEnabled","SetPasswordRequest","setPassword","onSetPasswordSuccess","onSuccessfulChangePassword","orgIdentifier","choose","webAuthnReady","webAuthnNewTab","webAuthn","twoFactorEmail","loginRoute","authing","needsLock","WebAuthnIFrame","cleanupWebAuthn","providerData","authWebAuthn","DuoWebSDK","Host","sig_request","Signature","submit_callback","sig","doToast","postTwoFactorEmail","getDevice","getDeviceString","pushToken","codes","device","toIdentityToken","client_id","grant_type","client_secret","code_verifier","redirect_uri","deviceIdentifier","deviceName","twoFactorRemember","alterIdentityTokenHeaders","headers","btnText","allow","UpdateTempPasswordRequest","putUpdateTempPassword","disabledByPolicy","warningDialog","downloadFile","encryptedFormat","getExport","extension","csv","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","showCardNumber","showCardCode","currentDate","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","Domain","StartsWith","Exact","Never","autofillOnPageLoadOptions","myEmail","addEditCipherInfo","organizationChanged","previousCipherId","addUri","removeUri","trackByFunction","editCollections","restorePromise","restoreCipher","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","toggleUriOptions","loginUriMatchChanged","checkPassword","checkPasswordPromise","matches","repromptChanged","saveWithServer","addFieldType","linkedFieldOptions","fieldType","eventType","addFieldTypeOptions","Boolean","addField","removeField","toggleFieldValue","drop","moveItemInArray","previousIndex","currentIndex","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPending","searchTimeout","rightClickCipher","addCipherOptions","selectedCollectionIds","saveCollectionsWithServer","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","setLoaded","collapsedGroupings","Set","nestedFolders","clearSelections","selectFavorites","selectTrash","selectFolder","selectCollection","idPrefix","SendAccessView","copyLink","alertShown","sendLinkBaseUrl","getSendUrl","urlB64Key","isSafari","isFirefox","setDates","loadSend","hasPassword","encryptSend","encSend","copySuccess","typeChanged","toggleOptions","sendData","togglePasswordVisible","BrowserPath","DateField","DatePreset","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","expirationDatePresets","Firefox","Safari","Default","formattedDeletionDate","browserPath","now","miliseconds","setTime","safariTimePresetOptions","DeletionDate","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","formattedExpirationDate","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","previousValue","expired","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchSends","form","CUSTOM_VALUE","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","validatorChange","onChange","current","onTouched","validate","policyError","registerOnValidatorChange","getHistory","copyOptions","showSelect","onSelected","avoidAmbiguous","passTypeOptions","optionsResponse","ambiguous","addHistory","sliderChanged","saveOptions","sliderInput","normalizeOptions","cipherView","shareWithServer","elRef","formEls","formEl","contains","tagName","inputEl","click","settingsService","sanitizer","notificationsService","toasterConfig","ToasterConfig","showCloseButton","mouseoverTimerStop","animation","limit","lastActivity","idleTimer","isIdle","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","updateConnection","setFullWidth","jq","uploadEvents","clearEvents","setLastSync","clearToken","clearKeys","purge","clearIndex","idleStateChanged","sanitize","SecurityContext","HTML","bodyOutputType","BodyOutputType","TrustedHtml","trustedHtml","disconnectFromInactivity","reconnectFromActivity","OrganizationsRoutingModule","useHash","paramsInheritanceStrategy","language","BroadcasterMessagingService","consoleLogService","WebPlatformUtilsService","HtmlStorageService","secureStorageService","MemoryStorageService","WebCryptoFunctionService","AppIdService","fileUploadService","FileUploadService","ContainerService","eventLoggingService","initFactory","setUrls","onDefaultSystemThemeChange","sysTheme","attachToWindow","useClass","useValue","APP_INITIALIZER","useFactory","deps","LOCALE_ID","subscriber","arg","localStorageKeys","localStorageStartsWithKeys","memoryStorageStartsWithKeys","memoryStorage","isLocalStorage","localStorage","getItem","isMemoryStorage","sessionStorage","setItem","removeItem","swKey","systemLanguage","localesDirectory","formattedLocale","filePath","getLocalesJson","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","locales","placeholders","placeProp","replaceToken","replaceContent","store","identityClientId","browserCache","prefersColorSchemeDark","matchMedia","chrome","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","isViewOpen","rel","blobData","blobOptions","blob","fileNameLower","doDownload","endsWith","Blob","msSaveOrOpenBlob","msSaveBlob","createObjectURL","position","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","html","showCancelButton","cancelButtonText","clipboardData","setData","queryCommandSupported","textarea","copyEl","execCommand","readFromClipboard","authenticateBiometric","getDefaultSystemTheme","logoutCallback","customUserAgent","isWebClient","isDesktopClient","Headers","qsStringify","getCredentials","isJsonResponse","IdentityTokenResponse","TwoFactorProviders2","clearTwoFactorToken","IdentityTwoFactorResponse","IdentityCaptchaResponse","doAuthRefresh","BillingResponse","TaxInfoResponse","PreloginResponse","getAccountRevisionDate","PaymentResponse","postIapCheck","ApiKeyResponse","getFolder","postFolder","putFolder","deleteFolder","getSend","apiUrl","addSendIdHeader","SendAccessResponse","SendFileDownloadDataResponse","getSends","ListResponse","postSend","postFileTypeSend","SendFileUploadDataResponse","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCiphersOrganization","postCipher","postCipherCreate","putCipher","deleteManyCiphers","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteManyCiphers","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","AttachmentUploadDataResponse","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","dr","deleteCollectionUser","GroupDetailsResponse","GroupResponse","deleteGroupUser","OrganizationUserDetailsResponse","OrganizationUserUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","OrganizationAutoEnrollStatusResponse","OrganizationUserBulkResponse","postImportDirectory","postPublicImportDirectory","TaxRateResponse","getSync","SyncResponse","TwoFactorProviderResponse","TwoFactorAuthenticatorResponse","TwoFactorEmailResponse","TwoFactorDuoResponse","TwoFactorYubiKeyResponse","TwoFactorRecoverResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","OrganizationSubscriptionResponse","OrganizationSsoResponse","postOrganizationSeat","OrganizationKeysResponse","ProviderResponse","ProviderUserUserDetailsResponse","ProviderUserResponse","ProviderUserBulkResponse","ProviderUserBulkPublicKeyResponse","ProviderOrganizationOrganizationDetailsResponse","ProviderOrganizationResponse","getEvents","addEventParameters","EventResponse","postEventsCollect","getActiveBearerToken","authHeader","getEventsUrl","UserKeyResponse","getHibpBreach","BreachAccountResponse","getToken","tokenNeedsRefresh","nativeFetch","handleError","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","apiKeyRefresh","decodedToken","decodeToken","refresh_token","hasResponse","alterHeaders","getApiUrl","requestInit","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","fileUploadType","cipherMiniResponse","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","createdDate","refunded","partiallyRefunded","refundedAmount","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","access_token","expiresIn","expires_in","tokenType","token_type","SsoConfigApi","SsoUrls","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","KeysResponse","OrganizationUserResponse","userProfile","settings","taxIdType","makeAndGetAppId","getAnonymousAppId","existingId","guid","hashBytes","hashStart","hashEnding","leakedHashes","throttle","throttleKey","allThrottles","getThrottles","throttles","argsThrottleKey","queue","exec","DomainMatchBlacklist","sortedCiphersCache","SortedCiphersCache","sortCiphersByLastUsed","_decryptedCipherCache","clearCache","decryptedCipherCache","existingCipher","hasFields","existingHiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encryptField","encField","fieldModel","phModels","encPhs","encryptPasswordHistory","encPh","phModel","hasKey","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","domainUrlHost","urlHost","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedIndex","updateLastUsedDate","ciphersLocalData","cached","updateLastLaunchedDate","lastLaunched","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","CipherShareRequest","encCiphers","CipherBulkShareRequest","unencryptedFile","readAsArrayBuffer","cData","filename","encFileName","dataEncKey","encryptToBytes","encData","fileSize","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","filepath","contentType","CipherBulkMoveRequest","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","clearDeletedDate","CipherBulkRestoreRequest","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","isCached","addCiphers","getLastLaunched","getLastUsed","getNext","sequentialize","comparator","sortedCiphersByUrl","timeouts","Ciphers","resetTimer","lastUsedIndex","y","valueOf","getNextIndex","decryptedCollectionCache","decCollections","nodes","collectionCopy","getNested","attachToGlobal","encOrgKeys","encProviderKeys","keyHash","platformUtilService","storeKey","setOrgKeys","providerOrgs","providerOrg","setProviderKeys","providerKeys","keySuffix","getKeyFromStorage","symmetricKey","retrieveKeyFromStorage","validateKey","encKeyCipher","decEncKey","stretchKey","getPublicKey","rsaExtractPublicKey","keyFingerprint","hkdfExpand","userFingerprint","hashPhrase","getOrgKeys","getProviderKeys","hasKeyInMemory","clearKey","clearSecretStorage","legacyEtmKey","clearStoredKey","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","toggleKey","salt","protectedKeyCs","randomBytes","rsaGenerateKeyPair","publicB64","privateEnc","keyMaterial","hkdf","sendKey","hashPurpose","iterations","getKeyForEncryption","theKey","buildEncKey","plainValue","plainBuf","aesEncrypt","encObj","encValue","macLen","encBytes","EncArrayBuffer","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","aesDecryptToBytes","decipher","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","biometricUnlock","EncryptedObject","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","hmacFast","computedMac","compareFast","aesDecryptFast","aesDecrypt","minimumEntropy","entropyPerWord","numWords","hashArr","entropyAvailable","phrase","hashNumber","bigInt","fromArray","remainder","divide","encKeyEnc","urlsSubject","baseUrl","getNotificationsUrl","notificationsUrl","identityUrl","eventsUrl","setUrlsFromStorage","urlsObj","api","icons","notifications","webVault","envUrls","EnvironmentUrls","saveSettings","formatUrl","getUrls","checkOnInterval","uploadImmediately","orgIds","eventCollection","EventData","EventRequest","getEncryptedExport","getDecryptedExport","getOrganizationEncryptedExport","getOrganizationDecryptedExport","unparse","Event","padNumber","getSeconds","decFolders","buildCommonCipher","encrypted","encKeyValidation","jsonDoc","encKeyValidation_DO_NOT_EDIT","collectionPromises","decCol","cipherPromises","decCipher","padCharacter","numString","login_uri","login_username","login_password","login_totp","toView","values","toDomain","azureFileUploadService","AzureFileUploadService","bitwardenFileUploadService","BitwardenFileUploadService","uploadSendFile","uploadData","encryptedFileData","FileUploadType","Direct","Azure","upload","renewalCallback","encryptedFileName","azureUploadBlob","azureUploadBlocks","urlObject","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","blockIdList","xml","Version","day","compareTo","apiCall","decryptedFolderCache","noneFolder","folderCopy","cId","updates","getImportOptions","importResult","halfway","last","badData","postImport","errorResponse","handleServerError","getImporterInstance","BitwardenCsvImporter","BitwardenJsonImporter","LastPassCsvImporter","KeePassXCsvImporter","AviraCsvImporter","BlurCsvImporter","SafeInCloudXmlImporter","PadlockCsvImporter","KeePass2XmlImporter","ChromeCsvImporter","FirefoxCsvImporter","UpmCsvImporter","SaferPassCsvImporter","MeldiumCsvImporter","OnePassword1PifImporter","OnePasswordWinCsvImporter","OnePasswordMacCsvImporter","KeeperCsvImporter","PasswordDragonXmlImporter","EnpassCsvImporter","EnpassJsonImporter","PasswordSafeXmlImporter","DashlaneJsonImporter","MSecureCsvImporter","StickyPasswordXmlImporter","TrueKeyCsvImporter","ClipperzHtmlImporter","RoboFormCsvImporter","AscendoCsvImporter","PasswordBossJsonImporter","ZohoVaultCsvImporter","SplashIdCsvImporter","PassKeepCsvImporter","GnomeJsonImporter","PasswordAgentCsvImporter","PasspackCsvImporter","PassmanJsonImporter","AvastCsvImporter","AvastJsonImporter","FSecureFskImporter","KasperskyTxtImporter","RememBearCsvImporter","PasswordWalletTxtImporter","MykiCsvImporter","SecureSafeCsvImporter","LogMeOnceCsvImporter","BlackBerryCsvImporter","ButtercupCsvImporter","CodebookCsvImporter","EncryptrCsvImporter","YotiCsvImporter","NordPassCsvImporter","ImportCiphersRequest","KvpRequest","ImportOrganizationCiphersRequest","itemType","fieldLower","web","logins","custName","note","pwd","loginName","cards","holderName","cardNumber","cvv","website","secondary_username","col","addCollection","collectionIndex","delimPosition","parseEncrypted","parseDecrypted","groupingsMap","fav","extra","OfficialProps","processingCustomFields","currentVersion","actionType","labelLower","Category","Favorite","Entry","Note","Username","TOTP","Website","Phone","PIN","Account","HandledResults","ADDRESS","processAddress","AUTHENTIFIANT","processAuth","BANKSTATEMENT","processNote","IDCARD","PAYMENTMEANS_CREDITCARD","processCard","IDENTITY","processIdentity","credential","secondaryLogin","fullName","nameParts","pseudo","addressName","addressFull","zipcode","owner","nameProperty","Label","Notes","CVV","Expiry","expParts","firstRow","containsField","fieldValue","fieldName","fieldNameLower","foldersMap","foldersIndexMap","folderTree","buildFolderTree","flattenFolderTree","template_type","processLogin","sensitive","uuid","parent_uuid","titlePrefix","tree","creditNumber","creditCvv","creditExpiry","keyRing","display_name","secret","attributes","attr","username_value","NotesHeader","ApplicationsHeader","WebsitesHeader","Delimiter","notesData","applicationsData","websitesData","workingData","parseDataCategory","applications","websites","nameKey","itemComment","itemCommentKey","colonIndex","rootGroup","traverse","isRootNode","groupPrefixName","groupName","nameEl","cipherIndex","entryString","valueEl","keyEl","attrs","ProtectInMemory","Title","Group","buildBaseCipher","parseSecureNote","parseCard","parseIdentity","ccnum","cardCipher","profilename","firstname","lastname","ccname","cccsc","ccexp","ccexpParts","middlename","zip","extraParts","processedNote","typeParts","mappedData","parseSecureNoteMapping","monthString","processingNotes","extraPart","DisplayName","UserName","Url","nickname","additionalInfo","twoFactAuthToken","cardName","exp_month","exp_year","firstAddressLine","secondAddressLine","zipCode","record","recordType","evaluateType","cardholdername","cardnumber","cvc","expirydate","processName","full_name","phone_number","line","trashed","processStandardItem","processWinOpVaultItem","overview","URLs","parsePasswordHistory","notesPlain","parseFields","sections","section","openContents","faveIndex","typeName","secureContents","maxSize","designationKey","valueKey","fieldDesignation","street","setIdentityAddress","expSplit","tags","tag","getValue","otp","custom_fields","customField","field_type","tagsJson","Tags","tagJson","__parsed_extra","fieldsJson","extraFields","fieldJson","newVersion","altFormat","login_url","identifiers","valObj","expDate","cf","records","categoryText","accountName","passwordSafe","notesDelimiter","getAttribute","groupText","trash","cardholder","verification","expiryMonth","expMonthNumber","expiryYear","expYearNumber","Name","Pwd","Rf_fields","labelEl","cardEl","labelIdEl","labelId","fieldEl","notesEl","candidates","choice","Comment","parseFieldsToNotes","startIndex","loginNodes","loginNode","accountId","usernameText","passwordText","linkText","notesText","accountLogin","account","parentElement","buildGroupText","PropertiesToIgnore","memo","kind","expiryDate","document_content","ChamberName","parseData","SecretData","CustomData","connected","inactive","reconnectTimer","signalrConnection","off","signalR","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","withHubProtocol","signalRMsgPack","MessagePackHubProtocol","on","processNotification","NotificationResponse","onclose","reconnect","isAuthedAndUnlocked","sync","notification","contextId","payloadUserId","UserId","myUserId","SyncCipherCreate","SyncCipherUpdate","SyncCipherDelete","SyncLoginDelete","SyncFolderCreate","SyncFolderUpdate","SyncFolderDelete","SyncVault","SyncCiphers","SyncSettings","SyncOrgKeys","LogOut","SyncSendCreate","SyncSendUpdate","SyncSendDelete","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","SyncCipherNotification","SyncFolderNotification","UserNotification","SyncSendNotification","DefaultOptions","minNumber","minUppercase","minLowercase","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","optionsCache","enforcePasswordGeneratorPoliciesOnOptions","enforcedOptions","getPasswordGeneratorPolicyOptions","useUppercase","useLowercase","numberCount","specialCount","PasswordGeneratorPolicyOptions","currentPolicy","decryptHistory","currentHistory","matchesPrevious","unshift","GeneratedPasswordHistory","encryptHistory","newHistory","userInputs","globalUserInputs","finalUserInputs","zxcvbn","decrypted","array","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","inEffect","policyCache","toLocaleLowerCase","toLocaleUpperCase","resetPasswordPolicyOptions","ResetPasswordPolicyOptions","policiesResponse","policyFilter","filteredPolicies","policySet","isExcemptFromPolicies","isExemptFromPolicies","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","decryptedSendCache","fileData","Send","ArrayBuffer","encryptFileData","parseFile","decSends","legacyServerSendFileUpload","encFileData","settingsCache","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","syncInProgress","lastSync","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","getSecurityStamp","stamp","setSecurityStamp","setEmailVerified","setForcePasswordReset","OrganizationData","ProviderData","replaceOrganizations","replaceProviders","setToken","setRefreshToken","setClientId","setClientSecret","storeTokenValue","toggleTokens","decoded","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getIssuer","iss","skipTokenStorage","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","fullCode","trunc","isAutoCopyEnabled","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","getForcePasswordReset","clearOrganizations","clearProviders","getOrganizationByIdentifier","Provider","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","lastActive","vaultTimeoutSeconds","allowSoftLock","crypto","subtle","ua","isOldSafari","algorithm","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","forge","wcLen","passwordBuf","toBuf","saltBuf","pbkdf2Params","toWebCryptoAlgorithm","importKey","impKey","deriveBits","ikm","outputByteSize","infoBuf","hkdfParams","prk","hashLen","infoArr","runningOkmLength","previousT","okm","md","md5","sha1","valueBytes","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","util","createBuffer","putInt32","DecryptParameters","meta","encKeyByteString","macKeyByteString","decode64","parameters","dataBuffer","createDecipher","finish","rsaParams","impPrivateKey","exportKey","jwkPrivateKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","encodeUtf8","modalOpen","modals"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,EAAG,GAGAK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,GAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,IAAI,IAEnBM,I,sGCvJT,mBAAsB,EAAAyC,e,6GCGtB,mBAAsB,EAAAC,wB,kGC4JtB,mBAAsB,EAAAC,c,oGCxJtB,mBAAsB,EAAAC,e,iGCPtB,W,GAKA,K,aAEA,aAII,WAAoBC,GAAA,KAAAA,c,OAEpB,YAAAC,UAAA,SAAUC,EAAYC,EAAaC,EAAaC,GAC5C,OAAOC,KAAKN,YAAYnB,EAAEqB,EAAIC,EAAIC,EAAIC,I,iCAJjCE,GAAQ,qC,yCAARA,EAAQ,U,EAHrB,GAGa,EAAAA,Y,+DAAAA,EAAQ,E,KAHpB,EAAAC,K,MAAK,CACFrC,KAAM,Y,4JCKV,mBAAsB,EAAAsC,iB,wGCbtB,mBAAsB,EAAAC,oB,0GCAtB,W,OAOA,aAUI,WAAoBC,EAAwBC,GAAxB,KAAAD,KAAwB,KAAAC,W,OAN5C,sBAAa,2BAAY,C,IAAzB,SAA0BC,GACtBP,KAAKO,MAAQA,G,gCAOjB,YAAAC,SAAA,WACSR,KAAKK,GAAGI,cAAcC,aAAa,UACpCV,KAAKM,SAASK,aAAaX,KAAKK,GAAGI,cAAe,QAAST,KAAKO,OAE/DP,KAAKK,GAAGI,cAAcC,aAAa,eACpCV,KAAKM,SAASK,aAAaX,KAAKK,GAAGI,cAAe,aAAcT,KAAKO,Q,iCAdpEK,GAAkB,qE,iCAAlBA,EAAkB,0E,EAH/B,GAGa,EAAAA,sB,+DAAAA,EAAkB,E,KAH9B,EAAAC,U,MAAU,CACPC,SAAU,sB,6DAGGC,aAAY,E,KAAxB,EAAAC,W,2GCXL,WAQA,GAFA,MAEA,Q,GAEA,M,sBAEA,aAMI,WAAoBX,EAAwBY,EAChCC,GADQ,KAAAb,KAAwB,KAAAY,oBAChC,KAAAC,a,OAEZ,YAAAC,YAAA,SAAYC,GAAZ,WAC6B,MAArBpB,KAAKqB,cAAkD,MAA1BrB,KAAKqB,aAAaC,OAInDtB,KAAKK,GAAGI,cAAcc,SAAU,EAEhCvB,KAAKqB,aAAaC,MAAK,SAACE,GACpB,EAAKnB,GAAGI,cAAcc,SAAU,KACjC,SAACE,G,MACA,EAAKpB,GAAGI,cAAcc,SAAU,GAE3BE,aAAa,EAAAC,eAAwC,kBAAvBD,EAAEE,YAAY9D,OAA8B4D,EAAoBG,gBAC/F,EAAKV,WAAWW,MAAM,oCAAsCJ,EAAEK,qBAGnD,QAAf,IAAKZ,kBAAU,SAAEW,MAAM,2BAA2BJ,GAClD,EAAKR,kBAAkBc,UAAUN,S,iCAvBhCO,GAAkB,+G,iCAAlBA,EAAkB,4G,EAH/B,GAGa,EAAAA,sB,+DAAAA,EAAkB,E,KAH9B,EAAAnB,U,MAAU,CACPC,SAAU,sB,yFAGDO,aAAc,CAAF,C,KAApB,EAAAL,W,yGChBL,W,GAMA,KAEA,O,mDCR4I,qB,8BAAG,2C,yBAA9C,2BAA2C,4CAA4D,YAAU,kB,6BAA9C,2CAAoC,sD,yBAAmH,yBAAsD,Y,mBAA0E,kB,8BAA1E,gI,yBAAgF,yBAAkD,Y,mBAAmF,kB,8BAAnF,2K,sBAAyF,yBAAiD,Y,mBAAoC,kB,MAApC,0F,sBAA0C,yBAAiD,Y,mBAAoC,kB,MAApC,0F,sBAA0C,yBAAmD,Y,mBAAkC,kB,MAAlC,wF,sBAAwC,yBAAmD,Y,mBAA+C,kB,MAA/C,mG,yBAAxrB,4BAAoE,YAA0B,yBAAK,6CAAsI,6CAA2I,6CAA2F,8CAA2F,+CAA2F,+CAAwG,kCAAM,mC,6BAA/qB,qEAAoC,iHAAsI,6GAA2I,4GAA2F,4GAA2F,8GAA2F,+G,+CDUl2B,aAcI,WAAoBtB,GAAA,KAAAA,cATX,KAAAuC,KAAO,O,OAWhB,YAAAzB,SAAA,WACIR,KAAKkC,aAAelC,KAAKiC,UAEUE,IAA/BnC,KAAKoC,wBACLpC,KAAKoC,sBAAwBpC,KAAKN,YAAYnB,EAAE,iCAGlC,YAAdyB,KAAKiC,MAAoC,WAAdjC,KAAKiC,MACd,WAAdjC,KAAKiC,OACLjC,KAAKkC,aAAe,eAELC,IAAfnC,KAAKO,QACLP,KAAKO,MAAQP,KAAKN,YAAYnB,EAAE,iBAElB4D,IAAdnC,KAAKqC,OACLrC,KAAKqC,KAAO,eAEK,UAAdrC,KAAKiC,MACZjC,KAAKkC,aAAe,cACDC,IAAfnC,KAAKO,QACLP,KAAKO,MAAQP,KAAKN,YAAYnB,EAAE,eAElB4D,IAAdnC,KAAKqC,OACLrC,KAAKqC,KAAO,YAEK,QAAdrC,KAAKiC,OACZjC,KAAKkC,aAAe,eACDC,IAAfnC,KAAKO,QACLP,KAAKO,MAAQP,KAAKN,YAAYnB,EAAE,aAElB4D,IAAdnC,KAAKqC,OACLrC,KAAKqC,KAAO,oBAKxB,YAAAC,6BAAA,WACI,GAAkC,MAA9BtC,KAAKuC,sBACL,MAAO,GAGX,IAAIC,EACJ,OAAQxC,KAAKuC,sBAAsBE,eAC/B,KAAK,EACDD,EAAMxC,KAAKN,YAAYnB,EAAE,UACzB,MACJ,KAAK,EACDiE,EAAMxC,KAAKN,YAAYnB,EAAE,QACzB,MACJ,QACIiE,EAAMxC,KAAKN,YAAYnB,EAAE,QAGjC,OAAOiE,EAAM,KAAOxC,KAAKuC,sBAAsBE,cAAgB,K,iCAjE1DC,GAAgB,qC,iCAAhBA,EAAgB,sf,oBCd7B,4BAAiG,6CAAuH,+CAA0vB,kCAA0B,iCAAO,iB,MAA9+B,+DAAyC,2DAAgF,4CAAgI,8D,qEDU9P,GAIa,EAAAA,oB,+DAAAA,EAAgB,E,KAJ5B,EAAAC,U,MAAU,CACP7B,SAAU,cACV8B,YAAa,8B,2CAGJX,KAAI,E,KAAZ,EAAAjB,QACQqB,KAAM,CAAF,C,KAAZ,EAAArB,QACQT,MAAO,CAAF,C,KAAb,EAAAS,QACQ6B,UAAW,CAAF,C,KAAjB,EAAA7B,QACQuB,sBAAuB,CAAF,C,KAA7B,EAAAvB,QACQoB,sBAAuB,CAAF,C,KAA7B,EAAApB,W,i/CEpBL,WAWA,SAEA,SACA,SACA,S,OAEA,aAEI,KAAA8B,qBAA+B,GAFtB,EAAAC,cAKb,iBAQI,WAAoBC,EAA4DC,EACpEC,GADQ,KAAAF,2BAA4D,KAAAC,iBACpE,KAAAC,WAPF,KAAAC,WAAa,EAIf,KAAAC,iBAA6D,IAAIC,I,OAKnE,YAAAC,YAAN,SAAqBC,EAAwBC,EACzCC,G,YAAA,IAAAA,MAAA,M,6FAQA,OANAzD,KAAKmD,aACC,EAAgCnD,KAAK0D,aAAaH,EAAe,MAAM,GAAtEI,EAAQ,MAAEC,EAAiB,MAChBC,SAASJ,uBAAyBA,EAEpDD,EAAiBM,OAAOF,EAAkBG,UAE1C,GAAMJ,EAASK,UAAUC,KAAK,EAAAC,SAASC,a,OAEvC,OAFA,SAEO,CAAC,EAAD,CAACR,EAAUC,EAAkBC,SAASO,aAAaP,mBAG9D,YAAAQ,KAAA,SAAKd,EAA0Be,G,MAC3B,GAAiC,QAA5B,EAACA,aAAM,EAANA,EAAQxB,2BAAmB,YAAc9C,KAAKmD,WAAa,GAAjE,CAGAnD,KAAKmD,aAEC,MAAgBnD,KAAK0D,aAAaH,EAAee,GAAQ,GAAxDX,EAAQ,KAAG,KAElB,OAAOA,IAGX,YAAAY,iCAAA,SAAoChB,EAAwBP,GACxDhD,KAAKoD,iBAAiBoB,IAAIjB,EAAeP,IAG7C,YAAAyB,wBAAA,SAA2BlB,GACvB,OAAIvD,KAAKoD,iBAAiBsB,IAAInB,GACnBvD,KAAKoD,iBAAiBlF,IAAIqF,GAAekB,wBAAwBlB,GAGrEvD,KAAKgD,yBAAyByB,wBAAwBlB,IAGvD,YAAAG,aAAV,SAAuBH,EAA0Be,EAAsBK,GAAvE,WAGU,EAA2B3E,KAAK4E,qBAAqBN,GAApDX,EAAQ,KAAES,EAAY,KAG7B,GAFAA,EAAaP,SAASgB,mBAAqBtB,EAEvCoB,EAAa,CACb3E,KAAKiD,eAAe6B,WAAWV,EAAaL,UAC5C,IAAMgB,EAAWX,EAAaL,SAAkCiB,UAAU,GAC1EC,SAASC,KAAKC,YAAYJ,GAa9B,OAVApB,EAASyB,SAASnB,KAAK,EAAAC,SAASmB,WAAU,WAClCV,GACA,EAAK1B,eAAeqC,WAAWlB,EAAaL,UAEhDK,EAAamB,UACb,EAAKpC,gBAGTnD,KAAKwF,cAAc7B,GAEZ,CAACA,EAAUS,IAGZ,YAAAoB,cAAV,SAAwB7B,GAAxB,WACQ8B,EAAwB,KAG5B9B,EAASK,UAAUC,KAAK,EAAAC,SAASmB,WAAU,SAAAhF,GACvC4E,SAASC,KAAKQ,UAAUC,IAAI,eAE5BF,EAAWR,SAASW,cAAc,QACzBC,UAAY,sBACrBJ,EAASK,MAAMC,OAAY,EAAK5C,WAAU,MAC1C8B,SAASC,KAAKC,YAAYM,GAE1BpF,EAAG2F,cAAc,iBAAiBC,iBAAiB,SAAS,SAACxE,GACzDA,EAAEyE,qBAGuB7F,EAAG2F,cAAc,UACtCF,MAAMC,OAAY,EAAK5C,WAAU,MAGzC,IADA,IAC2B,MADZgD,MAAMC,KAAK/F,EAAGgG,iBAAiB,2CACnB,eAAQ,CAAZ,KACNJ,iBAAiB,SAAS,SAAAK,GACnC3C,EAAS4C,eAMrB5C,EAAS6C,QAAQvC,KAAK,EAAAC,SAASmB,WAAU,WACrC1B,EAAS8C,SAEe,IAApB,EAAKtD,YACL8B,SAASC,KAAKQ,UAAUgB,OAAO,cAGnB,MAAZjB,GACAR,SAASC,KAAKyB,YAAYlB,OAK5B,YAAAb,qBAAV,SAA+BN,GAC3B,IAAMX,EAAW,IAAI,EAAAiD,SAEfC,EAAM,IAAIC,QAOhB,OANAD,EAAIrC,IAAIzB,EAAauB,GACrBuC,EAAIrC,IAAI,EAAAoC,SAAUjD,GAKX,CAACA,EAHiB3D,KAAKgD,yBAAyByB,wBAAwB,EAAAsC,uBACzCpI,OAAO,IAAI,EAAAqI,cAAchH,KAAKkD,SAAU2D,M,iCAzHzEI,GAAY,6F,oCAAZA,EAAY,QAAZA,EAAY,O,EADzB,GACa,EAAAA,gB,+DAAAA,EAAY,E,KADxB,EAAAC,c,8MCVD,mBAAsB,EAAAC,iB,oGCZtB,iBAGI,WAAY3F,GACRxB,KAAKwB,SAAWA,EAkCxB,OA/Bc,YAAA4F,oBAAV,SAA8BC,EAAsB7F,EAAsB8F,GACtE,QADgD,IAAA9F,MAAA,WAAsB,IAAA8F,OAAA,GAClD,MAAhBD,GAAyC,KAAjBA,EACxB,MAAM,IAAIE,MAAM,wCAKpB,GAHgB,MAAZ/F,GAAqC,MAAjBxB,KAAKwB,WACzBA,EAAWxB,KAAKwB,UAEJ,MAAZA,EACA,OAAO,KAEX,IAAK8F,QAAwCnF,IAA3BX,EAAS6F,GAA6B,CACpD,IAAIG,EAAgC,KAEhCA,EADAH,EAAaI,OAAO,KAAOJ,EAAaI,OAAO,GAAGC,cAC1BL,EAAaI,OAAO,GAAGE,cAEvBN,EAAaI,OAAO,GAAGC,cAE/CL,EAAapL,OAAS,IACtBuL,GAAyBH,EAAahI,MAAM,SAIjB8C,IAA3BX,EADJ6F,EAAeG,KAEXH,EAAeA,EAAaM,oBAEDxF,IAA3BX,EAAS6F,KACTA,EAAeA,EAAaK,eAGpC,OAAOlG,EAAS6F,IAExB,EAtCA,GAAsB,EAAAO,gB,qGCWtB,mBAAsB,EAAAC,iB,+GCXtB,aAKMC,EAA4B,oBAAX3I,OAAyB,EAAQ,KAAS,KAEjE,2BA8WA,OAlWW,EAAA4I,KAAP,WACQC,EAAMC,SAIVD,EAAMC,QAAS,EACfD,EAAME,YAA4B,IAAZC,GAAuD,MAA3BA,EAAgBC,SAC5B,SAAjCD,EAAgBC,QAAQvK,KAC7BmK,EAAMK,UAA8B,oBAAXlJ,OACzB6I,EAAMM,gBAAkBN,EAAME,SAAWF,EAAMK,UAC/CL,EAAMO,gBAAkBP,EAAMK,WAAarI,KAAKwI,SAASrJ,QACzD6I,EAAMS,qBAAuBT,EAAMK,WAAarI,KAAK0I,cAAcvJ,QACnE6I,EAAMW,OAASX,EAAMM,gBAA2BN,EAAME,SAAWF,EAAMK,UAAjCM,EAAsDxJ,SAGzF,EAAAyJ,eAAP,SAAsBpG,GAClB,GAAIwF,EAAME,QAAUF,EAAMM,eACtB,OAAO,IAAIO,WAAWC,EAAO1C,KAAK5D,EAAK,WAIvC,IAFA,IAAMuG,EAAe5J,OAAO6J,KAAKxG,GAC3ByG,EAAQ,IAAIJ,WAAWE,EAAa9M,QACjCF,EAAI,EAAGA,EAAIgN,EAAa9M,OAAQF,IACrCkN,EAAMlN,GAAKgN,EAAaG,WAAWnN,GAEvC,OAAOkN,GAIR,EAAAE,kBAAP,SAAyB3G,GACrB,OAAOwF,EAAMY,eAAeZ,EAAMoB,gBAAgB5G,KAG/C,EAAA6G,eAAP,SAAsB7G,GAClB,GAAIwF,EAAME,QAAUF,EAAMM,eACtB,OAAO,IAAIO,WAAWC,EAAO1C,KAAK5D,EAAK,QAGvC,IADA,IAAMyG,EAAQ,IAAIJ,WAAWrG,EAAIvG,OAAS,GACjCF,EAAI,EAAGA,EAAIyG,EAAIvG,OAAQF,GAAK,EACjCkN,EAAMlN,EAAI,GAAKuN,SAAS9G,EAAI+G,OAAOxN,EAAG,GAAI,IAE9C,OAAOkN,GAIR,EAAAO,gBAAP,SAAuBhH,GACnB,GAAIwF,EAAME,QAAUF,EAAMM,eACtB,OAAO,IAAIO,WAAWC,EAAO1C,KAAK5D,EAAK,SAIvC,IAFA,IAAMiH,EAAUC,SAASC,mBAAmBnH,IACtCoH,EAAM,IAAIf,WAAWY,EAAQxN,QAC1BF,EAAI,EAAGA,EAAI0N,EAAQxN,OAAQF,IAChC6N,EAAI7N,GAAK0N,EAAQP,WAAWnN,GAEhC,OAAO6N,GAIR,EAAAC,sBAAP,SAA6BrH,GAEzB,IADA,IAAMoH,EAAM,IAAIf,WAAWrG,EAAIvG,QACtBF,EAAI,EAAGA,EAAIyG,EAAIvG,OAAQF,IAC5B6N,EAAI7N,GAAKyG,EAAI0G,WAAWnN,GAE5B,OAAO6N,GAGJ,EAAAE,gBAAP,SAAuBC,GACnB,GAAI/B,EAAME,QAAUF,EAAMM,eACtB,OAAOQ,EAAO1C,KAAK2D,GAAQC,SAAS,UAIpC,IAFA,IAAIC,EAAS,GACPhB,EAAQ,IAAIJ,WAAWkB,GACpBhO,EAAI,EAAGA,EAAIkN,EAAMiB,WAAYnO,IAClCkO,GAAUE,OAAOC,aAAanB,EAAMlN,IAExC,OAAOoD,OAAOkL,KAAKJ,IAIpB,EAAAK,mBAAP,SAA0BP,GACtB,OAAO/B,EAAMuC,gBAAgBvC,EAAM8B,gBAAgBC,KAGhD,EAAAQ,gBAAP,SAAuBC,GACnB,OAAOA,EAAOC,QAAQ,MAAO,KACxBA,QAAQ,MAAO,KACfA,QAAQ,KAAM,KAGhB,EAAAC,iBAAP,SAAwBX,GACpB,GAAI/B,EAAME,QAAUF,EAAMM,eACtB,OAAOQ,EAAO1C,KAAK2D,GAAQC,SAAS,QAEpC,IAAMf,EAAQ,IAAIJ,WAAWkB,GACvBY,EAAgBR,OAAOC,aAAaxN,MAAM,KAAMqM,GACtD,OAAO2B,mBAAmBC,OAAOF,KAIlC,EAAAG,uBAAP,SAA8Bf,GAC1B,OAAOI,OAAOC,aAAaxN,MAAM,KAAM,IAAIiM,WAAWkB,KAInD,EAAAgB,gBAAP,SAAuBhB,GACnB,GAAI/B,EAAME,QAAUF,EAAMM,eACtB,OAAOQ,EAAO1C,KAAK2D,GAAQC,SAAS,OAEpC,IAAMf,EAAQ,IAAIJ,WAAWkB,GAC7B,OAAO5D,MAAMhK,UAAU0K,IAAIxK,KAAK4M,GAAO,SAAC+B,GAAc,OAAC,KAAOA,EAAEhB,SAAS,KAAK3K,OAAO,MAAI4L,KAAK,KAI/F,EAAA7B,gBAAP,SAAuB8B,GACnB,IAAIC,EAASD,EAAUT,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KACxD,OAAQU,EAAOlP,OAAS,GACpB,KAAK,EACD,MACJ,KAAK,EACDkP,GAAU,KACV,MACJ,KAAK,EACDA,GAAU,IACV,MACJ,QACI,MAAM,IAAI5D,MAAM,6BAGxB,OAAO4D,GAGJ,EAAAC,iBAAP,SAAwBF,GACpB,OAAOlD,EAAMqD,cAAcrD,EAAMoB,gBAAgB8B,KAG9C,EAAAI,cAAP,SAAqBC,GACjB,OAAIvD,EAAME,QAAUF,EAAMM,eACfQ,EAAO1C,KAAKmF,EAAQ,QAAQvB,SAAS,UAErCY,mBAAmBC,OAAO1L,OAAOkL,KAAKkB,MAI9C,EAAAC,iBAAP,SAAwBD,GACpB,OAAOvD,EAAMsC,mBAAmBtC,EAAMwB,gBAAgB+B,KAGnD,EAAAF,cAAP,SAAqBb,GACjB,OAAIxC,EAAME,QAAUF,EAAMM,eACfQ,EAAO1C,KAAKoE,EAAQ,UAAUR,SAAS,QAEvCY,mBAAmBC,OAAO1L,OAAO6J,KAAKwB,MAK9C,EAAAiB,QAAP,WACI,MAAO,uCAAuChB,QAAQ,SAAS,SAAA9M,GAE3D,IAAMQ,EAAoB,GAAhBuN,KAAKC,SAAgB,EAG/B,OADgB,MAANhO,EAAYQ,EAAS,EAAJA,EAAU,GAC5B6L,SAAS,QAInB,EAAA4B,OAAP,SAAchM,GACV,OAAOiM,OAAO,4EAA6E,KAAKC,KAAKlM,IAGlG,EAAAmM,YAAP,SAAmBC,GACf,IAAMC,EAAMjE,EAAMkE,OAAOF,GACzB,IACI,OAAc,MAAPC,GAAgC,KAAjBA,EAAIE,SAAkBF,EAAIE,SAAW,KAC7D,SACE,OAAO,OAIR,EAAAC,QAAP,SAAeJ,GACX,IAAMC,EAAMjE,EAAMkE,OAAOF,GACzB,IACI,OAAc,MAAPC,GAA4B,KAAbA,EAAII,KAAcJ,EAAII,KAAO,KACrD,SACE,OAAO,OAIR,EAAAC,UAAP,SAAiBN,GACb,GAAiB,MAAbA,EACA,OAAO,KAIX,GAAkB,MADlBA,EAAYA,EAAUO,QAElB,OAAO,KAGX,GAAIP,EAAUQ,WAAW,SACrB,OAAO,KAGX,IAAIC,EAAUT,EAAUQ,WAAW,YAAcR,EAAUQ,WAAW,YAMtE,IALKC,GAAWT,EAAUU,QAAQ,OAAS,GAAK1E,EAAM2E,eAAeb,KAAKE,KACtEA,EAAY,UAAYA,EACxBS,GAAU,GAGVA,EACA,IACI,IAAMR,EAAMjE,EAAM4E,aAAaZ,GAE/B,KADwC,OAAlBa,aAAK,EAALA,EAAOC,UAAkBD,EAAMC,QAAQb,EAAIE,WAE7D,OAAO,KAGX,GAAqB,cAAjBF,EAAIE,UAA4BnE,EAAM+E,eAAed,EAAIE,UACzD,OAAOF,EAAIE,SAGf,IAAMa,EAAqB,MAATH,GAAoC,MAAnBA,EAAMP,UAAoBO,EAAMP,UAAUL,EAAIE,UAAY,KAC7F,OAAoB,MAAba,EAAoBA,EAAYf,EAAIE,SAC7C,MAAO1K,IAGb,IACI,IAAMwL,EAAkB,MAATJ,GAAoC,MAAnBA,EAAMP,UAAoBO,EAAMP,UAAUN,GAAa,KAEvF,GAAc,MAAViB,EACA,OAAOA,EAEb,SACE,OAAO,KAGX,OAAO,MAGJ,EAAAC,eAAP,SAAsBlB,GAClB,IAAMC,EAAMjE,EAAMkE,OAAOF,GACzB,GAAW,MAAPC,GAA6B,MAAdA,EAAIkB,QAAiC,KAAflB,EAAIkB,OACzC,OAAO,KAEX,IAAMtG,EAAM,IAAIxD,IAShB,OARiC,MAAlB4I,EAAIkB,OAAO,GAAalB,EAAIkB,OAAO5D,OAAO,GAAK0C,EAAIkB,QAAQC,MAAM,KAC1EC,SAAQ,SAAAC,GACV,IAAMC,EAAQD,EAAKF,MAAM,KACrBG,EAAMtR,OAAS,GAGnB4K,EAAIrC,IAAIoG,mBAAmB2C,EAAM,IAAI5F,cAA2B,MAAZ4F,EAAM,GAAa,GAAK3C,mBAAmB2C,EAAM,QAElG1G,GAGJ,EAAA2G,gBAAP,SAAuB9N,EAA0B+N,GAC7C,OAAO,SAACC,EAAQC,GACZ,OAAe,MAAXD,EAAED,IAA4B,MAAXE,EAAEF,IACb,EAEG,MAAXC,EAAED,IAA4B,MAAXE,EAAEF,GACd,EAEI,MAAXC,EAAED,IAA4B,MAAXE,EAAEF,GACd,EAGJ/N,EAAYkO,SAAWlO,EAAYkO,SAASC,QAAQH,EAAED,GAAOE,EAAEF,IAClEC,EAAED,GAAMK,cAAcH,EAAEF,MAI7B,EAAAM,mBAAP,SAA0BvL,GACtB,OAAc,MAAPA,GAA8B,iBAARA,GAAmC,KAAfA,EAAI+J,QAGlD,EAAAyB,OAAP,SAAiBnQ,GACb,OAAOA,GAGJ,EAAAoQ,OAAP,SAAiBC,EAAWC,GACxB,OAAOjS,OAAO+R,OAAOC,EAAQC,IAG1B,EAAAC,YAAP,SAAkEC,GAC9D,OAAQnS,OAAOoS,KAAKD,GAAKE,QAAO,SAAAC,GAAK,OAAAC,OAAOC,OAAOF,MAAY3H,KAAI,SAAA2H,GAAK,OAAAH,EAAIG,OAIzE,EAAAtC,OAAP,SAAcF,GACV,GAAiB,MAAbA,EACA,OAAO,KAIX,GAAkB,MADlBA,EAAYA,EAAUO,QAElB,OAAO,KAGX,IAAIN,EAAMjE,EAAM4E,aAAaZ,GAClB,MAAPC,MACyD,IAAjCD,EAAUU,QAAQ,YAAsD,IAAlCV,EAAUU,QAAQ,cACxDV,EAAUU,QAAQ,MAAQ,IAC9CT,EAAMjE,EAAM4E,aAAa,UAAYZ,KAG7C,OAAOC,GAGJ,EAAA0C,kBAAP,SAAyBtR,GACrB,OAAOA,EAAEoK,OAAO,GAAGC,cAAgBrK,EAAEgC,MAAM,IAGhC,EAAA0N,eAAf,SAA8B6B,GAG1B,MADgB,mKACD9C,KAAK8C,IAGT,EAAApG,SAAf,SAAwBqG,GACpB,IACCnB,EADGoB,GAAS,EAOb,OANCpB,EAKEmB,EAAIE,UAAUC,WAAaH,EAAIE,UAAUE,QAAWJ,EAAYK,OAH3D,2TAA2TpD,KAAK4B,IAAM,0kDAA0kD5B,KAAK4B,EAAEnE,OAAO,EAAG,OACj6DuF,GAAS,GAGVA,GAAoD,MAA1CD,EAAIE,UAAUC,UAAUG,MAAM,UAGpC,EAAAzG,cAAf,SAA6BmG,GACzB,OAAmD,MAA5CA,EAAIE,UAAUC,UAAUG,MAAM,YAAgE,MAA1CN,EAAIE,UAAUC,UAAUG,MAAM,UAG9E,EAAAvC,aAAf,SAA4BZ,GACxB,IACI,GAAe,MAAXlE,EACA,OAAOA,EAAQsH,IAAM,IAAItH,EAAQsH,IAAIpD,GAAalE,EAAQuH,MAAMrD,GAC7D,GAAmB,mBAARoD,IACd,OAAO,IAAIA,IAAIpD,GACZ,GAAc,MAAV7M,OAAgB,CACvB,IAAMmQ,EAActD,EAAUU,QAAQ,QAAU,EAChD,IAAK4C,GAAetD,EAAUU,QAAQ,MAAQ,EAC1CV,EAAY,UAAYA,OACrB,IAAKsD,EACR,OAAO,KAEX,IAAMC,EAASpQ,OAAO8F,SAASW,cAAc,KAE7C,OADA2J,EAAOC,KAAOxD,EACPuD,GAEb,MAAO9N,IAET,OAAO,MA3WJ,EAAAwG,QAAS,EACT,EAAAK,gBAAiB,EACjB,EAAAJ,QAAS,EACT,EAAAG,WAAY,EACZ,EAAAE,iBAAkB,EAClB,EAAAE,sBAAuB,EACvB,EAAAE,OAAc,KACd,EAAAgE,eAAiB,iFAEjB,EAAA8C,wBAA2B,02BAoWtC,EA9WA,GAAa,EAAAzH,QAgXbA,EAAMD,S,wJClXN,mBAAsB,EAAA2H,6B,oGCLtB,aAMA,SACA,SACA,SAEA,QAEA,SACA,SACA,SACA,SAGA,QACA,SACA,SAEA,SAEA,0BACI,KAAAC,eAAyB,KAEf,KAAAzO,WAAyB,IAAI,EAAA0O,mBAAkB,GAE/C,KAAAC,aAAe,iBAEf,KAAAC,mBAAqB,CAC3B,WAAY,YAAa,aAAc,cACvC,OAAQ,OAAQ,YAAa,WAC7B,SAAU,cAAe,YACzB,MAAO,UAAW,WAAY,YAAa,aAC3C,UAAW,aAAc,MAAO,MAAO,KAAM,QAAS,SACtD,IAAK,SAAU,UAAW,cAAe,QAGzC,YAGM,KAAAC,mBAAqB,CAC3B,OAAQ,OAAQ,YAAa,WAAY,aACzC,QAAS,SAAU,KAAM,SAAU,UACnC,QAAS,iBAAkB,SAAU,OACrC,UAAW,WAAY,MAAO,cAC9B,aAAc,YAAa,QAAS,YACpC,SAAU,WAGV,MAAO,gBAGD,KAAAC,gBAAkB,CACxB,OAAQ,QAAS,UAAW,WAAY,OACxC,cAAe,YAAa,WAC5B,YAAa,WAAY,OAGzB,aAGM,KAAAC,cAA0B,CAChC,MAAO,aAAc,YAAa,OAClC,OAAQ,WAAY,YAAa,SAAU,UAC3C,YAAa,OAAQ,MAAO,UAAW,WAAY,OACnD,WAAY,MAGZ,MAAO,WAGD,KAAAC,gBAAkB,CACxBC,SAAU,QACVC,gBAAgB,GA4SxB,OAzSI,sBAAc,2BAAY,C,IAA1B,WACI,OAA8B,MAAvBpQ,KAAK2P,gB,gCAGN,YAAAU,SAAV,SAAmB5U,GACf,IACM6U,GADS,IAAIC,WACAC,gBAAgB/U,EAAM,mBACzC,OAAc,MAAP6U,GAAmD,MAApCA,EAAItK,cAAc,eAAyBsK,EAAM,MAGjE,YAAAG,SAAV,SAAmBhV,EAAciV,EAAiBC,GAAlD,gBAAkD,IAAAA,MAAA,IAC9C,IAAMC,EAAe1U,OAAO+R,OAAO,CAAEyC,OAAQA,GAAU1Q,KAAKkQ,gBAAiBS,GAC7ElV,EAAOuE,KAAK6Q,aAAapV,GAAMwP,KAAK,MAAMsB,OAC1C,IAAMzP,EAASgU,EAAKzB,MAAM5T,EAAMmV,GAShC,OARqB,MAAjB9T,EAAOiU,QAAkBjU,EAAOiU,OAAO9U,OAAS,GAChDa,EAAOiU,OAAO1D,SAAQ,SAAA5L,GACL,MAATA,EAAEuP,KAEF,EAAK9P,WAAW+P,QAAQ,qBAAuBxP,EAAEuP,IAAM,KAAOvP,EAAEyP,YAIrEpU,EAAOrB,MAAQqB,EAAOrB,KAAKQ,OAAS,EAAIa,EAAOrB,KAAO,MAGvD,YAAA0V,kBAAV,SAA4BC,GACxB,GAAIpR,KAAK+N,mBAAmBqD,GACxB,OAAO,KAEX,IAAMC,EAAYrR,KAAKyQ,SAASW,GAAS,GACzC,OAAiB,MAAbC,GAAqBA,EAAUpV,OAAS,GAAKoV,EAAU,GAAGpV,OAAS,EAC5DoV,EAAU,GAEd,MAGD,YAAAC,aAAV,SAAuBC,GAAvB,WACI,GAAW,MAAPA,EACA,OAAO,KAGX,GAAmB,iBAARA,EAAkB,CACzB,IAAMC,EAAW,IAAI,EAAAC,aAErB,OADAD,EAASD,IAAMvR,KAAK0R,OAAOH,GACvBvR,KAAK+N,mBAAmByD,EAASD,KAC1B,MAEXC,EAASrC,MAAQ,KACV,CAACqC,IAGZ,GAAID,EAAItV,OAAS,EAAG,CAChB,IAAM,EAA4B,GAUlC,OATAsV,EAAIlE,SAAQ,SAAAsE,GACR,IAAMH,EAAW,IAAI,EAAAC,aACrBD,EAASD,IAAM,EAAKG,OAAOC,GACvB,EAAK5D,mBAAmByD,EAASD,OAGrCC,EAASrC,MAAQ,KACjB,EAAU5S,KAAKiV,OAES,IAArB,EAAUvV,OAAe,KAAO,EAG3C,OAAO,MAGD,YAAAyV,OAAV,SAAiBH,GACb,OAAW,MAAPA,EACO,OAGiB,KAD5BA,EAAMA,EAAIhF,QACFG,QAAQ,QAAiB6E,EAAI7E,QAAQ,MAAQ,IACjD6E,EAAM,UAAYA,GAElBA,EAAItV,OAAS,IACNsV,EAAIK,UAAU,EAAG,KAErBL,IAGD,YAAAM,YAAV,SAAsB5F,GAClB,IAAME,EAAW,EAAAnE,MAAM+D,YAAYE,GACnC,OAAIjM,KAAK+N,mBAAmB5B,GACjB,KAEJA,EAASK,WAAW,QAAUL,EAAS1B,QAAQ,OAAQ,IAAM0B,GAG9D,YAAA4B,mBAAV,SAA6BvL,GACzB,OAAO,EAAAwF,MAAM+F,mBAAmBvL,IAG1B,YAAAsP,kBAAV,SAA4BtP,EAAauP,GACrC,YADqC,IAAAA,MAAA,MACjC/R,KAAK+N,mBAAmBvL,GACjBuP,EAEJvP,GAGD,YAAAqO,aAAV,SAAuBrO,GACnB,OAAOA,EAAI4K,MAAMpN,KAAK6P,eAIhB,YAAAmC,aAAV,SAAuBC,GACnB,GAAIjS,KAAK+N,mBAAmBkE,GACxB,OAAO,KAIX,IAAIC,EAAK,IAAIrG,OAAO,MACpB,OAAyB,MAArBoG,EAAQ9C,MAAM+C,GACP,OAKP,sGACCpG,KAAKmG,GACC,cAIXC,EAAK,IAAIrG,OAAO,UACS,MAArBoG,EAAQ9C,MAAM+C,GACP,QAIXA,EAAK,IAAIrG,OAAO,iFACS,MAArBoG,EAAQ9C,MAAM+C,GACP,YAIXA,EAAK,IAAIrG,OAAO,OACS,MAArBoG,EAAQ9C,MAAM+C,GACP,eAIXA,EAAK,IAAIrG,OAAO,YACS,MAArBoG,EAAQ9C,MAAM+C,GACP,eAIXA,EAAK,IAAIrG,OAAO,yBACS,MAArBoG,EAAQ9C,MAAM+C,GACP,OAIXA,EAAK,IAAIrG,OAAO,qCACS,MAArBoG,EAAQ9C,MAAM+C,GACP,OAGJ,YAGD,YAAAC,kBAAV,SAA4BC,EAAoBC,GAC5C,IAAKrS,KAAK+N,mBAAmBsE,GAAa,CAEtC,IAAM9E,GADN8E,EAAaA,EAAW5H,QAAQ,MAAO,KACd2C,MAAM,KAC/B,GAAqB,IAAjBG,EAAMtR,OAAc,CACpB,IAAIqW,EAAgB,KAChBC,EAAe,KAUnB,GATwB,IAApBhF,EAAM,GAAGtR,QAAoC,IAApBsR,EAAM,GAAGtR,QAEb,KADrBqW,EAAQ/E,EAAM,IACJtR,QAA6B,MAAbqW,EAAM,KAC5BA,EAAQA,EAAM/I,OAAO,EAAG,IAGR,IAApBgE,EAAM,GAAGtR,QAAoC,IAApBsR,EAAM,GAAGtR,SAClCsW,EAAwB,IAAjBD,EAAMrW,OAAe,KAAOsR,EAAM,GAAKA,EAAM,IAE3C,MAAT+E,GAAyB,MAARC,EAGjB,OAFAH,EAAOI,KAAKC,SAAWH,EACvBF,EAAOI,KAAKE,QAAUH,GACf,GAInB,OAAO,GAGD,YAAAI,yBAAV,SAAmC7V,GAC/BA,EAAO8V,oBAAoBvF,SAAQ,SAAAlP,GAAK,OAAArB,EAAO+V,wBAAwBtW,KAAK4B,MAC5ErB,EAAOgW,YAAchW,EAAOiW,QAAQlM,KAAI,SAAAmM,GACpC,IAAMC,EAAa,IAAI,EAAAC,eAEvB,OADAD,EAAWpV,KAAOmV,EAAEnV,KACboV,KAEXnW,EAAO8V,oBAAsB,GAC7B9V,EAAOiW,QAAU,IAGX,YAAAI,yBAAV,SAAmCC,EAAmBC,GAClD,IAAMC,EAAMtT,KAAKuT,4BAA4BH,EAAUC,GACvD,OAAsB,IAAfC,EAAIrX,OAAe,KAAOqX,EAAI,IAG/B,YAAAC,4BAAV,SAAsCH,EAAmBC,GACrD,OAAOlN,MAAMC,KAAKgN,EAAS/M,iBAAiBgN,IAAQ9E,QAAO,SAAAlO,GAAM,OAAAA,EAAGmT,aAAeJ,MAG7E,YAAAK,gBAAV,WACI,IAAMrB,EAAS,IAAI,EAAAsB,WAMnB,OALAtB,EAAOuB,UAAW,EAClBvB,EAAOwB,MAAQ,GACfxB,EAAOyB,OAAS,GAChBzB,EAAO0B,MAAQ,IAAI,EAAAC,UACnB3B,EAAOnQ,KAAO,EAAA+R,WAAWC,MAClB7B,GAGD,YAAA8B,cAAV,SAAwB9B,GACN,MAAVA,IAGAA,EAAOnQ,OAAS,EAAA+R,WAAWC,QAC3B7B,EAAO0B,MAAQ,MAEf9T,KAAK+N,mBAAmBqE,EAAOvU,QAC/BuU,EAAOvU,KAAO,MAEdmC,KAAK+N,mBAAmBqE,EAAOwB,OAC/BxB,EAAOwB,MAAQ,KAEfxB,EAAOwB,MAAQxB,EAAOwB,MAAMrH,OAEX,MAAjB6F,EAAOyB,QAA2C,IAAzBzB,EAAOyB,OAAO5X,SACvCmW,EAAOyB,OAAS,QAId,YAAAM,WAAV,SAAqB/B,EAAoBxT,EAAaN,EAAe2D,GACjE,QADiE,IAAAA,MAAkB,EAAAmS,UAAUC,OACzFrU,KAAK+N,mBAAmBzP,GAM5B,GAHI0B,KAAK+N,mBAAmBnP,KACxBA,EAAM,IAENN,EAAMrC,OAAS,KAAOqC,EAAMiO,OAAOY,OAAOnN,KAAK6P,eAAiB,EAC5C,MAAhBuC,EAAOwB,QACPxB,EAAOwB,MAAQ,IAEnBxB,EAAOwB,OAAUhV,EAAM,KAAOoB,KAAK6Q,aAAavS,GAAO2M,KAAK,MAAQ,SACjE,CACkB,MAAjBmH,EAAOyB,SACPzB,EAAOyB,OAAS,IAEpB,IAAMS,EAAQ,IAAI,EAAAC,UAClBD,EAAMrS,KAAOA,EACbqS,EAAMzW,KAAOe,EACb0V,EAAMhW,MAAQA,EACd8T,EAAOyB,OAAOtX,KAAK+X,KAIjB,YAAAE,cAAV,SAAwB1X,EAAsB2X,GAC1C,IAAIC,EAAc5X,EAAOiW,QAAQ9W,OAC3B0Y,GAAa3U,KAAK+N,mBAAmB0G,GACvCG,EAAYD,EAEhB,GAAIA,EACA,IAAK,IAAI5Y,EAAI,EAAGA,EAAIe,EAAOiW,QAAQ9W,OAAQF,IACvC,GAAIe,EAAOiW,QAAQhX,GAAG8B,OAAS4W,EAAY,CACvCG,GAAY,EACZF,EAAc3Y,EACd,MAKZ,GAAI6Y,EAAW,CACX,IAAM5B,EAAI,IAAI,EAAA6B,WACd7B,EAAEnV,KAAO4W,EACT3X,EAAOiW,QAAQxW,KAAKyW,GAEpB2B,GACA7X,EAAO8V,oBAAoBrW,KAAK,CAACO,EAAOgY,QAAQ7Y,OAAQyY,KAItD,YAAAK,sBAAV,SAAgC3C,GACxBA,EAAOnQ,OAAS,EAAA+R,WAAWC,OAASjU,KAAK+N,mBAAmBqE,EAAO0B,MAAMkB,WACzEhV,KAAK+N,mBAAmBqE,EAAO0B,MAAMmB,YACf,MAArB7C,EAAO0B,MAAMoB,MAA6C,IAA7B9C,EAAO0B,MAAMoB,KAAKjZ,UAChDmW,EAAOnQ,KAAO,EAAA+R,WAAWmB,WACzB/C,EAAOgD,WAAa,IAAI,EAAAC,eACxBjD,EAAOgD,WAAWnT,KAAO,EAAAqT,eAAeC,UAGpD,EAhWA,GAAsB,EAAAC,gB,oGCpBtB,iBACI,KAAAC,SAAU,EAEV,KAAAX,QAAwB,GACxB,KAAA/B,QAAwB,GACxB,KAAAH,oBAA0C,GAC1C,KAAAE,YAAgC,GAChC,KAAAD,wBAA8C,IAPrC,EAAA6C,gB,uGCJb,mBAAsB,EAAAC,gB,0GCAtB,W,OAKA,2B,OAIuC,YAAAC,QAAnC,SAA2CC,GACvCA,EAAOC,kB,iCAFFC,I,iCAAAA,EAAkB,mE,yCAAlB,mB,EAHb,GAGa,EAAAA,sB,+DAAAA,EAAkB,E,KAH9B,EAAAlV,U,MAAU,CACPC,SAAU,qB,MAGyB8U,QAAO,E,KAAzC,EAAAI,a,MAAa,QAAS,CAAC,gB,uGCT5B,mBAAsB,EAAAC,kB,mGCAtB,SAAYjC,GACR,qBACA,+BACA,mBACA,2BAJJ,CAAY,EAAAA,aAAA,EAAAA,WAAU,M,oGCMtB,mBAAsB,EAAAkC,e,gHCNtB,W,OAOA,aAUI,WAAoB7V,EAAwBC,GAAxB,KAAAD,KAAwB,KAAAC,W,OAN5C,sBAAa,+BAAgB,C,IAA7B,SAA8B6V,GAC1BnW,KAAKoW,gBAAgC,KAAdD,IAAkC,IAAdA,G,gCAO/C,YAAA3V,SAAA,WACQR,KAAKoW,kBAAoBpW,KAAKK,GAAGI,cAAcC,aAAa,iBAC5DV,KAAKM,SAASK,aAAaX,KAAKK,GAAGI,cAAe,eAAgB,OAEjET,KAAKK,GAAGI,cAAcC,aAAa,mBACpCV,KAAKM,SAASK,aAAaX,KAAKK,GAAGI,cAAe,iBAAkB,QAEnET,KAAKK,GAAGI,cAAcC,aAAa,gBACpCV,KAAKM,SAASK,aAAaX,KAAKK,GAAGI,cAAe,cAAe,QAEhET,KAAKK,GAAGI,cAAcC,aAAa,eACpCV,KAAKM,SAASK,aAAaX,KAAKK,GAAGI,cAAe,aAAc,SAE/DT,KAAKK,GAAGI,cAAcC,aAAa,cACpCV,KAAKM,SAASK,aAAaX,KAAKK,GAAGI,cAAe,YAAa,a,iCAvB9D4V,GAAsB,qE,iCAAtBA,EAAsB,sF,EAHnC,GAGa,EAAAA,0B,+DAAAA,EAAsB,E,KAHlC,EAAAxV,U,MAAU,CACPC,SAAU,0B,6DAGGwV,iBAAgB,E,KAA5B,EAAAtV,W,0GCML,mBAAsB,EAAAuV,sB,yGCVtB,mBAAsB,EAAAC,qB,0HCPtB,mBAAsB,EAAAC,2B,yGCAtB,W,OAKA,2B,OAIuC,YAAAb,QAAnC,SAA2CC,GACvCA,EAAO3P,mB,iCAFFwQ,I,iCAAAA,EAAiB,kE,yCAAjB,mB,EAHb,GAGa,EAAAA,qB,+DAAAA,EAAiB,E,KAH7B,EAAA7V,U,MAAU,CACPC,SAAU,oB,MAGyB8U,QAAO,E,KAAzC,EAAAI,a,MAAa,QAAS,CAAC,gB,oGCJ5B,mBAAsB,EAAAW,e,qGCGtB,mBAAsB,EAAAC,iB,mGCRtB,SAAYC,GACR,yDACA,uCACA,6CACA,6BACA,+BACA,6CACA,iCACA,iCACA,qCACA,iDACA,gEAXJ,CAAY,EAAAA,aAAA,EAAAA,WAAU,M,sGCGtB,iBACI,KAAAC,gBAA2B,MADT,EAAAC,iB,oGCDtB,mBAAsB,EAAAC,gB,2GCFtB,WAMA,Q,OAEA,aAUI,WAAoB3W,GAAA,KAAAA,K,OANpB,sBAAa,2BAAY,C,IAAzB,SAA0B8V,GACtBnW,KAAKiX,UAA0B,KAAdd,IAAkC,IAAdA,G,gCAOzC,YAAA3V,SAAA,YACS,EAAAwH,MAAMO,iBAAmBvI,KAAKiX,WAC/BjX,KAAKK,GAAGI,cAAcyW,S,iCAXrBC,GAAkB,oC,iCAAlBA,EAAkB,0E,EAH/B,GAGa,EAAAA,sB,+DAAAA,EAAkB,E,KAH9B,EAAAtW,U,MAAU,CACPC,SAAU,sB,0CAGGsW,aAAY,E,KAAxB,EAAApW,W,sGCZL,W,OAUA,2B,OAII,YAAArB,UAAA,SAAU0X,GACN,OAAY,MAARA,EACO,KAGS,MAAbA,EAAKxZ,MAAqC,KAArBwZ,EAAKxZ,KAAK0O,OAAgB8K,EAAKC,MAAQD,EAAKxZ,M,iCANnE0Z,I,6CAAAA,EAAY,U,EAHzB,GAGa,EAAAA,gB,+DAAAA,EAAY,E,KAHxB,EAAArX,K,MAAK,CACFrC,KAAM,e,oHCXV,8BAmCa,KAAA2Z,mBAA6BC,EAAiBD,mBAC9C,KAAAE,aAAuBD,EAAiBC,aACxC,KAAAC,+BAAyCF,EAAiBE,+BAC1D,KAAAC,0BAAoCH,EAAiBG,0BACrD,KAAAC,kBAA4BJ,EAAiBI,kBAC7C,KAAAC,uBAAiCL,EAAiBK,uBAClD,KAAAC,uBAAiCN,EAAiBM,uBAClD,KAAAC,+BAAyCP,EAAiBO,+BAC1D,KAAAC,4BAAsCR,EAAiBQ,4BACvD,KAAAC,6BAAuCT,EAAiBS,6BACxD,KAAAC,gBAA0BV,EAAiBU,gBAC3C,KAAAC,sBAAgCX,EAAiBW,sBACjD,KAAAC,cAAwBZ,EAAiBY,cACzC,KAAAC,gBAA0Bb,EAAiBa,gBAC3C,KAAAC,oBAA8Bd,EAAiBc,oBAC/C,KAAAC,UAAoBf,EAAiBe,UACrC,KAAAC,SAAmBhB,EAAiBgB,SACpC,KAAAC,sBAAgCjB,EAAiBiB,sBACjD,KAAAC,wBAAkClB,EAAiBkB,wBACnD,KAAAC,wBAAkCnB,EAAiBmB,wBACnD,KAAAC,6BAAuCpB,EAAiBoB,6BACxD,KAAAC,gBAA0BrB,EAAiBqB,gBAC3C,KAAAC,gBAA0BtB,EAAiBsB,gBAC3C,KAAAC,aAAuBvB,EAAiBuB,aACxC,KAAAC,kBAA4BxB,EAAiBwB,kBAC7C,KAAAC,mBAA6BzB,EAAiByB,mBAC9C,KAAAC,mBAA6B1B,EAAiB0B,mBAC9C,KAAAC,YAAsB3B,EAAiB2B,YACvC,KAAAC,mBAA6B5B,EAAiB4B,mBAC9C,KAAAC,cAAwB7B,EAAiB6B,cACzC,KAAAC,4BAAsC9B,EAAiB8B,4BACvD,KAAAC,8BAAwC/B,EAAiB+B,8BACtE,OAlEoB,EAAAhC,mBAA6B,kBAC7B,EAAAE,aAAuB,YACvB,EAAAC,+BAAyC,8BACzC,EAAA8B,sCAAgD,qCAChD,EAAA7B,0BAAoC,yBACpC,EAAAC,kBAA4B,iBAC5B,EAAAC,uBAAiC,sBACjC,EAAAC,uBAAiC,sBACjC,EAAAC,+BAAyC,yBACzC,EAAAC,4BAAsC,2BACtC,EAAAC,6BAAuC,4BACvC,EAAAC,gBAA0B,aAC1B,EAAAC,sBAAgC,qBAChC,EAAAC,cAAwB,aACxB,EAAAC,gBAA0B,eAC1B,EAAAC,oBAA8B,mBAC9B,EAAAC,UAAoB,SACpB,EAAAC,SAAmB,QACnB,EAAAC,sBAAgC,qBAChC,EAAAC,wBAAkC,0BAClC,EAAAC,wBAAkC,0BAClC,EAAAC,6BAAuC,+BACvC,EAAAC,gBAA0B,kBAC1B,EAAAC,gBAA0B,kBAC1B,EAAAC,aAAuB,eACvB,EAAAC,kBAA4B,oBAC5B,EAAAC,mBAA6B,kBAC7B,EAAAC,mBAA6B,kBAC7B,EAAAC,YAAsB,WACtB,EAAAC,mBAA6B,YAC7B,EAAAC,cAAwB,gBACxB,EAAAC,4BAAsC,8BACtC,EAAAC,8BAAwC,gCAkC5D,EAnEA,GAAa,EAAA/B,oB,u+CCAb,WAWA,GALA,MAEA,MACA,MAEA,O,gFAEA,aAkBI,WAAmB,EAAiC,EACxC,GADO,iBAAiC,6BACxC,oBAXH,UAAO,GACP,eAAY,EACZ,eAAY,UACZ,cAAW,GACX,gBAAa,IACb,cAAU,EACV,aAAS,E,OAOlB,gCACS,KAAK,SACN,KAAK,YAIb,mCACQ,KAAK,SACL,KAAK,YAIC,qBAAd,W,gHAC4B,SAAM,KAAK,aAAa,IAAa,oB,cAArC,UACa,MAAd,KAAK,MACN,GAAM,KAAK,sBAAsB,KAAK,KAAK,MAAM,cAAc,OAAQ,QADzF,M,cACM,EAAY,SACZ,EAAO,QAAM,gBAAgB,GAAW,cAC9C,KAAK,IAAM,mCAAqC,EAAO,MAAQ,KAAK,KAAO,gB,aAEvE,EAAgB,KACd,EAAY,KAAK,KAAK,cAExB,KAAK,UAAY,IACjB,EAAQ,KAAK,gBAAgB,EAAW,KAAK,YAEpC,MAAT,IACA,EAAQ,KAAK,qBAAqB,EAAW,KAAK,YAIlD,EAAM,MAAM,QAAM,2BAClB,EAAQ,EAAM,MAAM,QAAM,yBAAyB,IAGjD,EAAU,KAAK,YAAY,GAC3B,EAAQ,KAAK,cAAc,IAC3B,EAAM,KAAK,OAAO,KAAK,KAAM,IAC/B,YAAY,GACV,EAAO,OAAO,SAAS,cAAc,OAAO,YAAY,GAAK,UAC7D,EAAU,OAAO,KAAK,SAAS,mBAAmB,KACxD,KAAK,IAAM,6BAA+B,E,mCAI1C,0BAAR,SAAsB,GAElB,IADA,IAAI,EAAO,EACF,EAAI,EAAG,EAAI,EAAI,OAAQ,IAE5B,EAAO,EAAI,WAAW,KAAO,GAAQ,GAAK,GAE9C,IAAI,EAAQ,IACZ,IAAS,EAAI,EAAG,EAAI,EAAG,IAAK,CAGxB,IAAU,MADK,GAAa,EAAJ,EAAU,KACX,SAAS,KAAK,QAAQ,GAEjD,OAAO,GAGH,4BAAR,SAAwB,EAAc,GAClC,IAAM,EAAQ,EAAK,MAAM,KACzB,GAAI,EAAM,OAAS,EAAG,CAElB,IADA,IAAI,EAAO,GACF,EAAI,EAAG,EAAI,EAAO,IACvB,GAAQ,KAAK,qBAAqB,EAAM,GAAI,GAEhD,OAAO,EAEX,OAAO,MAGH,mBAAR,SAAe,EAAc,GACzB,IAAM,EAAS,OAAO,SAAS,cAAc,OAQ7C,OAPA,EAAO,aAAa,QAAS,8BAC7B,EAAO,aAAa,iBAAkB,QACtC,EAAO,aAAa,QAAS,EAAK,YAClC,EAAO,aAAa,SAAU,EAAK,YACnC,EAAO,MAAM,gBAAkB,EAC/B,EAAO,MAAM,MAAQ,EAAO,KAC5B,EAAO,MAAM,OAAS,EAAO,KACtB,GAGH,wBAAR,SAAoB,GAChB,IAAM,EAAU,OAAO,SAAS,cAAc,QAY9C,OAXA,EAAQ,aAAa,cAAe,UACpC,EAAQ,aAAa,IAAK,OAC1B,EAAQ,aAAa,IAAK,OAC1B,EAAQ,aAAa,KAAM,UAC3B,EAAQ,aAAa,iBAAkB,QACvC,EAAQ,aAAa,OAAQ,KAAK,WAClC,EAAQ,aAAa,cAAe,kHAEpC,EAAQ,YAAc,EACtB,EAAQ,MAAM,WAAa,KAAK,WAAW,WAC3C,EAAQ,MAAM,SAAW,KAAK,SAAW,KAClC,GAGH,iCAAR,SAA6B,EAAa,GACtC,IAAM,EAAa,EAAI,MAAM,OAC7B,OAAqB,MAAd,EAAqB,EAAW,MAAM,EAAG,GAAO,KAAK,IAAM,I,iCArH7D,GAAe,uH,iCAAf,EAAe,sTAlB5B,uB,MAA2D,wCAAtD,sFAAqD,6C,2CAa1D,GAKa,qB,+DAAA,EAAe,E,KAL3B,Y,MAAU,CACP,SAAU,aACV,SAAU,6H,iGAID,KAAI,E,KAAZ,UACQ,MAAK,E,KAAb,UACQ,KAAI,E,KAAZ,UACQ,UAAS,E,KAAjB,UACQ,UAAS,E,KAAjB,UACQ,SAAQ,E,KAAhB,UACQ,WAAU,E,KAAlB,UACQ,QAAO,E,KAAf,UACQ,OAAM,E,KAAd,a,oGCzBL,mBAAsB,EAAAiC,c,68CCFtB,YAMA,2BA2DA,OA1Dc,YAAAC,iBAAV,SAA6C1M,EAAW2M,EAAc/S,EAClEgT,EAA2BC,GAC3B,IAAK,IAAMrM,UADgB,IAAAqM,MAAA,IACRjT,EACf,GAAKA,EAAIzK,eAAeqR,GAAxB,CAIA,IAAMsM,EAAUH,EAAS/S,EAAI4G,IAASA,IACb,IAArBoM,GAA6BC,EAAWpN,QAAQe,IAAS,EACxDR,EAAeQ,GAAQsM,GAAoB,KAE3C9M,EAAeQ,GAAQsM,EAAU,IAAI,EAAAC,UAAUD,GAAW,OAI7D,YAAAE,eAAV,SAA2ChN,EAAW2M,EAAc/S,EAAUqT,GAC1E,IAAK,IAAMzM,UAD+D,IAAAyM,MAAA,IACvDrT,EACf,GAAKA,EAAIzK,eAAeqR,GAAxB,CAIA,IAAMsM,EAAW9M,EAAgBpG,EAAI4G,IAASA,GAC1CyM,EAAiBxN,QAAQe,IAAS,EACjCmM,EAAgBnM,GAAmB,MAAXsM,EAAkBA,EAAU,KAEpDH,EAAgBnM,GAAmB,MAAXsM,EAAmBA,EAAsBI,gBAAkB,OAKhF,YAAAC,WAAhB,SAA2CC,EAAcxT,EAAUyT,EAC/D1b,G,YAAA,IAAAA,MAAA,M,6FAIA,IAAW6O,KAHL8M,EAAW,GACXC,EAAYxa,KAEC6G,EACVA,EAAIzK,eAAeqR,IAKxB,SAAWgN,GACP,IAAMxb,EAAIyb,QAAQC,UAAUrZ,MAAK,WAC7B,IAAMsZ,EAAU/T,EAAI4T,IAAYA,EAChC,OAAID,EAAKI,GACEJ,EAAKI,GAASC,QAAQP,EAAO1b,GAEjC,QACR0C,MAAK,SAACwZ,GACJT,EAAkBI,GAAWK,KAElCP,EAAShe,KAAK0C,GAVlB,CAWGwO,GAGP,SAAMiN,QAAQK,IAAIR,I,OAClB,OADA,SACO,CAAP,EAAOF,WAEf,EA3DA,G,gICNA,mBAAa,EAAAW,+B,qGCIb,iBAYI,WAAYrd,GAXZ,KAAAsd,eAAyB,KACzB,KAAAxI,SAAmB,KACnB,KAAAC,QAAkB,KAClB,KAAAwI,KAAe,KAGP,KAAAC,OAAiB,KACjB,KAAAC,QAAkB,KAClB,KAAAC,UAAoB,KA8DhC,OAvDI,sBAAI,yBAAU,C,IAAd,WACI,OAAoB,MAAbrb,KAAKkb,KAAe,IAAII,OAAOtb,KAAKkb,KAAKjf,QAAU,M,gCAG9D,sBAAI,2BAAY,C,IAAhB,WACI,OAAsB,MAAf+D,KAAKub,OAAiB,IAAID,OAAOtb,KAAKub,OAAOtf,QAAU,M,gCAGlE,sBAAI,oBAAK,C,IAAT,WACI,OAAO+D,KAAKmb,Q,IAEhB,SAAU7c,GACN0B,KAAKmb,OAAS7c,EACd0B,KAAKqb,UAAY,M,gCAGrB,sBAAI,qBAAM,C,IAAV,WACI,OAAOrb,KAAKob,S,IAEhB,SAAW9c,GACP0B,KAAKob,QAAU9c,EACf0B,KAAKqb,UAAY,M,gCAGrB,sBAAI,uBAAQ,C,IAAZ,WACI,GAAsB,MAAlBrb,KAAKqb,YACLrb,KAAKqb,UAAYrb,KAAKwb,MACH,MAAfxb,KAAKub,QAAkBvb,KAAKub,OAAOtf,QAAU,GAAG,CAC1B,MAAlB+D,KAAKqb,WAAwC,KAAnBrb,KAAKqb,UAC/Brb,KAAKqb,WAAa,KAElBrb,KAAKqb,UAAY,GAIrB,IAAMI,EAAQzb,KAAKub,OAAOtf,QAAU,GAAgD,MAA3C+D,KAAKub,OAAOpM,MAAM,IAAItD,OAAO,WAAqB,EAAI,EAC/F7L,KAAKqb,WAAc,IAAMrb,KAAKub,OAAOhS,OAAOvJ,KAAKub,OAAOtf,OAASwf,GAGzE,OAAOzb,KAAKqb,W,gCAGhB,sBAAI,yBAAU,C,IAAd,WACI,IAAKrb,KAAKyS,WAAazS,KAAK0S,QACxB,OAAO,KAGX,IAAIgJ,EAAuB,MAAjB1b,KAAKyS,UAAoB,IAAMzS,KAAKyS,UAAUpT,OAAO,GAAK,KAEpE,OADAqc,GAAQ,OAAyB,MAAhB1b,KAAK0S,QAAkB1S,KAAK2b,WAAW3b,KAAK0S,SAAW,S,gCAIpE,YAAAiJ,WAAR,SAAmBpJ,GACf,OAAuB,IAAhBA,EAAKtW,OAAe,KAAOsW,EAAOA,GAEjD,EAvEA,GAAa,EAAAqJ,Y,oHCDb,mBAAsB,EAAAC,yB,2GCDtB,mBAAsB,EAAAC,uB,yGCFtB,W,GAEA,KACA,K,oBAIA,aAEI,WAAoBpc,EAAkCqc,GAAlC,KAAArc,cAAkC,KAAAqc,uB,OAEtD,YAAAha,UAAA,SAAUtG,GACN,IAAMugB,EAAsBhc,KAAKN,YAAYnB,EAAE,mBAC3CwS,EAAmB,GAoBvB,OAlBY,MAARtV,GAAgC,iBAATA,EACvBsV,EAAOxU,KAAKd,GACG,MAARA,GAAgC,iBAATA,EAC9BsV,EAAOxU,KAAKyf,GACoB,MAAzBvgB,EAAKwgB,iBACZlL,EAASA,EAAOmL,OAAQzgB,EAAuB0gB,kBAE/CpL,EAAOxU,KAAKd,EAAKyV,QAAUzV,EAAKyV,QAAU8K,GAGxB,IAAlBjL,EAAO9U,OACP+D,KAAK+b,qBAAqBK,UAAU,QAASpc,KAAKN,YAAYnB,EAAE,iBAAkBwS,EAAO,IAClFA,EAAO9U,OAAS,GACvB+D,KAAK+b,qBAAqBK,UAAU,QAASpc,KAAKN,YAAYnB,EAAE,iBAAkBwS,EAAQ,CACtFsL,QAAS,IAAOtL,EAAO9U,SAIxB8U,G,iCAzBFuL,GAAiB,+D,oCAAjBA,EAAiB,QAAjBA,EAAiB,O,EAD9B,GACa,EAAAA,qB,+DAAAA,EAAiB,E,KAD7B,EAAApV,c,+iDCPD,aAIA,QAIA,aAQI,WAAYqV,EAAgD9gB,EAAe+gB,EAAaC,GACpF,GAAY,MAARhhB,EAAc,CAEd,IAAMihB,EAAUH,EAkBhB,OAfIvc,KAAKma,gBADC,MAANqC,EACuBE,EAAU,IAAMF,EAAK,IAAM/gB,EAE3BihB,EAAU,IAAMjhB,EAIhC,MAAPghB,IACAzc,KAAKma,iBAAoB,IAAMsC,GAGnCzc,KAAK2c,eAAiBD,EACtB1c,KAAKvE,KAAOA,EACZuE,KAAKwc,GAAKA,OACVxc,KAAKyc,IAAMA,GAMf,GADAzc,KAAKma,gBAAkBoC,EAClBvc,KAAKma,gBAAV,CAIA,IAAMyC,EAAe5c,KAAKma,gBAAgB/M,MAAM,KAC5CyP,EAAsB,KAE1B,GAA4B,IAAxBD,EAAa3gB,OACb,IACI+D,KAAK2c,eAAiBrT,SAASsT,EAAa,GAAI,MAChDC,EAAYD,EAAa,GAAGxP,MAAM,KACpC,MAAO3L,GACL,YAGJob,EAAY7c,KAAKma,gBAAgB/M,MAAM,KACvCpN,KAAK2c,eAAsC,IAArBE,EAAU5gB,OAAe,EAAA6gB,eAAeC,yBAC1D,EAAAD,eAAeE,cAGvB,OAAQhd,KAAK2c,gBACT,KAAK,EAAAG,eAAeC,yBACpB,KAAK,EAAAD,eAAeG,yBAChB,GAAyB,IAArBJ,EAAU5gB,OACV,OAGJ+D,KAAKwc,GAAKK,EAAU,GACpB7c,KAAKvE,KAAOohB,EAAU,GACtB7c,KAAKyc,IAAMI,EAAU,GACrB,MACJ,KAAK,EAAAC,eAAeE,cAChB,GAAyB,IAArBH,EAAU5gB,OACV,OAGJ+D,KAAKwc,GAAKK,EAAU,GACpB7c,KAAKvE,KAAOohB,EAAU,GACtB,MACJ,KAAK,EAAAC,eAAeI,uBACpB,KAAK,EAAAJ,eAAeK,qBAChB,GAAyB,IAArBN,EAAU5gB,OACV,OAGJ+D,KAAKvE,KAAOohB,EAAU,GACtB,MACJ,QACI,SA2BhB,OAvBU,YAAAhC,QAAN,SAAcP,EAAe1b,G,YAAA,IAAAA,MAAA,M,6FACzB,GAA2B,MAAvBoB,KAAKod,eACL,MAAO,CAAP,EAAOpd,KAAKod,gBAKhB,KADMC,EAAoB,EAAArV,MAAMW,OAAe2U,2BAI3C,MAAM,IAAI/V,MAAM,qDAFhBgW,EAAgBF,EAAiBG,mB,8CAMtB,MAAP5e,EAAA,MACM,GAAM2e,EAAcE,UAAUnD,I,OAApC1b,EAAM,S,iBAEY,OAAtB,EAAAoB,KAAsB,GAAMud,EAAcG,cAAc1d,KAAMpB,I,cAA9D,EAAKwe,eAAiB,S,6BAEtBpd,KAAKod,eAAiB,0B,aAE1B,MAAO,CAAP,EAAOpd,KAAKod,wBAEpB,EA5GA,GAAa,EAAApD,a,oGCNb,mBAAsB,EAAA2D,gB,yGCItB,iBAGI,WAAY7e,GAFZ,KAAAmD,KAAuB,KAGdnD,IAILkB,KAAKiC,KAAOnD,EAAEmD,MAMtB,OAHI,sBAAI,uBAAQ,C,IAAZ,WACI,OAAO,M,gCAEf,EAdA,GAAa,EAAAoT,kB,sGCNb,SAAYC,GACR,yBADJ,CAAY,EAAAA,iBAAA,EAAAA,eAAc,M,o+CCA1B,WAMA,QAOA,GALA,OAEA,MACA,MAEA,OAEA,Q,+DCfsC,uB,6BAAmB,0DAAd,6C,wBAAwF,mB,6BAAG,uDDiBtI,IAAMsI,EAAe,CACjB,WAAYzT,OAAOC,aAAa,OAChC,mBAAoBD,OAAOC,aAAa,OACxC,eAAgBD,OAAOC,aAAa,OACpC,iBAAkBD,OAAOC,aAAa,OACtC,aAAcD,OAAOC,aAAa,OAClC,WAAYD,OAAOC,aAAa,QAGpC,aAaI,WAAYyT,EAAkDC,GAAA,KAAAA,eAC1D9d,KAAK+d,SAAWF,EAAmBG,c,OAGjC,YAAA7c,YAAN,W,gGAK0B,OAFtBnB,KAAKie,MAAQ,KACbje,KAAKke,cAAgB,KACrB,EAAAle,KAAsB,GAAMA,KAAK8d,aAAa5f,IAAa,EAAAuZ,iBAAiBI,oB,cAA5E,EAAKsG,cAAiB,SACtBne,KAAKoe,O,YAGT,sBAAI,uBAAQ,C,IAAZ,WACI,OAAOR,EAAQ5d,KAAKqC,O,gCAGd,YAAA+b,KAAV,WACI,OAAQpe,KAAKoS,OAAOnQ,MAChB,KAAK,EAAA+R,WAAWC,MACZjU,KAAKqC,KAAO,WACZrC,KAAKqe,eACL,MACJ,KAAK,EAAArK,WAAWmB,WACZnV,KAAKqC,KAAO,mBACZ,MACJ,KAAK,EAAA2R,WAAWsK,KACZte,KAAKqC,KAAO,iBACZ,MACJ,KAAK,EAAA2R,WAAWuK,SACZve,KAAKqC,KAAO,iBAOhB,YAAAgc,aAAR,WACI,GAAIre,KAAKoS,OAAO0B,MAAMvC,IAAK,CACvB,IAAIiN,EAAcxe,KAAKoS,OAAO0B,MAAMvC,IAChCkN,GAAY,EAehB,GAb6C,IAAzCD,EAAY9R,QAAQ,kBACpB1M,KAAKqC,KAAO,aACZrC,KAAKie,MAAQ,MAC+B,IAArCO,EAAY9R,QAAQ,cAC3B1M,KAAKqC,KAAO,WACZrC,KAAKie,MAAQ,MACNje,KAAKme,eAAgD,IAAhCK,EAAY9R,QAAQ,QAAiB8R,EAAY9R,QAAQ,MAAQ,GAC7F8R,EAAc,UAAYA,EAC1BC,GAAY,GACLze,KAAKme,eACZM,EAA4C,IAAhCD,EAAY9R,QAAQ,SAAiB8R,EAAY9R,QAAQ,MAAQ,GAG7E1M,KAAKme,cAAgBM,EACrB,IACIze,KAAKie,MAAQje,KAAK+d,SAAW,IAAM,EAAA/V,MAAM+D,YAAYyS,GAAe,YACpExe,KAAKke,cAAgB,sBACvB,MAAOzc,UAGbzB,KAAKie,MAAQ,M,iCAvEZS,GAAa,gF,iCAAbA,EAAa,qRC9B1B,4BAAsC,8CAA6F,4CAAwE,iCAAO,iB,MAArH,4DAA0E,gE,+DD0BvK,GAIa,EAAAA,iB,+DAAAA,EAAa,E,KAJzB,EAAA/b,U,MAAU,CACP7B,SAAU,iBACV8B,YAAa,2B,wEAGJwP,OAAQ,CAAF,C,KAAd,EAAApR,W,4GE/BL,mBAAsB,EAAA2d,gB,qGCEtB,mBAAsB,EAAAC,iB,idCFtB,WAEA,U,OAEA,2B,sDACwC,O,+BAA3BC,I,oCAAAA,EAAkB,QAAlBA,EAAkB,O,EAD/B,CACwC,sBAA3B,EAAAA,qB,8BAAAA,I,+DAAAA,EAAkB,E,KAD9B,EAAA3X,a,yHCJD,SAAY4X,GACR,qCACA,qBACA,iBACA,yBACA,iBACA,2BACA,yCACA,2BARJ,CAAY,EAAAA,wBAAA,EAAAA,sBAAqB,M,8HCAjC,WAKA,QAMA,U,GAEA,O,MAEA,2BASA,OAHI,YAAAC,QAAA,SAAQC,GACJ,OAAO,GAEf,EATA,GAAsB,EAAAC,aAWtB,8BAKI,KAAAC,QAAU,IAAI,EAAAC,aAAY,GAC1B,KAAA1jB,KAAkB,K,OAElB,YAAA+E,SAAA,WACIR,KAAKkf,QAAQE,SAASpf,KAAKqf,eAAeH,SAEV,MAA5Blf,KAAKqf,eAAe5jB,MACpBuE,KAAKsf,YAIb,YAAAA,SAAA,W,MACItf,KAAKvE,KAAK8jB,WAAmC,QAAzB,EAACvf,KAAKqf,eAAe5jB,YAAI,QAAI,KAGrD,YAAA+jB,iBAAA,WACI,OAAiB,MAAbxf,KAAKvE,KACEuE,KAAKvE,KAAK6C,MAGd,MAGX,YAAAmhB,aAAA,SAAaC,GACT,IAAMC,EAAU,IAAI,EAAAC,cAKpB,OAJAD,EAAQT,QAAUlf,KAAKkf,QAAQ5gB,MAC/BqhB,EAAQ1d,KAAOjC,KAAK6f,OAAO5d,KAC3B0d,EAAQlkB,KAAOuE,KAAKwf,mBAEb9E,QAAQC,QAAQgF,I,iCAjCTG,I,iCAAAA,EAAmB,2D,EADzC,GACsB,EAAAA,uB,+DAAAA,EAAmB,E,KADxC,EAAAjf,Y,MAEYwe,eAAgB,CAAF,C,KAAtB,EAAAre,QACQ6e,OAAQ,CAAF,C,KAAd,EAAA7e,W,sGC7BL,W,OAKA,2B,OAII,YAAArB,UAAA,SAAUogB,EAAcC,EAAoBC,EAAgBC,EAAgBC,GACxE,OAAa,MAATJ,GAAkC,IAAjBA,EAAM9jB,OAChB,GAGO,MAAd+jB,GAAsBA,EAAW/jB,OAAS,EACnC8jB,GAGXC,EAAaA,EAAWzT,OAAO5E,cACxBoY,EAAMxR,QAAO,SAAAxS,GAChB,OAAa,MAATkkB,GAA6B,MAAZlkB,EAAEkkB,IAAkBlkB,EAAEkkB,GAAOjW,WAAWrC,cAAc+E,QAAQsT,IAAe,IAGrF,MAATE,GAA6B,MAAZnkB,EAAEmkB,IAAkBnkB,EAAEmkB,GAAOlW,WAAWrC,cAAc+E,QAAQsT,IAAe,GAGrF,MAATG,GAA6B,MAAZpkB,EAAEokB,IAAkBpkB,EAAEokB,GAAOnW,WAAWrC,cAAc+E,QAAQsT,IAAe,Q,iCAlBjGI,I,2CAAAA,EAAU,U,EAHvB,GAGa,EAAAA,c,+DAAAA,EAAU,E,KAHtB,EAAAlgB,K,MAAK,CACFrC,KAAM,a,+GCNV,mBAAsB,EAAAwiB,e,iGCAtB,SAAYjM,GACR,mBACA,uBACA,yBAHJ,CAAY,EAAAA,YAAA,EAAAA,UAAS,M,mGCQrB,mBAAsB,EAAAkM,e,4+CCRtB,WAMA,SAKA,GAHA,KACA,KAEA,QAEA,S,sHCbga,4BAAkE,8CAAoH,mGAAoB,oFAAxI,iBAAoK,+CAAmD,sCAA0D,Y,mBAAwB,iBAAS,iC,iCAAtO,qEAAuC,oBAA8J,8E,mDAAwC,6BAA+D,+CAAiH,mGAAoB,oFAArI,iBAAiK,+CAAqD,sCAAsD,sBAAM,iBAAS,iC,iCAA7M,gEAAkC,qB,mDAAkL,6BAA+D,+CAAiH,mGAAoB,oFAArI,iBAAiK,+CAAqD,sCAAsD,Y,mBAA0B,iBAAS,iC,iCAAjO,gEAAkC,oBAA4J,gF,mDAAv8C,4BAA8D,4CAAgD,8CAA6G,kGAAoB,mFAAjI,iBAA6J,8CAAmD,qCAA2D,Y,oBAAuB,iBAAS,kCAAO,iDAA2X,gDAAiW,iDAAqX,kC,gCAAvzC,8DAAgC,oBAA+J,6EAAuF,gDAAsX,kDAAiW,mD,sBAAiV,6BAAwE,6CAAkB,6CAA+B,+CAAwC,Y,mBAAmB,iBAAS,yCAAqF,kCAAO,+CAAsD,0CAAwH,kCAAO,+CAA+B,iDAAwC,a,oBAAuB,iBAAS,0CAAqF,kCAAO,+CAA+B,+CAAqB,iDAAsC,a,oBAA0B,iBAAS,6C,oBAA4J,wCAA2D,kCAAK,kCAAO,0CAAkF,kCAAO,kCAAO,4C,MAAh7B,gEAAoX,sEAAsN,iFAAwJ,yF,mDAA8N,6BAA+E,qD,mBAAoE,Y,sCAAuF,iBAAe,6CAAkB,8CAA+B,iDAA4B,a,oBAA0B,iBAAS,iDAAkF,+GAAlF,iBAA+I,kCAAO,+CAA+B,iDAA4B,a,oBAA0B,iBAAS,iDAAkF,+GAAlF,iBAA+I,kCAAO,+CAA+B,iDAAiC,a,oBAA8B,iBAAS,iDAA4F,oHAA5F,iBAA6I,kCAAO,+CAA+B,iDAAiC,a,oBAA4B,iBAAS,kDAAiF,oHAAiD,kDAAiB,a,oBAAyB,iBAAU,kDAAwB,a,oBAAmC,iBAAU,kDAA2B,a,oBAAsC,iBAAU,kCAAU,kCAAO,kCAAO,2C,gCAAt0C,wFAAwC,0JAAmL,yEAAqH,6DAA+H,yEAAqH,6DAAoI,6EAAmI,kEAAwH,2EAAsH,kEAAkE,+EAA2D,kFAAwE,sF,sBAAwF,6BAA0E,6CAAmB,wCAAkD,+CAA0B,Y,mBAA8B,iBAAS,iCAAO,4C,MAA9C,4E,sBAA8D,6BAA0E,qDAA0B,Y,mBAAkC,iBAAe,2C,MAAjD,wFDer2I,IAAMC,EAAkB,UAAeA,gBACjCC,EAA6B,UAAeA,2BAC5CC,EAAiB,UAAeA,eAChCC,EAA4B,UAAeA,0BAEjD,aAkCI,WAAoB3E,EAAoD4E,GAAxE,WAAoB,KAAA5E,uBAAoD,KAAA4E,aA7B/D,KAAAC,aAAc,EACd,KAAAC,aAAc,EACd,KAAAC,OAAS,EAAAC,kBAAkBzC,KAC3B,KAAA0C,UAAW,EACX,KAAAC,YAAa,EACb,KAAAC,YAAa,EAEtB,KAAAC,KAAY,CACRC,eAAgB,KAChBC,eAAgB,KAChBC,oBAAqB,KACrBC,oBAAqB,GACrBC,SAAU,MACVC,QAAS,MAGb,KAAAC,kBAAoB,EAAAX,kBAGZ,KAAAY,WAAkB,KAElB,KAAAC,OAAc,KACd,KAAAC,eAAsB,KACtB,KAAAC,wBAA+B,KAC/B,KAAAC,wBAA+B,KAC/B,KAAAC,qBAA4B,KAKhChiB,KAAKiiB,aAAe9iB,OAAO8F,SAASW,cAAc,UAClD5F,KAAKiiB,aAAaC,IAAM,4BACxBliB,KAAKiiB,aAAaE,OAAQ,EAC1BniB,KAAKiiB,aAAaG,OAAS,WACvB,EAAKR,OAAUziB,OAAekjB,OAAO,oCACrC,EAAKR,eAAiB,EAAKD,OAAOU,WAClC,EAAKC,oBAETviB,KAAKwiB,SAAWrjB,OAAO8F,SAASW,cAAc,UAC9C5F,KAAKwiB,SAASN,IAAM,iCACpBliB,KAAKwiB,SAASL,OAAQ,EACtBniB,KAAKyiB,mBAAqB,CACtBC,KAAM,CACFC,MAAO,KACPC,WAAY,wHAEZC,SAAU,OACVC,cAAe,cACf,gBAAiB,CACbH,MAAO,OAGfI,QAAS,CACLJ,MAAO,OAIf3iB,KAAKgjB,qBAAuB,CACxB9L,MAAO,aACP+L,MAAO,WACPF,QAAS,c,OAIX,YAAAviB,SAAN,W,0FAMI,OALKR,KAAK6gB,cACN7gB,KAAKihB,WAAajhB,KAAK8gB,SAAW,EAAAC,kBAAkBmC,OACpDljB,KAAKghB,SAAWhhB,KAAK8gB,SAAW,EAAAC,kBAAkBoC,YAClDnjB,KAAKkhB,WAAalhB,KAAK8gB,SAAW,EAAAC,kBAAkBqC,QAExD,GAAMpjB,KAAKqjB,Y,cAAX,SACAlkB,OAAO8F,SAASqe,KAAKne,YAAYnF,KAAKiiB,cACjCjiB,KAAKihB,YACN9hB,OAAO8F,SAASqe,KAAKne,YAAYnF,KAAKwiB,U,YAI9C,YAAAe,YAAA,WACIpkB,OAAO8F,SAASqe,KAAK3c,YAAY3G,KAAKiiB,cACtC9iB,OAAOqkB,YAAW,WACdrd,MAAMC,KAAKjH,OAAO8F,SAASoB,iBAAiB,WAAWgH,SAAQ,SAAAhN,GAC3D,GAAc,MAAVA,EAAG6hB,KAAe7hB,EAAG6hB,IAAIxV,QAAQ,WAAa,EAC9C,IACIvN,OAAO8F,SAASC,KAAKyB,YAAYtG,GACnC,gBAGX,KACEL,KAAKihB,aACN9hB,OAAO8F,SAASqe,KAAK3c,YAAY3G,KAAKwiB,UACtCrjB,OAAOqkB,YAAW,WACdrd,MAAMC,KAAKjH,OAAO8F,SAASqe,KAAKjd,iBAAiB,WAAWgH,SAAQ,SAAAhN,GAChE,GAAc,MAAVA,EAAG6hB,KAAe7hB,EAAG6hB,IAAIxV,QAAQ,WAAa,EAC9C,IACIvN,OAAO8F,SAASqe,KAAK3c,YAAYtG,GACnC,cAGV,IAAMojB,EAAetkB,OAAO8F,SAASqe,KAAKtd,cAAc,gCACxD,GAAoB,MAAhByd,EACA,IACItkB,OAAO8F,SAASqe,KAAK3c,YAAY8c,GACnC,aAEP,OAIX,YAAAC,aAAA,sBACI1jB,KAAK2hB,WAAa,KAEd3hB,KAAK8gB,SAAW,EAAAC,kBAAkBmC,OAClC/jB,OAAOqkB,YAAW,WACbrkB,OAAewkB,UAAUC,OAAOjlB,OAAO,CACpCklB,cAAe,uCACfC,UAAW,uBACXC,sBAAuB,CAAC,UACxBC,OAAQ,CACJC,KAAM,QACNC,YAAa,CACTC,MAAO,MACPC,KAAM,SACNC,MAAO,OACP1B,MAAO,OACP2B,QAAS,YAGlB,SAACC,EAAgB1gB,GACC,MAAb0gB,EAKJ,EAAK5C,WAAa9d,EAHd2gB,QAAQ3iB,MAAM0iB,QAKvB,KAEHvkB,KAAKuiB,oBAIb,YAAAkC,mBAAA,sBACI,OAAO,IAAI/J,SAAQ,SAACC,EAAS+J,GACrB,EAAK5D,SAAW,EAAAC,kBAAkBqC,OAClCzI,EAAQ,CAAC,KAAM,EAAKmG,SACb,EAAKA,SAAW,EAAAC,kBAAkBmC,OACzC,EAAKvB,WAAWgD,uBAAuBrjB,MAAK,SAACsjB,GACzCjK,EAAQ,CAACiK,EAAQC,MAAO,EAAK/D,YAC9BgE,OAAM,SAACC,GACNL,EAAOK,EAAI7T,YAER,EAAK4P,SAAW,EAAAC,kBAAkBzC,MAAQ,EAAKwC,SAAW,EAAAC,kBAAkBoC,cAC/E,EAAKrC,SAAW,EAAAC,kBAAkBzC,KAClC,EAAKqC,WAAWqE,mBAAmB1jB,MAAK,SAAA2jB,GACpC,SAAKrD,OAAOsD,gBAAgBD,EAAc,EAAKnD,4BAC9CxgB,MAAK,SAACxE,GACCA,EAAO+E,MACP6iB,EAAO5nB,EAAO+E,MAAMqP,SACbpU,EAAOqoB,aAA6C,cAA9BroB,EAAOqoB,YAAYC,OAChDzK,EAAQ,CAAC7d,EAAOqoB,YAAYE,eAAgB,EAAKvE,SAEjD4D,OAIZ,EAAK9C,OAAO0D,YAAY,eAAgB,EAAKnE,MAAM7f,MAAK,SAACxE,GACjDA,EAAO+E,MACP6iB,EAAO5nB,EAAO+E,MAAMqP,SACbpU,EAAOyoB,OAA4B,MAAnBzoB,EAAOyoB,MAAM3lB,GACpC+a,EAAQ,CAAC7d,EAAOyoB,MAAM3lB,GAAI,EAAKkhB,SAE/B4D,YAQxB,YAAAc,wBAAA,SAAwBP,EAAsBQ,GAA9C,WACI,OAAO,IAAI/K,SAAc,SAACC,EAAS+J,GAC/B,IAAI,EAAK9D,aAA+C,MAAhC,EAAKkB,wBAA7B,CAOA,OAHgC,EAAKlB,YACjC,EAAKgB,OAAOsD,gBAAgBD,EAAc,EAAKnD,yBAC/C,EAAKF,OAAOsD,gBAAgBD,IACL3jB,MAAK,SAAOxE,GAAW,qC,yDAC1CA,EAAO+E,OACP6iB,EAAO5nB,EAAO+E,MAAMqP,S,OADpB,M,cAEOpU,EAAO4oB,eAAiD,cAAhC5oB,EAAO4oB,cAAcN,OAC7B,MAAnBK,EAAA,MACA,GAAMA,KAFH,M,OAEH,S,wBAEJ9K,I,aAEA+J,I,qCAfJA,QAqBJ,YAAAnC,iBAAR,sBACIpjB,OAAOqkB,YAAW,WACV,EAAK5C,aAAe,EAAKE,SAAW,EAAAC,kBAAkBzC,OAClB,MAAhC,EAAKwD,0BACL,EAAKA,wBAA0B,EAAKD,eAAeljB,OAAO,aAAc,CACpEmH,MAAO,EAAK2c,mBACZkD,QAAS,EAAK3C,qBACd4C,YAAa,MAGe,MAAhC,EAAK7D,0BACL,EAAKA,wBAA0B,EAAKF,eAAeljB,OAAO,aAAc,CACpEmH,MAAO,EAAK2c,mBACZkD,QAAS,EAAK3C,wBAGW,MAA7B,EAAKhB,uBACL,EAAKA,qBAAuB,EAAKH,eAAeljB,OAAO,UAAW,CAC9DmH,MAAO,EAAK2c,mBACZkD,QAAS,EAAK3C,qBACd4C,YAAa,MAGrB,EAAK9D,wBAAwB+D,MAAM,+BACnC,EAAK9D,wBAAwB8D,MAAM,+BACnC,EAAK7D,qBAAqB6D,MAAM,+BAErC,KAGO,YAAAxC,SAAd,W,0FACkB,SAAMrjB,KAAK+b,qBAAqB+J,qB,cAAhC,WACA,EAAAC,UAAUC,MACpBhmB,KAAKyiB,mBAAmBC,KAAKC,MAAQlC,EACrCzgB,KAAKyiB,mBAAmBC,KAAK,iBAAiBC,MAAQjC,EACtD1gB,KAAKyiB,mBAAmBM,QAAQJ,MAAQlC,IAExCzgB,KAAKyiB,mBAAmBC,KAAKC,MAAQpC,EACrCvgB,KAAKyiB,mBAAmBC,KAAK,iBAAiBC,MAAQnC,EACtDxgB,KAAKyiB,mBAAmBM,QAAQJ,MAAQpC,G,6CAnPvC0F,GAAgB,gF,iCAAhBA,EAAgB,w2FCxB7B,+BAAw/C,yDAAimC,yDAAi8C,wDAAuO,uDAAqK,iB,MAA34I,kDAA4+C,uFAAimC,8FAAi8C,yFAAuO,2F,+SDoBhxI,GAIa,EAAAA,oB,+DAAAA,EAAgB,E,KAJ5B,EAAAtjB,U,MAAU,CACP7B,SAAU,cACV8B,YAAa,8B,wEAGJge,YAAW,E,KAAnB,EAAA5f,QACQ6f,YAAW,E,KAAnB,EAAA7f,QACQ8f,OAAM,E,KAAd,EAAA9f,QACQggB,SAAQ,E,KAAhB,EAAAhgB,QACQigB,WAAU,E,KAAlB,EAAAjgB,QACQkgB,WAAU,E,KAAlB,EAAAlgB,W,kGE9BL,aACA,QAKA,QAEA,SACA,SAEA,SAGA,aAwBI,WAAYrD,G,MAvBZ,KAAAiC,GAAa,KACb,KAAA+P,eAAyB,KACzB,KAAAuW,SAAmB,KACnB,KAAAroB,KAAe,KACf,KAAA+V,MAAgB,KAChB,KAAA3R,KAAmB,KACnB,KAAA0R,UAAW,EACX,KAAAwS,qBAAsB,EACtB,KAAAC,MAAO,EACP,KAAAC,cAAe,EAEf,KAAAvS,MAAQ,IAAI,EAAAC,UACZ,KAAAuS,SAAW,IAAI,EAAAC,aACf,KAAA/T,KAAO,IAAI,EAAAoJ,SACX,KAAAxG,WAAa,IAAI,EAAAC,eACjB,KAAAmR,YAAgC,KAChC,KAAA3S,OAAsB,KACtB,KAAA4S,gBAAyC,KACzC,KAAAC,cAA0B,KAC1B,KAAAC,aAAqB,KACrB,KAAAC,YAAoB,KACpB,KAAAC,SAA+B,EAAAC,mBAAmBC,KAGzCppB,IAILqC,KAAKJ,GAAKjC,EAAEiC,GACZI,KAAK2P,eAAiBhS,EAAEgS,eACxB3P,KAAKkmB,SAAWvoB,EAAEuoB,SAClBlmB,KAAK2T,SAAWhW,EAAEgW,SAClB3T,KAAKmmB,oBAAsBxoB,EAAEwoB,oBAC7BnmB,KAAKomB,KAAOzoB,EAAEyoB,KACdpmB,KAAKqmB,aAAe1oB,EAAE0oB,aACtBrmB,KAAKiC,KAAOtE,EAAEsE,KACdjC,KAAKgnB,UAAYrpB,EAAEqpB,UACnBhnB,KAAK0mB,cAAgB/oB,EAAE+oB,cACvB1mB,KAAK2mB,aAAehpB,EAAEgpB,aACtB3mB,KAAK4mB,YAAcjpB,EAAEipB,YAErB5mB,KAAK6mB,SAAqB,QAAb,EAAGlpB,EAAEkpB,gBAAQ,QAAI,EAAAC,mBAAmBC,MAuDzD,OApDI,sBAAI,uBAAQ,C,IAAZ,WACI,OAAQ/mB,KAAKiC,MACT,KAAK,EAAA+R,WAAWC,MACZ,OAAOjU,KAAK8T,MAAMmT,SACtB,KAAK,EAAAjT,WAAWmB,WACZ,OAAOnV,KAAKoV,WAAW6R,SAC3B,KAAK,EAAAjT,WAAWsK,KACZ,OAAOte,KAAKwS,KAAKyU,SACrB,KAAK,EAAAjT,WAAWuK,SACZ,OAAOve,KAAKsmB,SAASW,SAK7B,OAAO,M,gCAGX,sBAAI,iCAAkB,C,IAAtB,WACI,OAAOjnB,KAAKymB,iBAAmBzmB,KAAKymB,gBAAgBxqB,OAAS,G,gCAGjE,sBAAI,6BAAc,C,IAAlB,WACI,OAAO+D,KAAKwmB,aAAexmB,KAAKwmB,YAAYvqB,OAAS,G,gCAGzD,sBAAI,gCAAiB,C,IAArB,WACI,GAAI+D,KAAKknB,eACL,IAAK,IAAInrB,EAAI,EAAGA,EAAIiE,KAAKwmB,YAAYvqB,OAAQF,IACzC,GAA+B,MAA3BiE,KAAKwmB,YAAYzqB,GAAG6C,IACpB,OAAO,EAInB,OAAO,G,gCAGX,sBAAI,wBAAS,C,IAAb,WACI,OAAOoB,KAAK6T,QAAU7T,KAAK6T,OAAO5X,OAAS,G,gCAG/C,sBAAI,0CAA2B,C,IAA/B,WACI,OAAI+D,KAAKiC,OAAS,EAAA+R,WAAWC,OAAuB,MAAdjU,KAAK8T,OAET,MAAvB9T,KAAK8T,MAAMmB,UAA4C,KAAxBjV,KAAK8T,MAAMmB,SAD1C,KAIJjV,KAAK8T,MAAMqT,sB,gCAGtB,sBAAI,wBAAS,C,IAAb,WACI,OAA2B,MAApBnnB,KAAK4mB,a,gCAEpB,EAjGA,GAAa,EAAAlT,c,oGCVb,YAEA,aAwBI,WAAY3X,GAvBZ,KAAAwE,MAAgB,KAChB,KAAA6mB,WAAqB,KACrB,KAAAC,SAAmB,KACnB,KAAAC,SAAmB,KACnB,KAAAC,SAAmB,KACnB,KAAAC,KAAe,KACf,KAAAC,MAAgB,KAChB,KAAAC,WAAqB,KACrB,KAAAjG,QAAkB,KAClB,KAAAkG,QAAkB,KAClB,KAAArQ,MAAgB,KAChB,KAAAsQ,MAAgB,KAChB,KAAAC,IAAc,KACd,KAAA7S,SAAmB,KACnB,KAAA8S,eAAyB,KACzB,KAAAC,cAAwB,KAGhB,KAAAC,WAAqB,KACrB,KAAAC,UAAoB,KACpB,KAAA5M,UAAoB,KA4FhC,OArFI,sBAAI,wBAAS,C,IAAb,WACI,OAAOrb,KAAKgoB,Y,IAEhB,SAAc1pB,GACV0B,KAAKgoB,WAAa1pB,EAClB0B,KAAKqb,UAAY,M,gCAGrB,sBAAI,uBAAQ,C,IAAZ,WACI,OAAOrb,KAAKioB,W,IAEhB,SAAa3pB,GACT0B,KAAKioB,UAAY3pB,EACjB0B,KAAKqb,UAAY,M,gCAGrB,sBAAI,uBAAQ,C,IAAZ,WAcI,OAbsB,MAAlBrb,KAAKqb,WAAwC,MAAlBrb,KAAKkoB,WAAsC,MAAjBloB,KAAKmoB,WAC1DnoB,KAAKqb,UAAY,GACK,MAAlBrb,KAAKkoB,YACLloB,KAAKqb,UAAYrb,KAAKkoB,WAEL,MAAjBloB,KAAKmoB,WACkB,KAAnBnoB,KAAKqb,YACLrb,KAAKqb,WAAa,KAEtBrb,KAAKqb,WAAarb,KAAKmoB,WAIxBnoB,KAAKqb,W,gCAGhB,sBAAI,uBAAQ,C,IAAZ,WACI,GAAkB,MAAdrb,KAAKO,OAAmC,MAAlBP,KAAKkoB,WAAwC,MAAnBloB,KAAKonB,YAAuC,MAAjBpnB,KAAKmoB,SAAkB,CAClG,IAAI,EAAO,GAaX,OAZkB,MAAdnoB,KAAKO,QACL,GAASP,KAAKO,MAAQ,KAEJ,MAAlBP,KAAKkoB,YACL,GAASloB,KAAKkoB,UAAY,KAEP,MAAnBloB,KAAKonB,aACL,GAASpnB,KAAKonB,WAAa,KAEV,MAAjBpnB,KAAKmoB,WACL,GAAQnoB,KAAKmoB,UAEV,EAAK5b,OAGhB,OAAO,M,gCAGX,sBAAI,0BAAW,C,IAAf,WACI,IAAI6b,EAAUpoB,KAAKqnB,SAanB,OAZK,EAAArf,MAAM+F,mBAAmB/N,KAAKsnB,YAC1B,EAAAtf,MAAM+F,mBAAmBqa,KAC1BA,GAAW,MAEfA,GAAWpoB,KAAKsnB,UAEf,EAAAtf,MAAM+F,mBAAmB/N,KAAKunB,YAC1B,EAAAvf,MAAM+F,mBAAmBqa,KAC1BA,GAAW,MAEfA,GAAWpoB,KAAKunB,UAEba,G,gCAGX,sBAAI,+BAAgB,C,IAApB,WACI,GAAiB,MAAbpoB,KAAKwnB,MAA8B,MAAdxnB,KAAKynB,OAAoC,MAAnBznB,KAAK0nB,WAChD,OAAO,KAEX,IAAMF,EAAOxnB,KAAKwnB,MAAQ,IACpBC,EAAQznB,KAAKynB,MACbC,EAAa1nB,KAAK0nB,YAAc,IAClCW,EAAeb,EAKnB,OAJK,EAAAxf,MAAM+F,mBAAmB0Z,KAC1BY,GAAgB,KAAOZ,GAE3BY,GAAgB,KAAOX,G,gCAG/B,EAjHA,GAAa,EAAAnB,gB,kGCDb,MAKI,SAAYvT,GAJZ,KAAApT,GAAa,KACb,KAAA/B,KAAe,KACf,KAAA8oB,aAAqB,KAGZ3T,IAILhT,KAAKJ,GAAKoT,EAAEpT,GACZI,KAAK2mB,aAAe3T,EAAE2T,eAXjB,EAAA9R,c,u/CCLb,WAOA,GAFA,KACA,KACA,QACA,S,8FCRy/U,4BAAuE,8CAAoC,gDAAoG,gHAApG,iBAAwI,gDAA0D,Y,mBAAuB,iBAAS,iCAAO,kC,gCAArI,8DAA8F,qE,mDAAqD,4BAAiE,4CAAoB,4CAAyB,gDAAmB,Y,mBAAwB,iBAAS,iDAAgE,yGAAhE,iBAA6F,kCAAO,kCAAO,kC,gCAA5I,qEAAiG,wD,mDAAkD,4BAAiE,4CAAoB,4CAAyB,gDAA0B,Y,mBAAqB,iBAAS,iDAA8E,yGAA9E,iBAAwI,kCAAO,kCAAO,8CAAoB,8CAAyB,kDAA0B,a,oBAAqB,iBAAS,kDAA8E,yGAA9E,iBAAwI,kCAAO,kCAAO,8CAAoB,8CAAyB,kDAAyB,a,oBAAqB,iBAAS,kDAA4E,wGAA5E,iBAAsI,kCAAO,kCAAO,8CAAoB,8CAAyB,kDAA0B,a,oBAA0B,iBAAS,kDAA8E,yGAA9E,iBAAyI,kCAAO,kCAAO,kC,gCAAx6B,kEAA4G,uDAA+I,oEAA4G,uDAA8I,oEAA0G,sDAA+I,yEAAiH,wDDWtlY,iBAiCI,WAAoB8L,EAAgC2H,GAAhC,KAAA3H,aAAgC,KAAA2H,QA5B1C,KAAAC,iBAAmB,IAAI,EAAAC,aAEjC,KAAAjnB,SAAmB,EAEnB,KAAAknB,QAAe,CACXC,MAAO,KACPC,MAAO,KACPC,MAAO,KACPpB,KAAM,KACNC,MAAO,KACPC,WAAY,KACZjG,QAAS,KACToH,cAAc,GAKV,KAAAC,SAAgB,CACpBJ,MAAO,KACPC,MAAO,KACPC,MAAO,KACPpB,KAAM,KACNC,MAAO,KACPC,WAAY,KACZjG,QAAS,KACToH,cAAc,G,OAKZ,YAAAroB,SAAN,W,uGAqCqB,OApCjBR,KAAKsoB,MAAMS,OAAOA,OAAOC,OAAO3jB,WAAU,SAAM2jB,GAAM,qC,2DAClDhpB,KAAK2P,eAAiBqZ,EAAOrZ,gBACzB3P,KAAK2P,eAAL,Y,iBAEoB,O,sBAAA,GAAM3P,KAAK2gB,WAAWsI,uBAAuBjpB,KAAK2P,iB,cAA5D8Y,EAAU,YAEZzoB,KAAKyoB,QAAQC,MAAQD,EAAQC,MAC7B1oB,KAAKyoB,QAAQhB,MAAQgB,EAAQhB,MAC7BznB,KAAKyoB,QAAQE,MAAQF,EAAQE,MAC7B3oB,KAAKyoB,QAAQG,MAAQH,EAAQG,MAC7B5oB,KAAKyoB,QAAQjB,KAAOiB,EAAQjB,KAC5BxnB,KAAKyoB,QAAQhB,MAAQgB,EAAQhB,MAC7BznB,KAAKyoB,QAAQf,WAAae,EAAQf,WAClC1nB,KAAKyoB,QAAQhH,QAAUgH,EAAQhH,SAAW,KAC1CzhB,KAAKyoB,QAAQI,eAAwC,OAAzB7oB,KAAKyoB,QAAQhH,UACnCgH,EAAQC,QACLD,EAAQE,QACRF,EAAQG,QACRH,EAAQjB,OACRiB,EAAQhB,Q,6DAIT,SAAMznB,KAAK2gB,WAAWuI,c,QAAhCT,EAAU,YAEZzoB,KAAKyoB,QAAQf,WAAae,EAAQf,WAClC1nB,KAAKyoB,QAAQhH,QAAUgH,EAAQhH,SAAW,M,wBAGlDzhB,KAAK8oB,SAAW5sB,OAAO+R,OAAO,GAAIjO,KAAKyoB,SAEV,OAAzBzoB,KAAKyoB,QAAQhH,SACbzhB,KAAKuoB,iBAAiBY,O,cAIb,GAAMnpB,KAAK2gB,WAAWyI,e,cAAjCC,EAAW,SACjBrpB,KAAKqpB,SAAWA,EAAS5tB,KACzBuE,KAAKuB,SAAU,E,YAGnB,sBAAI,sBAAO,C,IAAX,e,EAAA,OACI,GAAqB,MAAjBvB,KAAKqpB,SAAkB,CACvB,IAAMC,EAAetpB,KAAKqpB,SAASE,MAAK,SAAAve,GACpC,OAAAA,EAAEyW,UAAY,EAAKgH,QAAQhH,SAC3BzW,EAAE0c,aAAe,EAAKe,QAAQf,cAElC,OAAyB,QAAzB,EAAO4B,aAAY,EAAZA,EAAcE,YAAI,QAAI,O,gCAIrC,YAAAC,kBAAA,WAEQ,IAWM9J,EAZV,OAAI3f,KAAK2P,iBACCgQ,EAAU,IAAI,EAAA+J,kCACZhB,MAAQ1oB,KAAKyoB,QAAQC,MAC7B/I,EAAQ8H,MAAQznB,KAAKyoB,QAAQhB,MAC7B9H,EAAQgJ,MAAQ3oB,KAAKyoB,QAAQE,MAC7BhJ,EAAQiJ,MAAQ5oB,KAAKyoB,QAAQG,MAC7BjJ,EAAQ6H,KAAOxnB,KAAKyoB,QAAQjB,KAC5B7H,EAAQ8H,MAAQznB,KAAKyoB,QAAQhB,MAC7B9H,EAAQ+H,WAAa1nB,KAAKyoB,QAAQf,WAClC/H,EAAQ8B,QAAUzhB,KAAKyoB,QAAQhH,QACxB9B,KAEDA,EAAU,IAAI,EAAAgK,sBACZjC,WAAa1nB,KAAKyoB,QAAQf,WAClC/H,EAAQ8B,QAAUzhB,KAAKyoB,QAAQhH,QACxB9B,IAIf,YAAAiK,cAAA,WACI,IAAK5pB,KAAK6pB,aACN,OAAO,IAAInP,SAAc,SAAAC,GAAaA,OAE1C,IAAMgF,EAAU3f,KAAKypB,oBACrB,OAAOzpB,KAAK2P,eAAiB3P,KAAK2gB,WAAWmJ,uBAAuB9pB,KAAK2P,eACrEgQ,GAA+C3f,KAAK2gB,WAAWoJ,WAAWpK,IAGlF,YAAAqK,cAAA,WACiC,OAAzBhqB,KAAKyoB,QAAQhH,UACbzhB,KAAKyoB,QAAQI,cAAe,EAC5B7oB,KAAKyoB,QAAQC,MAAQ,KACrB1oB,KAAKyoB,QAAQE,MAAQ,KACrB3oB,KAAKyoB,QAAQG,MAAQ,KACrB5oB,KAAKyoB,QAAQjB,KAAO,KACpBxnB,KAAKyoB,QAAQhB,MAAQ,MAEzBznB,KAAKuoB,iBAAiBY,QAGlB,YAAAU,WAAR,WACI,IAAK,IAAMjrB,KAAOoB,KAAKyoB,QACnB,GAAIzoB,KAAK8oB,SAAS1sB,eAAewC,IAAQoB,KAAK8oB,SAASlqB,KAASoB,KAAKyoB,QAAQ7pB,GACzE,OAAO,EAGf,OAAO,G,iCAlIFqrB,GAAgB,0E,iCAAhBA,EAAgB,yrKCf7B,4BAAkB,4CAAoB,4CAAyB,8CAA4B,Y,mBAAoB,iBAAS,gDAAiD,wEAA6B,4BAAiE,EAAAD,mBAAkB,iDAAiB,4BAAY,iBAAU,iDAAmB,6BAAa,iBAAU,iDAAmB,qBAAK,iBAAU,iDAAmB,sBAAM,iBAAU,iDAAmB,uBAAO,iBAAU,kDAAmB,sBAAM,iBAAU,kDAAmB,8BAAc,iBAAU,kDAAmB,yBAAS,iBAAU,kDAAmB,qBAAK,iBAAU,6CAAgD,kDAAmB,2BAAW,iBAAU,kDAAmB,6BAAa,iBAAU,kDAAmB,uBAAO,iBAAU,kDAAmB,uBAAO,iBAAU,kDAAmB,8BAAc,iBAAU,kDAAmB,uBAAO,iBAAU,kDAAmB,sBAAM,iBAAU,kDAAmB,wBAAQ,iBAAU,kDAAmB,0BAAU,iBAAU,kDAAmB,mCAAmB,iBAAU,kDAAmB,yBAAS,iBAAU,kDAAmB,uBAAO,iBAAU,kDAAmB,qBAAK,iBAAU,kDAAmB,uBAAO,iBAAU,kDAAmB,0BAAU,iBAAU,kDAAmB,uBAAO,iBAAU,kDAAmB,uBAAO,iBAAU,kDAAmB,0BAAU,iBAAU,kDAAmB,wBAAQ,iBAAU,kDAAmB,uBAAO,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,uBAAM,iBAAU,oDAAmB,sBAAK,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,uBAAM,iBAAU,oDAAmB,gDAA+B,iBAAU,oDAAmB,iDAAgC,iBAAU,oDAAmB,uCAAsB,iBAAU,oDAAmB,yBAAQ,iBAAU,oDAAmB,8BAAa,iBAAU,oDAAmB,uBAAM,iBAAU,oDAAmB,+CAA8B,iBAAU,oDAAmB,kCAAiB,iBAAU,oDAAmB,yBAAQ,iBAAU,oDAAmB,6BAAY,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,yBAAQ,iBAAU,oDAAmB,yBAAQ,iBAAU,oDAAmB,2BAAU,iBAAU,oDAAmB,+BAAc,iBAAU,oDAAmB,yCAAwB,iBAAU,oDAAmB,qBAAI,iBAAU,oDAAmB,sBAAK,iBAAU,oDAAmB,iCAAgB,iBAAU,oDAAmB,wCAAuB,iBAAU,oDAAmB,yBAAQ,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,sBAAK,iBAAU,oDAAmB,sDAAqC,iBAAU,oDAAmB,6BAAY,iBAAU,oDAAmB,2BAAU,iBAAU,oDAAmB,8BAAa,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,qBAAI,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,uBAAM,iBAAU,oDAAmB,+BAAc,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,yBAAQ,iBAAU,oDAAmB,yBAAQ,iBAAU,oDAAmB,mCAAkB,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,sBAAK,iBAAU,oDAAmB,4BAAW,iBAAU,oDAAmB,kCAAiB,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,yBAAQ,iBAAU,oDAAmB,4CAA2B,iBAAU,oDAAmB,8BAAa,iBAAU,oDAAmB,qBAAI,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,8BAAa,iBAAU,oDAAmB,iCAAgB,iBAAU,oDAAmB,4CAA2B,iBAAU,oDAAmB,sBAAK,iBAAU,oDAAmB,uBAAM,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,sBAAK,iBAAU,oDAAmB,0BAAS,iBAAU,oDAAmB,uBAAM,iBAAU,oDAAmB,0BAAS,iBAAU,oDAAmB,wBAAO,iBAAU,oDAAmB,2BAAU,iBAAU,oDAAmB,qBAAI,iBAAU,qDAAmB,0BAAS,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,8BAAa,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,kDAAiC,iBAAU,qDAAmB,8CAA6B,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,0BAAS,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,0BAAS,iBAAU,qDAAmB,0CAAyB,iBAAU,qDAAmB,qBAAI,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,4BAAW,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,uDAAsC,iBAAU,qDAAmB,mCAAkB,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,iDAAgC,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,8BAAa,iBAAU,qDAAmB,0BAAS,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,2DAA0C,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,qBAAI,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,iCAAgB,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,0BAAS,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,gDAA+B,iBAAU,qDAAmB,qCAAoB,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,4BAAW,iBAAU,qDAAmB,8BAAa,iBAAU,qDAAmB,4BAAW,iBAAU,qDAAmB,0BAAS,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,qBAAI,iBAAU,qDAAmB,+BAAc,iBAAU,qDAAmB,yCAAwB,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,qBAAI,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,gDAA+B,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,iCAAgB,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,qBAAI,iBAAU,qDAAmB,4BAAW,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,4BAAW,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,mCAAkB,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,iCAAgB,iBAAU,qDAAmB,6DAA4C,iBAAU,qDAAmB,sCAAqB,iBAAU,qDAAmB,4BAAW,iBAAU,qDAAmB,2CAA0B,iBAAU,qDAAmB,0CAAyB,iBAAU,qDAAmB,iDAAgC,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,sCAAqB,iBAAU,qDAAmB,6BAAY,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,6BAAY,iBAAU,qDAAmB,0BAAS,iBAAU,qDAAmB,0CAAyB,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,gCAAe,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,6BAAY,iBAAU,qDAAmB,6DAA4C,iBAAU,qDAAmB,4BAAW,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,0BAAS,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,uCAAsB,iBAAU,qDAAmB,0BAAS,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,4BAAW,iBAAU,qDAAmB,qCAAoB,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,6CAA4B,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,4BAAW,iBAAU,qDAAmB,qBAAI,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,oCAAmB,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,6BAAY,iBAAU,qDAAmB,yCAAwB,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,qCAAoB,iBAAU,qDAAmB,qDAAoC,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,2BAAU,iBAAU,qDAAmB,wBAAO,iBAAU,qDAAmB,kDAAiC,iBAAU,qDAAmB,yBAAQ,iBAAU,qDAAmB,wCAAuB,iBAAU,qDAAmB,qCAAoB,iBAAU,qDAAmB,kCAAiB,iBAAU,qDAAmB,+BAAc,iBAAU,qDAAmB,sBAAK,iBAAU,qDAAmB,uBAAM,iBAAU,qDAAmB,yBAAQ,iBAAU,mCAAU,mCAAO,mCAAO,kDAAoB,gDAAyB,oDAA+B,c,qBAA0B,iBAAS,oDAAwF,2EAAxF,iBAA2L,mCAAO,mCAAO,qDAA2V,mCAAO,qDAAoR,sDAAujC,kB,MAA3kY,iEAA8E,yDAAomU,4EAA2H,4DAAgC,qCAAqG,+EAAgW,6EAAoR,+E,iPDWjoW,GAIa,EAAAC,oB,+DAAAA,EAAgB,E,KAJ5B,EAAAtnB,U,MAAU,CACP7B,SAAU,eACV8B,YAAa,+B,kEAGH2lB,iBAAgB,E,KAAzB,EAAA2B,Y,8/CEhBL,WAKA,GAHA,KACA,MAEA,QACA,SACA,Q,sBAKA,aAEI,WAAoBxqB,EAAkCyqB,GAAlC,KAAAzqB,cAAkC,KAAAyqB,gB,OAEtD,YAAAC,sBAAA,WACI,IAAMxsB,EAAI,IAAIysB,KACRC,EAAM,IAAID,KAAKzsB,EAAE2sB,cAAe3sB,EAAE4sB,WAAY5sB,EAAE6sB,UAAW,GAAI,IACrE7sB,EAAE8sB,QAAQ9sB,EAAE6sB,UAAY,IACxB,IAAME,EAAQ,IAAIN,KAAKzsB,EAAE2sB,cAAe3sB,EAAE4sB,WAAY5sB,EAAE6sB,UAAW,EAAG,GACtE,MAAO,CAACzqB,KAAK4qB,sBAAsBD,GAAQ3qB,KAAK4qB,sBAAsBN,KAG1E,YAAAO,kBAAA,SAAkBC,EAAqBC,GACnC,IAAMJ,EAAc,IAAIN,KAAKS,GACvBR,EAAY,IAAID,KAAKU,EAAY,WACvC,GAAIrc,MAAMic,EAAMK,YAActc,MAAM4b,EAAIU,YAAcV,EAAMK,EACxD,MAAM,IAAIpjB,MAAM,uBAEpB,MAAO,CAACojB,EAAMM,cAAeX,EAAIW,gBAG/B,YAAAC,aAAN,SAAmBC,EAAmBxa,G,YAAA,IAAAA,MAAA,IAAcya,G,+FAEN,OADpCC,EAAUrrB,KAAKsrB,WAAWH,EAAGI,YACO,GAAMvrB,KAAKwrB,gBAAgBL,EAAIxa,I,OACzE,OADM,EAAoC,SAAlCO,EAAO,UAAEua,EAAoB,uBAC9B,CAAP,EAAO,CACHva,QAASA,EACTua,qBAAsBA,EACtBC,QAASL,EAAQ,GACjBM,QAASN,EAAQ,aAIX,YAAAG,gBAAd,SAA8BL,EAAmBxa,G,+GACzCib,EAAM,GACNC,EAAmB,GACfV,EAAGlpB,M,KAEF,EAAA6pB,UAAUC,cAAV,Y,KAGA,EAAAD,UAAUE,qBAAV,Y,KAGA,EAAAF,UAAUG,gBAAV,Y,KAGA,EAAAH,UAAUI,iBAAV,Y,KAGA,EAAAJ,UAAUK,kBAAV,Y,KAGA,EAAAL,UAAUM,iBAAV,Y,KAGA,EAAAN,UAAUO,oBAAV,Y,KAGA,EAAAP,UAAUQ,yBAAV,Y,KAGA,EAAAR,UAAUS,yBAAV,Y,KAIA,EAAAT,UAAUU,eAAV,a,KAIA,EAAAV,UAAUW,eAAV,a,KAIA,EAAAX,UAAUY,eAAV,a,KAIA,EAAAZ,UAAUa,mBAAV,a,KAIA,EAAAb,UAAUc,gBAAV,a,KAIA,EAAAd,UAAUe,yBAAV,a,KAIA,EAAAf,UAAUgB,yBAAV,a,KAIA,EAAAhB,UAAUiB,cAAV,a,KAIA,EAAAjB,UAAUkB,oBAAV,a,KAIA,EAAAlB,UAAUmB,oCAAV,a,KAIA,EAAAnB,UAAUoB,uCAAV,a,KAIA,EAAApB,UAAUqB,oCAAV,a,KAIA,EAAArB,UAAUsB,+BAAV,a,KAIA,EAAAtB,UAAUuB,4BAAV,a,KAIA,EAAAvB,UAAUwB,4BAAV,a,KAIA,EAAAxB,UAAUyB,wBAAV,a,KAIA,EAAAzB,UAAU0B,0BAAV,a,KAKA,EAAA1B,UAAU2B,mBAAV,a,KAIA,EAAA3B,UAAU4B,mBAAV,a,KAIA,EAAA5B,UAAU6B,mBAAV,a,KAKA,EAAA7B,UAAU8B,cAAV,a,KAIA,EAAA9B,UAAU+B,cAAV,a,KAIA,EAAA/B,UAAUgC,cAAV,a,KAKA,EAAAhC,UAAUiC,yBAAV,a,KAIA,EAAAjC,UAAUkC,2BAAV,a,KAIA,EAAAlC,UAAUmC,yBAAV,a,KAIA,EAAAnC,UAAUoC,yBAAV,a,KAIA,EAAApC,UAAUqC,+BAAV,a,KAIA,EAAArC,UAAUsC,6BAAV,a,KAIA,EAAAtC,UAAUuC,sCAAV,a,KAIA,EAAAvC,UAAUwC,wCAAV,a,KAIA,EAAAxC,UAAUyC,oCAAV,a,KAIA,EAAAzC,UAAU0C,8BAAV,a,KAKA,EAAA1C,UAAU2C,qBAAV,a,KAGA,EAAA3C,UAAU4C,yBAAV,a,KAQA,EAAA5C,UAAU6C,2BAAV,a,KAIA,EAAA7C,UAAU8C,eAAV,a,KAaA,EAAA9C,UAAU+C,qBAAV,a,KAIA,EAAA/C,UAAUgD,uBAAV,a,KAIA,EAAAhD,UAAUiD,qBAAV,a,KAIA,EAAAjD,UAAUkD,qBAAV,a,KAIA,EAAAlD,UAAUmD,6BAAV,a,KAIA,EAAAnD,UAAUoD,2BAAV,a,KAIA,EAAApD,UAAUqD,6BAAV,a,KAIA,EAAArD,UAAUsD,mCAAV,a,oBA1ND,OADAxD,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,YAC5C,O,OAGA,OADAqtB,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,mBAC5C,O,OAGA,OADAqtB,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,qBAC5C,O,OAGA,OADAqtB,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,eAC5C,O,OAGA,OADAqtB,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,gBAC5C,O,OAGA,OADAqtB,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,eAC5C,O,OAGA,OADAqtB,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,kBAC5C,O,OAGA,OADAqtB,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,iBAC5C,O,OAGA,OADAqtB,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,yBAC5C,O,QAKA,OAFAqtB,EAAM5rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKqvB,eAAelE,EAAIxa,IAClEkb,EAAmB7rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKsvB,WAAWnE,EAAGoE,WAC1E,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,eAAgByB,KAAKqvB,eAAelE,EAAIxa,IACjEkb,EAAmB7rB,KAAKN,YAAYnB,EAAE,eAAgByB,KAAKsvB,WAAWnE,EAAGoE,WACzE,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKqvB,eAAelE,EAAIxa,IAC7Ekb,EAAmB7rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKsvB,WAAWnE,EAAGoE,WACrF,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKqvB,eAAelE,EAAIxa,IAClEkb,EAAmB7rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKsvB,WAAWnE,EAAGoE,WAC1E,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,iBAAkByB,KAAKqvB,eAAelE,EAAIxa,IACnEkb,EAAmB7rB,KAAKN,YAAYnB,EAAE,iBAAkByB,KAAKqvB,eAAelE,EAAIxa,IAChF,O,QAIA,OAFAib,EAAM5rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKqvB,eAAelE,EAAIxa,IAC7Ekb,EAAmB7rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKsvB,WAAWnE,EAAGoE,WACrF,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKqvB,eAAelE,EAAIxa,IAC7Ekb,EAAmB7rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKsvB,WAAWnE,EAAGoE,WACrF,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,mBAAoByB,KAAKqvB,eAAelE,EAAIxa,IACrEkb,EAAmB7rB,KAAKN,YAAYnB,EAAE,mBAAoByB,KAAKsvB,WAAWnE,EAAGoE,WAC7E,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,eAAgByB,KAAKqvB,eAAelE,EAAIxa,IACjEkb,EAAmB7rB,KAAKN,YAAYnB,EAAE,eAAgByB,KAAKsvB,WAAWnE,EAAGoE,WACzE,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,uBAAwByB,KAAKqvB,eAAelE,EAAIxa,IACzEkb,EAAmB7rB,KAAKN,YAAYnB,EAAE,uBAAwByB,KAAKsvB,WAAWnE,EAAGoE,WACjF,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,0BAA2ByB,KAAKqvB,eAAelE,EAAIxa,IAC5Ekb,EAAmB7rB,KAAKN,YAAYnB,EAAE,0BAA2ByB,KAAKsvB,WAAWnE,EAAGoE,WACpF,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKqvB,eAAelE,EAAIxa,IAC7Ekb,EAAmB7rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKsvB,WAAWnE,EAAGoE,WACrF,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,0BAA2ByB,KAAKqvB,eAAelE,EAAIxa,IAC5Ekb,EAAmB7rB,KAAKN,YAAYnB,EAAE,0BAA2ByB,KAAKsvB,WAAWnE,EAAGoE,WACpF,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,uBAAwByB,KAAKqvB,eAAelE,EAAIxa,IACzEkb,EAAmB7rB,KAAKN,YAAYnB,EAAE,uBAAwByB,KAAKsvB,WAAWnE,EAAGoE,WACjF,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKqvB,eAAelE,EAAIxa,IAC7Ekb,EAAmB7rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKsvB,WAAWnE,EAAGoE,WACrF,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,mBAAoByB,KAAKqvB,eAAelE,EAAIxa,IACrEkb,EAAmB7rB,KAAKN,YAAYnB,EAAE,mBAAoByB,KAAKsvB,WAAWnE,EAAGoE,WAC7E,O,QAIA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKqvB,eAAelE,EAAIxa,IAC7Ekb,EAAmB7rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKsvB,WAAWnE,EAAGoE,WACrF,O,QAKA,OAFA3D,EAAM5rB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAKwvB,mBAAmBrE,IACxEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAKsvB,WAAWnE,EAAGsE,eAChF,O,QAIA,OAFA7D,EAAM5rB,KAAKN,YAAYnB,EAAE,qBAAsByB,KAAKwvB,mBAAmBrE,IACvEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,qBAAsByB,KAAKsvB,WAAWnE,EAAGsE,eAC/E,O,QAIA,OAFA7D,EAAM5rB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAKwvB,mBAAmBrE,IACxEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAKsvB,WAAWnE,EAAGsE,eAChF,O,QAKA,OAFA7D,EAAM5rB,KAAKN,YAAYnB,EAAE,iBAAkByB,KAAK0vB,cAAcvE,IAC9DU,EAAmB7rB,KAAKN,YAAYnB,EAAE,iBAAkByB,KAAKsvB,WAAWnE,EAAGwE,UAC3E,O,QAIA,OAFA/D,EAAM5rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAK0vB,cAAcvE,IAC7DU,EAAmB7rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKsvB,WAAWnE,EAAGwE,UAC1E,O,QAIA,OAFA/D,EAAM5rB,KAAKN,YAAYnB,EAAE,iBAAkByB,KAAK0vB,cAAcvE,IAC9DU,EAAmB7rB,KAAKN,YAAYnB,EAAE,iBAAkByB,KAAKsvB,WAAWnE,EAAGwE,UAC3E,O,QAKA,OAFA/D,EAAM5rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAK4vB,gBAAgBzE,IAC/DU,EAAmB7rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKsvB,WAAWnE,EAAG0E,qBAC1E,O,QAIA,OAFAjE,EAAM5rB,KAAKN,YAAYnB,EAAE,kBAAmByB,KAAK4vB,gBAAgBzE,IACjEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,kBAAmByB,KAAKsvB,WAAWnE,EAAG0E,qBAC5E,O,QAIA,OAFAjE,EAAM5rB,KAAKN,YAAYnB,EAAE,eAAgByB,KAAK4vB,gBAAgBzE,IAC9DU,EAAmB7rB,KAAKN,YAAYnB,EAAE,eAAgByB,KAAKsvB,WAAWnE,EAAG0E,qBACzE,O,QAIA,OAFAjE,EAAM5rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAK4vB,gBAAgBzE,IAC/DU,EAAmB7rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKsvB,WAAWnE,EAAG0E,qBAC1E,O,QAIA,OAFAjE,EAAM5rB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAK4vB,gBAAgBzE,IACrEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAKsvB,WAAWnE,EAAG0E,qBAChF,O,QAIA,OAFAjE,EAAM5rB,KAAKN,YAAYnB,EAAE,kBAAmByB,KAAK4vB,gBAAgBzE,IACjEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,kBAAmByB,KAAKsvB,WAAWnE,EAAG0E,qBAC5E,O,QAIA,OAFAjE,EAAM5rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAK4vB,gBAAgBzE,IAC1EU,EAAmB7rB,KAAKN,YAAYnB,EAAE,2BAA4ByB,KAAKsvB,WAAWnE,EAAG0E,qBACrF,O,QAIA,OAFAjE,EAAM5rB,KAAKN,YAAYnB,EAAE,6BAA8ByB,KAAK4vB,gBAAgBzE,IAC5EU,EAAmB7rB,KAAKN,YAAYnB,EAAE,6BAA8ByB,KAAKsvB,WAAWnE,EAAG0E,qBACvF,O,QAIA,OAFAjE,EAAM5rB,KAAKN,YAAYnB,EAAE,0BAA2ByB,KAAK4vB,gBAAgBzE,IACzEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,0BAA2ByB,KAAKsvB,WAAWnE,EAAG0E,qBACpF,O,QAIA,OAFAjE,EAAM5rB,KAAKN,YAAYnB,EAAE,oBAAqByB,KAAK4vB,gBAAgBzE,IACnEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,oBAAqByB,KAAKsvB,WAAWnE,EAAG0E,qBAC9E,O,QAIA,OADAjE,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,qBAC5C,O,QAGA,OADAqtB,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,2BAC5C,O,QAQA,OADAqtB,EAAMC,EAAmB7rB,KAAKN,YAAYnB,EAAE,2BAC5C,O,QAKiB,OAFjBqtB,EAAM5rB,KAAKN,YAAYnB,EAAE,mBAAoByB,KAAK8vB,eAAe3E,IAEhD,GAAMnrB,KAAKmqB,cAAc4F,U,QAQ1C,OARMC,EAAW,SACXnQ,EAASmQ,EAASzhB,QAAO,SAAAtP,GAAK,OAAAA,EAAEW,KAAOurB,EAAG8E,YAAU,GACtDpwB,EAAKG,KAAKsvB,WAAWnE,EAAG8E,UACd,MAAVpQ,IACAhgB,EAAK,EAAAgX,WAAWgJ,EAAO5d,OAG3B4pB,EAAmB7rB,KAAKN,YAAYnB,EAAE,mBAAoBsB,GAC1D,O,QAKA,OAFA+rB,EAAM5rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKkwB,qBAAqB/E,IACpEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKsvB,WAAWnE,EAAGgF,iBAC1E,O,QAIA,OAFAvE,EAAM5rB,KAAKN,YAAYnB,EAAE,kBAAmByB,KAAKkwB,qBAAqB/E,IACtEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,kBAAmByB,KAAKsvB,WAAWnE,EAAGgF,iBAC5E,O,QAIA,OAFAvE,EAAM5rB,KAAKN,YAAYnB,EAAE,eAAgByB,KAAKkwB,qBAAqB/E,IACnEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,eAAgByB,KAAKsvB,WAAWnE,EAAGgF,iBACzE,O,QAIA,OAFAvE,EAAM5rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKkwB,qBAAqB/E,IACpEU,EAAmB7rB,KAAKN,YAAYnB,EAAE,gBAAiByB,KAAKsvB,WAAWnE,EAAGgF,iBAC1E,O,QAIA,OAFAvE,EAAM5rB,KAAKN,YAAYnB,EAAE,wBAAyByB,KAAKowB,6BAA6BjF,IACpFU,EAAmB7rB,KAAKN,YAAYnB,EAAE,wBAAyByB,KAAKsvB,WAAWnE,EAAGkF,yBAClF,O,QAIA,OAFAzE,EAAM5rB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAKowB,6BAA6BjF,IAClFU,EAAmB7rB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAKsvB,WAAWnE,EAAGkF,yBAChF,O,QAIA,OAFAzE,EAAM5rB,KAAKN,YAAYnB,EAAE,wBAAyByB,KAAKowB,6BAA6BjF,IACpFU,EAAmB7rB,KAAKN,YAAYnB,EAAE,wBAAyByB,KAAKsvB,WAAWnE,EAAGkF,yBAClF,O,QAIA,OAFAzE,EAAM5rB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAKowB,6BAA6BjF,IAClFU,EAAmB7rB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAKsvB,WAAWnE,EAAGkF,yBAChF,O,QAEA,a,QAER,MAAO,CAAP,EAAO,CACHnf,QAAiB,KAAR0a,EAAa,KAAOA,EAC7BH,qBAA2C,KAArBI,EAA0B,KAAOA,YAIvD,YAAAP,WAAR,SAAmBC,GACf,OAAQA,GACJ,KAAK,EAAA+E,WAAWC,QACZ,MAAO,CAAC,aAAcvwB,KAAKN,YAAYnB,EAAE,UAAY,cACzD,KAAK,EAAA+xB,WAAWE,IACZ,MAAO,CAAC,WAAYxwB,KAAKN,YAAYnB,EAAE,UAAY,UACvD,KAAK,EAAA+xB,WAAWG,IACZ,MAAO,CAAC,aAAczwB,KAAKN,YAAYnB,EAAE,UAAY,cACzD,KAAK,EAAA+xB,WAAWI,gBACZ,MAAO,CAAC,YAAa1wB,KAAKN,YAAYnB,EAAE,aAAe,aAC3D,KAAK,EAAA+xB,WAAWK,iBACZ,MAAO,CAAC,aAAc3wB,KAAKN,YAAYnB,EAAE,aAAe,cAC5D,KAAK,EAAA+xB,WAAWM,eACZ,MAAO,CAAC,WAAY5wB,KAAKN,YAAYnB,EAAE,aAAe,YAC1D,KAAK,EAAA+xB,WAAWO,cACZ,MAAO,CAAC,UAAW7wB,KAAKN,YAAYnB,EAAE,aAAe,WACzD,KAAK,EAAA+xB,WAAWQ,iBACZ,MAAO,CAAC,kBAAmB9wB,KAAKN,YAAYnB,EAAE,aAAe,cACjE,KAAK,EAAA+xB,WAAWS,gBACZ,MAAO,CAAC,YAAa/wB,KAAKN,YAAYnB,EAAE,aAAe,aAC3D,KAAK,EAAA+xB,WAAWU,eACZ,MAAO,CAAC,aAAchxB,KAAKN,YAAYnB,EAAE,WAAa,cAC1D,KAAK,EAAA+xB,WAAWW,aACZ,MAAO,CAAC,WAAYjxB,KAAKN,YAAYnB,EAAE,WAAa,YACxD,KAAK,EAAA+xB,WAAWY,aACZ,MAAO,CAAC,WAAYlxB,KAAKN,YAAYnB,EAAE,WAAa,YACxD,KAAK,EAAA+xB,WAAWa,cACZ,MAAO,CAAC,WAAYnxB,KAAKN,YAAYnB,EAAE,YAAc,aACzD,KAAK,EAAA+xB,WAAWc,eACZ,MAAO,CAAC,WAAYpxB,KAAKN,YAAYnB,EAAE,YAAc,cACzD,KAAK,EAAA+xB,WAAWe,aACZ,MAAO,CAAC,WAAYrxB,KAAKN,YAAYnB,EAAE,YAAc,YACzD,KAAK,EAAA+xB,WAAWgB,cACZ,MAAO,CAAC,WAAYtxB,KAAKN,YAAYnB,EAAE,YAAc,aACzD,KAAK,EAAA+xB,WAAWiB,eACZ,MAAO,CAAC,WAAYvxB,KAAKN,YAAYnB,EAAE,YAAc,cACzD,KAAK,EAAA+xB,WAAWkB,YACZ,MAAO,CAAC,WAAYxxB,KAAKN,YAAYnB,EAAE,YAAc,WACzD,KAAK,EAAA+xB,WAAWmB,UACZ,MAAO,CAAC,WAAYzxB,KAAKN,YAAYnB,EAAE,YAAc,SACzD,KAAK,EAAA+xB,WAAWoB,eACZ,MAAO,CAAC,WAAY1xB,KAAKN,YAAYnB,EAAE,YAAc,MAAQyB,KAAKN,YAAYnB,EAAE,YACpF,QACI,MAAO,CAAC,WAAYyB,KAAKN,YAAYnB,EAAE,cAI3C,YAAA8wB,eAAR,SAAuBlE,EAAmBxa,GACtC,IAAMghB,EAAU3xB,KAAKsvB,WAAWnE,EAAGoE,UACnC,GAAyB,MAArBpE,EAAGxb,iBAA2BgB,EAAQihB,WACtC,MAAO,SAAWD,EAAU,UAEhC,IAAMjkB,EAAI1N,KAAK6xB,WAAWF,GAG1B,OAFAjkB,EAAE/M,aAAa,OAAQ,mBAAqBwqB,EAAGxb,eAAiB,iBAAmBgiB,EAC/E,eAAiBxG,EAAGoE,UACjB7hB,EAAEokB,WAGL,YAAApC,cAAR,SAAsBvE,GAClB,IAAMwG,EAAU3xB,KAAKsvB,WAAWnE,EAAGwE,SAC7BjiB,EAAI1N,KAAK6xB,WAAWF,GAE1B,OADAjkB,EAAE/M,aAAa,OAAQ,mBAAqBwqB,EAAGxb,eAAiB,yBAA2BgiB,GACpFjkB,EAAEokB,WAGL,YAAAtC,mBAAR,SAA2BrE,GACvB,IAAMwG,EAAU3xB,KAAKsvB,WAAWnE,EAAGsE,cAC7B/hB,EAAI1N,KAAK6xB,WAAWF,GAE1B,OADAjkB,EAAE/M,aAAa,OAAQ,mBAAqBwqB,EAAGxb,eAAiB,8BAAgCgiB,GACzFjkB,EAAEokB,WAGL,YAAAlC,gBAAR,SAAwBzE,GACpB,IAAMwG,EAAU3xB,KAAKsvB,WAAWnE,EAAG0E,oBAC7BniB,EAAI1N,KAAK6xB,WAAWF,GAG1B,OAFAjkB,EAAE/M,aAAa,OAAQ,mBAAqBwqB,EAAGxb,eAAiB,yBAA2BgiB,EACvF,eAAiBxG,EAAG0E,oBACjBniB,EAAEokB,WAGL,YAAA5B,qBAAR,SAA6B/E,GACzB,IAAMwG,EAAU3xB,KAAKsvB,WAAWnE,EAAGgF,gBAC7BziB,EAAI1N,KAAK6xB,WAAWF,GAG1B,OAFAjkB,EAAE/M,aAAa,OAAQ,eAAiBwqB,EAAG4G,WAAa,yBAA2BJ,EAC/E,eAAiBxG,EAAGgF,gBACjBziB,EAAEokB,WAGL,YAAA1B,6BAAR,SAAqCjF,GACjC,IAAMwG,EAAU3xB,KAAKsvB,WAAWnE,EAAGkF,wBAC7B3iB,EAAI1N,KAAK6xB,WAAWF,GAE1B,OADAjkB,EAAE/M,aAAa,OAAQ,eAAiBwqB,EAAG4G,WAAa,mBAAqBJ,GACtEjkB,EAAEokB,WAGL,YAAAhC,eAAR,SAAuB3E,GACnB,IAAMwG,EAAU3xB,KAAKsvB,WAAWnE,EAAG8E,UAC7BviB,EAAI1N,KAAK6xB,WAAWF,GAE1B,OADAjkB,EAAE/M,aAAa,OAAQ,mBAAqBwqB,EAAGxb,eAAiB,6BAA+Bwb,EAAG8E,UAC3FviB,EAAEokB,WAGL,YAAAD,WAAR,SAAmBF,GACf,IAAMjkB,EAAIzI,SAASW,cAAc,KAGjC,OAFA8H,EAAEnN,MAAQP,KAAKN,YAAYnB,EAAE,QAC7BmP,EAAEskB,UAAY,SAAWL,EAAU,UAC5BjkB,GAGH,YAAA4hB,WAAR,SAAmB1vB,GACf,OAAOA,aAAE,EAAFA,EAAIgS,UAAU,EAAG,IAGpB,YAAAgZ,sBAAR,SAA8BqH,GAC1B,OAAOA,EAAK1H,cACR,IAAMvqB,KAAKkyB,IAAID,EAAKzH,WAAa,GACjC,IAAMxqB,KAAKkyB,IAAID,EAAKxH,WACpB,IAAMzqB,KAAKkyB,IAAID,EAAKE,YACpB,IAAMnyB,KAAKkyB,IAAID,EAAKG,eAGpB,YAAAF,IAAR,SAAYG,GACR,IAAMC,EAAO5mB,KAAK6mB,MAAM7mB,KAAK8mB,IAAIH,IACjC,OAAQC,EAAO,GAAK,IAAM,IAAMA,G,iCAxY3Btb,GAAY,wD,oCAAZA,EAAY,QAAZA,EAAY,O,EADzB,GACa,EAAAA,gB,+DAAAA,EAAY,E,KADxB,EAAA9P,c,uEA6YD,mBAAa,EAAAurB,YAOb,iBACI,KAAAb,YAAa,GADJ,EAAAxG,gB,iGC7Zb,YAGA,aAQI,WAAY3tB,GAPZ,KAAAuX,SAAmB,KACnB,KAAAC,SAAmB,KACnB,KAAAkS,qBAA8B,KAC9B,KAAAuL,KAAe,KACf,KAAAxd,KAAuB,KACvB,KAAAyd,mBAA8B,KAGrBl1B,IAILuC,KAAKmnB,qBAAuB1pB,EAAE0pB,qBAC9BnnB,KAAK2yB,mBAAqBl1B,EAAEk1B,oBAoCpC,OAjCI,sBAAI,kBAAG,C,IAAP,WACI,OAAO3yB,KAAK4yB,QAAU5yB,KAAKkV,KAAK,GAAG3D,IAAM,M,gCAG7C,sBAAI,6BAAc,C,IAAlB,WACI,OAAwB,MAAjBvR,KAAKiV,SAAmB,WAAa,M,gCAGhD,sBAAI,uBAAQ,C,IAAZ,WACI,OAAOjV,KAAKgV,U,gCAGhB,sBAAI,wBAAS,C,IAAb,WACI,OAAOhV,KAAK4yB,SAAW5yB,KAAKkV,KAAK2d,MAAK,SAAAlhB,GAAK,OAAAA,EAAEmhB,c,gCAGjD,sBAAI,sBAAO,C,IAAX,WACI,OAAQ,EAAA9qB,MAAM+F,mBAAmB/N,KAAK0yB,O,gCAG1C,sBAAI,wBAAS,C,IAAb,WACI,GAAI1yB,KAAK4yB,QAAS,CACd,IAAMrhB,EAAMvR,KAAKkV,KAAKqU,MAAK,SAAA5X,GAAK,OAAAA,EAAEmhB,aAClC,GAAW,MAAPvhB,EACA,OAAOA,EAAIwhB,UAGnB,OAAO,M,gCAGX,sBAAI,sBAAO,C,IAAX,WACI,OAAoB,MAAb/yB,KAAKkV,MAAgBlV,KAAKkV,KAAKjZ,OAAS,G,gCAEvD,EAlDA,GAAa,EAAA8X,a,0dCJb,aAKA,cAQI,WAAY1F,EAAsBwL,QAAA,IAAAA,OAAA,GAAlC,MACI,cAAO,KACP,OAAW,MAAPxL,GAIJ,EAAKsL,iBAAiB,EAAMtL,EAAK,CAC7BzO,GAAI,KACJ+P,eAAgB,KAChB9R,KAAM,KACNm1B,WAAY,KACZC,SAAU,KACVC,cAAe,MAChBrZ,EAAkB,CAAC,KAAM,iBAAkB,aAAc,WAAY,kB,EAQhF,OA7BgC,OAwB5B,YAAAgB,QAAA,WACI,OAAO7a,KAAKoa,WAAW,IAAI,EAAAlH,eAAelT,MAAO,CAC7CnC,KAAM,MACPmC,KAAK2P,iBAEhB,EA7BA,CAHA,MAGgC,SAAnB,EAAAwjB,c,sGCLb,aAKA,EAQI,SAAYx1B,GAPZ,KAAAiC,GAAa,KACb,KAAA+P,eAAyB,KACzB,KAAA9R,KAAe,KACf,KAAAm1B,WAAqB,KACrB,KAAAC,SAAoB,KACpB,KAAAC,cAAyB,KAGhBv1B,IAILqC,KAAKJ,GAAKjC,EAAEiC,GACZI,KAAK2P,eAAiBhS,EAAEgS,eACxB3P,KAAKgzB,WAAar1B,EAAEq1B,WAChBr1B,aAAa,EAAAw1B,aACbnzB,KAAKizB,SAAWt1B,EAAEs1B,SAClBjzB,KAAKkzB,cAAgBv1B,EAAEu1B,iBAlBtB,EAAAhgB,kB,kGCNb,YAEA,SACA,SACA,SACA,SACA,SACA,SACA,SAIA,EAyBI,SAAY1R,EAA2B4xB,EAAiB1M,GACpD,GAAgB,MAAZllB,EAAJ,CAoBA,OAhBAxB,KAAKJ,GAAK4B,EAAS5B,GACnBI,KAAK2P,eAAiBnO,EAASmO,eAC/B3P,KAAKkmB,SAAW1kB,EAAS0kB,SACzBlmB,KAAKozB,OAASA,EACdpzB,KAAKomB,KAAO5kB,EAAS4kB,KACrBpmB,KAAKqmB,aAAe7kB,EAAS6kB,aAC7BrmB,KAAKmmB,oBAAsB3kB,EAAS2kB,oBACpCnmB,KAAK2T,SAAWnS,EAASmS,SACzB3T,KAAK2mB,aAAenlB,EAASmlB,aAC7B3mB,KAAKiC,KAAOT,EAASS,KACrBjC,KAAKnC,KAAO2D,EAAS3D,KACrBmC,KAAK4T,MAAQpS,EAASoS,MACtB5T,KAAK0mB,cAAiC,MAAjBA,EAAwBA,EAAgBllB,EAASklB,cACtE1mB,KAAK4mB,YAAcplB,EAASolB,YAC5B5mB,KAAK6mB,SAAWrlB,EAASqlB,SAEjB7mB,KAAKiC,MACT,KAAK,EAAA+R,WAAWC,MACZjU,KAAK8T,MAAQ,IAAI,EAAAuf,UAAU7xB,EAASsS,OACpC,MACJ,KAAK,EAAAE,WAAWmB,WACZnV,KAAKoV,WAAa,IAAI,EAAAke,eAAe9xB,EAAS4T,YAC9C,MACJ,KAAK,EAAApB,WAAWsK,KACZte,KAAKwS,KAAO,IAAI,EAAA+gB,SAAS/xB,EAASgR,MAClC,MACJ,KAAK,EAAAwB,WAAWuK,SACZve,KAAKsmB,SAAW,IAAI,EAAAkN,aAAahyB,EAAS8kB,UAM3B,MAAnB9kB,EAASqS,SACT7T,KAAK6T,OAASrS,EAASqS,OAAOhN,KAAI,SAAAmM,GAAK,WAAI,EAAAygB,UAAUzgB,OAE7B,MAAxBxR,EAASglB,cACTxmB,KAAKwmB,YAAchlB,EAASglB,YAAY3f,KAAI,SAAA6G,GAAK,WAAI,EAAAgmB,eAAehmB,OAExC,MAA5BlM,EAASilB,kBACTzmB,KAAKymB,gBAAkBjlB,EAASilB,gBAAgB5f,KAAI,SAAA8sB,GAAM,WAAI,EAAAC,oBAAoBD,SAtEjF,EAAAE,c,0GCbb,SAAY/M,GACR,mBACA,2BAFJ,CAAY,EAAAA,qBAAA,EAAAA,mBAAkB,M,gGCA9B,SAAYgN,GACR,mBACA,mBAFJ,CAAY,EAAAA,WAAA,EAAAA,SAAQ,M,wdCApB,YAIA,cAOI,WAAYtyB,EAAe4jB,EAAgB2O,G,QAA3C,EACI,YAAMvyB,IAAS,KACXwyB,EAAa,KACjB,GAAgB,MAAZxyB,EAAkB,CAClB,IAAMyyB,EAAqB,EAAK7sB,oBAAoB,cAEhD4sB,EADAC,GAAsBF,EACTE,EAEAzyB,E,OAIjBwyB,GACA,EAAK9iB,QAAU,EAAK9J,oBAAoB,UAAW4sB,GACnD,EAAK/X,iBAAmB,EAAK7U,oBAAoB,mBAAoB4sB,GACrE,EAAKE,eAAwD,QAA1C,EAAwB,QAAxB,EAAG,EAAKjY,wBAAgB,eAAEkY,wBAAgB,eAAG,GAChE,EAAKvyB,iBAAmB,EAAAoG,MAAM+F,mBAAmB,EAAKmmB,iBAEvC,MAAX9O,IACA,EAAKlU,QAAU,yCAGvB,EAAKkjB,WAAahP,E,EAsC1B,OAnEmC,OAgC/B,YAAAtjB,iBAAA,WACI,GAA6B,MAAzB9B,KAAKic,iBACL,OAAOjc,KAAKkR,QAEhB,IAAK,IAAMtS,KAAOoB,KAAKic,iBACnB,GAAKjc,KAAKic,iBAAiB7f,eAAewC,IAGtCoB,KAAKic,iBAAiBrd,GAAK3C,OAC3B,OAAO+D,KAAKic,iBAAiBrd,GAAK,GAG1C,OAAOoB,KAAKkR,SAGhB,YAAAiL,eAAA,WACI,IAAMkY,EAAqB,GAC3B,GAA6B,MAAzBr0B,KAAKic,iBACL,OAAOoY,E,eAEAz1B,GACP,IAAK,EAAKqd,iBAAiB7f,eAAewC,G,iBAG1C,EAAKqd,iBAAiBrd,GAAKyO,SAAQ,SAACinB,GAChC,IAAIC,EAAS,GACb,GAAI31B,EAAI8N,QAAQ,MAAQ,GAAK9N,EAAI8N,QAAQ,MAAQ,EAAG,CAChD,IAAM8nB,EAAU51B,EAAI61B,YAAY,KAChCF,EAAS31B,EAAI2K,OAAO,EAAGirB,GAAW,EAAIA,EAAU51B,EAAI3C,QAAU,KAElEo4B,EAAS93B,KAAKg4B,EAASD,O,OAV/B,IAAK,IAAM11B,KAAOoB,KAAKic,iB,EAAZrd,GAaX,OAAOy1B,GAEf,EAnEA,CAFA,MAEmCzsB,cAAtB,EAAAlG,iB,iGCJb,SAAYoqB,GACR,uCACA,sDACA,4CACA,8CACA,gDACA,8CACA,oDACA,8DACA,8DAEA,0CACA,0CACA,0CACA,8DACA,8DACA,wCACA,gEACA,oDACA,oFACA,0FACA,oFACA,oEACA,0EACA,oEACA,4DACA,kDACA,4CACA,wFAEA,kDACA,kDACA,kDAEA,wCACA,wCACA,wCAEA,8DACA,kEACA,8DACA,8DACA,0EACA,sEACA,wFACA,4FACA,oFACA,wEAEA,sDACA,8DAEA,kEAEA,0CAEA,sDACA,0DACA,sDACA,sDAEA,sEACA,kEACA,sEACA,kFAhEJ,CAAY,EAAAA,YAAA,EAAAA,UAAS,M,kHCArB,SAAY4I,GACR,yBACA,2BACA,6BAHJ,CAAY,EAAAA,6BAAA,EAAAA,2BAA0B,M,6cCAtC,IAEA,cA0BI,WAAYj5B,QAAA,IAAAA,MAAA,MAAZ,MACI,YAAMA,IAAK,KACX,OAAY,MAARA,IAGJ,EAAKk5B,gBAAkB,EAAKvtB,oBAAoB,mBAChD,EAAKwtB,mBAAqB,EAAKxtB,oBAAoB,sBACnD,EAAKytB,cAAgB,EAAKztB,oBAAoB,iBAG9C,EAAK0tB,qBAAuB,EAAK1tB,oBAAoB,wBACrD,EAAK2tB,0BAA4B,EAAK3tB,oBAAoB,6BAE1D,EAAK4tB,qBAAuB,EAAK5tB,oBAAoB,wBACrD,EAAK6tB,kBAAoB,EAAK7tB,oBAAoB,qBAClD,EAAK8tB,oBAAsB,EAAK9tB,oBAAoB,uBACpD,EAAK+tB,wBAA0B,EAAK/tB,oBAAoB,2BACxD,EAAKguB,0BAA4B,EAAKhuB,oBAAoB,6BAE1D,EAAKiuB,cAAgB,EAAKjuB,oBAAoB,iBAC9C,EAAKkuB,aAAe,EAAKluB,oBAAoB,gBAC7C,EAAKmuB,UAAY,EAAKnuB,oBAAoB,aAC1C,EAAKouB,eAAiB,EAAKpuB,oBAAoB,kBAC/C,EAAKquB,YAAc,EAAKruB,oBAAoB,eAC5C,EAAKsuB,oBAAsB,EAAKtuB,oBAAoB,wBArBzC,EAuBnB,OApDoC,OAoDpC,EApDA,CAFA,MAEoCQ,cAAvB,EAAA+tB,kB,iHCFb,W,GAMA,K,6CCNiM,6BAAwC,YAAS,2B,6BAAT,qD,mCDQzO,aAYI,WAAoBj2B,GAAA,KAAAA,cANX,KAAAk2B,UAAW,EAEpB,KAAAC,WAAa,EACb,KAAAlT,MAAQ,Y,OAKR,YAAAxhB,YAAA,WAEI,OADAnB,KAAK61B,WAA2B,MAAd71B,KAAK81B,MAAgB,EAAuB,IAAlB91B,KAAK81B,MAAQ,GACjD91B,KAAK81B,OACT,KAAK,EACD91B,KAAK2iB,MAAQ,aACb3iB,KAAK+1B,KAAO/1B,KAAKN,YAAYnB,EAAE,UAC/B,MACJ,KAAK,EACDyB,KAAK2iB,MAAQ,aACb3iB,KAAK+1B,KAAO/1B,KAAKN,YAAYnB,EAAE,QAC/B,MACJ,KAAK,EACDyB,KAAK2iB,MAAQ,aACb3iB,KAAK+1B,KAAO/1B,KAAKN,YAAYnB,EAAE,QAC/B,MACJ,QACIyB,KAAK2iB,MAAQ,YACb3iB,KAAK+1B,KAAqB,MAAd/1B,KAAK81B,MAAgB91B,KAAKN,YAAYnB,EAAE,QAAU,O,iCA3BjEy3B,GAAyB,qC,iCAAzBA,EAAyB,+QCZtC,4BAAuB,4CAA0K,uDAAiE,iCAAO,iCAAO,iB,MAApP,oEAAkD,gEAAwC,4CAA0F,yD,kDDQhN,GAIa,EAAAA,6B,+DAAAA,EAAyB,E,KAJrC,EAAArzB,U,MAAU,CACP7B,SAAU,wBACV8B,YAAa,wC,2CAGJkzB,MAAK,E,KAAb,EAAA90B,QACQ40B,SAAQ,E,KAAhB,EAAA50B,W,sGEZL,MAOI,SAAYQ,GACRxB,KAAKJ,GAAK4B,EAAS5B,GACnBI,KAAK2P,eAAiBnO,EAASmO,eAC/B3P,KAAKnC,KAAO2D,EAAS3D,KACrBmC,KAAKgzB,WAAaxxB,EAASwxB,WAC3BhzB,KAAKizB,SAAWzxB,EAASyxB,UAZpB,EAAAgD,kB,++CCFb,WASA,GAFA,MAEA,QAMA,GAJA,KACA,MACA,KAEA,O,oEAEA,aAcI,WAAoBtV,EAAgCjhB,EACxCw2B,EAAwC3Y,GADhC,KAAAoD,aAAgC,KAAAjhB,cACxC,KAAAw2B,iBAAwC,KAAA3Y,gBAR1C,KAAA4Y,SAAW,IAAI,EAAA3N,a,OAUnB,YAAA4N,OAAN,W,sGACI,OAA2B,MAAvBp2B,KAAKq2B,gBAAkD,KAAxBr2B,KAAKq2B,gBACpCr2B,KAAKk2B,eAAeI,SAAS,QAASt2B,KAAKN,YAAYnB,EAAE,iBACrDyB,KAAKN,YAAYnB,EAAE,uBACvB,MAGEohB,EAAU,IAAI,EAAA3E,4BACpB,EAAA2E,EAA6B,EAAA3f,KACzB,GAAMA,KAAKud,cAAcgZ,aAAav2B,KAAKq2B,eAAgB,Q,OAD/D,EAAQG,mBAAqB,EAAKA,mBAC9B,S,iBAGA,O,sBAAQx2B,KAAKiC,MACT,KAAM,EACFjC,KAAKy2B,YAAcz2B,KAAK2gB,WAAW+V,oBAAoB/W,GACvD,MACJ,KAAK,EAAAb,sBAAsB6X,IAC3B,KAAK,EAAA7X,sBAAsB8X,gBACI,MAAvB52B,KAAK2P,eACL3P,KAAKy2B,YAAcz2B,KAAK2gB,WAAWkW,4BAA4B72B,KAAK2P,eAAgBgQ,GAEpF3f,KAAKy2B,YAAcz2B,KAAK2gB,WAAWmW,gBAAgBnX,GAEvD,MACJ,KAAK,EAAAb,sBAAsBiY,MACvB/2B,KAAKy2B,YAAcz2B,KAAK2gB,WAAWqW,kBAAkBrX,GACrD,MACJ,KAAK,EAAAb,sBAAsBmY,SACvBj3B,KAAKy2B,YAAcz2B,KAAK2gB,WAAWuW,qBAAqBvX,GACxD,MACJ,KAAK,EAAAb,sBAAsBqY,cACvBn3B,KAAKy2B,YAAcz2B,KAAK2gB,WAAWyW,0BAA0BzX,GAC7D,MACJ,KAAK,EAAAb,sBAAsBuY,QACvBr3B,KAAKy2B,YAAcz2B,KAAK2gB,WAAW2W,oBAAoB3X,GAI9C,SAAM3f,KAAKy2B,a,cAAtBj1B,EAAW,SACjBxB,KAAKm2B,SAAShN,KAAK,CACf3nB,SAAUA,EACVg1B,mBAAoBx2B,KAAKw2B,qB,6FAtD5Be,GAAwB,kJ,iCAAxBA,EAAwB,0pB,GAAA,MCrBrC,+BAAY,2CAAY,EAAAnB,YAAyD,4CAAyB,wCAAG,Y,mBAAiC,iBAAK,8CAA4B,a,oBAAuB,iBAAS,gDAA0F,uEAA1F,iBAA+J,kCAAO,8CAA2B,iDAAoF,uC,oBAAsF,6CAAM,a,oBAAqB,iBAAQ,kCAAU,iDAA6E,a,oBAAkB,iBAAU,kCAAO,kCAAQ,kB,4BAA7rB,2CAA2E,8EAAkE,sEAA0H,wDAAgK,kDAA4D,+EAA2D,oEAAoH,mE,yMDiBprB,GAIa,EAAAmB,4B,+DAAAA,EAAwB,E,KAJpC,EAAA50B,U,MAAU,CACP7B,SAAU,wBACV8B,YAAa,wC,8GAGJX,KAAM,CAAF,C,KAAZ,EAAAjB,QACQ2O,eAAgB,CAAF,C,KAAtB,EAAA3O,QACSm1B,SAAQ,E,KAAjB,EAAAjM,Y,g0DEvBL,YAEA,SAEA,SAEA,SACA,SACA,QAEA,SACA,SACA,SACA,SACA,SAGA,cAwBI,WAAY7b,EAAkBwL,EAAmCmN,QAAnC,IAAAnN,OAAA,QAAmC,IAAAmN,MAAA,MAAjE,MACI,cAAO,KACP,GAAW,MAAP3Y,E,SA4BJ,OAxBA,EAAKsL,iBAAiB,EAAMtL,EAAK,CAC7BzO,GAAI,KACJwzB,OAAQ,KACRzjB,eAAgB,KAChBuW,SAAU,KACVroB,KAAM,KACN+V,MAAO,MACRiG,EAAkB,CAAC,KAAM,SAAU,iBAAkB,aAExD,EAAK5X,KAAOoM,EAAIpM,KAChB,EAAK0R,SAAWtF,EAAIsF,SACpB,EAAKwS,oBAAsB9X,EAAI8X,oBAC/B,EAAKC,KAAO/X,EAAI+X,KACQ,MAApB/X,EAAIgY,aACJ,EAAKA,aAAehY,EAAIgY,aAExB,EAAKA,cAAe,EAExB,EAAKM,aAAmC,MAApBtY,EAAIsY,aAAuB,IAAI0D,KAAKhc,EAAIsY,cAAgB,KAC5E,EAAKD,cAAgBrY,EAAIqY,cACzB,EAAKM,UAAYA,EACjB,EAAKJ,YAAiC,MAAnBvY,EAAIuY,YAAsB,IAAIyD,KAAKhc,EAAIuY,aAAe,KACzE,EAAKC,SAAWxY,EAAIwY,SAEZ,EAAK5kB,MACT,KAAK,EAAA+R,WAAWC,MACZ,EAAKH,MAAQ,IAAI,EAAAG,MAAM5F,EAAIyF,MAAO+F,GAClC,MACJ,KAAK,EAAA7F,WAAWmB,WACZ,EAAKC,WAAa,IAAI,EAAAD,WAAW9G,EAAI+G,WAAYyE,GACjD,MACJ,KAAK,EAAA7F,WAAWsK,KACZ,EAAK9L,KAAO,IAAI,EAAA8L,KAAKjQ,EAAImE,KAAMqH,GAC/B,MACJ,KAAK,EAAA7F,WAAWuK,SACZ,EAAK+H,SAAW,IAAI,EAAA/H,SAASlQ,EAAIiY,SAAUzM,G,OAM5B,MAAnBxL,EAAImY,YACJ,EAAKA,YAAcnY,EAAImY,YAAY3f,KAAI,SAAA6G,GAAK,WAAI,EAAA8pB,WAAW9pB,EAAGmM,MAE9D,EAAK2M,YAAc,KAGL,MAAdnY,EAAIwF,OACJ,EAAKA,OAASxF,EAAIwF,OAAOhN,KAAI,SAAAmM,GAAK,WAAI,EAAAykB,MAAMzkB,EAAG6G,MAE/C,EAAKhG,OAAS,KAGS,MAAvBxF,EAAIoY,gBACJ,EAAKA,gBAAkBpY,EAAIoY,gBAAgB5f,KAAI,SAAA8sB,GAAM,WAAI,EAAA+D,SAAS/D,EAAI9Z,MAEtE,EAAK4M,gBAAkB,K,EAuHnC,OA7M4B,OA0FlB,YAAA5L,QAAN,SAAc8c,G,gHAGV,OAFMC,EAAQ,IAAI,EAAAlkB,WAAW1T,MAE7B,GAAMA,KAAKoa,WAAWwd,EAAO,CACzB/5B,KAAM,KACN+V,MAAO,MACR5T,KAAK2P,eAAgBgoB,I,cAHxB,SAKQ33B,KAAKiC,M,KACJ,EAAA+R,WAAWC,MAAX,Y,KAGA,EAAAD,WAAWmB,WAAX,Y,KAGA,EAAAnB,WAAWsK,KAAX,Y,KAGA,EAAAtK,WAAWuK,SAAX,Y,oBARa,OAAd,EAAAqZ,EAAc,GAAM53B,KAAK8T,MAAM+G,QAAQ7a,KAAK2P,eAAgBgoB,I,OAC5D,OADA,EAAM7jB,MAAQ,SACd,O,OAEmB,OAAnB,EAAA8jB,EAAmB,GAAM53B,KAAKoV,WAAWyF,QAAQ7a,KAAK2P,eAAgBgoB,I,OACtE,OADA,EAAMviB,WAAa,SACnB,O,OAEa,OAAb,EAAAwiB,EAAa,GAAM53B,KAAKwS,KAAKqI,QAAQ7a,KAAK2P,eAAgBgoB,I,OAC1D,OADA,EAAMnlB,KAAO,SACb,O,OAEiB,OAAjB,EAAAolB,EAAiB,GAAM53B,KAAKsmB,SAASzL,QAAQ7a,KAAK2P,eAAgBgoB,I,OAClE,OADA,EAAMrR,SAAW,SACjB,O,QAEA,a,eAGFhM,EAAQta,KAAK2P,eAEK,MAApB3P,KAAKwmB,aAAuBxmB,KAAKwmB,YAAYvqB,OAAS,GAChD,EAAqB,GAC3B,GAAM+D,KAAKwmB,YAAYqR,QAAO,SAACC,EAASC,GACpC,OAAOD,EAAQx2B,MAAK,WAChB,OAAOy2B,EAAWld,QAAQP,EAAOqd,MAClCr2B,MAAK,SAAA02B,GACJ,EAAYz7B,KAAKy7B,QAEtBtd,QAAQC,aARX,O,QAEA,SAOAid,EAAMpR,YAAc,E,0BAGL,MAAfxmB,KAAK6T,QAAkB7T,KAAK6T,OAAO5X,OAAS,GACtC,EAAgB,GACtB,GAAM+D,KAAK6T,OAAOgkB,QAAO,SAACC,EAASxjB,GAC/B,OAAOwjB,EAAQx2B,MAAK,WAChB,OAAOgT,EAAMuG,QAAQP,EAAOqd,MAC7Br2B,MAAK,SAAA22B,GACJ,EAAO17B,KAAK07B,QAEjBvd,QAAQC,aARX,O,QAEA,SAOAid,EAAM/jB,OAAS,E,0BAGS,MAAxB7T,KAAKymB,iBAA2BzmB,KAAKymB,gBAAgBxqB,OAAS,GACxD,EAAyB,GAC/B,GAAM+D,KAAKymB,gBAAgBoR,QAAO,SAACC,EAASnE,GACxC,OAAOmE,EAAQx2B,MAAK,WAChB,OAAOqyB,EAAG9Y,QAAQP,EAAOqd,MAC1Br2B,MAAK,SAAA42B,GACJ,EAAgB37B,KAAK27B,QAE1Bxd,QAAQC,aARX,O,QAEA,SAOAid,EAAMnR,gBAAkB,E,mBAG5B,MAAO,CAAP,EAAOmR,WAGX,YAAAO,aAAA,SAAa/E,GACT,IAAMz1B,EAAI,IAAI,EAAAk2B,WAoBd,OAnBAl2B,EAAEiC,GAAKI,KAAKJ,GACZjC,EAAEgS,eAAiB3P,KAAK2P,eACxBhS,EAAEuoB,SAAWlmB,KAAKkmB,SAClBvoB,EAAEy1B,OAAgC,MAAvBpzB,KAAK2P,eAAyByjB,EAAS,KAClDz1B,EAAEyoB,KAAOpmB,KAAKomB,KACdzoB,EAAE0oB,aAAermB,KAAKqmB,aACtB1oB,EAAEwoB,oBAAsBnmB,KAAKmmB,oBAC7BxoB,EAAEgW,SAAW3T,KAAK2T,SAClBhW,EAAEgpB,aAAoC,MAArB3mB,KAAK2mB,aAAuB3mB,KAAK2mB,aAAasE,cAAgB,KAC/EttB,EAAEsE,KAAOjC,KAAKiC,KACdtE,EAAE+oB,cAAgB1mB,KAAK0mB,cACvB/oB,EAAEipB,YAAkC,MAApB5mB,KAAK4mB,YAAsB5mB,KAAK4mB,YAAYqE,cAAgB,KAC5EttB,EAAEkpB,SAAW7mB,KAAK6mB,SAElB7mB,KAAKia,eAAeja,KAAMrC,EAAG,CACzBE,KAAM,KACN+V,MAAO,OAGHjW,EAAEsE,MACN,KAAK,EAAA+R,WAAWC,MACZtW,EAAEmW,MAAQ9T,KAAK8T,MAAMskB,cACrB,MACJ,KAAK,EAAApkB,WAAWmB,WACZxX,EAAEyX,WAAapV,KAAKoV,WAAWijB,mBAC/B,MACJ,KAAK,EAAArkB,WAAWsK,KACZ3gB,EAAE6U,KAAOxS,KAAKwS,KAAK8lB,aACnB,MACJ,KAAK,EAAAtkB,WAAWuK,SACZ5gB,EAAE2oB,SAAWtmB,KAAKsmB,SAASiS,iBAenC,OATmB,MAAfv4B,KAAK6T,SACLlW,EAAEkW,OAAS7T,KAAK6T,OAAOhN,KAAI,SAAAmM,GAAK,OAAAA,EAAEwlB,kBAEd,MAApBx4B,KAAKwmB,cACL7oB,EAAE6oB,YAAcxmB,KAAKwmB,YAAY3f,KAAI,SAAA6G,GAAK,OAAAA,EAAE+qB,uBAEpB,MAAxBz4B,KAAKymB,kBACL9oB,EAAE8oB,gBAAkBzmB,KAAKymB,gBAAgB5f,KAAI,SAAA8sB,GAAM,OAAAA,EAAG+E,4BAEnD/6B,GAEf,EA7MA,CAA4B,WAAf,EAAAg7B,U,u/CClBb,W,GAKA,MACA,KACA,MACA,OACA,K,yJCT8lB,2BAA8E,2CAAmE,Y,mBAAqB,iBAAK,kC,8BAAzE,mFAA+C,mE,sBAAgC,2BAA6E,2CAA4C,Y,mBAAqB,iBAAK,kC,MAA1B,mE,yBAAvV,6BAA6C,8CAAiL,8CAAyJ,2C,6BAA1R,0DAAiL,0D,yBAA0uB,6BAAoF,+CAAgG,6CAAmC,2CAAM,Y,mBAAuB,iBAAQ,gDAA0B,aAAQ,iBAAS,kCAAO,mC,6BAA9M,2CAAa,gBAAb,CAAa,aAAgH,oEAAyD,4C,kDDa/zD,aAUI,WAAoBC,EAA4C7c,EACpD8c,EAAoCC,EAAkCC,GAD9D,KAAAH,mBAA4C,KAAA7c,uBACpD,KAAA8c,eAAoC,KAAAC,cAAkC,KAAAC,cANlF,KAAAC,YAAa,EAGb,KAAAC,UAAwB,GAIpBj5B,KAAKg5B,WAAah5B,KAAK+b,qBAAqBmd,a,OAG1C,YAAA14B,SAAN,W,oGACgB,OAAZ,EAAAR,KAAY,GAAMA,KAAK64B,aAAaM,W,OACvB,OADb,EAAKt7B,KAAO,SACZ,EAAAmC,KAAa,GAAMA,KAAK64B,aAAaO,Y,OAMjC,OANJ,EAAK9hB,MAAQ,SACI,MAAbtX,KAAKnC,MAAqC,KAArBmC,KAAKnC,KAAK0O,SAC/BvM,KAAKnC,KAAOmC,KAAKsX,OAIjB,GAAMtX,KAAK+4B,YAAYM,e,cAAiB,MAAxC,eACA,GAAMr5B,KAAK+4B,YAAYO,UAAS,I,OAAhC,S,iBAEa,OAAjB,EAAAt5B,KAAiB,GAAMA,KAAK84B,YAAYS,mB,cAAxC,EAAKN,UAAY,S,YAGrB,YAAAO,KAAA,WACIx5B,KAAK44B,iBAAiBa,KAAK,cAG/B,YAAAC,OAAA,WACI15B,KAAK44B,iBAAiBa,KAAK,W,iCA9BtBE,GAAe,gM,iCAAfA,EAAe,uyDCjB5B,4BAA8F,4CAAwB,0C,mBAA4F,qCAAgD,iCAAK,6CAAuC,6CAAwB,6CAAgD,4CAAwC,a,oBAAoB,iBAAK,kCAAM,6CAAgD,4CAAwC,a,oBAAiB,iBAAK,kCAAM,yDAAuY,6CAAgD,6CAAwC,a,oBAAkB,iBAAK,kCAAM,6CAAgD,6CAA2C,a,oBAAqB,iBAAK,kCAAM,kCAAM,kCAAO,8CAA6D,8CAA+B,6CAA0I,wCAA2D,kCAAK,+CAA8E,kDAAqT,0CAAqC,6CAAkE,wCAAoD,a,oBAAuB,iBAAK,6CAA2F,wCAA+D,a,oBAAqB,iBAAK,6CAAgG,wCAAwD,a,oBAAqB,iBAAK,0CAAqC,kDAA4C,wCAAS,EAAAH,UAAS,wCAAoD,a,oBAAqB,iBAAU,kDAA4C,wCAAS,EAAAE,YAAW,wCAAwD,a,oBAAoB,iBAAU,kCAAO,kCAAM,kCAAM,kCAAO,kCAAO,kB,MAA1rF,6DAA+G,mGAAiQ,oEAAuH,gEAA2C,0DAAgd,iEAAwH,oEAA4d,4CAAqZ,8EAAsL,4EAAkL,4EAAiL,4EAAuJ,6E,wKDazqF,GAIa,EAAAC,mB,+DAAAA,EAAe,E,KAJ3B,EAAAh3B,U,MAAU,CACP7B,SAAU,aACV8B,YAAa,6B,0nDEfjB,W,GAKA,K,oBAEA,aAQI,WAAoBmZ,GAAA,KAAAA,uBAFpB,KAAAxJ,KAAe,O,OAIT,YAAA/R,SAAN,W,gGAEmB,OADfR,KAAKuS,MAAO,IAAI8X,MAAOE,cAAcvgB,WACrC,EAAAhK,KAAe,GAAMA,KAAK+b,qBAAqB6d,yB,cAA/C,EAAKC,QAAU,S,6CARVC,GAAe,8C,iCAAfA,EAAe,0LCX5B,4BAA0C,4CAAkB,4CAAkB,YAAgC,iBAAO,uCAAoC,4CAA6B,a,oBAAqC,iBAAO,kCAAO,kCAAO,kB,MAAlK,sEAAwG,6F,uCDOtL,GAIa,EAAAA,mB,+DAAAA,EAAe,E,KAJ3B,EAAAn3B,U,MAAU,CACP7B,SAAU,aACV8B,YAAa,6B,2iDETjB,WAoBA,GAZA,KAEA,MAEA,KACA,MACA,KACA,KACA,MACA,MACA,KAEA,QACA,SAOA,SACA,SACA,QACA,SAEA,SACA,SACA,SACA,S,wJCpCA,6BAA+B,qC,mBAAiG,6CAAsB,Y,mBAAoB,iBAAQ,2C,MAAvG,6EAA2E,kE,mDAA4C,6BAAwD,wCAAG,Y,mBAAiC,iBAAK,+CAAY,4FAAqE,4CAAyB,gDAAkB,a,oBAAwB,iBAAS,2CAA6E,gDAAoC,a,oBAAoE,iBAAS,kCAAO,kDAAoF,wC,oBAAsF,6CAAM,a,oBAAmB,iBAAQ,kCAAU,kCAAQ,2C,mDAArmB,8EAAwE,0DAA0F,sEAAkJ,iHAA6I,kDAA4D,+EAA2D,mE,mDAA6qB,6BAAoD,+CAAmB,Y,mBAA6B,iBAAS,+CAAgE,6GAAhE,iBAAyG,+CAA0B,Y,oBAAmC,iBAAS,kC,iCAArN,0EAAsG,0DAAmE,gF,mDAA3qB,6BAA6C,6CAA+B,+CAAkB,Y,mBAA6B,iBAAS,+CAA8D,iGAA9D,iBAA2F,iCAAO,+CAA+B,iDAA0B,a,oBAAyB,iBAAS,iDAA8E,yGAA9E,iBAAmH,kCAAO,kDAAmS,kC,iCAAhoB,0EAAoG,8CAA6F,uEAAgH,sDAA2E,oD,mDAAqkB,6BAAwC,6CAA+B,+CAA0B,Y,mBAAyB,iBAAS,+CAA8E,yGAA9E,iBAA0G,iCAAO,kC,iCAAnJ,sEAAgH,uD,mDAA3gB,0BAA0B,6CAAoC,+CAAwF,0GAA2B,4FAAnH,iBAAuJ,+CAAoD,Y,mBAAiC,iBAAS,iCAAO,kDAA2P,kC,iCAA/Z,uDAAmH,8EAAmE,qD,sBAAg7B,4BAA6C,Y,mBAAoC,kB,MAApC,yF,sBAA6C,4BAAwC,Y,mBAAuC,kB,MAAvC,4F,sBAAgD,4BAA6C,Y,mBAAwC,kB,MAAxC,6F,yBAAiD,4BAAuE,Y,mBAAkE,kB,wCAAlE,oG,yBAAhf,6BAAmG,4CAAO,Y,mBAAsC,iBAAS,gDAA0F,gDAAwF,iDAA8F,kDAAkJ,4C,4DAAjd,0FAAuD,kDAA0F,6CAAwF,kDAA8F,6E,yBAAyL,4BAA8D,Y,mBAAyD,kB,wCAAzD,2F,yBAAkE,4BAA4F,Y,mBAAgE,kB,wCAAhE,mG,sBAAyE,4BAA2C,Y,mBAAqC,kB,MAArC,0F,yBAA8C,4BAAgD,Y,mBAAqE,kB,wCAArE,uG,yBAA8E,4BAAoD,Y,mBAA2E,kB,wCAA3E,6G,sBAAoF,4BAAiD,Y,mBAAyC,kB,MAAzC,8F,yBAAkD,4BAA+C,Y,mBAA8E,kB,wCAA9E,+G,sBAAuF,4BAA2C,Y,mBAAsC,kB,MAAtC,2F,sBAA+C,4BAAwC,Y,mBAA6B,kB,MAA7B,kF,sBAAsC,4BAA8C,Y,mBAAqC,kB,MAArC,0F,uBAA8C,4BAA6C,Y,mBAAoC,kB,MAApC,yF,uBAA6C,4BAAiD,Y,mBAA8B,kB,MAA9B,mF,uBAAuC,4BAA8D,Y,mBAAsC,kB,MAAtC,2F,0BAA+C,4BAAuE,Y,mBAAkE,kB,wCAAlE,oG,0BAAv9C,gDAAgI,gDAAqK,gDAAyF,gDAA8H,gDAAwI,kDAAmG,kDAAsI,kDAA0F,kDAA8E,kDAA4F,mDAA0F,mDAAwF,mDAA6G,mDAAkJ,kB,4DAA1hD,mEAAgI,+EAAqK,gDAAyF,qDAA8H,yDAAwI,sDAAmG,oDAAsI,gDAA0F,6CAA8E,mDAA4F,kDAA0F,sDAAwF,mEAA6G,6E,0BAA6Y,6BAAkE,Y,6DAAqH,2B,wCAArH,2K,0BAAxP,6BAAmD,Y,6DAAmI,yCAAuM,2C,wCAA1U,wKAAkJ,gE,0BAAnQ,2BAA8D,yDAA6Y,kC,uCAA9X,iD,0BAAsY,2BAA0F,Y,6DAAiG,kB,uCAAjG,qJ,uBAAyG,2BAA6D,Y,mBAAwB,kB,MAAxB,sE,oDAAn2G,6BAA+F,+CAA0I,oGAAqB,sFAA/J,iBAA6L,+CAA4E,Y,mBAAkD,+BAAoB,Y,mBAA8D,iBAAS,2DAA2kB,0FAAglD,kDAAmd,mDAAmM,kDAA6F,kCAAS,kC,mEAAjvG,qEAA0C,gCAAmC,qBAAoF,sEAA4C,uFAAsE,yFAAsF,0EAA6D,cAAslE,mEAAmd,6EAAmM,oE,oDAAkJ,6BAAwF,4CAAiB,Y,mBAAkB,iBAAM,6CAAkB,6CAAoB,gDAA6B,a,oBAAsB,iBAAS,iDAAsF,4G,oBAAtF,iBAA4L,iDAAoC,a,oBAAiC,iBAAS,kCAAO,kCAAO,2C,iCAAlZ,+DAA2F,oEAAwK,0FAAnD,0CAA0I,iF,oDAAkH,6BAA0F,6CAA+B,+CAA6B,Y,mBAAgC,iBAAS,+CAAsF,4G,mBAAtF,iBAAmL,iDAAoC,a,4CAA+G,iBAAS,kCAAO,kC,iCAA/X,6EAAkL,yFAAnD,0CAAiI,wK,oDAA2pB,6BAA2E,6CAAyB,+CAA6F,+GAA7F,iBAA+H,+CAAyD,Y,mBAA0B,iBAAS,iCAAO,iDAAoC,a,gEAAyE,iBAAS,kC,iCAA3P,4DAA2F,uEAA8E,uI,0BAAohB,4BAAyC,Y,uGAA6K,kB,wCAA7K,2O,uBAA8O,2BAAuC,Y,mBAA6B,kB,MAA7B,kF,uBAAqC,2BAAwC,Y,mBAAmB,kB,MAAnB,wE,0BAA5K,4BAAwD,gDAA4E,gDAAmE,Y,oFAAsL,kB,6DAA9T,gDAA4E,iDAA4D,qO,0BAA+L,4BAA0D,Y,uGAAyP,kB,6DAAzP,oT,0BAAkQ,4BAA4E,Y,uGAAwK,kB,wCAAxK,oP,0BAAljC,6BAA+C,Y,mBAAsB,kCAA+N,mDAAsY,kDAA4T,kDAA6P,4C,4DAAprC,2EAA8B,gDAA+N,+DAAsY,iEAA4T,oF,0BAA0U,4BAAyC,Y,uGAA6J,kB,wCAA7J,oO,uBAA8N,2BAAuC,Y,mBAA6B,kB,MAA7B,kF,uBAAqC,2BAAwC,Y,mBAAmB,kB,MAAnB,wE,0BAA5K,4BAAwD,gDAA4E,gDAAmE,Y,oFAAuK,kB,6DAA/S,gDAA4E,iDAA4D,8N,0BAAgL,4BAA0D,Y,uGAA0O,kB,6DAA1O,6S,0BAAmP,4BAA4E,Y,uGAAyJ,kB,wCAAzJ,6O,0BAApgC,6BAAgD,Y,mBAAqB,kCAA+M,mDAAuX,kDAA6S,kDAA8O,4C,4DAAtnC,0EAA6B,gDAA+M,+DAAuX,iEAA6S,oF,oDAA9+E,6BAAyF,+CAAuI,iGAAvI,iBAA2J,+CAAuE,yDAAmvC,yDAAsrC,iCAAS,kC,+CAAhlF,mEAAqC,6BAA6B,kBAAqD,oEAAsD,+CAAmvC,iD,uBAA6zC,+BAA4H,Y,mBAAqC,kB,MAArC,2F,0BAAuF,+CAAoD,Y,sCAA6D,iBAAS,iB,8BAAtE,4H,sBAAqF,gC,KAAwC,8B,uBAA8e,6BAA2C,gDAAkD,2C,MAArC,+C,oDAAp7L,0BAA4C,0DAA2gB,4CAAiB,Y,mBAAmB,iBAAM,kDAA4hB,8CAAkB,+CAA+B,iDAA+B,a,oBAAgC,iBAAS,iDAA4F,8G,oBAA5F,iBAA0M,iDAAoC,a,gEAAqI,iBAAS,kCAAO,kCAAO,+CAAkB,oDAAmc,kCAAO,8CAA0B,a,oBAAoB,iBAAM,mDAAovF,yCAAkB,8CAA+B,a,oBAA+E,iBAAM,oDAA0K,wFAAkL,0DAA2E,wDAAc,6GAAsC,iBAAgB,+CAA8B,+CAAiC,a,4CAA6D,qBAAM,+CAAe,a,4CAAkE,0BAAgB,kCAAO,yCAA6B,6CAAmB,8BAAQ,a,oBAAmB,iBAAU,a,4CAA4D,iBAAK,kCAAO,0DAA6G,kC,qDAA96L,uGAA6gB,iEAA2C,sGAA0lB,+EAA+L,qGAA1D,4CAAkJ,sMAA6M,0EAAqc,mEAA8F,yDAAiuF,gIAAyI,sEAAuC,cAA+Q,yDAAgM,2HAAkF,gIAAiJ,yEAA6B,iIAAuF,2D,uBAAqG,6BAAgD,qDAA8B,Y,mBAAwC,iBAAe,kC,MAAxE,4CAAiB,sF,oDAAsS,gCAAwD,0FAAuC,Y,mBAAoB,iB,MAApB,0E,oDAA91W,+BAAY,4FAAmH,4CAAiB,Y,mBAA+B,iBAAM,gDAAquB,+CAA4jB,8CAAiB,a,oBAA2B,iBAAM,oDAAm5G,mDAAg/L,kDAA4I,+CAAmB,kDAAoF,wC,oBAAsF,6CAAM,a,oBAAmB,iBAAQ,kCAAU,qDAA6H,kCAAO,kC,mDAAj2W,2CAA8G,6EAAuD,yDAAytB,kDAAukB,0EAAoE,4DAAs3G,oEAAg/L,2DAAkN,kDAA4D,+EAA2D,kEAAiH,kDDwC7rY,kBAiCI,WAAoB+d,EAAgCjhB,EACxCw2B,EAAgCna,EAChCwB,EAAsCwc,EAAwBhB,EAC9D5O,EAAsC2O,GAH9B,KAAAnY,aAAgC,KAAAjhB,cACxC,KAAAw2B,iBACA,KAAA3Y,gBAAsC,KAAAwc,SAAwB,KAAAhB,cAC9D,KAAA5O,gBAAsC,KAAA2O,cA3BzC,KAAAkB,UAAW,EACX,KAAAC,YAAa,EACb,KAAAC,QAAuB,EAAAC,YAAYC,KACnC,KAAAC,KAAiB,EAAAC,SAASF,KAEzB,KAAAG,UAAY,IAAI,EAAA/R,aAChB,KAAAgS,WAAa,IAAI,EAAAhS,aAE3B,KAAAjnB,SAAmB,EACnB,KAAAy3B,YAAsB,EACtB,KAAAyB,eAAyB,EACzB,KAAAC,oBAA8B,EAC9B,KAAAC,kBAA4B,EAC5B,KAAAC,gBAA0B,EAK1B,KAAAC,aAAe,EAAAV,YAEf,KAAAW,sBAAgC,EAQ5B96B,KAAKg5B,WAAajd,EAAqBmd,a,OAGrC,YAAA14B,SAAN,W,uGACSR,KAAKg5B,WAAN,MACc,GAAMh5B,KAAK2gB,WAAWoa,Y,OAA9BC,EAAQ,SACdh7B,KAAKg7B,MAAQA,EAAMv/B,KACfuE,KAAKk6B,UAAY,EAAAC,YAAYc,YAAcj7B,KAAKk6B,UAAY,EAAAC,YAAYe,QACxEl7B,KAAKy6B,eAAgB,G,wBAIzBz6B,KAAK+xB,aACL/xB,KAAKy6B,eAAgB,EACrBz6B,KAAKm7B,wBAGTn7B,KAAKuB,SAAU,E,YAGnB,sBAAI,iCAAkB,C,IAAtB,WACI,OAA8B,MAAvBvB,KAAK2P,gB,gCAGhB,sBAAI,2BAAY,C,IAAhB,sBACI,OAAO3P,KAAKg7B,MAAMzR,MAAK,SAAA8Q,GAAQ,OAAAA,EAAKp4B,OAAS,EAAKo4B,S,gCAGtD,sBAAI,mCAAoB,C,IAAxB,WACI,OAAOr6B,KAAKo7B,aAAaC,SACnB,OACA,S,gCAGV,sBAAI,iCAAkB,C,IAAtB,sBACQC,EAAat7B,KAAKg7B,MAAMzsB,QAAO,SAAA8rB,GAAQ,OAAAA,EAAKp4B,OAAS,EAAAq4B,SAASiB,UAelE,OAbIv7B,KAAKy6B,gBACLa,EAAaA,EAAW/sB,QAAO,SAAA8rB,GAAQ,OAAAA,EAAKmB,wBAG3Cx7B,KAAKg6B,WACNsB,EAAaA,EAAW/sB,QAAO,SAAA8rB,GAAQ,OAAAA,EAAKH,UAAY,EAAAC,YAAYC,SAGxEkB,EAAaA,EACR/sB,QAAO,SAAA8rB,GAAQ,OAACA,EAAKoB,aACdpB,EAAKqB,WACLrB,EAAKgB,UAAYhB,EAAKH,UAAY,EAAKW,aAAaT,U,gCAKpE,sBAAI,8BAAe,C,IAAnB,sBACI,OAAOp6B,KAAKg7B,MAAMzsB,QAAO,SAAA8rB,GAAQ,OAACA,EAAKoB,aAAepB,EAAKqB,UAAYrB,EAAKH,UAAY,EAAKA,Y,gCAGjG,YAAAyB,8BAAA,SAA8BP,GAC1B,OAAKA,EAAaC,SAGXD,EAAaQ,4BAA8B,GAFvCR,EAAaQ,6BAK5B,YAAAC,iBAAA,SAAiBT,GACb,OAAKA,EAAaC,SAGXD,EAAaU,UAAY,GAFrBV,EAAaU,WAK5B,YAAAC,uBAAA,SAAuB1B,GACnB,OAAKA,EAAK2B,2BAIH3B,EAAKuB,4BAA8BlwB,KAAK8mB,IAAIxyB,KAAK26B,mBAAqB,GAHlE,GAMf,YAAAsB,UAAA,SAAU5B,GACN,OAAKA,EAAK6B,yBAIH7B,EAAKyB,UAAYpwB,KAAK8mB,IAAIxyB,KAAK46B,iBAAmB,GAH9C,GAMf,sBAAI,uBAAQ,C,IAAZ,WACI,IAAIuB,EAAWn8B,KAAKo7B,aAAagB,UAUjC,OATIp8B,KAAKo7B,aAAac,0BAA4Bl8B,KAAK46B,kBACnDuB,GAAYn8B,KAAKi8B,UAAUj8B,KAAKo7B,eAEhCp7B,KAAKo7B,aAAaY,4BAA8Bh8B,KAAK26B,oBACrDwB,GAAYn8B,KAAK+7B,uBAAuB/7B,KAAKo7B,eAE7Cp7B,KAAKo7B,aAAaiB,wBAA0Br8B,KAAK06B,qBACjDyB,GAAYn8B,KAAKo7B,aAAakB,0BAE3BH,G,gCAGX,sBAAI,wBAAS,C,IAAb,WACI,OAA4C,MAArCn8B,KAAKo7B,aAAamB,iB,gCAG7B,sBAAI,yBAAU,C,IAAd,WACI,OAA4B,MAArBv8B,KAAKw8B,cAAqD,MAA7Bx8B,KAAKw8B,aAAaC,QACjDz8B,KAAKw8B,aAAaC,QAAU,IAAOz8B,KAAK08B,SACzC,G,gCAGR,sBAAI,oBAAK,C,IAAT,WACI,OAAQ18B,KAAK08B,SAAW18B,KAAK28B,YAAe,G,gCAGhD,YAAAC,eAAA,WACI58B,KAAKq6B,KAAOr6B,KAAK68B,gBAAgB,GAAG56B,KAC/BjC,KAAKo7B,aAAaiB,yBACnBr8B,KAAK06B,oBAAqB,GAEzB16B,KAAKo7B,aAAaY,6BACnBh8B,KAAK26B,kBAAoB,GAExB36B,KAAKo7B,aAAac,yBAEXl8B,KAAK46B,iBAAoB56B,KAAKo7B,aAAa0B,YACnD98B,KAAKo7B,aAAac,2BAClBl8B,KAAK46B,gBAAkB,GAHvB56B,KAAK46B,gBAAkB,GAO/B,YAAAO,qBAAA,WACSn7B,KAAKy6B,gBAAiBz6B,KAAKo7B,aAAaI,sBAG7Cx7B,KAAKk6B,QAAU,EAAAC,YAAYe,MAC3Bl7B,KAAKq6B,KAAO,EAAAC,SAASyC,gBAGzB,YAAAC,eAAA,WACIh9B,KAAKi9B,iBAAiBjc,SAAiD,OAAtChhB,KAAKw8B,aAAa/T,QAAQhH,QAEvDzhB,KAAKi9B,iBAAiBjc,UACtBhhB,KAAKi9B,iBAAiBnc,SAAW,EAAAC,kBAAkBoC,cACnDnjB,KAAKi9B,iBAAiBnc,OAAS,EAAAC,kBAAkBzC,KACjDte,KAAKi9B,iBAAiBvZ,iBAI9B,YAAAwZ,OAAA,WACIl9B,KAAKw6B,WAAWrR,QAGd,YAAAiN,OAAN,W,yGACgC,OAA5B,EAAAp2B,KAA4B,GAAMA,KAAKm9B,kC,OAEvC,GAFA,EAAKrC,qBAAuB,SAExB96B,KAAK86B,qBACL,U,iBAgCA,O,sBA5BMsC,EAAW,gD,yEACT9iB,EAAgB,KAChBta,KAAKq9B,mBACY,GAAMr9B,KAAKud,cAAc+f,gBAD1C,M,OAGmB,OAFbC,EAAW,SACX3+B,EAAM2+B,EAAS,GAAGpjB,gBACL,GAAMna,KAAKud,cAAcigB,QACxCx9B,KAAKN,YAAYnB,EAAE,qBAAsBg/B,EAAS,K,OAEtC,OAHVtqB,EAAa,SAEbwqB,EAAexqB,EAAWkH,gBAChB,GAAMna,KAAKud,cAAcmgB,YAAYH,EAAS,K,cAAxDI,EAAU,SAEZ39B,KAAKg5B,WACG,GAAMh5B,KAAK49B,iBAAiBh/B,EAAK6+B,EAAcE,IADvD,M,cACArjB,EAAQ,S,aAEA,SAAMta,KAAK69B,kBAAkBj/B,EAAK6+B,EAAcE,EAASJ,EAAS,K,OAA1EjjB,EAAQ,S,wBAGZta,KAAKk2B,eAAeI,SAAS,UAAWt2B,KAAKN,YAAYnB,EAAE,uBAAwByB,KAAKN,YAAYnB,EAAE,0B,cAE9F,SAAMyB,KAAK89B,mBAAmBxjB,I,OAAtCA,EAAQ,SACRta,KAAKk2B,eAAeI,SAAS,UAAW,KAAMt2B,KAAKN,YAAYnB,EAAE,yB,mBAGrE,SAAMyB,KAAK2gB,WAAWod,wB,QACtB,OADA,SACA,GAAM/9B,KAAK+4B,YAAYO,UAAS,I,eAAhC,SACAt5B,KAAK+5B,OAAOiE,SAAS,CAAC,kBAAoB1jB,I,YAG9Cta,KAAKy2B,YAAc2G,IACnB,GAAMp9B,KAAKy2B,a,cAAX,SACAz2B,KAAKu6B,UAAUpR,O,4DAIT,YAAAgU,+BAAd,W,mEACI,MAAO,CAAP,EAAOn9B,KAAKmqB,cAAc8T,oBAAoB,EAAApnB,WAAWqnB,mBAG/C,YAAAJ,mBAAd,SAAiCxjB,G,sGAWjB,OAVNqF,EAAU,IAAI,EAAAwe,4BACZC,aAAep+B,KAAKy6B,cAAgBz6B,KAAKo+B,aAAe,KAChEze,EAAQib,gBAAkB56B,KAAK46B,gBAC/Bjb,EAAQ0e,oBAAsBr+B,KAAK26B,kBACnChb,EAAQ+a,mBAAqB16B,KAAKo7B,aAAaiB,wBAA0Br8B,KAAK06B,mBAC9E/a,EAAQ2e,SAAWt+B,KAAKo7B,aAAan5B,KACrC0d,EAAQ4e,sBAAwBv+B,KAAKw8B,aAAa/T,QAAQhH,QAC1D9B,EAAQ6e,yBAA2Bx+B,KAAKw8B,aAAa/T,QAAQf,WAGjD,GAAM1nB,KAAK84B,YAAY2F,gBAAgBz+B,KAAK2P,iB,cAA5C,SACH+uB,wBAAL,MACoB,GAAM1+B,KAAKud,cAAcE,UAAUzd,KAAK2P,iB,OAC5C,OADVgvB,EAAc,SACJ,GAAM3+B,KAAKud,cAAcmgB,YAAYiB,I,OAA/ChB,EAAU,SAChBhe,EAAQrR,KAAO,IAAI,EAAAswB,wBAAwBjB,EAAQ,GAAIA,EAAQ,GAAGxjB,iB,iBAGvD,SAAMna,KAAK2gB,WAAWke,wBAAwB7+B,KAAK2P,eAAgBgQ,I,cAA5E7iB,EAAS,UACH2Y,SAA+C,MAApC3Y,EAAOgiC,0BAA1B,MACA,GAAM9+B,KAAKi9B,iBAAiBzX,wBAAwB1oB,EAAOgiC,0BAA2B,O,OAAtF,S,iBAEJ,MAAO,CAAP,EAAO9+B,KAAK2P,wBAGF,YAAAkuB,kBAAd,SAAgCj/B,EAAa6+B,EAAsBE,EAA8BoB,G,+GACvFpf,EAAU,IAAI,EAAAqf,2BACZpgC,IAAMA,EACd+gB,EAAQsf,eAAiBxB,EACzB9d,EAAQ9hB,KAAOmC,KAAKnC,KACpB8hB,EAAQuf,aAAel/B,KAAKk/B,aAC5Bvf,EAAQrR,KAAO,IAAI,EAAAswB,wBAAwBjB,EAAQ,GAAIA,EAAQ,GAAGxjB,iBAE9Dna,KAAKo7B,aAAan5B,OAAS,EAAAq4B,SAASF,KAApC,OACAza,EAAQ2e,SAAW,EAAAhE,SAASF,K,cAER,SAAMp6B,KAAKi9B,iBAAiBxY,sB,OAA1C0a,EAAc,SAEpBxf,EAAQyf,aAAeD,EAAY,GACnCxf,EAAQ+B,kBAAoByd,EAAY,GACxCxf,EAAQye,aAAep+B,KAAKy6B,cAAgBz6B,KAAKo+B,aAAe,KAChEze,EAAQib,gBAAkB56B,KAAK46B,gBAC/Bjb,EAAQ0e,oBAAsBr+B,KAAK26B,kBACnChb,EAAQ+a,mBAAqB16B,KAAKo7B,aAAaiB,wBAC3Cr8B,KAAK06B,mBACT/a,EAAQ2e,SAAWt+B,KAAKo7B,aAAan5B,KACrC0d,EAAQ6e,yBAA2Bx+B,KAAKw8B,aAAa/T,QAAQf,WAC7D/H,EAAQ4e,sBAAwBv+B,KAAKw8B,aAAa/T,QAAQhH,QACtDzhB,KAAKw8B,aAAa/T,QAAQI,eAC1BlJ,EAAQ0f,YAAcr/B,KAAKw8B,aAAa/T,QAAQC,MAChD/I,EAAQ2f,oBAAsBt/B,KAAKw8B,aAAa/T,QAAQE,MACxDhJ,EAAQ4f,oBAAsBv/B,KAAKw8B,aAAa/T,QAAQG,MACxDjJ,EAAQ6f,mBAAqBx/B,KAAKw8B,aAAa/T,QAAQjB,KACvD7H,EAAQ8f,oBAAsBz/B,KAAKw8B,aAAa/T,QAAQhB,O,wBAI5DznB,KAAK+xB,YACC2N,EAAkB,IAAI,EAAAC,kCAAkC3/B,KAAK4/B,iBAAkBjgB,GACjE,GAAM3f,KAAKud,cAAcsiB,eAAe7/B,KAAK+xB,cAFjE,M,OAGiD,OAD3C+N,EAAc,SACpB,EAAAJ,EAAgBK,0BAAiC,GAAM//B,KAAKud,cAAcigB,QAAQuB,EAAOngC,IAAKkhC,I,OAC/E,OADf,EAA0ClhC,IAAO,SAA2Dub,gBAC7F,GAAMna,KAAK2gB,WAAWqf,+BAA+BhgC,KAAK+xB,WAAY2N,I,OAErF,MAAO,CAAP,EAFe,SAAwF/vB,gB,OAI/F,SAAM3P,KAAK2gB,WAAWsf,iBAAiBtgB,I,OAA/C,MAAO,CAAP,EAAQ,SAAiD/f,YAInD,YAAAg+B,iBAAd,SAA+Bh/B,EAAa6+B,EAAsBE,G,0GAG9D,GAFMuC,EAASj7B,SAASk7B,eAAe,QAE1B,OADPC,EAAQF,EAAOE,QACiB,IAAjBA,EAAMnkC,OACvB,MAAM,IAAIsL,MAAMvH,KAAKN,YAAYnB,EAAE,eAOtB,OAJX8hC,EAAK,IAAIC,UACZC,OAAO,UAAWH,EAAM,IAC3BC,EAAGE,OAAO,MAAO3hC,GACjByhC,EAAGE,OAAO,iBAAkB9C,GACX,GAAMz9B,KAAK2gB,WAAW6f,wBAAwBH,I,OAK/D,OALM7+B,EAAW,SACX8Y,EAAQ9Y,EAAS5B,GAGjB+f,EAAU,IAAI,EAAAif,wBAAwBjB,EAAQ,GAAIA,EAAQ,GAAGxjB,iBACnE,GAAMna,KAAK2gB,WAAW8f,qBAAqBnmB,EAAOqF,I,OAElD,OAFA,SAEO,CAAP,EAAOrF,W,iCA9TFomB,GAA0B,uU,iCAA1BA,EAA0B,+D,GAAA,M,cACxB,EAAAza,iBAAgB,G,cAChB,EAAAgE,iBAAgB,I,o2GC9C/B,uCAAkM,yDAAgrB,kDAA24W,iB,MAA9uY,+BAAkM,uEAAkvB,yE,0VDwCn8B,GAIa,EAAAyW,+B,+DAAAA,GAA0B,E,KAJtC,EAAA/9B,U,MAAU,CACP7B,SAAU,yBACV8B,YAAa,yC,6NAGgBq6B,iBAAkB,CAAF,C,KAA5C,EAAA0D,U,MAAU,EAAA1a,oBACkBuW,aAAc,CAAF,C,KAAxC,EAAAmE,U,MAAU,EAAA1W,oBAEFta,eAAgB,CAAF,C,KAAtB,EAAA3O,QACQg5B,SAAQ,E,KAAhB,EAAAh5B,QACQi5B,WAAU,E,KAAlB,EAAAj5B,QACQk5B,QAAS,CAAF,C,KAAf,EAAAl5B,QACQq5B,KAAM,CAAF,C,KAAZ,EAAAr5B,QACQ+wB,WAAY,CAAF,C,KAAlB,EAAA/wB,QACSu5B,UAAS,E,KAAlB,EAAArQ,SACSsQ,WAAU,E,KAAnB,EAAAtQ,Y,qGEtDL,YAIA,SACA,SACA,SACA,SACA,SACA,SAEA,UAGA,EAmBI,SAAY9X,GAAZ,WAUI,OATApS,KAAKiC,KAAOmQ,EAAOnQ,KACnBjC,KAAKkmB,SAAW9T,EAAO8T,SACvBlmB,KAAK2P,eAAiByC,EAAOzC,eAC7B3P,KAAKnC,KAAOuU,EAAOvU,KAAOuU,EAAOvU,KAAKsc,gBAAkB,KACxDna,KAAK4T,MAAQxB,EAAOwB,MAAQxB,EAAOwB,MAAMuG,gBAAkB,KAC3Dna,KAAK2T,SAAWvB,EAAOuB,SACvB3T,KAAK4gC,sBAAwBxuB,EAAOuU,aACpC3mB,KAAK6mB,SAAWzU,EAAOyU,SAEf7mB,KAAKiC,MACT,KAAK,EAAA+R,WAAWC,MACZjU,KAAK8T,MAAQ,IAAI,EAAA+sB,SACjB7gC,KAAK8T,MAAMoB,KAAO,KAClBlV,KAAK8T,MAAMkB,SAAW5C,EAAO0B,MAAMkB,SAAW5C,EAAO0B,MAAMkB,SAASmF,gBAAkB,KACtFna,KAAK8T,MAAMmB,SAAW7C,EAAO0B,MAAMmB,SAAW7C,EAAO0B,MAAMmB,SAASkF,gBAAkB,KACtFna,KAAK8T,MAAMqT,qBAA4D,MAArC/U,EAAO0B,MAAMqT,qBAC3C/U,EAAO0B,MAAMqT,qBAAqB8D,cAAgB,KACtDjrB,KAAK8T,MAAM4e,KAAOtgB,EAAO0B,MAAM4e,KAAOtgB,EAAO0B,MAAM4e,KAAKvY,gBAAkB,KAC1Ena,KAAK8T,MAAM6e,mBAAqBvgB,EAAO0B,MAAM6e,mBAEpB,MAArBvgB,EAAO0B,MAAMoB,OACblV,KAAK8T,MAAMoB,KAAO9C,EAAO0B,MAAMoB,KAAKrO,KAAI,SAAA8K,GACpC,IAAMJ,EAAM,IAAI,EAAAuvB,YAGhB,OAFAvvB,EAAIA,IAAe,MAATI,EAAEJ,IAAcI,EAAEJ,IAAI4I,gBAAkB,KAClD5I,EAAIpC,MAAmB,MAAXwC,EAAExC,MAAgBwC,EAAExC,MAAQ,KACjCoC,MAGf,MACJ,KAAK,EAAAyC,WAAWmB,WACZnV,KAAKoV,WAAa,IAAI,EAAA2rB,cACtB/gC,KAAKoV,WAAWnT,KAAOmQ,EAAOgD,WAAWnT,KACzC,MACJ,KAAK,EAAA+R,WAAWsK,KACZte,KAAKwS,KAAO,IAAI,EAAAwuB,QAChBhhC,KAAKwS,KAAKyI,eAA+C,MAA9B7I,EAAOI,KAAKyI,eACnC7I,EAAOI,KAAKyI,eAAed,gBAAkB,KACjDna,KAAKwS,KAAKgJ,MAA6B,MAArBpJ,EAAOI,KAAKgJ,MAAgBpJ,EAAOI,KAAKgJ,MAAMrB,gBAAkB,KAClFna,KAAKwS,KAAK+I,OAA+B,MAAtBnJ,EAAOI,KAAK+I,OAAiBnJ,EAAOI,KAAK+I,OAAOpB,gBAAkB,KACrFna,KAAKwS,KAAKC,SAAmC,MAAxBL,EAAOI,KAAKC,SAAmBL,EAAOI,KAAKC,SAAS0H,gBAAkB,KAC3Fna,KAAKwS,KAAKE,QAAiC,MAAvBN,EAAOI,KAAKE,QAAkBN,EAAOI,KAAKE,QAAQyH,gBAAkB,KACxFna,KAAKwS,KAAK0I,KAA2B,MAApB9I,EAAOI,KAAK0I,KAAe9I,EAAOI,KAAK0I,KAAKf,gBAAkB,KAC/E,MACJ,KAAK,EAAAnG,WAAWuK,SACZve,KAAKsmB,SAAW,IAAI,EAAA2a,YACpBjhC,KAAKsmB,SAAS/lB,MAAiC,MAAzB6R,EAAOkU,SAAS/lB,MAAgB6R,EAAOkU,SAAS/lB,MAAM4Z,gBAAkB,KAC9Fna,KAAKsmB,SAAS4B,UAAyC,MAA7B9V,EAAOkU,SAAS4B,UACtC9V,EAAOkU,SAAS4B,UAAU/N,gBAAkB,KAChDna,KAAKsmB,SAASc,WAA2C,MAA9BhV,EAAOkU,SAASc,WACvChV,EAAOkU,SAASc,WAAWjN,gBAAkB,KACjDna,KAAKsmB,SAAS6B,SAAuC,MAA5B/V,EAAOkU,SAAS6B,SACrC/V,EAAOkU,SAAS6B,SAAShO,gBAAkB,KAC/Cna,KAAKsmB,SAASe,SAAuC,MAA5BjV,EAAOkU,SAASe,SACrCjV,EAAOkU,SAASe,SAASlN,gBAAkB,KAC/Cna,KAAKsmB,SAASgB,SAAuC,MAA5BlV,EAAOkU,SAASgB,SACrClV,EAAOkU,SAASgB,SAASnN,gBAAkB,KAC/Cna,KAAKsmB,SAASiB,SAAuC,MAA5BnV,EAAOkU,SAASiB,SACrCnV,EAAOkU,SAASiB,SAASpN,gBAAkB,KAC/Cna,KAAKsmB,SAASkB,KAA+B,MAAxBpV,EAAOkU,SAASkB,KAAepV,EAAOkU,SAASkB,KAAKrN,gBAAkB,KAC3Fna,KAAKsmB,SAASmB,MAAiC,MAAzBrV,EAAOkU,SAASmB,MAAgBrV,EAAOkU,SAASmB,MAAMtN,gBAAkB,KAC9Fna,KAAKsmB,SAASoB,WAA2C,MAA9BtV,EAAOkU,SAASoB,WACvCtV,EAAOkU,SAASoB,WAAWvN,gBAAkB,KACjDna,KAAKsmB,SAAS7E,QAAqC,MAA3BrP,EAAOkU,SAAS7E,QACpCrP,EAAOkU,SAAS7E,QAAQtH,gBAAkB,KAC9Cna,KAAKsmB,SAASqB,QAAqC,MAA3BvV,EAAOkU,SAASqB,QACpCvV,EAAOkU,SAASqB,QAAQxN,gBAAkB,KAC9Cna,KAAKsmB,SAAShP,MAAiC,MAAzBlF,EAAOkU,SAAShP,MAAgBlF,EAAOkU,SAAShP,MAAM6C,gBAAkB,KAC9Fna,KAAKsmB,SAASsB,MAAiC,MAAzBxV,EAAOkU,SAASsB,MAAgBxV,EAAOkU,SAASsB,MAAMzN,gBAAkB,KAC9Fna,KAAKsmB,SAASuB,IAA6B,MAAvBzV,EAAOkU,SAASuB,IAAczV,EAAOkU,SAASuB,IAAI1N,gBAAkB,KACxFna,KAAKsmB,SAAStR,SAAuC,MAA5B5C,EAAOkU,SAAStR,SACrC5C,EAAOkU,SAAStR,SAASmF,gBAAkB,KAC/Cna,KAAKsmB,SAASwB,eAAmD,MAAlC1V,EAAOkU,SAASwB,eAC3C1V,EAAOkU,SAASwB,eAAe3N,gBAAkB,KACrDna,KAAKsmB,SAASyB,cAAiD,MAAjC3V,EAAOkU,SAASyB,cAC1C3V,EAAOkU,SAASyB,cAAc5N,gBAAkB,KAMvC,MAAjB/H,EAAOyB,SACP7T,KAAK6T,OAASzB,EAAOyB,OAAOhN,KAAI,SAAAmM,GAC5B,IAAMsB,EAAQ,IAAI,EAAA4sB,SAIlB,OAHA5sB,EAAMrS,KAAO+Q,EAAE/Q,KACfqS,EAAMzW,KAAOmV,EAAEnV,KAAOmV,EAAEnV,KAAKsc,gBAAkB,KAC/C7F,EAAMhW,MAAQ0U,EAAE1U,MAAQ0U,EAAE1U,MAAM6b,gBAAkB,KAC3C7F,MAIe,MAA1BlC,EAAOqU,kBACPzmB,KAAKymB,gBAAkB,GACvBrU,EAAOqU,gBAAgBpZ,SAAQ,SAAAsmB,GAC3B,EAAKlN,gBAAgBlqB,KAAK,CACtB4kC,aAAcxN,EAAGwN,aACjBlsB,SAAU0e,EAAG1e,SAAW0e,EAAG1e,SAASkF,gBAAkB,WAKxC,MAAtB/H,EAAOoU,cACPxmB,KAAKwmB,YAAc,GACnBxmB,KAAKohC,aAAe,GACpBhvB,EAAOoU,YAAYnZ,SAAQ,SAAA0qB,GACvB,IAAMsJ,EAAWtJ,EAAWsJ,SAAWtJ,EAAWsJ,SAASlnB,gBAAkB,KAC7E,EAAKqM,YAAYuR,EAAWn4B,IAAMyhC,EAClC,IAAMC,EAAoB,IAAI,EAAAC,kBAC9BD,EAAkBD,SAAWA,EACP,MAAlBtJ,EAAWn5B,MACX0iC,EAAkB1iC,IAAMm5B,EAAWn5B,IAAIub,iBAE3C,EAAKinB,aAAarJ,EAAWn4B,IAAM0hC,OAnItC,EAAAE,iB,yHCfb,aACA,SAEA,aAeI,aAPiB,KAAAC,WAAa,IAAI,EAAAC,QACjB,KAAAC,SAAW,IAAI,EAAAD,QACf,KAAAE,UAAY,IAAI,EAAAF,QAChB,KAAAG,QAAU,IAAI,EAAAH,QACd,KAAAI,SAAW,IAAI,EAAAJ,QAI5B1hC,KAAKgE,UAAYhE,KAAKyhC,WAAWM,eACjC/hC,KAAKwG,QAAUxG,KAAK2hC,SAASI,eAC7B/hC,KAAKoF,SAAWpF,KAAK4hC,UAAUG,eAC/B/hC,KAAKgiC,OAAShiC,KAAK6hC,QAAQE,eAC3B/hC,KAAKiiC,QAAUjiC,KAAK6hC,QAAQE,eA2BpC,OAxBI,YAAAG,KAAA,WACIliC,KAAK6hC,QAAQM,QAGjB,YAAAC,MAAA,WACIpiC,KAAK8hC,SAASK,QAGlB,YAAA57B,MAAA,SAAMzJ,GACFkD,KAAKqiC,WAAavlC,EAClBkD,KAAK2hC,SAASQ,KAAKrlC,IAGvB,YAAA2J,OAAA,WACIzG,KAAK4hC,UAAUO,KAAKniC,KAAKqiC,aAG7B,YAAAC,QAAA,SAAQjiC,GACJL,KAAKyhC,WAAWU,KAAK9hC,IAGzB,YAAAkiC,gBAAA,WACI,OAAOviC,KAAKoF,SAASnB,KAAK,EAAAC,SAASC,aAE3C,EA/CA,GAAa,EAAAyC,Y,mGCHb,SAAY47B,GACR,yCACA,+CACA,qCAKA,mDAKA,6DACA,mCACA,+CACA,uCACA,uCACA,iCACA,kDACA,oDACA,8CACA,kDACA,0DACA,8DACA,8BAzBJ,CAAY,EAAAA,cAAA,EAAAA,YAAW,M,s+CCAvB,WAMA,GAJA,KACA,MACA,MAEA,Q,8BAEA,aAEI,WAAoBjlB,EAAsCwb,EAAkCpY,GAAxE,KAAApD,gBAAsC,KAAAwb,cAAkC,KAAApY,a,OAEtF,YAAA8hB,0BAAN,SAAgC1Q,EAAoBpiB,G,wGACjC,SAAM3P,KAAKud,cAAcE,UAAU9N,I,OAC9B,OADdovB,EAAS,SACK,GAAM/+B,KAAKud,cAAcsiB,eAAe9N,I,OAEpC,OAFlB+N,EAAc,SAEI,GAAM9/B,KAAKud,cAAcigB,QAAQuB,EAAOngC,IAAKkhC,I,OAMpD,OANX4C,EAAkB,UAElB/iB,EAAU,IAAI,EAAAgjB,gCACZhzB,eAAiBA,EACzBgQ,EAAQ/gB,IAAM8jC,EAAgBvoB,gBAEb,GAAMna,KAAK2gB,WAAWiiB,4BAA4B7Q,EAAYpS,I,OAC/E,OADMne,EAAW,SACjB,GAAMxB,KAAK+4B,YAAYO,UAAS,I,OAChC,OADA,SACO,CAAP,EAAO93B,WAGL,YAAAqhC,oBAAN,SAA0B9Q,EAAoBpiB,G,0FAC1C,SAAM3P,KAAK2gB,WAAWmiB,2BAA2B/Q,EAAYpiB,I,OAC7D,OADA,SACA,GAAM3P,KAAK+4B,YAAYO,UAAS,I,cAAhC,S,6CApBKyJ,GAAe,iF,oCAAfA,EAAe,QAAfA,EAAe,O,EAD5B,GACa,EAAAA,mB,+DAAAA,EAAe,E,KAD3B,EAAA77B,c,4LCRD,SAAYozB,GACR,mBACA,mDACA,2CACA,6CACA,qDACA,uDACA,uBACA,2CACA,mCACA,qCACA,8CACA,gDAZJ,CAAY,EAAAA,WAAA,EAAAA,SAAQ,M,yGCApB,SAAYvZ,GACR,mBACA,iCACA,uBACA,uBACA,uBACA,mCACA,+BACA,iCACA,qBATJ,CAAY,EAAAA,oBAAA,EAAAA,kBAAiB,M,qGCA7B,WAEA,GADA,MACA,M,GAMA,K,4BAEA,aAKI,WAAoBgZ,EAAwBiJ,EAChCC,EAAqBvjC,GADjC,WAAoB,KAAAq6B,SAAwB,KAAAiJ,iBAChC,KAAAC,eAJJ,KAAAC,iBAAsB/gC,EACtB,KAAAghC,gBAAqBhhC,EAIzBnC,KAAKmjC,WAAanjC,KAAK+5B,OAAO9tB,IAC9B8tB,EAAOqJ,OAAO/9B,WAAU,SAAAiB,GACpB,GAAIA,aAAiB,EAAA+8B,cAAe,CAChC,EAAKH,YAAc,EAAKC,WACxB,EAAKA,WAAa78B,EAAM2F,IAMxB,IAJA,IAAI1L,EAAQb,EAAYnB,EAAE,YAAa,aACnC+kC,EAAkB,KAClBC,EAAmB,KACnBC,EAAQ,EAAKR,eAAeS,WAChB,MAATD,GAAe,CAClB,GAAwB,MAApBA,EAAMC,WAEH,IAA2B,MAAvBD,EAAME,SAASjoC,MAA6C,MAA7B+nC,EAAME,SAASjoC,KAAK8E,MAAe,CACzEgjC,EAAWC,EAAME,SAASjoC,KAAK8E,MAC/B,MACG,GAA2B,MAAvBijC,EAAME,SAASjoC,MAA+C,MAA/B+nC,EAAME,SAASjoC,KAAK6nC,QAAiB,CAC3EA,EAAUE,EAAME,SAASjoC,KAAK6nC,QAC9B,MAEAA,EAAU,KACVC,EAAW,KACX,MAVAC,EAAQA,EAAMC,WActB,GAAe,MAAXH,GAA+B,MAAZC,EAAkB,CACrC,IAAMI,EAAuB,MAAZJ,EAAmBA,EAAW7jC,EAAYnB,EAAE+kC,GAC7C,MAAZK,GAAiC,KAAbA,IACpBpjC,EAASojC,EAAW,MAAQpjC,GAGpC,EAAK0iC,aAAaW,SAASrjC,O,OAKvC,YAAAsjC,eAAA,WACI,OAAO7jC,KAAKkjC,aAGhB,YAAAY,eAAA,SAAe73B,GACXjM,KAAKkjC,YAAcj3B,G,iCAhDd83B,GAAa,kG,oCAAbA,EAAa,QAAbA,EAAa,O,EAD1B,GACa,EAAAA,iB,+DAAAA,EAAa,E,KADzB,EAAA78B,c,uMCVD,SAAY88B,GACR,qCADJ,CAAY,EAAAA,UAAA,EAAAA,QAAO,M,4GCAnB,SAAYC,GACR,qBACA,qBACA,mBACA,yBACA,uBALJ,CAAY,EAAAA,uBAAA,EAAAA,qBAAoB,M,0GCAhC,aAEA,QAEA,EAYI,SAAYrlC,EAAkB8d,GAC1B,GAAW,MAAP9d,EACA,MAAM,IAAI2I,MAAM,oBAGpB,GAAe,MAAXmV,EACA,GAAuB,KAAnB9d,EAAIsL,WACJwS,EAAU,EAAAI,eAAeE,kBACtB,IAAuB,KAAnBpe,EAAIsL,WAGX,MAAM,IAAI3C,MAAM,gCAFhBmV,EAAU,EAAAI,eAAeG,yBASjC,GAHAjd,KAAKpB,IAAMA,EACXoB,KAAK0c,QAAUA,EAEXA,IAAY,EAAAI,eAAeE,eAAoC,KAAnBpe,EAAIsL,WAChDlK,KAAK23B,OAAS/4B,EACdoB,KAAKkkC,OAAS,UACX,GAAIxnB,IAAY,EAAAI,eAAeC,0BAA+C,KAAnBne,EAAIsL,WAClElK,KAAK23B,OAAS/4B,EAAIS,MAAM,EAAG,IAC3BW,KAAKkkC,OAAStlC,EAAIS,MAAM,GAAI,QACzB,IAAIqd,IAAY,EAAAI,eAAeG,0BAA+C,KAAnBre,EAAIsL,WAIlE,MAAM,IAAI3C,MAAM,mCAHhBvH,KAAK23B,OAAS/4B,EAAIS,MAAM,EAAG,IAC3BW,KAAKkkC,OAAStlC,EAAIS,MAAM,GAAI,IAKhB,MAAZW,KAAKpB,MACLoB,KAAKmkC,OAAS,EAAAn8B,MAAM8B,gBAAgB9J,KAAKpB,MAE1B,MAAfoB,KAAK23B,SACL33B,KAAKokC,UAAY,EAAAp8B,MAAM8B,gBAAgB9J,KAAK23B,SAE7B,MAAf33B,KAAKkkC,SACLlkC,KAAKqkC,UAAY,EAAAr8B,MAAM8B,gBAAgB9J,KAAKkkC,UAlD3C,EAAAI,sB,yGCFb,8BACY,KAAAtU,SAAyB,GASrC,OAPI,YAAAuU,YAAA,SAAYvU,G,OACR,EAAAhwB,KAAKgwB,UAASzzB,KAAI,QAAIyzB,IAG1B,YAAAwU,YAAA,WACI,OAAOxkC,KAAKgwB,UAEpB,EAVA,GAAa,EAAAyU,qB,6+CCFb,WAYA,GANA,MAEA,KACA,KACA,KAEA,QACA,U,oCAEA,aAYI,WAAsB9jB,EAAkCjhB,EAC1Cw2B,EAA0Cna,GADlC,KAAA4E,aAAkC,KAAAjhB,cAC1C,KAAAw2B,iBAA0C,KAAAna,uBAX9C,KAAA2oB,UAAY,IAAI,EAAAlc,aAI1B,KAAAmc,sBAAwB,EAAA7lB,sBACxB,KAAAI,SAAU,EACV,KAAA0lB,QAAS,E,OAOC,YAAAC,KAAV,SAAeC,GACX9kC,KAAKw2B,mBAAqBsO,EAAatO,mBACvCx2B,KAAK4kC,QAAS,GAGF,YAAAG,OAAhB,SAAuBC,G,0FAEf,O,sBAAA,GAAMA,K,cAAN,SACAhlC,KAAK0kC,UAAUvb,MAAK,G,4DAIZ,YAAA8b,QAAhB,SAAwBnN,G,gGACF,SAAM93B,KAAK+b,qBAAqBmpB,WAAWllC,KAAKN,YAAYnB,EAAE,sBAC5EyB,KAAKN,YAAYnB,EAAE,WAAYyB,KAAKN,YAAYnB,EAAE,OAAQyB,KAAKN,YAAYnB,EAAE,MAAO,Y,OACxF,IAFkB,SAGd,U,iBAYA,O,uBARMohB,EAAU,IAAI,EAAAwlB,0BACZ3O,mBAAqBx2B,KAAKw2B,mBAClC7W,EAAQ1d,KAAOjC,KAAKiC,KAMpB,GAL2B,MAAvBjC,KAAK2P,eACK3P,KAAK2gB,WAAWykB,gCAAgCplC,KAAK2P,eAAgBgQ,GAErE3f,KAAK2gB,WAAW0kB,oBAAoB1lB,I,cAElD,SACA3f,KAAKkf,SAAU,EACflf,KAAKk2B,eAAeI,SAAS,UAAW,KAAMt2B,KAAKN,YAAYnB,EAAE,oBACjEyB,KAAK0kC,UAAUvb,MAAK,G,6FA7CVmc,GAAsB,yJ,iCAAtBA,EAAsB,kC,EAD5C,GACsB,EAAAA,0B,+DAAAA,EAAsB,E,KAD3C,EAAAzkC,a,qHAEa6jC,UAAS,E,KAAlB,EAAAxa,Y,4+CCjBL,WAUA,SACA,SAEA,S,GAEA,MACA,MACA,KAEA,M,yDAEA,aASI,WAAoBqb,EAAsCzM,EAC5CF,EAA8C4M,EACjDC,GAFS,KAAAF,eAAsC,KAAAzM,cAC5C,KAAAF,mBAA8C,KAAA4M,0BACjD,KAAAC,eAPX,KAAAlkC,SAAU,EACV,KAAAmkC,WAAY,EACZ,KAAA5wB,QAAwB,G,OAOlB,YAAAsJ,KAAN,W,0FAEI,OADApe,KAAKuB,SAAU,EACf,GAAMvB,KAAK2lC,c,cAAX,SACA3lC,KAAKuB,SAAU,EACfvB,KAAK0lC,WAAY,E,YAGf,YAAAE,aAAN,SAAmBxzB,G,2GACV,SAAMpS,KAAK6lC,eAAezzB,I,OAA/B,OAAK,UAICnQ,EAA4B,MAArBjC,KAAKgf,aAAuB,mBAAsB,EAAA8mB,iBAE/B,GAAM9lC,KAAKulC,aAAajiC,YAAYrB,EAAMjC,KAAK+lC,uBAAuB,SAACC,GAC1E,MAArB,EAAKhnB,eACJgnB,EAA6BhnB,aAAe,EAAKA,aAClDgnB,EAAKr2B,eAAiB,EAAKqP,aAAapf,IAG5ComC,EAAKzW,SAAqB,MAAVnd,EAAiB,KAAOA,EAAOxS,GAC/ComC,EAAKC,cAAc5gC,WAAU,SAAO1H,GAAa,qC,kDAE7C,OADAuoC,EAAM3/B,QACN,GAAMvG,KAAKoe,Q,cAAX,S,cAEJ4nB,EAAKG,gBAAgB9gC,WAAU,SAAO1H,GAAa,qC,kDAE/C,OADAuoC,EAAM3/B,QACN,GAAMvG,KAAKoe,Q,cAAX,S,cAEJ4nB,EAAKI,iBAAiB/gC,WAAU,SAAO1H,GAAa,qC,kDAEhD,OADAuoC,EAAM3/B,QACN,GAAMvG,KAAKoe,Q,cAAX,S,mBAtBJ,I,OA2BJ,OAtBM,EAA0B,SAAzB8nB,EAAK,KAsBL,CAAP,EAtB4B,cAyBhB,YAAAG,YAAhB,W,uGAC6B,MAArBrmC,KAAKgf,aAAL,MAGIhf,KAAKylC,eAAiBzlC,KAAKgf,aAAasnB,SACxCtmC,KAAK44B,iBAAiBa,KAAK,sBAAuB,CAAE9pB,eAAgB3P,KAAKgf,aAAapf,KAC/E,CAAP,GAAO,I,aAGW,SAAMI,KAAK84B,YAAYyN,oB,OAC7C,GADMC,EAAgB,SAClBxmC,KAAKylC,eAAiBe,EAGtB,OAFAxmC,KAAK44B,iBAAiBa,KAAK,mBAC3Bz5B,KAAKuB,SAAU,EACR,CAAP,GAAO,G,iBAGf,MAAO,CAAP,GAAO,WAGK,YAAAokC,WAAhB,W,0EACI3lC,KAAK8U,QAAU,G,WAGH,YAAA+wB,eAAhB,SAA+BloC,G,uGACpB,EAAAA,EAAEkpB,WAAa,EAAAC,mBAAmBC,MAAlC,MAA0C,GAAM/mB,KAAKwlC,wBAAwBiB,sB,SAAnC,S,iBAAjD,MAAO,CAAP,a,0EA3EKC,EAAqB,wB,GAAA,K,kBACM,EAAAC,kB,wFAFxC,GACa,EAAAD,yB,+DAAAA,EAAqB,E,KADjC,EAAA7lC,a,0IAEyEklC,sBAAuB,CAAF,C,KAA1F,EAAApF,U,MAAU,gBAAiB,CAAEiG,KAAM,EAAAD,iBAAkBE,QAAQ,S,iGCjBlE,iBAOI,WAAY7zB,GANZ,KAAAnV,KAAe,KACf,KAAAS,MAAgB,KAChB,KAAA2D,KAAkB,KAClB,KAAA6kC,UAAoB,EACpB,KAAAC,WAAqB,EAGZ/zB,IAILhT,KAAKiC,KAAO+Q,EAAE/Q,MAMtB,OAHI,sBAAI,0BAAW,C,IAAf,WACI,OAAqB,MAAdjC,KAAK1B,MAAgB,WAAa,M,gCAEjD,EAlBA,GAAa,EAAAiW,a,00DCNb,WAEA,QACA,SAgBA,GAdA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,KACA,MACA,MACA,OACA,KAEA,S,kNCnBykB,qCAA+E,Y,mBAA6C,kB,MAA7C,mG,yBAA2T,gCAA0D,YAAU,kB,uBAA9B,gCAAoB,4C,mDAAzT,6BAAiD,6CAA+B,+CAAkB,Y,mBAA2B,iBAAS,gDAA8B,wGAA2F,mDAA8E,kCAAU,kCAAO,kC,iCAA5P,wEAAkE,qDAAyB,+BAAwF,sD,yBAAuiB,gCAAmD,YAAU,kB,uBAA3B,6BAAiB,4C,mDAA1R,6BAAqD,+CAAoB,Y,mBAAmB,iBAAS,gDAAoC,4GAA8F,kDAAuE,iCAAU,kC,iCAA/O,gEAAgE,yDAA6B,2CAAuF,kD,mDAAsb,6BAA2D,gDAAiG,mHAAqC,WAAY,e,mBAAc,sCAAqD,iCAAU,iC,MAAvK,0F,mDAA6W,2BAA+G,oG,mBAA0D,sCAA6D,iC,KAApK,8E,mDAAtI,6BAAoE,6CAA2O,8CAAyH,iG,mBAAiE,sCAAsG,uC,oBAAuI,kCAAK,kC,oDAA1gB,0DAA6K,0FAAoE,oDAAiF,gDAAiK,8EAArC,mC,mDAAqkD,2BAA0D,mGAAkG,Y,mBAAqB,iB,MAArB,2E,mDAA0B,2BAA0D,uGAAiL,Y,mBAAqB,iB,MAArB,2E,yBAA3jB,0BAA8C,wC,mBAA4G,6CAAsL,6CAAqQ,kC,8BAAnf,0FAA+I,mGAA0L,2K,uGAAiL,6BAA8E,8CAAwC,8CAAuB,YAAW,iBAAQ,6DAAM,wCAAI,6CAAoH,6CAAmE,kCAAK,kCAAO,kCAAQ,oE,oBAAuE,aAAqB,iBAAQ,kDAA4F,sGAAwB,uBAAwB,W,oBAAU,wCAA+C,kCAAU,kC,iCAA3hB,8CAAwF,yEAA6K,2FAA0C,wDAAwE,mG,yBAAgpD,gCAA8D,YAAW,kB,uBAA/B,gCAAoB,oD,mDAA+B,gCAA4D,gI,mBAAkG,sCAA4D,iC,KAAvI,oE,mDAA3lD,6BAA8F,6CAA+B,+CAA2B,Y,mBAAkC,iBAAS,6CAA0B,gDAAwF,sE,oBAAxF,iBAAyN,+CAAiC,kDAA2F,6G,oBAA+C,wCAAqD,kCAAU,kDAA4F,2GAAqB,MAAO,U,oBAAS,wCAAqD,kCAAU,kCAAO,kCAAO,kCAAO,+CAA+B,+CAAqB,iDAAiC,a,oBAA4B,iBAAS,6C,oBAAwJ,wCAA2D,kCAAK,kCAAO,+CAAqB,kDAAoG,wEAAqB,+GAA+E,oDAAmF,kCAAU,oDAAoO,kCAAO,kCAAO,kC,yDAAtnD,+DAAoB,0EAAiG,8DAA+B,yDAA2F,2FAA9D,8BAAmB,2CAAuM,qFAAuD,sCAAkJ,sFAAwN,qEAA0B,mFAAsJ,wFAAgL,mEAAwB,2DAA+B,gCAAqB,2CAAqG,yDAA8L,sE,yBAA3qD,6BAA4C,iDAAiwD,2C,8BAAluD,2DAAsB,mC,mDAA4tD,2BAAyB,0FAAuF,sCAA2D,Y,mBAAoB,iB,MAApB,0E,2IAApkM,6BAAwD,6CAAkB,6CAA+B,+CAA2B,Y,mBAAqB,iBAAS,8CAA0B,iDAAiF,kHAAjF,iBAAiL,iDAAiS,kCAAO,kCAAO,+CAA+B,+CAAqB,iDAA2B,a,oBAAqB,iBAAS,mDAAkuB,kCAAO,+CAA0B,iDAAkI,kHAAlI,iBAAsR,+CAAiC,kDAAqG,kG,oBAA8D,wCAAgH,kCAAU,kDAAiG,mHAAqC,WAAY,e,oBAAgD,wCAAqD,kCAAU,kCAAO,kCAAO,kCAAO,kCAAO,+CAAkB,+CAA+B,iDAAuB,a,oBAAiC,iBAAS,iDAAiI,8GAAjI,iBAAqP,kCAAO,+CAAwF,iDAA4lB,mDAA+qB,kCAAO,kCAAO,0DAA6zD,+CAAoM,2C,iCAAz9L,mEAAyI,+DAAmC,2CAA8F,wDAA6V,oEAA2D,qEAAoyB,gFAAoE,gDAAmC,mEAA0M,+FAAwE,gDAA0E,8FAA2I,2FAAuG,gDAAsM,iFAAgE,uFAA2G,4CAA+B,mEAAsJ,0EAAoC,sEAA4lB,oEAAssB,2DAAu3D,sE,0BAA2sB,gCAA+D,YAAU,kB,uBAA9B,gCAAoB,4C,0BAA6pC,gCAAkE,YAAU,kB,uBAA9B,gCAAoB,4C,oDAA91D,6BAAuD,6CAAkB,6CAA+B,+CAAgC,Y,mBAA2B,iBAAS,gDAA+F,uHAA/F,iBAAmL,kCAAO,+CAA+B,iDAAuB,a,oBAAkB,iBAAS,kDAA8D,8GAA2E,qDAAmF,kCAAU,kCAAO,kCAAO,+CAAkB,+CAA+B,iDAAwB,a,oBAAmB,iBAAS,+CAA0B,iDAA8H,+GAA9H,iBAAuP,+CAAiC,kDAAqG,oG,oBAA8B,wCAAoH,kCAAU,kDAA+F,gHAAkC,SAAU,a,oBAAY,wCAAqD,kCAAU,kCAAO,kCAAO,kCAAO,+CAA6B,iDAA0B,a,oBAA4B,iBAAS,kDAAoE,iHAA8E,qDAAsF,kCAAU,kCAAO,+CAA6B,iDAAyB,a,oBAA2B,iBAAS,iDAA6E,gH,oBAA7E,iBAA6L,kCAAO,kCAAO,+CAAkB,+CAA+B,kDAAsB,a,oBAAyB,iBAAS,+CAA0B,kDAAwH,6GAAxH,iBAA+O,+CAAiC,kDAAqG,kG,oBAA4B,wCAAgH,kCAAU,kDAAiG,8GAAgC,eAAgB,oB,oBAAmB,0CAAqD,mCAAU,mCAAO,mCAAO,mCAAO,mCAAO,4C,iCAA76F,yEAAmI,oEAAwC,2CAAyG,iEAAyF,2DAA+B,2CAAkE,0DAA8J,mEAAiH,kFAAmE,6CAAgC,2CAAkL,+FAAkH,kGAA+I,yFAA0O,4EAAyG,8DAAkC,2CAAkE,6DAAuI,0EAAmJ,4FAAlC,8CAAiC,2CAAoK,yEAAqH,gFAA+D,2CAA8B,2CAAkL,+FAAgH,8FAA2I,4F,0BAAkgB,gCAAmE,YAAU,kB,uBAA9B,gCAAoB,4C,oDAA9W,6BAA2D,6CAAkB,8CAA+B,gDAAqB,Y,mBAAkB,iBAAS,kDAAgE,kHAA+E,qDAAuF,kCAAU,kCAAO,kCAAO,+CAAkB,gDAA+B,kDAAyB,a,oBAAsB,iBAAS,kDAAmF,sHAAnF,iBAAsK,kCAAO,gDAA+B,kDAA0B,a,oBAAuB,iBAAS,kDAAqF,uHAArF,iBAAyK,kCAAO,gDAA+B,kDAAwB,a,oBAAqB,iBAAS,kDAAiF,qHAAjF,iBAAmK,kCAAO,kCAAO,+CAAkB,gDAA+B,kDAAwB,a,oBAAqB,iBAAS,kDAAiF,qHAAjF,iBAAoL,kCAAO,gDAA+B,kDAAuB,a,oBAAoB,iBAAS,kDAA+E,oHAA/E,iBAAgK,kCAAO,kCAAO,+CAAkB,gDAA+B,kDAAmB,a,oBAAgB,iBAAS,kDAAuE,gHAAvE,iBAAqK,kCAAO,gDAA+B,kDAA8B,a,oBAA2B,iBAAS,kDAA6F,2HAA7F,iBAAsM,kCAAO,gDAA+B,kDAA6B,a,oBAA0B,iBAAS,kDAA2F,0HAA3F,iBAAmM,kCAAO,kCAAO,+CAAkB,gDAA+B,oDAAqB,c,qBAAkB,iBAAS,oDAA2E,kHAA3E,iBAA2K,mCAAO,iDAA+B,oDAAqB,c,qBAAkB,iBAAS,oDAA2E,kHAA3E,iBAA0J,mCAAO,mCAAO,iDAAkB,iDAA+B,oDAAwB,c,qBAAqB,iBAAS,oDAAiF,qHAAjF,iBAAmK,mCAAO,iDAA+B,oDAAwB,c,qBAAqB,iBAAS,oDAAiF,qHAAjF,iBAAmK,mCAAO,mCAAO,iDAAkB,iDAA+B,oDAAwB,c,qBAAqB,iBAAS,oDAAiF,qHAAjF,iBAAmK,mCAAO,iDAA+B,oDAAoB,c,qBAAqB,iBAAS,oDAAyE,iHAAzE,iBAAuJ,mCAAO,mCAAO,iDAAkB,iDAA+B,oDAAqB,c,qBAA0B,iBAAS,oDAA2E,kHAA3E,iBAA0J,mCAAO,iDAA+B,oDAA0B,c,qBAA0B,iBAAS,oDAAqF,uHAArF,iBAAyK,mCAAO,mCAAO,iDAAkB,iDAA+B,oDAAuB,c,qBAAoB,iBAAS,oDAA+E,oHAA/E,iBAAgK,mCAAO,mCAAO,4C,iCAAhyJ,gEAA2F,+DAAmC,2CAAkE,8DAAmK,sEAAkH,mEAAuC,2CAA4G,sEAAqH,oEAAwC,2CAA0G,oEAA+G,kEAAsC,2CAAmI,oEAA+G,kEAAsC,2CAA0H,mEAA4G,iEAAqC,2CAA8H,+DAAgG,6DAAiC,2CAAiI,0EAAiI,wEAA4C,2CAAgI,yEAA8H,uEAA2C,2CAAiJ,kEAAsG,+DAAmC,2CAAwH,kEAAsG,+DAAmC,2CAAmI,qEAA+G,kEAAsC,2CAA0G,qEAA+G,kEAAsC,2CAAmI,qEAA+G,kEAAsC,2CAAsG,qEAAuG,8DAAkC,2CAAgI,0EAA8G,+DAAmC,2CAA4G,0EAAwH,oEAAwC,2CAAkI,oEAA4G,iEAAqC,4C,0BAA8yB,gCAA+D,YAAU,kB,uBAA9B,gCAAoB,4C,oDAA5b,6BAAkD,4CAAiB,Y,mBAAsB,iBAAM,6CAAkB,8CAAoB,iDAA4B,a,oBAA4B,iBAAS,mDAAuE,kHAAmC,2FAA6E,qDAAmF,kCAAU,kCAAO,kCAAO,2C,iCAAra,mEAA8F,0EAA4G,+DAAmC,2CAAmG,2D,uBAA6N,0BAAkD,Y,mBAAiC,kB,MAAjC,uF,0BAAiG,6BAAsE,gDAAgD,0EAAhD,iBAA0K,gDAAuD,YAAU,iBAAS,kC,sDAA5K,iEAAsB,6DAA9C,kCAAuB,2CAAmI,kEAAuB,4C,0BAAhW,6BAAyD,iDAAiU,2C,8BAA3R,sD,0BAAjT,6BAAyE,4CAAiB,Y,mBAAwB,iBAAM,gDAA0F,yDAA0Y,2C,8BAAlgB,qEAAoC,0EAAmG,yE,0BAAkkB,0BAA+B,4CAAgC,Y,mBAAiC,iBAAK,Y,mBAAuD,kB,8BAA7F,qFAAsC,+G,oDAA8D,0BAAiC,4CAAgC,Y,mBAA6B,iBAAK,4CAAyB,+F,mBAAmD,YAAkC,iBAAK,iC,iCAArJ,iFAAmF,0EAA2B,8E,0BAAgG,0BAAgD,Y,mBAAqC,+BAAmD,YAAe,iBAAQ,kC,uBAA/G,yFAAwF,gD,0BAA1L,8BAAkD,iDAAsK,kC,8BAAlJ,iE,0BAA7nB,6BAAgC,8CAAoC,0CAAM,4CAAgC,Y,mBAAyB,iBAAK,Y,oBAAwC,iBAAO,kDAAmK,mDAA6N,mDAA+N,kCAAO,4C,8BAAnrB,6EAA8B,gGAAqD,uDAAmK,yDAA0O,8D,oDAAtsiB,6BAAwC,uDAA2I,gDAAqW,6CAAkB,6CAA+B,gDAAkB,a,oBAAiB,iBAAS,iDAA8D,uGAA9D,iBAA4I,kCAAO,kDAA+T,kCAAO,6DAA6mM,8DAAqkG,8DAAi7J,+CAAyB,iDAAmB,a,oBAAkB,iBAAS,oDAA2C,wGAA0F,iBAAY,kCAAO,4EAAoG,kCAAoC,4DAAwf,4DAA4mB,6DAA6yB,+CAAe,8CAAiB,a,oBAAoB,iBAAM,+CAAyB,iDAAqE,mGAArE,iBAAuL,iDAAqD,a,oBAA2B,iBAAS,6C,oBAA4J,wCAA2D,kCAAK,kCAAO,2CAAgB,kC,gCAA77jB,mFAAmI,6DAAsZ,gEAAwF,qDAAyB,2CAA2F,oDAAsT,uEAA6mM,sEAAqkG,0EAA88J,iEAAsE,sDAA0B,2CAAqH,+CAAiB,sBAAjB,CAAiB,uBAAoG,iEAAwf,wFAA4mB,+CAA8zB,mEAAmG,kDAAoB,2CAAwK,0EAAsE,yF,0BAAmP,iCAAsG,uC,mBAAsF,2CAAM,Y,mBAAmD,iBAAQ,kC,gDAApM,mCAA8E,6EAA2D,4G,4GAA0P,gCAAiE,kG,mBAAyH,sCAAoH,iC,iCAA7L,qGAA6F,qG,oDAA0G,qCAAiC,0F,mBAA8N,uCAA0F,uC,mBAAgI,iC,oDAAtY,2GAA6G,mCAA8B,gCAAsE,gDAAgI,6EAA9B,mC,0BAAhvB,8BAAkD,oDAAwT,qDAAme,kC,6BAAlxB,yEAAid,8DDsBx9mB,mBAkBI,WAAYyyB,EAA8BC,EACtCvnC,EAA0Bqc,EAC1BmrB,EAA4BppB,EAC5Bgb,EAA0BqO,EAChBC,EAAoCC,EACpCzO,EAAoC0O,EACpCnd,GANd,MAOI,YAAM6c,EAAeC,EAAevnC,EAAaqc,EAAsBmrB,EAAcppB,EACjFgb,EAAaqO,EAAmBvO,EAAkB0O,EAAcnd,IAAc,K,OAJxE,EAAAid,cAAoC,EAAAC,4BACpC,EAAAzO,mBACA,EAAAzO,gBAbd,EAAAod,kBAAmB,EACnB,EAAAC,oBAAqB,EACrB,EAAAC,wBAAyB,EACzB,EAAAC,UAAW,E,SAVuB,OAyB5B,YAAAlnC,SAAN,W,yGACI,SAAM,YAAMA,SAAQ,Y,OACpB,OADA,SACA,GAAMR,KAAKoe,Q,OAKa,OALxB,SACApe,KAAKunC,iBAA8D,MAA3CvnC,KAAKoS,OAAOu1B,4BACpC3nC,KAAKwnC,mBAAqBxnC,KAAKoS,OAAOo1B,mBACtCxnC,KAAK4nC,UAEL,EAAA5nC,KAAwB,GAAMA,KAAK84B,YAAYyN,oB,cAA/C,EAAKA,iBAAmB,SACpBvmC,KAAKoS,OAAOnQ,OAAS,EAAA+R,WAAWC,OAASjU,KAAKoS,OAAO0B,MAAM4e,OAC1D1yB,KAAKoS,OAAO+T,qBAAuBnmB,KAAKumC,kBACzC,GAAMvmC,KAAK6nC,kBAFX,M,OAIA,OAFA,SACM,EAAW7nC,KAAKonC,YAAYU,gBAAgB9nC,KAAKoS,OAAO0B,MAAM4e,MACpE,GAAM1yB,KAAK+nC,SAAS,I,OAApB,SAEA/nC,KAAKgoC,aAAe7oC,OAAO8oC,aAAY,gD,kDACnC,SAAMjoC,KAAK+nC,SAAS,I,cAApB,S,aACD,K,mCAIX,YAAAG,eAAA,WACIloC,KAAKoS,OAAOuB,UAAY3T,KAAKoS,OAAOuB,UAGxC,YAAAw0B,OAAA,SAAO52B,GACEA,EAAIuhB,WAIT9yB,KAAK+b,qBAAqBgX,UAAUxhB,EAAIwhB,YAG5C,YAAAqV,KAAA,SAAK9pC,EAAe+pC,EAAqBC,GACxB,MAAThqC,IAIJ0B,KAAK+b,qBAAqBwsB,gBAAgBjqC,EAAO,CAAEa,OAAQA,SAC3Da,KAAK+b,qBAAqBK,UAAU,OAAQ,KACxCpc,KAAKN,YAAYnB,EAAE,cAAeyB,KAAKN,YAAYnB,EAAE8pC,KAErDroC,KAAKwoC,WACe,aAAhBH,EACAroC,KAAKsnC,aAAamB,QAAQ,EAAA3c,UAAUoB,uCAAwCltB,KAAKuvB,UAC1D,iBAAhB8Y,EACProC,KAAKsnC,aAAamB,QAAQ,EAAA3c,UAAUwB,4BAA6BttB,KAAKuvB,UACrD,YAAV+Y,GACPtoC,KAAKsnC,aAAamB,QAAQ,EAAA3c,UAAUsB,+BAAgCptB,KAAKuvB,aAK/E,YAAAmZ,iBAAN,W,oGACsB,SAAM,YAAMA,iBAAgB,Y,cAAxCC,EAAY,UAEG,GAAM3oC,KAAKqnC,0BAA0BuB,cADtD,M,OAE6B,OADvBj4B,EAAW,SAAmD,GACpE,EAAA3Q,KAAKoS,OAAO0B,MAAiB,GAAM9T,KAAKqnC,0BAA0BqB,iBAAiB/3B,I,OAAnF,EAAkBsE,SAAW,S,iBAEjC,MAAO,CAAP,EAAO0zB,WAGX,YAAAE,gBAAA,WACS7oC,KAAKumC,kBACNvmC,KAAK44B,iBAAiBa,KAAK,oBAKnC,YAAAqP,oBAAA,WACI9oC,KAAK44B,iBAAiBa,KAAK,sBAAuB,CAAE9pB,eAAgB3P,KAAKoS,OAAOzC,kBAGpF,YAAAo5B,YAAA,WACI/oC,KAAKynC,wBAA0BznC,KAAKynC,wBAG9B,YAAAG,QAAV,WACQ5nC,KAAKgoC,cACL7oC,OAAO6pC,cAAchpC,KAAKgoC,eAIlB,YAAAH,eAAhB,W,kGACI,OAAmB,MAAf7nC,KAAKoS,QAAkBpS,KAAKoS,OAAOnQ,OAAS,EAAA+R,WAAWC,OAAmC,MAA1BjU,KAAKoS,OAAO0B,MAAM4e,MAC9E1yB,KAAKgoC,cACL7oC,OAAO6pC,cAAchpC,KAAKgoC,cAE9B,MAGJ,EAAAhoC,KAAgB,GAAMA,KAAKonC,YAAY6B,QAAQjpC,KAAKoS,OAAO0B,MAAM4e,Q,cAAjE,EAAKwW,SAAW,SACK,MAAjBlpC,KAAKkpC,SACDlpC,KAAKkpC,SAASjtC,OAAS,GACjBktC,EAAOz9B,KAAK6mB,MAAMvyB,KAAKkpC,SAASjtC,OAAS,GAC/C+D,KAAKopC,kBAAoBppC,KAAKkpC,SAASt3B,UAAU,EAAGu3B,GAAQ,IAAMnpC,KAAKkpC,SAASt3B,UAAUu3B,IAE1FnpC,KAAKopC,kBAAoBppC,KAAKkpC,UAGlClpC,KAAKopC,kBAAoB,KACrBppC,KAAKgoC,cACL7oC,OAAO6pC,cAAchpC,KAAKgoC,e,YAK5B,YAAAqB,yBAAV,WACI,QAASrpC,KAAKwoC,UAAYxoC,KAAKspC,YAAuC,MAAzBtpC,KAAKupC,mBAC1CvpC,KAAKupC,iBAAiBttC,OAAS,IAAM+D,KAAKwpC,gBAGxC,YAAAzB,SAAd,SAAuB0B,G,yGACbC,EAAQh+B,KAAKi+B,OAAM,IAAItf,MAAOW,UAAY,KAC1C4e,EAAMF,EAAQD,EAEpBzpC,KAAK6pC,QAAUJ,EAAkBG,EACjC5pC,KAAK8pC,WAAap+B,KAAKi+B,MAAS,KAAOF,EAAmBG,EAAO,OAAiB,OAClF5pC,KAAK+pC,QAAU/pC,KAAK6pC,SAAW,EACnB,IAARD,EAAA,MACA,GAAM5pC,KAAK6nC,kB,OAAX,S,oEAhJC/B,GAAgB,of,iCAAhBA,EAAgB,k/SC1B7B,4BAA4G,4CAA4E,+CAAkC,2CAAY,EAAA1P,YAA4E,4CAA2B,2CAAgD,aAAS,iBAAM,iD,oBAA4F,+CAAyB,iBAAO,iBAAQ,kCAAU,kCAAO,mDAAsgkB,8CAA2B,qDAAuQ,kDAA8E,a,oBAA2C,iBAAU,kDAAo1B,kCAAO,kCAAQ,kCAAO,kCAAO,kB,MAA7knB,0DAA6I,4CAAwE,mFAAqH,6CAA4lkB,gDAAiQ,6FAA2E,4D,ydDsBl+lB,CAIsC,oBAAzB,EAAA0P,qB,+DAAAA,GAAgB,E,KAJ5B,EAAAnjC,U,MAAU,CACP7B,SAAU,qBACV8B,YAAa,+B,6bElBjB,mBAAsB,EAAAonC,iB,00DCNtB,WAmBA,GAXA,MAEA,MACA,MACA,KACA,MACA,KACA,MACA,OACA,KAEA,SAEA,SACA,QACA,S,mKCvB6sB,6BAAyD,sC,mBAAsF,8CAAsB,Y,mBAAmB,iBAAQ,2C,MAArG,4EAA0E,iE,sBAAyO,6BAAgD,sC,mBAA+H,8CAAsB,Y,mBAA+B,iBAAQ,2C,MAA7H,wFAAsF,6E,yBAAnY,6BAAwC,sC,mBAAgG,8CAAsB,Y,mBAAwB,iBAAQ,uDAA4P,4C,4DAA3W,iFAA+E,qEAA+C,gE,mDAAq9B,2BAA+C,yIAAmC,WAAY,eAAqC,sCAAqD,Y,mBAA0B,iB,MAA1B,gF,mDAA+B,2BAA+C,qIAA+B,uBAAwB,WAA2C,sCAAqD,Y,mBAAkC,iB,MAAlC,wF,mDAAuC,2BAAyE,8IAAqC,sCAA8D,Y,mBAAoB,iB,MAApB,0E,mDAAn3B,6BAAmE,2CAA+C,wIAAmC,WAAY,eAAc,sCAAqD,Y,mBAA0B,iBAAK,6CAAuN,8CAA6O,+CAAqM,2C,+DAAxqB,+EAA2I,mDAA2N,+DAA6K,uD,mDAAqU,2BAA8H,4HAAoB,sCAAuD,Y,mBAAmB,iB,MAAnB,yE,mDAAwB,2BAA0G,4HAAoB,sCAAoE,Y,mBAAgC,iB,MAAhC,sF,mDAAqC,2BAAwF,kIAA0B,sCAAqD,Y,mBAAyB,iB,MAAzB,+E,mDAA8B,2BAAwF,6HAAqB,sCAA2D,Y,mBAAuB,iB,MAAvB,6E,mDAA4B,2BAA+C,8HAA0C,sCAAoD,Y,mBAAqB,iB,MAArB,2E,mDAAzjH,yBAAuC,2CAAI,kHAAsD,8CAAuB,0EAAvB,iBAA4D,iCAAM,2CAAI,kHAAkD,kDAA+C,kCAAM,6CAAI,kHAAkD,6CAAqC,mH,oBAAwD,aAAU,iBAAK,yDAAgN,0DAA0c,sCAAK,iDAAmB,aAAc,iBAAS,kCAAM,8CAAgC,+CAAuC,kD,oBAAuM,wCAAmD,kCAAU,+CAAqF,0DAA45B,6CAA+C,kHAA0B,wCAAyD,a,oBAAyB,iBAAK,+CAAiO,+CAAuO,+CAAqM,+CAAoM,+CAAuK,6CAA2D,6GAAqB,wCAAuD,a,oBAA0D,iBAAK,kCAAO,kCAAO,kCAAM,kC,+CAArrH,iDAAiH,wCAA0J,gFAA8B,2CAA8B,sEAAgN,qDAAmd,+CAAsQ,sFAAsM,8EAA+gC,gFAA8E,uGAAiO,qFAAuO,mEAAqM,qEAAyN,gDAAyO,4G,mDAAv6H,8BAA4K,+FAAyB,4CAAQ,+CAAmzH,iCAAS,iC,yDAAj6H,yCAA4B,wCAA2F,0C,sBAA02H,6BAA+B,sC,mBAAiG,8CAAsB,Y,mBAAoB,iBAAQ,2C,MAAvG,6EAA2E,kE,mDAA4G,gCAAQ,6FAA0E,sCAAgC,Y,mBAAoB,iB,MAApB,kE,yBAAlL,6BAA8B,wCAAG,Y,mBAA0B,iBAAK,kDAAgJ,2C,8BAA/K,uEAA8F,kD,yBAAxX,6BAAuD,uDAAkM,uDAAgO,kC,8BAAnZ,8CAAkM,8C,yBAA12I,6BAAgF,gDAAkhI,8CAAge,2C,kBAAv7I,6CAA8+H,+CD2BznI,IAEA,cAqBI,WAAYC,EAAwC/T,EACtCx2B,EAAoCqc,EACpCirB,EAAwCM,EACxCF,EAAoCtO,EACpC0M,GAJd,MAKI,YAAMyE,IAAc,K,OAL4B,EAAA/T,iBACtC,EAAAx2B,cAAoC,EAAAqc,uBACpC,EAAAirB,gBAAwC,EAAAM,eACxC,EAAAF,cAAoC,EAAAtO,cACpC,EAAA0M,0BApBL,EAAA0E,YAAa,EACZ,EAAAC,qBAAuB,IAAI,EAAA3hB,aAC3B,EAAA4hB,eAAiB,IAAI,EAAA5hB,aACrB,EAAA6hB,qBAAuB,IAAI,EAAA7hB,aAC3B,EAAA8hB,eAAiB,IAAI,EAAA9hB,aAE/B,EAAA+hB,aAA6B,GAC7B,EAAAC,SAAW,IACX,EAAAC,WAAa,EAAAz2B,WAEb,EAAA02B,sBAAuB,EAEf,EAAAC,WAAY,EACZ,EAAAC,kBAAoB,EACpB,EAAAC,YAAa,E,SAfa,OAyB5B,YAAArqC,SAAN,W,gGACgC,OAA5B,EAAAR,KAA4B,GAAMA,KAAK84B,YAAYyN,oB,cAAnD,EAAKmE,qBAAuB,S,YAGhC,YAAAnnB,YAAA,WACIvjB,KAAK8qC,WAAU,IAGnB,YAAAC,SAAA,WACI,KAAI/qC,KAAK8U,QAAQ7Y,QAAU+D,KAAKwqC,UAAhC,CAGA,IAAMQ,EAAchrC,KAAKuqC,aAAatuC,OAClCgvC,EAAYjrC,KAAKwqC,SACjBxqC,KAAK6qC,YAA8B,IAAhBG,GAAqBhrC,KAAK4qC,kBAAoB5qC,KAAKwqC,WACtES,EAAYjrC,KAAK4qC,mBAEjB5qC,KAAK8U,QAAQ7Y,OAAS+uC,IACtBhrC,KAAKuqC,aAAevqC,KAAKuqC,aAAaruB,OAAOlc,KAAK8U,QAAQzV,MAAM2rC,EAAaA,EAAcC,KAE/FjrC,KAAK4qC,kBAAoB5qC,KAAKuqC,aAAatuC,OAC3C+D,KAAK2qC,UAAY3qC,KAAKuqC,aAAatuC,OAAS+D,KAAKwqC,WAG/C,YAAAU,QAAN,W,0FAGQ,O,sBADAlrC,KAAK6qC,YAAa,EAClB,GAAM7qC,KAAKmrC,OAAOnrC,KAAKuO,OAAQvO,KAAKorC,U,cAApC,S,oBAEAprC,KAAK6qC,YAAa,E,6BAI1B,YAAAQ,SAAA,WACI,IAAMC,EAAYtrC,KAAKurC,cAIvB,OAHID,GAAatrC,KAAK2qC,WAClB3qC,KAAKwrC,eAEDF,GAAatrC,KAAK8U,QAAQ7Y,OAAS+D,KAAKwqC,UAG9C,YAAAgB,YAAN,W,0EACIxrC,KAAKuqC,aAAe,GACpBvqC,KAAK+qC,W,WAGH,YAAAU,SAAN,SAAeC,G,gGACI,OAAf,EAAA1rC,KAAe,GAAMA,KAAKiqC,cAAc0B,cAAc3rC,KAAKggB,WAAY,CAAChgB,KAAKuO,OAAQvO,KAAK4rC,eAAgBF,I,cAA1G,EAAK52B,QAAU,SACf9U,KAAKwrC,c,YAGT,YAAArD,OAAA,SAAO52B,GACHvR,KAAK+b,qBAAqBgX,UAAUxhB,IAGlC,YAAAiV,YAAN,SAAkB7oB,G,0FACT,SAAMqC,KAAK6lC,eAAeloC,I,OAA/B,OAAK,UAGLqC,KAAKmqC,qBAAqBhhB,KAAKxrB,G,KAF3B,YAKF,YAAAkuC,MAAN,SAAYluC,G,0FACH,SAAMqC,KAAK6lC,eAAeloC,I,OAA/B,OAAK,UAGLqC,KAAKoqC,eAAejhB,KAAKxrB,G,KAFrB,YAKR,YAAAmV,YAAA,SAAYnV,GACRqC,KAAKqqC,qBAAqBlhB,KAAKxrB,IAG7B,YAAAmuC,MAAN,SAAYnuC,G,0FACH,SAAMqC,KAAK6lC,eAAeloC,I,OAA/B,OAAK,UAGLqC,KAAKsqC,eAAenhB,KAAKxrB,G,KAFrB,YAKF,YAAAouC,OAAN,SAAapuC,G,gGACJ,SAAMqC,KAAK6lC,eAAeloC,I,OAA/B,OAAK,SAGqB,MAAtBqC,KAAKgsC,cACL,KAEEC,EAAYtuC,EAAEuuC,UACF,GAAMlsC,KAAK+b,qBAAqBmpB,WAC9CllC,KAAKN,YAAYnB,EAAE0tC,EAAY,oCAAsC,0BACrEjsC,KAAKN,YAAYnB,EAAE0tC,EAAY,wBAA0B,cACzDjsC,KAAKN,YAAYnB,EAAE,OAAQyB,KAAKN,YAAYnB,EAAE,MAAO,aATrD,I,OAUJ,IAJkB,SAKd,MAAO,CAAP,GAAO,G,iBAKP,O,sBADAyB,KAAKgsC,cAAgBhsC,KAAKmsC,aAAaxuC,EAAEiC,GAAIqsC,GAC7C,GAAMjsC,KAAKgsC,e,cAAX,SACAhsC,KAAKk2B,eAAeI,SAAS,UAAW,KAAMt2B,KAAKN,YAAYnB,EAAE0tC,EAAY,yBACvE,gBACNjsC,KAAKkrC,U,iDAETlrC,KAAKgsC,cAAgB,K,YAGnB,YAAAI,QAAN,SAAczuC,G,0FACV,OAA0B,MAAtBqC,KAAKgsC,eAA0BruC,EAAEuuC,UAGnB,GAAMlsC,KAAK+b,qBAAqBmpB,WAC9CllC,KAAKN,YAAYnB,EAAE,2BACnByB,KAAKN,YAAYnB,EAAE,eACnByB,KAAKN,YAAYnB,EAAE,OAAQyB,KAAKN,YAAYnB,EAAE,MAAO,YALrD,I,OAMJ,IAJkB,SAKd,MAAO,CAAP,GAAO,G,iBAKP,O,sBADAyB,KAAKgsC,cAAgBhsC,KAAKgnC,cAAcqF,kBAAkB1uC,EAAEiC,IAC5D,GAAMI,KAAKgsC,e,cAAX,SACAhsC,KAAKk2B,eAAeI,SAAS,UAAW,KAAMt2B,KAAKN,YAAYnB,EAAE,iBACjEyB,KAAKkrC,U,iDAETlrC,KAAKgsC,cAAgB,K,YAGnB,YAAA5D,KAAN,SAAWh2B,EAAoB9T,EAAe+pC,EAAqBC,G,uGAC3D,EAAAtoC,KAAKwlC,wBAAwB8G,kBAAkBC,SAASjE,IAAW,GAAMtoC,KAAK6lC,eAAezzB,IAA7F,M,OAAkE,GAAC,S,iBAAvE,OAAI,IAIS,MAAT9T,GAA2B,SAAVgqC,IAAqBtoC,KAAKwsC,sBAAsBp6B,IAHjE,IAGA,M,cAEO9T,IAAU8T,EAAO0B,MAAM4e,KAAvB,MACC,GAAM1yB,KAAKonC,YAAY6B,QAAQ3qC,I,OAAvCA,EAAQ,S,iBAGZ,OAAK8T,EAAOiU,cAIZrmB,KAAK+b,qBAAqBwsB,gBAAgBjqC,EAAO,CAAEa,OAAQA,SAC3Da,KAAKk2B,eAAeI,SAAS,OAAQ,KACjCt2B,KAAKN,YAAYnB,EAAE,cAAeyB,KAAKN,YAAYnB,EAAE8pC,KAErC,aAAhBA,GAA8C,yBAAhBA,EAC9BroC,KAAKsnC,aAAamB,QAAQ,EAAA3c,UAAUoB,uCAAwC9a,EAAOxS,IAC5D,iBAAhByoC,GACProC,KAAKsnC,aAAamB,QAAQ,EAAA3c,UAAUwB,4BAA6Blb,EAAOxS,I,KAVxE,YAcR,YAAAkrC,UAAA,SAAU2B,GACFA,GACAzsC,KAAK8qC,WAAU,GAKnB,IAHA,IAAM4B,EAAcD,GAAUzsC,KAAK8U,QAAQ7Y,OA5L3B,QA8LV+D,KAAK8U,QAAQ7Y,OACVF,EAAI,EAAGA,EAAI2wC,EAAa3wC,IAC7BiE,KAAK2sC,YAAY3sC,KAAK8U,QAAQ/Y,GAAI0wC,IAI1C,YAAAE,YAAA,SAAYhvC,EAAe8uC,GACtB9uC,EAAUivC,QAAoB,MAAVH,GAAmB9uC,EAAUivC,QAAUH,GAGhE,YAAAI,YAAA,WACI,OAAoB,MAAhB7sC,KAAK8U,QACE,GAEJ9U,KAAK8U,QAAQvG,QAAO,SAAA5Q,GAAK,QAAGA,EAAUivC,YAGjD,YAAAE,eAAA,WACI,OAAO9sC,KAAK6sC,cAAchmC,KAAI,SAAAlJ,GAAK,OAAAA,EAAEiC,OAGzC,YAAA4sC,sBAAA,SAAsBp6B,G,QAClB,OAA8B,QAAvB,EAAc,QAAd,EAACA,aAAM,EAANA,EAAQ0B,aAAK,eAAEi5B,eAAO,WACzB36B,EAAO+T,qBAAuBnmB,KAAK0qC,uBAGtC,YAAA9E,aAAN,SAAmBxzB,G,0FACX,SAAMpS,KAAK6lC,eAAezzB,I,cAA1B,UACA,YAAMwzB,aAAY,UAACxzB,G,YAIjB,YAAA+5B,aAAV,SAAuBvsC,EAAYqsC,GAC/B,OAAOA,EAAYjsC,KAAKgnC,cAAcgG,iBAAiBptC,GAAMI,KAAKgnC,cAAciG,qBAAqBrtC,IAG/F,YAAAstC,sBAAV,SAAgCvvC,GAC5B,OAAOA,EAAEwvC,mBAAyC,MAApBxvC,EAAEgS,gBAGpB,YAAAk2B,eAAhB,SAA+BloC,G,uGACpB,EAAAA,EAAEkpB,WAAa,EAAAC,mBAAmBC,MAAlC,MAA0C,GAAM/mB,KAAKwlC,wBAAwBiB,sB,SAAnC,S,iBAAjD,MAAO,CAAP,a,iCAjOK2G,GAAgB,0V,iCAAhBA,EAAgB,y5ECjC7B,uCAAklJ,iB,KAAnkJ,4D,wOD6Bf,CAIsC,oBAAzB,EAAAA,oB,+DAAAA,EAAgB,E,KAJ5B,EAAAzqC,U,MAAU,CACP7B,SAAU,oBACV8B,YAAa,8B,gPAGJsnC,WAAU,E,KAAlB,EAAAlpC,QACSmpC,qBAAoB,E,KAA7B,EAAAjgB,SACSkgB,eAAc,E,KAAvB,EAAAlgB,SACSmgB,qBAAoB,E,KAA7B,EAAAngB,SACSogB,eAAc,E,KAAvB,EAAApgB,Y,sgDEtCL,W,GACA,KAOA,MACA,KACA,M,oCAEA,aAEI,WAAoBmjB,EAAkDvU,EAC1DiB,EAAwBnB,GADhB,KAAAyU,sBAAkD,KAAAvU,cAC1D,KAAAiB,SAAwB,KAAAnB,mB,OAE9B,YAAA0U,YAAN,SAAkBhlB,EAA+BilB,G,0FAC5B,SAAMvtC,KAAK84B,YAAY0U,mB,OACxC,OADiB,SAMF,GAAMxtC,KAAKqtC,oBAAoBI,aAJ1CztC,KAAK44B,iBAAiBa,KAAK,eACpB,CAAP,GAAO,I,OAIX,OADe,UAEQ,MAAf8T,GACAvtC,KAAK44B,iBAAiBa,KAAK,YAAa,CAAExtB,IAAKshC,EAAYthC,MAE/DjM,KAAK+5B,OAAOiE,SAAS,CAAC,QAAS,CAAE0P,YAAa,CAAEC,iBAAiB,KAC1D,CAAP,GAAO,IAGJ,CAAP,GAAO,W,iCApBFC,GAAgB,kH,oCAAhBA,EAAgB,QAAhBA,EAAgB,O,EAD7B,GACa,EAAAA,oB,+DAAAA,EAAgB,E,KAD5B,EAAA1mC,c,gOCZD,SAAY2mC,GACR,qCACA,iCAFJ,CAAY,EAAAA,mBAAA,EAAAA,iBAAgB,M,iGCA5B,SAAY9nB,GACR,kBACA,gBACA,cACA,cACA,gCALJ,CAAY,EAAAA,YAAA,EAAAA,UAAS,M,mGCArB,MAII,SAAY+nB,EAAmBC,GAC3B/tC,KAAK8tC,UAAYA,EACjB9tC,KAAK+tC,oBAAsBA,GANtB,EAAAC,e,0+CCAb,W,GAIA,KAKA,MAKA,KACA,MACA,K,2CAEA,aAWI,WAAsBjU,EAA0B7D,EAClCx2B,EAAoC4oB,EACpCwQ,EAAoChb,GAF5B,KAAAic,SAA0B,KAAA7D,iBAClC,KAAAx2B,cAAoC,KAAA4oB,QACpC,KAAAwQ,cAAoC,KAAAhb,eAXlD,KAAAvc,SAAU,EACV,KAAAqjC,QAAS,EAIC,KAAAqJ,mBAA+B,GAC/B,KAAAC,mBAAqB,0BACrB,KAAAC,cAAgB,qB,OAS1B,YAAA3tC,SAAA,sBACQ4tC,GAAQ,EACZpuC,KAAKsoB,MAAMolB,YAAYroC,WAAU,SAAMgpC,GAAO,qC,gEAC1C,OAAID,EACA,KAEJA,GAAQ,EACR,GAAMpuC,KAAK8d,aAAapX,OAAO,mB,cAA/B,SAEI7E,EAAQ7B,KAAKiuC,mBAAmBpb,MAAK,SAAApxB,GAAK,OAAgB,OAAhB4sC,aAAO,EAAPA,EAAU5sC,KAA6B,KAAf4sC,EAAQ5sC,MAC1E6sC,EAAuB,KACtBzsC,EAAD,QACA,EAAA7B,KAAc,GAAMA,KAAK84B,YAAY0U,oB,UAArC,EAAK5I,OAAS,UAEV5kC,KAAK4kC,OAAL,Y,iBAEI,O,sBAAA,GAAM5kC,KAAKuuC,cAAcF,I,cAAzB,S,+BAEAxsC,GAAQ,EACRysC,EAAe,EAAEp9B,Q,iCAGrB,SAAMlR,KAAK8d,aAAa0wB,KAAK,gBAAiB,CAC1ClmB,MAAOtoB,KAAKyuC,mBACZJ,QAASA,K,OAIb,OANA,SAKAruC,KAAKsX,MAAQ+2B,EAAQ/2B,MACrB,GAAMtX,KAAK0uC,gBAAgBL,I,OAA3B,S,0BAIJxsC,IACM8sC,EAAe,CACjB1sC,KAAM,QACN1B,MAAO,KACP2E,KAAsB,MAAhBopC,EAAuBtuC,KAAKN,YAAYnB,EAAEyB,KAAKkuC,mBAAoBI,GACrEtuC,KAAKN,YAAYnB,EAAEyB,KAAKmuC,eAC5B9xB,QAAS,KAEbrc,KAAKk2B,eAAeI,SAASqY,GAC7B3uC,KAAK+5B,OAAOiE,SAAS,CAAC,OAG1Bh+B,KAAKuB,SAAU,E,eAIvB,YAAAktC,iBAAA,WACI,IAAMG,EAAU5uC,KAAK+5B,OAAO8U,SAAS7uC,KAAK+5B,OAAO9tB,KAEjD,OADA2iC,EAAQlB,YAAc,GACfkB,EAAQ5kC,Y,iCApED8kC,GAAmB,sN,iCAAnBA,I,EADtB,GACsB,EAAAA,uB,+DAAAA,EAAmB,E,KADxC,EAAAjuC,a,woDClBD,W,GAMA,MAEA,KACA,KAEA,OAEA,M,4GCb+S,+BAAuC,YAAQ,kB,6BAAR,4C,sBAA4K,6BAAyC,sC,mBAAiG,8CAAsB,Y,mBAAoB,iBAAQ,kC,MAAvG,6EAA2E,kE,sBAA+6B,0BAAwC,Y,mBAA4B,kB,MAA5B,kF,sBAAoR,4BAAsD,Y,mBAAiB,kB,MAAjB,+D,yBAAsU,yBAAsB,8CAAqC,YAAc,iBAAQ,kC,uCAArD,mEAA+B,gD,yBAAlS,yBAA8B,yCAAI,Y,mBAA0B,iBAAM,yCAAK,sCAAqG,+CAAsB,aAAuB,iBAAQ,kCAAM,gDAAuF,yCAAkC,mC,4CAA9T,wEAAwC,6EAA0C,4DAA8E,+DAA0C,+CAAsF,qE,yBAAxsB,+BAAuE,4CAAQ,yCAAK,4CAAqC,Y,mBAAsB,iBAAM,6CAAqC,gDAAsB,a,oBAAmB,iBAAQ,kCAAM,gDAA6E,8CAAyB,a,oBAAkB,iBAAM,kCAAM,kCAAS,8CAAQ,kDAAsW,kCAAS,mC,8BAA5nB,mEAAuF,iEAAuE,+CAAgE,gEAAiE,iD,mDAAsW,mCAAsG,0FAAoB,MAA0E,sC,mBAAsF,2CAAM,Y,mBAAqB,iBAAQ,iC,oDAA5S,2CAA4B,gCAAwL,6EAA2D,mE,0FAAr/D,6BAAwC,6CAAqB,6CAA0B,+CAAmC,Y,mBAAsB,iBAAS,gDAAkH,iG,oBAAlH,iBAAsK,gDAAmB,iBAAC,iBAAQ,iDAAiC,a,oBAAoB,iBAAS,iDAA8G,+F,oBAA9G,iBAAgK,kCAAO,qDAA8G,yFAAoB,MAAkD,wCAA6G,a,oBAAqB,iBAAU,kCAAO,sCAAK,iDAA2E,qDAA8vB,qDAAuU,kC,oDAAl6D,oEAA4G,uFAAqC,gCAAiH,mEAAwG,qFAAmC,8BAA6E,6DAA+B,gCAAgK,mFAA8E,4EAAiD,gEAA4G,8DAAi4B,yDDkBpkF,iBAwBI,WAAoB8f,EAAgCjhB,EACxC4nC,EAAoCpR,EACpC6Y,GAFQ,KAAApuB,aAAgC,KAAAjhB,cACxC,KAAA4nC,eAAoC,KAAApR,iBACpC,KAAA6Y,eAhBH,KAAAC,UAAW,EAEpB,KAAAztC,SAAU,EACV,KAAA0tC,QAAS,EAQD,KAAAC,kBAAoB,IAAI7rC,IACxB,KAAA8rC,cAAgB,IAAI9rC,I,OAMtB,YAAA7C,SAAN,W,gGAII,OAHM4uC,EAAepvC,KAAKsnC,aAAald,wBACvCpqB,KAAK2qB,MAAQykB,EAAa,GAC1BpvC,KAAKsqB,IAAM8kB,EAAa,GACxB,GAAMpvC,KAAKoe,Q,cAAX,S,YAGE,YAAAA,KAAN,W,4GACQpe,KAAKgvC,SACY,GAAMhvC,KAAK2gB,WAAW0uB,qBAAqBrvC,KAAK2P,iBADjE,M,OACiB,SACRlU,KAAK4R,SAAQ,SAAAsE,GAClB,IAAM9T,EAAO,EAAKkxC,aAAapvC,UAAUgS,GACzC,EAAKw9B,cAAc3qC,IAAImN,EAAE/R,GAAI,CAAE/B,KAAMA,EAAMyZ,MAAO3F,EAAE2F,QACpD,EAAK43B,kBAAkB1qC,IAAImN,EAAEyhB,OAAQ,CAAEv1B,KAAMA,EAAMyZ,MAAO3F,EAAE2F,W,iBAGpE,SAAMtX,KAAKsvC,YAAW,I,cAAtB,SACAtvC,KAAKivC,QAAS,E,YAGZ,YAAAK,WAAN,SAAiBC,G,6GACb,GAA2B,MAAvBvvC,KAAKwvC,gBAA8C,MAApBxvC,KAAKyvC,YACpC,UAGAC,EAAkB,KACtB,IACIA,EAAQ1vC,KAAKsnC,aAAazc,kBAAkB7qB,KAAK2qB,MAAO3qB,KAAKsqB,KAC/D,MAAO7oB,GAGL,OAFAzB,KAAKk2B,eAAeI,SAAS,QAASt2B,KAAKN,YAAYnB,EAAE,iBACrDyB,KAAKN,YAAYnB,EAAE,qBACvB,IAGJyB,KAAKuB,SAAU,E,iBAmBA,O,sBAhBPu2B,OAAO,EAEPA,EADgB,SAAhB93B,KAAK2vC,QAAqB3vC,KAAK+xB,WACrB/xB,KAAK2gB,WAAWivB,sBAAsB5vC,KAAK+xB,WAAY/xB,KAAK6vC,SAClEH,EAAM,GAAIA,EAAM,GAAIH,EAAgB,KAAOvvC,KAAK8vC,mBAC7B,SAAhB9vC,KAAK2vC,OACF3vC,KAAK2gB,WAAWovB,0BAA0B/vC,KAAK2P,eAAgB3P,KAAK6vC,SAC1EH,EAAM,GAAIA,EAAM,GAAIH,EAAgB,KAAOvvC,KAAK8vC,mBAE1C9vC,KAAK2gB,WAAWqvB,gBAAgBhwC,KAAK6vC,SAC3CH,EAAM,GAAIA,EAAM,GAAIH,EAAgB,KAAOvvC,KAAK8vC,mBAEpDP,EACAvvC,KAAKwvC,eAAiB1X,EAEtB93B,KAAKyvC,YAAc3X,EAEZ,GAAMA,G,cAAjBt2B,EAAW,S,0CAIA,OADfxB,KAAK8vC,kBAAoBtuC,EAASsuC,kBACnB,GAAMp1B,QAAQK,IAAIvZ,EAAS/F,KAAKoL,KAAI,SAAM1I,GAAC,qC,4DAEpC,OADZi1B,EAA2B,MAAlBj1B,EAAE8xC,aAAuB9xC,EAAEi1B,OAASj1B,EAAE8xC,aACnC,GAAMjwC,KAAKsnC,aAAapc,aAAa/sB,I,OAGvD,OAHM+xC,EAAY,SACZ74B,EAAOrX,KAAKgvC,UAAsB,MAAV5b,GAAkBpzB,KAAKkvC,kBAAkBxqC,IAAI0uB,GACvEpzB,KAAKkvC,kBAAkBhxC,IAAIk1B,GAAU,KAClC,CAAP,EAAO,CACHliB,QAASg/B,EAAUh/B,QACnBwa,QAASwkB,EAAUxkB,QACnBC,QAASukB,EAAUvkB,QACnByH,OAAQA,EACR+c,SAAkB,MAAR94B,EAAeA,EAAKxZ,KAAOmC,KAAKgvC,SAAWhvC,KAAKN,YAAYnB,EAAE,WAAa,KACrF6xC,UAAmB,MAAR/4B,EAAeA,EAAKC,MAAQtX,KAAKgvC,SAAW,GAAK,KAC5D/c,KAAM9zB,EAAE8zB,KACRoe,GAAIlyC,EAAEmyC,UACNruC,KAAM9D,EAAE8D,mB,cAdVmhC,EAAS,UAkBVmM,GAAgC,MAAfvvC,KAAKojC,QAAkBpjC,KAAKojC,OAAOnnC,OAAS,EAC9D+D,KAAKojC,OAASpjC,KAAKojC,OAAOlnB,OAAOknB,GAEjCpjC,KAAKojC,OAASA,EAGlBpjC,KAAKuB,SAAU,EACfvB,KAAKyvC,YAAc,KACnBzvC,KAAKwvC,eAAiB,K,6CA3GjBe,GAAqB,qL,iCAArBA,EAAqB,mgECtBlC,4BAAwG,4CAA4E,4CAA4B,4CAA2B,2CAA6C,Y,oBAAuB,iCAAwD,kCAAM,iD,oBAA4F,+CAAyB,iBAAO,iBAAQ,kCAAU,kCAAO,gDAAmM,kDAAmiE,8CAA2B,kDAA6E,a,oBAAkB,iBAAU,kCAAO,kCAAO,kCAAO,kCAAO,kB,MAAhnF,6EAAkD,2CAA4F,mFAAqH,8CAAmM,6CAAknE,mE,uLDkBh1F,GAIa,EAAAA,yB,+DAAAA,EAAqB,E,KAJjC,EAAA5tC,U,MAAU,CACP7B,SAAU,oBACV8B,YAAa,oC,mIAGJ/E,KAAM,CAAF,C,KAAZ,EAAAmD,QACQ2uC,OAAQ,CAAF,C,KAAd,EAAA3uC,QACQ6uC,SAAU,CAAF,C,KAAhB,EAAA7uC,QACQ2O,eAAgB,CAAF,C,KAAtB,EAAA3O,QACQ+wB,WAAY,CAAF,C,KAAlB,EAAA/wB,QACQguC,SAAQ,E,KAAhB,EAAAhuC,W,sIE5BL,mBAAa,EAAAwvC,kD,mGCAb,SAAYC,GACR,iDACA,+CAFJ,CAAY,EAAAA,cAAA,EAAAA,YAAW,M,kGCIvB,MAOI,SAAYjvC,GACRxB,KAAKJ,GAAK4B,EAAS5B,GACnBI,KAAK2P,eAAiBnO,EAASmO,eAC/B3P,KAAKiC,KAAOT,EAASS,KACrBjC,KAAKvE,KAAO+F,EAAS/F,KACrBuE,KAAKkf,QAAU1d,EAAS0d,SAZnB,EAAAwxB,c,8+CCJb,W,GAEA,MACA,KACA,MACA,MACA,KACA,MACA,K,2DAQA,aAcI,WAAsBhxC,EAAoC6d,EAC5Cqb,EAA8CE,EAC9CuO,EACAtrB,EAAsDoO,GAH9C,KAAAzqB,cAAoC,KAAA6d,gBAC5C,KAAAqb,mBAA8C,KAAAE,cAC9C,KAAAuO,4BACA,KAAAtrB,uBAAsD,KAAAoO,gB,OAE9D,YAAA3pB,SAAN,W,kGACiB,OAAb,EAAAR,KAAa,GAAMA,KAAK84B,YAAYM,Y,OACP,OAD7B,EAAK9hB,MAAQ,SACb,EAAAtX,KAA6B,GAAMA,KAAKmqB,cAAcwmB,kC,cAAtD,EAAKpuC,sBAAwB,S,YAG3B,YAAA6zB,OAAN,W,0GACS,SAAMp2B,KAAK4wC,kB,OAAhB,OAAK,SAIA,GAAM5wC,KAAK6wC,sBAHZ,I,OAGJ,OAAK,SAIS,GAAM7wC,KAAK84B,YAAYM,YAHjC,I,cAGE9hB,EAAQ,SACE,MAAZtX,KAAK8wC,IAAL,OACA,EAAA9wC,KAAW,GAAMA,KAAK84B,YAAYiY,W,OAAlC,EAAKD,IAAM,S,wBAEW,MAAtB9wC,KAAKgxC,cAAL,OACA,EAAAhxC,KAAqB,GAAMA,KAAK84B,YAAYmY,qB,OAA5C,EAAKD,cAAgB,S,iBAEb,SAAMhxC,KAAKud,cAAc2zB,QAAQlxC,KAAKq2B,eAAgB/e,EAAM/K,OAAO5E,cAC3E3H,KAAK8wC,IAAK9wC,KAAKgxC,gB,OACQ,OAFrBpyC,EAAM,SAEe,GAAMoB,KAAKud,cAAcgZ,aAAav2B,KAAKq2B,eAAgBz3B,I,OAG/D,OAHjB43B,EAAqB,SAEvBmB,EAA0C,KACvB,GAAM33B,KAAKud,cAAc4zB,a,eAC1B,MADC,SACnB,OACS,GAAMnxC,KAAKud,cAAc6zB,WAAWxyC,I,eAA7C+4B,EAAS,S,eAEA,SAAM33B,KAAKud,cAAc8zB,aAAazyC,I,QAA/C+4B,EAAS,S,mBAGb,SAAM33B,KAAKsxC,qBAAqB9a,EAAoB53B,EAAK+4B,I,eAAzD,S,YAGE,YAAAkZ,mBAAN,W,mEAGI,MAAO,CAAP,GAAO,UAGL,YAAAS,qBAAN,SAA2B9a,EAA4B53B,EACnD+4B,G,oFAIE,YAAAiZ,eAAN,W,gGACI,OAA2B,MAAvB5wC,KAAKq2B,gBAAkD,KAAxBr2B,KAAKq2B,gBACpCr2B,KAAK+b,qBAAqBK,UAAU,QAASpc,KAAKN,YAAYnB,EAAE,iBAC5DyB,KAAKN,YAAYnB,EAAE,uBAChB,CAAP,GAAO,IAEPyB,KAAKq2B,eAAep6B,OAAS,GAC7B+D,KAAK+b,qBAAqBK,UAAU,QAASpc,KAAKN,YAAYnB,EAAE,iBAC5DyB,KAAKN,YAAYnB,EAAE,qBAChB,CAAP,GAAO,IAEPyB,KAAKq2B,iBAAmBr2B,KAAKuxC,sBAC7BvxC,KAAK+b,qBAAqBK,UAAU,QAASpc,KAAKN,YAAYnB,EAAE,iBAC5DyB,KAAKN,YAAYnB,EAAE,0BAChB,CAAP,GAAO,KAGLizC,EAAiBxxC,KAAKqnC,0BAA0BoK,iBAAiBzxC,KAAKq2B,eACxEr2B,KAAK0xC,gCAEyB,MAA9B1xC,KAAKuC,uBACJvC,KAAKmqB,cAAcwnB,uBAChBH,EAAe1b,MACf91B,KAAKq2B,eACLr2B,KAAKuC,uBAMS,MAAlBivC,GAA0BA,EAAe1b,MAAQ,EAClC,GAAM91B,KAAK+b,qBAAqBmpB,WAAWllC,KAAKN,YAAYnB,EAAE,0BACzEyB,KAAKN,YAAYnB,EAAE,sBAAuByB,KAAKN,YAAYnB,EAAE,OAAQyB,KAAKN,YAAYnB,EAAE,MACxF,YAHJ,OALAyB,KAAK+b,qBAAqBK,UAAU,QAASpc,KAAKN,YAAYnB,EAAE,iBAC5DyB,KAAKN,YAAYnB,EAAE,2CAChB,CAAP,GAAO,K,OAOP,IAHe,SAIX,MAAO,CAAP,GAAO,G,iBAIf,MAAO,CAAP,GAAO,WAGX,YAAAqzC,uBAAA,sBAC8C,MAAtC5xC,KAAK6xC,+BACLC,aAAa9xC,KAAK6xC,+BAEtB7xC,KAAK6xC,8BAAgCruB,YAAW,WAC5C,IAAMguB,EAAiB,EAAKnK,0BAA0BoK,iBAAiB,EAAKpb,eACxE,EAAKqb,gCACT,EAAKK,oBAAwC,MAAlBP,EAAyB,KAAOA,EAAe1b,QAC3E,MAGD,YAAA4D,OAAN,W,0FACsB,SAAM15B,KAAK+b,qBAAqBmpB,WAAWllC,KAAKN,YAAYnB,EAAE,sBAC5EyB,KAAKN,YAAYnB,EAAE,UAAWyB,KAAKN,YAAYnB,EAAE,UAAWyB,KAAKN,YAAYnB,EAAE,Y,cADjE,UAGdyB,KAAK44B,iBAAiBa,KAAK,U,YAI3B,YAAAiY,6BAAR,WACI,IAAIM,EAAsB,GACpBC,EAAajyC,KAAKsX,MAAM5K,QAAQ,KAItC,OAHIulC,GAAc,IACdD,EAAYA,EAAU91B,OAAOlc,KAAKsX,MAAM/N,OAAO,EAAG0oC,GAAY1lC,OAAO5E,cAAcyF,MAAM,kBAEtF4kC,G,iCApIFE,GAAuB,uR,iCAAvBA,I,EADb,GACa,EAAAA,2B,+DAAAA,EAAuB,E,KADnC,EAAArxC,a,+TChBD,MAKI,SAAYjB,EAAYqzB,EAAmBC,GACvClzB,KAAKJ,GAAKA,EACVI,KAAKizB,SAAWA,EAChBjzB,KAAKkzB,cAAgBA,GARhB,EAAAif,4B,6cCAb,IAIA,cAOI,WAAY3wC,GAAZ,MACI,YAAMA,IAAS,K,OACf,EAAK5B,GAAK,EAAKwH,oBAAoB,MACnC,EAAKuI,eAAiB,EAAKvI,oBAAoB,kBAC/C,EAAKnF,KAAO,EAAKmF,oBAAoB,QACrC,EAAK3L,KAAO,EAAK2L,oBAAoB,QACrC,EAAK8X,QAAU,EAAK9X,oBAAoB,W,EAEhD,OAfoC,OAepC,EAfA,CAJA,MAIoCQ,cAAvB,EAAAwqC,kB,oGCJb,aAMA,QAEMC,EAAqB,CACvB,WACA,UACA,SACA,SACA,UACA,SACA,SAEA,SACA,SACA,YACA,YACA,iBAGJ,aAWI,WAAY1gC,GAVZ,KAAAxC,MAAsB,KAGd,KAAAmjC,KAAe,KACf,KAAAC,QAAkB,KAClB,KAAAC,UAAoB,KACpB,KAAAC,MAAgB,KAChB,KAAAC,WAAsB,KAIrB/gC,IAIL3R,KAAKmP,MAAQwC,EAAExC,OAoFvB,OAjFI,sBAAI,kBAAG,C,IAAP,WACI,OAAOnP,KAAKsyC,M,IAEhB,SAAQh0C,GACJ0B,KAAKsyC,KAAOh0C,EACZ0B,KAAKuyC,QAAU,KACfvyC,KAAK0yC,WAAa,M,gCAGtB,sBAAI,qBAAM,C,IAAV,WAQI,OAPoB,MAAhB1yC,KAAKuyC,SAA+B,MAAZvyC,KAAKuR,MAC7BvR,KAAKuyC,QAAU,EAAAvqC,MAAMsE,UAAUtM,KAAKuR,KACf,KAAjBvR,KAAKuyC,UACLvyC,KAAKuyC,QAAU,OAIhBvyC,KAAKuyC,S,gCAGhB,sBAAI,uBAAQ,C,IAAZ,WACI,OAAIvyC,KAAKmP,QAAU,EAAAwjC,aAAaC,kBACrB,MAEW,MAAlB5yC,KAAKwyC,WAAiC,MAAZxyC,KAAKuR,MAC/BvR,KAAKwyC,UAAY,EAAAxqC,MAAM+D,YAAY/L,KAAKuR,KACjB,KAAnBvR,KAAKwyC,YACLxyC,KAAKwyC,UAAY,OAIlBxyC,KAAKwyC,Y,gCAGhB,sBAAI,mBAAI,C,IAAR,WACI,OAAIxyC,KAAKmP,QAAU,EAAAwjC,aAAaC,kBACrB,MAEO,MAAd5yC,KAAKyyC,OAA6B,MAAZzyC,KAAKuR,MAC3BvR,KAAKyyC,MAAQ,EAAAzqC,MAAMoE,QAAQpM,KAAKuR,KACb,KAAfvR,KAAKyyC,QACLzyC,KAAKyyC,MAAQ,OAIdzyC,KAAKyyC,Q,gCAGhB,sBAAI,4BAAa,C,IAAjB,WACI,OAAwB,MAAjBzyC,KAAKmM,SAAmBnM,KAAKmM,SAAWnM,KAAKuR,K,gCAGxD,sBAAI,wBAAS,C,IAAb,WACI,OAAoB,MAAbvR,KAAKqM,KAAerM,KAAKqM,KAAOrM,KAAKuR,K,gCAGhD,sBAAI,wBAAS,C,IAAb,WACI,OAAmB,MAAZvR,KAAKuR,MAAgD,IAAhCvR,KAAKuR,IAAI7E,QAAQ,YAAqD,IAAjC1M,KAAKuR,IAAI7E,QAAQ,aAC7E1M,KAAKuR,IAAI7E,QAAQ,OAAS,GAAK,EAAA1E,MAAM2E,eAAeb,KAAK9L,KAAKuR,O,gCAGvE,sBAAI,wBAAS,C,IAAb,WACI,GAAuB,MAAnBvR,KAAK0yC,WACL,OAAO1yC,KAAK0yC,WAEhB,GAAgB,MAAZ1yC,KAAKuR,KAAevR,KAAKmP,QAAU,EAAAwjC,aAAaC,kBAEhD,IADA,IAAMrhC,EAAMvR,KAAK+yB,UACRh3B,EAAI,EAAGA,EAAIs2C,EAAmBp2C,OAAQF,IAC3C,GAA2C,IAAvCwV,EAAI7E,QAAQ2lC,EAAmBt2C,IAE/B,OADAiE,KAAK0yC,YAAa,EACX1yC,KAAK0yC,WAKxB,OADA1yC,KAAK0yC,YAAa,EACX1yC,KAAK0yC,Y,gCAGhB,sBAAI,wBAAS,C,IAAb,WACI,OAAO1yC,KAAKuR,IAAI7E,QAAQ,OAAS,GAAK,EAAA1E,MAAM2E,eAAeb,KAAK9L,KAAKuR,KAAQ,UAAYvR,KAAKuR,IAAOvR,KAAKuR,K,gCAElH,EApGA,GAAa,EAAAE,gB,oGCxBb,SAAYkhC,GACR,uBACA,mBACA,+BACA,qBACA,6CACA,qBANJ,CAAY,EAAAA,eAAA,EAAAA,aAAY,M,2dCAxB,WAKA,U,GAIA,MACA,K,wICV61B,6BAA4D,+CAAqF,2GAArF,iBAAuK,6CAAiC,gDAA8F,6HAAuB,QAAS,Y,mBAAW,sCAAqD,kCAAU,kCAAO,kC,6EAAhZ,gEAAsD,oDAAwB,gCAAqB,2CAAsJ,uF,4GAA8J,6BAA8D,+CAAiG,2GAAjG,iBAA4R,6CAAiC,gDAAqG,uI,mBAAgF,2CAA0G,kCAAK,kCAAU,kDAA8F,iIAAuB,QAAS,EAAF,0BAAgC,UAAY,Y,oBAA4D,wCAAqD,kCAAU,kCAAO,kC,6EAA94B,gEAAqB,8DAA6C,oDAAwB,gCAAqB,gFAA+P,8FAA2E,6DAAyF,wFAA0I,wFAA0H,8D,mDAAuJ,+BAAoE,2GAApE,iB,6EAAO,iDAAqB,oDAAwC,gCAAqB,4C,mDAA8I,gCAA4D,kI,mBAAoG,sCAA4D,iC,KAAvI,oE,sBAAiJ,gC,mBAAiJ,sCAAoD,kC,KAAnI,wE,yBAA1qF,4BAAkG,4CAA+B,4CAAqB,8CAA4B,Y,mBAAiB,iBAAS,4C,oBAAkJ,wCAA2D,kCAAK,kCAAO,iDAA8D,uEAA9D,iBAAoK,kCAAO,+CAA+B,gDAA6B,a,oBAAkB,iBAAS,+CAAwC,kDAA0d,mDAA09B,+CAAwB,mDAAgO,kCAAO,oDAAsO,oDAA+M,kCAAO,kCAAO,mC,sDAAxqF,gEAAqB,+DAAqI,wFAAqH,+DAAgC,mDAAuB,+BAAoB,2CAA+H,iEAAsB,iEAA6F,8DAA0d,gEAAmjC,iEAAqQ,qEAAuN,sE,mDAAjyF,4BAAiB,sGAA8D,gDAA40F,iC,gCAAryF,uDAAkB,mC,mDAA0xF,2BAAyB,2FAAyF,sCAA2D,Y,mBAA4B,iB,MAA5B,kF,yBAAiR,gCAAkE,YAAU,kB,uBAA9B,gCAAoB,4C,mDAAlT,6BAAyD,6CAAoB,+CAA0C,Y,mBAAiB,iBAAS,gDAAmE,wGAA4B,mDAAsF,kCAAU,kCAAO,kC,gCAAhO,8DAA6F,sDAAkD,8DDYr7G,kBAQI,WAAYjzC,EAA0B4nC,G,OAClC,YAAM5nC,EAAa4nC,IAAa,K,OALU,O,iCAArCuL,GAA4B,yE,iCAA5BA,EAA4B,42EChBzC,6BAAe,2CAAiB,Y,mBAAyB,iBAAM,8CAAk6F,4CAA8M,gDAA8V,2CAAgB,kB,MAA7/G,sEAAqF,uDAAu7F,qEAAqJ,uE,sWDYjsG,CAIkD,gCAArC,EAAAA,gC,+DAAAA,EAA4B,E,KAJxC,EAAAlwC,U,MAAU,CACP7B,SAAU,mCACV8B,YAAa,6C,iEAGJ8kC,SAAU,CAAF,C,KAAhB,EAAA1mC,QACQonC,KAAM,CAAF,C,KAAZ,EAAApnC,W,idElBL,WAWA,GALA,MACA,MACA,MACA,KAEA,S,uKCX6sB,2BAAmE,0CAAyB,kGAA6B,sCAAsC,Y,mBAAuB,iBAAK,iC,gCAAvL,mEAA2J,4E,mDAAkC,2BAA2D,0CAAyB,8FAAyB,sCAAyC,Y,mBAAmB,iBAAK,iC,gCAA1K,+DAAkJ,wE,sBAAo6B,2BAAuC,sC,mBAAsF,8CAAsB,Y,mBAAoB,iBAAQ,kC,MAAvG,6EAA2E,kE,qHAA6f,2BAA6K,oI,mBAA2B,iB,+DAA1J,qEAAoC,6F,qBAAuM,sB,mDAA4G,2BAAgE,sI,mBAAuF,sCAAsD,iC,KAAhH,wE,sBAAgN,6BAAuF,2C,gEAA3K,4BAAoF,wDAAuG,kC,kFAAxF,kDAAoC,8D,mDAAh2B,2BAAsG,6CAAqB,6CAA6M,2CAA4C,wHAAgC,6CAAuF,YAAgB,iBAAK,+CAAkN,kCAAO,gDAAiM,kC,+CAA53B,gGAAiG,sDAAyR,0DAAmF,wDAA0J,8CAAsH,+E,yBAA3vB,+CAAg6B,iB,uBAA94B,0C,sBAA65B,6BAA0F,2C,mDAA50C,6BAAmC,4CAAoB,Y,mBAAqB,2BAAoD,6F,mBAA6D,sCAAoD,iCAAK,kCAAM,6CAA2B,uFAA29B,0DAA0G,kCAAM,2C,qDAA3yC,0EAA+F,sFAA2mC,mDAAoC,mE,mDAAsW,2BAA6K,oI,mBAA2B,iB,+DAA1J,qEAAoC,6F,qBAA2M,sB,sBAA4L,6BAA2F,2C,yBAA/K,4BAAoF,wDAA2G,kC,iFAA5F,kDAAwC,8D,mDAA5mB,2BAA4F,6CAA6M,2CAA4C,4HAAoC,6CAAmF,YAAgB,iBAAK,8CAAqM,kC,+CAApoB,kFAA8D,sDAA6R,0DAA+E,wDAAuD,+E,yBAAngB,+CAA4qB,iB,uBAA1pB,0C,sBAAyqB,6BAAkG,2C,yBAA19B,6BAA4E,yCAAI,Y,mBAAwB,iBAAM,2CAA2B,qFAA+uB,0DAAkH,kCAAM,4C,iDAAh6B,qEAAuzB,kDAAwC,uE,yBAA/zE,6BAA8B,0DAAk3C,yDAAggC,2C,6BAAn2E,kDAAk3C,4FDa3hH,kBAUI,WAAYmmC,EAAsCF,EAC9C6L,EAAgCha,GADpC,MAEI,YAAMqO,EAAmBF,EAAe6L,EAAgBha,IAAY,K,OAP9D,EAAAia,oBAAsB,IAAI,EAAAvqB,aAEpC,EAAAxI,WAAqB,GACrB,EAAAgzB,kBAA4B,K,SAJQ,OAWpC,YAAAC,kBAAA,WACIjzC,KAAK+yC,oBAAoB5pB,KAAKnpB,KAAKggB,a,iCAZ9BkzB,GAAkB,yJ,iCAAlBA,EAAkB,0gECjB/B,4BAAiC,4CAAiC,Y,mBAAqB,0B,mBAAoJ,qCAA2D,iCAAK,kCAAO,8CAAwB,gDAAoH,mEAAwB,2BAAU,EAAAD,uB,oBAAtJ,iBAA4M,6CAA2B,6CAAuC,4CAAyB,wCAAS,EAAAnI,eAAc,uCAAoC,a,oBAAsB,iBAAK,kCAAM,gDAAiM,gDAAoL,kCAAM,2CAAI,a,oBAAkB,iBAAM,6CAA2B,6CAA6D,4CAAyB,wCAAS,EAAAqI,WAAA,uBAA+B,wCAAuC,a,oBAAuB,iBAAK,kCAAM,6CAA4D,4CAAyB,wCAAS,EAAAA,WAAA,sBAA8B,wCAA6C,a,oBAAsB,iBAAK,kCAAM,6CAAgE,4CAAyB,wCAAS,EAAAA,WAAA,0BAAkC,wCAA2C,a,oBAA0B,iBAAK,kCAAM,6CAAkE,4CAAyB,wCAAS,EAAAA,WAAA,4BAAoC,wCAA+C,a,oBAA4B,iBAAK,kCAAM,kCAAM,+CAAoL,0DAAg6E,kCAAO,kCAAO,kB,MAAx+I,2EAAkI,uFAA2J,8GAA+F,qCAAuH,6EAAuH,4EAA8E,oDAA6L,gDAAqJ,iEAAuD,mGAAiK,6EAAsC,kGAAqK,4EAAqC,sGAA2K,gFAAyC,wGAAmL,kFAAiD,8CAA+L,+C,oNDa3oE,CAIwC,sBAA3B,EAAAD,sB,+DAAAA,EAAkB,E,KAJ9B,EAAAvwC,U,MAAU,CACP7B,SAAU,sBACV8B,YAAa,gC,qHAGHmwC,oBAAmB,E,KAA5B,EAAA7oB,Y,oGEhBL,aACA,SAIA,aA8BI,WAAY7b,GACG,MAAPA,IAIJrO,KAAKJ,GAAKyO,EAAIzO,GACdI,KAAKnC,KAAOwQ,EAAIxQ,KAChBmC,KAAKolB,OAAS/W,EAAI+W,OAClBplB,KAAKiC,KAAOoM,EAAIpM,KAChBjC,KAAKkf,QAAU7Q,EAAI6Q,QACnBlf,KAAKozC,YAAc/kC,EAAI+kC,YACvBpzC,KAAKqzC,UAAYhlC,EAAIglC,UACrBrzC,KAAKszC,aAAejlC,EAAIilC,aACxBtzC,KAAKuzC,UAAYllC,EAAIklC,UACrBvzC,KAAKsmC,QAAUj4B,EAAIi4B,QACnBtmC,KAAKwzC,OAASnlC,EAAImlC,OAClBxzC,KAAKyzC,OAASplC,EAAIolC,OAClBzzC,KAAK0zC,OAASrlC,EAAIqlC,OAClB1zC,KAAK2zC,iBAAmBtlC,EAAIslC,iBAC5B3zC,KAAK4zC,SAAWvlC,EAAIulC,SACpB5zC,KAAK6zC,gBAAkBxlC,EAAIwlC,gBAC3B7zC,KAAK8zC,MAAQzlC,EAAIylC,MACjB9zC,KAAK+zC,eAAiB1lC,EAAI0lC,eAC1B/zC,KAAKg0C,aAAe3lC,EAAI2lC,aACxBh0C,KAAKi0C,SAAW5lC,EAAI4lC,SACpBj0C,KAAKk0C,WAAa7lC,EAAI6lC,WACtBl0C,KAAKm0C,YAAc9lC,EAAI8lC,YACvBn0C,KAAKo0C,sBAAwB/lC,EAAI+lC,sBACjCp0C,KAAKozB,OAAS/kB,EAAI+kB,OAClBpzB,KAAK0+B,wBAA0BrwB,EAAIqwB,wBACnC1+B,KAAK+xB,WAAa1jB,EAAI0jB,WACtB/xB,KAAKq0C,aAAehmC,EAAIgmC,aACxBr0C,KAAKs0C,eAAiBjmC,EAAIimC,gBAsFlC,OAnFI,sBAAI,wBAAS,C,IAAb,WACI,OAAIt0C,KAAKiC,OAAS,EAAAgiC,qBAAqBsQ,OAGhCv0C,KAAKkf,SAAWlf,KAAKolB,SAAW,EAAAsP,2BAA2B8f,W,gCAGtE,sBAAI,wBAAS,C,IAAb,WACI,OAAOx0C,KAAKiC,OAAS,EAAAgiC,qBAAqBwQ,SAAWz0C,KAAKiC,OAAS,EAAAgiC,qBAAqBsQ,OACpFv0C,KAAKiC,OAAS,EAAAgiC,qBAAqByQ,O,gCAG3C,sBAAI,sBAAO,C,IAAX,WACI,OAAO10C,KAAKiC,OAAS,EAAAgiC,qBAAqBsQ,OAASv0C,KAAKiC,OAAS,EAAAgiC,qBAAqByQ,O,gCAG1F,sBAAI,sBAAO,C,IAAX,WACI,OAAO10C,KAAKiC,OAAS,EAAAgiC,qBAAqBsQ,OAASv0C,KAAKs0C,gB,gCAG5D,sBAAI,iCAAkB,C,IAAtB,WACI,OAAOt0C,KAAK20C,SAAW30C,KAAKm0C,YAAYxf,iB,gCAG5C,sBAAI,oCAAqB,C,IAAzB,WACI,OAAO30B,KAAK20C,SAAW30C,KAAKm0C,YAAYvf,oB,gCAG5C,sBAAI,+BAAgB,C,IAApB,WACI,OAAO50B,KAAK20C,SAAW30C,KAAKm0C,YAAYtf,e,gCAG5C,sBAAI,sCAAuB,C,IAA3B,W,MACI,OAAO70B,KAAK40C,YAAmD,QAAtC,EAAC50C,KAAKm0C,YAAYnf,4BAAoB,QAAIh1B,KAAKm0C,YAAYrf,uB,gCAGxF,sBAAI,mCAAoB,C,IAAxB,W,MACI,OAAO90B,KAAK20C,UAA8C,QAAnC,EAAC30C,KAAKm0C,YAAYlf,yBAAiB,QAAIj1B,KAAKm0C,YAAYrf,uB,gCAGnF,sBAAI,qCAAsB,C,IAA1B,W,MACI,OAAO90B,KAAK20C,UAAgD,QAArC,EAAC30C,KAAKm0C,YAAYjf,2BAAmB,QAAIl1B,KAAKm0C,YAAYrf,uB,gCAGrF,sBAAI,oCAAqB,C,IAAzB,WACI,OAAO90B,KAAK60C,yBAA2B70C,KAAK80C,sBAAwB90C,KAAK+0C,wB,gCAG7E,sBAAI,yCAA0B,C,IAA9B,W,MACI,OAAO/0C,KAAK40C,YAAsD,QAAzC,EAAC50C,KAAKm0C,YAAYhf,+BAAuB,QAAIn1B,KAAKm0C,YAAYpf,4B,gCAG3F,sBAAI,2CAA4B,C,IAAhC,W,MACI,OAAO/0B,KAAK40C,YAAwD,QAA3C,EAAC50C,KAAKm0C,YAAY/e,iCAAyB,QAAIp1B,KAAKm0C,YAAYpf,4B,gCAG7F,sBAAI,yCAA0B,C,IAA9B,WACI,OAAO/0B,KAAKg1C,8BAAgCh1C,KAAKi1C,4B,gCAGrD,sBAAI,8BAAe,C,IAAnB,WACI,OAAOj1C,KAAK20C,SAAW30C,KAAKm0C,YAAY7e,c,gCAG5C,sBAAI,2BAAY,C,IAAhB,WACI,OAAOt1B,KAAK20C,SAAW30C,KAAKm0C,YAAY5e,W,gCAG5C,sBAAI,gCAAiB,C,IAArB,WACI,OAAOv1B,KAAK20C,SAAW30C,KAAKm0C,YAAY3e,gB,gCAG5C,sBAAI,6BAAc,C,IAAlB,WACI,OAAOx1B,KAAK20C,SAAW30C,KAAKm0C,YAAY1e,a,gCAG5C,sBAAI,qCAAsB,C,IAA1B,WACI,OAAOz1B,KAAK20C,SAAW30C,KAAKm0C,YAAYze,qB,gCAG5C,sBAAI,mCAAoB,C,IAAxB,WACI,OAAO11B,KAAKk1C,mB,gCAEpB,EApJA,GAAa,EAAAC,gB,oGCHb,iBAMI,WAAYniC,GALZ,KAAApT,GAAa,KACb,KAAAwkB,KAAe,KACf,KAAAgxB,SAAmB,KACnB,KAAA/T,SAAmB,KAGVruB,IAILhT,KAAKJ,GAAKoT,EAAEpT,GACZI,KAAKokB,KAAOpR,EAAEoR,KACdpkB,KAAKo1C,SAAWpiC,EAAEoiC,UAW1B,OARI,sBAAI,uBAAQ,C,IAAZ,WACI,IACI,GAAiB,MAAbp1C,KAAKokB,KACL,OAAO9a,SAAStJ,KAAKokB,KAAM,MAEjC,UACF,OAAO,G,gCAEf,EAxBA,GAAa,EAAAixB,gB,oGCAb,iBAII,WAAY92C,GAHZ,KAAAw3B,KAAe,KAINx3B,IAILyB,KAAKs1C,OAAS/2C,EAAE+2C,QAMxB,OAHI,sBAAI,yBAAU,C,IAAd,WACI,OAAoB,MAAbt1C,KAAK+1B,KAAe,WAAa,M,gCAEhD,EAfA,GAAa,EAAAwf,gB,6cCJb,aACA,QACA,UAEA,SACA,SACA,SACA,SACA,SACA,SAEA,cAuBI,WAAY/zC,GAAZ,MACI,YAAMA,IAAS,KACf,EAAK5B,GAAK,EAAKwH,oBAAoB,MACnC,EAAKuI,eAAiB,EAAKvI,oBAAoB,kBAC/C,EAAK8e,SAAW,EAAK9e,oBAAoB,aAAe,KACxD,EAAKnF,KAAO,EAAKmF,oBAAoB,QACrC,EAAKvJ,KAAO,EAAKuJ,oBAAoB,QACrC,EAAKwM,MAAQ,EAAKxM,oBAAoB,SACtC,EAAKuM,SAAW,EAAKvM,oBAAoB,cAAe,EACxD,EAAKgf,OAAS,EAAKhf,oBAAoB,QACS,MAA5C,EAAKA,oBAAoB,gBACzB,EAAKif,cAAe,EAEpB,EAAKA,aAAe,EAAKjf,oBAAoB,gBAEjD,EAAK+e,oBAAsB,EAAK/e,oBAAoB,uBACpD,EAAKuf,aAAe,EAAKvf,oBAAoB,gBAC7C,EAAKsf,cAAgB,EAAKtf,oBAAoB,iBAC9C,EAAKwf,YAAc,EAAKxf,oBAAoB,eAE5C,IAAM0M,EAAQ,EAAK1M,oBAAoB,SAC1B,MAAT0M,IACA,EAAKA,MAAQ,IAAI,EAAA+sB,SAAS/sB,IAG9B,IAAMtB,EAAO,EAAKpL,oBAAoB,QAC1B,MAARoL,IACA,EAAKA,KAAO,IAAI,EAAAwuB,QAAQxuB,IAG5B,IAAM8T,EAAW,EAAKlf,oBAAoB,YAC1B,MAAZkf,IACA,EAAKA,SAAW,IAAI,EAAA2a,YAAY3a,IAGpC,IAAMlR,EAAa,EAAKhO,oBAAoB,cAC1B,MAAdgO,IACA,EAAKA,WAAa,IAAI,EAAA2rB,cAAc3rB,IAGxC,IAAMvB,EAAS,EAAKzM,oBAAoB,UAC1B,MAAVyM,IACA,EAAKA,OAASA,EAAOhN,KAAI,SAACmM,GAAW,WAAI,EAAAkuB,SAASluB,OAGtD,IAAMwT,EAAc,EAAKpf,oBAAoB,eAC1B,MAAfof,IACA,EAAKA,YAAcA,EAAY3f,KAAI,SAAC6G,GAAW,WAAI,EAAA8nC,mBAAmB9nC,OAG1E,IAAM+Y,EAAkB,EAAKrf,oBAAoB,mB,OAC1B,MAAnBqf,IACA,EAAKA,gBAAkBA,EAAgB5f,KAAI,SAAC4uC,GAAW,WAAI,EAAAC,wBAAwBD,OAGvF,EAAK5uB,SAAW,EAAKzf,oBAAoB,aAAe,EAAA0f,mBAAmBC,K,EAEnF,OAhFoC,OAgFpC,EAhFA,CAAoC,EAAAnf,cAAvB,EAAA+tC,kB,6+CCXb,WAmBA,GAbA,MAEA,KACA,MACA,KACA,KACA,MACA,MACA,KAKA,QAEA,QAEA,Q,+JCvB6B,0BAAuC,qC,mBAAsF,6CAAsB,Y,mBAAoB,iBAAQ,kC,MAAvG,6EAA2E,kE,sBAAwT,6BAAkC,sC,mBAAsH,6CAAsB,Y,mBAAmC,iBAAQ,2C,MAArI,4FAA0F,iF,uEAAvV,yBAAqC,2CAA8D,sCAA2D,YAAW,uCAAyO,iCAAK,kC,uBAA/W,sEAAsH,oDAA0B,gD,yBAAxQ,2BAAgF,6CAA6Z,kC,8BAA3Y,wD,sBAAiZ,wBAAmD,Y,mBAAgC,kB,MAAhC,8E,yBAApkB,6BAA8B,6CAAmf,4CAAwF,2C,8BAAziB,4EAAqd,+E,yBAAtuB,6BAA6B,4CAAoL,uDAAynB,0CAAkG,qCAAoD,Y,oBAA6B,iBAAK,4C,6BAAj+B,8CAA+L,6CAAgwB,oF,sBAAgM,6BAAsC,sC,mBAAiG,6CAAsB,Y,mBAAoB,iBAAQ,2C,MAAvG,6EAA2E,kE,sBAA2D,2BAAkK,qCAAoD,Y,mBAA6B,kB,MAA7B,mF,sBAAyC,6BAA+B,sC,mBAAiG,6CAAsB,Y,mBAAoB,iBAAQ,2C,MAAvG,6EAA2E,kE,sBAA0E,6BAA+D,wCAAG,Y,mBAAgC,iBAAK,2CAAwF,qCAAoD,Y,oBAA6B,iBAAK,4C,MAAnN,6EAAiL,oF,sBAA4W,6BAAkC,sC,mBAAsH,6CAAsB,Y,mBAAmC,iBAAQ,2C,MAArI,4FAA0F,iF,sBAA2D,6BAA6C,sC,mBAAoG,6CAAsB,Y,mBAAkC,iBAAQ,2C,MAAnI,2FAAyF,gF,mDAAma,2BAA6G,oJAA4C,sCAAmD,Y,mBAAiC,iB,MAAjC,uF,mDAAsC,2BAA4G,oJAA4C,sCAAoD,Y,mBAAmC,iB,MAAnC,yF,mDAAwF,2BAAgF,iIAAwB,sCAA4D,Y,mBAAuB,iB,MAAvB,6E,yBAAmD,sDAAkC,iCAAgB,iB,wCAApC,+C,yBAArR,6BAAgD,6CAAgM,qFAAwF,2C,0DAApR,+CAAkB,e,mDAAtjD,yBAAqC,4CAAgB,+CAAoF,iCAAM,yCAAK,2CAAoD,aAAU,iBAAK,yDAAyO,yDAAiO,kCAAM,8CAAgC,+CAAuC,kD,oBAA+K,wCAAmD,kCAAU,+CAAgD,+CAAkP,+CAAoP,yDAAwV,6CAA2D,4GAAoB,wCAAwD,a,oBAAmB,iBAAK,kCAAO,kCAAO,kCAAM,kC,+CAA17D,2CAAe,YAAf,CAAe,eAAgF,uEAAwC,2CAA8B,+CAAyO,4DAAya,sFAAsJ,0FAAkP,yFAA+P,2DAAgd,2E,yBAAljE,+BAA2F,4CAAQ,+CAAigE,iCAAS,kC,8BAAx/D,wD,yBAAxb,6BAA8B,wDAAqS,iDAAsnE,2C,8BAA54E,8EAAmU,6E,yBAAvpC,6BAA8B,6CAAiC,yCAAK,Y,mBAA2B,kCAA+C,wDAAyM,kCAAS,kCAAM,+CAAwP,kCAAO,yDAAkM,yDAAy8E,4C,gDAA5qG,gFAAkC,4DAAuD,8CAAgT,uFAAuK,8CAAkM,8CDyBx0D,iBAYI,WAAoB7c,EAAkC/c,EAC1Crc,EAAkCihB,EAClCuV,EAAwC6C,EACxCxb,EAAsC4M,GAH9B,KAAA2O,cAAkC,KAAA/c,uBAC1C,KAAArc,cAAkC,KAAAihB,aAClC,KAAAuV,iBAAwC,KAAA6C,cACxC,KAAAxb,gBAAsC,KAAA4M,gBAVzC,KAAAyrB,OAAQ,EAIjB,KAAA3G,QAAkB,E,OAQZ,YAAAzuC,SAAN,W,iGACSR,KAAK41C,MAAN,MACA,GAAM51C,KAAK+4B,YAAYO,UAAS,I,OAChC,OADA,SACA,GAAMt5B,KAAKoe,Q,OAAX,S,mCAIF,YAAAA,KAAN,W,kGACiB,SAAMpe,KAAK84B,YAAY+c,uB,OAGpB,OAHVC,EAAO,UACRC,KAAK,EAAA/tC,MAAMwF,gBAAgBxN,KAAKN,YAAa,SAClDM,KAAKg2C,cAAgBF,EACrB,EAAA91C,KAAgB,GAAMA,KAAKmqB,cAAc4F,OAAO,EAAAlZ,WAAWo/B,gB,cAA3D,EAAKjmB,SAAW,SAChBhwB,KAAKivC,QAAS,E,YAGlB,YAAAiH,uBAAA,SAAuBC,GACnB,GAAIA,EAAI/C,aAAe+C,EAAIxC,kBAAoBwC,EAAIzX,wBAAyB,CACxE,IAAM7e,EAAS7f,KAAKgwB,SAASzG,MAAK,SAAAtqB,GAAK,OAAAA,EAAE0Q,iBAAmBwmC,EAAIv2C,MAChE,GAAc,MAAVigB,GAAkBA,EAAOX,QACzB,OAAOi3B,EAAI/B,wBAAyBv0B,EAAOpkB,KAAK26C,kBAIxD,OAAO,GAGX,YAAAC,mBAAA,SAAmBF,GACf,OAAOA,EAAIxC,kBAAoBwC,EAAI/B,uBAAyBp0C,KAAKgwB,SAAS6C,MAAK,SAAA5zB,GAAK,OAAAA,EAAE0Q,iBAAmBwmC,EAAIv2C,IAAMX,EAAEigB,YAGnH,YAAAo3B,UAAN,SAAgBH,G,qGACM,SAAMn2C,KAAK+b,qBAAqBmpB,WAC9C,6DAA8DiR,EAAIt4C,KAClEmC,KAAKN,YAAYnB,EAAE,OAAQyB,KAAKN,YAAYnB,EAAE,MAAO,Y,OACzD,IAHkB,SAId,MAAO,CAAP,GAAO,G,iBAOP,O,sBAHAyB,KAAKgsC,cAAgBhsC,KAAK2gB,WAAW41B,cAAcJ,EAAIv2C,IAAI0B,MAAK,WAC5D,OAAO,EAAKy3B,YAAYO,UAAS,MAErC,GAAMt5B,KAAKgsC,e,OAEX,OAFA,SACAhsC,KAAKk2B,eAAeI,SAAS,UAAW,KAAM,gBAC9C,GAAMt2B,KAAKoe,Q,cAAX,S,4DAIF,YAAAo4B,MAAN,SAAYL,G,qGACU,SAAMn2C,KAAK+b,qBAAqBmpB,WAC9CllC,KAAKN,YAAYnB,EAAE,iCAAkC43C,EAAIt4C,KACzDmC,KAAKN,YAAYnB,EAAE,OAAQyB,KAAKN,YAAYnB,EAAE,MAAO,Y,OACzD,IAHkB,SAId,MAAO,CAAP,GAAO,G,iBAOP,O,sBAHAyB,KAAKgsC,cAAgBhsC,KAAK2gB,WAAW81B,sBAAsBN,EAAIv2C,IAAI0B,MAAK,WACpE,OAAO,EAAKy3B,YAAYO,UAAS,MAErC,GAAMt5B,KAAKgsC,e,OAEX,OAFA,SACAhsC,KAAKk2B,eAAeI,SAAS,UAAW,KAAMt2B,KAAKN,YAAYnB,EAAE,qBACjE,GAAMyB,KAAKoe,Q,cAAX,S,4DAIF,YAAAs4B,8BAAN,SAAoCP,G,kHAE5BQ,EAAoB,KACpBC,EAAiB,+BAGhBT,EAAI/B,sBAAL,MAEkB,GAAMp0C,KAAK+b,qBAAqBmpB,WAC9CllC,KAAKN,YAAYnB,EAAE,kCAAmC,KACtDyB,KAAKN,YAAYnB,EAAE,OAAQyB,KAAKN,YAAYnB,EAAE,MAAO,Y,OACzD,OAHkB,UAQlByB,KAAKgsC,cAAgBhsC,KAAK2gB,WAAWk2B,oBAAoBV,EAAIv2C,IACxD0B,MAAK,SAAME,GAAQ,qC,8DAChB,GAAgB,MAAZA,EACA,MAAM,IAAI+F,MAAMvH,KAAKN,YAAYnB,EAAE,8BAMxB,OAHTuvC,EAAY,EAAA9lC,MAAMY,eAAepH,EAASssC,WAGjC,GAAM9tC,KAAKud,cAAc4zB,a,OACnB,OADfxZ,EAAS,SACM,GAAM33B,KAAKud,cAAcu5B,WAAWnf,EAAO/4B,IAAKkvC,EAAU/jC,S,OAO/E,OAPMgtC,EAAe,SACrBJ,EAAYI,EAAa58B,gBACzBy8B,EAAiB,8BAGXj3B,EAAU,IAAI,EAAA6wB,gDACZwG,iBAAmBL,EACpB,CAAP,EAAO32C,KAAK2gB,WAAWs2B,2CAA2Cd,EAAIv2C,GAAIu2C,EAAI/iB,OAAQzT,cAEzFre,MAAK,WACF,OAAO,EAAKy3B,YAAYO,UAAS,M,OAxBrC,I,QA4BE3Z,EAAU,IAAI,EAAA6wB,gDACZwG,iBAAmBL,EAC3B32C,KAAKgsC,cAAgBhsC,KAAK2gB,WAAWs2B,2CAA2Cd,EAAIv2C,GAAIu2C,EAAI/iB,OAAQzT,GAC/Fre,MAAK,WACF,OAAO,EAAKy3B,YAAYO,UAAS,M,iBAKzC,O,sBAAA,GAAMt5B,KAAKgsC,e,OAEX,OAFA,SACAhsC,KAAK+b,qBAAqBK,UAAU,UAAW,KAAMpc,KAAKN,YAAYnB,EAAEq4C,IACxE,GAAM52C,KAAKoe,Q,cAAX,S,6FAlIC84B,GAAsB,yS,iCAAtBA,EAAsB,moEC7BnC,wCAAkhC,wDAAgwG,iB,MAAnwI,6BAAkhC,+C,kNDyBjiC,GAIa,EAAAA,0B,+DAAAA,EAAsB,E,KAJlC,EAAAv0C,U,MAAU,CACP7B,SAAU,oBACV8B,YAAa,oC,6MAGJgzC,MAAK,E,KAAb,EAAA50C,W,wdE9BL,IAEA,cAKI,WAAYQ,GAAZ,MACI,YAAMA,IAAS,K,OACf,EAAK5B,GAAK,EAAKwH,oBAAoB,MACnC,EAAK6rB,SAAW,EAAK7rB,oBAAoB,YACzC,EAAK8rB,cAAgB,EAAK9rB,oBAAoB,iB,EAEtD,OAX+C,OAW/C,EAXA,CAFA,MAE+CQ,cAAlC,EAAAuvC,6B,yJCFb,SAAYr6B,GACR,qCACA,2DACA,2DACA,uDACA,mDACA,6EACA,yEAPJ,CAAY,EAAAA,iBAAA,EAAAA,eAAc,M,mGCA1B,SAAYqd,GACR,mBACA,2BACA,qBACA,+BAJJ,CAAY,EAAAA,cAAA,EAAAA,YAAW,M,sdCAvB,IAEA,cACI,WAAY2T,EAAmBC,G,OAC3B,YAAMD,EAAWC,IAAoB,KAE7C,OAJ6C,OAI7C,EAJA,CAFA,OAE6CC,aAAhC,EAAApP,2B,kGCFb,SAAYtO,GACR,yBACA,iBACA,yCACA,2CACA,uCACA,qCACA,uCACA,mCACA,mCACA,qCACA,wCACA,oCACA,kCACA,8BACA,wCACA,sCACA,kBACA,sCACA,wCACA,4CACA,0CArBJ,CAAY,EAAAA,aAAA,EAAAA,WAAU,M,8GCAtB,SAAY8mB,GACR,yBACA,2BACA,6BAHJ,CAAY,EAAAA,yBAAA,EAAAA,uBAAsB,M,+GCAlC,MAGI,SAAYC,GACRr3C,KAAKq3C,IAAa,MAAPA,EAAc,GAAKA,GAJzB,EAAAC,2B,2GCAb,W,mECAie,6BAAoD,sC,mBAAsF,Y,mBAAqB,kB,MAA1E,6EAAqD,2E,yBAAqY,+BAAyD,YAAkB,kB,uCAAlB,iD,yBAAiC,4BAA4C,YAAiB,kB,uCAAjB,wD,yBAAuB,yBAAyB,YAAiB,kB,uCAAjB,wD,yBAAjY,yBAAgC,4CAAgB,+C,uBAA4H,iCAAM,yCAAK,YAAoB,kCAAoF,kCAAM,gDAAmE,gDAAgD,mC,uBAA5V,8DAA6B,qBAA7B,CAA6B,YAA7B,CAA6B,eAA8F,0DAAuD,gDAAgF,4CAA+C,8C,yBAA3gB,+BAA8D,4CAAQ,yCAAK,4CAAgB,Y,mBAAiB,iBAAM,0CAAI,a,oBAAmB,iBAAM,kCAAM,kCAAS,kDAA8Z,mC,6BAAje,8DAA2B,iEAA6D,gDDiB1zB,8BAOI,KAAA/1C,SAAmB,E,wCAHVg2C,I,iCAAAA,EAAmB,k+BCrBhC,4BAAmG,4CAA4E,4CAA4B,4CAA2B,2CAAwC,Y,oBAA+B,iBAAM,iD,oBAA4F,+CAAyB,iBAAO,iBAAQ,kCAAU,kCAAO,8CAAyB,gDAAsK,mDAAqkB,kCAAO,+CAA2B,kDAA6E,a,oBAAkB,iBAAU,kCAAO,kCAAO,kCAAO,kCAAO,kB,MAArmC,qFAA8F,mFAAyJ,+CAA+K,+CAAuoB,kE,2HDiB3zC,GAIa,EAAAA,uB,+DAAAA,EAAmB,E,KAJ/B,EAAA50C,U,MAAU,CACP7B,SAAU,kBACV8B,YAAa,iC,u/CEnBjB,WAUA,GAJA,KACA,MACA,KAEA,QACA,SAEA,SAEA,Q,iGCf4d,6BAAoD,sC,mBAAsF,Y,mBAAqB,kB,MAA1E,6EAAqD,2E,sBAA4B,qCAA8D,Y,mBAAuC,kB,MAAvC,6F,yBAAsD,qCAAyC,YAAU,kB,6BAAV,sD,yBAA2kB,+BAAoD,YAAa,kB,uCAAb,4C,yBAAxP,yBAAwC,4CAAgB,+C,uBAAkH,iCAAM,yCAAK,YAAe,kCAA0E,kCAAM,2CAAK,aAA8B,iBAAM,mC,4CAAzP,yDAAwB,gBAAxB,CAAwB,YAAxB,CAAwB,eAAyF,qDAAkD,2CAAkD,uE,yBAA8O,+BAAoD,YAAa,kB,uCAAb,4C,yBAAxP,yBAAwC,4CAAgB,+C,uBAAkH,iCAAM,yCAAK,YAAe,kCAA0E,kCAAM,2CAAK,a,oBAAiC,iBAAM,mC,uBAA5P,yDAAwB,gBAAxB,CAAwB,YAAxB,CAAwB,eAAyF,qDAAkD,2CAAkD,wF,yBAA18B,6BAAyC,wCAAI,Y,mBAA8C,2BAAiG,Y,mBAAsB,iBAAK,iCAAK,gDAA6C,8CAAQ,2CAAK,8CAAgB,a,oBAAiB,iBAAM,2CAAI,a,oBAAwB,iBAAM,kCAAM,kCAAS,iDAAmU,kDAAsU,kCAAS,4C,6BAAn9B,mGAA+I,2EAA0G,iEAA2B,uEAAkE,uDAAmU,wD,yBAAmsB,+BAAoD,YAAa,kB,uCAAb,4C,yBAA4B,yBAAmC,YAA0B,kB,4DAA1B,mE,sBAAgC,yBAAoC,Y,mBAAiC,kB,MAAjC,uF,yBAA3X,yBAAwC,4CAAgB,+C,uBAAkH,iCAAM,yCAAK,YAAe,kCAA0E,kCAAM,gDAAmE,gDAA2E,mC,4CAA9V,yDAAwB,gBAAxB,CAAwB,YAAxB,CAAwB,eAAyF,qDAAkD,2CAAkD,yDAAmE,2D,yBAAjhB,6BAAwC,+CAA6C,4CAAQ,yCAAK,4CAAgB,Y,oBAAiB,iBAAM,2CAAI,a,oBAAmB,iBAAM,kCAAM,kCAAS,kDAAwa,kCAAS,4C,6BAApf,+DAA2B,iEAA6D,wD,mDAA8c,gCAA4F,yFAAoB,sC,mBAAsF,2CAAM,Y,mBAAoB,iBAAQ,iC,gCAAjK,mCAA0E,6EAA2D,kEDkB5qF,iBAmBI,WAAsB2a,EAAwCoD,EACpDjhB,GADY,KAAA6d,gBAAwC,KAAAoD,aACpD,KAAAjhB,cATV,KAAA83C,WAAsC,IAAIn0C,IAC1C,KAAAo0C,aAAoC,IAAIp0C,IACxC,KAAAq0C,SAAgC,IAAIr0C,IAEpC,KAAA9B,SAAmB,EACnB,KAAAo2C,MAAgB,E,OAMV,YAAAn3C,SAAN,W,iHAQqB,OAPjBR,KAAK43C,cAAgB53C,KAAK63C,MAAMtpC,QAAO,SAAAoD,GAAK,OAAC,EAAKmmC,WAAWnmC,MAC7D3R,KAAK+3C,cAAgB/3C,KAAK63C,MAAMtpC,QAAO,SAAAoD,GAAK,SAAKmmC,WAAWnmC,MAExD3R,KAAK+3C,cAAc97C,QAAU,IAC7B+D,KAAK23C,MAAO,GAGC,GAAM33C,KAAKg4C,iB,OAAtBx2C,EAAW,S,IAEG,EAAAA,EAAS/F,K,wBAAT,YAATw8C,EAAK,KACNnK,EAAY,EAAA9lC,MAAMY,eAAeqvC,EAAMr5C,KACzB,GAAMoB,KAAKud,cAAc26B,eAAeD,EAAM7kB,OAAQ0a,EAAU/jC,UAFvD,M,OAGV,OADbouC,EAAc,YAEhBn4C,KAAKw3C,WAAWhzC,IAAIyzC,EAAMr4C,GAAIkuC,GAC9B9tC,KAAKy3C,aAAajzC,IAAIyzC,EAAMr4C,GAAIu4C,EAAYltC,KAAK,O,wBALrC,I,oBASpBjL,KAAKuB,SAAU,E,YAGb,YAAA60B,OAAN,W,qHACIp2B,KAAKuB,SAAU,E,iBAEC,O,sBAAA,GAAMvB,KAAKo4C,gB,OAAjBx5C,EAAM,SACNy5C,EAAyB,G,IACZ,EAAAr4C,KAAK+3C,c,wBAAL,YAAR1gC,EAAI,KAEM,OADXy2B,EAAY9tC,KAAKw3C,WAAWt5C,IAAImZ,EAAKzX,KAEvC,MAEiB,GAAMI,KAAKud,cAAcu5B,WAAWl4C,EAAIA,IAAKkvC,EAAU/jC,UAL3C,M,OAK3BgtC,EAAe,SACrBsB,EAAgB97C,KAAK,CACjBqD,GAAIyX,EAAKzX,GACThB,IAAKm4C,EAAa58B,kB,wBARP,I,aAWF,SAAMna,KAAKs4C,mBAAmBD,I,cAA9B,SAER58C,KAAK4R,SAAQ,SAAA4qC,GAClB,IAAMp2C,EAAwB,KAAhBo2C,EAAMp2C,MAAeo2C,EAAMp2C,MAAQ,EAAKnC,YAAYnB,EAAE,sBACpE,EAAKm5C,SAASlzC,IAAIyzC,EAAMr4C,GAAIiC,MAGhC7B,KAAK23C,MAAO,E,+BAEZ33C,KAAK6B,MAAQ,EAAEqP,Q,oBAEnBlR,KAAKuB,SAAU,E,YAGT,YAAAu2C,WAAV,SAAqBzgC,GACjB,OAAOA,EAAK+N,SAAW,EAAAsP,2BAA2B6jB,UAGtC,YAAAP,cAAhB,W,gGAEW,OADDr4B,EAAU,IAAI,EAAA64B,4BAA4Bx4C,KAAK+3C,cAAclxC,KAAI,SAAAwQ,GAAQ,OAAAA,EAAKzX,OAC7E,GAAMI,KAAK2gB,WAAW83B,+BAA+Bz4C,KAAK2P,eAAgBgQ,I,OAAjF,MAAO,CAAP,EAAO,kBAGD,YAAAy4B,aAAV,WACI,OAAOp4C,KAAKud,cAAcE,UAAUzd,KAAK2P,iBAG7B,YAAA2oC,mBAAhB,SAAmCD,G,gGAExB,OADD14B,EAAU,IAAI,EAAA+4B,mCAAmCL,GAChD,GAAMr4C,KAAK2gB,WAAWg4B,gCAAgC34C,KAAK2P,eAAgBgQ,I,OAAlF,MAAO,CAAP,EAAO,kB,iCArFFi5B,GAAoB,4G,iCAApBA,EAAoB,ixCCtBjC,4BAAmG,4CAA4E,4CAA4B,4CAA2B,2CAAwC,Y,oBAA0B,iBAAM,iD,oBAA4F,+CAAyB,iBAAO,iBAAQ,kCAAU,kCAAO,8CAAyB,gDAAsK,wDAAoH,yDAAkE,4DAAghC,2DAAsnB,kCAAO,+CAA2B,oDAAkP,kDAA6E,a,oBAAkB,iBAAU,kCAAO,kCAAO,kCAAO,kCAAO,kB,MAAzkF,gFAAyF,oFAAyJ,+CAA8J,8DAAmH,4CAAsD,wDAAghC,uDAAmsB,4CAAqQ,mE,8IDkB/xF,GAIa,EAAAA,wB,+DAAAA,EAAoB,E,KAJhC,EAAAj2C,U,MAAU,CACP7B,SAAU,mBACV8B,YAAa,mC,sFAIJ+M,eAAgB,CAAF,C,KAAtB,EAAA3O,QACQ62C,MAAO,CAAF,C,KAAb,EAAA72C,W,mHEzBL,MAGI,SAAYq2C,GACRr3C,KAAKq3C,IAAa,MAAPA,EAAc,GAAKA,GAJzB,EAAAmB,+B,0+CCAb,WAOA,GAFA,KACA,KACA,Q,yFCP2d,qCAAsD,Y,mBAAuC,kB,MAAvC,6F,yBAAsD,qCAAyC,YAAU,kB,6BAAV,sD,sBAAsD,qCAAgE,Y,mBAAgC,kB,MAAhC,sF,yBAA2V,+BAAoD,YAAa,kB,uCAAb,4C,yBAAhP,yBAAgC,4CAAgB,+C,uBAAkH,iCAAM,yCAAK,YAAe,kCAA0E,kCAAM,mC,uBAAhN,yDAAwB,gBAAxB,CAAwB,YAAxB,CAAwB,eAAyF,qDAAkD,4C,yBAA3d,6BAA6B,uDAA+G,+CAA6C,4CAAQ,yCAAK,6CAAgB,a,oBAAiB,iBAAM,kCAAM,kCAAS,iDAAkR,kCAAS,4C,6BAA7d,+DAA4J,+DAA2D,gD,yBAA2nB,+BAAoD,YAAa,kB,uCAAb,4C,yBAA4B,yBAAmC,YAA0B,kB,4DAA1B,mE,sBAAgC,yBAAoC,Y,mBAAiC,kB,MAAjC,uF,yBAAnX,yBAAgC,4CAAgB,+C,uBAAkH,iCAAM,yCAAK,YAAe,kCAA0E,kCAAM,gDAAmE,gDAA2E,mC,4CAA9V,yDAAwB,gBAAxB,CAAwB,YAAxB,CAAwB,eAAyF,qDAAkD,2CAAkD,yDAAmE,2D,yBAA7f,6BAA4B,+CAA6C,4CAAQ,yCAAK,4CAAgB,Y,oBAAiB,iBAAM,2CAAI,a,oBAAmB,iBAAM,kCAAM,kCAAS,kDAAga,kCAAS,4C,6BAA5e,+DAA2B,iEAA6D,gD,mDAAsc,gCAAgH,yFAAoB,sC,mBAAsF,2CAAM,Y,mBAAwB,iBAAQ,iC,gCAArK,mCAA0E,6EAA2D,sEDWphE,iBAeI,WAAsB73B,EAAkCjhB,GAAlC,KAAAihB,aAAkC,KAAAjhB,cANxD,KAAAg4C,SAAgC,IAAIr0C,IAEpC,KAAA9B,SAAmB,EACnB,KAAAo2C,MAAgB,E,OAKV,YAAAvhB,OAAN,W,uGACIp2B,KAAKuB,SAAU,E,iBAEM,O,sBAAA,GAAMvB,KAAK64C,e,cAAX,SAERp9C,KAAK4R,SAAQ,SAAA4qC,GAClB,IAAMp2C,EAAwB,KAAhBo2C,EAAMp2C,MAAeo2C,EAAMp2C,MAAQ,EAAKnC,YAAYnB,EAAE,sBACpE,EAAKm5C,SAASlzC,IAAIyzC,EAAMr4C,GAAIiC,MAEhC7B,KAAK23C,MAAO,E,+BAEZ33C,KAAK6B,MAAQ,EAAEqP,Q,oBAGnBlR,KAAKuB,SAAU,E,YAGH,YAAAs3C,YAAhB,W,gGAEW,OADDl5B,EAAU,IAAI,EAAA64B,4BAA4Bx4C,KAAK63C,MAAMhxC,KAAI,SAAAwQ,GAAQ,OAAAA,EAAKzX,OACrE,GAAMI,KAAK2gB,WAAWm4B,4BAA4B94C,KAAK2P,eAAgBgQ,I,OAA9E,MAAO,CAAP,EAAO,kB,iCAhCFo5B,GAAmB,uE,iCAAnBA,EAAmB,ipCCfhC,4BAAmG,4CAA4E,4CAA4B,4CAA2B,2CAAwC,Y,oBAAyB,iBAAM,iD,oBAA4F,+CAAyB,iBAAO,iBAAQ,kCAAU,kCAAO,8CAAyB,wDAA4G,wDAAkE,2DAAuiB,2DAAkmB,kCAAO,+CAA2B,oDAA0Q,kDAA6E,a,oBAAkB,iBAAU,kCAAO,kCAAO,kCAAO,kCAAO,kB,MAAr7D,+EAAwF,oFAAiJ,uDAA2G,4CAAsD,4CAAuiB,2CAA+qB,8DAA6R,mE,8IDW3oE,GAIa,EAAAA,uB,+DAAAA,EAAmB,E,KAJ/B,EAAAp2C,U,MAAU,CACP7B,SAAU,kBACV8B,YAAa,kC,+DAIJ+M,eAAgB,CAAF,C,KAAtB,EAAA3O,QACQ62C,MAAO,CAAF,C,KAAb,EAAA72C,W,8+CElBL,W,GAMA,K,2BAEA,aAQI,WAAoB+a,GAAA,KAAAA,uBAFpB,KAAAxJ,KAAe,O,OAIT,YAAA/R,SAAN,W,gGAEmB,OADfR,KAAKuS,MAAO,IAAI8X,MAAOE,cAAcvgB,WACrC,EAAAhK,KAAe,GAAMA,KAAK+b,qBAAqB6d,yB,cAA/C,EAAKC,QAAU,SACf50B,SAASC,KAAKQ,UAAUC,IAAI,mB,YAGhC,YAAA4d,YAAA,WACIte,SAASC,KAAKQ,UAAUgB,OAAO,oB,iCAb1BsyC,GAAuB,8C,iCAAvBA,EAAuB,2ICZpC,+BAAgC,4CAAoD,YAAgC,oBAAK,Y,mBAAqC,iBAAO,iB,MAAjF,sEAAqC,4F,mEDQzH,GAIa,EAAAA,2B,+DAAAA,EAAuB,E,KAJnC,EAAAr2C,U,MAAU,CACP7B,SAAU,sBACV8B,YAAa,sC,miDEVjB,WAWA,GALA,KACA,KAIA,O,0FCX6B,0BAAuC,qC,mBAAsF,6CAAsB,Y,mBAAoB,iBAAQ,kC,MAAvG,6EAA2E,kE,sBAAwS,6BAAkC,sC,mBAAkH,6CAAsB,Y,mBAA+B,iBAAQ,2C,MAA7H,wFAAsF,6E,mEAA3U,yBAAiC,0CAA0D,qCAA2D,YAAW,uCAAiO,iCAAK,kC,uBAAnW,sEAAkH,oDAA0B,gD,yBAAxP,2BAAwE,6CAA6Y,kC,8BAA3X,oD,yBAAxH,6BAA8B,6CAA2d,2C,8BAAzb,qE,yBAAjR,6BAA6B,4CAAoL,uDAAygB,2C,6BAAzrB,8CAA+L,8C,sBAA+qB,0BAAuC,qC,mBAAsF,6CAAsB,Y,mBAAoB,iBAAQ,kC,MAAvG,6EAA2E,kE,sBAAyW,6BAAkC,sC,mBAAkH,6CAAsB,Y,mBAA+B,iBAAQ,2C,MAA7H,wFAAsF,6E,yBAAzX,yBAAiC,4CAAgB,+CAAoF,iCAAM,yCAAK,2CAAgD,aAAU,iBAAK,yDAAiO,kCAAM,mC,uBAAzX,2CAAe,YAAf,CAAe,eAAgF,sEAAoC,2CAA8B,gD,yBAAzT,+BAAmF,4CAAQ,8CAA4b,iCAAS,kC,8BAAnb,oD,yBAA3I,6BAA8B,iDAAyiB,2C,8BAA5f,qE,yBAApa,6BAA8B,4CAA0B,6CAAqC,6CAAiC,yCAAI,Y,oBAAsB,iBAAM,kCAAO,8CAAoL,yDAAulB,kCAAO,8CAA0B,4C,6BAA/0B,oEAAuC,8CAA+L,8CDallC,iBAWI,WAAoBk2B,EAAkCp5B,GAAlC,KAAAo5B,cAAkC,KAAAp5B,cAN7C,KAAAk2C,OAAQ,EAGjB,KAAA3G,QAAkB,E,OAKZ,YAAAzuC,SAAN,W,0FAEI,OADAyE,SAASC,KAAKQ,UAAUgB,OAAO,mBAC/B,GAAM1G,KAAKoe,Q,cAAX,S,YAGE,YAAAA,KAAN,W,gGACsB,SAAMpe,KAAK84B,YAAYS,mB,cAAnCN,EAAY,UACR8c,KAAK,EAAA/tC,MAAMwF,gBAAgBxN,KAAKN,YAAa,SACvDM,KAAKi5B,UAAYA,EACjBj5B,KAAKivC,QAAS,E,6CAlBTgK,GAAkB,wE,iCAAlBA,EAAkB,iuBCjB/B,uCAA0uB,wDAAi+B,iB,MAA5rD,6BAA0uB,+C,gJDazvB,GAIa,EAAAA,sB,+DAAAA,EAAkB,E,KAJ9B,EAAAt2C,U,MAAU,CACP7B,SAAU,gBACV8B,YAAa,gC,gEAGJgzC,MAAK,E,KAAb,EAAA50C,W,iGElBL,aiBAEA,EAAAk4C,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAY,SAC/B,EAAAA,mBAAmB,WAAY,SAC/B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAY,SAC/B,EAAAA,mBAAmB,WAAY,SAC/B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAU,MAC7B,EAAAA,mBAAmB,WAAY,SAC/B,EAAAA,mBAAmB,WAAY,SAE/B,gC,wCAkMaC,I,iCAAAA,I,sCAHE,CAAC,EAAAC,SAAU,GAAAh5B,WAAY,GAAA7I,cAAa,SA9LtC,CACL,EAAA8hC,aACA,EAAAC,YACA,EAAAC,qBACA,EAAAC,eACA,EAAAC,cAAcC,WACd,EAAAC,oBACA,EAAAC,iB,EARR,GAkMa,EAAAT,c,iEAAAA,GAAS,eAvLd,GAAAv4C,mBACA,EAAAi5C,yBACA,GAAAC,gBACA,EAAAC,4BACA,GAAAC,iBACA,EAAAC,qBACA,GAAAC,mBACA,GAAApU,iBACA,GAAAqU,uBACA,GAAAC,mBACA,GAAAC,uBACA,GAAAr4C,mBACA,GAAAs4C,gBACA,GAAAC,qBACA,GAAApjC,mBACA,EAAAqjC,gBACA,GAAAC,mBACA,GAAAC,gBACA,GAAAC,sBACA,GAAAC,qBACA,GAAAC,oBACA,GAAAC,kBACA,GAAAC,qBACA,GAAAC,mBACA,GAAAt4C,iBACA,GAAAu4C,qBACA,GAAAC,mBACA,GAAAhJ,wBACA,GAAAiJ,oBACA,GAAA/N,iBACA,GAAAgO,qBACA,GAAAC,kBACA,GAAAC,4BACA,GAAAC,6BACA,GAAAC,uBACA,GAAAC,4BACA,GAAAC,qBACA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,oCACA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,iCACA,GAAAC,6BACA,GAAAC,0BACA,GAAAC,gBACA,GAAAC,gCACA,GAAAC,qBACA,GAAAC,uBACA,EAAAxiB,gBACA,EAAAkf,wBACA,GAAA9F,mBACA,EAAAqJ,cACA,GAAAt8C,SACA,GAAAye,cACA,GAAA89B,gBACA,GAAAC,iCACA,GAAApmC,uBACA,GAAAqmC,iBACA,EAAAC,cACA,EAAAC,eACA,EAAAjjB,gBACA,EAAAkjB,wBACA,GAAAC,iBACA,mBACA,oBACA,GAAAC,6BACA,GAAArc,2BACA,GAAAsc,kCACA,wBACA,sBACA,uBACA,sBACA,oBACA,6BACA,wBACA,wBACA,uBACA,kBACA,mBACA,mCACA,mBACA,oCACA,wBACA,sBACA,kBACA,uBACA,kBACA,kBACA,sBACA,oBACA,yBACA,kCACA,qBACA,kBACA,2BACA,uBACA,uBACA,sBACA,GAAA9F,uBACA,EAAA+F,4BACA,oCACA,kBACA,gCACA,GAAAC,2BACA,GAAAC,kCACA,EAAAnnB,0BACA,EAAAonB,0BACA,GAAAn3B,iBACA,GAAAo3B,iBACA,GAAAC,iBACA,GAAAC,oBACA,EAAAC,uBACA,EAAAC,0BACA,EAAAC,kBACA,GAAAC,+BACA,GAAAC,kBACA,GAAAx9B,WACA,GAAAy9B,oBACA,oBACA,wBACA,GAAAC,cACA,GAAAC,kBACA,GAAAC,eACA,EAAAC,aACA,GAAAloC,mBACA,GAAAW,kBACA,GAAAuT,iBACA,GAAAi0B,eACA,GAAAC,wBACA,GAAAC,gCACA,EAAAC,mBACA,GAAAC,sBACA,GAAAC,wBACA,EAAAC,0BACA,GAAAC,2BACA,GAAAC,wBACA,GAAAnnB,yBACA,GAAAonB,2BACA,GAAAC,0BACA,GAAAC,iCACA,GAAAC,mBACA,GAAAC,uBACA,EAAAC,4BACA,GAAAC,qBACA,EAAAC,oBACA,GAAAC,0BACA,GAAA5nC,aACA,GAAA6nC,eACA,GAAAC,qBACA,EAAAC,0BACA,EAAAC,6BACA,GAAAC,6BACA,GAAAvG,mBACA,GAAAwG,uCACA,GAAAC,8BACA,GAAAC,yBACA,GAAAC,iCACA,GAAAC,0BACA,GAAAC,iCACA,GAAAC,2BACA,GAAAC,2BACA,GAAAC,6BACA,GAAAC,2BACA,GAAArN,8BAA4B,SA7K5B,EAAAwG,aACA,EAAAC,YACA,EAAAC,qBACA,EAAAC,eAAc,iBAEd,EAAAG,oBACA,EAAAC,cAAY,SA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","file":"app/main.c4e52be64336d86f65df.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([972,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export abstract class I18nService {\n    locale: string;\n    supportedTranslationLocales: string[];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames: Map<string, string>;\n    t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n    translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { DeviceType } from '../enums/deviceType';\nimport { ThemeType } from '../enums/themeType';\n\nexport abstract class PlatformUtilsService {\n    identityClientId: string;\n    getDevice: () => DeviceType;\n    getDeviceString: () => string;\n    isFirefox: () => boolean;\n    isChrome: () => boolean;\n    isEdge: () => boolean;\n    isOpera: () => boolean;\n    isVivaldi: () => boolean;\n    isSafari: () => boolean;\n    isIE: () => boolean;\n    isMacAppStore: () => boolean;\n    isViewOpen: () => Promise<boolean>;\n    launchUri: (uri: string, options?: any) => void;\n    saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n    getApplicationVersion: () => Promise<string>;\n    supportsWebAuthn: (win: Window) => boolean;\n    supportsDuo: () => boolean;\n    showToast: (type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any) => void;\n    showDialog: (body: string, title?: string, confirmText?: string, cancelText?: string,\n        type?: string, bodyIsHtml?: boolean) => Promise<boolean>;\n    isDev: () => boolean;\n    isSelfHost: () => boolean;\n    copyToClipboard: (text: string, options?: any) => void | boolean;\n    readFromClipboard: (options?: any) => Promise<string>;\n    supportsBiometric: () => Promise<boolean>;\n    authenticateBiometric: () => Promise<boolean>;\n    getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n    onDefaultSystemThemeChange: (callback: ((theme: ThemeType.Light | ThemeType.Dark) => unknown)) => unknown;\n    getEffectiveTheme: () => Promise<ThemeType>;\n    supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from '../enums/policyType';\n\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\n\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EmergencyAccessAcceptRequest } from '../models/request/emergencyAccessAcceptRequest';\nimport { EmergencyAccessConfirmRequest } from '../models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessInviteRequest } from '../models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessPasswordRequest } from '../models/request/emergencyAccessPasswordRequest';\nimport { EmergencyAccessUpdateRequest } from '../models/request/emergencyAccessUpdateRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationSsoRequest } from '../models/request/organization/organizationSsoRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationImportRequest } from '../models/request/organizationImportRequest';\nimport { OrganizationKeysRequest } from '../models/request/organizationKeysRequest';\nimport { OrganizationSubscriptionUpdateRequest } from '../models/request/organizationSubscriptionUpdateRequest';\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserBulkConfirmRequest } from '../models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from '../models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from '../models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { OrganizationUserResetPasswordRequest } from '../models/request/organizationUserResetPasswordRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PolicyRequest } from '../models/request/policyRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { ProviderAddOrganizationRequest } from '../models/request/provider/providerAddOrganizationRequest';\nimport { ProviderOrganizationCreateRequest } from '../models/request/provider/providerOrganizationCreateRequest';\nimport { ProviderSetupRequest } from '../models/request/provider/providerSetupRequest';\nimport { ProviderUpdateRequest } from '../models/request/provider/providerUpdateRequest';\nimport { ProviderUserAcceptRequest } from '../models/request/provider/providerUserAcceptRequest';\nimport { ProviderUserBulkConfirmRequest } from '../models/request/provider/providerUserBulkConfirmRequest';\nimport { ProviderUserBulkRequest } from '../models/request/provider/providerUserBulkRequest';\nimport { ProviderUserConfirmRequest } from '../models/request/provider/providerUserConfirmRequest';\nimport { ProviderUserInviteRequest } from '../models/request/provider/providerUserInviteRequest';\nimport { ProviderUserUpdateRequest } from '../models/request/provider/providerUserUpdateRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { SendAccessRequest } from '../models/request/sendAccessRequest';\nimport { SendRequest } from '../models/request/sendRequest';\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTempPasswordRequest } from '../models/request/updateTempPasswordRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from '../models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from '../models/request/updateTwoFactorWebAuthnRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { AttachmentResponse } from '../models/response/attachmentResponse';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport {\n    EmergencyAccessGranteeDetailsResponse,\n    EmergencyAccessGrantorDetailsResponse,\n    EmergencyAccessTakeoverResponse,\n    EmergencyAccessViewResponse\n} from '../models/response/emergencyAccessResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityCaptchaResponse } from '../models/response/identityCaptchaResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationSsoResponse } from '../models/response/organization/organizationSsoResponse';\nimport { OrganizationAutoEnrollStatusResponse } from '../models/response/organizationAutoEnrollStatusResponse';\nimport { OrganizationKeysResponse } from '../models/response/organizationKeysResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport { OrganizationUserBulkPublicKeyResponse } from '../models/response/organizationUserBulkPublicKeyResponse';\nimport { OrganizationUserBulkResponse } from '../models/response/organizationUserBulkResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserResetPasswordDetailsReponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PlanResponse } from '../models/response/planResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { ProviderOrganizationOrganizationDetailsResponse, ProviderOrganizationResponse } from '../models/response/provider/providerOrganizationResponse';\nimport { ProviderResponse } from '../models/response/provider/providerResponse';\nimport { ProviderUserBulkPublicKeyResponse } from '../models/response/provider/providerUserBulkPublicKeyResponse';\nimport { ProviderUserBulkResponse } from '../models/response/provider/providerUserBulkResponse';\nimport { ProviderUserResponse, ProviderUserUserDetailsResponse } from '../models/response/provider/providerUserResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SendAccessResponse } from '../models/response/sendAccessResponse';\nimport { SendFileDownloadDataResponse } from '../models/response/sendFileDownloadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\nimport { SendResponse } from '../models/response/sendResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\nimport { TaxRateResponse } from '../models/response/taxRateResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport { ChallengeResponse, TwoFactorWebAuthnResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nimport { SendAccessView } from '../models/view/sendAccessView';\n\nexport abstract class ApiService {\n    postIdentityToken: (request: TokenRequest) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n    refreshIdentityToken: () => Promise<any>;\n\n    getProfile: () => Promise<ProfileResponse>;\n    getUserBilling: () => Promise<BillingResponse>;\n    getUserSubscription: () => Promise<SubscriptionResponse>;\n    getTaxInfo: () => Promise<TaxInfoResponse>;\n    putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n    putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n    postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n    postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n    postEmail: (request: EmailRequest) => Promise<any>;\n    postPassword: (request: PasswordRequest) => Promise<any>;\n    setPassword: (request: SetPasswordRequest) => Promise<any>;\n    postSecurityStamp: (request: PasswordVerificationRequest) => Promise<any>;\n    deleteAccount: (request: PasswordVerificationRequest) => Promise<any>;\n    getAccountRevisionDate: () => Promise<number>;\n    postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n    postRegister: (request: RegisterRequest) => Promise<any>;\n    postPremium: (data: FormData) => Promise<PaymentResponse>;\n    postIapCheck: (request: IapCheckRequest) => Promise<any>;\n    postReinstatePremium: () => Promise<any>;\n    postCancelPremium: () => Promise<any>;\n    postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n    postAccountPayment: (request: PaymentRequest) => Promise<any>;\n    postAccountLicense: (data: FormData) => Promise<any>;\n    postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n    postAccountKeys: (request: KeysRequest) => Promise<any>;\n    postAccountVerifyEmail: () => Promise<any>;\n    postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n    postAccountVerifyPassword: (request: PasswordVerificationRequest) => Promise<any>;\n    postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n    postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n    postAccountKdf: (request: KdfRequest) => Promise<any>;\n    postUserApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postUserRotateApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n\n    getFolder: (id: string) => Promise<FolderResponse>;\n    postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n    putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n    deleteFolder: (id: string) => Promise<any>;\n\n    getSend: (id: string) => Promise<SendResponse>;\n    postSendAccess: (id: string, request: SendAccessRequest, apiUrl?: string) => Promise<SendAccessResponse>;\n    getSends: () => Promise<ListResponse<SendResponse>>;\n    postSend: (request: SendRequest) => Promise<SendResponse>;\n    postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n    postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n    putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n    putSendRemovePassword: (id: string) => Promise<SendResponse>;\n    deleteSend: (id: string) => Promise<any>;\n    getSendFileDownloadData: (send: SendAccessView, request: SendAccessRequest, apiUrl?: string) => Promise<SendFileDownloadDataResponse>;\n    renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n    getCipher: (id: string) => Promise<CipherResponse>;\n    getCipherAdmin: (id: string) => Promise<CipherResponse>;\n    getAttachmentData: (cipherId: string, attachmentId: string, emergencyAccessId?: string) => Promise<AttachmentResponse>;\n    getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n    postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n    postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    deleteCipher: (id: string) => Promise<any>;\n    deleteCipherAdmin: (id: string) => Promise<any>;\n    deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n    putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n    putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n    putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    postPurgeCiphers: (request: PasswordVerificationRequest, organizationId?: string) => Promise<any>;\n    postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n    postImportOrganizationCiphers: (organizationId: string, request: ImportOrganizationCiphersRequest) => Promise<any>;\n    putDeleteCipher: (id: string) => Promise<any>;\n    putDeleteCipherAdmin: (id: string) => Promise<any>;\n    putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putRestoreCipher: (id: string) => Promise<CipherResponse>;\n    putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n    putRestoreManyCiphers: (request: CipherBulkRestoreRequest) => Promise<ListResponse<CipherResponse>>;\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n    postCipherAttachment: (id: string, request: AttachmentRequest) => Promise<AttachmentUploadDataResponse>;\n    deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n    deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n    postShareCipherAttachment: (id: string, attachmentId: string, data: FormData,\n        organizationId: string) => Promise<any>;\n    renewAttachmentUploadUrl: (id: string, attachmentId: string) => Promise<AttachmentUploadDataResponse>;\n    postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n    getCollectionDetails: (organizationId: string, id: string) => Promise<CollectionGroupDetailsResponse>;\n    getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n    getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n    getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n    postCollection: (organizationId: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    putCollectionUsers: (organizationId: string, id: string, request: SelectionReadOnlyRequest[]) => Promise<any>;\n    putCollection: (organizationId: string, id: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    deleteCollection: (organizationId: string, id: string) => Promise<any>;\n    deleteCollectionUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n    getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n    getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n    postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n    deleteGroup: (organizationId: string, id: string) => Promise<any>;\n    deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n    getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n    getPoliciesByToken: (organizationId: string, token: string, email: string, organizationUserId: string) =>\n        Promise<ListResponse<PolicyResponse>>;\n    putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<PolicyResponse>;\n\n    getOrganizationUser: (organizationId: string, id: string) => Promise<OrganizationUserDetailsResponse>;\n    getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n    getOrganizationUsers: (organizationId: string) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n    getOrganizationUserResetPasswordDetails: (organizationId: string, id: string)\n        => Promise<OrganizationUserResetPasswordDetailsReponse>;\n    postOrganizationUserInvite: (organizationId: string, request: OrganizationUserInviteRequest) => Promise<any>;\n    postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n    postManyOrganizationUserReinvite: (organizationId: string, request: OrganizationUserBulkRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n    postOrganizationUserAccept: (organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest) => Promise<any>;\n    postOrganizationUserConfirm: (organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest) => Promise<any>;\n    postOrganizationUsersPublicKey: (organizationId: string, request: OrganizationUserBulkRequest) =>\n        Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n    postOrganizationUserBulkConfirm: (organizationId: string, request: OrganizationUserBulkConfirmRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n    putOrganizationUser: (organizationId: string, id: string, request: OrganizationUserUpdateRequest) => Promise<any>;\n    putOrganizationUserGroups: (organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest) => Promise<any>;\n    putOrganizationUserResetPasswordEnrollment: (organizationId: string, userId: string,\n        request: OrganizationUserResetPasswordEnrollmentRequest) => Promise<any>;\n    putOrganizationUserResetPassword: (organizationId: string, id: string,\n        request: OrganizationUserResetPasswordRequest) => Promise<any>;\n    deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n    deleteManyOrganizationUsers: (organizationId: string, request: OrganizationUserBulkRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n    getSync: () => Promise<SyncResponse>;\n    postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n    postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n    getSettingsDomains: () => Promise<DomainsResponse>;\n    putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n    getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorOrganizationProviders: (organizationId: string) => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorAuthenticator: (request: PasswordVerificationRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    getTwoFactorEmail: (request: PasswordVerificationRequest) => Promise<TwoFactorEmailResponse>;\n    getTwoFactorDuo: (request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorOrganizationDuo: (organizationId: string,\n        request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorYubiKey: (request: PasswordVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n    getTwoFactorWebAuthn: (request: PasswordVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n    getTwoFactorWebAuthnChallenge: (request: PasswordVerificationRequest) => Promise<ChallengeResponse>;\n    getTwoFactorRecover: (request: PasswordVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n    putTwoFactorAuthenticator: (\n        request: UpdateTwoFactorAuthenticatorRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n    putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorOrganizationDuo: (organizationId: string,\n        request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorYubiKey: (request: UpdateTwoFactorYubioOtpRequest) => Promise<TwoFactorYubiKeyResponse>;\n    putTwoFactorWebAuthn: (request: UpdateTwoFactorWebAuthnRequest) => Promise<TwoFactorWebAuthnResponse>;\n    deleteTwoFactorWebAuthn: (request: UpdateTwoFactorWebAuthnDeleteRequest) => Promise<TwoFactorWebAuthnResponse>;\n    putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    putTwoFactorOrganizationDisable: (organizationId: string,\n        request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n    postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n    postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n    getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n    getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n    getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n    getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n    putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n    deleteEmergencyAccess: (id: string) => Promise<any>;\n    postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n    postEmergencyAccessReinvite: (id: string) => Promise<any>;\n    postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n    postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n    postEmergencyAccessInitiate: (id: string) => Promise<any>;\n    postEmergencyAccessApprove: (id: string) => Promise<any>;\n    postEmergencyAccessReject: (id: string) => Promise<any>;\n    postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n    postEmergencyAccessPassword: (id: string, request: EmergencyAccessPasswordRequest) => Promise<any>;\n    postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n    getOrganization: (id: string) => Promise<OrganizationResponse>;\n    getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n    getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n    getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n    getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n    getOrganizationAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n    getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n    postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n    putOrganization: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n    putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n    postLeaveOrganization: (id: string) => Promise<any>;\n    postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n    postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n    postOrganizationApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationRotateApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n    postOrganizationUpgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n    postOrganizationUpdateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n    postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n    postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n    postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n    postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n    postOrganizationCancel: (id: string) => Promise<any>;\n    postOrganizationReinstate: (id: string) => Promise<any>;\n    deleteOrganization: (id: string, request: PasswordVerificationRequest) => Promise<any>;\n    getPlans: () => Promise<ListResponse<PlanResponse>>;\n    getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n    getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n    postOrganizationKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n\n    postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n    getProvider: (id: string) => Promise<ProviderResponse>;\n    putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n    getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n    getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n    postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n    postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n    postManyProviderUserReinvite: (providerId: string, request: ProviderUserBulkRequest) => Promise<ListResponse<ProviderUserBulkResponse>>;\n    postProviderUserAccept: (providerId: string, id: string, request: ProviderUserAcceptRequest) => Promise<any>;\n    postProviderUserConfirm: (providerId: string, id: string, request: ProviderUserConfirmRequest) => Promise<any>;\n    postProviderUsersPublicKey: (providerId: string, request: ProviderUserBulkRequest) =>\n        Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n    postProviderUserBulkConfirm: (providerId: string, request: ProviderUserBulkConfirmRequest) => Promise<ListResponse<ProviderUserBulkResponse>>;\n    putProviderUser: (providerId: string, id: string, request: ProviderUserUpdateRequest) => Promise<any>;\n    deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n    deleteManyProviderUsers: (providerId: string, request: ProviderUserBulkRequest) => Promise<ListResponse<ProviderUserBulkResponse>>;\n    getProviderClients: (providerId: string) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n    postProviderAddOrganization: (providerId: string, request: ProviderAddOrganizationRequest) => Promise<any>;\n    postProviderCreateOrganization: (providerId: string, request: ProviderOrganizationCreateRequest) => Promise<ProviderOrganizationResponse>;\n    deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n    getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsCipher: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganization: (id: string, start: string, end: string,\n        token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganizationUser: (organizationId: string, id: string,\n        start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsProvider: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsProviderUser: (providerId: string, id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n    deleteSsoUser: (organizationId: string) => Promise<any>;\n    getSsoUserIdentifier: () => Promise<string>;\n\n    getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n    getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n    postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n    postSetupPayment: () => Promise<string>;\n\n    getActiveBearerToken: () => Promise<string>;\n    fetch: (request: Request) => Promise<Response>;\n    nativeFetch: (request: Request) => Promise<Response>;\n\n    preValidateSso: (identifier: string) => Promise<boolean>;\n}\n","import { OrganizationData } from '../models/data/organizationData';\nimport { ProviderData } from '../models/data/providerData';\nimport { Organization } from '../models/domain/organization';\nimport { Provider } from '../models/domain/provider';\n\nimport { KdfType } from '../enums/kdfType';\n\nexport abstract class UserService {\n    setInformation: (userId: string, email: string, kdf: KdfType, kdfIterations: number) => Promise<any>;\n    setEmailVerified: (emailVerified: boolean) => Promise<any>;\n    setSecurityStamp: (stamp: string) => Promise<any>;\n    setForcePasswordReset: (forcePasswordReset: boolean) => Promise<any>;\n    getUserId: () => Promise<string>;\n    getEmail: () => Promise<string>;\n    getSecurityStamp: () => Promise<string>;\n    getKdf: () => Promise<KdfType>;\n    getKdfIterations: () => Promise<number>;\n    getEmailVerified: () => Promise<boolean>;\n    getForcePasswordReset: () => Promise<boolean>;\n    clear: () => Promise<any>;\n    isAuthenticated: () => Promise<boolean>;\n    canAccessPremium: () => Promise<boolean>;\n    getOrganization: (id: string) => Promise<Organization>;\n    getOrganizationByIdentifier: (identifier: string) => Promise<Organization>;\n    getAllOrganizations: () => Promise<Organization[]>;\n    replaceOrganizations: (organizations: { [id: string]: OrganizationData; }) => Promise<any>;\n    clearOrganizations: (userId: string) => Promise<any>;\n    getProvider: (id: string) => Promise<Provider>;\n    getAllProviders: () => Promise<Provider[]>;\n    replaceProviders: (providers: { [id: string]: ProviderData; }) => Promise<any>;\n    clearProviders: (userId: string) => Promise<any>;\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Pipe({\n    name: 'i18n',\n})\nexport class I18nPipe implements PipeTransform {\n    constructor(private i18nService: I18nService) { }\n\n    transform(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.i18nService.t(id, p1, p2, p3);\n    }\n}\n","import { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\nimport { ProfileProviderOrganizationResponse } from '../models/response/profileProviderOrganizationResponse';\nimport { ProfileProviderResponse } from '../models/response/profileProviderResponse';\n\nimport { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\n\nimport { KeySuffixOptions } from './storage.service';\n\nexport abstract class CryptoService {\n    setKey: (key: SymmetricCryptoKey) => Promise<any>;\n    setKeyHash: (keyHash: string) => Promise<{}>;\n    setEncKey: (encKey: string) => Promise<{}>;\n    setEncPrivateKey: (encPrivateKey: string) => Promise<{}>;\n    setOrgKeys: (orgs: ProfileOrganizationResponse[], providerOrgs: ProfileProviderOrganizationResponse[]) => Promise<{}>;\n    setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<{}>;\n    getKey: (keySuffix?: KeySuffixOptions) => Promise<SymmetricCryptoKey>;\n    getKeyFromStorage: (keySuffix: KeySuffixOptions) => Promise<SymmetricCryptoKey>;\n    getKeyHash: () => Promise<string>;\n    compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n    getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n    getPublicKey: () => Promise<ArrayBuffer>;\n    getPrivateKey: () => Promise<ArrayBuffer>;\n    getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n    getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n    getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n    getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n    hasKey: () => Promise<boolean>;\n    hasKeyInMemory: () => boolean;\n    hasKeyStored: (keySuffix?: KeySuffixOptions) => Promise<boolean>;\n    hasEncKey: () => Promise<boolean>;\n    clearKey: (clearSecretStorage?: boolean) => Promise<any>;\n    clearKeyHash: () => Promise<any>;\n    clearEncKey: (memoryOnly?: boolean) => Promise<any>;\n    clearKeyPair: (memoryOnly?: boolean) => Promise<any>;\n    clearOrgKeys: (memoryOnly?: boolean) => Promise<any>;\n    clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n    clearPinProtectedKey: () => Promise<any>;\n    clearKeys: () => Promise<any>;\n    toggleKey: () => Promise<any>;\n    makeKey: (password: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    makeKeyFromPin: (pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs?: EncString) => Promise<SymmetricCryptoKey>;\n    makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n    makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n    makePinKey: (pin: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n    hashPassword: (password: string, key: SymmetricCryptoKey, hashPurpose?: HashPurpose) => Promise<string>;\n    makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n    remakeEncKey: (key: SymmetricCryptoKey, encKey?: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n    encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n    encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n    rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n    decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n    decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    randomNumber: (min: number, max: number) => Promise<number>;\n    validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","export abstract class MessagingService {\n    send: (subscriber: string, arg?: any) => void;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appA11yTitle]',\n})\nexport class A11yTitleDirective {\n    @Input() set appA11yTitle(title: string) {\n        this.title = title;\n    }\n\n    private title: string;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (!this.el.nativeElement.hasAttribute('title')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'title', this.title);\n        }\n        if (!this.el.nativeElement.hasAttribute('aria-label')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'aria-label', this.title);\n        }\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    OnChanges,\n} from '@angular/core';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\nimport { ValidationService } from '../services/validation.service';\n\n@Directive({\n    selector: '[appApiAction]',\n})\nexport class ApiActionDirective implements OnChanges {\n    @Input() appApiAction: Promise<any>;\n\n    constructor(private el: ElementRef, private validationService: ValidationService,\n        private logService: LogService) { }\n\n    ngOnChanges(changes: any) {\n        if (this.appApiAction == null || this.appApiAction.then == null) {\n            return;\n        }\n\n        this.el.nativeElement.loading = true;\n\n        this.appApiAction.then((response: any) => {\n            this.el.nativeElement.loading = false;\n        }, (e: any) => {\n            this.el.nativeElement.loading = false;\n\n            if ((e instanceof ErrorResponse || e.constructor.name === 'ErrorResponse') && (e as ErrorResponse).captchaRequired) {\n                this.logService.error('Captcha required error response: ' + e.getSingleMessage());\n                return;\n            }\n            this.logService?.error(`Received API exception: ${e}`);\n            this.validationService.showError(e);\n        });\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\n\n@Component({\n    selector: 'app-callout',\n    templateUrl: 'callout.component.html',\n})\nexport class CalloutComponent implements OnInit {\n    @Input() type = 'info';\n    @Input() icon: string;\n    @Input() title: string;\n    @Input() clickable: boolean;\n    @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n    @Input() enforcedPolicyMessage: string;\n\n    calloutStyle: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnInit() {\n        this.calloutStyle = this.type;\n\n        if (this.enforcedPolicyMessage === undefined) {\n            this.enforcedPolicyMessage = this.i18nService.t('masterPasswordPolicyInEffect');\n        }\n\n        if (this.type === 'warning' || this.type === 'danger') {\n            if (this.type === 'danger') {\n                this.calloutStyle = 'danger';\n            }\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('warning');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-warning';\n            }\n        } else if (this.type === 'error') {\n            this.calloutStyle = 'danger';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('error');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-bolt';\n            }\n        } else if (this.type === 'tip') {\n            this.calloutStyle = 'success';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('tip');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-lightbulb-o';\n            }\n        }\n    }\n\n    getPasswordScoreAlertDisplay() {\n        if (this.enforcedPolicyOptions == null) {\n            return '';\n        }\n\n        let str: string;\n        switch (this.enforcedPolicyOptions.minComplexity) {\n            case 4:\n                str = this.i18nService.t('strong');\n                break;\n            case 3:\n                str = this.i18nService.t('good');\n                break;\n            default:\n                str = this.i18nService.t('weak');\n                break;\n        }\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\n    }\n}\n","<div class=\"callout callout-{{calloutStyle}}\" [ngClass]=\"{'clickable': clickable}\" role=\"alert\"> <h3 class=\"callout-heading\" *ngIf=\"title\"> <i class=\"fa {{icon}}\" *ngIf=\"icon\" aria-hidden=\"true\"></i> {{title}} </h3> <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\"> {{enforcedPolicyMessage}} <ul> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </div> <ng-content></ng-content> </div> ","import {\n    ApplicationRef,\n    ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EmbeddedViewRef,\n    Injectable,\n    Injector,\n    Type,\n    ViewContainerRef\n} from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { DynamicModalComponent } from '../components/modal/dynamic-modal.component';\nimport { ModalInjector } from '../components/modal/modal-injector';\nimport { ModalRef } from '../components/modal/modal.ref';\n\nexport class ModalConfig<D = any> {\n    data?: D;\n    allowMultipleModals: boolean = false;\n}\n\n@Injectable()\nexport class ModalService {\n    protected modalCount = 0;\n\n    // Lazy loaded modules are not available in componentFactoryResolver,\n    // therefore modules needs to manually initialize their resolvers.\n    private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private applicationRef: ApplicationRef,\n        private injector: Injector) {}\n\n    async openViewRef<T>(componentType: Type<T>, viewContainerRef: ViewContainerRef,\n        setComponentParameters: (component: T) => void = null): Promise<[ModalRef, T]> {\n\n        this.modalCount++;\n        const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n        modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n        viewContainerRef.insert(modalComponentRef.hostView);\n\n        await modalRef.onCreated.pipe(first()).toPromise();\n\n        return [modalRef, modalComponentRef.instance.componentRef.instance];\n    }\n\n    open(componentType: Type<any>, config?: ModalConfig) {\n        if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n            return;\n        }\n        this.modalCount++;\n\n        const [modalRef, _] = this.openInternal(componentType, config, true);\n\n        return modalRef;\n    }\n\n    registerComponentFactoryResolver<T>(componentType: Type<T>, componentFactoryResolver: ComponentFactoryResolver): void {\n        this.factoryResolvers.set(componentType, componentFactoryResolver);\n    }\n\n    resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n        if (this.factoryResolvers.has(componentType)) {\n            return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n        }\n\n        return this.componentFactoryResolver.resolveComponentFactory(componentType);\n    }\n\n    protected openInternal(componentType: Type<any>, config?: ModalConfig, attachToDom?: boolean):\n        [ModalRef, ComponentRef<DynamicModalComponent>] {\n\n        const [modalRef, componentRef] = this.createModalComponent(config);\n        componentRef.instance.childComponentType = componentType;\n\n        if (attachToDom) {\n            this.applicationRef.attachView(componentRef.hostView);\n            const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n            document.body.appendChild(domElem);\n        }\n\n        modalRef.onClosed.pipe(first()).subscribe(() => {\n            if (attachToDom) {\n                this.applicationRef.detachView(componentRef.hostView);\n            }\n            componentRef.destroy();\n            this.modalCount--;\n        });\n\n        this.setupHandlers(modalRef);\n\n        return [modalRef, componentRef];\n    }\n\n    protected setupHandlers(modalRef: ModalRef) {\n        let backdrop: HTMLElement = null;\n\n        // Add backdrop, setup [data-dismiss] handler.\n        modalRef.onCreated.pipe(first()).subscribe(el => {\n            document.body.classList.add('modal-open');\n\n            backdrop = document.createElement('div');\n            backdrop.className = 'modal-backdrop fade';\n            backdrop.style.zIndex = `${this.modalCount}040`;\n            document.body.appendChild(backdrop);\n\n            el.querySelector('.modal-dialog').addEventListener('click', (e: Event) => {\n                e.stopPropagation();\n            });\n\n            const modalEl: HTMLElement = el.querySelector('.modal');\n            modalEl.style.zIndex = `${this.modalCount}050`;\n\n            const modals = Array.from(el.querySelectorAll('.modal, .modal *[data-dismiss=\"modal\"]'));\n            for (const closeElement of modals) {\n                closeElement.addEventListener('click', event => {\n                    modalRef.close();\n                });\n            }\n        });\n\n        // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n        modalRef.onClose.pipe(first()).subscribe(() => {\n            modalRef.closed();\n\n            if (this.modalCount === 0) {\n                document.body.classList.remove('modal-open');\n            }\n\n            if (backdrop != null) {\n                document.body.removeChild(backdrop);\n            }\n        });\n    }\n\n    protected createModalComponent(config: ModalConfig): [ModalRef, ComponentRef<DynamicModalComponent>] {\n        const modalRef = new ModalRef();\n\n        const map = new WeakMap();\n        map.set(ModalConfig, config);\n        map.set(ModalRef, modalRef);\n\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n        const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n        return [modalRef, componentRef];\n    }\n}\n","import { CipherType } from '../enums/cipherType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Field } from '../models/domain/field';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\n\nexport abstract class CipherService {\n    decryptedCipherCache: CipherView[];\n\n    clearCache: () => void;\n    encrypt: (model: CipherView, key?: SymmetricCryptoKey, originalCipher?: Cipher) => Promise<Cipher>;\n    encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n    encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n    get: (id: string) => Promise<Cipher>;\n    getAll: () => Promise<Cipher[]>;\n    getAllDecrypted: () => Promise<CipherView[]>;\n    getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n    getAllDecryptedForUrl: (url: string, includeOtherTypes?: CipherType[],\n        defaultMatch?: UriMatchType) => Promise<CipherView[]>;\n    getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n    getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n    getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n    getNextCipherForUrl: (url: string) => Promise<CipherView>;\n    updateLastUsedIndexForUrl: (url: string) => void;\n    updateLastUsedDate: (id: string) => Promise<void>;\n    updateLastLaunchedDate: (id: string) => Promise<void>;\n    saveNeverDomain: (domain: string) => Promise<void>;\n    saveWithServer: (cipher: Cipher) => Promise<any>;\n    shareWithServer: (cipher: CipherView, organizationId: string, collectionIds: string[]) => Promise<any>;\n    shareManyWithServer: (ciphers: CipherView[], organizationId: string, collectionIds: string[]) => Promise<any>;\n    saveAttachmentWithServer: (cipher: Cipher, unencryptedFile: any, admin?: boolean) => Promise<Cipher>;\n    saveAttachmentRawWithServer: (cipher: Cipher, filename: string, data: ArrayBuffer,\n        admin?: boolean) => Promise<Cipher>;\n    saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n    upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n    replace: (ciphers: { [id: string]: CipherData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    deleteManyWithServer: (ids: string[]) => Promise<any>;\n    deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n    deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n    sortCiphersByLastUsed: (a: any, b: any) => number;\n    sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n    getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n    softDelete: (id: string | string[]) => Promise<any>;\n    softDeleteWithServer: (id: string) => Promise<any>;\n    softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n    restore: (cipher: { id: string, revisionDate: string; } | { id: string, revisionDate: string; }[]) => Promise<any>;\n    restoreWithServer: (id: string) => Promise<any>;\n    restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","export abstract class BaseResponse {\n    private response: any;\n\n    constructor(response: any) {\n        this.response = response;\n    }\n\n    protected getResponseProperty(propertyName: string, response: any = null, exactName = false): any {\n        if (propertyName == null || propertyName === '') {\n            throw new Error('propertyName must not be null/empty.');\n        }\n        if (response == null && this.response != null) {\n            response = this.response;\n        }\n        if (response == null) {\n            return null;\n        }\n        if (!exactName && response[propertyName] === undefined) {\n            let otherCasePropertyName: string = null;\n            if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n                otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n            } else {\n                otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n            }\n            if (propertyName.length > 1) {\n                otherCasePropertyName += propertyName.slice(1);\n            }\n\n            propertyName = otherCasePropertyName;\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toLowerCase();\n            }\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toUpperCase();\n            }\n        }\n        return response[propertyName];\n    }\n}\n","import { PolicyData } from '../models/data/policyData';\n\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\nimport { Policy } from '../models/domain/policy';\nimport { ResetPasswordPolicyOptions } from '../models/domain/resetPasswordPolicyOptions';\n\nimport { ListResponse } from '../models/response/listResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\n\nimport { PolicyType } from '../enums/policyType';\n\nexport abstract class PolicyService {\n    policyCache: Policy[];\n\n    clearCache: () => void;\n    getAll: (type?: PolicyType) => Promise<Policy[]>;\n    getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n    replace: (policies: { [id: string]: PolicyData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n    evaluateMasterPassword: (passwordStrength: number, newPassword: string,\n        enforcedPolicyOptions?: MasterPasswordPolicyOptions) => boolean;\n    getResetPasswordPolicyOptions: (policies: Policy[], orgId: string) => [ResetPasswordPolicyOptions, boolean];\n    mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n    policyAppliesToUser: (policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) => Promise<boolean>;\n}\n","import * as tldjs from 'tldjs';\n\nimport { I18nService } from '../abstractions/i18n.service';\n\n// tslint:disable-next-line\nconst nodeURL = typeof window === 'undefined' ? require('url') : null;\n\nexport class Utils {\n    static inited = false;\n    static isNativeScript = false;\n    static isNode = false;\n    static isBrowser = true;\n    static isMobileBrowser = false;\n    static isAppleMobileBrowser = false;\n    static global: any = null;\n    static tldEndingRegex = /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n    // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n    static regexpEmojiPresentation =  /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n    static init() {\n        if (Utils.inited) {\n            return;\n        }\n\n        Utils.inited = true;\n        Utils.isNode = typeof process !== 'undefined' && (process as any).release != null &&\n            (process as any).release.name === 'node';\n        Utils.isBrowser = typeof window !== 'undefined';\n        Utils.isNativeScript = !Utils.isNode && !Utils.isBrowser;\n        Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n        Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n        Utils.global = Utils.isNativeScript ? global : (Utils.isNode && !Utils.isBrowser ? global : window);\n    }\n\n    static fromB64ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'base64'));\n        } else {\n            const binaryString = window.atob(str);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUrlB64ToArray(str: string): Uint8Array {\n        return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n    }\n\n    static fromHexToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'hex'));\n        } else {\n            const bytes = new Uint8Array(str.length / 2);\n            for (let i = 0; i < str.length; i += 2) {\n                bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUtf8ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'utf8'));\n        } else {\n            const strUtf8 = unescape(encodeURIComponent(str));\n            const arr = new Uint8Array(strUtf8.length);\n            for (let i = 0; i < strUtf8.length; i++) {\n                arr[i] = strUtf8.charCodeAt(i);\n            }\n            return arr;\n        }\n    }\n\n    static fromByteStringToArray(str: string): Uint8Array {\n        const arr = new Uint8Array(str.length);\n        for (let i = 0; i < str.length; i++) {\n            arr[i] = str.charCodeAt(i);\n        }\n        return arr;\n    }\n\n    static fromBufferToB64(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('base64');\n        } else {\n            let binary = '';\n            const bytes = new Uint8Array(buffer);\n            for (let i = 0; i < bytes.byteLength; i++) {\n                binary += String.fromCharCode(bytes[i]);\n            }\n            return window.btoa(binary);\n        }\n    }\n\n    static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n        return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n    }\n\n    static fromB64toUrlB64(b64Str: string) {\n        return b64Str.replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=/g, '');\n    }\n\n    static fromBufferToUtf8(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('utf8');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            const encodedString = String.fromCharCode.apply(null, bytes);\n            return decodeURIComponent(escape(encodedString));\n        }\n    }\n\n    static fromBufferToByteString(buffer: ArrayBuffer): string {\n        return String.fromCharCode.apply(null, new Uint8Array(buffer));\n    }\n\n    // ref: https://stackoverflow.com/a/40031979/1090359\n    static fromBufferToHex(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('hex');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            return Array.prototype.map.call(bytes, (x: number) => ('00' + x.toString(16)).slice(-2)).join('');\n        }\n    }\n\n    static fromUrlB64ToB64(urlB64Str: string): string {\n        let output = urlB64Str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw new Error('Illegal base64url string!');\n        }\n\n        return output;\n    }\n\n    static fromUrlB64ToUtf8(urlB64Str: string): string {\n        return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n    }\n\n    static fromUtf8ToB64(utfStr: string): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(utfStr, 'utf8').toString('base64');\n        } else {\n            return decodeURIComponent(escape(window.btoa(utfStr)));\n        }\n    }\n\n    static fromUtf8ToUrlB64(utfStr: string): string {\n        return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n    }\n\n    static fromB64ToUtf8(b64Str: string): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(b64Str, 'base64').toString('utf8');\n        } else {\n            return decodeURIComponent(escape(window.atob(b64Str)));\n        }\n    }\n\n    // ref: http://stackoverflow.com/a/2117523/1090359\n    static newGuid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n            // tslint:disable-next-line\n            const r = Math.random() * 16 | 0;\n            // tslint:disable-next-line\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    static isGuid(id: string) {\n        return RegExp(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/, 'i').test(id);\n    }\n\n    static getHostname(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null && url.hostname !== '' ? url.hostname : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getHost(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null && url.host !== '' ? url.host : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getDomain(uriString: string): string {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        if (uriString.startsWith('data:')) {\n            return null;\n        }\n\n        let httpUrl = uriString.startsWith('http://') || uriString.startsWith('https://');\n        if (!httpUrl && uriString.indexOf('://') < 0 && Utils.tldEndingRegex.test(uriString)) {\n            uriString = 'http://' + uriString;\n            httpUrl = true;\n        }\n\n        if (httpUrl) {\n            try {\n                const url = Utils.getUrlObject(uriString);\n                const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n                if (!validHostname) {\n                    return null;\n                }\n\n                if (url.hostname === 'localhost' || Utils.validIpAddress(url.hostname)) {\n                    return url.hostname;\n                }\n\n                const urlDomain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n                return urlDomain != null ? urlDomain : url.hostname;\n            } catch (e) { }\n        }\n\n        try {\n            const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n            if (domain != null) {\n                return domain;\n            }\n        } catch {\n            return null;\n        }\n\n        return null;\n    }\n\n    static getQueryParams(uriString: string): Map<string, string> {\n        const url = Utils.getUrl(uriString);\n        if (url == null || url.search == null || url.search === '') {\n            return null;\n        }\n        const map = new Map<string, string>();\n        const pairs = (url.search[0] === '?' ? url.search.substr(1) : url.search).split('&');\n        pairs.forEach(pair => {\n            const parts = pair.split('=');\n            if (parts.length < 1) {\n                return;\n            }\n            map.set(decodeURIComponent(parts[0]).toLowerCase(), parts[1] == null ? '' : decodeURIComponent(parts[1]));\n        });\n        return map;\n    }\n\n    static getSortFunction(i18nService: I18nService, prop: string) {\n        return (a: any, b: any) => {\n            if (a[prop] == null && b[prop] != null) {\n                return -1;\n            }\n            if (a[prop] != null && b[prop] == null) {\n                return 1;\n            }\n            if (a[prop] == null && b[prop] == null) {\n                return 0;\n            }\n\n            return i18nService.collator ? i18nService.collator.compare(a[prop], b[prop]) :\n                a[prop].localeCompare(b[prop]);\n        };\n    }\n\n    static isNullOrWhitespace(str: string): boolean {\n        return str == null || typeof str !== 'string' || str.trim() === '';\n    }\n\n    static nameOf<T>(name: string & keyof T) {\n        return name;\n    }\n\n    static assign<T>(target: T, source: Partial<T>): T {\n        return Object.assign(target, source);\n    }\n\n    static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n        return (Object.keys(obj).filter(k => Number.isNaN(+k)) as K[]).map(k => obj[k]);\n    }\n\n\n    static getUrl(uriString: string): URL {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        let url = Utils.getUrlObject(uriString);\n        if (url == null) {\n            const hasHttpProtocol = uriString.indexOf('http://') === 0 || uriString.indexOf('https://') === 0;\n            if (!hasHttpProtocol && uriString.indexOf('.') > -1) {\n                url = Utils.getUrlObject('http://' + uriString);\n            }\n        }\n        return url;\n    }\n\n    static camelToPascalCase(s: string) {\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n\n    private static validIpAddress(ipString: string): boolean {\n        // tslint:disable-next-line\n        const ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n        return ipRegex.test(ipString);\n    }\n\n    private static isMobile(win: Window) {\n        let mobile = false;\n        (a => {\n            // tslint:disable-next-line\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n                mobile = true;\n            }\n        })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n        return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static isAppleMobile(win: Window) {\n        return win.navigator.userAgent.match(/iPhone/i) != null || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static getUrlObject(uriString: string): URL {\n        try {\n            if (nodeURL != null) {\n                return nodeURL.URL ? new nodeURL.URL(uriString) : nodeURL.parse(uriString);\n            } else if (typeof URL === 'function') {\n                return new URL(uriString);\n            } else if (window != null) {\n                const hasProtocol = uriString.indexOf('://') > -1;\n                if (!hasProtocol && uriString.indexOf('.') > -1) {\n                    uriString = 'http://' + uriString;\n                } else if (!hasProtocol) {\n                    return null;\n                }\n                const anchor = window.document.createElement('a');\n                anchor.href = uriString;\n                return anchor as any;\n            }\n        } catch (e) { }\n\n        return null;\n    }\n}\n\nUtils.init();\n","import * as zxcvbn from 'zxcvbn';\n\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\n\nexport abstract class PasswordGenerationService {\n    generatePassword: (options: any) => Promise<string>;\n    generatePassphrase: (options: any) => Promise<string>;\n    getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n    enforcePasswordGeneratorPoliciesOnOptions: (options: any) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n    getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n    saveOptions: (options: any) => Promise<any>;\n    getHistory: () => Promise<GeneratedPasswordHistory[]>;\n    addHistory: (password: string) => Promise<any>;\n    clear: () => Promise<any>;\n    passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n    normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import * as papa from 'papaparse';\n\nimport { LogService } from '../abstractions/log.service';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { LoginUriView } from '../models/view/loginUriView';\n\nimport { Utils } from '../misc/utils';\n\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherRepromptType } from '../enums/cipherRepromptType';\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { ConsoleLogService } from '../services/consoleLog.service';\n\nexport abstract class BaseImporter {\n    organizationId: string = null;\n\n    protected logService: LogService = new ConsoleLogService(false);\n\n    protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n    protected passwordFieldNames = [\n        'password', 'pass word', 'passphrase', 'pass phrase',\n        'pass', 'code', 'code word', 'codeword',\n        'secret', 'secret word', 'personpwd',\n        'key', 'keyword', 'key word', 'keyphrase', 'key phrase',\n        'form_pw', 'wppassword', 'pin', 'pwd', 'pw', 'pword', 'passwd',\n        'p', 'serial', 'serial#', 'license key', 'reg #',\n\n        // Non-English names\n        'passwort',\n    ];\n\n    protected usernameFieldNames = [\n        'user', 'name', 'user name', 'username', 'login name',\n        'email', 'e-mail', 'id', 'userid', 'user id',\n        'login', 'form_loginname', 'wpname', 'mail',\n        'loginid', 'login id', 'log', 'personlogin',\n        'first name', 'last name', 'card#', 'account #',\n        'member', 'member #',\n\n        // Non-English names\n        'nom', 'benutzername',\n    ];\n\n    protected notesFieldNames = [\n        'note', 'notes', 'comment', 'comments', 'memo',\n        'description', 'free form', 'freeform',\n        'free text', 'freetext', 'free',\n\n        // Non-English names\n        'kommentar',\n    ];\n\n    protected uriFieldNames: string[] = [\n        'url', 'hyper link', 'hyperlink', 'link',\n        'host', 'hostname', 'host name', 'server', 'address',\n        'hyper ref', 'href', 'web', 'website', 'web site', 'site',\n        'web-site', 'uri',\n\n        // Non-English names\n        'ort', 'adresse',\n    ];\n\n    protected parseCsvOptions = {\n        encoding: 'UTF-8',\n        skipEmptyLines: false,\n    };\n\n    protected get organization() {\n        return this.organizationId != null;\n    }\n\n    protected parseXml(data: string): Document {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(data, 'application/xml');\n        return doc != null && doc.querySelector('parsererror') == null ? doc : null;\n    }\n\n    protected parseCsv(data: string, header: boolean, options: any = {}): any[] {\n        const parseOptions = Object.assign({ header: header }, this.parseCsvOptions, options);\n        data = this.splitNewLine(data).join('\\n').trim();\n        const result = papa.parse(data, parseOptions);\n        if (result.errors != null && result.errors.length > 0) {\n            result.errors.forEach(e => {\n                if (e.row != null) {\n                    // tslint:disable-next-line\n                    this.logService.warning('Error parsing row ' + e.row + ': ' + e.message);\n                }\n            });\n        }\n        return result.data && result.data.length > 0 ? result.data : null;\n    }\n\n    protected parseSingleRowCsv(rowData: string) {\n        if (this.isNullOrWhitespace(rowData)) {\n            return null;\n        }\n        const parsedRow = this.parseCsv(rowData, false);\n        if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n            return parsedRow[0];\n        }\n        return null;\n    }\n\n    protected makeUriArray(uri: string | string[]): LoginUriView[] {\n        if (uri == null) {\n            return null;\n        }\n\n        if (typeof uri === 'string') {\n            const loginUri = new LoginUriView();\n            loginUri.uri = this.fixUri(uri);\n            if (this.isNullOrWhitespace(loginUri.uri)) {\n                return null;\n            }\n            loginUri.match = null;\n            return [loginUri];\n        }\n\n        if (uri.length > 0) {\n            const returnArr: LoginUriView[] = [];\n            uri.forEach(u => {\n                const loginUri = new LoginUriView();\n                loginUri.uri = this.fixUri(u);\n                if (this.isNullOrWhitespace(loginUri.uri)) {\n                    return;\n                }\n                loginUri.match = null;\n                returnArr.push(loginUri);\n            });\n            return returnArr.length === 0 ? null : returnArr;\n        }\n\n        return null;\n    }\n\n    protected fixUri(uri: string) {\n        if (uri == null) {\n            return null;\n        }\n        uri = uri.trim();\n        if (uri.indexOf('://') === -1 && uri.indexOf('.') >= 0) {\n            uri = 'http://' + uri;\n        }\n        if (uri.length > 1000) {\n            return uri.substring(0, 1000);\n        }\n        return uri;\n    }\n\n    protected nameFromUrl(url: string) {\n        const hostname = Utils.getHostname(url);\n        if (this.isNullOrWhitespace(hostname)) {\n            return null;\n        }\n        return hostname.startsWith('www.') ? hostname.replace('www.', '') : hostname;\n    }\n\n    protected isNullOrWhitespace(str: string): boolean {\n        return Utils.isNullOrWhitespace(str);\n    }\n\n    protected getValueOrDefault(str: string, defaultValue: string = null): string {\n        if (this.isNullOrWhitespace(str)) {\n            return defaultValue;\n        }\n        return str;\n    }\n\n    protected splitNewLine(str: string): string[] {\n        return str.split(this.newLineRegex);\n    }\n\n    // ref https://stackoverflow.com/a/5911300\n    protected getCardBrand(cardNum: string) {\n        if (this.isNullOrWhitespace(cardNum)) {\n            return null;\n        }\n\n        // Visa\n        let re = new RegExp('^4');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        // Mastercard\n        // Updated for Mastercard 2017 BINs expansion\n        if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/\n            .test(cardNum)) {\n            return 'Mastercard';\n        }\n\n        // AMEX\n        re = new RegExp('^3[47]');\n        if (cardNum.match(re) != null) {\n            return 'Amex';\n        }\n\n        // Discover\n        re = new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)');\n        if (cardNum.match(re) != null) {\n            return 'Discover';\n        }\n\n        // Diners\n        re = new RegExp('^36');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // Diners - Carte Blanche\n        re = new RegExp('^30[0-5]');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // JCB\n        re = new RegExp('^35(2[89]|[3-8][0-9])');\n        if (cardNum.match(re) != null) {\n            return 'JCB';\n        }\n\n        // Visa Electron\n        re = new RegExp('^(4026|417500|4508|4844|491(3|7))');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        return null;\n    }\n\n    protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\n        if (!this.isNullOrWhitespace(expiration)) {\n            expiration = expiration.replace(/\\s/g, '');\n            const parts = expiration.split('/');\n            if (parts.length === 2) {\n                let month: string = null;\n                let year: string = null;\n                if (parts[0].length === 1 || parts[0].length === 2) {\n                    month = parts[0];\n                    if (month.length === 2 && month[0] === '0') {\n                        month = month.substr(1, 1);\n                    }\n                }\n                if (parts[1].length === 2 || parts[1].length === 4) {\n                    year = month.length === 2 ? '20' + parts[1] : parts[1];\n                }\n                if (month != null && year != null) {\n                    cipher.card.expMonth = month;\n                    cipher.card.expYear = year;\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    protected moveFoldersToCollections(result: ImportResult) {\n        result.folderRelationships.forEach(r => result.collectionRelationships.push(r));\n        result.collections = result.folders.map(f => {\n            const collection = new CollectionView();\n            collection.name = f.name;\n            return collection;\n        });\n        result.folderRelationships = [];\n        result.folders = [];\n    }\n\n    protected querySelectorDirectChild(parentEl: Element, query: string) {\n        const els = this.querySelectorAllDirectChild(parentEl, query);\n        return els.length === 0 ? null : els[0];\n    }\n\n    protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n        return Array.from(parentEl.querySelectorAll(query)).filter(el => el.parentNode === parentEl);\n    }\n\n    protected initLoginCipher() {\n        const cipher = new CipherView();\n        cipher.favorite = false;\n        cipher.notes = '';\n        cipher.fields = [];\n        cipher.login = new LoginView();\n        cipher.type = CipherType.Login;\n        return cipher;\n    }\n\n    protected cleanupCipher(cipher: CipherView) {\n        if (cipher == null) {\n            return;\n        }\n        if (cipher.type !== CipherType.Login) {\n            cipher.login = null;\n        }\n        if (this.isNullOrWhitespace(cipher.name)) {\n            cipher.name = '--';\n        }\n        if (this.isNullOrWhitespace(cipher.notes)) {\n            cipher.notes = null;\n        } else {\n            cipher.notes = cipher.notes.trim();\n        }\n        if (cipher.fields != null && cipher.fields.length === 0) {\n            cipher.fields = null;\n        }\n    }\n\n    protected processKvp(cipher: CipherView, key: string, value: string, type: FieldType = FieldType.Text) {\n        if (this.isNullOrWhitespace(value)) {\n            return;\n        }\n        if (this.isNullOrWhitespace(key)) {\n            key = '';\n        }\n        if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n            if (cipher.notes == null) {\n                cipher.notes = '';\n            }\n            cipher.notes += (key + ': ' + this.splitNewLine(value).join('\\n') + '\\n');\n        } else {\n            if (cipher.fields == null) {\n                cipher.fields = [];\n            }\n            const field = new FieldView();\n            field.type = type;\n            field.name = key;\n            field.value = value;\n            cipher.fields.push(field);\n        }\n    }\n\n    protected processFolder(result: ImportResult, folderName: string) {\n        let folderIndex = result.folders.length;\n        const hasFolder = !this.isNullOrWhitespace(folderName);\n        let addFolder = hasFolder;\n\n        if (hasFolder) {\n            for (let i = 0; i < result.folders.length; i++) {\n                if (result.folders[i].name === folderName) {\n                    addFolder = false;\n                    folderIndex = i;\n                    break;\n                }\n            }\n        }\n\n        if (addFolder) {\n            const f = new FolderView();\n            f.name = folderName;\n            result.folders.push(f);\n        }\n        if (hasFolder) {\n            result.folderRelationships.push([result.ciphers.length, folderIndex]);\n        }\n    }\n\n    protected convertToNoteIfNeeded(cipher: CipherView) {\n        if (cipher.type === CipherType.Login && this.isNullOrWhitespace(cipher.login.username) &&\n            this.isNullOrWhitespace(cipher.login.password) &&\n            (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        }\n    }\n}\n","import { CipherView } from '../view/cipherView';\nimport { CollectionView } from '../view/collectionView';\nimport { FolderView } from '../view/folderView';\n\nexport class ImportResult {\n    success = false;\n    errorMessage: string;\n    ciphers: CipherView[] = [];\n    folders: FolderView[] = [];\n    folderRelationships: [number, number][] = [];\n    collections: CollectionView[] = [];\n    collectionRelationships: [number, number][] = [];\n}\n","export abstract class StateService {\n    get: <T>(key: string) => Promise<T>;\n    save: (key: string, obj: any) => Promise<any>;\n    remove: (key: string) => Promise<any>;\n    purge: () => Promise<any>;\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopClick]',\n})\nexport class StopClickDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.preventDefault();\n    }\n}\n","export abstract class StorageService {\n    get: <T>(key: string, options?: StorageServiceOptions) => Promise<T>;\n    has: (key: string, options?: StorageServiceOptions) => Promise<boolean>;\n    save: (key: string, obj: any, options?: StorageServiceOptions) => Promise<any>;\n    remove: (key: string, options?: StorageServiceOptions) => Promise<any>;\n}\n\nexport interface StorageServiceOptions {\n    keySuffix: KeySuffixOptions;\n}\n\nexport type KeySuffixOptions = 'auto' | 'biometric';\n","export enum CipherType {\n    Login = 1,\n    SecureNote = 2,\n    Card = 3,\n    Identity = 4,\n}\n","import {\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\n\nexport abstract class SyncService {\n    syncInProgress: boolean;\n\n    getLastSync: () => Promise<Date>;\n    setLastSync: (date: Date) => Promise<any>;\n    fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n    syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n    syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n    syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appInputVerbatim]',\n})\nexport class InputVerbatimDirective {\n    @Input() set appInputVerbatim(condition: boolean | string) {\n        this.disableComplete = condition === '' || condition === true;\n    }\n\n    private disableComplete: boolean;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (this.disableComplete && !this.el.nativeElement.hasAttribute('autocomplete')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocomplete', 'off');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocapitalize')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocapitalize', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocorrect')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocorrect', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('spellcheck')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'spellcheck', 'false');\n        }\n        if (!this.el.nativeElement.hasAttribute('inputmode')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'inputmode', 'verbatim');\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nexport type Urls = {\n    base?: string;\n    webVault?: string;\n    api?: string;\n    identity?: string;\n    icons?: string;\n    notifications?: string;\n    events?: string;\n};\n\nexport type PayPalConfig = {\n    businessId?: string;\n    buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n    urls: Observable<Urls>;\n\n    hasBaseUrl: () => boolean;\n    getNotificationsUrl: () => string;\n    getWebVaultUrl: () => string;\n    getSendUrl: () => string;\n    getIconsUrl: () => string;\n    getApiUrl: () => string;\n    getIdentityUrl: () => string;\n    getEventsUrl: () => string;\n    setUrlsFromStorage: () => Promise<void>;\n    setUrls: (urls: any, saveSettings?: boolean) => Promise<Urls>;\n    getUrls: () => Urls;\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport abstract class CollectionService {\n    decryptedCollectionCache: CollectionView[];\n\n    clearCache: () => void;\n    encrypt: (model: CollectionView) => Promise<Collection>;\n    decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n    get: (id: string) => Promise<Collection>;\n    getAll: () => Promise<Collection[]>;\n    getAllDecrypted: () => Promise<CollectionView[]>;\n    getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n    getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n    upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n    replace: (collections: { [id: string]: CollectionData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n    protectedFields: () => string[];\n    showPasswordPrompt: () => Promise<boolean>;\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopProp]',\n})\nexport class StopPropDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.stopPropagation();\n    }\n}\n","import { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class AuthService {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    ssoRedirectUrl: string;\n    clientId: string;\n    clientSecret: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType;\n\n    logIn: (email: string, masterPassword: string, captchaToken?: string) => Promise<AuthResult>;\n    logInSso: (code: string, codeVerifier: string, redirectUrl: string) => Promise<AuthResult>;\n    logInApiKey: (clientId: string, clientSecret: string) => Promise<AuthResult>;\n    logInTwoFactor: (twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean) => Promise<AuthResult>;\n    logInComplete: (email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean, captchaToken?: string) => Promise<AuthResult>;\n    logInSsoComplete: (code: string, codeVerifier: string, redirectUrl: string,\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logInApiKeyComplete: (clientId: string, clientSecret: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logOut: (callback: Function) => void;\n    getSupportedTwoFactorProviders: (win: Window) => any[];\n    getDefaultTwoFactorProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n    makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n    authingWithApiKey: () => boolean;\n    authingWithSso: () => boolean;\n    authingWithPassword: () => boolean;\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport abstract class FolderService {\n    decryptedFolderCache: FolderView[];\n\n    clearCache: () => void;\n    encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n    get: (id: string) => Promise<Folder>;\n    getAll: () => Promise<Folder[]>;\n    getAllDecrypted: () => Promise<FolderView[]>;\n    getAllNested: () => Promise<TreeNode<FolderView>[]>;\n    getNested: (id: string) => Promise<TreeNode<FolderView>>;\n    saveWithServer: (folder: Folder) => Promise<any>;\n    upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n    replace: (folders: { [id: string]: FolderData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n}\n","export enum PolicyType {\n    TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n    MasterPassword = 1, // Sets minimum requirements for master password complexity\n    PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n    SingleOrg = 3, // Allows users to only be apart of one organization\n    RequireSso = 4, // Requires users to authenticate with SSO\n    PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n    DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n    SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n    ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n    MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n    DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","import { CipherView } from '../models/view/cipherView';\nimport { SendView } from '../models/view/sendView';\n\nexport abstract class SearchService {\n    indexedEntityId?: string = null;\n    clearIndex: () => void;\n    isSearchable: (query: string) => boolean;\n    indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n    searchCiphers: (query: string,\n        filter?: ((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[]),\n        ciphers?: CipherView[]) => Promise<CipherView[]>;\n    searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n    searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { EventType } from '../enums/eventType';\n\nexport abstract class EventService {\n    collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n    uploadEvents: () => Promise<any>;\n    clearEvents: () => Promise<any>;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n} from '@angular/core';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive({\n    selector: '[appAutofocus]',\n})\nexport class AutofocusDirective {\n    @Input() set appAutofocus(condition: boolean | string) {\n        this.autofocus = condition === '' || condition === true;\n    }\n\n    private autofocus: boolean;\n\n    constructor(private el: ElementRef) { }\n\n    ngOnInit() {\n        if (!Utils.isMobileBrowser && this.autofocus) {\n            this.el.nativeElement.focus();\n        }\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\ninterface User {\n    name?: string;\n    email: string;\n}\n\n@Pipe({\n    name: 'userName',\n})\nexport class UserNamePipe implements PipeTransform {\n    transform(user?: User): string {\n        if (user == null) {\n            return null;\n        }\n\n        return user.name == null || user.name.trim() === '' ? user.email : user.name;\n    }\n}\n","export class ConstantsService {\n    static readonly environmentUrlsKey: string = 'environmentUrls';\n    static readonly disableGaKey: string = 'disableGa';\n    static readonly disableAddLoginNotificationKey: string = 'disableAddLoginNotification';\n    static readonly disableChangedPasswordNotificationKey: string = 'disableChangedPasswordNotification';\n    static readonly disableContextMenuItemKey: string = 'disableContextMenuItem';\n    static readonly disableFaviconKey: string = 'disableFavicon';\n    static readonly disableBadgeCounterKey: string = 'disableBadgeCounter';\n    static readonly disableAutoTotpCopyKey: string = 'disableAutoTotpCopy';\n    static readonly disableAutoBiometricsPromptKey: string = 'noAutoPromptBiometrics';\n    static readonly enableAutoFillOnPageLoadKey: string = 'enableAutoFillOnPageLoad';\n    static readonly autoFillOnPageLoadDefaultKey: string = 'autoFillOnPageLoadDefault';\n    static readonly vaultTimeoutKey: string = 'lockOption';\n    static readonly vaultTimeoutActionKey: string = 'vaultTimeoutAction';\n    static readonly lastActiveKey: string = 'lastActive';\n    static readonly neverDomainsKey: string = 'neverDomains';\n    static readonly installedVersionKey: string = 'installedVersion';\n    static readonly localeKey: string = 'locale';\n    static readonly themeKey: string = 'theme';\n    static readonly collapsedGroupingsKey: string = 'collapsedGroupings';\n    static readonly autoConfirmFingerprints: string = 'autoConfirmFingerprints';\n    static readonly dontShowCardsCurrentTab: string = 'dontShowCardsCurrentTab';\n    static readonly dontShowIdentitiesCurrentTab: string = 'dontShowIdentitiesCurrentTab';\n    static readonly defaultUriMatch: string = 'defaultUriMatch';\n    static readonly pinProtectedKey: string = 'pinProtectedKey';\n    static readonly protectedPin: string = 'protectedPin';\n    static readonly clearClipboardKey: string = 'clearClipboardKey';\n    static readonly eventCollectionKey: string = 'eventCollection';\n    static readonly ssoCodeVerifierKey: string = 'ssoCodeVerifier';\n    static readonly ssoStateKey: string = 'ssoState';\n    static readonly biometricUnlockKey: string = 'biometric';\n    static readonly biometricText: string = 'biometricText';\n    static readonly biometricAwaitingAcceptance: string = 'biometricAwaitingAcceptance';\n    static readonly biometricFingerprintValidated: string = 'biometricFingerprintValidated';\n\n    readonly environmentUrlsKey: string = ConstantsService.environmentUrlsKey;\n    readonly disableGaKey: string = ConstantsService.disableGaKey;\n    readonly disableAddLoginNotificationKey: string = ConstantsService.disableAddLoginNotificationKey;\n    readonly disableContextMenuItemKey: string = ConstantsService.disableContextMenuItemKey;\n    readonly disableFaviconKey: string = ConstantsService.disableFaviconKey;\n    readonly disableBadgeCounterKey: string = ConstantsService.disableBadgeCounterKey;\n    readonly disableAutoTotpCopyKey: string = ConstantsService.disableAutoTotpCopyKey;\n    readonly disableAutoBiometricsPromptKey: string = ConstantsService.disableAutoBiometricsPromptKey;\n    readonly enableAutoFillOnPageLoadKey: string = ConstantsService.enableAutoFillOnPageLoadKey;\n    readonly autoFillOnPageLoadDefaultKey: string = ConstantsService.autoFillOnPageLoadDefaultKey;\n    readonly vaultTimeoutKey: string = ConstantsService.vaultTimeoutKey;\n    readonly vaultTimeoutActionKey: string = ConstantsService.vaultTimeoutActionKey;\n    readonly lastActiveKey: string = ConstantsService.lastActiveKey;\n    readonly neverDomainsKey: string = ConstantsService.neverDomainsKey;\n    readonly installedVersionKey: string = ConstantsService.installedVersionKey;\n    readonly localeKey: string = ConstantsService.localeKey;\n    readonly themeKey: string = ConstantsService.themeKey;\n    readonly collapsedGroupingsKey: string = ConstantsService.collapsedGroupingsKey;\n    readonly autoConfirmFingerprints: string = ConstantsService.autoConfirmFingerprints;\n    readonly dontShowCardsCurrentTab: string = ConstantsService.dontShowCardsCurrentTab;\n    readonly dontShowIdentitiesCurrentTab: string = ConstantsService.dontShowIdentitiesCurrentTab;\n    readonly defaultUriMatch: string = ConstantsService.defaultUriMatch;\n    readonly pinProtectedKey: string = ConstantsService.pinProtectedKey;\n    readonly protectedPin: string = ConstantsService.protectedPin;\n    readonly clearClipboardKey: string = ConstantsService.clearClipboardKey;\n    readonly eventCollectionKey: string = ConstantsService.eventCollectionKey;\n    readonly ssoCodeVerifierKey: string = ConstantsService.ssoCodeVerifierKey;\n    readonly ssoStateKey: string = ConstantsService.ssoStateKey;\n    readonly biometricUnlockKey: string = ConstantsService.biometricUnlockKey;\n    readonly biometricText: string = ConstantsService.biometricText;\n    readonly biometricAwaitingAcceptance: string = ConstantsService.biometricAwaitingAcceptance;\n    readonly biometricFingerprintValidated: string = ConstantsService.biometricFingerprintValidated;\n}\n","<img [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" [ngClass]=\"{'rounded-circle': circle}\">","import { LogLevelType } from '../enums/logLevelType';\n\nexport abstract class LogService {\n    debug: (message: string) => void;\n    info: (message: string) => void;\n    warning: (message: string) => void;\n    error: (message: string) => void;\n    write: (level: LogLevelType, message: string) => void;\n    time: (label: string) => void;\n    timeEnd: (label: string) => [number, number];\n}\n","import { EncString } from './encString';\n\nimport { View } from '../view/view';\n\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport default class Domain {\n    protected buildDomainModel<D extends Domain>(domain: D, dataObj: any, map: any,\n        alreadyEncrypted: boolean, notEncList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = dataObj[(map[prop] || prop)];\n            if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n                (domain as any)[prop] = objProp ? objProp : null;\n            } else {\n                (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n            }\n        }\n    }\n    protected buildDataModel<D extends Domain>(domain: D, dataObj: any, map: any, notEncStringList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = (domain as any)[(map[prop] || prop)];\n            if (notEncStringList.indexOf(prop) > -1) {\n                (dataObj as any)[prop] = objProp != null ? objProp : null;\n            } else {\n                (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n            }\n        }\n    }\n\n    protected async decryptObj<T extends View>(viewModel: T, map: any, orgId: string,\n        key: SymmetricCryptoKey = null): Promise<T> {\n        const promises = [];\n        const self: any = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp) {\n                const p = Promise.resolve().then(() => {\n                    const mapProp = map[theProp] || theProp;\n                    if (self[mapProp]) {\n                        return self[mapProp].decrypt(orgId, key);\n                    }\n                    return null;\n                }).then((val: any) => {\n                    (viewModel as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop);\n        }\n\n        await Promise.all(promises);\n        return viewModel;\n    }\n}\n","export class PasswordVerificationRequest {\n    masterPasswordHash: string;\n}\n","import { View } from './view';\n\nimport { Card } from '../domain/card';\n\nexport class CardView implements View {\n    cardholderName: string = null;\n    expMonth: string = null;\n    expYear: string = null;\n    code: string = null;\n\n    // tslint:disable\n    private _brand: string = null;\n    private _number: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(c?: Card) {\n        // ctor\n    }\n\n    get maskedCode(): string {\n        return this.code != null ? '•'.repeat(this.code.length) : null;\n    }\n\n    get maskedNumber(): string {\n        return this.number != null ? '•'.repeat(this.number.length) : null;\n    }\n\n    get brand(): string {\n        return this._brand;\n    }\n    set brand(value: string) {\n        this._brand = value;\n        this._subTitle = null;\n    }\n\n    get number(): string {\n        return this._number;\n    }\n    set number(value: string) {\n        this._number = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null) {\n            this._subTitle = this.brand;\n            if (this.number != null && this.number.length >= 4) {\n                if (this._subTitle != null && this._subTitle !== '') {\n                    this._subTitle += ', ';\n                } else {\n                    this._subTitle = '';\n                }\n\n                // Show last 5 on amex, last 4 for all others\n                const count = this.number.length >= 5 && this.number.match(new RegExp('^3[47]')) != null ? 5 : 4;\n                this._subTitle += ('*' + this.number.substr(this.number.length - count));\n            }\n        }\n        return this._subTitle;\n    }\n\n    get expiration(): string {\n        if (!this.expMonth && !this.expYear) {\n            return null;\n        }\n\n        let exp = this.expMonth != null ? ('0' + this.expMonth).slice(-2) : '__';\n        exp += (' / ' + (this.expYear != null ? this.formatYear(this.expYear) : '____'));\n        return exp;\n    }\n\n    private formatYear(year: string): string {\n        return year.length === 2 ? '20' + year : year;\n    }\n}\n","import { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class CryptoFunctionService {\n    pbkdf2: (password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number) => Promise<ArrayBuffer>;\n    hkdf: (ikm: ArrayBuffer, salt: string | ArrayBuffer, info: string | ArrayBuffer,\n        outputByteSize: number, algorithm: 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    hkdfExpand: (prk: ArrayBuffer, info: string | ArrayBuffer, outputByteSize: number,\n        algorithm: 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    hash: (value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5') => Promise<ArrayBuffer>;\n    hmac: (value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n    hmacFast: (value: ArrayBuffer | string, key: ArrayBuffer | string, algorithm: 'sha1' | 'sha256' | 'sha512') =>\n        Promise<ArrayBuffer | string>;\n    compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n    aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    aesDecryptFastParameters: (data: string, iv: string, mac: string, key: SymmetricCryptoKey) =>\n        DecryptParameters<ArrayBuffer | string>;\n    aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n    aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaDecrypt: (data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n    randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { EncString } from '../models/domain/encString';\n\nexport abstract class VaultTimeoutService {\n    biometricLocked: boolean;\n    everBeenUnlocked: boolean;\n    pinProtectedKey: EncString;\n    isLocked: () => Promise<boolean>;\n    checkVaultTimeout: () => Promise<void>;\n    lock: (allowSoftLock?: boolean) => Promise<void>;\n    logOut: () => Promise<void>;\n    setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n    getVaultTimeout: () => Promise<number>;\n    isPinLockSet: () => Promise<[boolean, boolean]>;\n    isBiometricLockSet: () => Promise<boolean>;\n    clear: () => Promise<any>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\n@Injectable()\nexport class ValidationService {\n    constructor(private i18nService: I18nService, private platformUtilsService: PlatformUtilsService) { }\n\n    showError(data: any): string[] {\n        const defaultErrorMessage = this.i18nService.t('unexpectedError');\n        let errors: string[] = [];\n\n        if (data != null && typeof data === 'string') {\n            errors.push(data);\n        } else if (data == null || typeof data !== 'object') {\n            errors.push(defaultErrorMessage);\n        } else if (data.validationErrors != null) {\n            errors = errors.concat((data as ErrorResponse).getAllMessages());\n        } else {\n            errors.push(data.message ? data.message : defaultErrorMessage);\n        }\n\n        if (errors.length === 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors[0]);\n        } else if (errors.length > 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors, {\n                timeout: 5000 * errors.length,\n            });\n        }\n\n        return errors;\n    }\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncString {\n    encryptedString?: string;\n    encryptionType?: EncryptionType;\n    decryptedValue?: string;\n    data?: string;\n    iv?: string;\n    mac?: string;\n\n    constructor(encryptedStringOrType: string | EncryptionType, data?: string, iv?: string, mac?: string) {\n        if (data != null) {\n            // data and header\n            const encType = encryptedStringOrType as EncryptionType;\n\n            if (iv != null) {\n                this.encryptedString = encType + '.' + iv + '|' + data;\n            } else {\n                this.encryptedString = encType + '.' + data;\n            }\n\n            // mac\n            if (mac != null) {\n                this.encryptedString += ('|' + mac);\n            }\n\n            this.encryptionType = encType;\n            this.data = data;\n            this.iv = iv;\n            this.mac = mac;\n\n            return;\n        }\n\n        this.encryptedString = encryptedStringOrType as string;\n        if (!this.encryptedString) {\n            return;\n        }\n\n        const headerPieces = this.encryptedString.split('.');\n        let encPieces: string[] = null;\n\n        if (headerPieces.length === 2) {\n            try {\n                this.encryptionType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) {\n                return;\n            }\n        } else {\n            encPieces = this.encryptedString.split('|');\n            this.encryptionType = encPieces.length === 3 ? EncryptionType.AesCbc128_HmacSha256_B64 :\n                EncryptionType.AesCbc256_B64;\n        }\n\n        switch (this.encryptionType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encPieces.length !== 3) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                this.mac = encPieces[2];\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encPieces.length !== 2) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                break;\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n                if (encPieces.length !== 1) {\n                    return;\n                }\n\n                this.data = encPieces[0];\n                break;\n            default:\n                return;\n        }\n    }\n\n    async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n        if (this.decryptedValue != null) {\n            return this.decryptedValue;\n        }\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            if (key == null) {\n                key = await cryptoService.getOrgKey(orgId);\n            }\n            this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n        } catch (e) {\n            this.decryptedValue = '[error: cannot decrypt]';\n        }\n        return this.decryptedValue;\n    }\n}\n","import { BreachAccountResponse } from '../models/response/breachAccountResponse';\n\nexport abstract class AuditService {\n    passwordLeaked: (password: string) => Promise<number>;\n    breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { View } from './view';\n\nimport { SecureNote } from '../domain/secureNote';\n\nexport class SecureNoteView implements View {\n    type: SecureNoteType = null;\n\n    constructor(n?: SecureNote) {\n        if (!n) {\n            return;\n        }\n\n        this.type = n.type;\n    }\n\n    get subTitle(): string {\n        return null;\n    }\n}\n","export enum SecureNoteType {\n    Generic = 0,\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nconst IconMap: any = {\n    'fa-globe': String.fromCharCode(0xf0ac),\n    'fa-sticky-note-o': String.fromCharCode(0xf24a),\n    'fa-id-card-o': String.fromCharCode(0xf2c3),\n    'fa-credit-card': String.fromCharCode(0xf09d),\n    'fa-android': String.fromCharCode(0xf17b),\n    'fa-apple': String.fromCharCode(0xf179),\n};\n\n@Component({\n    selector: 'app-vault-icon',\n    templateUrl: 'icon.component.html',\n})\nexport class IconComponent implements OnChanges {\n    @Input() cipher: CipherView;\n    icon: string;\n    image: string;\n    fallbackImage: string;\n    imageEnabled: boolean;\n\n    private iconsUrl: string;\n\n    constructor(environmentService: EnvironmentService, protected stateService: StateService) {\n        this.iconsUrl = environmentService.getIconsUrl();\n    }\n\n    async ngOnChanges() {\n        // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n        // to avoid this we reset all state variables.\n        this.image = null;\n        this.fallbackImage = null;\n        this.imageEnabled = !(await this.stateService.get<boolean>(ConstantsService.disableFaviconKey));\n        this.load();\n    }\n\n    get iconCode(): string {\n        return IconMap[this.icon];\n    }\n\n    protected load() {\n        switch (this.cipher.type) {\n            case CipherType.Login:\n                this.icon = 'fa-globe';\n                this.setLoginIcon();\n                break;\n            case CipherType.SecureNote:\n                this.icon = 'fa-sticky-note-o';\n                break;\n            case CipherType.Card:\n                this.icon = 'fa-credit-card';\n                break;\n            case CipherType.Identity:\n                this.icon = 'fa-id-card-o';\n                break;\n            default:\n                break;\n        }\n    }\n\n    private setLoginIcon() {\n        if (this.cipher.login.uri) {\n            let hostnameUri = this.cipher.login.uri;\n            let isWebsite = false;\n\n            if (hostnameUri.indexOf('androidapp://') === 0) {\n                this.icon = 'fa-android';\n                this.image = null;\n            } else if (hostnameUri.indexOf('iosapp://') === 0) {\n                this.icon = 'fa-apple';\n                this.image = null;\n            } else if (this.imageEnabled && hostnameUri.indexOf('://') === -1 && hostnameUri.indexOf('.') > -1) {\n                hostnameUri = 'http://' + hostnameUri;\n                isWebsite = true;\n            } else if (this.imageEnabled) {\n                isWebsite = hostnameUri.indexOf('http') === 0 && hostnameUri.indexOf('.') > -1;\n            }\n\n            if (this.imageEnabled && isWebsite) {\n                try {\n                    this.image = this.iconsUrl + '/' + Utils.getHostname(hostnameUri) + '/icon.png';\n                    this.fallbackImage = 'images/fa-globe.png';\n                } catch (e) { }\n            }\n        } else {\n            this.image = null;\n        }\n    }\n}\n","<div class=\"icon\" aria-hidden=\"true\"> <img [src]=\"image\" appFallbackSrc=\"{{fallbackImage}}\" *ngIf=\"imageEnabled && image\" alt=\"\"/> <i class=\"fa fa-fw fa-lg {{icon}}\" *ngIf=\"!imageEnabled || !image\"></i> </div> ","export abstract class TokenService {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n    setTokens: (accessToken: string, refreshToken: string, clientIdClientSecret: [string, string]) => Promise<any>;\n    setToken: (token: string) => Promise<any>;\n    getToken: () => Promise<string>;\n    setRefreshToken: (refreshToken: string) => Promise<any>;\n    getRefreshToken: () => Promise<string>;\n    setClientId: (clientId: string) => Promise<any>;\n    getClientId: () => Promise<string>;\n    setClientSecret: (clientSecret: string) => Promise<any>;\n    getClientSecret: () => Promise<string>;\n    toggleTokens: () => Promise<any>;\n    setTwoFactorToken: (token: string, email: string) => Promise<any>;\n    getTwoFactorToken: (email: string) => Promise<string>;\n    clearTwoFactorToken: (email: string) => Promise<any>;\n    clearToken: () => Promise<any>;\n    decodeToken: () => any;\n    getTokenExpirationDate: () => Date;\n    tokenSecondsRemaining: (offsetSeconds?: number) => number;\n    tokenNeedsRefresh: (minutes?: number) => boolean;\n    getUserId: () => string;\n    getEmail: () => string;\n    getEmailVerified: () => boolean;\n    getName: () => string;\n    getPremium: () => boolean;\n    getIssuer: () => string;\n}\n","import { EventView } from '../models/view/eventView';\n\nexport abstract class ExportService {\n    getExport: (format?: 'csv' | 'json' | 'encrypted_json') => Promise<string>;\n    getOrganizationExport: (organizationId: string, format?: 'csv' | 'json' | 'encrypted_json') => Promise<string>;\n    getEventExport: (events: EventView[]) => Promise<string>;\n    getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { Injectable } from '@angular/core';\n\nimport { BroadcasterService as BaseBroadcasterService } from 'jslib-common/services/broadcaster.service';\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {\n}\n","export enum TwoFactorProviderType {\n    Authenticator = 0,\n    Email = 1,\n    Duo = 2,\n    Yubikey = 3,\n    U2f = 4,\n    Remember = 5,\n    OrganizationDuo = 6,\n    WebAuthn = 7,\n}\n","import {\n    Directive,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nexport abstract class BasePolicy {\n    abstract name: string;\n    abstract description: string;\n    abstract type: PolicyType;\n    abstract component: any;\n\n    display(organization: Organization) {\n        return true;\n    }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n    @Input() policyResponse: PolicyResponse;\n    @Input() policy: BasePolicy;\n\n    enabled = new FormControl(false);\n    data: FormGroup = null;\n\n    ngOnInit(): void {\n        this.enabled.setValue(this.policyResponse.enabled);\n\n        if (this.policyResponse.data != null) {\n            this.loadData();\n        }\n    }\n\n    loadData() {\n        this.data.patchValue(this.policyResponse.data ?? {});\n    }\n\n    buildRequestData() {\n        if (this.data != null) {\n            return this.data.value;\n        }\n\n        return null;\n    }\n\n    buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n        const request = new PolicyRequest();\n        request.enabled = this.enabled.value;\n        request.type = this.policy.type;\n        request.data = this.buildRequestData();\n\n        return Promise.resolve(request);\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\n@Pipe({\n    name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n    transform(items: any[], searchText: string, prop1?: string, prop2?: string, prop3?: string): any[] {\n        if (items == null || items.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return items;\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return items.filter(i => {\n            if (prop1 != null && i[prop1] != null && i[prop1].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop2 != null && i[prop2] != null && i[prop2].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop3 != null && i[prop3] != null && i[prop3].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n}\n","export abstract class TotpService {\n    getCode: (key: string) => Promise<string>;\n    getTimeInterval: (key: string) => number;\n    isAutoCopyEnabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n    Text = 0,\n    Hidden = 1,\n    Boolean = 2,\n}\n","import { SendData } from '../models/data/sendData';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { Send } from '../models/domain/send';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { SendView } from '../models/view/sendView';\n\nexport abstract class SendService {\n    decryptedSendCache: SendView[];\n\n    clearCache: () => void;\n    encrypt: (model: SendView, file: File | ArrayBuffer, password: string, key?: SymmetricCryptoKey) => Promise<[Send, EncArrayBuffer]>;\n    get: (id: string) => Promise<Send>;\n    getAll: () => Promise<Send[]>;\n    getAllDecrypted: () => Promise<SendView[]>;\n    saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n    upsert: (send: SendData | SendData[]) => Promise<any>;\n    replace: (sends: { [id: string]: SendData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ThemeType } from 'jslib-common/enums/themeType';\n\nimport ThemeVariables from 'src/scss/export.module.scss';\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n    selector: 'app-payment',\n    templateUrl: 'payment.component.html',\n})\nexport class PaymentComponent implements OnInit {\n    @Input() showMethods = true;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.Card;\n    @Input() hideBank = false;\n    @Input() hidePaypal = false;\n    @Input() hideCredit = false;\n\n    bank: any = {\n        routing_number: null,\n        account_number: null,\n        account_holder_name: null,\n        account_holder_type: '',\n        currency: 'USD',\n        country: 'US',\n    };\n\n    paymentMethodType = PaymentMethodType;\n\n    private btScript: HTMLScriptElement;\n    private btInstance: any = null;\n    private stripeScript: HTMLScriptElement;\n    private stripe: any = null;\n    private stripeElements: any = null;\n    private stripeCardNumberElement: any = null;\n    private stripeCardExpiryElement: any = null;\n    private stripeCardCvcElement: any = null;\n    private StripeElementStyle: any;\n    private StripeElementClasses: any;\n\n    constructor(private platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\n        this.stripeScript = window.document.createElement('script');\n        this.stripeScript.src = 'https://js.stripe.com/v3/';\n        this.stripeScript.async = true;\n        this.stripeScript.onload = () => {\n            this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n            this.stripeElements = this.stripe.elements();\n            this.setStripeElement();\n        };\n        this.btScript = window.document.createElement('script');\n        this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n        this.btScript.async = true;\n        this.StripeElementStyle = {\n            base: {\n                color: null,\n                fontFamily: '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n                    '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n                fontSize: '14px',\n                fontSmoothing: 'antialiased',\n                '::placeholder': {\n                    color: null,\n                },\n            },\n            invalid: {\n                color: null,\n\n            },\n        };\n        this.StripeElementClasses = {\n            focus: 'is-focused',\n            empty: 'is-empty',\n            invalid: 'is-invalid',\n        };\n    }\n\n    async ngOnInit() {\n        if (!this.showOptions) {\n            this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n            this.hideBank = this.method !== PaymentMethodType.BankAccount;\n            this.hideCredit = this.method !== PaymentMethodType.Credit;\n        }\n        await this.setTheme();\n        window.document.head.appendChild(this.stripeScript);\n        if (!this.hidePaypal) {\n            window.document.head.appendChild(this.btScript);\n        }\n    }\n\n    ngOnDestroy() {\n        window.document.head.removeChild(this.stripeScript);\n        window.setTimeout(() => {\n            Array.from(window.document.querySelectorAll('iframe')).forEach(el => {\n                if (el.src != null && el.src.indexOf('stripe') > -1) {\n                    try {\n                        window.document.body.removeChild(el);\n                    } catch { }\n                }\n            });\n        }, 500);\n        if (!this.hidePaypal) {\n            window.document.head.removeChild(this.btScript);\n            window.setTimeout(() => {\n                Array.from(window.document.head.querySelectorAll('script')).forEach(el => {\n                    if (el.src != null && el.src.indexOf('paypal') > -1) {\n                        try {\n                            window.document.head.removeChild(el);\n                        } catch { }\n                    }\n                });\n                const btStylesheet = window.document.head.querySelector('#braintree-dropin-stylesheet');\n                if (btStylesheet != null) {\n                    try {\n                        window.document.head.removeChild(btStylesheet);\n                    } catch { }\n                }\n            }, 500);\n        }\n    }\n\n    changeMethod() {\n        this.btInstance = null;\n\n        if (this.method === PaymentMethodType.PayPal) {\n            window.setTimeout(() => {\n                (window as any).braintree.dropin.create({\n                    authorization: process.env.BRAINTREE_KEY,\n                    container: '#bt-dropin-container',\n                    paymentOptionPriority: ['paypal'],\n                    paypal: {\n                        flow: 'vault',\n                        buttonStyle: {\n                            label: 'pay',\n                            size: 'medium',\n                            shape: 'pill',\n                            color: 'blue',\n                            tagline: 'false',\n                        },\n                    },\n                }, (createErr: any, instance: any) => {\n                    if (createErr != null) {\n                        // tslint:disable-next-line\n                        console.error(createErr);\n                        return;\n                    }\n                    this.btInstance = instance;\n                });\n            }, 250);\n        } else {\n            this.setStripeElement();\n        }\n    }\n\n    createPaymentToken(): Promise<[string, PaymentMethodType]> {\n        return new Promise((resolve, reject) => {\n            if (this.method === PaymentMethodType.Credit) {\n                resolve([null, this.method]);\n            } else if (this.method === PaymentMethodType.PayPal) {\n                this.btInstance.requestPaymentMethod().then((payload: any) => {\n                    resolve([payload.nonce, this.method]);\n                }).catch((err: any) => {\n                    reject(err.message);\n                });\n            } else if (this.method === PaymentMethodType.Card || this.method === PaymentMethodType.BankAccount) {\n                if (this.method === PaymentMethodType.Card) {\n                    this.apiService.postSetupPayment().then(clientSecret =>\n                        this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement))\n                        .then((result: any) => {\n                            if (result.error) {\n                                reject(result.error.message);\n                            } else if (result.setupIntent && result.setupIntent.status === 'succeeded') {\n                                resolve([result.setupIntent.payment_method, this.method]);\n                            } else {\n                                reject();\n                            }\n                        });\n                } else {\n                    this.stripe.createToken('bank_account', this.bank).then((result: any) => {\n                        if (result.error) {\n                            reject(result.error.message);\n                        } else if (result.token && result.token.id != null) {\n                            resolve([result.token.id, this.method]);\n                        } else {\n                            reject();\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n        return new Promise<void>((resolve, reject) => {\n            if (this.showMethods && this.stripeCardNumberElement == null) {\n                reject();\n                return;\n            }\n            const handleCardPayment = () => this.showMethods ?\n                this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement) :\n                this.stripe.handleCardSetup(clientSecret);\n            return handleCardPayment().then(async (result: any) => {\n                if (result.error) {\n                    reject(result.error.message);\n                } else if (result.paymentIntent && result.paymentIntent.status === 'succeeded') {\n                    if (successCallback != null) {\n                        await successCallback();\n                    }\n                    resolve();\n                } else {\n                    reject();\n                }\n            });\n        });\n    }\n\n    private setStripeElement() {\n        window.setTimeout(() => {\n            if (this.showMethods && this.method === PaymentMethodType.Card) {\n                if (this.stripeCardNumberElement == null) {\n                    this.stripeCardNumberElement = this.stripeElements.create('cardNumber', {\n                        style: this.StripeElementStyle,\n                        classes: this.StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                if (this.stripeCardExpiryElement == null) {\n                    this.stripeCardExpiryElement = this.stripeElements.create('cardExpiry', {\n                        style: this.StripeElementStyle,\n                        classes: this.StripeElementClasses,\n                    });\n                }\n                if (this.stripeCardCvcElement == null) {\n                    this.stripeCardCvcElement = this.stripeElements.create('cardCvc', {\n                        style: this.StripeElementStyle,\n                        classes: this.StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                this.stripeCardNumberElement.mount('#stripe-card-number-element');\n                this.stripeCardExpiryElement.mount('#stripe-card-expiry-element');\n                this.stripeCardCvcElement.mount('#stripe-card-cvc-element');\n            }\n        }, 50);\n    }\n\n    private async setTheme() {\n        const theme = await this.platformUtilsService.getEffectiveTheme();\n        if (theme === ThemeType.Dark) {\n            this.StripeElementStyle.base.color = darkInputColor;\n            this.StripeElementStyle.base['::placeholder'].color = darkInputPlaceholderColor;\n            this.StripeElementStyle.invalid.color = darkInputColor;\n        } else {\n            this.StripeElementStyle.base.color = lightInputColor;\n            this.StripeElementStyle.base['::placeholder'].color = lightInputPlaceholderColor;\n            this.StripeElementStyle.invalid.color = lightInputColor;\n        }\n    }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\"> <div class=\"form-check form-check-inline mr-4\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-card\" [value]=\"paymentMethodType.Card\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-card\"> <i class=\"fa fa-fw fa-credit-card\" aria-hidden=\"true\"></i> {{'creditCard' | i18n}}</label> </div> <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-bank\" [value]=\"paymentMethodType.BankAccount\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-bank\"> <i class=\"fa fa-fw fa-university\" aria-hidden=\"true\"></i> {{'bankAccount' | i18n}}</label> </div> <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-paypal\" [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-paypal\"> <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label> </div> <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-credit\" [value]=\"paymentMethodType.Credit\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-credit\"> <i class=\"fa fa-fw fa-dollar\" aria-hidden=\"true\"></i> {{'accountCredit' | i18n}}</label> </div> </div> <ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"stripe-card-number-element\">{{'number' | i18n}}</label> <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div> </div> <div class=\"form-group col-8 d-flex align-items-end\"> <img src=\"images/cards.png\" alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\" width=\"323\" height=\"32\"> </div> <div class=\"form-group col-4\"> <label for=\"stripe-card-expiry-element\">{{'expiration' | i18n}}</label> <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div> </div> <div class=\"form-group col-4\"> <div class=\"d-flex\"> <label for=\"stripe-card-cvc-element\"> {{'securityCode' | i18n}} </label> <a href=\"https://www.cvvnumber.com/cvv.html\" tabindex=\"-1\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"ml-auto\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div> </div> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\"> <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\"> {{'verifyBankAccountInitialDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}} </app-callout> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"routing_number\">{{'routingNumber' | i18n}}</label> <input id=\"routing_number\" class=\"form-control\" type=\"text\" name=\"routing_number\" [(ngModel)]=\"bank.routing_number\" required appInputVerbatim> </div> <div class=\"form-group col-6\"> <label for=\"account_number\">{{'accountNumber' | i18n}}</label> <input id=\"account_number\" class=\"form-control\" type=\"text\" name=\"account_number\" [(ngModel)]=\"bank.account_number\" required appInputVerbatim> </div> <div class=\"form-group col-6\"> <label for=\"account_holder_name\">{{'accountHolderName' | i18n}}</label> <input id=\"account_holder_name\" class=\"form-control\" type=\"text\" name=\"account_holder_name\" [(ngModel)]=\"bank.account_holder_name\" required> </div> <div class=\"form-group col-6\"> <label for=\"account_holder_type\">{{'bankAccountType' | i18n}}</label> <select id=\"account_holder_type\" class=\"form-control\" name=\"account_holder_type\" [(ngModel)]=\"bank.account_holder_type\" required> <option value=\"\">-- {{'select' | i18n}} --</option> <option value=\"company\">{{'bankAccountTypeCompany' | i18n}}</option> <option value=\"individual\">{{'bankAccountTypeIndividual' | i18n}}</option> </select> </div> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\"> <div class=\"mb-3\"> <div id=\"bt-dropin-container\" class=\"mb-1\"></div> <small class=\"text-muted\">{{'paypalClickSubmit' | i18n}}</small> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\"> <app-callout type=\"note\"> {{'makeSureEnoughCredit' | i18n}} </app-callout> </ng-container> ","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { AttachmentView } from './attachmentView';\nimport { CardView } from './cardView';\nimport { FieldView } from './fieldView';\nimport { IdentityView } from './identityView';\nimport { LoginView } from './loginView';\nimport { PasswordHistoryView } from './passwordHistoryView';\nimport { SecureNoteView } from './secureNoteView';\nimport { View } from './view';\n\nexport class CipherView implements View {\n    id: string = null;\n    organizationId: string = null;\n    folderId: string = null;\n    name: string = null;\n    notes: string = null;\n    type: CipherType = null;\n    favorite = false;\n    organizationUseTotp = false;\n    edit = false;\n    viewPassword = true;\n    localData: any;\n    login = new LoginView();\n    identity = new IdentityView();\n    card = new CardView();\n    secureNote = new SecureNoteView();\n    attachments: AttachmentView[] = null;\n    fields: FieldView[] = null;\n    passwordHistory: PasswordHistoryView[] = null;\n    collectionIds: string[] = null;\n    revisionDate: Date = null;\n    deletedDate: Date = null;\n    reprompt: CipherRepromptType = CipherRepromptType.None;\n\n    constructor(c?: Cipher) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.folderId = c.folderId;\n        this.favorite = c.favorite;\n        this.organizationUseTotp = c.organizationUseTotp;\n        this.edit = c.edit;\n        this.viewPassword = c.viewPassword;\n        this.type = c.type;\n        this.localData = c.localData;\n        this.collectionIds = c.collectionIds;\n        this.revisionDate = c.revisionDate;\n        this.deletedDate = c.deletedDate;\n        // Old locally stored ciphers might have reprompt == null. If so set it to None.\n        this.reprompt = c.reprompt ?? CipherRepromptType.None;\n    }\n\n    get subTitle(): string {\n        switch (this.type) {\n            case CipherType.Login:\n                return this.login.subTitle;\n            case CipherType.SecureNote:\n                return this.secureNote.subTitle;\n            case CipherType.Card:\n                return this.card.subTitle;\n            case CipherType.Identity:\n                return this.identity.subTitle;\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    get hasPasswordHistory(): boolean {\n        return this.passwordHistory && this.passwordHistory.length > 0;\n    }\n\n    get hasAttachments(): boolean {\n        return this.attachments && this.attachments.length > 0;\n    }\n\n    get hasOldAttachments(): boolean {\n        if (this.hasAttachments) {\n            for (let i = 0; i < this.attachments.length; i++) {\n                if (this.attachments[i].key == null) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    get hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    get passwordRevisionDisplayDate(): Date {\n        if (this.type !== CipherType.Login || this.login == null) {\n            return null;\n        } else if (this.login.password == null || this.login.password === '') {\n            return null;\n        }\n        return this.login.passwordRevisionDate;\n    }\n\n    get isDeleted(): boolean {\n        return this.deletedDate != null;\n    }\n}\n","import { View } from './view';\n\nimport { Identity } from '../domain/identity';\n\nimport { Utils } from '../../misc/utils';\n\nexport class IdentityView implements View {\n    title: string = null;\n    middleName: string = null;\n    address1: string = null;\n    address2: string = null;\n    address3: string = null;\n    city: string = null;\n    state: string = null;\n    postalCode: string = null;\n    country: string = null;\n    company: string = null;\n    email: string = null;\n    phone: string = null;\n    ssn: string = null;\n    username: string = null;\n    passportNumber: string = null;\n    licenseNumber: string = null;\n\n    // tslint:disable\n    private _firstName: string = null;\n    private _lastName: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(i?: Identity) {\n        // ctor\n    }\n\n    get firstName(): string {\n        return this._firstName;\n    }\n    set firstName(value: string) {\n        this._firstName = value;\n        this._subTitle = null;\n    }\n\n    get lastName(): string {\n        return this._lastName;\n    }\n    set lastName(value: string) {\n        this._lastName = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n            this._subTitle = '';\n            if (this.firstName != null) {\n                this._subTitle = this.firstName;\n            }\n            if (this.lastName != null) {\n                if (this._subTitle !== '') {\n                    this._subTitle += ' ';\n                }\n                this._subTitle += this.lastName;\n            }\n        }\n\n        return this._subTitle;\n    }\n\n    get fullName(): string {\n        if (this.title != null || this.firstName != null || this.middleName != null || this.lastName != null) {\n            let name = '';\n            if (this.title != null) {\n                name += (this.title + ' ');\n            }\n            if (this.firstName != null) {\n                name += (this.firstName + ' ');\n            }\n            if (this.middleName != null) {\n                name += (this.middleName + ' ');\n            }\n            if (this.lastName != null) {\n                name += this.lastName;\n            }\n            return name.trim();\n        }\n\n        return null;\n    }\n\n    get fullAddress(): string {\n        let address = this.address1;\n        if (!Utils.isNullOrWhitespace(this.address2)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address2;\n        }\n        if (!Utils.isNullOrWhitespace(this.address3)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address3;\n        }\n        return address;\n    }\n\n    get fullAddressPart2(): string {\n        if (this.city == null && this.state == null && this.postalCode == null) {\n            return null;\n        }\n        const city = this.city || '-';\n        const state = this.state;\n        const postalCode = this.postalCode || '-';\n        let addressPart2 = city;\n        if (!Utils.isNullOrWhitespace(state)) {\n            addressPart2 += ', ' + state;\n        }\n        addressPart2 += ', ' + postalCode;\n        return addressPart2;\n    }\n}\n","import { View } from './view';\n\nimport { Folder } from '../domain/folder';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nexport class FolderView implements View, ITreeNodeObject {\n    id: string = null;\n    name: string = null;\n    revisionDate: Date = null;\n\n    constructor(f?: Folder) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n        this.revisionDate = f.revisionDate;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { OrganizationTaxInfoUpdateRequest } from 'jslib-common/models/request/organizationTaxInfoUpdateRequest';\nimport { TaxInfoUpdateRequest } from 'jslib-common/models/request/taxInfoUpdateRequest';\nimport { TaxRateResponse } from 'jslib-common/models/response/taxRateResponse';\n\n@Component({\n    selector: 'app-tax-info',\n    templateUrl: 'tax-info.component.html',\n})\nexport class TaxInfoComponent {\n    @Output() onCountryChanged = new EventEmitter();\n\n    loading: boolean = true;\n    organizationId: string;\n    taxInfo: any = {\n        taxId: null,\n        line1: null,\n        line2: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: 'US',\n        includeTaxId: false,\n    };\n\n    taxRates: TaxRateResponse[];\n\n    private pristine: any = {\n        taxId: null,\n        line1: null,\n        line2: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: 'US',\n        includeTaxId: false,\n    };\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            if (this.organizationId) {\n                try {\n                    const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\n                    if (taxInfo) {\n                        this.taxInfo.taxId = taxInfo.taxId;\n                        this.taxInfo.state = taxInfo.state;\n                        this.taxInfo.line1 = taxInfo.line1;\n                        this.taxInfo.line2 = taxInfo.line2;\n                        this.taxInfo.city = taxInfo.city;\n                        this.taxInfo.state = taxInfo.state;\n                        this.taxInfo.postalCode = taxInfo.postalCode;\n                        this.taxInfo.country = taxInfo.country || 'US';\n                        this.taxInfo.includeTaxId = this.taxInfo.country !== 'US' && (\n                            !!taxInfo.taxId\n                            || !!taxInfo.line1\n                            || !!taxInfo.line2\n                            || !!taxInfo.city\n                            || !!taxInfo.state);\n                    }\n                } catch { }\n            } else {\n                const taxInfo = await this.apiService.getTaxInfo();\n                if (taxInfo) {\n                    this.taxInfo.postalCode = taxInfo.postalCode;\n                    this.taxInfo.country = taxInfo.country || 'US';\n                }\n            }\n            this.pristine = Object.assign({}, this.taxInfo);\n            // If not the default (US) then trigger onCountryChanged\n            if (this.taxInfo.country !== 'US') {\n                this.onCountryChanged.emit();\n            }\n        });\n\n        const taxRates = await this.apiService.getTaxRates();\n        this.taxRates = taxRates.data;\n        this.loading = false;\n    }\n\n    get taxRate() {\n        if (this.taxRates != null) {\n            const localTaxRate = this.taxRates.find(x =>\n                x.country === this.taxInfo.country &&\n                x.postalCode === this.taxInfo.postalCode\n            );\n            return localTaxRate?.rate ?? null;\n        }\n    }\n\n    getTaxInfoRequest(): TaxInfoUpdateRequest {\n        if (this.organizationId) {\n            const request = new OrganizationTaxInfoUpdateRequest();\n            request.taxId = this.taxInfo.taxId;\n            request.state = this.taxInfo.state;\n            request.line1 = this.taxInfo.line1;\n            request.line2 = this.taxInfo.line2;\n            request.city = this.taxInfo.city;\n            request.state = this.taxInfo.state;\n            request.postalCode = this.taxInfo.postalCode;\n            request.country = this.taxInfo.country;\n            return request;\n        } else {\n            const request = new TaxInfoUpdateRequest();\n            request.postalCode = this.taxInfo.postalCode;\n            request.country = this.taxInfo.country;\n            return request;\n        }\n    }\n\n    submitTaxInfo(): Promise<any> {\n        if (!this.hasChanged()) {\n            return new Promise<void>(resolve => { resolve(); });\n        }\n        const request = this.getTaxInfoRequest();\n        return this.organizationId ? this.apiService.putOrganizationTaxInfo(this.organizationId,\n            request as OrganizationTaxInfoUpdateRequest) : this.apiService.putTaxInfo(request);\n    }\n\n    changeCountry() {\n        if (this.taxInfo.country === 'US') {\n            this.taxInfo.includeTaxId = false;\n            this.taxInfo.taxId = null;\n            this.taxInfo.line1 = null;\n            this.taxInfo.line2 = null;\n            this.taxInfo.city = null;\n            this.taxInfo.state = null;\n        }\n        this.onCountryChanged.emit();\n    }\n\n    private hasChanged(): boolean {\n        for (const key in this.taxInfo) {\n            if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressCountry\">{{'country' | i18n}}</label> <select id=\"addressCountry\" class=\"form-control\" [(ngModel)]=\"taxInfo.country\" required name=\"addressCountry\" autocomplete=\"country\" (change)=\"changeCountry()\"> <option value=\"\">-- Select --</option> <option value=\"US\">United States</option> <option value=\"CN\">China</option> <option value=\"FR\">France</option> <option value=\"DE\">Germany</option> <option value=\"CA\">Canada</option> <option value=\"GB\">United Kingdom</option> <option value=\"AU\">Australia</option> <option value=\"IN\">India</option> <option value=\"-\" disabled=\"disabled\"></option> <option value=\"AF\">Afghanistan</option> <option value=\"AX\">Åland Islands</option> <option value=\"AL\">Albania</option> <option value=\"DZ\">Algeria</option> <option value=\"AS\">American Samoa</option> <option value=\"AD\">Andorra</option> <option value=\"AO\">Angola</option> <option value=\"AI\">Anguilla</option> <option value=\"AQ\">Antarctica</option> <option value=\"AG\">Antigua and Barbuda</option> <option value=\"AR\">Argentina</option> <option value=\"AM\">Armenia</option> <option value=\"AW\">Aruba</option> <option value=\"AT\">Austria</option> <option value=\"AZ\">Azerbaijan</option> <option value=\"BS\">Bahamas</option> <option value=\"BH\">Bahrain</option> <option value=\"BD\">Bangladesh</option> <option value=\"BB\">Barbados</option> <option value=\"BY\">Belarus</option> <option value=\"BE\">Belgium</option> <option value=\"BZ\">Belize</option> <option value=\"BJ\">Benin</option> <option value=\"BM\">Bermuda</option> <option value=\"BT\">Bhutan</option> <option value=\"BO\">Bolivia, Plurinational State of</option> <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option> <option value=\"BA\">Bosnia and Herzegovina</option> <option value=\"BW\">Botswana</option> <option value=\"BV\">Bouvet Island</option> <option value=\"BR\">Brazil</option> <option value=\"IO\">British Indian Ocean Territory</option> <option value=\"BN\">Brunei Darussalam</option> <option value=\"BG\">Bulgaria</option> <option value=\"BF\">Burkina Faso</option> <option value=\"BI\">Burundi</option> <option value=\"KH\">Cambodia</option> <option value=\"CM\">Cameroon</option> <option value=\"CV\">Cape Verde</option> <option value=\"KY\">Cayman Islands</option> <option value=\"CF\">Central African Republic</option> <option value=\"TD\">Chad</option> <option value=\"CL\">Chile</option> <option value=\"CX\">Christmas Island</option> <option value=\"CC\">Cocos (Keeling) Islands</option> <option value=\"CO\">Colombia</option> <option value=\"KM\">Comoros</option> <option value=\"CG\">Congo</option> <option value=\"CD\">Congo, the Democratic Republic of the</option> <option value=\"CK\">Cook Islands</option> <option value=\"CR\">Costa Rica</option> <option value=\"CI\">Côte d'Ivoire</option> <option value=\"HR\">Croatia</option> <option value=\"CU\">Cuba</option> <option value=\"CW\">Curaçao</option> <option value=\"CY\">Cyprus</option> <option value=\"CZ\">Czech Republic</option> <option value=\"DK\">Denmark</option> <option value=\"DJ\">Djibouti</option> <option value=\"DM\">Dominica</option> <option value=\"DO\">Dominican Republic</option> <option value=\"EC\">Ecuador</option> <option value=\"EG\">Egypt</option> <option value=\"SV\">El Salvador</option> <option value=\"GQ\">Equatorial Guinea</option> <option value=\"ER\">Eritrea</option> <option value=\"EE\">Estonia</option> <option value=\"ET\">Ethiopia</option> <option value=\"FK\">Falkland Islands (Malvinas)</option> <option value=\"FO\">Faroe Islands</option> <option value=\"FJ\">Fiji</option> <option value=\"FI\">Finland</option> <option value=\"GF\">French Guiana</option> <option value=\"PF\">French Polynesia</option> <option value=\"TF\">French Southern Territories</option> <option value=\"GA\">Gabon</option> <option value=\"GM\">Gambia</option> <option value=\"GE\">Georgia</option> <option value=\"GH\">Ghana</option> <option value=\"GI\">Gibraltar</option> <option value=\"GR\">Greece</option> <option value=\"GL\">Greenland</option> <option value=\"GD\">Grenada</option> <option value=\"GP\">Guadeloupe</option> <option value=\"GU\">Guam</option> <option value=\"GT\">Guatemala</option> <option value=\"GG\">Guernsey</option> <option value=\"GN\">Guinea</option> <option value=\"GW\">Guinea-Bissau</option> <option value=\"GY\">Guyana</option> <option value=\"HT\">Haiti</option> <option value=\"HM\">Heard Island and McDonald Islands</option> <option value=\"VA\">Holy See (Vatican City State)</option> <option value=\"HN\">Honduras</option> <option value=\"HK\">Hong Kong</option> <option value=\"HU\">Hungary</option> <option value=\"IS\">Iceland</option> <option value=\"ID\">Indonesia</option> <option value=\"IR\">Iran, Islamic Republic of</option> <option value=\"IQ\">Iraq</option> <option value=\"IE\">Ireland</option> <option value=\"IM\">Isle of Man</option> <option value=\"IL\">Israel</option> <option value=\"IT\">Italy</option> <option value=\"JM\">Jamaica</option> <option value=\"JP\">Japan</option> <option value=\"JE\">Jersey</option> <option value=\"JO\">Jordan</option> <option value=\"KZ\">Kazakhstan</option> <option value=\"KE\">Kenya</option> <option value=\"KI\">Kiribati</option> <option value=\"KP\">Korea, Democratic People's Republic of</option> <option value=\"KR\">Korea, Republic of</option> <option value=\"KW\">Kuwait</option> <option value=\"KG\">Kyrgyzstan</option> <option value=\"LA\">Lao People's Democratic Republic</option> <option value=\"LV\">Latvia</option> <option value=\"LB\">Lebanon</option> <option value=\"LS\">Lesotho</option> <option value=\"LR\">Liberia</option> <option value=\"LY\">Libya</option> <option value=\"LI\">Liechtenstein</option> <option value=\"LT\">Lithuania</option> <option value=\"LU\">Luxembourg</option> <option value=\"MO\">Macao</option> <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option> <option value=\"MG\">Madagascar</option> <option value=\"MW\">Malawi</option> <option value=\"MY\">Malaysia</option> <option value=\"MV\">Maldives</option> <option value=\"ML\">Mali</option> <option value=\"MT\">Malta</option> <option value=\"MH\">Marshall Islands</option> <option value=\"MQ\">Martinique</option> <option value=\"MR\">Mauritania</option> <option value=\"MU\">Mauritius</option> <option value=\"YT\">Mayotte</option> <option value=\"MX\">Mexico</option> <option value=\"FM\">Micronesia, Federated States of</option> <option value=\"MD\">Moldova, Republic of</option> <option value=\"MC\">Monaco</option> <option value=\"MN\">Mongolia</option> <option value=\"ME\">Montenegro</option> <option value=\"MS\">Montserrat</option> <option value=\"MA\">Morocco</option> <option value=\"MZ\">Mozambique</option> <option value=\"MM\">Myanmar</option> <option value=\"NA\">Namibia</option> <option value=\"NR\">Nauru</option> <option value=\"NP\">Nepal</option> <option value=\"NL\">Netherlands</option> <option value=\"NC\">New Caledonia</option> <option value=\"NZ\">New Zealand</option> <option value=\"NI\">Nicaragua</option> <option value=\"NE\">Niger</option> <option value=\"NG\">Nigeria</option> <option value=\"NU\">Niue</option> <option value=\"NF\">Norfolk Island</option> <option value=\"MP\">Northern Mariana Islands</option> <option value=\"NO\">Norway</option> <option value=\"OM\">Oman</option> <option value=\"PK\">Pakistan</option> <option value=\"PW\">Palau</option> <option value=\"PS\">Palestinian Territory, Occupied</option> <option value=\"PA\">Panama</option> <option value=\"PG\">Papua New Guinea</option> <option value=\"PY\">Paraguay</option> <option value=\"PE\">Peru</option> <option value=\"PH\">Philippines</option> <option value=\"PN\">Pitcairn</option> <option value=\"PL\">Poland</option> <option value=\"PT\">Portugal</option> <option value=\"PR\">Puerto Rico</option> <option value=\"QA\">Qatar</option> <option value=\"RE\">Réunion</option> <option value=\"RO\">Romania</option> <option value=\"RU\">Russian Federation</option> <option value=\"RW\">Rwanda</option> <option value=\"BL\">Saint Barthélemy</option> <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option> <option value=\"KN\">Saint Kitts and Nevis</option> <option value=\"LC\">Saint Lucia</option> <option value=\"MF\">Saint Martin (French part)</option> <option value=\"PM\">Saint Pierre and Miquelon</option> <option value=\"VC\">Saint Vincent and the Grenadines</option> <option value=\"WS\">Samoa</option> <option value=\"SM\">San Marino</option> <option value=\"ST\">Sao Tome and Principe</option> <option value=\"SA\">Saudi Arabia</option> <option value=\"SN\">Senegal</option> <option value=\"RS\">Serbia</option> <option value=\"SC\">Seychelles</option> <option value=\"SL\">Sierra Leone</option> <option value=\"SG\">Singapore</option> <option value=\"SX\">Sint Maarten (Dutch part)</option> <option value=\"SK\">Slovakia</option> <option value=\"SI\">Slovenia</option> <option value=\"SB\">Solomon Islands</option> <option value=\"SO\">Somalia</option> <option value=\"ZA\">South Africa</option> <option value=\"GS\">South Georgia and the South Sandwich Islands</option> <option value=\"SS\">South Sudan</option> <option value=\"ES\">Spain</option> <option value=\"LK\">Sri Lanka</option> <option value=\"SD\">Sudan</option> <option value=\"SR\">Suriname</option> <option value=\"SJ\">Svalbard and Jan Mayen</option> <option value=\"SZ\">Swaziland</option> <option value=\"SE\">Sweden</option> <option value=\"CH\">Switzerland</option> <option value=\"SY\">Syrian Arab Republic</option> <option value=\"TW\">Taiwan</option> <option value=\"TJ\">Tajikistan</option> <option value=\"TZ\">Tanzania, United Republic of</option> <option value=\"TH\">Thailand</option> <option value=\"TL\">Timor-Leste</option> <option value=\"TG\">Togo</option> <option value=\"TK\">Tokelau</option> <option value=\"TO\">Tonga</option> <option value=\"TT\">Trinidad and Tobago</option> <option value=\"TN\">Tunisia</option> <option value=\"TR\">Turkey</option> <option value=\"TM\">Turkmenistan</option> <option value=\"TC\">Turks and Caicos Islands</option> <option value=\"TV\">Tuvalu</option> <option value=\"UG\">Uganda</option> <option value=\"UA\">Ukraine</option> <option value=\"AE\">United Arab Emirates</option> <option value=\"UM\">United States Minor Outlying Islands</option> <option value=\"UY\">Uruguay</option> <option value=\"UZ\">Uzbekistan</option> <option value=\"VU\">Vanuatu</option> <option value=\"VE\">Venezuela, Bolivarian Republic of</option> <option value=\"VN\">Viet Nam</option> <option value=\"VG\">Virgin Islands, British</option> <option value=\"VI\">Virgin Islands, U.S.</option> <option value=\"WF\">Wallis and Futuna</option> <option value=\"EH\">Western Sahara</option> <option value=\"YE\">Yemen</option> <option value=\"ZM\">Zambia</option> <option value=\"ZW\">Zimbabwe</option> </select> </div> </div> <div class=\"col-3\"> <div class=\"form-group\"> <label for=\"addressPostalCode\">{{'zipPostalCode' | i18n}}</label> <input id=\"addressPostalCode\" class=\"form-control\" type=\"text\" name=\"addressPostalCode\" [(ngModel)]=\"taxInfo.postalCode\" [required]=\"taxInfo.country === 'US'\" autocomplete=\"postal-code\"> </div> </div> <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\"> <div class=\"form-group form-check\"> <input class=\"form-check-input\" id=\"addressIncludeTaxId\" name=\"addressIncludeTaxId\" type=\"checkbox\" [(ngModel)]=\"taxInfo.includeTaxId\"> <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{'includeVAT' | i18n}}</label> </div> </div> </div> <div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"taxId\">{{'taxIdNumber' | i18n}}</label> <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\"> </div> </div> </div> <div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressLine1\">{{'address1' | i18n}}</label> <input id=\"addressLine1\" class=\"form-control\" type=\"text\" name=\"addressLine1\" [(ngModel)]=\"taxInfo.line1\" autocomplete=\"address-line1\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressLine2\">{{'address2' | i18n}}</label> <input id=\"addressLine2\" class=\"form-control\" type=\"text\" name=\"addressLine2\" [(ngModel)]=\"taxInfo.line2\" autocomplete=\"address-line2\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressCity\">{{'cityTown' | i18n}}</label> <input id=\"addressCity\" class=\"form-control\" type=\"text\" name=\"addressCity\" [(ngModel)]=\"taxInfo.city\" autocomplete=\"address-level2\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressState\">{{'stateProvince' | i18n}}</label> <input id=\"addressState\" class=\"form-control\" type=\"text\" name=\"addressState\" [(ngModel)]=\"taxInfo.state\" autocomplete=\"address-level1\"> </div> </div> </div> ","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { DeviceType } from 'jslib-common/enums/deviceType';\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\n\n@Injectable()\nexport class EventService {\n    constructor(private i18nService: I18nService, private policyService: PolicyService) { }\n\n    getDefaultDateFilters() {\n        const d = new Date();\n        const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n        d.setDate(d.getDate() - 30);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n        return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n    }\n\n    formatDateFilters(filterStart: string, filterEnd: string) {\n        const start: Date = new Date(filterStart);\n        const end: Date = new Date(filterEnd + ':59.999');\n        if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n            throw new Error('Invalid date range.');\n        }\n        return [start.toISOString(), end.toISOString()];\n    }\n\n    async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n        const appInfo = this.getAppInfo(ev.deviceType);\n        const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n        return {\n            message: message,\n            humanReadableMessage: humanReadableMessage,\n            appIcon: appInfo[0],\n            appName: appInfo[1],\n        };\n    }\n\n    private async getEventMessage(ev: EventResponse, options: EventOptions) {\n        let msg = '';\n        let humanReadableMsg = '';\n        switch (ev.type) {\n            // User\n            case EventType.User_LoggedIn:\n                msg = humanReadableMsg = this.i18nService.t('loggedIn');\n                break;\n            case EventType.User_ChangedPassword:\n                msg = humanReadableMsg = this.i18nService.t('changedPassword');\n                break;\n            case EventType.User_Updated2fa:\n                msg = humanReadableMsg = this.i18nService.t('enabledUpdated2fa');\n                break;\n            case EventType.User_Disabled2fa:\n                msg = humanReadableMsg = this.i18nService.t('disabled2fa');\n                break;\n            case EventType.User_Recovered2fa:\n                msg = humanReadableMsg = this.i18nService.t('recovered2fa');\n                break;\n            case EventType.User_FailedLogIn:\n                msg = humanReadableMsg = this.i18nService.t('failedLogin');\n                break;\n            case EventType.User_FailedLogIn2fa:\n                msg = humanReadableMsg = this.i18nService.t('failedLogin2fa');\n                break;\n            case EventType.User_ClientExportedVault:\n                msg = humanReadableMsg = this.i18nService.t('exportedVault');\n                break;\n            case EventType.User_UpdatedTempPassword:\n                msg = humanReadableMsg = this.i18nService.t('updatedMasterPassword');\n                break;\n            // Cipher\n            case EventType.Cipher_Created:\n                msg = this.i18nService.t('createdItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('createdItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Updated:\n                msg = this.i18nService.t('editedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('editedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Deleted:\n                msg = this.i18nService.t('permanentlyDeletedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('permanentlyDeletedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_SoftDeleted:\n                msg = this.i18nService.t('deletedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('deletedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Restored:\n                msg = this.i18nService.t('restoredItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('restoredItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_AttachmentCreated:\n                msg = this.i18nService.t('createdAttachmentForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('createdAttachmentForItem', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_AttachmentDeleted:\n                msg = this.i18nService.t('deletedAttachmentForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('deletedAttachmentForItem', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Shared:\n                msg = this.i18nService.t('movedItemIdToOrg', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('movedItemIdToOrg', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientViewed:\n                msg = this.i18nService.t('viewedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledPasswordVisible:\n                msg = this.i18nService.t('viewedPasswordItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedPasswordItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledHiddenFieldVisible:\n                msg = this.i18nService.t('viewedHiddenFieldItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedHiddenFieldItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledCardCodeVisible:\n                msg = this.i18nService.t('viewedSecurityCodeItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedSecurityCodeItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedHiddenField:\n                msg = this.i18nService.t('copiedHiddenFieldItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedHiddenFieldItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedPassword:\n                msg = this.i18nService.t('copiedPasswordItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedPasswordItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedCardCode:\n                msg = this.i18nService.t('copiedSecurityCodeItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedSecurityCodeItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientAutofilled:\n                msg = this.i18nService.t('autofilledItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('autofilledItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_UpdatedCollections:\n                msg = this.i18nService.t('editedCollectionsForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('editedCollectionsForItem', this.getShortId(ev.cipherId));\n                break;\n            // Collection\n            case EventType.Collection_Created:\n                msg = this.i18nService.t('createdCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('createdCollectionId', this.getShortId(ev.collectionId));\n                break;\n            case EventType.Collection_Updated:\n                msg = this.i18nService.t('editedCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('editedCollectionId', this.getShortId(ev.collectionId));\n                break;\n            case EventType.Collection_Deleted:\n                msg = this.i18nService.t('deletedCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('deletedCollectionId', this.getShortId(ev.collectionId));\n                break;\n            // Group\n            case EventType.Group_Created:\n                msg = this.i18nService.t('createdGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('createdGroupId', this.getShortId(ev.groupId));\n                break;\n            case EventType.Group_Updated:\n                msg = this.i18nService.t('editedGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('editedGroupId', this.getShortId(ev.groupId));\n                break;\n            case EventType.Group_Deleted:\n                msg = this.i18nService.t('deletedGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('deletedGroupId', this.getShortId(ev.groupId));\n                break;\n            // Org user\n            case EventType.OrganizationUser_Invited:\n                msg = this.i18nService.t('invitedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('invitedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Confirmed:\n                msg = this.i18nService.t('confirmedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('confirmedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Updated:\n                msg = this.i18nService.t('editedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Removed:\n                msg = this.i18nService.t('removedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('removedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_UpdatedGroups:\n                msg = this.i18nService.t('editedGroupsForUser', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedGroupsForUser', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_UnlinkedSso:\n                msg = this.i18nService.t('unlinkedSsoUser', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('unlinkedSsoUser', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_ResetPassword_Enroll:\n                msg = this.i18nService.t('eventEnrollPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventEnrollPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_ResetPassword_Withdraw:\n                msg = this.i18nService.t('eventWithdrawPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventWithdrawPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_AdminResetPassword:\n                msg = this.i18nService.t('eventAdminPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventAdminPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_ResetSsoLink:\n                msg = this.i18nService.t('eventResetSsoLink', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventResetSsoLink', this.getShortId(ev.organizationUserId));\n                break;\n            // Org\n            case EventType.Organization_Updated:\n                msg = humanReadableMsg = this.i18nService.t('editedOrgSettings');\n                break;\n            case EventType.Organization_PurgedVault:\n                msg = humanReadableMsg = this.i18nService.t('purgedOrganizationVault');\n                break;\n            /*\n            case EventType.Organization_ClientExportedVault:\n                msg = this.i18nService.t('exportedOrganizationVault');\n                break;\n            */\n            case EventType.Organization_VaultAccessed:\n                msg = humanReadableMsg = this.i18nService.t('vaultAccessedByProvider');\n                break;\n            // Policies\n            case EventType.Policy_Updated:\n                msg = this.i18nService.t('modifiedPolicyId', this.formatPolicyId(ev));\n\n                const policies = await this.policyService.getAll();\n                const policy = policies.filter(p => p.id === ev.policyId)[0];\n                let p1 = this.getShortId(ev.policyId);\n                if (policy != null) {\n                    p1 = PolicyType[policy.type];\n                }\n\n                humanReadableMsg = this.i18nService.t('modifiedPolicyId', p1);\n                break;\n            // Provider users:\n            case EventType.ProviderUser_Invited:\n                msg = this.i18nService.t('invitedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('invitedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderUser_Confirmed:\n                msg = this.i18nService.t('confirmedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('confirmedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderUser_Updated:\n                msg = this.i18nService.t('editedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderUser_Removed:\n                msg = this.i18nService.t('removedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('removedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderOrganization_Created:\n                msg = this.i18nService.t('createdOrganizationId', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('createdOrganizationId', this.getShortId(ev.providerOrganizationId));\n                break;\n            case EventType.ProviderOrganization_Added:\n                msg = this.i18nService.t('addedOrganizationId', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('addedOrganizationId', this.getShortId(ev.providerOrganizationId));\n                break;\n            case EventType.ProviderOrganization_Removed:\n                msg = this.i18nService.t('removedOrganizationId', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('removedOrganizationId', this.getShortId(ev.providerOrganizationId));\n                break;\n            case EventType.ProviderOrganization_VaultAccessed:\n                msg = this.i18nService.t('accessedClientVault', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('accessedClientVault', this.getShortId(ev.providerOrganizationId));\n                break;\n            default:\n                break;\n        }\n        return {\n            message: msg === '' ? null : msg,\n            humanReadableMessage: humanReadableMsg === '' ? null : humanReadableMsg,\n        };\n    }\n\n    private getAppInfo(deviceType: DeviceType): [string, string] {\n        switch (deviceType) {\n            case DeviceType.Android:\n                return ['fa-android', this.i18nService.t('mobile') + ' - Android'];\n            case DeviceType.iOS:\n                return ['fa-apple', this.i18nService.t('mobile') + ' - iOS'];\n            case DeviceType.UWP:\n                return ['fa-windows', this.i18nService.t('mobile') + ' - Windows'];\n            case DeviceType.ChromeExtension:\n                return ['fa-chrome', this.i18nService.t('extension') + ' - Chrome'];\n            case DeviceType.FirefoxExtension:\n                return ['fa-firefox', this.i18nService.t('extension') + ' - Firefox'];\n            case DeviceType.OperaExtension:\n                return ['fa-opera', this.i18nService.t('extension') + ' - Opera'];\n            case DeviceType.EdgeExtension:\n                return ['fa-edge', this.i18nService.t('extension') + ' - Edge'];\n            case DeviceType.VivaldiExtension:\n                return ['fa-puzzle-piece', this.i18nService.t('extension') + ' - Vivaldi'];\n            case DeviceType.SafariExtension:\n                return ['fa-safari', this.i18nService.t('extension') + ' - Safari'];\n            case DeviceType.WindowsDesktop:\n                return ['fa-windows', this.i18nService.t('desktop') + ' - Windows'];\n            case DeviceType.MacOsDesktop:\n                return ['fa-apple', this.i18nService.t('desktop') + ' - macOS'];\n            case DeviceType.LinuxDesktop:\n                return ['fa-linux', this.i18nService.t('desktop') + ' - Linux'];\n            case DeviceType.ChromeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Chrome'];\n            case DeviceType.FirefoxBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Firefox'];\n            case DeviceType.OperaBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Opera'];\n            case DeviceType.SafariBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Safari'];\n            case DeviceType.VivaldiBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Vivaldi'];\n            case DeviceType.EdgeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Edge'];\n            case DeviceType.IEBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - IE'];\n            case DeviceType.UnknownBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - ' + this.i18nService.t('unknown')];\n            default:\n                return ['fa-globe', this.i18nService.t('unknown')];\n        }\n    }\n\n    private formatCipherId(ev: EventResponse, options: EventOptions) {\n        const shortId = this.getShortId(ev.cipherId);\n        if (ev.organizationId == null || !options.cipherInfo) {\n            return '<code>' + shortId + '</code>';\n        }\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/vault?search=' + shortId +\n            '&viewEvents=' + ev.cipherId);\n        return a.outerHTML;\n    }\n\n    private formatGroupId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.groupId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/groups?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatCollectionId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.collectionId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/collections?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatOrgUserId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.organizationUserId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/people?search=' + shortId +\n            '&viewEvents=' + ev.organizationUserId);\n        return a.outerHTML;\n    }\n\n    private formatProviderUserId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.providerUserId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/providers/' + ev.providerId + '/manage/people?search=' + shortId +\n            '&viewEvents=' + ev.providerUserId);\n        return a.outerHTML;\n    }\n\n    private formatProviderOrganizationId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.providerOrganizationId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/providers/' + ev.providerId + '/clients?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatPolicyId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.policyId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/policies?policyId=' + ev.policyId);\n        return a.outerHTML;\n    }\n\n    private makeAnchor(shortId: string) {\n        const a = document.createElement('a');\n        a.title = this.i18nService.t('view');\n        a.innerHTML = '<code>' + shortId + '</code>';\n        return a;\n    }\n\n    private getShortId(id: string) {\n        return id?.substring(0, 8);\n    }\n\n    private toDateTimeLocalString(date: Date) {\n        return date.getFullYear() +\n            '-' + this.pad(date.getMonth() + 1) +\n            '-' + this.pad(date.getDate()) +\n            'T' + this.pad(date.getHours()) +\n            ':' + this.pad(date.getMinutes());\n    }\n\n    private pad(num: number) {\n        const norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n    }\n}\n\nexport class EventInfo {\n    message: string;\n    humanReadableMessage: string;\n    appIcon: string;\n    appName: string;\n}\n\nexport class EventOptions {\n    cipherInfo = true;\n}\n","import { LoginUriView } from './loginUriView';\nimport { View } from './view';\n\nimport { Utils } from '../../misc/utils';\nimport { Login } from '../domain/login';\n\nexport class LoginView implements View {\n    username: string = null;\n    password: string = null;\n    passwordRevisionDate?: Date = null;\n    totp: string = null;\n    uris: LoginUriView[] = null;\n    autofillOnPageLoad: boolean = null;\n\n    constructor(l?: Login) {\n        if (!l) {\n            return;\n        }\n\n        this.passwordRevisionDate = l.passwordRevisionDate;\n        this.autofillOnPageLoad = l.autofillOnPageLoad;\n    }\n\n    get uri(): string {\n        return this.hasUris ? this.uris[0].uri : null;\n    }\n\n    get maskedPassword(): string {\n        return this.password != null ? '••••••••' : null;\n    }\n\n    get subTitle(): string {\n        return this.username;\n    }\n\n    get canLaunch(): boolean {\n        return this.hasUris && this.uris.some(u => u.canLaunch);\n    }\n\n    get hasTotp(): boolean {\n        return !Utils.isNullOrWhitespace(this.totp);\n    }\n\n    get launchUri(): string {\n        if (this.hasUris) {\n            const uri = this.uris.find(u => u.canLaunch);\n            if (uri != null) {\n                return uri.launchUri;\n            }\n        }\n        return null;\n    }\n\n    get hasUris(): boolean {\n        return this.uris != null && this.uris.length > 0;\n    }\n}\n","import { CollectionData } from '../data/collectionData';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nexport class Collection extends Domain {\n    id: string;\n    organizationId: string;\n    name: EncString;\n    externalId: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            organizationId: null,\n            name: null,\n            externalId: null,\n            readOnly: null,\n            hidePasswords: null,\n        }, alreadyEncrypted, ['id', 'organizationId', 'externalId', 'readOnly', 'hidePasswords']);\n    }\n\n    decrypt(): Promise<CollectionView> {\n        return this.decryptObj(new CollectionView(this), {\n            name: null,\n        }, this.organizationId);\n    }\n}\n","import { View } from './view';\n\nimport { Collection } from '../domain/collection';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nimport { CollectionGroupDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionView implements View, ITreeNodeObject {\n    id: string = null;\n    organizationId: string = null;\n    name: string = null;\n    externalId: string = null;\n    readOnly: boolean = null;\n    hidePasswords: boolean = null;\n\n    constructor(c?: Collection | CollectionGroupDetailsResponse) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.externalId = c.externalId;\n        if (c instanceof Collection) {\n            this.readOnly = c.readOnly;\n            this.hidePasswords = c.hidePasswords;\n        }\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { AttachmentData } from './attachmentData';\nimport { CardData } from './cardData';\nimport { FieldData } from './fieldData';\nimport { IdentityData } from './identityData';\nimport { LoginData } from './loginData';\nimport { PasswordHistoryData } from './passwordHistoryData';\nimport { SecureNoteData } from './secureNoteData';\n\nimport { CipherResponse } from '../response/cipherResponse';\n\nexport class CipherData {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    userId: string;\n    edit: boolean;\n    viewPassword: boolean;\n    organizationUseTotp: boolean;\n    favorite: boolean;\n    revisionDate: string;\n    type: CipherType;\n    sizeName: string;\n    name: string;\n    notes: string;\n    login?: LoginData;\n    secureNote?: SecureNoteData;\n    card?: CardData;\n    identity?: IdentityData;\n    fields?: FieldData[];\n    attachments?: AttachmentData[];\n    passwordHistory?: PasswordHistoryData[];\n    collectionIds?: string[];\n    deletedDate: string;\n    reprompt: CipherRepromptType;\n\n    constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.folderId = response.folderId;\n        this.userId = userId;\n        this.edit = response.edit;\n        this.viewPassword = response.viewPassword;\n        this.organizationUseTotp = response.organizationUseTotp;\n        this.favorite = response.favorite;\n        this.revisionDate = response.revisionDate;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n        this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n        this.deletedDate = response.deletedDate;\n        this.reprompt = response.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginData(response.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteData(response.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new CardData(response.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityData(response.identity);\n                break;\n            default:\n                break;\n        }\n\n        if (response.fields != null) {\n            this.fields = response.fields.map(f => new FieldData(f));\n        }\n        if (response.attachments != null) {\n            this.attachments = response.attachments.map(a => new AttachmentData(a));\n        }\n        if (response.passwordHistory != null) {\n            this.passwordHistory = response.passwordHistory.map(ph => new PasswordHistoryData(ph));\n        }\n    }\n}\n","export enum CipherRepromptType {\n    None = 0,\n    Password = 1,\n}\n","export enum SendType {\n    Text = 0,\n    File = 1,\n}\n","import { Utils } from '../../misc/utils';\n\nimport { BaseResponse } from './baseResponse';\n\nexport class ErrorResponse extends BaseResponse {\n    message: string;\n    validationErrors: { [key: string]: string[]; };\n    statusCode: number;\n    captchaRequired: boolean;\n    captchaSiteKey: string;\n\n    constructor(response: any, status: number, identityResponse?: boolean) {\n        super(response);\n        let errorModel = null;\n        if (response != null) {\n            const responseErrorModel = this.getResponseProperty('ErrorModel');\n            if (responseErrorModel && identityResponse) {\n                errorModel = responseErrorModel;\n            } else {\n                errorModel = response;\n            }\n        }\n\n        if (errorModel) {\n            this.message = this.getResponseProperty('Message', errorModel);\n            this.validationErrors = this.getResponseProperty('ValidationErrors', errorModel);\n            this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n            this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n        } else {\n            if (status === 429) {\n                this.message = 'Rate limit exceeded. Try again later.';\n            }\n        }\n        this.statusCode = status;\n    }\n\n    getSingleMessage(): string {\n        if (this.validationErrors == null) {\n            return this.message;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            if (this.validationErrors[key].length) {\n                return this.validationErrors[key][0];\n            }\n        }\n        return this.message;\n    }\n\n    getAllMessages(): string[] {\n        const messages: string[] = [];\n        if (this.validationErrors == null) {\n            return messages;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            this.validationErrors[key].forEach((item: string) => {\n                let prefix = '';\n                if (key.indexOf('[') > -1 && key.indexOf(']') > -1) {\n                    const lastSep = key.lastIndexOf('.');\n                    prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + ': ';\n                }\n                messages.push(prefix + item);\n            });\n        }\n        return messages;\n    }\n}\n","export enum EventType {\n    User_LoggedIn = 1000,\n    User_ChangedPassword = 1001,\n    User_Updated2fa = 1002,\n    User_Disabled2fa = 1003,\n    User_Recovered2fa = 1004,\n    User_FailedLogIn = 1005,\n    User_FailedLogIn2fa = 1006,\n    User_ClientExportedVault = 1007,\n    User_UpdatedTempPassword = 1008,\n\n    Cipher_Created = 1100,\n    Cipher_Updated = 1101,\n    Cipher_Deleted = 1102,\n    Cipher_AttachmentCreated = 1103,\n    Cipher_AttachmentDeleted = 1104,\n    Cipher_Shared = 1105,\n    Cipher_UpdatedCollections = 1106,\n    Cipher_ClientViewed = 1107,\n    Cipher_ClientToggledPasswordVisible = 1108,\n    Cipher_ClientToggledHiddenFieldVisible = 1109,\n    Cipher_ClientToggledCardCodeVisible = 1110,\n    Cipher_ClientCopiedPassword = 1111,\n    Cipher_ClientCopiedHiddenField = 1112,\n    Cipher_ClientCopiedCardCode = 1113,\n    Cipher_ClientAutofilled = 1114,\n    Cipher_SoftDeleted = 1115,\n    Cipher_Restored = 1116,\n    Cipher_ClientToggledCardNumberVisible = 1117,\n\n    Collection_Created = 1300,\n    Collection_Updated = 1301,\n    Collection_Deleted = 1302,\n\n    Group_Created = 1400,\n    Group_Updated = 1401,\n    Group_Deleted = 1402,\n\n    OrganizationUser_Invited = 1500,\n    OrganizationUser_Confirmed = 1501,\n    OrganizationUser_Updated = 1502,\n    OrganizationUser_Removed = 1503,\n    OrganizationUser_UpdatedGroups = 1504,\n    OrganizationUser_UnlinkedSso = 1505,\n    OrganizationUser_ResetPassword_Enroll = 1506,\n    OrganizationUser_ResetPassword_Withdraw = 1507,\n    OrganizationUser_AdminResetPassword = 1508,\n    OrganizationUser_ResetSsoLink = 1509,\n\n    Organization_Updated = 1600,\n    Organization_PurgedVault = 1601,\n    // Organization_ClientExportedVault = 1602,\n    Organization_VaultAccessed = 1603,\n\n    Policy_Updated = 1700,\n\n    ProviderUser_Invited = 1800,\n    ProviderUser_Confirmed = 1801,\n    ProviderUser_Updated = 1802,\n    ProviderUser_Removed = 1803,\n\n    ProviderOrganization_Created = 1900,\n    ProviderOrganization_Added = 1901,\n    ProviderOrganization_Removed = 1902,\n    ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum OrganizationUserStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class PermissionsApi extends BaseResponse {\n    accessEventLogs: boolean;\n    accessImportExport: boolean;\n    accessReports: boolean;\n    /**\n     * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n     * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n     */\n    manageAllCollections: boolean;\n    createNewCollections: boolean;\n    editAnyCollection: boolean;\n    deleteAnyCollection: boolean;\n    /**\n     * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n     * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n     */\n    manageAssignedCollections: boolean;\n    editAssignedCollections: boolean;\n    deleteAssignedCollections: boolean;\n    manageCiphers: boolean;\n    manageGroups: boolean;\n    manageSso: boolean;\n    managePolicies: boolean;\n    manageUsers: boolean;\n    manageResetPassword: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return this;\n        }\n        this.accessEventLogs = this.getResponseProperty('AccessEventLogs');\n        this.accessImportExport = this.getResponseProperty('AccessImportExport');\n        this.accessReports = this.getResponseProperty('AccessReports');\n\n        // For backwards compatibility with Server <= 1.43.0\n        this.manageAllCollections = this.getResponseProperty('ManageAllCollections');\n        this.manageAssignedCollections = this.getResponseProperty('ManageAssignedCollections');\n\n        this.createNewCollections = this.getResponseProperty('CreateNewCollections');\n        this.editAnyCollection = this.getResponseProperty('EditAnyCollection');\n        this.deleteAnyCollection = this.getResponseProperty('DeleteAnyCollection');\n        this.editAssignedCollections = this.getResponseProperty('EditAssignedCollections');\n        this.deleteAssignedCollections = this.getResponseProperty('DeleteAssignedCollections');\n\n        this.manageCiphers = this.getResponseProperty('ManageCiphers');\n        this.manageGroups = this.getResponseProperty('ManageGroups');\n        this.manageSso = this.getResponseProperty('ManageSso');\n        this.managePolicies = this.getResponseProperty('ManagePolicies');\n        this.manageUsers = this.getResponseProperty('ManageUsers');\n        this.manageResetPassword = this.getResponseProperty('ManageResetPassword');\n    }\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-password-strength',\n    templateUrl: 'password-strength.component.html',\n})\nexport class PasswordStrengthComponent implements OnChanges {\n    @Input() score?: number;\n    @Input() showText = false;\n\n    scoreWidth = 0;\n    color = 'bg-danger';\n    text: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnChanges(): void {\n        this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\n        switch (this.score) {\n            case 4:\n                this.color = 'bg-success';\n                this.text = this.i18nService.t('strong');\n                break;\n            case 3:\n                this.color = 'bg-primary';\n                this.text = this.i18nService.t('good');\n                break;\n            case 2:\n                this.color = 'bg-warning';\n                this.text = this.i18nService.t('weak');\n                break;\n            default:\n                this.color = 'bg-danger';\n                this.text = this.score != null ? this.i18nService.t('weak') : null;\n                break;\n        }\n    }\n}\n","<div class=\"progress\"> <div class=\"progress-bar {{color}}\" role=\"progressbar\" [ngStyle]=\"{width: (scoreWidth + '%')}\" attr.aria-valuenow=\"{{scoreWidth}}\" aria-valuemin=\"0\" aria-valuemax=\"100\"> <ng-container *ngIf=\"showText && text\"> {{text}} </ng-container> </div> </div> ","import { CollectionDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionData {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n    readOnly: boolean;\n\n    constructor(response: CollectionDetailsResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.name = response.name;\n        this.externalId = response.externalId;\n        this.readOnly = response.readOnly;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-two-factor-verify',\n    templateUrl: 'two-factor-verify.component.html',\n})\nexport class TwoFactorVerifyComponent {\n    @Input() type: TwoFactorProviderType;\n    @Input() organizationId: string;\n    @Output() onAuthed = new EventEmitter<any>();\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    private masterPasswordHash: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash =\n            await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        try {\n            switch (this.type) {\n                case -1:\n                    this.formPromise = this.apiService.getTwoFactorRecover(request);\n                    break;\n                case TwoFactorProviderType.Duo:\n                case TwoFactorProviderType.OrganizationDuo:\n                    if (this.organizationId != null) {\n                        this.formPromise = this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n                    } else {\n                        this.formPromise = this.apiService.getTwoFactorDuo(request);\n                    }\n                    break;\n                case TwoFactorProviderType.Email:\n                    this.formPromise = this.apiService.getTwoFactorEmail(request);\n                    break;\n                case TwoFactorProviderType.WebAuthn:\n                    this.formPromise = this.apiService.getTwoFactorWebAuthn(request);\n                    break;\n                case TwoFactorProviderType.Authenticator:\n                    this.formPromise = this.apiService.getTwoFactorAuthenticator(request);\n                    break;\n                case TwoFactorProviderType.Yubikey:\n                    this.formPromise = this.apiService.getTwoFactorYubiKey(request);\n                    break;\n            }\n\n            const response = await this.formPromise;\n            this.onAuthed.emit({\n                response: response,\n                masterPasswordHash: this.masterPasswordHash,\n            });\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-body\"> <p>{{'twoStepLoginAuthDesc' | i18n}}</p> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'continue' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> ","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CipherData } from '../data/cipherData';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Attachment } from './attachment';\nimport { Card } from './card';\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { Password } from './password';\nimport { SecureNote } from './secureNote';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Cipher extends Domain {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    name: EncString;\n    notes: EncString;\n    type: CipherType;\n    favorite: boolean;\n    organizationUseTotp: boolean;\n    edit: boolean;\n    viewPassword: boolean;\n    revisionDate: Date;\n    localData: any;\n    login: Login;\n    identity: Identity;\n    card: Card;\n    secureNote: SecureNote;\n    attachments: Attachment[];\n    fields: Field[];\n    passwordHistory: Password[];\n    collectionIds: string[];\n    deletedDate: Date;\n    reprompt: CipherRepromptType;\n\n    constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            userId: null,\n            organizationId: null,\n            folderId: null,\n            name: null,\n            notes: null,\n        }, alreadyEncrypted, ['id', 'userId', 'organizationId', 'folderId']);\n\n        this.type = obj.type;\n        this.favorite = obj.favorite;\n        this.organizationUseTotp = obj.organizationUseTotp;\n        this.edit = obj.edit;\n        if (obj.viewPassword != null) {\n            this.viewPassword = obj.viewPassword;\n        } else {\n            this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n        }\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n        this.collectionIds = obj.collectionIds;\n        this.localData = localData;\n        this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n        this.reprompt = obj.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new Login(obj.login, alreadyEncrypted);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\n                break;\n            case CipherType.Card:\n                this.card = new Card(obj.card, alreadyEncrypted);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(obj.identity, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n\n        if (obj.attachments != null) {\n            this.attachments = obj.attachments.map(a => new Attachment(a, alreadyEncrypted));\n        } else {\n            this.attachments = null;\n        }\n\n        if (obj.fields != null) {\n            this.fields = obj.fields.map(f => new Field(f, alreadyEncrypted));\n        } else {\n            this.fields = null;\n        }\n\n        if (obj.passwordHistory != null) {\n            this.passwordHistory = obj.passwordHistory.map(ph => new Password(ph, alreadyEncrypted));\n        } else {\n            this.passwordHistory = null;\n        }\n    }\n\n    async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n        const model = new CipherView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, this.organizationId, encKey);\n\n        switch (this.type) {\n            case CipherType.Login:\n                model.login = await this.login.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.SecureNote:\n                model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.Card:\n                model.card = await this.card.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.Identity:\n                model.identity = await this.identity.decrypt(this.organizationId, encKey);\n                break;\n            default:\n                break;\n        }\n\n        const orgId = this.organizationId;\n\n        if (this.attachments != null && this.attachments.length > 0) {\n            const attachments: any[] = [];\n            await this.attachments.reduce((promise, attachment) => {\n                return promise.then(() => {\n                    return attachment.decrypt(orgId, encKey);\n                }).then(decAttachment => {\n                    attachments.push(decAttachment);\n                });\n            }, Promise.resolve());\n            model.attachments = attachments;\n        }\n\n        if (this.fields != null && this.fields.length > 0) {\n            const fields: any[] = [];\n            await this.fields.reduce((promise, field) => {\n                return promise.then(() => {\n                    return field.decrypt(orgId, encKey);\n                }).then(decField => {\n                    fields.push(decField);\n                });\n            }, Promise.resolve());\n            model.fields = fields;\n        }\n\n        if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n            const passwordHistory: any[] = [];\n            await this.passwordHistory.reduce((promise, ph) => {\n                return promise.then(() => {\n                    return ph.decrypt(orgId, encKey);\n                }).then(decPh => {\n                    passwordHistory.push(decPh);\n                });\n            }, Promise.resolve());\n            model.passwordHistory = passwordHistory;\n        }\n\n        return model;\n    }\n\n    toCipherData(userId: string): CipherData {\n        const c = new CipherData();\n        c.id = this.id;\n        c.organizationId = this.organizationId;\n        c.folderId = this.folderId;\n        c.userId = this.organizationId != null ? userId : null;\n        c.edit = this.edit;\n        c.viewPassword = this.viewPassword;\n        c.organizationUseTotp = this.organizationUseTotp;\n        c.favorite = this.favorite;\n        c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n        c.type = this.type;\n        c.collectionIds = this.collectionIds;\n        c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n        c.reprompt = this.reprompt;\n\n        this.buildDataModel(this, c, {\n            name: null,\n            notes: null,\n        });\n\n        switch (c.type) {\n            case CipherType.Login:\n                c.login = this.login.toLoginData();\n                break;\n            case CipherType.SecureNote:\n                c.secureNote = this.secureNote.toSecureNoteData();\n                break;\n            case CipherType.Card:\n                c.card = this.card.toCardData();\n                break;\n            case CipherType.Identity:\n                c.identity = this.identity.toIdentityData();\n                break;\n            default:\n                break;\n        }\n\n        if (this.fields != null) {\n            c.fields = this.fields.map(f => f.toFieldData());\n        }\n        if (this.attachments != null) {\n            c.attachments = this.attachments.map(a => a.toAttachmentData());\n        }\n        if (this.passwordHistory != null) {\n            c.passwordHistory = this.passwordHistory.map(ph => ph.toPasswordHistoryData());\n        }\n        return c;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: 'navbar.component.html',\n})\nexport class NavbarComponent implements OnInit {\n    selfHosted = false;\n    name: string;\n    email: string;\n    providers: Provider[] = [];\n\n    constructor(private messagingService: MessagingService, private platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService, private userService: UserService, private syncService: SyncService) {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.name = await this.tokenService.getName();\n        this.email = await this.tokenService.getEmail();\n        if (this.name == null || this.name.trim() === '') {\n            this.name = this.email;\n        }\n\n        // Ensure provides are loaded\n        if (await this.syncService.getLastSync() == null) {\n            await this.syncService.fullSync(false);\n        }\n        this.providers = await this.userService.getAllProviders();\n    }\n\n    lock() {\n        this.messagingService.send('lockVault');\n    }\n\n    logOut() {\n        this.messagingService.send('logout');\n    }\n}\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{'nav-background-alt': selfHosted}\"> <div class=\"container\"> <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{'pageTitle' | i18n : 'Bitwarden'}}\"> <i class=\"fa fa-shield\" aria-hidden=\"true\"></i> </a> <div class=\"collapse navbar-collapse\"> <ul class=\"navbar-nav\"> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/vault\">{{'myVault' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/sends\">{{'send' | i18n}}</a> </li> <ng-container *ngIf=\"providers.length >= 1\"> <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\"> <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{'provider' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\"> <a class=\"nav-link\" routerLink=\"/providers\">{{'provider' | i18n}}</a> </li> </ng-container> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/tools\">{{'tools' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/settings\">{{'settings' | i18n}}</a> </li> </ul> </div> <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\"> <li class=\"nav-item dropdown\"> <a class=\"nav-item nav-link dropdown-toggle\" href=\"#\" id=\"nav-profile\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"fa fa-user-circle fa-lg\" aria-hidden=\"true\"></i> </a> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"nav-profile\"> <div class=\"dropdown-item-text d-flex align-items-center\" *ngIf=\"name\" appStopProp> <app-avatar [data]=\"name\" [email]=\"email\" size=\"25\" fontSize=\"14\" [circle]=\"true\"></app-avatar> <div class=\"ml-2 overflow-hidden\"> <span>{{'loggedInAs' | i18n}}</span> <small class=\"text-muted\">{{name}}</small> </div> </div> <div class=\"dropdown-divider\"></div> <a class=\"dropdown-item\" href=\"#\" routerLink=\"/settings/account\"> <i class=\"fa fa-fw fa-user\" aria-hidden=\"true\"></i> {{'myAccount' | i18n}} </a> <a class=\"dropdown-item\" href=\"https://help.bitwarden.com\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-fw fa-question-circle\" aria-hidden=\"true\"></i> {{'getHelp' | i18n}} </a> <a class=\"dropdown-item\" href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-fw fa-download\" aria-hidden=\"true\"></i> {{'getApps' | i18n}} </a> <div class=\"dropdown-divider\"></div> <button type=\"button\" class=\"dropdown-item\" (click)=\"lock()\"> <i class=\"fa fa-fw fa-lock\" aria-hidden=\"true\"></i> {{'lockNow' | i18n}} </button> <button type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\"> <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i> {{'logOut' | i18n}} </button> </div> </li> </ul> </div> </nav> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: 'footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = await this.platformUtilsService.getApplicationVersion();\n    }\n}\n","<div class=\"container footer text-muted\"> <div class=\"row\"> <div class=\"col\"> &copy; {{year}}, Bitwarden Inc. </div> <div class=\"col text-center\"></div> <div class=\"col text-right\"> {{'versionNumber' | i18n : version}} </div> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\nimport { OrganizationCreateRequest } from 'jslib-common/models/request/organizationCreateRequest';\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUpgradeRequest } from 'jslib-common/models/request/organizationUpgradeRequest';\nimport { ProviderOrganizationCreateRequest } from 'jslib-common/models/request/provider/providerOrganizationCreateRequest';\n\nimport { PlanResponse } from 'jslib-common/models/response/planResponse';\n\n@Component({\n    selector: 'app-organization-plans',\n    templateUrl: 'organization-plans.component.html',\n})\nexport class OrganizationPlansComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n    @Input() organizationId: string;\n    @Input() showFree = true;\n    @Input() showCancel = false;\n    @Input() product: ProductType = ProductType.Free;\n    @Input() plan: PlanType = PlanType.Free;\n    @Input() providerId: string;\n    @Output() onSuccess = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    loading: boolean = true;\n    selfHosted: boolean = false;\n    ownedBusiness: boolean = false;\n    premiumAccessAddon: boolean = false;\n    additionalStorage: number = 0;\n    additionalSeats: number = 0;\n    name: string;\n    billingEmail: string;\n    clientOwnerEmail: string;\n    businessName: string;\n    productTypes = ProductType;\n    formPromise: Promise<any>;\n    singleOrgPolicyBlock: boolean = false;\n\n    plans: PlanResponse[];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService, private router: Router, private syncService: SyncService,\n        private policyService: PolicyService, private userService: UserService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        if (!this.selfHosted) {\n            const plans = await this.apiService.getPlans();\n            this.plans = plans.data;\n            if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n                this.ownedBusiness = true;\n            }\n        }\n\n        if (this.providerId) {\n            this.ownedBusiness = true;\n            this.changedOwnedBusiness();\n        }\n\n        this.loading = false;\n    }\n\n    get createOrganization() {\n        return this.organizationId == null;\n    }\n\n    get selectedPlan() {\n        return this.plans.find(plan => plan.type === this.plan);\n    }\n\n    get selectedPlanInterval() {\n        return this.selectedPlan.isAnnual\n            ? 'year'\n            : 'month';\n    }\n\n    get selectableProducts() {\n        let validPlans = this.plans.filter(plan => plan.type !== PlanType.Custom);\n\n        if (this.ownedBusiness) {\n            validPlans = validPlans.filter(plan => plan.canBeUsedByBusiness);\n        }\n\n        if (!this.showFree) {\n            validPlans = validPlans.filter(plan => plan.product !== ProductType.Free);\n        }\n\n        validPlans = validPlans\n            .filter(plan => !plan.legacyYear\n                && !plan.disabled\n                && (plan.isAnnual || plan.product === this.productTypes.Free));\n\n        return validPlans;\n    }\n\n    get selectablePlans() {\n        return this.plans.filter(plan => !plan.legacyYear && !plan.disabled && plan.product === this.product);\n    }\n\n    additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n        if (!selectedPlan.isAnnual) {\n            return selectedPlan.additionalStoragePricePerGb;\n        }\n        return selectedPlan.additionalStoragePricePerGb / 12;\n    }\n\n    seatPriceMonthly(selectedPlan: PlanResponse) {\n        if (!selectedPlan.isAnnual) {\n            return selectedPlan.seatPrice;\n        }\n        return selectedPlan.seatPrice / 12;\n    }\n\n    additionalStorageTotal(plan: PlanResponse): number {\n        if (!plan.hasAdditionalStorageOption) {\n            return 0;\n        }\n\n        return plan.additionalStoragePricePerGb * Math.abs(this.additionalStorage || 0);\n    }\n\n    seatTotal(plan: PlanResponse): number {\n        if (!plan.hasAdditionalSeatsOption) {\n            return 0;\n        }\n\n        return plan.seatPrice * Math.abs(this.additionalSeats || 0);\n    }\n\n    get subtotal() {\n        let subTotal = this.selectedPlan.basePrice;\n        if (this.selectedPlan.hasAdditionalSeatsOption && this.additionalSeats) {\n            subTotal += this.seatTotal(this.selectedPlan);\n        }\n        if (this.selectedPlan.hasAdditionalStorageOption && this.additionalStorage) {\n            subTotal += this.additionalStorageTotal(this.selectedPlan);\n        }\n        if (this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon) {\n            subTotal += this.selectedPlan.premiumAccessOptionPrice;\n        }\n        return subTotal;\n    }\n\n    get freeTrial() {\n        return this.selectedPlan.trialPeriodDays != null;\n    }\n\n    get taxCharges() {\n        return this.taxComponent != null && this.taxComponent.taxRate != null ?\n            (this.taxComponent.taxRate / 100) * this.subtotal :\n            0;\n    }\n\n    get total() {\n        return (this.subtotal + this.taxCharges) || 0;\n    }\n\n    changedProduct() {\n        this.plan = this.selectablePlans[0].type;\n        if (!this.selectedPlan.hasPremiumAccessOption) {\n            this.premiumAccessAddon = false;\n        }\n        if (!this.selectedPlan.hasAdditionalStorageOption) {\n            this.additionalStorage = 0;\n        }\n        if (!this.selectedPlan.hasAdditionalSeatsOption) {\n            this.additionalSeats = 0;\n        } else if (!this.additionalSeats && !this.selectedPlan.baseSeats &&\n            this.selectedPlan.hasAdditionalSeatsOption) {\n            this.additionalSeats = 1;\n        }\n    }\n\n    changedOwnedBusiness() {\n        if (!this.ownedBusiness || this.selectedPlan.canBeUsedByBusiness) {\n            return;\n        }\n        this.product = ProductType.Teams;\n        this.plan = PlanType.TeamsAnnually;\n    }\n\n    changedCountry() {\n        this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== 'US';\n        // Bank Account payments are only available for US customers\n        if (this.paymentComponent.hideBank &&\n            this.paymentComponent.method === PaymentMethodType.BankAccount) {\n            this.paymentComponent.method = PaymentMethodType.Card;\n            this.paymentComponent.changeMethod();\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    async submit() {\n        this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n        if (this.singleOrgPolicyBlock) {\n            return;\n        }\n\n        try {\n            const doSubmit = async () => {\n                let orgId: string = null;\n                if (this.createOrganization) {\n                    const shareKey = await this.cryptoService.makeShareKey();\n                    const key = shareKey[0].encryptedString;\n                    const collection = await this.cryptoService.encrypt(\n                        this.i18nService.t('defaultCollection'), shareKey[1]);\n                    const collectionCt = collection.encryptedString;\n                    const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n                    if (this.selfHosted) {\n                        orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n                    } else {\n                        orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n                    }\n\n                    this.toasterService.popAsync('success', this.i18nService.t('organizationCreated'), this.i18nService.t('organizationReadyToGo'));\n                } else {\n                    orgId = await this.updateOrganization(orgId);\n                    this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpgraded'));\n                }\n\n                await this.apiService.refreshIdentityToken();\n                await this.syncService.fullSync(true);\n                this.router.navigate(['/organizations/' + orgId]);\n            };\n\n            this.formPromise = doSubmit();\n            await this.formPromise;\n            this.onSuccess.emit();\n        } catch { }\n    }\n\n    private async userHasBlockingSingleOrgPolicy() {\n        return this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n    }\n\n    private async updateOrganization(orgId: string) {\n        const request = new OrganizationUpgradeRequest();\n        request.businessName = this.ownedBusiness ? this.businessName : null;\n        request.additionalSeats = this.additionalSeats;\n        request.additionalStorageGb = this.additionalStorage;\n        request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon;\n        request.planType = this.selectedPlan.type;\n        request.billingAddressCountry = this.taxComponent.taxInfo.country;\n        request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n        // Retrieve org info to backfill pub/priv key if necessary\n        const org = await this.userService.getOrganization(this.organizationId);\n        if (!org.hasPublicAndPrivateKeys) {\n            const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n            request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        }\n\n        const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n        if (!result.success && result.paymentIntentClientSecret != null) {\n            await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n        }\n        return this.organizationId;\n    }\n\n    private async createCloudHosted(key: string, collectionCt: string, orgKeys: [string, EncString], orgKey: SymmetricCryptoKey) {\n        const request = new OrganizationCreateRequest();\n        request.key = key;\n        request.collectionName = collectionCt;\n        request.name = this.name;\n        request.billingEmail = this.billingEmail;\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n        if (this.selectedPlan.type === PlanType.Free) {\n            request.planType = PlanType.Free;\n        } else {\n            const tokenResult = await this.paymentComponent.createPaymentToken();\n\n            request.paymentToken = tokenResult[0];\n            request.paymentMethodType = tokenResult[1];\n            request.businessName = this.ownedBusiness ? this.businessName : null;\n            request.additionalSeats = this.additionalSeats;\n            request.additionalStorageGb = this.additionalStorage;\n            request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption &&\n                this.premiumAccessAddon;\n            request.planType = this.selectedPlan.type;\n            request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n            request.billingAddressCountry = this.taxComponent.taxInfo.country;\n            if (this.taxComponent.taxInfo.includeTaxId) {\n                request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n                request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n                request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n                request.billingAddressCity = this.taxComponent.taxInfo.city;\n                request.billingAddressState = this.taxComponent.taxInfo.state;\n            }\n        }\n\n        if (this.providerId) {\n            const providerRequest = new ProviderOrganizationCreateRequest(this.clientOwnerEmail, request);\n            const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n            providerRequest.organizationCreateRequest.key = (await this.cryptoService.encrypt(orgKey.key, providerKey)).encryptedString;\n            const orgId = (await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)).organizationId;\n\n            return orgId;\n        } else {\n            return (await this.apiService.postOrganization(request)).id;\n        }\n    }\n\n    private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            throw new Error(this.i18nService.t('selectFile'));\n        }\n\n        const fd = new FormData();\n        fd.append('license', files[0]);\n        fd.append('key', key);\n        fd.append('collectionName', collectionCt);\n        const response = await this.apiService.postOrganizationLicense(fd);\n        const orgId = response.id;\n\n        // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        await this.apiService.postOrganizationKeys(orgId, request);\n\n        return orgId;\n    }\n}\n","<ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"createOrganization && selfHosted\"> <p>{{'uploadLicenseFileOrg' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_organization_license.json'}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> </ng-container> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!loading && !selfHosted && this.plans\"> <h2 class=\"mt-5\">{{'generalInformation' | i18n}}</h2> <div class=\"row\" *ngIf=\"createOrganization\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'organizationName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group col-6\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"billingEmail\" required> </div> <div class=\"form-group col-6\" *ngIf=\"!!providerId\"> <label for=\"email\">{{'clientOwnerEmail' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"clientOwnerEmail\" required> <small class=\"text-muted\">{{'clientOwnerDesc' | i18n : '20'}}</small> </div> </div> <div *ngIf=\"!providerId\"> <div class=\"form-group form-check\"> <input id=\"ownedBusiness\" class=\"form-check-input\" type=\"checkbox\" name=\"OwnedBusiness\" [(ngModel)]=\"ownedBusiness\" (change)=\"changedOwnedBusiness()\"> <label for=\"ownedBusiness\" class=\"form-check-label\">{{'accountOwnedBusiness' | i18n}}</label> </div> <div class=\"row\" *ngIf=\"ownedBusiness\"> <div class=\"form-group col-6\"> <label for=\"businessName\">{{'businessName' | i18n}}</label> <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"businessName\"> </div> </div> </div> <h2 class=\"mt-5\">{{'chooseYourPlan' | i18n}}</h2> <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"product\" id=\"product{{selectableProduct.product}}\" [value]=\"selectableProduct.product\" [(ngModel)]=\"product\" (change)=\"changedProduct()\"> <label class=\"form-check-label\" for=\"product{{selectableProduct.product}}\"> {{ selectableProduct.nameLocalizationKey | i18n}} <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n : '1'}}</small> <ng-container *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"> <small>• {{'includeAllTeamsFeatures' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSso\">• {{'includeSsoAuthentication' | i18n}}</small> <small *ngIf=\"selectableProduct.hasPolicies\">• {{'includeEnterprisePolicies' | i18n}}</small> <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\">• {{'xDayFreeTrial' | i18n : selectableProduct.trialPeriodDays }} </small> </ng-container> <ng-template #fullFeatureList> <small *ngIf=\"selectableProduct.product == productTypes.Free\">• {{'limitedUsers' | i18n : selectableProduct.maxUsers }}</small> <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\">• {{'addShareLimitedUsers' | i18n : selectableProduct.maxUsers}}</small> <small *ngIf=\"!selectableProduct.maxUsers\">• {{'addShareUnlimitedUsers' | i18n}}</small> <small *ngIf=\"selectableProduct.maxCollections\">• {{'limitedCollections' | i18n : selectableProduct.maxCollections }}</small> <small *ngIf=\"selectableProduct.maxAdditionalSeats\">• {{'addShareLimitedUsers' | i18n : selectableProduct.maxAdditionalSeats }}</small> <small *ngIf=\"!selectableProduct.maxCollections\">• {{'createUnlimitedCollections' | i18n}}</small> <small *ngIf=\"selectableProduct.baseStorageGb\">• {{'gbEncryptedFileStorage' | i18n : selectableProduct.baseStorageGb + 'GB'}}</small> <small *ngIf=\"selectableProduct.hasGroups\">• {{'controlAccessWithGroups' | i18n}}</small> <small *ngIf=\"selectableProduct.hasApi\">• {{'trackAuditLogs' | i18n}}</small> <small *ngIf=\"selectableProduct.hasDirectory\">• {{'syncUsersFromDirectory' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small> <small *ngIf=\"selectableProduct.usersGetPremium\">• {{'usersGetPremium' | i18n}}</small> <small *ngIf=\"selectableProduct.product != productTypes.Free\">• {{'priorityCustomerSupport' | i18n}}</small> <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\">• {{'xDayFreeTrial' | i18n : selectableProduct.trialPeriodDays }} </small> </ng-template> <span *ngIf=\"selectableProduct.product != productTypes.Free\"> <ng-container *ngIf=\"selectableProduct.basePrice\"> {{selectableProduct.basePrice / 12 | currency:'$'}} /{{'month' | i18n}}, {{'includesXUsers' | i18n : selectableProduct.baseSeats}} <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\"> {{('additionalUsers' | i18n).toLowerCase()}} {{selectableProduct.seatPrice / 12 | currency:'$'}} /{{'month' | i18n}} </ng-container> </ng-container> </span> <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\"> {{'costPerUser' | i18n : (selectableProduct.seatPrice / 12 | currency:'$')}} /{{'month' | i18n}} </span> <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{'freeForever' | i18n}}</span> </label> </div> <div *ngIf=\"product !== productTypes.Free\"> <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\"> <h2 class=\"mt-5\">{{'users' | i18n}}</h2> <div class=\"row\"> <div class=\"col-6\"> <label for=\"additionalSeats\">{{'userSeats' | i18n}}</label> <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\" [(ngModel)]=\"additionalSeats\" min=\"1\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\" required> <small class=\"text-muted form-text\">{{'userSeatsHowManyDesc' | i18n}}</small> </div> </div> </ng-container> <h2 class=\"mt-5\">{{'addons' | i18n}}</h2> <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\"> <div class=\"form-group col-6\"> <label for=\"additionalSeats\">{{'additionalUserSeats' | i18n}}</label> <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\" [(ngModel)]=\"additionalSeats\" min=\"0\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'userSeatsAdditionalDesc' | i18n : selectedPlan.baseSeats : (seatPriceMonthly(selectedPlan) | currency:'$')}}</small> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label> <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\" [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\" placeholder=\"{{'additionalStorageGbDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (additionalStoragePriceMonthly(selectedPlan) | currency:'$') : ('month' | i18n)}}</small> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\"> <div class=\"form-check\"> <input id=\"premiumAccess\" class=\"form-check-input\" type=\"checkbox\" name=\"PremiumAccessAddon\" [(ngModel)]=\"premiumAccessAddon\"> <label for=\"premiumAccess\" class=\"form-check-label bold\">{{'premiumAccess' | i18n}}</label> </div> <small class=\"text-muted form-text\">{{'premiumAccessDesc' | i18n : (3.33 | currency:'$') : ('month' | i18n)}}</small> </div> </div> <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2> <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\"> <input class=\"form-check-input\" type=\"radio\" name=\"BillingInterval\" id=\"interval{{selectablePlan.type}}\" [value]=\"selectablePlan.type\" [(ngModel)]=\"plan\"> <label class=\"form-check-label\" for=\"interval{{selectablePlan.type}}\"> <ng-container *ngIf=\"selectablePlan.isAnnual\"> {{'annually' | i18n}} <small *ngIf=\"selectablePlan.basePrice\"> {{'basePrice' | i18n}}: {{ selectablePlan.basePrice / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{selectablePlan.basePrice | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\"> <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span> <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span> {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan) | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\"> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times; {{selectablePlan.additionalStoragePricePerGb / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\"> {{'premiumAccess' | i18n}}: {{selectablePlan.premiumAccessOptionCost / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{40 | currency:'$'}} /{{'year' | i18n}} </small> </ng-container> <ng-container *ngIf=\"!selectablePlan.isAnnual\"> {{'monthly' | i18n}} <small *ngIf=\"selectablePlan.basePrice\"> {{'basePrice' | i18n}}: {{selectablePlan.basePrice | currency:'$'}} {{'monthAbbr' | i18n}} = {{selectablePlan.basePrice | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\"> <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span> <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span> {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice | currency:'$'}} {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan) | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\"> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times; {{selectablePlan.additionalStoragePricePerGb | currency:'$'}} {{'monthAbbr' | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\"> {{'premiumAccess' | i18n}}: {{selectablePlan.premiumAccessOptionCost | currency:'$'}} {{'monthAbbr' | i18n}} = {{40 | currency:'$'}} /{{'month' | i18n}} </small> </ng-container> </label> </div> <hr class=\"my-3\"> <h2 class=\"spaced-header mb-4\">{{ (createOrganization ? 'paymentInformation' : 'billingInformation') | i18n}} </h2> <small class=\"text-muted font-italic mb-3 d-block\" *ngIf=\"freeTrial && createOrganization; else paymentChargedImmediately\"> {{'paymentChargedWithTrial' | i18n}} </small> <ng-template #paymentChargedImmediately> <small class=\"text-muted font-italic mb-3 d-block\"> {{'paymentCharged' | i18n : (selectedPlanInterval | i18n) }} </small> </ng-template> <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment> <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info> <div id=\"price\" class=\"my-4\"> <div class=\"text-muted text-sm\"> {{ 'planPrice' | i18n }}: {{ subtotal | currency: 'USD $' }} <br/> <ng-container> {{ 'estimatedTax' | i18n }}: {{ taxCharges | currency: 'USD $' }} </ng-container> </div> <hr class=\"my-1 col-3 ml-0\"> <p class=\"text-lg\"><strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}}/{{selectedPlanInterval | i18n}}</p> </div> <ng-container *ngIf=\"!createOrganization\"> <app-payment [showMethods]=\"false\"></app-payment> </ng-container> </div> <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\"> <app-callout [type]=\"'error'\">{{'singleOrgBlockCreateMessage' | i18n}}</app-callout> </div> <div class=\"mt-4\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\"> {{'cancel' | i18n}} </button> </div> </form> ","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { LoginUriApi } from '../api/loginUriApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nimport { AttachmentRequest } from './attachmentRequest';\nimport { PasswordHistoryRequest } from './passwordHistoryRequest';\n\nexport class CipherRequest {\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    name: string;\n    notes: string;\n    favorite: boolean;\n    login: LoginApi;\n    secureNote: SecureNoteApi;\n    card: CardApi;\n    identity: IdentityApi;\n    fields: FieldApi[];\n    passwordHistory: PasswordHistoryRequest[];\n    // Deprecated, remove at some point and rename attachments2 to attachments\n    attachments: { [id: string]: string; };\n    attachments2: { [id: string]: AttachmentRequest; };\n    lastKnownRevisionDate: Date;\n    reprompt: CipherRepromptType;\n\n    constructor(cipher: Cipher) {\n        this.type = cipher.type;\n        this.folderId = cipher.folderId;\n        this.organizationId = cipher.organizationId;\n        this.name = cipher.name ? cipher.name.encryptedString : null;\n        this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n        this.favorite = cipher.favorite;\n        this.lastKnownRevisionDate = cipher.revisionDate;\n        this.reprompt = cipher.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginApi();\n                this.login.uris = null;\n                this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n                this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n                this.login.passwordRevisionDate = cipher.login.passwordRevisionDate != null ?\n                    cipher.login.passwordRevisionDate.toISOString() : null;\n                this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n                this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n                if (cipher.login.uris != null) {\n                    this.login.uris = cipher.login.uris.map(u => {\n                        const uri = new LoginUriApi();\n                        uri.uri = u.uri != null ? u.uri.encryptedString : null;\n                        uri.match = u.match != null ? u.match : null;\n                        return uri;\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteApi();\n                this.secureNote.type = cipher.secureNote.type;\n                break;\n            case CipherType.Card:\n                this.card = new CardApi();\n                this.card.cardholderName = cipher.card.cardholderName != null ?\n                    cipher.card.cardholderName.encryptedString : null;\n                this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n                this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n                this.card.expMonth = cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n                this.card.expYear = cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n                this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityApi();\n                this.identity.title = cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n                this.identity.firstName = cipher.identity.firstName != null ?\n                    cipher.identity.firstName.encryptedString : null;\n                this.identity.middleName = cipher.identity.middleName != null ?\n                    cipher.identity.middleName.encryptedString : null;\n                this.identity.lastName = cipher.identity.lastName != null ?\n                    cipher.identity.lastName.encryptedString : null;\n                this.identity.address1 = cipher.identity.address1 != null ?\n                    cipher.identity.address1.encryptedString : null;\n                this.identity.address2 = cipher.identity.address2 != null ?\n                    cipher.identity.address2.encryptedString : null;\n                this.identity.address3 = cipher.identity.address3 != null ?\n                    cipher.identity.address3.encryptedString : null;\n                this.identity.city = cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n                this.identity.state = cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n                this.identity.postalCode = cipher.identity.postalCode != null ?\n                    cipher.identity.postalCode.encryptedString : null;\n                this.identity.country = cipher.identity.country != null ?\n                    cipher.identity.country.encryptedString : null;\n                this.identity.company = cipher.identity.company != null ?\n                    cipher.identity.company.encryptedString : null;\n                this.identity.email = cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n                this.identity.phone = cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n                this.identity.ssn = cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n                this.identity.username = cipher.identity.username != null ?\n                    cipher.identity.username.encryptedString : null;\n                this.identity.passportNumber = cipher.identity.passportNumber != null ?\n                    cipher.identity.passportNumber.encryptedString : null;\n                this.identity.licenseNumber = cipher.identity.licenseNumber != null ?\n                    cipher.identity.licenseNumber.encryptedString : null;\n                break;\n            default:\n                break;\n        }\n\n        if (cipher.fields != null) {\n            this.fields = cipher.fields.map(f => {\n                const field = new FieldApi();\n                field.type = f.type;\n                field.name = f.name ? f.name.encryptedString : null;\n                field.value = f.value ? f.value.encryptedString : null;\n                return field;\n            });\n        }\n\n        if (cipher.passwordHistory != null) {\n            this.passwordHistory = [];\n            cipher.passwordHistory.forEach(ph => {\n                this.passwordHistory.push({\n                    lastUsedDate: ph.lastUsedDate,\n                    password: ph.password ? ph.password.encryptedString : null,\n                });\n            });\n        }\n\n        if (cipher.attachments != null) {\n            this.attachments = {};\n            this.attachments2 = {};\n            cipher.attachments.forEach(attachment => {\n                const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n                this.attachments[attachment.id] = fileName;\n                const attachmentRequest = new AttachmentRequest();\n                attachmentRequest.fileName = fileName;\n                if (attachment.key != null) {\n                    attachmentRequest.key = attachment.key.encryptedString;\n                }\n                this.attachments2[attachment.id] = attachmentRequest;\n            });\n        }\n    }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nexport class ModalRef {\n\n    onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n    onClose: Observable<any>;           // Initiated close.\n    onClosed: Observable<any>;          // Modal was closed (Remove element from DOM)\n    onShow: Observable<any>;            // Start showing modal\n    onShown: Observable<any>;           // Modal is fully visible\n\n    private readonly _onCreated = new Subject<HTMLElement>();\n    private readonly _onClose = new Subject<any>();\n    private readonly _onClosed = new Subject<any>();\n    private readonly _onShow = new Subject<any>();\n    private readonly _onShown = new Subject<any>();\n    private lastResult: any;\n\n    constructor() {\n        this.onCreated = this._onCreated.asObservable();\n        this.onClose = this._onClose.asObservable();\n        this.onClosed = this._onClosed.asObservable();\n        this.onShow = this._onShow.asObservable();\n        this.onShown = this._onShow.asObservable();\n    }\n\n    show() {\n        this._onShow.next();\n    }\n\n    shown() {\n        this._onShown.next();\n    }\n\n    close(result?: any) {\n        this.lastResult = result;\n        this._onClose.next(result);\n    }\n\n    closed() {\n        this._onClosed.next(this.lastResult);\n    }\n\n    created(el: HTMLElement) {\n        this._onCreated.next(el);\n    }\n\n    onClosedPromise(): Promise<any> {\n        return this.onClosed.pipe(first()).toPromise();\n    }\n}\n","export enum Permissions {\n    AccessEventLogs,\n    AccessImportExport,\n    AccessReports,\n    /**\n     * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n     * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n     */\n    ManageAllCollections,\n    /**\n     * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n     * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n     */\n    ManageAssignedCollections,\n    ManageGroups,\n    ManageOrganization ,\n    ManagePolicies,\n    ManageProvider,\n    ManageUsers,\n    ManageUsersPassword,\n    CreateNewCollections,\n    EditAnyCollection,\n    DeleteAnyCollection,\n    EditAssignedCollections,\n    DeleteAssignedCollections,\n    ManageSso,\n}\n","import { Injectable } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { ProviderAddOrganizationRequest } from 'jslib-common/models/request/provider/providerAddOrganizationRequest';\n\n@Injectable()\nexport class ProviderService {\n    constructor(private cryptoService: CryptoService, private syncService: SyncService, private apiService: ApiService) {}\n\n    async addOrganizationToProvider(providerId: string, organizationId: string) {\n        const orgKey = await this.cryptoService.getOrgKey(organizationId);\n        const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n        const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n        const request = new ProviderAddOrganizationRequest();\n        request.organizationId = organizationId;\n        request.key = encryptedOrgKey.encryptedString;\n\n        const response = await this.apiService.postProviderAddOrganization(providerId, request);\n        await this.syncService.fullSync(true);\n        return response;\n    }\n\n    async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n        await this.apiService.deleteProviderOrganization(providerId, organizationId);\n        await this.syncService.fullSync(true);\n    }\n}\n","export enum PlanType {\n    Free = 0,\n    FamiliesAnnually2019 = 1,\n    TeamsMonthly2019 = 2,\n    TeamsAnnually2019 = 3,\n    EnterpriseMonthly2019 = 4,\n    EnterpriseAnnually2019 = 5,\n    Custom = 6,\n    FamiliesAnnually = 7,\n    TeamsMonthly = 8,\n    TeamsAnnually = 9,\n    EnterpriseMonthly = 10,\n    EnterpriseAnnually = 11,\n}\n","export enum PaymentMethodType {\n    Card = 0,\n    BankAccount = 1,\n    PayPal = 2,\n    BitPay = 3,\n    Credit = 4,\n    WireTransfer = 5,\n    AppleInApp = 6,\n    GoogleInApp = 7,\n    Check = 8,\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n    ActivatedRoute,\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Injectable()\nexport class RouterService {\n    private previousUrl: string = undefined;\n    private currentUrl: string = undefined;\n\n    constructor(private router: Router, private activatedRoute: ActivatedRoute,\n        private titleService: Title, i18nService: I18nService) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n\n                let title = i18nService.t('pageTitle', 'Bitwarden');\n                let titleId: string = null;\n                let rawTitle: string = null;\n                let child = this.activatedRoute.firstChild;\n                while (child != null) {\n                    if (child.firstChild != null) {\n                        child = child.firstChild;\n                    } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\n                        rawTitle = child.snapshot.data.title;\n                        break;\n                    } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\n                        titleId = child.snapshot.data.titleId;\n                        break;\n                    } else {\n                        titleId = null;\n                        rawTitle = null;\n                        break;\n                    }\n                }\n\n                if (titleId != null || rawTitle != null) {\n                    const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n                    if (newTitle != null && newTitle !== '') {\n                        title = (newTitle + ' | ' + title);\n                    }\n                }\n                this.titleService.setTitle(title);\n            }\n        });\n    }\n\n    getPreviousUrl() {\n        return this.previousUrl;\n    }\n\n    setPreviousUrl(url: string) {\n        this.previousUrl = url;\n    }\n}\n","export enum KdfType {\n    PBKDF2_SHA256 = 0,\n}\n","export enum OrganizationUserType {\n    Owner = 0,\n    Admin = 1,\n    User = 2,\n    Manager = 3,\n    Custom = 4,\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { Utils } from '../../misc/utils';\n\nexport class SymmetricCryptoKey {\n    key: ArrayBuffer;\n    encKey?: ArrayBuffer;\n    macKey?: ArrayBuffer;\n    encType: EncryptionType;\n\n    keyB64: string;\n    encKeyB64: string;\n    macKeyB64: string;\n\n    meta: any;\n\n    constructor(key: ArrayBuffer, encType?: EncryptionType) {\n        if (key == null) {\n            throw new Error('Must provide key');\n        }\n\n        if (encType == null) {\n            if (key.byteLength === 32) {\n                encType = EncryptionType.AesCbc256_B64;\n            } else if (key.byteLength === 64) {\n                encType = EncryptionType.AesCbc256_HmacSha256_B64;\n            } else {\n                throw new Error('Unable to determine encType.');\n            }\n        }\n\n        this.key = key;\n        this.encType = encType;\n\n        if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n            this.encKey = key;\n            this.macKey = null;\n        } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n            this.encKey = key.slice(0, 16);\n            this.macKey = key.slice(16, 32);\n        } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n            this.encKey = key.slice(0, 32);\n            this.macKey = key.slice(32, 64);\n        } else {\n            throw new Error('Unsupported encType/key length.');\n        }\n\n        if (this.key != null) {\n            this.keyB64 = Utils.fromBufferToB64(this.key);\n        }\n        if (this.encKey != null) {\n            this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n        }\n        if (this.macKey != null) {\n            this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n        }\n    }\n}\n","import { BasePolicy } from '../organizations/policies/base-policy.component';\n\nexport class PolicyListService {\n    private policies: BasePolicy[] = [];\n\n    addPolicies(policies: BasePolicy[]) {\n        this.policies.push(...policies);\n    }\n\n    getPolicies(): BasePolicy[] {\n        return this.policies;\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { TwoFactorProviderRequest } from 'jslib-common/models/request/twoFactorProviderRequest';\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n    @Output() onUpdated = new EventEmitter<boolean>();\n\n    type: TwoFactorProviderType;\n    organizationId: string;\n    twoFactorProviderType = TwoFactorProviderType;\n    enabled = false;\n    authed = false;\n\n    protected masterPasswordHash: string;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected platformUtilsService: PlatformUtilsService) { }\n\n    protected auth(authResponse: any) {\n        this.masterPasswordHash = authResponse.masterPasswordHash;\n        this.authed = true;\n    }\n\n    protected async enable(enableFunction: () => Promise<void>) {\n        try {\n            await enableFunction();\n            this.onUpdated.emit(true);\n        } catch { }\n    }\n\n    protected async disable(promise: Promise<any>) {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('twoStepDisableDesc'),\n            this.i18nService.t('disable'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorProviderRequest();\n            request.masterPasswordHash = this.masterPasswordHash;\n            request.type = this.type;\n            if (this.organizationId != null) {\n                promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n            } else {\n                promise = this.apiService.putTwoFactorDisable(request);\n            }\n            await promise;\n            this.enabled = false;\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepDisabled'));\n            this.onUpdated.emit(false);\n        } catch { }\n    }\n}\n","import {\n    Directive,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { AddEditComponent as OrgAddEditComponent } from '../organizations/vault/add-edit.component';\nimport { AddEditComponent } from '../vault/add-edit.component';\n\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\n@Directive()\nexport class CipherReportComponent {\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n\n    loading = false;\n    hasLoaded = false;\n    ciphers: CipherView[] = [];\n    organization: Organization;\n\n    constructor(private modalService: ModalService, protected userService: UserService,\n        protected messagingService: MessagingService, protected passwordRepromptService: PasswordRepromptService,\n        public requiresPaid: boolean) { }\n\n    async load() {\n        this.loading = true;\n        await this.setCiphers();\n        this.loading = false;\n        this.hasLoaded = true;\n    }\n\n    async selectCipher(cipher: CipherView) {\n        if (!await this.repromptCipher(cipher)) {\n            return;\n        }\n\n        const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n        const [modal, childComponent] = await this.modalService.openViewRef(type, this.cipherAddEditModalRef, (comp: OrgAddEditComponent | AddEditComponent) => {\n            if (this.organization != null) {\n                (comp as OrgAddEditComponent).organization = this.organization;\n                comp.organizationId = this.organization.id;\n            }\n\n            comp.cipherId = cipher == null ? null : cipher.id;\n            comp.onSavedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.load();\n            });\n            comp.onDeletedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.load();\n            });\n            comp.onRestoredCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.load();\n            });\n\n        });\n\n        return childComponent;\n    }\n\n    protected async checkAccess(): Promise<boolean> {\n        if (this.organization != null) {\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            if (this.requiresPaid && !this.organization.useTotp) {\n                this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n                return false;\n            }\n        } else {\n            const accessPremium = await this.userService.canAccessPremium();\n            if (this.requiresPaid && !accessPremium) {\n                this.messagingService.send('premiumRequired');\n                this.loading = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    protected async setCiphers() {\n        this.ciphers = [];\n    }\n\n    protected async repromptCipher(c: CipherView) {\n        return c.reprompt === CipherRepromptType.None || await this.passwordRepromptService.showPasswordPrompt();\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { View } from './view';\n\nimport { Field } from '../domain/field';\n\nexport class FieldView implements View {\n    name: string = null;\n    value: string = null;\n    type: FieldType = null;\n    newField: boolean = false; // Marks if the field is new and hasn't been saved\n    showValue: boolean = false;\n\n    constructor(f?: Field) {\n        if (!f) {\n            return;\n        }\n\n        this.type = f.type;\n    }\n\n    get maskedValue(): string {\n        return this.value != null ? '••••••••' : null;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib-angular/components/add-edit.component';\nimport { LoginUriView } from 'jslib-common/models/view/loginUriView';\n\n@Component({\n    selector: 'app-vault-add-edit',\n    templateUrl: 'add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    canAccessPremium: boolean;\n    totpCode: string;\n    totpCodeFormatted: string;\n    totpDash: number;\n    totpSec: number;\n    totpLow: boolean;\n    showRevisionDate = false;\n    hasPasswordHistory = false;\n    viewingPasswordHistory = false;\n    viewOnly = false;\n\n    protected totpInterval: number;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        protected totpService: TotpService, protected passwordGenerationService: PasswordGenerationService,\n        protected messagingService: MessagingService, eventService: EventService,\n        protected policyService: PolicyService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, messagingService, eventService, policyService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        await this.load();\n        this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n        this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n        this.cleanUp();\n\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        if (this.cipher.type === CipherType.Login && this.cipher.login.totp &&\n            (this.cipher.organizationUseTotp || this.canAccessPremium)) {\n            await this.totpUpdateCode();\n            const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n            await this.totpTick(interval);\n\n            this.totpInterval = window.setInterval(async () => {\n                await this.totpTick(interval);\n            }, 1000);\n        }\n    }\n\n    toggleFavorite() {\n        this.cipher.favorite = !this.cipher.favorite;\n    }\n\n    launch(uri: LoginUriView) {\n        if (!uri.canLaunch) {\n            return;\n        }\n\n        this.platformUtilsService.launchUri(uri.launchUri);\n    }\n\n    copy(value: string, typeI18nKey: string, aType: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (this.editMode) {\n            if (typeI18nKey === 'password') {\n                this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n            } else if (typeI18nKey === 'securityCode') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n            } else if (aType === 'H_Field') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n            }\n        }\n    }\n\n    async generatePassword(): Promise<boolean> {\n        const confirmed = await super.generatePassword();\n        if (confirmed) {\n            const options = (await this.passwordGenerationService.getOptions())[0];\n            this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n        }\n        return confirmed;\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.cipher.organizationId });\n    }\n\n    viewHistory() {\n        this.viewingPasswordHistory = !this.viewingPasswordHistory;\n    }\n\n    protected cleanUp() {\n        if (this.totpInterval) {\n            window.clearInterval(this.totpInterval);\n        }\n    }\n\n    protected async totpUpdateCode() {\n        if (this.cipher == null || this.cipher.type !== CipherType.Login || this.cipher.login.totp == null) {\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n            return;\n        }\n\n        this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n        if (this.totpCode != null) {\n            if (this.totpCode.length > 4) {\n                const half = Math.floor(this.totpCode.length / 2);\n                this.totpCodeFormatted = this.totpCode.substring(0, half) + ' ' + this.totpCode.substring(half);\n            } else {\n                this.totpCodeFormatted = this.totpCode;\n            }\n        } else {\n            this.totpCodeFormatted = null;\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n        }\n    }\n\n    protected allowOwnershipAssignment() {\n        return (!this.editMode || this.cloneMode) && this.ownershipOptions != null\n            && (this.ownershipOptions.length > 1 || !this.allowPersonal);\n    }\n\n    private async totpTick(intervalSeconds: number) {\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const mod = epoch % intervalSeconds;\n\n        this.totpSec = intervalSeconds - mod;\n        this.totpDash = +(Math.round((((78.6 / intervalSeconds) * mod) + 'e+2') as any) + 'e-2');\n        this.totpLow = this.totpSec <= 7;\n        if (mod === 0) {\n            await this.totpUpdateCode();\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"cipher\"> <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\"> {{'personalOwnershipPolicyInEffect' | i18n}} </app-callout> <div class=\"row\" *ngIf=\"!editMode && !viewOnly\"> <div class=\"col-6 form-group\"> <label for=\"type\">{{'whatTypeOfItem' | i18n}}</label> <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\" class=\"form-control\" [disabled]=\"cipher.isDeleted\" appAutofocus> <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" required [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\" *ngIf=\"!organization\"> <label for=\"folder\">{{'folder' | i18n}}</label> <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\" class=\"form-control\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option> </select> </div> </div> <ng-container *ngIf=\"cipher.type === cipherType.Login\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"loginUsername\">{{'username' | i18n}}</label> <div class=\"input-group\"> <input id=\"loginUsername\" class=\"form-control\" type=\"text\" name=\"Login.Username\" [(ngModel)]=\"cipher.login.username\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyUsername' | i18n}}\" (click)=\"copy(cipher.login.username, 'username', 'Username')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col-6 form-group\"> <div class=\"d-flex\"> <label for=\"loginPassword\">{{'password' | i18n}}</label> <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <a href=\"#\" class=\"d-block mr-2 fa-icon-above-input\" appStopClick appA11yTitle=\"{{'generatePassword' | i18n}}\" (click)=\"generatePassword()\" *ngIf=\"cipher.viewPassword\"> <i class=\"fa fa-lg fa-fw fa-refresh\" aria-hidden=\"true\"></i> </a> <a href=\"#\" class=\"d-block fa-icon-above-input\" #checkPasswordBtn appStopClick appA11yTitle=\"{{'checkPassword' | i18n}}\" (click)=\"checkPassword()\" [appApiAction]=\"checkPasswordPromise\"> <i class=\"fa fa-lg fa-fw fa-check-circle\" [hidden]=\"checkPasswordBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-lg fa-fw fa-spinner fa-spin\" aria-hidden=\"true\" [hidden]=\"!checkPasswordBtn.loading\" title=\"{{'loading' | i18n}}\"></i> </a> </div> </div> <div class=\"input-group\"> <input id=\"loginPassword\" class=\"form-control text-monospace\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Login.Password\" [(ngModel)]=\"cipher.login.password\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\" [disabled]=\"!cipher.viewPassword\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(cipher.login.password, 'password', 'Password')\" [disabled]=\"!cipher.viewPassword\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"loginTotp\">{{'authenticatorKeyTotp' | i18n}}</label> <input id=\"loginTotp\" type=\"{{cipher.viewPassword ? 'text' : 'password'}}\" name=\"Login.Totp\" class=\"form-control text-monospace\" [(ngModel)]=\"cipher.login.totp\" appInputVerbatim [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"> </div> <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{'low': totpLow}\"> <div *ngIf=\"!cipher.login.totp || !totpCode\"> <img src=\"images/totp-countdown.png\" id=\"totpImage\" title=\"{{'verificationCodeTotp' | i18n}}\" class=\"ml-2\"> <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"premiumRequired()\" *ngIf=\"!organization && !cipher.organizationId && !canAccessPremium\"> {{'premium' | i18n}} </a> <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"upgradeOrganization()\" *ngIf=\"(organization && !organization.useTotp) || (!organization && !canAccessPremium && cipher.organizationId && !cipher.organizationUseTotp)\"> {{'upgrade' | i18n}} </a> </div> <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\"> <span class=\"totp-countdown mr-3 ml-2\"> <span class=\"totp-sec\">{{totpSec}}</span> <svg> <g> <circle class=\"totp-circle inner\" r=\"12.6\" cy=\"16\" cx=\"16\" [ngStyle]=\"{'stroke-dashoffset.px': totpDash}\"></circle> <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle> </g> </svg> </span> <span class=\"totp-code mr-2\" title=\"{{'verificationCodeTotp' | i18n}}\">{{totpCodeFormatted}}</span> <button type=\"button\" class=\"btn btn-link\" appA11yTitle=\"{{'copyVerificationCode' | i18n}}\" (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"> <i class=\"fa fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <ng-container *ngIf=\"cipher.login.hasUris\"> <div class=\"row\" *ngFor=\"let u of cipher.login.uris; let i = index; trackBy:trackByFunction\"> <div class=\"col-7 form-group\"> <label for=\"loginUri{{i}}\">{{'uriPosition' | i18n : (i + 1)}}</label> <div class=\"input-group\"> <input class=\"form-control\" id=\"loginUri{{i}}\" type=\"text\" name=\"Login.Uris[{{i}}].Uri\" [(ngModel)]=\"u.uri\" [disabled]=\"cipher.isDeleted || viewOnly\" placeholder=\"{{'ex' | i18n}} https://google.com\" appInputVerbatim> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'launch' | i18n}}\" (click)=\"launch(u)\" [disabled]=\"!u.canLaunch\"> <i class=\"fa fa-lg fa-share\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyUri' | i18n}}\" (click)=\"copy(u.uri, 'uri', 'URI')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col-5 form-group\"> <div class=\"d-flex\"> <label for=\"loginUriMatch{{i}}\"> {{'matchDetection' | i18n}} </label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/uri-match-detection/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"d-flex\"> <select class=\"form-control overflow-hidden\" id=\"loginUriMatch{{i}}\" name=\"Login.Uris[{{i}}].Match\" [(ngModel)]=\"u.match\" (change)=\"loginUriMatchChanged(u)\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeUri(u)\" appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </ng-container> <a href=\"#\" appStopClick (click)=\"addUri()\" class=\"d-inline-block mb-3\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newUri' | i18n}} </a> </ng-container> <ng-container *ngIf=\"cipher.type === cipherType.Card\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardCardholderName\">{{'cardholderName' | i18n}}</label> <input id=\"cardCardholderName\" class=\"form-control\" type=\"text\" name=\"Card.CardCardholderName\" [(ngModel)]=\"cipher.card.cardholderName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"cardBrand\">{{'brand' | i18n}}</label> <select id=\"cardBrand\" class=\"form-control\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardNumber\">{{'number' | i18n}}</label> <div class=\"input-group\"> <input id=\"cardNumber\" class=\"form-control text-monospace\" type=\"{{showCardNumber ? 'text' : 'password'}}\" name=\"Card.Number\" [(ngModel)]=\"cipher.card.number\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardNumber()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showCardNumber, 'fa-eye-slash': showCardNumber}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyNumber' | i18n}}\" (click)=\"copy(cipher.card.number, 'number', 'Number')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col form-group\"> <label for=\"cardExpMonth\">{{'expirationMonth' | i18n}}</label> <select id=\"cardExpMonth\" class=\"form-control\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> <div class=\"col form-group\"> <label for=\"cardExpYear\">{{'expirationYear' | i18n}}</label> <input id=\"cardExpYear\" class=\"form-control\" type=\"text\" name=\"Card.ExpYear\" [(ngModel)]=\"cipher.card.expYear\" placeholder=\"{{'ex' | i18n}} 2019\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardCode\">{{'securityCode' | i18n}}</label> <div class=\"input-group\"> <input id=\"cardCode\" class=\"form-control text-monospace\" type=\"{{showCardCode ? 'text' : 'password'}}\" name=\"Card.Code\" [(ngModel)]=\"cipher.card.code\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardCode()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showCardCode, 'fa-eye-slash': showCardCode}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'securityCode' | i18n}}\" (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> </ng-container> <ng-container *ngIf=\"cipher.type === cipherType.Identity\"> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idTitle\">{{'title' | i18n}}</label> <select id=\"idTitle\" class=\"form-control\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idFirstName\">{{'firstName' | i18n}}</label> <input id=\"idFirstName\" class=\"form-control\" type=\"text\" name=\"Identity.FirstName\" [(ngModel)]=\"cipher.identity.firstName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idMiddleName\">{{'middleName' | i18n}}</label> <input id=\"idMiddleName\" class=\"form-control\" type=\"text\" name=\"Identity.MiddleName\" [(ngModel)]=\"cipher.identity.middleName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idLastName\">{{'lastName' | i18n}}</label> <input id=\"idLastName\" class=\"form-control\" type=\"text\" name=\"Identity.LastName\" [(ngModel)]=\"cipher.identity.lastName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idUsername\">{{'username' | i18n}}</label> <input id=\"idUsername\" class=\"form-control\" type=\"text\" name=\"Identity.Username\" [(ngModel)]=\"cipher.identity.username\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idCompany\">{{'company' | i18n}}</label> <input id=\"idCompany\" class=\"form-control\" type=\"text\" name=\"Identity.Company\" [(ngModel)]=\"cipher.identity.company\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idSsn\">{{'ssn' | i18n}}</label> <input id=\"idSsn\" class=\"form-control\" type=\"text\" name=\"Identity.SSN\" [(ngModel)]=\"cipher.identity.ssn\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idPassportNumber\">{{'passportNumber' | i18n}}</label> <input id=\"idPassportNumber\" class=\"form-control\" type=\"text\" name=\"Identity.PassportNumber\" [(ngModel)]=\"cipher.identity.passportNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idLicenseNumber\">{{'licenseNumber' | i18n}}</label> <input id=\"idLicenseNumber\" class=\"form-control\" type=\"text\" name=\"Identity.LicenseNumber\" [(ngModel)]=\"cipher.identity.licenseNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idEmail\">{{'email' | i18n}}</label> <input id=\"idEmail\" class=\"form-control\" type=\"text\" name=\"Identity.Email\" [(ngModel)]=\"cipher.identity.email\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idPhone\">{{'phone' | i18n}}</label> <input id=\"idPhone\" class=\"form-control\" type=\"text\" name=\"Identity.Phone\" [(ngModel)]=\"cipher.identity.phone\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idAddress1\">{{'address1' | i18n}}</label> <input id=\"idAddress1\" class=\"form-control\" type=\"text\" name=\"Identity.Address1\" [(ngModel)]=\"cipher.identity.address1\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idAddress2\">{{'address2' | i18n}}</label> <input id=\"idAddress2\" class=\"form-control\" type=\"text\" name=\"Identity.Address2\" [(ngModel)]=\"cipher.identity.address2\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idAddress3\">{{'address3' | i18n}}</label> <input id=\"idAddress3\" class=\"form-control\" type=\"text\" name=\"Identity.Address3\" [(ngModel)]=\"cipher.identity.address3\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idCity\">{{'cityTown' | i18n}}</label> <input id=\"idCity\" class=\"form-control\" type=\"text\" name=\"Identity.City\" [(ngModel)]=\"cipher.identity.city\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idState\">{{'stateProvince' | i18n}}</label> <input id=\"idState\" class=\"form-control\" type=\"text\" name=\"Identity.State\" [(ngModel)]=\"cipher.identity.state\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idPostalCode\">{{'zipPostalCode' | i18n}}</label> <input id=\"idPostalCode\" class=\"form-control\" type=\"text\" name=\"Identity.PostalCode\" [(ngModel)]=\"cipher.identity.postalCode\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idCountry\">{{'country' | i18n}}</label> <input id=\"idCountry\" class=\"form-control\" type=\"text\" name=\"Identity.Country\" [(ngModel)]=\"cipher.identity.country\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> </ng-container> <div class=\"form-group\"> <label for=\"notes\">{{'notes' | i18n}}</label> <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\" [disabled]=\"cipher.isDeleted || viewOnly\" class=\"form-control\"></textarea> </div> <app-vault-add-edit-custom-fields [cipher]=\"cipher\" [viewOnly]=\"viewOnly\" [copy]=\"copy.bind(this)\"> </app-vault-add-edit-custom-fields> <ng-container *ngIf=\"allowOwnershipAssignment()\"> <h3 class=\"mt-4\">{{'ownership' | i18n}}</h3> <div class=\"row\"> <div class=\"col-5\"> <label for=\"organizationId\">{{'whoOwnsThisItem' | i18n}}</label> <select id=\"organizationId\" class=\"form-control\" name=\"OrganizationId\" [(ngModel)]=\"cipher.organizationId\" (change)=\"organizationChanged()\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> </ng-container> <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\"> <h3 class=\"mt-4\">{{'collections' | i18n}}</h3> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <ng-container *ngIf=\"collections && collections.length\"> <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"c.checked\" id=\"collection-{{i}}\" name=\"Collection[{{i}}].Checked\" [disabled]=\"cipher.isDeleted || viewOnly\"> <label class=\"form-check-label\" for=\"collection-{{i}}\">{{c.name}}</label> </div> </ng-container> </ng-container> <ng-container *ngIf=\"editMode\"> <div class=\"small text-muted mt-4\"> <div> <b class=\"font-weight-semibold\">{{'dateUpdated' | i18n}}:</b> {{cipher.revisionDate | date:'medium'}} </div> <div *ngIf=\"showRevisionDate\"> <b class=\"font-weight-semibold\">{{'datePasswordUpdated' | i18n}}:</b> {{cipher.passwordRevisionDisplayDate | date:'medium'}} </div> <div *ngIf=\"hasPasswordHistory\"> <b class=\"font-weight-semibold\">{{'passwordHistory' | i18n}}:</b> <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{'view' | i18n}}\"> {{cipher.passwordHistory.length}} </a> </div> <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\"> <div *ngFor=\"let ph of cipher.passwordHistory\"> {{ph.lastUsedDate | date:'short'}} - <span class=\"password-wrapper text-monospace ml-2\">{{ph.password}}</span> </div> </div> </div> </ng-container> <ng-container> <h3 class=\"mt-4\">{{'options' | i18n}}</h3> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [ngModel]=\"reprompt\" (change)=\"repromptChanged()\" id=\"passwordPrompt\" name=\"passwordPrompt\" [disabled]=\"cipher.isDeleted || viewOnly\"> <label class=\"form-check-label\" for=\"passwordPrompt\">{{'passwordPrompt' | i18n}}</label> <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/managing-items/#protect-individual-items\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!viewOnly\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(cipher?.isDeleted ? 'restore' : 'save') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{(viewOnly ? 'close' : 'cancel') | i18n}} </button> <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\"> <button *ngIf=\"!organization && !cipher.isDeleted\" type=\"button\" (click)=\"toggleFavorite()\" class=\"btn btn-link\" appA11yTitle=\"{{(cipher.favorite ? 'unfavorite' : 'favorite') | i18n}}\"> <i class=\"fa fa-lg\" [ngClass]=\"{'fa-star': cipher.favorite, 'fa-star-o': !cipher.favorite}\" aria-hidden=\"true\"></i> </button> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{(cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}}\" *ngIf=\"editMode && !cloneMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Importer } from '../importers/importer';\n\nexport interface ImportOption {\n    id: string;\n    name: string;\n}\nexport abstract class ImportService {\n    featuredImportOptions: ImportOption[];\n    regularImportOptions: ImportOption[];\n    getImportOptions: () => ImportOption[];\n    import: (importer: Importer, fileContents: string, organizationId?: string) => Promise<Error>;\n    getImporter: (format: string, organizationId: string) => Importer;\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CiphersComponent as BaseCiphersComponent } from 'jslib-angular/components/ciphers.component';\n\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nconst MaxCheckedCount = 500;\n\n@Component({\n    selector: 'app-vault-ciphers',\n    templateUrl: 'ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n    @Input() showAddNew = true;\n    @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n    @Output() onShareClicked = new EventEmitter<CipherView>();\n    @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n    @Output() onCloneClicked = new EventEmitter<CipherView>();\n\n    pagedCiphers: CipherView[] = [];\n    pageSize = 200;\n    cipherType = CipherType;\n    actionPromise: Promise<any>;\n    userHasPremiumAccess = false;\n\n    private didScroll = false;\n    private pagedCiphersCount = 0;\n    private refreshing = false;\n\n    constructor(searchService: SearchService, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected cipherService: CipherService, protected eventService: EventService,\n        protected totpService: TotpService, protected userService: UserService,\n        protected passwordRepromptService: PasswordRepromptService) {\n        super(searchService);\n    }\n\n    async ngOnInit() {\n        this.userHasPremiumAccess = await this.userService.canAccessPremium();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    loadMore() {\n        if (this.ciphers.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCiphers.length;\n        let pagedSize = this.pageSize;\n        if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n            pagedSize = this.pagedCiphersCount;\n        }\n        if (this.ciphers.length > pagedLength) {\n            this.pagedCiphers = this.pagedCiphers.concat(this.ciphers.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCiphersCount = this.pagedCiphers.length;\n        this.didScroll = this.pagedCiphers.length > this.pageSize;\n    }\n\n    async refresh() {\n        try {\n            this.refreshing = true;\n            await this.reload(this.filter, this.deleted);\n        } finally {\n            this.refreshing = false;\n        }\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.ciphers.length > this.pageSize;\n    }\n\n    async resetPaging() {\n        this.pagedCiphers = [];\n        this.loadMore();\n    }\n\n    async doSearch(indexedCiphers?: CipherView[]) {\n        this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, this.deletedFilter], indexedCiphers);\n        this.resetPaging();\n    }\n\n    launch(uri: string) {\n        this.platformUtilsService.launchUri(uri);\n    }\n\n    async attachments(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onAttachmentsClicked.emit(c);\n    }\n\n    async share(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onShareClicked.emit(c);\n    }\n\n    collections(c: CipherView) {\n        this.onCollectionsClicked.emit(c);\n    }\n\n    async clone(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onCloneClicked.emit(c);\n    }\n\n    async delete(c: CipherView): Promise<boolean> {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        if (this.actionPromise != null) {\n            return;\n        }\n        const permanent = c.isDeleted;\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(permanent ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\n            this.i18nService.t(permanent ? 'permanentlyDeleteItem' : 'deleteItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.deleteCipher(c.id, permanent);\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t(permanent ? 'permanentlyDeletedItem'\n                : 'deletedItem'));\n            this.refresh();\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    async restore(c: CipherView): Promise<boolean> {\n        if (this.actionPromise != null || !c.isDeleted) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('restoreItemConfirmation'),\n            this.i18nService.t('restoreItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.cipherService.restoreWithServer(c.id);\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('restoredItem'));\n            this.refresh();\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n        if (this.passwordRepromptService.protectedFields().includes(aType) && !await this.repromptCipher(cipher)) {\n            return;\n        }\n\n        if (value == null || aType === 'TOTP' && !this.displayTotpCopyButton(cipher)) {\n            return;\n        } else if (value === cipher.login.totp) {\n            value = await this.totpService.getCode(value);\n        }\n\n        if (!cipher.viewPassword) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.toasterService.popAsync('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (typeI18nKey === 'password' || typeI18nKey === 'verificationCodeTotp') {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n        } else if (typeI18nKey === 'securityCode') {\n            this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n        }\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n        const selectCount = select && this.ciphers.length > MaxCheckedCount\n            ? MaxCheckedCount\n            : this.ciphers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkCipher(this.ciphers[i], select);\n        }\n    }\n\n    checkCipher(c: CipherView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    getSelected(): CipherView[] {\n        if (this.ciphers == null) {\n            return [];\n        }\n        return this.ciphers.filter(c => !!(c as any).checked);\n    }\n\n    getSelectedIds(): string[] {\n        return this.getSelected().map(c => c.id);\n    }\n\n    displayTotpCopyButton(cipher: CipherView) {\n        return (cipher?.login?.hasTotp ?? false) &&\n            (cipher.organizationUseTotp || this.userHasPremiumAccess);\n    }\n\n    async selectCipher(cipher: CipherView) {\n        if (await this.repromptCipher(cipher)) {\n            super.selectCipher(cipher);\n        }\n    }\n\n    protected deleteCipher(id: string, permanent: boolean) {\n        return permanent ? this.cipherService.deleteWithServer(id) : this.cipherService.softDeleteWithServer(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return c.hasOldAttachments && c.organizationId == null;\n    }\n\n    protected async repromptCipher(c: CipherView) {\n        return c.reprompt === CipherRepromptType.None || await this.passwordRepromptService.showPasswordPrompt();\n    }\n}\n","<ng-container *ngIf=\"(isPaging() ? pagedCiphers : ciphers) as filteredCiphers\"> <table class=\"table table-hover table-list table-ciphers\" *ngIf=\"filteredCiphers.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let c of filteredCiphers\"> <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp> </td> <td (click)=\"checkCipher(c)\" class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick appStopProp (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> <ng-container *ngIf=\"showFixOldAttachments(c)\"> <i class=\"fa fa-exclamation-triangle text-warning\" appStopProp title=\"{{'attachmentsNeedFix' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachmentsNeedFix' | i18n}}</span> </ng-container> </ng-container> <br> <small appStopProp>{{c.subTitle}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.username, 'username', 'Username')\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyUsername' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.password, 'password', 'Password')\" *ngIf=\"c.viewPassword\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyPassword' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\" *ngIf=\"displayTotpCopyButton(c)\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyVerificationCode' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\"> <i class=\"fa fa-fw fa-share-square-o\" aria-hidden=\"true\"></i> {{'launch' | i18n}} </a> </ng-container> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"attachments(c)\"> <i class=\"fa fa-fw fa-paperclip\" aria-hidden=\"true\"></i> {{'attachments' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\" (click)=\"clone(c)\"> <i class=\"fa fa-fw fa-files-o\" aria-hidden=\"true\"></i> {{'clone' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"!organization && !c.organizationId && !c.isDeleted\" (click)=\"share(c)\"> <i class=\"fa fa-fw fa-arrow-circle-o-right\" aria-hidden=\"true\"></i> {{'moveToOrganization' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\"> <i class=\"fa fa-fw fa-cubes\" aria-hidden=\"true\"></i> {{'collections' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"restore(c)\" *ngIf=\"c.isDeleted\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'restore' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{(c.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\"> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p>{{'noItemsInList' | i18n}}</p> <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\"> <i class=\"fa fa-plus fa-fw\"></i>{{'addItem' | i18n}}</button> </ng-container> </div> </ng-container> ","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router, private messagingService: MessagingService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (!isAuthed) {\n            this.messagingService.send('authBlocked');\n            return false;\n        }\n\n        const locked = await this.vaultTimeoutService.isLocked();\n        if (locked) {\n            if (routerState != null) {\n                this.messagingService.send('lockedUrl', { url: routerState.url });\n            }\n            this.router.navigate(['lock'], { queryParams: { promptBiometric: true }});\n            return false;\n        }\n\n        return true;\n    }\n}\n","export enum ProviderUserType {\n    ProviderAdmin = 0,\n    ServiceUser = 1,\n}\n","export enum ThemeType {\n    System = 'system',\n    Light = 'light',\n    Dark = 'dark',\n    Nord = 'nord',\n    SolarizedDark = 'solarizedDark',\n}\n","export class KeysRequest {\n    publicKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        this.publicKey = publicKey;\n        this.encryptedPrivateKey = encryptedPrivateKey;\n    }\n}\n","import {\n    Directive,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n    loading = true;\n    authed = false;\n    email: string;\n    actionPromise: Promise<any>;\n\n    protected requiredParameters: string[] = [];\n    protected failedShortMessage = 'inviteAcceptFailedShort';\n    protected failedMessage = 'inviteAcceptFailed';\n\n    constructor(protected router: Router, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected route: ActivatedRoute,\n        protected userService: UserService, protected stateService: StateService) { }\n\n    abstract authedHandler(qParams: any): Promise<void>;\n    abstract unauthedHandler(qParams: any): Promise<void>;\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            await this.stateService.remove('loginRedirect');\n\n            let error = this.requiredParameters.some(e => qParams?.[e] == null || qParams[e] === '');\n            let errorMessage: string = null;\n            if (!error) {\n                this.authed = await this.userService.isAuthenticated();\n\n                if (this.authed) {\n                    try {\n                        await this.authedHandler(qParams);\n                    } catch (e) {\n                        error = true;\n                        errorMessage = e.message;\n                    }\n                } else {\n                    await this.stateService.save('loginRedirect', {\n                        route: this.getRedirectRoute(),\n                        qParams: qParams,\n                    });\n\n                    this.email = qParams.email;\n                    await this.unauthedHandler(qParams);\n                }\n            }\n\n            if (error) {\n                const toast: Toast = {\n                    type: 'error',\n                    title: null,\n                    body: errorMessage != null ? this.i18nService.t(this.failedShortMessage, errorMessage) :\n                        this.i18nService.t(this.failedMessage),\n                    timeout: 10000,\n                };\n                this.toasterService.popAsync(toast);\n                this.router.navigate(['/']);\n            }\n\n            this.loading = false;\n        });\n    }\n\n    getRedirectRoute() {\n        const urlTree = this.router.parseUrl(this.router.url);\n        urlTree.queryParams = {};\n        return urlTree.toString();\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { EventService } from '../../services/event.service';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\n\n@Component({\n    selector: 'app-entity-events',\n    templateUrl: 'entity-events.component.html',\n})\nexport class EntityEventsComponent implements OnInit {\n    @Input() name: string;\n    @Input() entity: 'user' | 'cipher';\n    @Input() entityId: string;\n    @Input() organizationId: string;\n    @Input() providerId: string;\n    @Input() showUser = false;\n\n    loading = true;\n    loaded = false;\n    events: any[];\n    start: string;\n    end: string;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private eventService: EventService, private toasterService: ToasterService,\n        private userNamePipe: UserNamePipe) { }\n\n    async ngOnInit() {\n        const defaultDates = this.eventService.getDefaultDateFilters();\n        this.start = defaultDates[0];\n        this.end = defaultDates[1];\n        await this.load();\n    }\n\n    async load() {\n        if (this.showUser) {\n            const response = await this.apiService.getOrganizationUsers(this.organizationId);\n            response.data.forEach(u => {\n                const name = this.userNamePipe.transform(u);\n                this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n                this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n            });\n        }\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.refreshPromise != null || this.morePromise != null) {\n            return;\n        }\n\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return;\n        }\n\n        this.loading = true;\n        let response: ListResponse<EventResponse>;\n        try {\n            let promise: Promise<any>;\n            if (this.entity === 'user' && this.providerId) {\n                promise = this.apiService.getEventsProviderUser(this.providerId, this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            } else if (this.entity === 'user') {\n                promise = this.apiService.getEventsOrganizationUser(this.organizationId, this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            } else {\n                promise = this.apiService.getEventsCipher(this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            }\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            response = await promise;\n        } catch { }\n\n        this.continuationToken = response.continuationToken;\n        const events = await Promise.all(response.data.map(async r => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = await this.eventService.getEventInfo(r);\n            const user = this.showUser && userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return {\n                message: eventInfo.message,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.showUser ? this.i18nService.t('unknown') : null,\n                userEmail: user != null ? user.email : this.showUser ? '' : null,\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            };\n        }));\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"eventLogsTitle\"> {{'eventLogs' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"loaded\"> <div class=\"d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\"> </div> <button #refreshBtn [appApiAction]=\"refreshPromise\" type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshBtn.loading\"> <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loaded && refreshBtn.loading}\" aria-hidden=\"true\"></i> {{'refresh' | i18n}} </button> </div> <hr> <div *ngIf=\"!events || !events.length\"> {{'noEventsInList' | i18n}} </div> <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td *ngIf=\"showUser\"> <span appA11yTitle=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","export class OrganizationUserResetPasswordEnrollmentRequest {\n    resetPasswordKey: string;\n}\n","export enum HashPurpose {\n    ServerAuthorization = 1,\n    LocalAuthorization = 2,\n}\n","import { PolicyResponse } from '../response/policyResponse';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class PolicyData {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(response: PolicyResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.type = response.type;\n        this.data = response.data;\n        this.enabled = response.enabled;\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n    masterPassword: string;\n    masterPasswordRetype: string;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n    protected email: string;\n    protected kdf: KdfType;\n    protected kdfIterations: number;\n\n    private masterPasswordStrengthTimeout: any;\n\n    constructor(protected i18nService: I18nService, protected cryptoService: CryptoService,\n        protected messagingService: MessagingService, protected userService: UserService,\n        protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.email = await this.userService.getEmail();\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    }\n\n    async submit() {\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        if (!await this.setupSubmitActions()) {\n            return;\n        }\n\n        const email = await this.userService.getEmail();\n        if (this.kdf == null) {\n            this.kdf = await this.userService.getKdf();\n        }\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.userService.getKdfIterations();\n        }\n        const key = await this.cryptoService.makeKey(this.masterPassword, email.trim().toLowerCase(),\n            this.kdf, this.kdfIterations);\n        const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n        let encKey: [SymmetricCryptoKey, EncString] = null;\n        const existingEncKey = await this.cryptoService.getEncKey();\n        if (existingEncKey == null) {\n            encKey = await this.cryptoService.makeEncKey(key);\n        } else {\n            encKey = await this.cryptoService.remakeEncKey(key);\n        }\n\n        await this.performSubmitActions(masterPasswordHash, key, encKey);\n    }\n\n    async setupSubmitActions(): Promise<boolean> {\n        // Override in sub-class\n        // Can be used for additional validation and/or other processes the should occur before changing passwords\n        return true;\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        // Override in sub-class\n    }\n\n    async strongPassword(): Promise<boolean> {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return false;\n        }\n        if (this.masterPassword !== this.masterPasswordRetype) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return false;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(\n                strengthResult.score,\n                this.masterPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return false;\n        }\n\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        return userInput;\n    }\n}\n","export class SelectionReadOnlyRequest {\n    id: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n        this.id = id;\n        this.readOnly = readOnly;\n        this.hidePasswords = hidePasswords;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class PolicyResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.type = this.getResponseProperty('Type');\n        this.data = this.getResponseProperty('Data');\n        this.enabled = this.getResponseProperty('Enabled');\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { View } from './view';\n\nimport { LoginUri } from '../domain/loginUri';\n\nimport { Utils } from '../../misc/utils';\n\nconst CanLaunchWhitelist = [\n    'https://',\n    'http://',\n    'ssh://',\n    'ftp://',\n    'sftp://',\n    'irc://',\n    'vnc://',\n    // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n    'rdp://', // Legacy RDP URI scheme\n    'ms-rd:', // Preferred RDP URI scheme\n    'chrome://',\n    'iosapp://',\n    'androidapp://',\n];\n\nexport class LoginUriView implements View {\n    match: UriMatchType = null;\n\n    // tslint:disable\n    private _uri: string = null;\n    private _domain: string = null;\n    private _hostname: string = null;\n    private _host: string = null;\n    private _canLaunch: boolean = null;\n    // tslint:enable\n\n    constructor(u?: LoginUri) {\n        if (!u) {\n            return;\n        }\n\n        this.match = u.match;\n    }\n\n    get uri(): string {\n        return this._uri;\n    }\n    set uri(value: string) {\n        this._uri = value;\n        this._domain = null;\n        this._canLaunch = null;\n    }\n\n    get domain(): string {\n        if (this._domain == null && this.uri != null) {\n            this._domain = Utils.getDomain(this.uri);\n            if (this._domain === '') {\n                this._domain = null;\n            }\n        }\n\n        return this._domain;\n    }\n\n    get hostname(): string {\n        if (this.match === UriMatchType.RegularExpression) {\n            return null;\n        }\n        if (this._hostname == null && this.uri != null) {\n            this._hostname = Utils.getHostname(this.uri);\n            if (this._hostname === '') {\n                this._hostname = null;\n            }\n        }\n\n        return this._hostname;\n    }\n\n    get host(): string {\n        if (this.match === UriMatchType.RegularExpression) {\n            return null;\n        }\n        if (this._host == null && this.uri != null) {\n            this._host = Utils.getHost(this.uri);\n            if (this._host === '') {\n                this._host = null;\n            }\n        }\n\n        return this._host;\n    }\n\n    get hostnameOrUri(): string {\n        return this.hostname != null ? this.hostname : this.uri;\n    }\n\n    get hostOrUri(): string {\n        return this.host != null ? this.host : this.uri;\n    }\n\n    get isWebsite(): boolean {\n        return this.uri != null && (this.uri.indexOf('http://') === 0 || this.uri.indexOf('https://') === 0 ||\n            (this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri)));\n    }\n\n    get canLaunch(): boolean {\n        if (this._canLaunch != null) {\n            return this._canLaunch;\n        }\n        if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n            const uri = this.launchUri;\n            for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n                if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n                    this._canLaunch = true;\n                    return this._canLaunch;\n                }\n            }\n        }\n        this._canLaunch = false;\n        return this._canLaunch;\n    }\n\n    get launchUri(): string {\n        return this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri) ? ('http://' + this.uri) : this.uri;\n    }\n}\n","export enum UriMatchType {\n    Domain = 0,\n    Host = 1,\n    StartsWith = 2,\n    Exact = 3,\n    RegularExpression = 4,\n    Never = 5,\n}\n","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport {\n    AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent\n} from 'jslib-angular/components/add-edit-custom-fields.component';\n\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-vault-add-edit-custom-fields',\n    templateUrl: 'add-edit-custom-fields.component.html',\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n    @Input() viewOnly: boolean;\n    @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n    constructor(i18nService: I18nService, eventService: EventService) {\n        super(i18nService, eventService);\n    }\n}\n","<ng-container> <h3 class=\"mt-4\">{{'customFields' | i18n}}</h3> <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\"> <div class=\"row\" cdkDrag *ngFor=\"let f of cipher.fields; let i = index; trackBy:trackByFunction\"> <div class=\"col-5 form-group\"> <div class=\"d-flex\"> <label for=\"fieldName{{i}}\">{{'name' | i18n}}</label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/custom-fields/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <input id=\"fieldName{{i}}\" type=\"text\" name=\"Field.Name{{i}}\" [(ngModel)]=\"f.name\" class=\"form-control\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-7 form-group\"> <label for=\"fieldValue{{i}}\">{{'value' | i18n}}</label> <div class=\"d-flex align-items-center\"> <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\"> <input id=\"fieldValue{{i}}\" class=\"form-control\" type=\"text\" name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(f.value, 'value', 'Field')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\"> <input id=\"fieldValue{{i}}\" type=\"{{f.showValue ? 'text' : 'password'}}\" name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\" class=\"form-control text-monospace\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleFieldValue(f)\" [disabled]=\"!cipher.viewPassword && !f.newField\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !f.showValue, 'fa-eye-slash': f.showValue}\"> </i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\" [disabled]=\"!cipher.viewPassword && !f.newField\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"flex-fill\"> <input id=\"fieldValue{{i}}\" name=\"Field.Value{{i}}\" type=\"checkbox\" [(ngModel)]=\"f.value\" *ngIf=\"f.type === fieldType.Boolean\" appTrueFalseValue trueValue=\"true\" falseValue=\"false\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeField(f)\" appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-link text-muted cursor-move\" appA11yTitle=\"{{'dragToSort' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-bars fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> <a href=\"#\" appStopClick (click)=\"addField()\" class=\"d-inline-block mb-2\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newCustomField' | i18n}} </a> <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <div class=\"col-5\"> <label for=\"addFieldType\" class=\"sr-only\">{{'type' | i18n}}</label> <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\"> <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> </ng-container> ","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from 'jslib-angular/components/groupings.component';\n\n@Component({\n    selector: 'app-vault-groupings',\n    templateUrl: 'groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    @Output() onSearchTextChanged = new EventEmitter<string>();\n\n    searchText: string = '';\n    searchPlaceholder: string = null;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    searchTextChanged() {\n        this.onSearchTextChanged.emit(this.searchText);\n    }\n}\n","<div class=\"card vault-filters\"> <div class=\"card-header d-flex\"> {{'filters' | i18n}} <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/searching-vault/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchVault' | i18n)}}\" id=\"search\" class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\" appAutofocus> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedAll}\"> <a href=\"#\" appStopClick (click)=\"selectAll()\"> <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allItems' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedFavorites}\" *ngIf=\"showFavorites\"> <a href=\"#\" appStopClick (click)=\"selectFavorites()\"> <i class=\"fa-li fa fa-fw fa-star\"></i>{{'favorites' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedTrash}\" *ngIf=\"showTrash\"> <a href=\"#\" appStopClick (click)=\"selectTrash()\"> <i class=\"fa-li fa fa-fw fa-trash-o\"></i>{{'trash' | i18n}} </a> </li> </ul> <h3>{{'types' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedType === cipherType.Login}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Login)\"> <i class=\"fa-li fa fa-fw fa-globe\"></i>{{'typeLogin' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.Card}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Card)\"> <i class=\"fa-li fa fa-fw fa-credit-card\"></i>{{'typeCard' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.Identity}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Identity)\"> <i class=\"fa-li fa fa-fw fa-id-card-o\"></i>{{'typeIdentity' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.SecureNote}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.SecureNote)\"> <i class=\"fa-li fa fa-fw fa-sticky-note-o\"></i>{{'typeSecureNote' | i18n}} </a> </li> </ul> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ng-container *ngIf=\"showFolders\"> <h3 class=\"d-flex\"> {{'folders' | i18n}} <a href=\"#\" class=\"text-muted ml-auto\" appStopClick (click)=\"addFolder()\" appA11yTitle=\"{{'addFolder' | i18n}}\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> </a> </h3> <ul class=\"fa-ul card-ul\"> <ng-template #recursiveFolders let-folders> <li *ngFor=\"let f of folders\" [ngClass]=\"{active: selectedFolder && f.node.id === selectedFolderId}\"> <div class=\"d-flex\"> <i *ngIf=\"f.children.length\" class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\" [ngClass]=\"{'fa-caret-right': isCollapsed(f.node), 'fa-caret-down': !isCollapsed(f.node)}\" (click)=\"collapse(f.node)\"></i> <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectFolder(f.node)\"> <i *ngIf=\"f.children.length === 0\" class=\"fa-li fa fa-folder-o\" aria-hidden=\"true\"></i>{{f.node.name}} </a> <a href=\"#\" class=\"text-muted ml-auto show-active\" appStopClick (click)=\"editFolder(f.node)\" appA11yTitle=\"{{'editFolder' | i18n}}\" *ngIf=\"f.node.id\"> <i class=\"fa fa-pencil fa-fw\" aria-hidden=\"true\"></i> </a> </div> <ul class=\"fa-ul card-ul carets\" *ngIf=\"f.children.length && !isCollapsed(f.node)\"> <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: f.children }\"> </ng-container> </ul> </li> </ng-template> <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: nestedFolders }\"> </ng-container> </ul> </ng-container> <ng-container *ngIf=\"showCollections && collections && collections.length\"> <h3>{{'collections' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <ng-template #recursiveCollections let-collections> <li *ngFor=\"let c of collections\" [ngClass]=\"{active: c.node.id === selectedCollectionId}\"> <i *ngIf=\"c.children.length\" class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\" [ngClass]=\"{'fa-caret-right': isCollapsed(c.node), 'fa-caret-down': !isCollapsed(c.node)}\" (click)=\"collapse(c.node)\"></i> <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectCollection(c.node)\"> <i *ngIf=\"c.children.length === 0\" class=\"fa-li fa fa-cube\" aria-hidden=\"true\"></i>{{c.node.name}} </a> <ul class=\"fa-ul card-ul carets\" *ngIf=\"c.children.length && !isCollapsed(c.node)\"> <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: c.children }\"> </ng-container> </ul> </li> </ng-template> <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: nestedCollections }\"> </ng-container> </ul> </ng-container> </ng-container> </div> </div> ","import { OrganizationData } from '../data/organizationData';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\n\nexport class Organization {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    hasPublicAndPrivateKeys: boolean;\n    providerId: string;\n    providerName: string;\n    isProviderUser: boolean;\n\n    constructor(obj?: OrganizationData) {\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.name = obj.name;\n        this.status = obj.status;\n        this.type = obj.type;\n        this.enabled = obj.enabled;\n        this.usePolicies = obj.usePolicies;\n        this.useGroups = obj.useGroups;\n        this.useDirectory = obj.useDirectory;\n        this.useEvents = obj.useEvents;\n        this.useTotp = obj.useTotp;\n        this.use2fa = obj.use2fa;\n        this.useApi = obj.useApi;\n        this.useSso = obj.useSso;\n        this.useResetPassword = obj.useResetPassword;\n        this.selfHost = obj.selfHost;\n        this.usersGetPremium = obj.usersGetPremium;\n        this.seats = obj.seats;\n        this.maxCollections = obj.maxCollections;\n        this.maxStorageGb = obj.maxStorageGb;\n        this.ssoBound = obj.ssoBound;\n        this.identifier = obj.identifier;\n        this.permissions = obj.permissions;\n        this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n        this.userId = obj.userId;\n        this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n        this.providerId = obj.providerId;\n        this.providerName = obj.providerName;\n        this.isProviderUser = obj.isProviderUser;\n    }\n\n    get canAccess() {\n        if (this.type === OrganizationUserType.Owner) {\n            return true;\n        }\n        return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    get isManager() {\n        return this.type === OrganizationUserType.Manager || this.type === OrganizationUserType.Owner ||\n            this.type === OrganizationUserType.Admin;\n    }\n\n    get isAdmin() {\n        return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n    }\n\n    get isOwner() {\n        return this.type === OrganizationUserType.Owner || this.isProviderUser;\n    }\n\n    get canAccessEventLogs() {\n        return this.isAdmin || this.permissions.accessEventLogs;\n    }\n\n    get canAccessImportExport() {\n        return this.isAdmin || this.permissions.accessImportExport;\n    }\n\n    get canAccessReports() {\n        return this.isAdmin || this.permissions.accessReports;\n    }\n\n    get canCreateNewCollections() {\n        return this.isManager || (this.permissions.createNewCollections ?? this.permissions.manageAllCollections);\n    }\n\n    get canEditAnyCollection() {\n        return this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections);\n    }\n\n    get canDeleteAnyCollection() {\n        return this.isAdmin || (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections);\n    }\n\n    get canViewAllCollections() {\n        return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n    }\n\n    get canEditAssignedCollections() {\n        return this.isManager || (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections);\n    }\n\n    get canDeleteAssignedCollections() {\n        return this.isManager || (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections);\n    }\n\n    get canViewAssignedCollections() {\n        return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n    }\n\n    get canManageGroups() {\n        return this.isAdmin || this.permissions.manageGroups;\n    }\n\n    get canManageSso() {\n        return this.isAdmin || this.permissions.manageSso;\n    }\n\n    get canManagePolicies() {\n        return this.isAdmin || this.permissions.managePolicies;\n    }\n\n    get canManageUsers() {\n        return this.isAdmin || this.permissions.manageUsers;\n    }\n\n    get canManageUsersPassword() {\n        return this.isAdmin || this.permissions.manageResetPassword;\n    }\n\n    get isExemptFromPolicies() {\n        return this.canManagePolicies;\n    }\n}\n","import { View } from './view';\n\nimport { SendFile } from '../domain/sendFile';\n\nexport class SendFileView implements View {\n    id: string = null;\n    size: string = null;\n    sizeName: string = null;\n    fileName: string = null;\n\n    constructor(f?: SendFile) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n        this.size = f.size;\n        this.sizeName = f.sizeName;\n    }\n\n    get fileSize(): number {\n        try {\n            if (this.size != null) {\n                return parseInt(this.size, null);\n            }\n        } catch { }\n        return 0;\n    }\n}\n","import { View } from './view';\n\nimport { SendText } from '../domain/sendText';\n\nexport class SendTextView implements View {\n    text: string = null;\n    hidden: boolean;\n\n    constructor(t?: SendText) {\n        if (!t) {\n            return;\n        }\n\n        this.hidden = t.hidden;\n    }\n\n    get maskedText(): string {\n        return this.text != null ? '••••••••' : null;\n    }\n}\n","import { AttachmentResponse } from './attachmentResponse';\nimport { BaseResponse } from './baseResponse';\nimport { PasswordHistoryResponse } from './passwordHistoryResponse';\n\nimport { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class CipherResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    type: number;\n    name: string;\n    notes: string;\n    fields: FieldApi[];\n    login: LoginApi;\n    card: CardApi;\n    identity: IdentityApi;\n    secureNote: SecureNoteApi;\n    favorite: boolean;\n    edit: boolean;\n    viewPassword: boolean;\n    organizationUseTotp: boolean;\n    revisionDate: string;\n    attachments: AttachmentResponse[];\n    passwordHistory: PasswordHistoryResponse[];\n    collectionIds: string[];\n    deletedDate: string;\n    reprompt: CipherRepromptType;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.folderId = this.getResponseProperty('FolderId') || null;\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.notes = this.getResponseProperty('Notes');\n        this.favorite = this.getResponseProperty('Favorite') || false;\n        this.edit = !!this.getResponseProperty('Edit');\n        if (this.getResponseProperty('ViewPassword') == null) {\n            this.viewPassword = true;\n        } else {\n            this.viewPassword = this.getResponseProperty('ViewPassword');\n        }\n        this.organizationUseTotp = this.getResponseProperty('OrganizationUseTotp');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.deletedDate = this.getResponseProperty('DeletedDate');\n\n        const login = this.getResponseProperty('Login');\n        if (login != null) {\n            this.login = new LoginApi(login);\n        }\n\n        const card = this.getResponseProperty('Card');\n        if (card != null) {\n            this.card = new CardApi(card);\n        }\n\n        const identity = this.getResponseProperty('Identity');\n        if (identity != null) {\n            this.identity = new IdentityApi(identity);\n        }\n\n        const secureNote = this.getResponseProperty('SecureNote');\n        if (secureNote != null) {\n            this.secureNote = new SecureNoteApi(secureNote);\n        }\n\n        const fields = this.getResponseProperty('Fields');\n        if (fields != null) {\n            this.fields = fields.map((f: any) => new FieldApi(f));\n        }\n\n        const attachments = this.getResponseProperty('Attachments');\n        if (attachments != null) {\n            this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n        }\n\n        const passwordHistory = this.getResponseProperty('PasswordHistory');\n        if (passwordHistory != null) {\n            this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n        }\n\n        this.reprompt = this.getResponseProperty('Reprompt') || CipherRepromptType.None;\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { Policy } from 'jslib-common/models/domain/policy';\n\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\n@Component({\n    selector: 'app-organizations',\n    templateUrl: 'organizations.component.html',\n})\nexport class OrganizationsComponent implements OnInit {\n    @Input() vault = false;\n\n    organizations: Organization[];\n    policies: Policy[];\n    loaded: boolean = false;\n    actionPromise: Promise<any>;\n\n    constructor(private userService: UserService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private apiService: ApiService,\n        private toasterService: ToasterService, private syncService: SyncService,\n        private cryptoService: CryptoService, private policyService: PolicyService) { }\n\n    async ngOnInit() {\n        if (!this.vault) {\n            await this.syncService.fullSync(true);\n            await this.load();\n        }\n    }\n\n    async load() {\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.organizations = orgs;\n        this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n        this.loaded = true;\n    }\n\n    allowEnrollmentChanges(org: Organization): boolean {\n        if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n            const policy = this.policies.find(p => p.organizationId === org.id);\n            if (policy != null && policy.enabled) {\n                return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n            }\n        }\n\n        return false;\n    }\n\n    showEnrolledStatus(org: Organization): boolean {\n        return org.useResetPassword && org.resetPasswordEnrolled && this.policies.some(p => p.organizationId === org.id && p.enabled);\n    }\n\n    async unlinkSso(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            'Are you sure you want to unlink SSO for this organization?', org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, 'Unlinked SSO');\n            await this.load();\n        } catch { }\n    }\n\n    async leave(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('leaveOrganizationConfirmation'), org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('leftOrganization'));\n            await this.load();\n        } catch { }\n    }\n\n    async toggleResetPasswordEnrollment(org: Organization) {\n        // Set variables\n        let keyString: string = null;\n        let toastStringRef = 'withdrawPasswordResetSuccess';\n\n        // Enrolling\n        if (!org.resetPasswordEnrolled) {\n            // Alert user about enrollment\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('resetPasswordEnrollmentWarning'), null,\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n            if (!confirmed) {\n                return;\n            }\n\n            // Retrieve Public Key\n            this.actionPromise = this.apiService.getOrganizationKeys(org.id)\n                .then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                    }\n\n                    const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n                    // RSA Encrypt user's encKey.key with organization public key\n                    const encKey = await this.cryptoService.getEncKey();\n                    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n                    keyString = encryptedKey.encryptedString;\n                    toastStringRef = 'enrollPasswordResetSuccess';\n\n                    // Create request and execute enrollment\n                    const request = new OrganizationUserResetPasswordEnrollmentRequest();\n                    request.resetPasswordKey = keyString;\n                    return this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n                })\n                .then(() => {\n                    return this.syncService.fullSync(true);\n                });\n        } else {\n            // Withdrawal\n            const request = new OrganizationUserResetPasswordEnrollmentRequest();\n            request.resetPasswordKey = keyString;\n            this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request)\n                .then(() => {\n                    return this.syncService.fullSync(true);\n                });\n        }\n\n        try {\n            await this.actionPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t(toastStringRef));\n            await this.load();\n        } catch { }\n    }\n}\n","<ng-container *ngIf=\"vault\"> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ul class=\"fa-ul card-ul carets\" *ngIf=\"organizations && organizations.length\"> <li *ngFor=\"let o of organizations\"> <a [routerLink]=\"['/organizations', o.id]\" class=\"text-body\"> <i class=\"fa-li fa fa-caret-right\" aria-hidden=\"true\"></i> {{o.name}} <ng-container *ngIf=\"!o.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'organizationIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span> </ng-container> </a> </li> </ul> <p *ngIf=\"!organizations || !organizations.length\">{{'noOrganizationsList' | i18n}}</p> </ng-container> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-block btn-outline-primary\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </ng-container> <ng-container *ngIf=\"!vault\"> <div class=\"page-header d-flex\"> <h1> {{'organizations' | i18n}} <small [appApiAction]=\"actionPromise\" #action> <ng-container *ngIf=\"action.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"!loaded || (organizations && organizations.length)\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <ng-container *ngIf=\"!organizations || !organizations.length\"> <p>{{'noOrganizationsList' | i18n}}</p> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-outline-primary\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </ng-container> <table class=\"table table-hover table-list\" *ngIf=\"organizations && organizations.length\"> <tbody> <tr *ngFor=\"let o of organizations\"> <td width=\"30\"> <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" [routerLink]=\"['/organizations', o.id]\">{{o.name}}</a> <ng-container *ngIf=\"!o.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'organizationIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span> </ng-container> <ng-container *ngIf=\"showEnrolledStatus(o)\"> <i class=\"fa fa-key\" appStopProp title=\"{{'enrolledPasswordReset' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enrolledPasswordReset' | i18n}}</span> </ng-container> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a *ngIf=\"allowEnrollmentChanges(o) && !o.resetPasswordEnrolled\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleResetPasswordEnrollment(o)\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'enrollPasswordReset' | i18n}} </a> <a *ngIf=\"allowEnrollmentChanges(o) && o.resetPasswordEnrolled\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleResetPasswordEnrollment(o)\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'withdrawPasswordReset' | i18n}} </a> <ng-container *ngIf=\"o.useSso && o.identifier\"> <a *ngIf=\"o.ssoBound; else linkSso\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"unlinkSso(o)\"> <i class=\"fa fa-fw fa-chain-broken\" aria-hidden=\"true\"></i> {{'unlinkSso' | i18n}} </a> <ng-template #linkSso> <app-link-sso [organization]=\"o\"> </app-link-sso> </ng-template> </ng-container> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"leave(o)\"> <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i> {{'leave' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> ","import { BaseResponse } from './baseResponse';\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n    id: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.readOnly = this.getResponseProperty('ReadOnly');\n        this.hidePasswords = this.getResponseProperty('HidePasswords');\n    }\n}\n","export enum EncryptionType {\n    AesCbc256_B64 = 0,\n    AesCbc128_HmacSha256_B64 = 1,\n    AesCbc256_HmacSha256_B64 = 2,\n    Rsa2048_OaepSha256_B64 = 3,\n    Rsa2048_OaepSha1_B64 = 4,\n    Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n    Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum ProductType {\n    Free = 0,\n    Families = 1,\n    Teams = 2,\n    Enterprise = 3,\n}\n","import { KeysRequest } from './keysRequest';\n\nexport class OrganizationKeysRequest extends KeysRequest {\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        super(publicKey, encryptedPrivateKey);\n    }\n}\n","export enum DeviceType {\n    Android = 0,\n    iOS = 1,\n    ChromeExtension = 2,\n    FirefoxExtension = 3,\n    OperaExtension = 4,\n    EdgeExtension = 5,\n    WindowsDesktop = 6,\n    MacOsDesktop = 7,\n    LinuxDesktop = 8,\n    ChromeBrowser = 9,\n    FirefoxBrowser = 10,\n    OperaBrowser = 11,\n    EdgeBrowser = 12,\n    IEBrowser = 13,\n    UnknownBrowser = 14,\n    AndroidAmazon = 15,\n    UWP = 16,\n    SafariBrowser = 17,\n    VivaldiBrowser = 18,\n    VivaldiExtension = 19,\n    SafariExtension = 20,\n}\n","export enum ProviderUserStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n}\n","export class ProviderUserBulkRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\n\nexport interface BulkUserDetails {\n    id: string;\n    name: string;\n    email: string;\n    status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n    user: BulkUserDetails,\n    error: boolean,\n    message: string,\n};\n\n@Component({\n    selector: 'app-bulk-status',\n    templateUrl: 'bulk-status.component.html',\n})\nexport class BulkStatusComponent {\n\n    users: BulkStatusEntry[];\n    loading: boolean = false;\n\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'bulkConfirmStatus' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <table class=\"table table-hover table-list\" *ngIf=\"!loading\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let item of users\"> <td width=\"30\"> <app-avatar [data]=\"item.user | userName\" [email]=\"item.user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{item.user.email}} <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{item.user.name}}</small> </td> <td class=\"text-danger\" *ngIf=\"item.error\"> {{item.message}} </td> <td *ngIf=\"!item.error\"> {{item.message}} </td> </tr> </table> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { OrganizationUserBulkConfirmRequest } from 'jslib-common/models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\n\nimport { Utils } from 'jslib-common/misc/utils';\nimport { BulkUserDetails } from './bulk-status.component';\n\n@Component({\n    selector: 'app-bulk-confirm',\n    templateUrl: 'bulk-confirm.component.html',\n})\nexport class BulkConfirmComponent implements OnInit {\n\n    @Input() organizationId: string;\n    @Input() users: BulkUserDetails[];\n\n    excludedUsers: BulkUserDetails[];\n    filteredUsers: BulkUserDetails[];\n    publicKeys: Map<string, Uint8Array> = new Map();\n    fingerprints: Map<string, string> = new Map();\n    statuses: Map<string, string> = new Map();\n\n    loading: boolean = true;\n    done: boolean = false;\n    error: string;\n\n    constructor(protected cryptoService: CryptoService, protected apiService: ApiService,\n      private i18nService: I18nService) { }\n\n    async ngOnInit() {\n        this.excludedUsers = this.users.filter(u => !this.isAccepted(u));\n        this.filteredUsers = this.users.filter(u => this.isAccepted(u));\n\n        if (this.filteredUsers.length <= 0) {\n            this.done = true;\n        }\n\n        const response = await this.getPublicKeys();\n\n        for (const entry of response.data) {\n            const publicKey = Utils.fromB64ToArray(entry.key);\n            const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n            if (fingerprint != null) {\n                this.publicKeys.set(entry.id, publicKey);\n                this.fingerprints.set(entry.id, fingerprint.join('-'));\n            }\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        this.loading = true;\n        try {\n            const key = await this.getCryptoKey();\n            const userIdsWithKeys: any[] = [];\n            for (const user of this.filteredUsers) {\n                const publicKey = this.publicKeys.get(user.id);\n                if (publicKey == null) {\n                    continue;\n                }\n                const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n                userIdsWithKeys.push({\n                    id: user.id,\n                    key: encryptedKey.encryptedString,\n                });\n            }\n            const response = await this.postConfirmRequest(userIdsWithKeys);\n\n            response.data.forEach(entry => {\n                const error = entry.error !== '' ? entry.error : this.i18nService.t('bulkConfirmMessage');\n                this.statuses.set(entry.id, error);\n            });\n\n            this.done = true;\n        } catch (e) {\n            this.error = e.message;\n        }\n        this.loading = false;\n    }\n\n    protected isAccepted(user: BulkUserDetails) {\n        return user.status === OrganizationUserStatusType.Accepted;\n    }\n\n    protected async getPublicKeys() {\n        const request = new OrganizationUserBulkRequest(this.filteredUsers.map(user => user.id));\n        return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n    }\n\n    protected getCryptoKey() {\n        return this.cryptoService.getOrgKey(this.organizationId);\n    }\n\n    protected async postConfirmRequest(userIdsWithKeys: any[]) {\n        const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n        return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'confirmUsers' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\"> {{'noSelectedUsersApplicable' | i18n}} </app-callout> <app-callout type=\"error\" *ngIf=\"error\"> {{error}} </app-callout> <ng-container *ngIf=\"!loading && !done\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'fingerprint' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of filteredUsers\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td> {{fingerprints.get(user.id)}} </td> </tr> <tr *ngFor=\"let user of excludedUsers\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> <ng-container *ngIf=\"!loading && done\"> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of filteredUsers\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td *ngIf=\"statuses.has(user.id)\"> {{statuses.get(user.id)}} </td> <td *ngIf=\"!statuses.has(user.id)\"> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" *ngIf=\"!done\" [disabled]=\"loading\" (click)=\"submit()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","export class OrganizationUserBulkRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\n\nimport { BulkUserDetails } from './bulk-status.component';\n\n@Component({\n    selector: 'app-bulk-remove',\n    templateUrl: 'bulk-remove.component.html',\n})\nexport class BulkRemoveComponent {\n\n    @Input() organizationId: string;\n    @Input() users: BulkUserDetails[];\n\n    statuses: Map<string, string> = new Map();\n\n    loading: boolean = false;\n    done: boolean = false;\n    error: string;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService) { }\n\n    async submit() {\n        this.loading = true;\n        try {\n            const response = await this.deleteUsers();\n\n            response.data.forEach(entry => {\n                const error = entry.error !== '' ? entry.error : this.i18nService.t('bulkRemovedMessage');\n                this.statuses.set(entry.id, error);\n            });\n            this.done = true;\n        } catch (e) {\n            this.error = e.message;\n        }\n\n        this.loading = false;\n    }\n\n    protected async deleteUsers() {\n        const request = new OrganizationUserBulkRequest(this.users.map(user => user.id));\n        return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'removeUsers' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"danger\" *ngIf=\"users.length <= 0\"> {{'noSelectedUsersApplicable' | i18n}} </app-callout> <app-callout type=\"error\" *ngIf=\"error\"> {{error}} </app-callout> <ng-container *ngIf=\"!done\"> <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\"> {{'removeUsersWarning' | i18n}} </app-callout> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of users\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> </tr> </table> </ng-container> <ng-container *ngIf=\"done\"> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of users\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td *ngIf=\"statuses.has(user.id)\"> {{statuses.get(user.id)}} </td> <td *ngIf=\"!statuses.has(user.id)\"> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" *ngIf=\"!done && users.length > 0\" [disabled]=\"loading\" (click)=\"submit()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'removeUsers' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-frontend-layout',\n    templateUrl: 'frontend-layout.component.html',\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = await this.platformUtilsService.getApplicationVersion();\n        document.body.classList.add('layout_frontend');\n    }\n\n    ngOnDestroy() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","<router-outlet></router-outlet> <div class=\"container my-5 text-muted text-center\"> &copy; {{year}}, Bitwarden Inc. <br> {{'versionNumber' | i18n : version}} </div> ","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-providers',\n    templateUrl: 'providers.component.html',\n})\nexport class ProvidersComponent implements OnInit {\n    @Input() vault = false;\n\n    providers: Provider[];\n    loaded: boolean = false;\n    actionPromise: Promise<any>;\n\n    constructor(private userService: UserService, private i18nService: I18nService) { }\n\n    async ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        await this.load();\n    }\n\n    async load() {\n        const providers = await this.userService.getAllProviders();\n        providers.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.providers = providers;\n        this.loaded = true;\n    }\n}\n","<ng-container *ngIf=\"vault\"> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ul class=\"fa-ul card-ul carets\" *ngIf=\"providers && providers.length\"> <li *ngFor=\"let p of providers\"> <a [routerLink]=\"['/providers', p.id]\" class=\"text-body\"> <i class=\"fa-li fa fa-caret-right\" aria-hidden=\"true\"></i> {{p.name}} <ng-container *ngIf=\"!p.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'providerIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'providerIsDisabled' | i18n}}</span> </ng-container> </a> </li> </ul> </ng-container> </ng-container> <ng-container *ngIf=\"!vault\"> <app-navbar></app-navbar> <div class=\"container page-content\"> <div class=\"page-header d-flex\"> <h1>{{'providers' | i18n}}</h1> </div> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\"> <tbody> <tr *ngFor=\"let p of providers\"> <td width=\"30\"> <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{p.name}}</a> <ng-container *ngIf=\"!p.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'providerIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'providerIsDisabled' | i18n}}</span> </ng-container> </td> </tr> </tbody> </table> </ng-container> </div> <app-footer></app-footer> </ng-container> ","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport {\n    DatePipe,\n    registerLocaleData,\n} from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ToasterModule } from 'angular2-toaster';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { AvatarComponent } from './components/avatar.component';\nimport { NestedCheckboxComponent } from './components/nested-checkbox.component';\nimport { PasswordRepromptComponent } from './components/password-reprompt.component';\nimport { PasswordStrengthComponent } from './components/password-strength.component';\n\nimport { FooterComponent } from './layouts/footer.component';\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { NavbarComponent } from './layouts/navbar.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptEmergencyComponent } from './accounts/accept-emergency.component';\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { SetPasswordComponent } from './accounts/set-password.component';\nimport { SsoComponent } from './accounts/sso.component';\nimport { TwoFactorOptionsComponent } from './accounts/two-factor-options.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { UpdateTempPasswordComponent } from './accounts/update-temp-password.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from './organizations/manage/bulk/bulk-confirm.component';\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from './organizations/manage/bulk/bulk-remove.component';\nimport { BulkStatusComponent as OrgBulkStatusComponent } from './organizations/manage/bulk/bulk-status.component';\nimport {\n    CollectionAddEditComponent as OrgCollectionAddEditComponent,\n} from './organizations/manage/collection-add-edit.component';\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EntityEventsComponent as OrgEntityEventsComponent } from './organizations/manage/entity-events.component';\nimport { EntityUsersComponent as OrgEntityUsersComponent } from './organizations/manage/entity-users.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from './organizations/manage/group-add-edit.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\nimport { PolicyEditComponent as OrgPolicyEditComponent } from './organizations/manage/policy-edit.component';\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from './organizations/manage/reset-password.component';\nimport { UserAddEditComponent as OrgUserAddEditComponent } from './organizations/manage/user-add-edit.component';\nimport { UserConfirmComponent as OrgUserConfirmComponent } from './organizations/manage/user-confirm.component';\nimport { UserGroupsComponent as OrgUserGroupsComponent } from './organizations/manage/user-groups.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { AdjustSubscription } from './organizations/settings/adjust-subscription.component';\nimport { ChangePlanComponent } from './organizations/settings/change-plan.component';\nimport { DeleteOrganizationComponent } from './organizations/settings/delete-organization.component';\nimport { DownloadLicenseComponent } from './organizations/settings/download-license.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { SettingsComponent as OrgSettingComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { AddEditComponent as OrgAddEditComponent } from './organizations/vault/add-edit.component';\nimport { AttachmentsComponent as OrgAttachmentsComponent } from './organizations/vault/attachments.component';\nimport { CiphersComponent as OrgCiphersComponent } from './organizations/vault/ciphers.component';\nimport { CollectionsComponent as OrgCollectionsComponent } from './organizations/vault/collections.component';\nimport { GroupingsComponent as OrgGroupingsComponent } from './organizations/vault/groupings.component';\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccessComponent } from './send/access.component';\nimport { AddEditComponent as SendAddEditComponent } from './send/add-edit.component';\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from './send/efflux-dates.component';\nimport { SendComponent } from './send/send.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { AddCreditComponent } from './settings/add-credit.component';\nimport { AdjustPaymentComponent } from './settings/adjust-payment.component';\nimport { AdjustStorageComponent } from './settings/adjust-storage.component';\nimport { ApiKeyComponent } from './settings/api-key.component';\nimport { ChangeEmailComponent } from './settings/change-email.component';\nimport { ChangeKdfComponent } from './settings/change-kdf.component';\nimport { ChangePasswordComponent } from './settings/change-password.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DeauthorizeSessionsComponent } from './settings/deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './settings/delete-account.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { EmergencyAccessAddEditComponent } from './settings/emergency-access-add-edit.component';\nimport { EmergencyAccessAttachmentsComponent } from './settings/emergency-access-attachments.component';\nimport { EmergencyAccessConfirmComponent } from './settings/emergency-access-confirm.component';\nimport { EmergencyAccessTakeoverComponent } from './settings/emergency-access-takeover.component';\nimport { EmergencyAccessViewComponent } from './settings/emergency-access-view.component';\nimport { EmergencyAccessComponent } from './settings/emergency-access.component';\nimport { EmergencyAddEditComponent } from './settings/emergency-add-edit.component';\nimport { LinkSsoComponent } from './settings/link-sso.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationPlansComponent } from './settings/organization-plans.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PaymentComponent } from './settings/payment.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { ProfileComponent } from './settings/profile.component';\nimport { PurgeVaultComponent } from './settings/purge-vault.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TaxInfoComponent } from './settings/tax-info.component';\nimport { TwoFactorAuthenticatorComponent } from './settings/two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './settings/two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './settings/two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './settings/two-factor-recovery.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { TwoFactorVerifyComponent } from './settings/two-factor-verify.component';\nimport { TwoFactorWebAuthnComponent } from './settings/two-factor-webauthn.component';\nimport { TwoFactorYubiKeyComponent } from './settings/two-factor-yubikey.component';\nimport { UpdateKeyComponent } from './settings/update-key.component';\nimport { UpdateLicenseComponent } from './settings/update-license.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\nimport { VaultTimeoutInputComponent } from './settings/vault-timeout-input.component';\nimport { VerifyEmailComponent } from './settings/verify-email.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorHistoryComponent } from './tools/password-generator-history.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { AddEditCustomFieldsComponent } from './vault/add-edit-custom-fields.component';\nimport { AddEditComponent } from './vault/add-edit.component';\nimport { AttachmentsComponent } from './vault/attachments.component';\nimport { BulkActionsComponent } from './vault/bulk-actions.component';\nimport { BulkDeleteComponent } from './vault/bulk-delete.component';\nimport { BulkMoveComponent } from './vault/bulk-move.component';\nimport { BulkRestoreComponent } from './vault/bulk-restore.component';\nimport { BulkShareComponent } from './vault/bulk-share.component';\nimport { CiphersComponent } from './vault/ciphers.component';\nimport { CollectionsComponent } from './vault/collections.component';\nimport { FolderAddEditComponent } from './vault/folder-add-edit.component';\nimport { GroupingsComponent } from './vault/groupings.component';\nimport { ShareComponent } from './vault/share.component';\nimport { VaultComponent } from './vault/vault.component';\n\nimport { ProvidersComponent } from './providers/providers.component';\n\nimport { CalloutComponent } from 'jslib-angular/components/callout.component';\nimport { IconComponent } from 'jslib-angular/components/icon.component';\n\nimport { A11yTitleDirective } from 'jslib-angular/directives/a11y-title.directive';\nimport { ApiActionDirective } from 'jslib-angular/directives/api-action.directive';\nimport { AutofocusDirective } from 'jslib-angular/directives/autofocus.directive';\nimport { BlurClickDirective } from 'jslib-angular/directives/blur-click.directive';\nimport { BoxRowDirective } from 'jslib-angular/directives/box-row.directive';\nimport { FallbackSrcDirective } from 'jslib-angular/directives/fallback-src.directive';\nimport { InputVerbatimDirective } from 'jslib-angular/directives/input-verbatim.directive';\nimport { SelectCopyDirective } from 'jslib-angular/directives/select-copy.directive';\nimport { StopClickDirective } from 'jslib-angular/directives/stop-click.directive';\nimport { StopPropDirective } from 'jslib-angular/directives/stop-prop.directive';\nimport { TrueFalseValueDirective } from 'jslib-angular/directives/true-false-value.directive';\n\nimport { ColorPasswordPipe } from 'jslib-angular/pipes/color-password.pipe';\nimport { I18nPipe } from 'jslib-angular/pipes/i18n.pipe';\nimport { SearchCiphersPipe } from 'jslib-angular/pipes/search-ciphers.pipe';\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport localeAz from '@angular/common/locales/az';\nimport localeBg from '@angular/common/locales/bg';\nimport localeCa from '@angular/common/locales/ca';\nimport localeCs from '@angular/common/locales/cs';\nimport localeDa from '@angular/common/locales/da';\nimport localeDe from '@angular/common/locales/de';\nimport localeEl from '@angular/common/locales/el';\nimport localeEnGb from '@angular/common/locales/en-GB';\nimport localeEnIn from '@angular/common/locales/en-IN';\nimport localeEo from '@angular/common/locales/eo';\nimport localeEs from '@angular/common/locales/es';\nimport localeEt from '@angular/common/locales/et';\nimport localeFi from '@angular/common/locales/fi';\nimport localeFr from '@angular/common/locales/fr';\nimport localeHe from '@angular/common/locales/he';\nimport localeHr from '@angular/common/locales/hr';\nimport localeHu from '@angular/common/locales/hu';\nimport localeId from '@angular/common/locales/id';\nimport localeIt from '@angular/common/locales/it';\nimport localeJa from '@angular/common/locales/ja';\nimport localeKn from '@angular/common/locales/kn';\nimport localeKo from '@angular/common/locales/ko';\nimport localeLv from '@angular/common/locales/lv';\nimport localeMl from '@angular/common/locales/ml';\nimport localeNb from '@angular/common/locales/nb';\nimport localeNl from '@angular/common/locales/nl';\nimport localePl from '@angular/common/locales/pl';\nimport localePtBr from '@angular/common/locales/pt';\nimport localePtPt from '@angular/common/locales/pt-PT';\nimport localeRo from '@angular/common/locales/ro';\nimport localeRu from '@angular/common/locales/ru';\nimport localeSk from '@angular/common/locales/sk';\nimport localeSr from '@angular/common/locales/sr';\nimport localeSv from '@angular/common/locales/sv';\nimport localeTr from '@angular/common/locales/tr';\nimport localeUk from '@angular/common/locales/uk';\nimport localeZhCn from '@angular/common/locales/zh-Hans';\nimport localeZhTw from '@angular/common/locales/zh-Hant';\n\nimport { DisableSendPolicyComponent } from './organizations/policies/disable-send.component';\nimport { MasterPasswordPolicyComponent } from './organizations/policies/master-password.component';\nimport { PasswordGeneratorPolicyComponent } from './organizations/policies/password-generator.component';\nimport { PersonalOwnershipPolicyComponent } from './organizations/policies/personal-ownership.component';\nimport { RequireSsoPolicyComponent } from './organizations/policies/require-sso.component';\nimport { ResetPasswordPolicyComponent } from './organizations/policies/reset-password.component';\nimport { SendOptionsPolicyComponent } from './organizations/policies/send-options.component';\nimport { SingleOrgPolicyComponent } from './organizations/policies/single-org.component';\nimport { TwoFactorAuthenticationPolicyComponent } from './organizations/policies/two-factor-authentication.component';\n\nregisterLocaleData(localeAz, 'az');\nregisterLocaleData(localeBg, 'bg');\nregisterLocaleData(localeCa, 'ca');\nregisterLocaleData(localeCs, 'cs');\nregisterLocaleData(localeDa, 'da');\nregisterLocaleData(localeDe, 'de');\nregisterLocaleData(localeEl, 'el');\nregisterLocaleData(localeEnGb, 'en-GB');\nregisterLocaleData(localeEnIn, 'en-IN');\nregisterLocaleData(localeEs, 'es');\nregisterLocaleData(localeEt, 'et');\nregisterLocaleData(localeEo, 'eo');\nregisterLocaleData(localeFi, 'fi');\nregisterLocaleData(localeFr, 'fr');\nregisterLocaleData(localeHe, 'he');\nregisterLocaleData(localeHr, 'hr');\nregisterLocaleData(localeHu, 'hu');\nregisterLocaleData(localeId, 'id');\nregisterLocaleData(localeIt, 'it');\nregisterLocaleData(localeJa, 'ja');\nregisterLocaleData(localeKn, 'kn');\nregisterLocaleData(localeKo, 'ko');\nregisterLocaleData(localeLv, 'lv');\nregisterLocaleData(localeMl, 'ml');\nregisterLocaleData(localeNb, 'nb');\nregisterLocaleData(localeNl, 'nl');\nregisterLocaleData(localePl, 'pl');\nregisterLocaleData(localePtBr, 'pt-BR');\nregisterLocaleData(localePtPt, 'pt-PT');\nregisterLocaleData(localeRo, 'ro');\nregisterLocaleData(localeRu, 'ru');\nregisterLocaleData(localeSk, 'sk');\nregisterLocaleData(localeSr, 'sr');\nregisterLocaleData(localeSv, 'sv');\nregisterLocaleData(localeTr, 'tr');\nregisterLocaleData(localeUk, 'uk');\nregisterLocaleData(localeZhCn, 'zh-CN');\nregisterLocaleData(localeZhTw, 'zh-TW');\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        DragDropModule,\n        ToasterModule.forChild(),\n        ReactiveFormsModule,\n        RouterModule,\n    ],\n    declarations: [\n        A11yTitleDirective,\n        AcceptEmergencyComponent,\n        AccessComponent,\n        AcceptOrganizationComponent,\n        AccountComponent,\n        SetPasswordComponent,\n        AddCreditComponent,\n        AddEditComponent,\n        AdjustPaymentComponent,\n        AdjustSubscription,\n        AdjustStorageComponent,\n        ApiActionDirective,\n        ApiKeyComponent,\n        AttachmentsComponent,\n        AutofocusDirective,\n        AvatarComponent,\n        BlurClickDirective,\n        BoxRowDirective,\n        BreachReportComponent,\n        BulkActionsComponent,\n        BulkDeleteComponent,\n        BulkMoveComponent,\n        BulkRestoreComponent,\n        BulkShareComponent,\n        CalloutComponent,\n        ChangeEmailComponent,\n        ChangeKdfComponent,\n        ChangePasswordComponent,\n        ChangePlanComponent,\n        CiphersComponent,\n        CollectionsComponent,\n        ColorPasswordPipe,\n        CreateOrganizationComponent,\n        DeauthorizeSessionsComponent,\n        DeleteAccountComponent,\n        DeleteOrganizationComponent,\n        DomainRulesComponent,\n        DownloadLicenseComponent,\n        EmergencyAccessAddEditComponent,\n        EmergencyAccessAttachmentsComponent,\n        EmergencyAccessComponent,\n        EmergencyAccessConfirmComponent,\n        EmergencyAccessTakeoverComponent,\n        EmergencyAccessViewComponent,\n        EmergencyAddEditComponent,\n        ExportComponent,\n        ExposedPasswordsReportComponent,\n        FallbackSrcDirective,\n        FolderAddEditComponent,\n        FooterComponent,\n        FrontendLayoutComponent,\n        GroupingsComponent,\n        HintComponent,\n        I18nPipe,\n        IconComponent,\n        ImportComponent,\n        InactiveTwoFactorReportComponent,\n        InputVerbatimDirective,\n        LinkSsoComponent,\n        LockComponent,\n        LoginComponent,\n        NavbarComponent,\n        NestedCheckboxComponent,\n        OptionsComponent,\n        OrgAccountComponent,\n        OrgAddEditComponent,\n        OrganizationBillingComponent,\n        OrganizationPlansComponent,\n        OrganizationSubscriptionComponent,\n        OrgAttachmentsComponent,\n        OrgBulkStatusComponent,\n        OrgBulkConfirmComponent,\n        OrgBulkRemoveComponent,\n        OrgCiphersComponent,\n        OrgCollectionAddEditComponent,\n        OrgCollectionsComponent,\n        OrgEntityEventsComponent,\n        OrgEntityUsersComponent,\n        OrgEventsComponent,\n        OrgExportComponent,\n        OrgExposedPasswordsReportComponent,\n        OrgImportComponent,\n        OrgInactiveTwoFactorReportComponent,\n        OrgGroupAddEditComponent,\n        OrgGroupingsComponent,\n        OrgGroupsComponent,\n        OrgManageCollectionsComponent,\n        OrgManageComponent,\n        OrgPeopleComponent,\n        OrgPolicyEditComponent,\n        OrgPoliciesComponent,\n        OrgResetPasswordComponent,\n        OrgReusedPasswordsReportComponent,\n        OrgSettingComponent,\n        OrgToolsComponent,\n        OrgTwoFactorSetupComponent,\n        OrgUserAddEditComponent,\n        OrgUserConfirmComponent,\n        OrgUserGroupsComponent,\n        OrganizationsComponent,\n        OrganizationLayoutComponent,\n        OrgUnsecuredWebsitesReportComponent,\n        OrgVaultComponent,\n        OrgWeakPasswordsReportComponent,\n        PasswordGeneratorComponent,\n        PasswordGeneratorHistoryComponent,\n        PasswordStrengthComponent,\n        PasswordRepromptComponent,\n        PaymentComponent,\n        PremiumComponent,\n        ProfileComponent,\n        PurgeVaultComponent,\n        RecoverDeleteComponent,\n        RecoverTwoFactorComponent,\n        RegisterComponent,\n        ReusedPasswordsReportComponent,\n        SearchCiphersPipe,\n        SearchPipe,\n        SelectCopyDirective,\n        SendAddEditComponent,\n        SendEffluxDatesComponent,\n        SendComponent,\n        SettingsComponent,\n        ShareComponent,\n        SsoComponent,\n        StopClickDirective,\n        StopPropDirective,\n        TaxInfoComponent,\n        ToolsComponent,\n        TrueFalseValueDirective,\n        TwoFactorAuthenticatorComponent,\n        TwoFactorComponent,\n        TwoFactorDuoComponent,\n        TwoFactorEmailComponent,\n        TwoFactorOptionsComponent,\n        TwoFactorRecoveryComponent,\n        TwoFactorSetupComponent,\n        TwoFactorVerifyComponent,\n        TwoFactorWebAuthnComponent,\n        TwoFactorYubiKeyComponent,\n        UnsecuredWebsitesReportComponent,\n        UpdateKeyComponent,\n        UpdateLicenseComponent,\n        UpdateTempPasswordComponent,\n        UserBillingComponent,\n        UserLayoutComponent,\n        UserSubscriptionComponent,\n        UserNamePipe,\n        VaultComponent,\n        VerifyEmailComponent,\n        VerifyEmailTokenComponent,\n        VerifyRecoverDeleteComponent,\n        WeakPasswordsReportComponent,\n        ProvidersComponent,\n        TwoFactorAuthenticationPolicyComponent,\n        MasterPasswordPolicyComponent,\n        SingleOrgPolicyComponent,\n        PasswordGeneratorPolicyComponent,\n        RequireSsoPolicyComponent,\n        PersonalOwnershipPolicyComponent,\n        DisableSendPolicyComponent,\n        SendOptionsPolicyComponent,\n        ResetPasswordPolicyComponent,\n        VaultTimeoutInputComponent,\n        AddEditCustomFieldsComponent,\n    ],\n    exports: [\n        A11yTitleDirective,\n        AvatarComponent,\n        CalloutComponent,\n        ApiActionDirective,\n        StopClickDirective,\n        StopPropDirective,\n        I18nPipe,\n        SearchPipe,\n        UserNamePipe,\n        NavbarComponent,\n        FooterComponent,\n        OrganizationPlansComponent,\n    ],\n    providers: [DatePipe, SearchPipe, UserNamePipe],\n    bootstrap: [],\n})\nexport class OssModule { }\n","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nconst BroadcasterSubscriptionId = 'OrganizationLayoutComponent';\n\n@Component({\n    selector: 'app-organization-layout',\n    templateUrl: 'organization-layout.component.html',\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n    organization: Organization;\n    businessTokenPromise: Promise<any>;\n    private organizationId: string;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone) { }\n\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        this.route.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n        });\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'updatedOrgLicense':\n                        await this.load();\n                        break;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.organization = await this.userService.getOrganization(this.organizationId);\n    }\n\n    get showMenuBar() {\n        return this.showManageTab || this.showToolsTab || this.organization.isOwner;\n    }\n\n    get showManageTab(): boolean {\n        return this.organization.canManageUsers ||\n            this.organization.canViewAllCollections ||\n            this.organization.canViewAssignedCollections ||\n            this.organization.canManageGroups ||\n            this.organization.canManagePolicies ||\n            this.organization.canAccessEventLogs;\n    }\n\n    get showToolsTab(): boolean {\n        return this.organization.canAccessImportExport || this.organization.canAccessReports;\n    }\n\n    get toolsRoute(): string {\n        return this.organization.canAccessImportExport ?\n            'tools/import' :\n            'tools/exposed-passwords-report';\n    }\n\n    get manageRoute(): string {\n        let route: string;\n        switch (true) {\n            case this.organization.canManageUsers:\n                route = 'manage/people';\n                break;\n            case this.organization.canViewAssignedCollections || this.organization.canViewAllCollections:\n                route = 'manage/collections';\n                break;\n            case this.organization.canManageGroups:\n                route = 'manage/groups';\n                break;\n            case this.organization.canManagePolicies:\n                route = 'manage/policies';\n                break;\n            case this.organization.canAccessEventLogs:\n                route = 'manage/events';\n                break;\n        }\n        return route;\n    }\n}\n","<app-navbar></app-navbar> <div class=\"org-nav\" *ngIf=\"organization\"> <div class=\"container d-flex\"> <div class=\"d-flex flex-column\"> <div class=\"my-auto d-flex align-items-center pl-1\"> <app-avatar [data]=\"organization.name\" size=\"45\" [circle]=\"true\"></app-avatar> <div class=\"org-name ml-3\"> <span>{{organization.name}}</span> <small class=\"text-muted\">{{'organization' | i18n}}</small> </div> <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!organization.enabled\"> <div class=\"card-body py-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'organizationIsDisabled' | i18n}} </div> </div> <div class=\"ml-3 card border-info text-info bg-transparent\" *ngIf=\"organization.isProviderUser\"> <div class=\"card-body py-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'accessingUsingProvider' | i18n : organization.providerName}} </div> </div> </div> <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\"> <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\"> <i class=\"fa fa-lock\" aria-hidden=\"true\"></i> {{'vault' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showManageTab\"> <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i> {{'manage' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showToolsTab\"> <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-wrench\" aria-hidden=\"true\"></i> {{'tools' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"organization.isOwner\"> <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\"> <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i> {{'settings' | i18n}} </a> </li> </ul> </div> </div> </div> <router-outlet></router-outlet> <app-footer></app-footer> ","import { PolicyData } from '../data/policyData';\n\nimport Domain from './domainBase';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class Policy extends Domain {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(obj?: PolicyData) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.organizationId = obj.organizationId;\n        this.type = obj.type;\n        this.data = obj.data;\n        this.enabled = obj.enabled;\n    }\n}\n","import { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\nimport { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { DeviceRequest } from '../models/request/deviceRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\n\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { AuthService as AuthServiceAbstraction } from '../abstractions/auth.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { LogService } from '../abstractions/log.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\n\nexport const TwoFactorProviders = {\n    [TwoFactorProviderType.Authenticator]: {\n        type: TwoFactorProviderType.Authenticator,\n        name: null as string,\n        description: null as string,\n        priority: 1,\n        sort: 1,\n        premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n        type: TwoFactorProviderType.Yubikey,\n        name: null as string,\n        description: null as string,\n        priority: 3,\n        sort: 2,\n        premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n        type: TwoFactorProviderType.Duo,\n        name: 'Duo',\n        description: null as string,\n        priority: 2,\n        sort: 3,\n        premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n        type: TwoFactorProviderType.OrganizationDuo,\n        name: 'Duo (Organization)',\n        description: null as string,\n        priority: 10,\n        sort: 4,\n        premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n        type: TwoFactorProviderType.Email,\n        name: null as string,\n        description: null as string,\n        priority: 0,\n        sort: 6,\n        premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n        type: TwoFactorProviderType.WebAuthn,\n        name: null as string,\n        description: null as string,\n        priority: 4,\n        sort: 5,\n        premium: true,\n    },\n};\n\nexport class AuthService implements AuthServiceAbstraction {\n    email: string;\n    masterPasswordHash: string;\n    localMasterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    ssoRedirectUrl: string;\n    clientId: string;\n    clientSecret: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType = null;\n    captchaToken: string;\n\n    private key: SymmetricCryptoKey;\n\n    constructor(private cryptoService: CryptoService, protected apiService: ApiService,\n        private userService: UserService, protected tokenService: TokenService,\n        protected appIdService: AppIdService, private i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, private messagingService: MessagingService,\n        private vaultTimeoutService: VaultTimeoutService, private logService: LogService,\n        private setCryptoKeys = true) {\n    }\n\n    init() {\n        TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t('emailTitle');\n        TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t('emailDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].name = this.i18nService.t('authenticatorAppTitle');\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n            this.i18nService.t('authenticatorAppDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t('duoDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n            'Duo (' + this.i18nService.t('organization') + ')';\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n            this.i18nService.t('duoOrganizationDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t('webAuthnTitle');\n        TwoFactorProviders[TwoFactorProviderType.WebAuthn].description = this.i18nService.t('webAuthnDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t('yubiKeyTitle');\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].description = this.i18nService.t('yubiKeyDesc');\n    }\n\n    async logIn(email: string, masterPassword: string, captchaToken?: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        const localHashedPassword = await this.cryptoService.hashPassword(masterPassword, key,\n            HashPurpose.LocalAuthorization);\n        return await this.logInHelper(email, hashedPassword, localHashedPassword, null, null, null, null, null,\n            key, null, null, null, captchaToken);\n    }\n\n    async logInSso(code: string, codeVerifier: string, redirectUrl: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, code, codeVerifier, redirectUrl, null, null,\n            null, null, null, null);\n    }\n\n    async logInApiKey(clientId: string, clientSecret: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, null, null, null, clientId, clientSecret,\n            null, null, null, null);\n    }\n\n    async logInTwoFactor(twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean): Promise<AuthResult> {\n        return await this.logInHelper(this.email, this.masterPasswordHash, this.localMasterPasswordHash, this.code,\n            this.codeVerifier, this.ssoRedirectUrl, this.clientId, this.clientSecret, this.key, twoFactorProvider,\n            twoFactorToken, remember, this.captchaToken);\n    }\n\n    async logInComplete(email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean, captchaToken?: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        const localHashedPassword = await this.cryptoService.hashPassword(masterPassword, key,\n            HashPurpose.LocalAuthorization);\n        return await this.logInHelper(email, hashedPassword, localHashedPassword, null, null, null, null, null, key,\n            twoFactorProvider, twoFactorToken, remember, captchaToken);\n    }\n\n    async logInSsoComplete(code: string, codeVerifier: string, redirectUrl: string,\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, code, codeVerifier, redirectUrl, null,\n            null, null, twoFactorProvider, twoFactorToken, remember);\n    }\n\n    async logInApiKeyComplete(clientId: string, clientSecret: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, null, null, null, clientId, clientSecret, null,\n            twoFactorProvider, twoFactorToken, remember);\n    }\n\n    logOut(callback: Function) {\n        callback();\n        this.messagingService.send('loggedOut');\n    }\n\n    getSupportedTwoFactorProviders(win: Window): any[] {\n        const providers: any[] = [];\n        if (this.twoFactorProvidersData == null) {\n            return providers;\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n            this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) && this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) && this.platformUtilsService.supportsWebAuthn(win)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n        }\n\n        return providers;\n    }\n\n    getDefaultTwoFactorProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n        if (this.twoFactorProvidersData == null) {\n            return null;\n        }\n\n        if (this.selectedTwoFactorProviderType != null &&\n            this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)) {\n            return this.selectedTwoFactorProviderType;\n        }\n\n        let providerType: TwoFactorProviderType = null;\n        let providerPriority = -1;\n        this.twoFactorProvidersData.forEach((value, type) => {\n            const provider = (TwoFactorProviders as any)[type];\n            if (provider != null && provider.priority > providerPriority) {\n                if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n                    return;\n                }\n\n                providerType = type;\n                providerPriority = provider.priority;\n            }\n        });\n\n        return providerType;\n    }\n\n    async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n        email = email.trim().toLowerCase();\n        let kdf: KdfType = null;\n        let kdfIterations: number = null;\n        try {\n            const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n            if (preloginResponse != null) {\n                kdf = preloginResponse.kdf;\n                kdfIterations = preloginResponse.kdfIterations;\n            }\n        } catch (e) {\n            if (e == null || e.statusCode !== 404) {\n                throw e;\n            }\n        }\n        return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    }\n\n    authingWithApiKey(): boolean {\n        return this.clientId != null && this.clientSecret != null;\n    }\n\n    authingWithSso(): boolean {\n        return this.code != null && this.codeVerifier != null && this.ssoRedirectUrl != null;\n    }\n\n    authingWithPassword(): boolean {\n        return this.email != null && this.masterPasswordHash != null;\n    }\n\n    private async logInHelper(email: string, hashedPassword: string, localHashedPassword: string, code: string,\n        codeVerifier: string, redirectUrl: string, clientId: string, clientSecret: string, key: SymmetricCryptoKey,\n        twoFactorProvider?: TwoFactorProviderType, twoFactorToken?: string, remember?: boolean, captchaToken?: string): Promise<AuthResult> {\n        const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\n        const appId = await this.appIdService.getAppId();\n        const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n        let emailPassword: string[] = [];\n        let codeCodeVerifier: string[] = [];\n        let clientIdClientSecret: [string, string] = [null, null];\n\n        if (email != null && hashedPassword != null) {\n            emailPassword = [email, hashedPassword];\n        } else {\n            emailPassword = null;\n        }\n        if (code != null && codeVerifier != null && redirectUrl != null) {\n            codeCodeVerifier = [code, codeVerifier, redirectUrl];\n        } else {\n            codeCodeVerifier = null;\n        }\n        if (clientId != null && clientSecret != null) {\n            clientIdClientSecret = [clientId, clientSecret];\n        } else {\n            clientIdClientSecret = null;\n        }\n\n        let request: TokenRequest;\n        if (twoFactorToken != null && twoFactorProvider != null) {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, twoFactorProvider,\n                twoFactorToken, remember, captchaToken, deviceRequest);\n        } else if (storedTwoFactorToken != null) {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret,\n                TwoFactorProviderType.Remember, storedTwoFactorToken, false, captchaToken, deviceRequest);\n        } else {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, null,\n                null, false, captchaToken, deviceRequest);\n        }\n\n        const response = await this.apiService.postIdentityToken(request);\n\n        this.clearState();\n        const result = new AuthResult();\n        result.captchaSiteKey = (response as any).siteKey;\n        if (!!result.captchaSiteKey) {\n            return result;\n        }\n        result.twoFactor = !!(response as any).twoFactorProviders2;\n\n        if (result.twoFactor) {\n            // two factor required\n            this.email = email;\n            this.masterPasswordHash = hashedPassword;\n            this.localMasterPasswordHash = localHashedPassword;\n            this.code = code;\n            this.codeVerifier = codeVerifier;\n            this.ssoRedirectUrl = redirectUrl;\n            this.clientId = clientId;\n            this.clientSecret = clientSecret;\n            this.key = this.setCryptoKeys ? key : null;\n            const twoFactorResponse = response as IdentityTwoFactorResponse;\n            this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;\n            result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n            this.captchaToken = twoFactorResponse.captchaToken;\n            return result;\n        }\n\n        const tokenResponse = response as IdentityTokenResponse;\n        result.resetMasterPassword = tokenResponse.resetMasterPassword;\n        result.forcePasswordReset = tokenResponse.forcePasswordReset;\n        if (tokenResponse.twoFactorToken != null) {\n            await this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\n        }\n\n        await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken, clientIdClientSecret);\n        await this.userService.setInformation(this.tokenService.getUserId(), this.tokenService.getEmail(),\n            tokenResponse.kdf, tokenResponse.kdfIterations);\n        if (this.setCryptoKeys) {\n            if (key != null) {\n                await this.cryptoService.setKey(key);\n            }\n            if (localHashedPassword != null) {\n                await this.cryptoService.setKeyHash(localHashedPassword);\n            }\n\n            // Skip this step during SSO new user flow. No key is returned from server.\n            if (code == null || tokenResponse.key != null) {\n                await this.cryptoService.setEncKey(tokenResponse.key);\n\n                // User doesn't have a key pair yet (old account), let's generate one for them\n                if (tokenResponse.privateKey == null) {\n                    try {\n                        const keyPair = await this.cryptoService.makeKeyPair();\n                        await this.apiService.postAccountKeys(new KeysRequest(keyPair[0], keyPair[1].encryptedString));\n                        tokenResponse.privateKey = keyPair[1].encryptedString;\n                    } catch (e) {\n                        // tslint:disable-next-line\n                        this.logService.error(e);\n                    }\n                }\n\n                await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\n            }\n        }\n\n        if (this.vaultTimeoutService != null) {\n            this.vaultTimeoutService.biometricLocked = false;\n        }\n        this.messagingService.send('loggedIn');\n        return result;\n    }\n\n    private clearState(): void {\n        this.key = null;\n        this.email = null;\n        this.masterPasswordHash = null;\n        this.localMasterPasswordHash = null;\n        this.code = null;\n        this.codeVerifier = null;\n        this.ssoRedirectUrl = null;\n        this.clientId = null;\n        this.clientSecret = null;\n        this.twoFactorProvidersData = null;\n        this.selectedTwoFactorProviderType = null;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-entity-users',\n    templateUrl: 'entity-users.component.html',\n})\nexport class EntityUsersComponent implements OnInit {\n    @Input() entity: 'group' | 'collection';\n    @Input() entityId: string;\n    @Input() entityName: string;\n    @Input() organizationId: string;\n    @Output() onEditedUsers = new EventEmitter();\n\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n\n    showSelected = false;\n    loading = true;\n    formPromise: Promise<any>;\n    selectedCount = 0;\n    searchText: string;\n\n    private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        await this.loadUsers();\n        this.loading = false;\n    }\n\n    get users() {\n        if (this.showSelected) {\n            return this.allUsers.filter(u => (u as any).checked);\n        } else {\n            return this.allUsers;\n        }\n    }\n\n    async loadUsers() {\n        const users = await this.apiService.getOrganizationUsers(this.organizationId);\n        this.allUsers = users.data.map(r => r).sort(Utils.getSortFunction(this.i18nService, 'email'));\n        if (this.entity === 'group') {\n            const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach(s => {\n                    const user = users.data.filter(u => u.id === s);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                    }\n                });\n            }\n        } else if (this.entity === 'collection') {\n            const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach(s => {\n                    const user = users.data.filter(u => !u.accessAll && u.id === s.id);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                        (user[0] as any).readOnly = s.readOnly;\n                        (user[0] as any).hidePasswords = s.hidePasswords;\n                    }\n                });\n            }\n        }\n\n        this.allUsers.forEach(u => {\n            if (this.entity === 'collection' && u.accessAll) {\n                (u as any).checked = true;\n            }\n            if ((u as any).checked) {\n                this.selectedCount++;\n            }\n        });\n    }\n\n    check(u: OrganizationUserUserDetailsResponse) {\n        if (this.entity === 'collection' && u.accessAll) {\n            return;\n        }\n        (u as any).checked = !(u as any).checked;\n        this.selectedChanged(u);\n    }\n\n    selectedChanged(u: OrganizationUserUserDetailsResponse) {\n        if ((u as any).checked) {\n            this.selectedCount++;\n        } else {\n            if (this.entity === 'collection') {\n                (u as any).readOnly = false;\n                (u as any).hidePasswords = false;\n            }\n            this.selectedCount--;\n        }\n    }\n\n    filterSelected(showSelected: boolean) {\n        this.showSelected = showSelected;\n    }\n\n    async submit() {\n        try {\n            if (this.entity === 'group') {\n                const selections = this.users.filter(u => (u as any).checked).map(u => u.id);\n                this.formPromise = this.apiService.putGroupUsers(this.organizationId, this.entityId, selections);\n            } else {\n                const selections = this.users.filter(u => (u as any).checked && !u.accessAll)\n                    .map(u => new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords));\n                this.formPromise = this.apiService.putCollectionUsers(this.organizationId, this.entityId, selections);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedUsers'));\n            this.onEditedUsers.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAccessTitle\"> {{'userAccess' | i18n}} <small>{{entityName}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading || !users\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading && users && (users | search:searchText:'name':'email':'id') as searchedUsers\"> <div class=\"d-flex\"> <div class=\"mr-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" name=\"SearchText\" [(ngModel)]=\"searchText\"> </div> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: !showSelected}\" (click)=\"filterSelected(false)\"> {{'all' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: showSelected}\" (click)=\"filterSelected(true)\"> {{'selected' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"selectedCount\">{{selectedCount}}</span> </button> </div> </div> <ng-container *ngIf=\"!searchedUsers.length\"> <hr> {{'noUsersInList' | i18n}} </ng-container> <ng-container *ngIf=\"searchedUsers.length\"> <table class=\"table table-hover table-list mb-0\"> <thead> <tr> <th>&nbsp;</th> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th *ngIf=\"entity === 'collection'\">&nbsp;</th> <th>{{'userType' | i18n}}</th> <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td class=\"table-list-checkbox\" (click)=\"check(u)\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" name=\"{{u.id.substr(0,8)}}_Checked\" [disabled]=\"entity === 'collection' && u.accessAll\" (change)=\"selectedChanged(u)\" appStopProp> </td> <td width=\"30\" (click)=\"check(u)\"> <app-avatar [data]=\"u | userName\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{u.email}} <span class=\"badge badge-secondary\" *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td *ngIf=\"entity === 'collection'\"> <ng-container *ngIf=\"u.accessAll\"> <i class=\"fa fa-th\" title=\"{{'userAccessAllItems' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userAccessAllItems' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"text-center\" *ngIf=\"entity === 'collection'\"> <input type=\"checkbox\" [(ngModel)]=\"u.hidePasswords\" name=\"{{u.id.substr(0,8)}}_HidePasswords\" [disabled]=\"u.accessAll || !u.checked\"> </td> <td class=\"text-center\" *ngIf=\"entity === 'collection'\"> <input type=\"checkbox\" [(ngModel)]=\"u.readOnly\" name=\"{{u.id.substr(0,8)}}_ReadOnly\" [disabled]=\"u.accessAll || !u.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-org-manage',\n    templateUrl: 'manage.component.html',\n})\nexport class ManageComponent implements OnInit {\n    organization: Organization;\n    accessPolicies: boolean = false;\n    accessGroups: boolean = false;\n    accessEvents: boolean = false;\n    accessSso: boolean = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) {}\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.accessPolicies = this.organization.usePolicies;\n            this.accessSso = this.organization.useSso;\n            this.accessEvents = this.organization.useEvents;\n            this.accessGroups = this.organization.useGroups;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\" *ngIf=\"organization\"> <div class=\"card-header\">{{'manage' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"people\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageUsers\"> {{'people' | i18n}} </a> <a routerLink=\"collections\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"> {{'collections' | i18n}} </a> <a routerLink=\"groups\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageGroups && accessGroups\"> {{'groups' | i18n}} </a> <a routerLink=\"policies\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManagePolicies && accessPolicies\"> {{'policies' | i18n}} </a> <a routerLink=\"sso\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageSso && accessSso\"> {{'singleSignOn' | i18n}} </a> <a routerLink=\"events\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canAccessEventLogs && accessEvents\"> {{'eventLogs' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\nimport { ApiKeyResponse } from 'jslib-common/models/response/apiKeyResponse';\n\n@Component({\n    selector: 'app-api-key',\n    templateUrl: 'api-key.component.html',\n})\nexport class ApiKeyComponent {\n    keyType: string;\n    isRotation: boolean;\n    postKey: (entityId: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    entityId: string;\n    scope: string;\n    grantType: string;\n    apiKeyTitle: string;\n    apiKeyWarning: string;\n    apiKeyDescription: string;\n\n    masterPassword: string;\n    formPromise: Promise<ApiKeyResponse>;\n    clientId: string;\n    clientSecret: string;\n\n    constructor(private i18nService: I18nService, private toasterService: ToasterService,\n        private cryptoService: CryptoService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.postKey(this.entityId, request);\n            const response = await this.formPromise;\n            this.clientSecret = response.apiKey;\n            this.clientId = `${this.keyType}.${this.entityId}`;\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{apiKeyTitle | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{apiKeyDescription | i18n}}</p> <ng-container *ngIf=\"!clientSecret\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </ng-container> <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{apiKeyWarning | i18n}}</app-callout> <app-callout type=\"info\" title=\"{{'oauth2ClientCredentials' | i18n}}\" icon=\"fa-key\" *ngIf=\"clientSecret\"> <p class=\"mb-1\"> <strong>client_id:</strong><br> <code>{{clientId}}</code> </p> <p class=\"mb-1\"> <strong>client_secret:</strong><br> <code>{{clientSecret}}</code> </p> <p class=\"mb-1\"> <strong>scope:</strong><br> <code>{{scope}}</code> </p> <p class=\"mb-0\"> <strong>grant_type:</strong><br> <code>{{grantType}}</code> </p> </app-callout> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!clientSecret\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(isRotation ? 'rotateApiKey' : 'viewApiKey') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-purge-vault',\n    templateUrl: 'purge-vault.component.html',\n})\nexport class PurgeVaultComponent {\n    @Input() organizationId?: string = null;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postPurgeCiphers(request, this.organizationId);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('vaultPurged'));\n            if (this.organizationId != null) {\n                this.router.navigate(['organizations', this.organizationId, 'vault']);\n            } else {\n                this.router.navigate(['vault']);\n            }\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{'purgeVault' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{(organizationId ? 'purgeOrgVaultDesc' : 'purgeVaultDesc') | i18n}}</p> <app-callout type=\"warning\">{{'purgeVaultWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'purgeVault' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { BillingResponse } from 'jslib-common/models/response/billingResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\nimport { TransactionType } from 'jslib-common/enums/transactionType';\nimport { VerifyBankRequest } from 'jslib-common/models/request/verifyBankRequest';\n\n@Component({\n    selector: 'app-user-billing',\n    templateUrl: 'user-billing.component.html',\n})\nexport class UserBillingComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    showAdjustPayment = false;\n    showAddCredit = false;\n    billing: BillingResponse;\n    paymentMethodType = PaymentMethodType;\n    transactionType = TransactionType;\n    organizationId: string;\n    verifyAmount1: number;\n    verifyAmount2: number;\n\n    verifyBankPromise: Promise<any>;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        if (this.organizationId != null) {\n            this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n        } else {\n            this.billing = await this.apiService.getUserBilling();\n        }\n        this.loading = false;\n    }\n\n    async verifyBank() {\n        if (this.loading) {\n            return;\n        }\n\n        try {\n            const request = new VerifyBankRequest();\n            request.amount1 = this.verifyAmount1;\n            request.amount2 = this.verifyAmount2;\n            this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(this.organizationId, request);\n            await this.verifyBankPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('verifiedBankAccount'));\n            this.load();\n        } catch { }\n    }\n\n    addCredit() {\n        if (this.paymentSourceInApp) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t('addCredit'), null, null, 'warning');\n            return;\n        }\n        this.showAddCredit = true;\n    }\n\n    closeAddCredit(load: boolean) {\n        this.showAddCredit = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    changePayment() {\n        if (this.paymentSourceInApp) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t('changePaymentMethod'), null, null, 'warning');\n            return;\n        }\n        this.showAdjustPayment = true;\n    }\n\n    closePayment(load: boolean) {\n        this.showAdjustPayment = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isCreditBalance() {\n        return this.billing == null || this.billing.balance <= 0;\n    }\n\n    get creditOrBalance() {\n        return Math.abs(this.billing != null ? this.billing.balance : 0);\n    }\n\n    get paymentSource() {\n        return this.billing != null ? this.billing.paymentSource : null;\n    }\n\n    get paymentSourceInApp() {\n        return this.paymentSource != null &&\n            (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n                this.paymentSource.type === PaymentMethodType.GoogleInApp);\n    }\n\n    get invoices() {\n        return this.billing != null ? this.billing.invoices : null;\n    }\n\n    get transactions() {\n        return this.billing != null ? this.billing.transactions : null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1> {{'billing' | i18n}} </h1> <button (click)=\"load()\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"firstLoaded\" [disabled]=\"loading\"> <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loading}\" aria-hidden=\"true\"></i> {{'refresh' | i18n}} </button> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"billing\"> <h2>{{(isCreditBalance ? 'accountCredit' : 'accountBalance') | i18n}}</h2> <p class=\"text-lg\"><strong>{{creditOrBalance | currency:'$'}}</strong></p> <p>{{'creditAppliedDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\"> {{'addCredit' | i18n}} </button> <app-add-credit [organizationId]=\"organizationId\" (onAdded)=\"closeAddCredit(true)\" (onCanceled)=\"closeAddCredit(false)\" *ngIf=\"showAddCredit\"> </app-add-credit> <h2 class=\"spaced-header\">{{'paymentMethod' | i18n}}</h2> <p *ngIf=\"!paymentSource\">{{'noPaymentMethod' | i18n}}</p> <ng-container *ngIf=\"paymentSource\"> <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\" *ngIf=\"paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\"> <p>{{'verifyBankAccountDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}</p> <form #verifyForm class=\"form-inline\" (ngSubmit)=\"verifyBank()\" [appApiAction]=\"verifyBankPromise\" ngNativeValidate> <label class=\"sr-only\" for=\"verifyAmount1\">{{'amount' | i18n : '1'}}</label> <div class=\"input-group mr-2\"> <div class=\"input-group-prepend\"> <div class=\"input-group-text\">$0.</div> </div> <input type=\"number\" class=\"form-control\" id=\"verifyAmount1\" placeholder=\"xx\" name=\"Amount1\" [(ngModel)]=\"verifyAmount1\" min=\"1\" max=\"99\" step=\"1\" required> </div> <label class=\"sr-only\" for=\"verifyAmount2\">{{'amount' | i18n : '2'}}</label> <div class=\"input-group mr-2\"> <div class=\"input-group-prepend\"> <div class=\"input-group-text\">$0.</div> </div> <input type=\"number\" class=\"form-control\" id=\"verifyAmount2\" placeholder=\"xx\" name=\"Amount2\" [(ngModel)]=\"verifyAmount2\" min=\"1\" max=\"99\" step=\"1\" required> </div> <button type=\"submit\" class=\"btn btn-outline-primary btn-submit\" [disabled]=\"verifyForm.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'verifyBankAccount' | i18n}}</span> </button> </form> </app-callout> <p> <i class=\"fa fa-fw\" [ngClass]=\"{'fa-credit-card': paymentSource.type === paymentMethodType.Card,\n                    'fa-university': paymentSource.type === paymentMethodType.BankAccount,\n                    'fa-money': paymentSource.type === paymentMethodType.Check,\n                    'fa-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n                    'fa-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n                    'fa-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp}\"></i> <span *ngIf=\"paymentSourceInApp\">{{'inAppPurchase' | i18n}}</span> {{paymentSource.description}} </p> </ng-container> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\"> {{(paymentSource ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}} </button> <app-adjust-payment [currentType]=\"paymentSource != null ? paymentSource.type : null\" [organizationId]=\"organizationId\" (onAdjusted)=\"closePayment(true)\" (onCanceled)=\"closePayment(false)\" *ngIf=\"showAdjustPayment\"> </app-adjust-payment> <h2 class=\"spaced-header\">{{'invoices' | i18n}}</h2> <p *ngIf=\"!invoices || !invoices.length\">{{'noInvoices' | i18n}}</p> <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\"> <tbody> <tr *ngFor=\"let i of invoices\"> <td>{{i.date | date:'mediumDate'}}</td> <td> <a href=\"{{i.pdfUrl}}\" target=\"_blank\" rel=\"noopener\" class=\"mr-2\" appA11yTitle=\"{{'downloadInvoice' | i18n}}\"> <i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i></a> <a href=\"{{i.url}}\" target=\"_blank\" rel=\"noopener\" title=\"{{'viewInvoice' | i18n}}\"> {{'invoiceNumber' | i18n : i.number}}</a> </td> <td>{{i.amount | currency:'$'}}</td> <td> <span *ngIf=\"i.paid\"> <i class=\"fa fa-check text-success\" aria-hidden=\"true\"></i> {{'paid' | i18n}} </span> <span *ngIf=\"!i.paid\"> <i class=\"fa fa-exclamation-circle text-muted\" aria-hidden=\"true\"></i> {{'unpaid' | i18n}} </span> </td> </tr> </tbody> </table> <h2 class=\"spaced-header\">{{'transactions' | i18n}}</h2> <p *ngIf=\"!transactions || !transactions.length\">{{'noTransactions' | i18n}}</p> <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\"> <tbody> <tr *ngFor=\"let t of transactions\"> <td>{{t.createdDate | date:'mediumDate'}}</td> <td> <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\"> {{'chargeNoun' | i18n}} </span> <span *ngIf=\"t.type === transactionType.Refund\">{{'refundNoun' | i18n}}</span> </td> <td> <i class=\"fa fa-fw\" *ngIf=\"t.paymentMethodType\" aria-hidden=\"true\" [ngClass]=\"{\n                            'fa-credit-card': t.paymentMethodType === paymentMethodType.Card,\n                            'fa-university': t.paymentMethodType === paymentMethodType.BankAccount ||\n                                t.paymentMethodType === paymentMethodType.WireTransfer,\n                            'fa-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n                            'fa-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n                        }\"></i> {{t.details}} </td> <td [ngClass]=\"{'text-strike': t.refunded}\" title=\"{{(t.refunded ? 'refunded' : '') | i18n}}\"> {{t.amount | currency:'$'}}</td> </tr> </tbody> </table> <small class=\"text-muted\">* {{'chargesStatement' | i18n : 'BITWARDEN'}}</small> </ng-container> ","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PayPalConfig } from 'jslib-common/abstractions/environment.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { BitPayInvoiceRequest } from 'jslib-common/models/request/bitPayInvoiceRequest';\n\n@Component({\n    selector: 'app-add-credit',\n    templateUrl: 'add-credit.component.html',\n})\nexport class AddCreditComponent implements OnInit {\n    @Input() creditAmount: string;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.PayPal;\n    @Input() organizationId: string;\n    @Output() onAdded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild('ppButtonForm', { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n    paymentMethodType = PaymentMethodType;\n    ppButtonFormAction: string;\n    ppButtonBusinessId: string;\n    ppButtonCustomField: string;\n    ppLoading = false;\n    subject: string;\n    returnUrl: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private name: string;\n    private email: string;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService) {\n        const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n        this.ppButtonFormAction = payPalConfig.buttonAction;\n        this.ppButtonBusinessId = payPalConfig.businessId;\n    }\n\n    async ngOnInit() {\n        if (this.organizationId != null) {\n            if (this.creditAmount == null) {\n                this.creditAmount = '20.00';\n            }\n            this.ppButtonCustomField = 'organization_id:' + this.organizationId;\n            const org = await this.userService.getOrganization(this.organizationId);\n            if (org != null) {\n                this.subject = org.name;\n                this.name = org.name;\n            }\n        } else {\n            if (this.creditAmount == null) {\n                this.creditAmount = '10.00';\n            }\n            this.userId = await this.userService.getUserId();\n            this.subject = await this.userService.getEmail();\n            this.email = this.subject;\n            this.ppButtonCustomField = 'user_id:' + this.userId;\n        }\n        this.ppButtonCustomField += ',account_credit:1';\n        this.returnUrl = window.location.href;\n    }\n\n    async submit() {\n        if (this.creditAmount == null || this.creditAmount === '') {\n            return;\n        }\n\n        if (this.method === PaymentMethodType.PayPal) {\n            this.ppButtonFormRef.nativeElement.submit();\n            this.ppLoading = true;\n            return;\n        }\n        if (this.method === PaymentMethodType.BitPay) {\n            try {\n                const req = new BitPayInvoiceRequest();\n                req.email = this.email;\n                req.name = this.name;\n                req.credit = true;\n                req.amount = this.creditAmountNumber;\n                req.organizationId = this.organizationId;\n                req.userId = this.userId;\n                req.returnUrl = this.returnUrl;\n                this.formPromise = this.apiService.postBitPayInvoice(req);\n                const bitPayUrl: string = await this.formPromise;\n                this.platformUtilsService.launchUri(bitPayUrl);\n            } catch { }\n            return;\n        }\n        try {\n            this.onAdded.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    formatAmount() {\n        try {\n            if (this.creditAmount != null && this.creditAmount !== '') {\n                const floatAmount = Math.abs(parseFloat(this.creditAmount));\n                if (floatAmount > 0) {\n                    this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n                        .toFixed(2).toString();\n                    return;\n                }\n            }\n        } catch { }\n        this.creditAmount = '';\n    }\n\n    get creditAmountNumber(): number {\n        if (this.creditAmount != null && this.creditAmount !== '') {\n            try {\n                return parseFloat(this.creditAmount);\n            } catch { }\n        }\n        return null;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'addCredit' | i18n}}</h3> <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\"> <div class=\"form-check form-check-inline\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-paypal\" [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\"> <label class=\"form-check-label\" for=\"credit-method-paypal\"> <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label> </div> <div class=\"form-check form-check-inline\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-bitcoin\" [value]=\"paymentMethodType.BitPay\" [(ngModel)]=\"method\"> <label class=\"form-check-label\" for=\"credit-method-bitcoin\"> <i class=\"fa fa-fw fa-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label> </div> </div> <div class=\"form-group\"> <div class=\"row\"> <div class=\"col-4\"> <label for=\"creditAmount\">{{'amount' | i18n}}</label> <div class=\"input-group\"> <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div> <input id=\"creditAmount\" class=\"form-control\" type=\"text\" name=\"CreditAmount\" [(ngModel)]=\"creditAmount\" (blur)=\"formatAmount()\" required> </div> </div> </div> <small class=\"form-text text-muted\">{{'creditDelayed' | i18n}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> <form #ppButtonForm action=\"{{ppButtonFormAction}}\" method=\"post\" target=\"_top\"> <input type=\"hidden\" name=\"cmd\" value=\"_xclick\"> <input type=\"hidden\" name=\"business\" value=\"{{ppButtonBusinessId}}\"> <input type=\"hidden\" name=\"button_subtype\" value=\"services\"> <input type=\"hidden\" name=\"no_note\" value=\"1\"> <input type=\"hidden\" name=\"no_shipping\" value=\"1\"> <input type=\"hidden\" name=\"rm\" value=\"1\"> <input type=\"hidden\" name=\"return\" value=\"{{returnUrl}}\"> <input type=\"hidden\" name=\"cancel_return\" value=\"{{returnUrl}}\"> <input type=\"hidden\" name=\"currency_code\" value=\"USD\"> <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\"> <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\"> <input type=\"hidden\" name=\"amount\" value=\"{{creditAmount}}\"> <input type=\"hidden\" name=\"custom\" value=\"{{ppButtonCustomField}}\"> <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\"> <input type=\"hidden\" name=\"item_number\" value=\"{{subject}}\"> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PaymentRequest } from 'jslib-common/models/request/paymentRequest';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\n@Component({\n    selector: 'app-adjust-payment',\n    templateUrl: 'adjust-payment.component.html',\n})\nexport class AdjustPaymentComponent {\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n    @Input() currentType?: PaymentMethodType;\n    @Input() organizationId: string;\n    @Output() onAdjusted = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    paymentMethodType = PaymentMethodType;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async submit() {\n        try {\n            const request = new PaymentRequest();\n            this.formPromise = this.paymentComponent.createPaymentToken().then(result => {\n                request.paymentToken = result[0];\n                request.paymentMethodType = result[1];\n                request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n                request.country = this.taxInfoComponent.taxInfo.country;\n                if (this.organizationId == null) {\n                    return this.apiService.postAccountPayment(request);\n                } else {\n                    request.taxId = this.taxInfoComponent.taxInfo.taxId;\n                    request.state = this.taxInfoComponent.taxInfo.state;\n                    request.line1 = this.taxInfoComponent.taxInfo.line1;\n                    request.line2 = this.taxInfoComponent.taxInfo.line2;\n                    request.city = this.taxInfoComponent.taxInfo.city;\n                    request.state = this.taxInfoComponent.taxInfo.state;\n                    return this.apiService.postOrganizationPayment(this.organizationId, request);\n                }\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedPaymentMethod'));\n            this.onAdjusted.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    changeCountry() {\n        if (this.taxInfoComponent.taxInfo.country === 'US') {\n            this.paymentComponent.hideBank = !this.organizationId;\n        } else {\n            this.paymentComponent.hideBank = true;\n            if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n                this.paymentComponent.method = PaymentMethodType.Card;\n                this.paymentComponent.changeMethod();\n            }\n        }\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{(currentType != null ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}</h3> <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment> <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { StorageRequest } from 'jslib-common/models/request/storageRequest';\n\nimport { PaymentResponse } from 'jslib-common/models/response/paymentResponse';\n\nimport { PaymentComponent } from './payment.component';\n\n@Component({\n    selector: 'app-adjust-storage',\n    templateUrl: 'adjust-storage.component.html',\n})\nexport class AdjustStorageComponent {\n    @Input() storageGbPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n    storageAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private router: Router,\n        private activatedRoute: ActivatedRoute) { }\n\n    async submit() {\n        try {\n            const request = new StorageRequest();\n            request.storageGbAdjustment = this.storageAdjustment;\n            if (!this.add) {\n                request.storageGbAdjustment *= -1;\n            }\n\n            let paymentFailed = false;\n            const action = async () => {\n                let response: Promise<PaymentResponse>;\n                if (this.organizationId == null) {\n                    response = this.formPromise = this.apiService.postAccountStorage(request);\n                } else {\n                    response = this.formPromise = this.apiService.postOrganizationStorage(this.organizationId, request);\n                }\n                const result = await response;\n                if (result != null && result.paymentIntentClientSecret != null) {\n                    try {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    } catch {\n                        paymentFailed = true;\n                    }\n                }\n            };\n            this.formPromise = action();\n            await this.formPromise;\n            this.onAdjusted.emit(this.storageAdjustment);\n            if (paymentFailed) {\n                this.toasterService.popAsync({\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\n                    type: 'warning',\n                    timeout: 10000,\n                });\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\n            } else {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('adjustedStorage', request.storageGbAdjustment.toString()));\n            }\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedStorageTotal(): number {\n        return this.storageGbPrice * this.storageAdjustment;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{(add ? 'addStorage' : 'removeStorage') | i18n}}</h3> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"storageAdjustment\">{{(add ? 'gbStorageAdd' : 'gbStorageRemove') | i18n}}</label> <input id=\"storageAdjustment\" class=\"form-control\" type=\"number\" name=\"StroageGbAdjustment\" [(ngModel)]=\"storageAdjustment\" min=\"0\" max=\"99\" step=\"1\" required> </div> </div> <div *ngIf=\"add\" class=\"mb-3\"> <strong>{{'total' | i18n}}:</strong> {{storageAdjustment || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{adjustedStorageTotal | currency:'$'}} /{{interval | i18n}} </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> <small class=\"d-block text-muted mt-3\"> {{(add ? 'storageAddNote' : 'storageRemoveNote') | i18n}} </small> </div> </form> <app-payment [showMethods]=\"false\"></app-payment> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-update-license',\n    templateUrl: 'update-license.component.html',\n})\nexport class UpdateLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onUpdated = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async submit() {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        try {\n            const fd = new FormData();\n            fd.append('license', files[0]);\n\n            let updatePromise: Promise<any> = null;\n            if (this.organizationId == null) {\n                updatePromise = this.apiService.postAccountLicense(fd);\n            } else {\n                updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n            }\n\n            this.formPromise = updatePromise.then(() => {\n                return this.apiService.refreshIdentityToken();\n            });\n\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedLicense'));\n            this.onUpdated.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\" class=\"sr-only\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : (!organizationId ? 'bitwarden_premium_license.json' : 'bitwarden_organization_license.json')}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </form> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { UpdateTwoFactorDuoRequest } from 'jslib-common/models/request/updateTwoFactorDuoRequest';\nimport { TwoFactorDuoResponse } from 'jslib-common/models/response/twoFactorDuoResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-duo',\n    templateUrl: 'two-factor-duo.component.html',\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Duo;\n    ikey: string;\n    skey: string;\n    host: string;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorDuoRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.integrationKey = this.ikey;\n        request.secretKey = this.skey;\n        request.host = this.host;\n\n        return super.enable(async () => {\n            if (this.organizationId != null) {\n                this.formPromise = this.apiService.putTwoFactorOrganizationDuo(this.organizationId, request);\n            } else {\n                this.formPromise = this.apiService.putTwoFactorDuo(request);\n            }\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private processResponse(response: TwoFactorDuoResponse) {\n        this.ikey = response.integrationKey;\n        this.skey = response.secretKey;\n        this.host = response.host;\n        this.enabled = response.enabled;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" title=\"2faDuoTitle\"> {{'twoStepLogin' | i18n}} <small>Duo</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\" autocomplete=\"off\"> <div class=\"modal-body\"> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\"> <strong>{{'twoFactorDuoIntegrationKey' | i18n}}:</strong> {{ikey}} <br> <strong>{{'twoFactorDuoSecretKey' | i18n}}:</strong> {{skey}} <br> <strong>{{'twoFactorDuoApiHostname' | i18n}}:</strong> {{host}} </ng-container> <ng-container *ngIf=\"!enabled\"> <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\"> <p>{{'twoFactorDuoDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"ikey\">{{'twoFactorDuoIntegrationKey' | i18n}}</label> <input id=\"ikey\" type=\"text\" name=\"IntegrationKey\" class=\"form-control\" [(ngModel)]=\"ikey\" required appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"skey\">{{'twoFactorDuoSecretKey' | i18n}}</label> <input id=\"skey\" type=\"password\" name=\"SecretKey\" class=\"form-control\" [(ngModel)]=\"skey\" required appInputVerbatim autocomplete=\"new-password\"> </div> <div class=\"form-group\"> <label for=\"host\">{{'twoFactorDuoApiHostname' | i18n}}</label> <input id=\"host\" type=\"text\" name=\"Host\" class=\"form-control\" [(ngModel)]=\"host\" placeholder=\"{{'ex' | i18n}} api-xxxxxxxx.duosecurity.com\" required appInputVerbatim> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { TwoFactorProviders } from 'jslib-common/services/auth.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { ModalRef } from 'jslib-angular/components/modal/modal.ref';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorAuthenticatorComponent } from './two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './two-factor-recovery.component';\nimport { TwoFactorWebAuthnComponent } from './two-factor-webauthn.component';\nimport { TwoFactorYubiKeyComponent } from './two-factor-yubikey.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: 'two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent implements OnInit {\n    @ViewChild('recoveryTemplate', { read: ViewContainerRef, static: true }) recoveryModalRef: ViewContainerRef;\n    @ViewChild('authenticatorTemplate', { read: ViewContainerRef, static: true }) authenticatorModalRef: ViewContainerRef;\n    @ViewChild('yubikeyTemplate', { read: ViewContainerRef, static: true }) yubikeyModalRef: ViewContainerRef;\n    @ViewChild('duoTemplate', { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n    @ViewChild('emailTemplate', { read: ViewContainerRef, static: true }) emailModalRef: ViewContainerRef;\n    @ViewChild('webAuthnTemplate', { read: ViewContainerRef, static: true }) webAuthnModalRef: ViewContainerRef;\n\n    organizationId: string;\n    providers: any[] = [];\n    canAccessPremium: boolean;\n    showPolicyWarning = false;\n    loading = true;\n    modal: ModalRef;\n\n    constructor(protected apiService: ApiService, protected userService: UserService,\n        protected modalService: ModalService, protected messagingService: MessagingService,\n        protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n\n        for (const key in TwoFactorProviders) {\n            if (!TwoFactorProviders.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const p = (TwoFactorProviders as any)[key];\n            if (this.filterProvider(p.type)) {\n                continue;\n            }\n\n            this.providers.push({\n                type: p.type,\n                name: p.name,\n                description: p.description,\n                enabled: false,\n                premium: p.premium,\n                sort: p.sort,\n            });\n        }\n\n        this.providers.sort((a: any, b: any) => a.sort - b.sort);\n        await this.load();\n    }\n\n    async load() {\n        this.loading = true;\n        const providerList = await this.getTwoFactorProviders();\n        providerList.data.forEach(p => {\n            this.providers.forEach(p2 => {\n                if (p.type === p2.type) {\n                    p2.enabled = p.enabled;\n                }\n            });\n        });\n        this.evaluatePolicies();\n        this.loading = false;\n    }\n\n    async manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.Authenticator:\n                const authComp = await this.openModal(this.authenticatorModalRef, TwoFactorAuthenticatorComponent);\n                authComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n                });\n                break;\n            case TwoFactorProviderType.Yubikey:\n                const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n                yubiComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n                });\n                break;\n            case TwoFactorProviderType.Duo:\n                const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Duo);\n                });\n                break;\n            case TwoFactorProviderType.Email:\n                const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n                emailComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Email);\n                });\n                break;\n            case TwoFactorProviderType.WebAuthn:\n                const webAuthnComp = await this.openModal(this.webAuthnModalRef, TwoFactorWebAuthnComponent);\n                webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    recoveryCode() {\n        this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n    }\n\n    async premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorProviders();\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type === TwoFactorProviderType.OrganizationDuo;\n    }\n\n    protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n        const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n        this.modal = modal;\n\n        return childComponent;\n    }\n\n    protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n        if (!enabled && this.modal != null) {\n            this.modal.close();\n        }\n        this.providers.forEach(p => {\n            if (p.type === type) {\n                p.enabled = enabled;\n            }\n        });\n        this.evaluatePolicies();\n    }\n\n    private async evaluatePolicies() {\n        if (this.organizationId == null && this.providers.filter(p => p.enabled).length === 1) {\n            this.showPolicyWarning = await this.policyService.policyAppliesToUser(PolicyType.TwoFactorAuthentication);\n        } else {\n            this.showPolicyWarning = false;\n        }\n    }\n}\n","<div class=\"page-header\"> <h1>{{'twoStepLogin' | i18n}}</h1> </div> <p *ngIf=\"!organizationId\">{{'twoStepLoginDesc' | i18n}}</p> <p *ngIf=\"organizationId\">{{'twoStepLoginOrganizationDesc' | i18n}}</p> <app-callout type=\"warning\" *ngIf=\"!organizationId\"> <p>{{'twoStepLoginRecoveryWarning' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"recoveryCode()\">{{'viewRecoveryCode' | i18n}}</button> </app-callout> <h2 [ngClass]=\"{'mt-5':!organizationId}\"> {{'providers' | i18n}} <small *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin fa-fw text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h2> <app-callout type=\"warning\" *ngIf=\"showPolicyWarning\"> {{'twoStepLoginPolicyUserWarning' | i18n}} </app-callout> <ul class=\"list-group list-group-2fa\"> <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\"> <div class=\"logo-2fa d-flex justify-content-center\"> <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\"> </div> <div class=\"mx-4\"> <h3 class=\"mb-0\"> {{p.name}} <ng-container *ngIf=\"p.enabled\"> <i class=\"fa fa-check text-success fa-fw\" title=\"{{'enabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enabled' | i18n}}</span> </ng-container> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium && p.premium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </h3> {{p.description}} </div> <div class=\"ml-auto\"> <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" [disabled]=\"!canAccessPremium && p.premium\" (click)=\"manage(p.type)\"> {{'manage' | i18n}} </button> </div> </li> </ul> <ng-template #authenticatorTemplate></ng-template> <ng-template #recoveryTemplate></ng-template> <ng-template #duoTemplate></ng-template> <ng-template #emailTemplate></ng-template> <ng-template #yubikeyTemplate></ng-template> <ng-template #webAuthnTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ExportComponent as BaseExportComponent } from 'jslib-angular/components/export.component';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\n@Component({\n    selector: 'app-export',\n    templateUrl: 'export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    organizationId: string;\n\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService, policyService: PolicyService) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService, policyService, window);\n    }\n\n    protected saved() {\n        super.saved();\n        this.masterPassword = null;\n        this.platformUtilsService.showToast('success', null, this.i18nService.t('exportSuccess'));\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" ngNativeValidate [appApiAction]=\"formPromise\"> <div class=\"page-header\"> <h1>{{'exportVault' | i18n}}</h1> </div> <app-callout type=\"error\" title=\"{{'vaultExportDisabled' | i18n}}\" *ngIf=\"disabledByPolicy\"> {{'personalVaultExportPolicyInEffect' | i18n}} </app-callout> <p>{{'exportMasterPassword' | i18n}}</p> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"format\">{{'fileFormat' | i18n}}</label> <select class=\"form-control\" id=\"format\" name=\"Format\" [(ngModel)]=\"format\" [disabled]=\"disabledByPolicy\"> <option value=\"json\">.json</option> <option value=\"csv\">.csv</option> <option value=\"encrypted_json\">.json (Encrypted)</option> </select> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim [disabled]=\"disabledByPolicy\"> </div> </div> <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || disabledByPolicy\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\" *ngIf=\"form.loading\"></i> <span *ngIf=\"!form.loading\">{{'exportVault' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: 'exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    exposedPasswordMap = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected auditService: AuditService,\n        modalService: ModalService, messagingService: MessagingService,\n        userService: UserService, passwordRepromptService: PasswordRepromptService) {\n        super(modalService, userService, messagingService, passwordRepromptService, true);\n    }\n\n    ngOnInit() {\n        this.checkAccess();\n    }\n\n    async load() {\n        if (await this.checkAccess()) {\n            super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const exposedPasswordCiphers: CipherView[] = [];\n        const promises: Promise<void>[] = [];\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            const promise = this.auditService.passwordLeaked(c.login.password).then(exposedCount => {\n                if (exposedCount > 0) {\n                    exposedPasswordCiphers.push(c);\n                    this.exposedPasswordMap.set(c.id, exposedCount);\n                }\n            });\n            promises.push(promise);\n        });\n        await Promise.all(promises);\n        this.ciphers = exposedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from the org view;\n        return true;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'exposedPasswordsReport' | i18n}}</h1> </div> <p>{{'exposedPasswordsReportDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\" (click)=\"load()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'checkExposedPasswords' | i18n}}</span> </button> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noExposedPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'exposedPasswordsFound' | i18n}}\"> {{'exposedPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-warning\"> {{'exposedXTimes' | i18n : (exposedPasswordMap.get(c.id) | number)}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherCreateRequest } from 'jslib-common/models/request/cipherCreateRequest';\nimport { CipherRequest } from 'jslib-common/models/request/cipherRequest';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    templateUrl: '../../vault/add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    organization: Organization;\n    originalCipher: Cipher = null;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\n        private apiService: ApiService, messagingService: MessagingService,\n        eventService: EventService, policyService: PolicyService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\n            eventService, policyService);\n    }\n\n    protected allowOwnershipAssignment() {\n        if (this.ownershipOptions != null && (this.ownershipOptions.length > 1 || !this.allowPersonal)) {\n            if (this.organization != null) {\n                return this.cloneMode && this.organization.canEditAnyCollection;\n            } else {\n                return !this.editMode || this.cloneMode;\n            }\n        }\n        return false;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.canEditAnyCollection) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canEditAnyCollection) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        const data = new CipherData(response);\n        this.originalCipher = new Cipher(data);\n        return new Cipher(data);\n    }\n\n    protected encryptCipher() {\n        if (!this.organization.canEditAnyCollection) {\n            return super.encryptCipher();\n        }\n        return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n    }\n\n    protected async saveCipher(cipher: Cipher) {\n        if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n            return super.saveCipher(cipher);\n        }\n        if (this.editMode && !this.cloneMode) {\n            const request = new CipherRequest(cipher);\n            return this.apiService.putCipherAdmin(this.cipherId, request);\n        } else {\n            const request = new CipherCreateRequest(cipher);\n            return this.apiService.postCipherAdmin(request);\n        }\n    }\n\n    protected async deleteCipher() {\n        if (!this.organization.canEditAnyCollection) {\n            return super.deleteCipher();\n        }\n        return this.cipher.isDeleted ? this.apiService.deleteCipherAdmin(this.cipherId)\n            : this.apiService.putDeleteCipherAdmin(this.cipherId);\n    }\n}\n","import { CardData } from '../data/cardData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { CardView } from '../view/cardView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Card extends Domain {\n    cardholderName: EncString;\n    brand: EncString;\n    number: EncString;\n    expMonth: EncString;\n    expYear: EncString;\n    code: EncString;\n\n    constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n        return this.decryptObj(new CardView(this), {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, orgId, encKey);\n    }\n\n    toCardData(): CardData {\n        const c = new CardData();\n        this.buildDataModel(this, c, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        });\n        return c;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldData } from '../data/fieldData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { FieldView } from '../view/fieldView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Field extends Domain {\n    name: EncString;\n    value: EncString;\n    type: FieldType;\n\n    constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n        this.buildDomainModel(this, obj, {\n            name: null,\n            value: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n        return this.decryptObj(new FieldView(this), {\n            name: null,\n            value: null,\n        }, orgId, encKey);\n    }\n\n    toFieldData(): FieldData {\n        const f = new FieldData();\n        this.buildDataModel(this, f, {\n            name: null,\n            value: null,\n            type: null,\n        }, ['type']);\n        return f;\n    }\n}\n","import { IdentityData } from '../data/identityData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { IdentityView } from '../view/identityView';\n\nexport class Identity extends Domain {\n    title: EncString;\n    firstName: EncString;\n    middleName: EncString;\n    lastName: EncString;\n    address1: EncString;\n    address2: EncString;\n    address3: EncString;\n    city: EncString;\n    state: EncString;\n    postalCode: EncString;\n    country: EncString;\n    company: EncString;\n    email: EncString;\n    phone: EncString;\n    ssn: EncString;\n    username: EncString;\n    passportNumber: EncString;\n    licenseNumber: EncString;\n\n    constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n        return this.decryptObj(new IdentityView(this), {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, orgId, encKey);\n    }\n\n    toIdentityData(): IdentityData {\n        const i = new IdentityData();\n        this.buildDataModel(this, i, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        });\n        return i;\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginData } from '../data/loginData';\n\nimport { LoginView } from '../view/loginView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Login extends Domain {\n    uris: LoginUri[];\n    username: EncString;\n    password: EncString;\n    passwordRevisionDate?: Date;\n    totp: EncString;\n    autofillOnPageLoad: boolean;\n\n    constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.passwordRevisionDate = obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n        this.autofillOnPageLoad = obj.autofillOnPageLoad;\n        this.buildDomainModel(this, obj, {\n            username: null,\n            password: null,\n            totp: null,\n        }, alreadyEncrypted, []);\n\n        if (obj.uris) {\n            this.uris = [];\n            obj.uris.forEach(u => {\n                this.uris.push(new LoginUri(u, alreadyEncrypted));\n            });\n        }\n    }\n\n    async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n        const view = await this.decryptObj(new LoginView(this), {\n            username: null,\n            password: null,\n            totp: null,\n        }, orgId, encKey);\n\n        if (this.uris != null) {\n            view.uris = [];\n            for (let i = 0; i < this.uris.length; i++) {\n                const uri = await this.uris[i].decrypt(orgId, encKey);\n                view.uris.push(uri);\n            }\n        }\n\n        return view;\n    }\n\n    toLoginData(): LoginData {\n        const l = new LoginData();\n        l.passwordRevisionDate = this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n        l.autofillOnPageLoad = this.autofillOnPageLoad;\n        this.buildDataModel(this, l, {\n            username: null,\n            password: null,\n            totp: null,\n        });\n\n        if (this.uris != null && this.uris.length > 0) {\n            l.uris = [];\n            this.uris.forEach(u => {\n                l.uris.push(u.toLoginUriData());\n            });\n        }\n\n        return l;\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriData } from '../data/loginUriData';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class LoginUri extends Domain {\n    uri: EncString;\n    match: UriMatchType;\n\n    constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.match = obj.match;\n        this.buildDomainModel(this, obj, {\n            uri: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n        return this.decryptObj(new LoginUriView(this), {\n            uri: null,\n        }, orgId, encKey);\n    }\n\n    toLoginUriData(): LoginUriData {\n        const u = new LoginUriData();\n        this.buildDataModel(this, u, {\n            uri: null,\n        }, ['match']);\n        return u;\n    }\n}\n","import { View } from './view';\n\nimport { Password } from '../domain/password';\n\nexport class PasswordHistoryView implements View {\n    password: string = null;\n    lastUsedDate: Date = null;\n\n    constructor(ph?: Password) {\n        if (!ph) {\n            return;\n        }\n\n        this.lastUsedDate = ph.lastUsedDate;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteData } from '../data/secureNoteData';\n\nimport Domain from './domainBase';\n\nimport { SecureNoteView } from '../view/secureNoteView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class SecureNote extends Domain {\n    type: SecureNoteType;\n\n    constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n        return Promise.resolve(new SecureNoteView(this));\n    }\n\n    toSecureNoteData(): SecureNoteData {\n        const n = new SecureNoteData();\n        n.type = this.type;\n        return n;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { ImportOption, ImportService } from 'jslib-common/abstractions/import.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport Swal, { SweetAlertIcon } from 'sweetalert2';\n\n@Component({\n    selector: 'app-import',\n    templateUrl: 'import.component.html',\n})\nexport class ImportComponent implements OnInit {\n    featuredImportOptions: ImportOption[];\n    importOptions: ImportOption[];\n    format: string = null;\n    fileContents: string;\n    formPromise: Promise<Error>;\n    loading: boolean = false;\n    importBlockedByPolicy: boolean = false;\n\n    protected organizationId: string = null;\n    protected successNavigate: any[] = ['vault'];\n\n    constructor(protected i18nService: I18nService, protected toasterService: ToasterService,\n        protected importService: ImportService, protected router: Router,\n        protected platformUtilsService: PlatformUtilsService, protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.setImportOptions();\n        this.importOptions.sort((a, b) => {\n            if (a.name == null && b.name != null) {\n                return -1;\n            }\n            if (a.name != null && b.name == null) {\n                return 1;\n            }\n            if (a.name == null && b.name == null) {\n                return 0;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(a.name, b.name) :\n                a.name.localeCompare(b.name);\n        });\n\n        this.importBlockedByPolicy = await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n    }\n\n    async submit() {\n        if (this.importBlockedByPolicy) {\n            this.platformUtilsService.showToast('error', null,\n                this.i18nService.t('personalOwnershipPolicyInEffectImports'));\n            return;\n        }\n\n        this.loading = true;\n\n        const importer = this.importService.getImporter(this.format, this.organizationId);\n        if (importer === null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFormat'));\n            this.loading = false;\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if ((files == null || files.length === 0) && (this.fileContents == null || this.fileContents === '')) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            this.loading = false;\n            return;\n        }\n\n        let fileContents = this.fileContents;\n        if (files != null && files.length > 0) {\n            try {\n                const content = await this.getFileContents(files[0]);\n                if (content != null) {\n                    fileContents = content;\n                }\n            } catch { }\n        }\n\n        if (fileContents == null || fileContents === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            this.loading = false;\n            return;\n        }\n\n        try {\n            this.formPromise = this.importService.import(importer, fileContents, this.organizationId);\n            const error = await this.formPromise;\n            if (error != null) {\n                this.error(error);\n                this.loading = false;\n                return;\n            }\n            this.toasterService.popAsync('success', null, this.i18nService.t('importSuccess'));\n            this.router.navigate(this.successNavigate);\n        } catch { }\n\n        this.loading = false;\n    }\n\n    getFormatInstructionTitle() {\n        if (this.format == null) {\n            return null;\n        }\n\n        const results = this.featuredImportOptions.concat(this.importOptions).filter(o => o.id === this.format);\n        if (results.length > 0) {\n            return this.i18nService.t('instructionsFor', results[0].name);\n        }\n        return null;\n    }\n\n    protected setImportOptions() {\n        this.featuredImportOptions = [{\n            id: null,\n            name: '-- ' + this.i18nService.t('select') + ' --',\n        }, ...this.importService.featuredImportOptions];\n        this.importOptions = this.importService.regularImportOptions;\n    }\n\n    private async error(error: Error) {\n        await Swal.fire({\n            heightAuto: false,\n            buttonsStyling: false,\n            icon: 'error' as SweetAlertIcon,\n            iconHtml: `<i class=\"swal-custom-icon fa fa-bolt text-danger\"></i>`,\n            input: 'textarea',\n            inputValue: error.message,\n            inputAttributes: {\n                'readonly': 'true',\n            },\n            titleText: this.i18nService.t('importError'),\n            text: this.i18nService.t('importErrorDesc'),\n            showConfirmButton: true,\n            confirmButtonText: this.i18nService.t('ok'),\n            onOpen: popupEl => {\n                popupEl.querySelector('.swal2-textarea').scrollTo(0, 0);\n             },\n        });\n    }\n\n    private getFileContents(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = evt => {\n                if (this.format === 'lastpasscsv' && file.type === 'text/html') {\n                    const parser = new DOMParser();\n                    const doc = parser.parseFromString((evt.target as any).result, 'text/html');\n                    const pre = doc.querySelector('pre');\n                    if (pre != null) {\n                        resolve(pre.textContent);\n                        return;\n                    }\n                    reject();\n                    return;\n                }\n\n                resolve((evt.target as any).result);\n            };\n            reader.onerror = () => {\n                reject();\n            };\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'importData' | i18n}}</h1> </div> <app-callout type=\"info\" *ngIf=\"importBlockedByPolicy\"> {{'personalOwnershipPolicyInEffectImports' | i18n}} </app-callout> <form #form (ngSubmit)=\"submit()\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"type\">1. {{'selectFormat' | i18n}}</label> <select id=\"type\" name=\"Format\" [(ngModel)]=\"format\" class=\"form-control\" [disabled]=\"importBlockedByPolicy\" required> <option *ngFor=\"let o of featuredImportOptions\" [ngValue]=\"o.id\">{{o.name}}</option> <ng-container *ngIf=\"importOptions && importOptions.length\"> <option value=\"-\" disabled=\"disabled\"></option> <option *ngFor=\"let o of importOptions\" [ngValue]=\"o.id\">{{o.name}}</option> </ng-container> </select> </div> </div> </div> <app-callout type=\"info\" title=\"{{getFormatInstructionTitle()}}\" *ngIf=\"format\"> <ng-container *ngIf=\"format === 'bitwardencsv' || format === 'bitwardenjson'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/export-your-data/\"> https://help.bitwarden.com/article/export-your-data/</a> </ng-container> <ng-container *ngIf=\"format === 'lastpasscsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-lastpass/\"> https://help.bitwarden.com/article/import-from-lastpass/</a> </ng-container> <ng-container *ngIf=\"format === 'keepassxcsv'\"> Using the KeePassX desktop application, navigate to \"Database\" &rarr; \"Export to CSV file\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'aviracsv'\"> In the Avira web vault, go to \"Settings\" &rarr; \"My Data\" &rarr; \"Export data\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'blurcsv'\"> In the Blur web vault, click your username at the top and go to \"Settings\" &rarr; \"Export Data\", then click \"Export CSV\" for your \"Accounts\". </ng-container> <ng-container *ngIf=\"format === 'safeincloudxml'\"> Using the SaveInCloud desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As XML\" and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'padlockcsv'\"> Using the Padlock desktop application, click the hamburger icon in the top left corner and navigate to \"Settings\" &rarr; \"Export\" button and save the file \"As CSV\". </ng-container> <ng-container *ngIf=\"format === 'keepass2xml'\"> Using the KeePass 2 desktop application, navigate to \"File\" &rarr; \"Export\" and select the \"KeePass XML (2.x)\" option. </ng-container> <ng-container *ngIf=\"format === 'upmcsv'\"> Using the Universal Password Manager desktop application, navigate to \"Database\" &rarr; \"Export\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'saferpasscsv'\"> Using the SaferPass browser extension, click the hamburger icon in the top left corner and navigate to \"Settings\". Click the \"Export accounts\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'meldiumcsv'\"> Using the Meldium web vault, navigate to \"Settings\". Locate the \"Export data\" function and click \"Show me my data\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'keepercsv'\"> Log into the Keeper web vault (keepersecurity.com/vault). Navigate to \"Backup\" (top right) and find the \"Export to .csv File\" option. Click \"Export Now\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\"> <span *ngIf=\"format !== 'chromecsv'\"> The process is exactly the same as importing from Google Chrome. </span> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-chrome/\"> https://help.bitwarden.com/article/import-from-chrome/</a> </ng-container> <ng-container *ngIf=\"format === 'firefoxcsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/article/import-from-firefox/\"> https://bitwarden.com/help/article/import-from-firefox/</a>. </ng-container> <ng-container *ngIf=\"format === '1password1pif' || format === '1passwordwincsv' || format === '1passwordmaccsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-1password/\"> https://help.bitwarden.com/article/import-from-1password/</a>. </ng-container> <ng-container *ngIf=\"format === 'passworddragonxml'\"> Using the Password Dragon desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"To XML\". In the dialog that pops up select \"All Rows\" and check all fields. Click the \"Export\" button and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'enpasscsv'\"> Using the Enpass desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As CSV\". Select \"OK\" to the warning alert and save the CSV file. Note that the importer only supports files exported while Enpass is set to the English language, so adjust your settings accordingly. </ng-container> <ng-container *ngIf=\"format === 'enpassjson'\"> Using the Enpass 6 desktop application, click the menu button and navigate to \"File\" &rarr; \"Export\". Select the \".json\" file format option and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'pwsafexml'\"> Using the Password Safe desktop application, navigate to \"File\" &rarr; \"Export To\" &rarr; \"XML format...\" and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'dashlanejson'\"> Using the Dashlane desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"Unsecured archive (readable) in JSON format\" and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'msecurecsv'\"> Using the mSecure desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"CSV File...\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'stickypasswordxml'\"> Using the Sticky Password desktop application, navigate to \"Menu\" (top right) &rarr; \"Export\" &rarr; \"Export all\". Select the unencrypted format XML option and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'truekeycsv'\"> Using the True Key desktop application, click the gear icon (top right) and then navigate to \"App Settings\". Click the \"Export\" button, enter your password and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'clipperzhtml'\"> Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the top right to expand the navigation bar. Navigate to \"Data\" &rarr; \"Export\". Click the \"download HTML+JSON\" button to save the HTML file. </ng-container> <ng-container *ngIf=\"format === 'roboformcsv'\"> Using the RoboForm Editor desktop application, navigate to \"RoboForm\" (top left) &rarr; \"Options\" &rarr; \"Account &amp; Data\" and click the \"Export\" button. Select all of your data, change the \"Format\" to \"CSV file\" and then click the \"Export\" button to save the CSV file. Note: RoboForm only allows you to export Logins. Other items will not be exported. </ng-container> <ng-container *ngIf=\"format === 'passboltcsv'\"> Log into the Passbolt web vault and navigate to the \"Passwords\" listing. Select all of the passwords you would like to export and click the \"Export\" button at the top of the listing. Choose the \"csv (lastpass)\" export format and click the \"Export\" button. </ng-container> <ng-container *ngIf=\"format === 'ascendocsv'\"> Using the Ascendo DataVault desktop application, navigate to \"Tools\" &rarr; \"Export\". In the dialog that pops up, select the \"All Items (DVX, CSV)\" option. Click the \"Ok\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passwordbossjson'\"> Using the Password Boss desktop application, navigate to \"File\" &rarr; \"Export data\" &rarr; \"Password Boss JSON - not encrypted\" and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'zohovaultcsv'\"> Log into the Zoho web vault (vault.zoho.com). Navigate to \"Tools\" &rarr; \"Export Secrets\". Select \"All Secrets\" and click the \"Zoho Vault Format CSV\" button. Highlight and copy the data from the textarea. Open a text editor like Notepad and paste the data. Save the data from the text editor as <code>zoho_export.csv</code>. </ng-container> <ng-container *ngIf=\"format === 'splashidcsv'\"> Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top right corner. Navigate to \"Export\" &rarr; \"Export as CSV\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passkeepcsv'\"> Using the PassKeep mobile app, navigate to \"Backup/Restore\". Locate the \"CSV Backup/Restore\" section and click \"Backup to CSV\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'gnomejson'\"> Make sure you have python-keyring and python-gnomekeyring installed. Save the <a target=\"_blank\" rel=\"noopener\" href=\"https://bit.ly/2GpOMTg\">GNOME Keyring Import/Export</a> python script to your desktop as <code>pw_helper.py</code>. Open terminal and run <code>chmod +rx Desktop/pw_helper.py</code> and then <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the resulting <code>my_passwords.json</code> file here to Bitwarden. </ng-container> <ng-container *ngIf=\"format === 'passwordagentcsv'\"> Using the Password Agent desktop application navigate to \"File\" &rarr; \"Export\", select the \"Fields to export\" button and check all of the fields, change the \"Output format\" to \"CSV\", and then click the \"Start\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passpackcsv'\"> Log into the Passpack website vault and navigate to \"Settings\" &rarr; \"Export\", then click the \"Download\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passmanjson'\"> Open your Passman vault and click on \"Settings\" in the bottom left corner. In the \"Settings\" window switch to the \"Export credentials\" tab and choose \"JSON\" as the export type. Enter your vault's passphrase and click the \"Export\" button to save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'avastcsv'\"> Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select the \"Export\" button for the \"Export to CSV file\" option to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'avastjson'\"> Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select the \"Export\" button for the \"Export to JSON file\" option to save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'fsecurefsk'\"> Open the F-Secure KEY desktop application and navigate to \"Settings\" &rarr; \"Export Passwords\". Select the \"Export\" button, enter your master password, and save the FSK file. </ng-container> <ng-container *ngIf=\"format === 'kasperskytxt'\"> Open the Kaspersky Password Manager desktop application and navigate to \"Settings\" &rarr; \"Import/Export\". Locate the \"Export to text file\" section and select the \"Export\" button to save the TXT file. </ng-container> <ng-container *ngIf=\"format === 'remembearcsv'\"> Open the RememBear desktop application and navigate to \"Settings\" &rarr; \"Account\" &rarr; \"Export\". Enter your master password and select the \"Export Anyway\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passwordwallettxt'\"> Open the PasswordWallet desktop application and navigate to \"File\" &rarr; \"Export\" &rarr; \"Visible entries to text file\". Enter your password and select the \"Ok\" button to save the TXT file. </ng-container> <ng-container *ngIf=\"format === 'mykicsv'\"> Open the Myki desktop browser extension and navigate to \"Advanced\" &rarr; \"Export Accounts\" and then scan the QR code with your mobile device. Various CSV files will then be saved to your computer's downloads folder. </ng-container> <ng-container *ngIf=\"format === 'securesafecsv'\"> Export your SecureSafe password safe to a CSV file with a comma delimiter. </ng-container> <ng-container *ngIf=\"format === 'logmeoncecsv'\"> Open the LogMeOnce browser extension, then navigate to \"Open Menu\" &rarr; \"Export To\" and select \"CSV File\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'blackberrycsv'\"> Open the BlackBerry Password Keeper application, then navigate to \"Settings\" &rarr; \"Import/Export\". Select \"Export Passwords\" and follow the instructions on screen to save the unencrypted CSV file. </ng-container> <ng-container *ngIf=\"format === 'buttercupcsv'\"> Open the Buttercup desktop application and unlock your vault. Right click on your vault's icon and select \"Export\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'codebookcsv'\"> Open the Codebook desktop application and log in. Navigate to \"File\" &rarr; \"Export all\", then click \"Yes\" on the dialog and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'encryptrcsv'\"> Open the newest version of the Encryptr desktop application and allow all of your data to sync. Once syncing of your data is complete, the download icon in the top right corner will turn pink. Click the download icon and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'yoticsv'\"> From the Yoti browser extension, click on \"Settings\", then \"Export Saved Logins\" and save the CSV file. </ng-container> </app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"file\">2. {{'selectImportFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" [disabled]=\"importBlockedByPolicy\"> </div> </div> </div> <div class=\"form-group\"> <label for=\"fileContents\">{{'orCopyPasteFileContents' | i18n}}</label> <textarea id=\"fileContents\" class=\"form-control\" name=\"FileContents\" [(ngModel)]=\"fileContents\" [disabled]=\"importBlockedByPolicy\"></textarea> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading || importBlockedByPolicy\" [ngClass]=\"{manual:importBlockedByPolicy}\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'importData' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: 'inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n    services = new Map<string, string>();\n    cipherDocs = new Map<string, string>();\n\n    constructor(protected cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService, passwordRepromptService: PasswordRepromptService) {\n        super(modalService, userService, messagingService, passwordRepromptService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        try {\n            await this.load2fa();\n        } catch { }\n        if (this.services.size > 0) {\n            const allCiphers = await this.getAllCiphers();\n            const inactive2faCiphers: CipherView[] = [];\n            const promises: Promise<void>[] = [];\n            const docs = new Map<string, string>();\n            allCiphers.forEach(c => {\n                if (c.type !== CipherType.Login || (c.login.totp != null && c.login.totp !== '') || !c.login.hasUris ||\n                    c.isDeleted) {\n                    return;\n                }\n                for (let i = 0; i < c.login.uris.length; i++) {\n                    const u = c.login.uris[i];\n                    if (u.uri != null && u.uri !== '') {\n                        const hostname = Utils.getHostname(u.uri);\n                        if (hostname != null && this.services.has(hostname)) {\n                            if (this.services.get(hostname) != null) {\n                                docs.set(c.id, this.services.get(hostname));\n                            }\n                            inactive2faCiphers.push(c);\n                            break;\n                        }\n                    }\n                }\n            });\n            await Promise.all(promises);\n            this.ciphers = inactive2faCiphers;\n            this.cipherDocs = docs;\n        }\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    private async load2fa() {\n        if (this.services.size > 0) {\n            return;\n        }\n        const response = await fetch(new Request('https://2fa.directory/api/v2/totp.json'));\n        if (response.status !== 200) {\n            throw new Error();\n        }\n        const responseJson = await response.json();\n        for (const categoryName in responseJson) {\n            if (responseJson.hasOwnProperty(categoryName)) {\n                const category = responseJson[categoryName];\n                for (const serviceName in category) {\n                    if (category.hasOwnProperty(serviceName)) {\n                        const service = category[serviceName];\n                        if (service.url != null) {\n                            const hostname = Utils.getHostname(service.url);\n                            if (hostname != null) {\n                                this.services.set(hostname, service.doc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","<div class=\"page-header\"> <h1> {{'inactive2faReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'inactive2faReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noInactive2fa' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'inactive2faFound' | i18n}}\"> {{'inactive2faFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <a class=\"badge badge-primary\" href=\"{{cipherDocs.get(c.id)}}\" target=\"_blank\" rel=\"noopener\" *ngIf=\"cipherDocs.has(c.id)\"> {{'instructions' | i18n}}</a> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: 'reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    passwordUseMap: Map<string, number>;\n\n    constructor(protected cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService,\n        passwordRepromptService: PasswordRepromptService) {\n        super(modalService, userService, messagingService, passwordRepromptService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const ciphersWithPasswords: CipherView[] = [];\n        this.passwordUseMap = new Map<string, number>();\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            ciphersWithPasswords.push(c);\n            if (this.passwordUseMap.has(c.login.password)) {\n                this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n            } else {\n                this.passwordUseMap.set(c.login.password, 1);\n            }\n        });\n        const reusedPasswordCiphers = ciphersWithPasswords.filter(c =>\n            this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1);\n        this.ciphers = reusedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from an organization view\n        return true;\n    }\n}\n","<div class=\"page-header\"> <h1> {{'reusedPasswordsReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'reusedPasswordsReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noReusedPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'reusedPasswordsFound' | i18n}}\"> {{'reusedPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-warning\"> {{'reusedXTimes' | i18n : passwordUseMap.get(c.login.password)}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: 'unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n    constructor(protected cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService, passwordRepromptService: PasswordRepromptService) {\n        super(modalService, userService, messagingService, passwordRepromptService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const unsecuredCiphers = allCiphers.filter(c => {\n            if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n                return false;\n            }\n            return c.login.uris.some(u => u.uri != null && u.uri.indexOf('http://') === 0);\n        });\n        this.ciphers = unsecuredCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n}\n","<div class=\"page-header\"> <h1> {{'unsecuredWebsitesReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'unsecuredWebsitesReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noUnsecuredWebsites' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'unsecuredWebsitesFound' | i18n}}\"> {{'unsecuredWebsitesFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: 'weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n\n    passwordStrengthMap = new Map<string, [string, string]>();\n\n    private passwordStrengthCache = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected passwordGenerationService: PasswordGenerationService,\n        modalService: ModalService, messagingService: MessagingService, userService: UserService,\n        passwordRepromptService: PasswordRepromptService) {\n        super(modalService, userService, messagingService, passwordRepromptService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const weakPasswordCiphers: CipherView[] = [];\n        const isUserNameNotEmpty = (c: CipherView): boolean => {\n            return c.login.username != null && c.login.username.trim() !== '';\n        };\n        const getCacheKey = (c: CipherView): string => {\n            return c.login.password + '_____' + (isUserNameNotEmpty(c) ? c.login.username : '');\n        };\n\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            const hasUserName = isUserNameNotEmpty(c);\n            const cacheKey = getCacheKey(c);\n            if (!this.passwordStrengthCache.has(cacheKey)) {\n                let userInput: string[] = [];\n                if (hasUserName) {\n                    const atPosition = c.login.username.indexOf('@');\n                    if (atPosition > -1) {\n                        userInput = userInput.concat(\n                            c.login.username.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/))\n                            .filter(i => i.length >= 3);\n                    } else {\n                        userInput = c.login.username.trim().toLowerCase().split(/[^A-Za-z0-9]/)\n                            .filter(i => i.length >= 3);\n                    }\n                }\n                const result = this.passwordGenerationService.passwordStrength(c.login.password,\n                    userInput.length > 0 ? userInput : null);\n                this.passwordStrengthCache.set(cacheKey, result.score);\n            }\n            const score = this.passwordStrengthCache.get(cacheKey);\n            if (score != null && score <= 2) {\n                this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n                weakPasswordCiphers.push(c);\n            }\n        });\n        weakPasswordCiphers.sort((a, b) => {\n            return this.passwordStrengthCache.get(getCacheKey(a)) -\n                this.passwordStrengthCache.get(getCacheKey(b));\n        });\n        this.ciphers = weakPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from the org view;\n        return true;\n    }\n\n    private scoreKey(score: number): [string, string] {\n        switch (score) {\n            case 4:\n                return ['strong', 'success'];\n            case 3:\n                return ['good', 'primary'];\n            case 2:\n                return ['weak', 'warning'];\n            default:\n                return ['veryWeak', 'danger'];\n        }\n    }\n}\n","<div class=\"page-header\"> <h1> {{'weakPasswordsReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'weakPasswordsReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noWeakPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'weakPasswordsFound' | i18n}}\"> {{'weakPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-{{passwordStrengthMap.get(c.id)[1]}}\"> {{passwordStrengthMap.get(c.id)[0] | i18n}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib-angular/components/attachments.component';\n\n@Component({\n    selector: 'app-vault-attachments',\n    templateUrl: 'attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = false;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, window);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.showFixOldAttachments(attachment)) {\n            await this.reuploadCipherAttachment(attachment, false);\n        }\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.cipher.organizationId == null;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"attachmentsTitle\"> {{'attachments' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\"> <tbody> <tr *ngFor=\"let a of cipher.attachments\"> <td class=\"table-list-icon\"> <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-lg fa-fw fa-spin\" *ngIf=\"a.downloading\" aria-hidden=\"true\"></i> </td> <td class=\"wrap\"> <div class=\"d-flex\"> <a href=\"#\" appStopClick (click)=\"download(a)\">{{a.fileName}}</a> <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\"> <a href=\"https://help.bitwarden.com/article/attachments/#fixing-old-attachments\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-exclamation-triangle text-warning\" title=\"{{'attachmentFixDesc' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachmentFixDesc' | i18n}}</span></a> <button type=\"button\" class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\" (click)=\"reupload(a)\" #reuploadBtn [appApiAction]=\"reuploadPromises[a.id]\" [disabled]=\"reuploadBtn.loading\">{{'fix' | i18n}}</button> </div> </div> <small>{{a.sizeName}}</small> </td> <td class=\"table-list-options\" *ngIf=\"!viewOnly\"> <button class=\"btn btn-outline-danger\" type=\"button\" appStopClick appA11yTitle=\"{{'delete' | i18n}}\" (click)=\"delete(a)\" #deleteBtn [appApiAction]=\"deletePromises[a.id]\" [disabled]=\"deleteBtn.loading\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </td> </tr> </tbody> </table> <div *ngIf=\"!viewOnly\"> <h3>{{'newAttachment' | i18n}}</h3> <label for=\"file\" class=\"sr-only\">{{'file' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'maxFileSize' | i18n}}</small> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!viewOnly\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CiphersComponent as BaseCiphersComponent } from '../../vault/ciphers.component';\n\n@Component({\n    selector: 'app-org-vault-ciphers',\n    templateUrl: '../../vault/ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n    @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n    organization: Organization;\n    accessEvents = false;\n\n    protected allCiphers: CipherView[] = [];\n\n    constructor(searchService: SearchService, toasterService: ToasterService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, cipherService: CipherService,\n        private apiService: ApiService, eventService: EventService, totpService: TotpService,\n        userService: UserService, passwordRepromptService: PasswordRepromptService) {\n        super(searchService, toasterService, i18nService, platformUtilsService, cipherService,\n            eventService, totpService, userService, passwordRepromptService);\n    }\n\n    async load(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.canEditAnyCollection) {\n            this.accessEvents = this.organization.useEvents;\n            this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n        } else {\n            this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(c => c.organizationId === this.organization.id);\n        }\n        await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n        await this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.canViewAllCollections) {\n            await super.applyFilter(filter);\n        } else {\n            const f = (c: CipherView) => c.organizationId === this.organization.id && (filter == null || filter(c));\n            await super.applyFilter(f);\n        }\n    }\n\n    async search(timeout: number = null) {\n        await super.search(timeout, this.allCiphers);\n    }\n    events(c: CipherView) {\n        this.onEventsClicked.emit(c);\n    }\n\n    protected deleteCipher(id: string) {\n        if (!this.organization.canEditAnyCollection) {\n            return super.deleteCipher(id, this.deleted);\n        }\n        return this.deleted ? this.apiService.deleteCipherAdmin(id) : this.apiService.putDeleteCipherAdmin(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return this.organization.canEditAnyCollection && c.hasOldAttachments;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from 'jslib-angular/components/collections.component';\n\n@Component({\n    selector: 'app-vault-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"collectionsTitle\"> {{'collections' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'collectionsDesc' | i18n}}</p> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from '../../vault/groupings.component';\n\n@Component({\n    selector: 'app-org-vault-groupings',\n    templateUrl: '../../vault/groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService,\n        private apiService: ApiService, private i18nService: I18nService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    async loadCollections() {\n        if (!this.organization.canEditAnyCollection) {\n            await super.loadCollections(this.organization.id);\n            return;\n        }\n\n        const collections = await this.apiService.getCollections(this.organization.id);\n        if (collections != null && collections.data != null && collections.data.length) {\n            const collectionDomains = collections.data.map(r =>\n                new Collection(new CollectionData(r as CollectionDetailsResponse)));\n            this.collections = await this.collectionService.decryptMany(collectionDomains);\n        } else {\n            this.collections = [];\n        }\n\n        const unassignedCollection = new CollectionView();\n        unassignedCollection.name = this.i18nService.t('unassigned');\n        unassignedCollection.id = 'unassigned';\n        unassignedCollection.organizationId = this.organization.id;\n        unassignedCollection.readOnly = true;\n        this.collections.push(unassignedCollection);\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    collapse(grouping: CollectionView) {\n        super.collapse(grouping, 'org_');\n    }\n\n    isCollapsed(grouping: CollectionView) {\n        return super.isCollapsed(grouping, 'org_');\n    }\n}\n","import {\n    Component,\n    Input,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { BulkDeleteComponent } from './bulk-delete.component';\nimport { BulkMoveComponent } from './bulk-move.component';\nimport { BulkRestoreComponent } from './bulk-restore.component';\nimport { BulkShareComponent } from './bulk-share.component';\nimport { CiphersComponent } from './ciphers.component';\n\n@Component({\n    selector: 'app-vault-bulk-actions',\n    templateUrl: 'bulk-actions.component.html',\n})\nexport class BulkActionsComponent {\n    @Input() ciphersComponent: CiphersComponent;\n    @Input() deleted: boolean;\n    @Input() organization: Organization;\n\n    @ViewChild('bulkDeleteTemplate', { read: ViewContainerRef, static: true }) bulkDeleteModalRef: ViewContainerRef;\n    @ViewChild('bulkRestoreTemplate', { read: ViewContainerRef, static: true }) bulkRestoreModalRef: ViewContainerRef;\n    @ViewChild('bulkMoveTemplate', { read: ViewContainerRef, static: true }) bulkMoveModalRef: ViewContainerRef;\n    @ViewChild('bulkShareTemplate', { read: ViewContainerRef, static: true }) bulkShareModalRef: ViewContainerRef;\n\n    constructor(private toasterService: ToasterService, private i18nService: I18nService,\n        private modalService: ModalService, private passwordRepromptService: PasswordRepromptService) { }\n\n    async bulkDelete() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkDeleteComponent, this.bulkDeleteModalRef, comp => {\n            comp.permanent = this.deleted;\n            comp.cipherIds = selectedIds;\n            comp.organization = this.organization;\n            comp.onDeleted.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async bulkRestore() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkRestoreComponent, this.bulkRestoreModalRef, comp => {\n            comp.cipherIds = selectedIds;\n            comp.onRestored.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async bulkShare() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        if (selectedCiphers.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkShareComponent, this.bulkShareModalRef, comp => {\n            comp.ciphers = selectedCiphers;\n            comp.onShared.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async bulkMove() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkMoveComponent, this.bulkMoveModalRef, comp => {\n            comp.cipherIds = selectedIds;\n            comp.onMoved.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    selectAll(select: boolean) {\n        this.ciphersComponent.selectAll(select);\n    }\n\n    private async promptPassword() {\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        const notProtected = !selectedCiphers.find(cipher => cipher.reprompt !== CipherRepromptType.None);\n\n        return notProtected || await this.passwordRepromptService.showPasswordPrompt();\n    }\n}\n","<div class=\"dropdown mr-2\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkMove()\" *ngIf=\"!deleted && !organization\"> <i class=\"fa fa-fw fa-share\" aria-hidden=\"true\"></i> {{'moveSelected' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"bulkShare()\" *ngIf=\"!deleted && !organization\"> <i class=\"fa fa-fw fa-arrow-circle-o-right\" aria-hidden=\"true\"></i> {{'moveSelectedToOrg' | i18n}} </button> <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'restoreSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{(deleted ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <ng-template #bulkDeleteTemplate></ng-template> <ng-template #bulkRestoreTemplate></ng-template> <ng-template #bulkMoveTemplate></ng-template> <ng-template #bulkShareTemplate></ng-template> ","import Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { SendFileData } from '../data/sendFileData';\n\nimport { SendFileView } from '../view/sendFileView';\n\nexport class SendFile extends Domain {\n    id: string;\n    size: string;\n    sizeName: string;\n    fileName: EncString;\n\n    constructor(obj?: SendFileData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            sizeName: null,\n            fileName: null,\n        }, alreadyEncrypted, ['id', 'sizeName']);\n    }\n\n    async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n        const view = await this.decryptObj(new SendFileView(this), {\n            fileName: null,\n        }, null, key);\n        return view;\n    }\n}\n","import Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { SendTextData } from '../data/sendTextData';\n\nimport { SendTextView } from '../view/sendTextView';\n\nexport class SendText extends Domain {\n    text: EncString;\n    hidden: boolean;\n\n    constructor(obj?: SendTextData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.hidden = obj.hidden;\n        this.buildDomainModel(this, obj, {\n            text: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n        return this.decryptObj(new SendTextView(this), {\n            text: null,\n        }, null, key);\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherWithIdRequest extends CipherRequest {\n    id: string;\n\n    constructor(cipher: Cipher) {\n        super(cipher);\n        this.id = cipher.id;\n    }\n}\n","import { Folder } from '../domain/folder';\n\nexport class FolderRequest {\n    name: string;\n\n    constructor(folder: Folder) {\n        this.name = folder.name ? folder.name.encryptedString : null;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class SendFileApi extends BaseResponse {\n    id: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.id = this.getResponseProperty('Id');\n        this.fileName = this.getResponseProperty('FileName');\n        this.key = this.getResponseProperty('Key');\n        this.size = this.getResponseProperty('Size');\n        this.sizeName = this.getResponseProperty('SizeName');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class SendTextApi extends BaseResponse {\n    text: string;\n    hidden: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.text = this.getResponseProperty('Text');\n        this.hidden = this.getResponseProperty('Hidden') || false;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Directive({\n    selector: '[appSelectCopy]',\n})\nexport class SelectCopyDirective {\n    constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) { }\n\n    @HostListener('copy') onCopy() {\n        if (window == null) {\n            return;\n        }\n        let copyText = '';\n        const selection = window.getSelection();\n        for (let i = 0; i < selection.rangeCount; i++) {\n            const range = selection.getRangeAt(i);\n            const text = range.toString();\n\n            // The selection should only contain one line of text. In some cases however, the\n            // selection contains newlines and space characters from the indentation of following\n            // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n            // that aren't part of the password, the selection has to be trimmed.\n            let stringEndPos = text.length;\n            const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n            if (newLinePos > -1) {\n                const otherPart = text.substr(newLinePos).trim();\n                if (otherPart === '') {\n                    stringEndPos = newLinePos;\n                }\n            }\n            copyText += text.substring(0, stringEndPos);\n        }\n        this.platformUtilsService.copyToClipboard(copyText, { window: window });\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\nimport { Utils } from 'jslib-common/misc/utils';\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: 'colorPassword' })\nexport class ColorPasswordPipe implements PipeTransform {\n    transform(password: string) {\n        // Convert to an array to handle cases that stings have special characters, ie: emoji.\n        const passwordArray = Array.from(password);\n        let colorizedPassword = '';\n        for (let i = 0; i < passwordArray.length; i++) {\n            let character = passwordArray[i];\n            let isSpecial = false;\n            // Sanitize HTML first.\n            switch (character) {\n                case '&':\n                    character = '&amp;';\n                    isSpecial = true;\n                    break;\n                case '<':\n                    character = '&lt;';\n                    isSpecial = true;\n                    break;\n                case '>':\n                    character = '&gt;';\n                    isSpecial = true;\n                    break;\n                case ' ':\n                    character = '&nbsp;';\n                    isSpecial = true;\n                    break;\n                default:\n                    break;\n            }\n            let type = 'letter';\n            if (character.match(Utils.regexpEmojiPresentation)) {\n                type = 'emoji';\n            } else if (isSpecial || character.match(/[^\\w ]/)) {\n                type = 'special';\n            } else if (character.match(/\\d/)) {\n                type = 'number';\n            }\n            colorizedPassword += '<span class=\"password-' + type + '\">' + character + '</span>';\n        }\n        return colorizedPassword;\n    }\n}\n","export abstract class NotificationsService {\n    init: () => Promise<void>;\n    updateConnection: (sync?: boolean) => Promise<void>;\n    reconnectFromActivity: () => Promise<void>;\n    disconnectFromInactivity: () => Promise<void>;\n}\n","export abstract class SettingsService {\n    clearCache: () => void;\n    getEquivalentDomains: () => Promise<any>;\n    setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n    clear: (userId: string) => Promise<void>;\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Injectable()\nexport class OrganizationGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        if (org == null) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        if (!org.isOwner && !org.enabled) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('organizationIsDisabled'));\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\n@Injectable()\nexport class OrganizationTypeGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        const permissions = route.data == null ? null : route.data.permissions as Permissions[];\n\n        if (\n            (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && org.canAccessEventLogs) ||\n            (permissions.indexOf(Permissions.AccessImportExport) !== -1 && org.canAccessImportExport) ||\n            (permissions.indexOf(Permissions.AccessReports) !== -1 && org.canAccessReports) ||\n            (permissions.indexOf(Permissions.CreateNewCollections) !== -1 && org.canCreateNewCollections) ||\n            (permissions.indexOf(Permissions.EditAnyCollection) !== -1 && org.canEditAnyCollection) ||\n            (permissions.indexOf(Permissions.DeleteAnyCollection) !== -1 && org.canDeleteAnyCollection) ||\n            (permissions.indexOf(Permissions.EditAssignedCollections) !== -1 && org.canEditAssignedCollections) ||\n            (permissions.indexOf(Permissions.DeleteAssignedCollections) !== -1 && org.canDeleteAssignedCollections) ||\n            (permissions.indexOf(Permissions.ManageGroups) !== -1 && org.canManageGroups) ||\n            (permissions.indexOf(Permissions.ManageOrganization) !== -1 && org.isOwner) ||\n            (permissions.indexOf(Permissions.ManagePolicies) !== -1 && org.canManagePolicies) ||\n            (permissions.indexOf(Permissions.ManageUsers) !== -1 && org.canManageUsers) ||\n            (permissions.indexOf(Permissions.ManageUsersPassword) !== -1 && org.canManageUsersPassword) ||\n            (permissions.indexOf(Permissions.ManageSso) !== -1 && org.canManageSso)\n        ) {\n            return true;\n        }\n\n        this.router.navigate(['/organizations', org.id]);\n        return false;\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileOrganizationResponse } from './profileOrganizationResponse';\nimport { ProfileProviderOrganizationResponse } from './profileProviderOrganizationResponse';\nimport { ProfileProviderResponse } from './profileProviderResponse';\n\nexport class ProfileResponse extends BaseResponse {\n    id: string;\n    name: string;\n    email: string;\n    emailVerified: boolean;\n    masterPasswordHint: string;\n    premium: boolean;\n    culture: string;\n    twoFactorEnabled: boolean;\n    key: string;\n    privateKey: string;\n    securityStamp: string;\n    forcePasswordReset: boolean;\n    organizations: ProfileOrganizationResponse[] = [];\n    providers: ProfileProviderResponse[] = [];\n    providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.emailVerified = this.getResponseProperty('EmailVerified');\n        this.masterPasswordHint = this.getResponseProperty('MasterPasswordHint');\n        this.premium = this.getResponseProperty('Premium');\n        this.culture = this.getResponseProperty('Culture');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n        this.key = this.getResponseProperty('Key');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.securityStamp = this.getResponseProperty('SecurityStamp');\n        this.forcePasswordReset = this.getResponseProperty('ForcePasswordReset') ?? false;\n\n        const organizations = this.getResponseProperty('Organizations');\n        if (organizations != null) {\n            this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n        }\n        const providers = this.getResponseProperty('Providers');\n        if (providers != null) {\n            this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n        }\n        const providerOrganizations = this.getResponseProperty('ProviderOrganizations');\n        if (providerOrganizations != null) {\n            this.providerOrganizations = providerOrganizations.map((o: any) => new ProfileProviderOrganizationResponse(o));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nexport class SendResponse extends BaseResponse {\n    id: string;\n    accessId: string;\n    type: SendType;\n    name: string;\n    notes: string;\n    file: SendFileApi;\n    text: SendTextApi;\n    key: string;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: string;\n    expirationDate: string;\n    deletionDate: string;\n    password: string;\n    disable: boolean;\n    hideEmail: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.accessId = this.getResponseProperty('AccessId');\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.notes = this.getResponseProperty('Notes');\n        this.key = this.getResponseProperty('Key');\n        this.maxAccessCount = this.getResponseProperty('MaxAccessCount');\n        this.accessCount = this.getResponseProperty('AccessCount');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n        this.expirationDate = this.getResponseProperty('ExpirationDate');\n        this.deletionDate = this.getResponseProperty('DeletionDate');\n        this.password = this.getResponseProperty('Password');\n        this.disable = this.getResponseProperty('Disabled') || false;\n        this.hideEmail = this.getResponseProperty('HideEmail') || false;\n\n        const text = this.getResponseProperty('Text');\n        if (text != null) {\n            this.text = new SendTextApi(text);\n        }\n\n        const file = this.getResponseProperty('File');\n        if (file != null) {\n            this.file = new SendFileApi(file);\n        }\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 496;","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Injectable()\nexport class ProviderGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const provider = await this.userService.getProvider(route.params.providerId);\n        if (provider == null) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        if (!provider.isProviderAdmin && !provider.enabled) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('providerIsDisabled'));\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\n@Injectable()\nexport class ProviderTypeGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const provider = await this.userService.getProvider(route.params.providerId);\n        const permissions = route.data == null ? null : route.data.permissions as Permissions[];\n\n        if (\n            (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && provider.canAccessEventLogs) ||\n            (permissions.indexOf(Permissions.ManageProvider) !== -1 && provider.isProviderAdmin) ||\n            (permissions.indexOf(Permissions.ManageUsers) !== -1 && provider.canManageUsers)\n        ) {\n            return true;\n        }\n\n        this.router.navigate(['/providers', provider.id]);\n        return false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\n@Component({\n    selector: 'providers-layout',\n    templateUrl: 'providers-layout.component.html',\n})\nexport class ProvidersLayoutComponent {\n\n    provider: Provider;\n    private providerId: string;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        this.route.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            await this.load();\n        });\n    }\n\n    async load() {\n        this.provider = await this.userService.getProvider(this.providerId);\n    }\n\n    get showMenuBar() {\n        return this.showManageTab || this.showSettingsTab;\n    }\n\n    get showManageTab() {\n        return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n    }\n\n    get showSettingsTab() {\n        return this.provider.isProviderAdmin;\n    }\n\n    get manageRoute(): string {\n        switch (true) {\n            case this.provider.canManageUsers:\n                return 'manage/people';\n            case this.provider.canAccessEventLogs:\n                return 'manage/events';\n        }\n    }\n}\n","<app-navbar></app-navbar> <div class=\"org-nav\" *ngIf=\"provider\"> <div class=\"container d-flex\"> <div class=\"d-flex flex-column\"> <div class=\"my-auto d-flex align-items-center pl-1\"> <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar> <div class=\"org-name ml-3\"> <span>{{provider.name}}</span> <small class=\"text-muted\">{{'provider' | i18n}}</small> </div> <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\"> <div class=\"card-body py-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'providerIsDisabled' | i18n}} </div> </div> </div> <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\"> <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\"> <i class=\"fa fa-university\" aria-hidden=\"true\"></i> {{'clients' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showManageTab\"> <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i> {{'manage' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showSettingsTab\"> <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\"> <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i> {{'settings' | i18n}} </a> </li> </ul> </div> </div> </div> <div class=\"container page-content\"> <router-outlet></router-outlet> </div> <app-footer></app-footer> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport {\n    ProviderOrganizationOrganizationDetailsResponse\n} from 'jslib-common/models/response/provider/providerOrganizationResponse';\n\nimport { ProviderService } from '../services/provider.service';\n\nimport { AddOrganizationComponent } from './add-organization.component';\n\nconst DisallowedPlanTypes = [PlanType.Free, PlanType.FamiliesAnnually2019, PlanType.FamiliesAnnually];\n\n@Component({\n    templateUrl: 'clients.component.html',\n})\nexport class ClientsComponent implements OnInit {\n\n    @ViewChild('add', { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n    providerId: any;\n    searchText: string;\n    addableOrganizations: Organization[];\n    loading = true;\n    manageOrganizations = false;\n    showAddExisting = false;\n\n    clients: ProviderOrganizationOrganizationDetailsResponse[];\n    pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n    protected didScroll = false;\n    protected pageSize = 100;\n    protected actionPromise: Promise<any>;\n    private pagedClientsCount = 0;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private apiService: ApiService, private searchService: SearchService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private toasterService: ToasterService, private validationService: ValidationService,\n        private providerService: ProviderService, private logService: LogService,\n        private modalService: ModalService) { }\n\n    async ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n\n            await this.load();\n\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getProviderClients(this.providerId);\n        this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n        this.manageOrganizations = (await this.userService.getProvider(this.providerId)).type === ProviderUserType.ProviderAdmin;\n        const candidateOrgs = (await this.userService.getAllOrganizations()).filter(o => o.isOwner && o.providerId == null);\n        const allowedOrgsIds = await Promise.all(candidateOrgs.map(o => this.apiService.getOrganization(o.id))).then(orgs =>\n            orgs.filter(o => !DisallowedPlanTypes.includes(o.planType))\n                .map(o => o.id));\n        this.addableOrganizations = candidateOrgs.filter(o => allowedOrgsIds.includes(o.id));\n\n        this.showAddExisting = this.addableOrganizations.length !== 0;\n        this.loading = false;\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.clients && this.clients.length > this.pageSize;\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    async resetPaging() {\n        this.pagedClients = [];\n        this.loadMore();\n    }\n\n\n    loadMore() {\n        if (!this.clients || this.clients.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedClients.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n            pagedSize = this.pagedClientsCount;\n        }\n        if (this.clients.length > pagedLength) {\n            this.pagedClients = this.pagedClients.concat(this.clients.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedClientsCount = this.pagedClients.length;\n        this.didScroll = this.pagedClients.length > this.pageSize;\n    }\n\n    async addExistingOrganization() {\n        const [modal] = await this.modalService.openViewRef(AddOrganizationComponent, this.addModalRef, comp => {\n            comp.providerId = this.providerId;\n            comp.organizations = this.addableOrganizations;\n            comp.onAddedOrganization.subscribe(async () => {\n                try {\n                    await this.load();\n                    modal.close();\n                } catch (e) {\n                    this.logService.error(`Handled exception: ${e}`);\n                }\n            });\n        });\n    }\n\n    async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('detachOrganizationConfirmation'), organization.organizationName,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n\n        if (!confirmed) {\n            return false;\n        }\n\n        this.actionPromise = this.providerService.detachOrganizastion(this.providerId, organization.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('detachedOrganization', organization.organizationName));\n            await this.load();\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'clients' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newClientOrganization' | i18n}} </a> <button class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"addExistingOrganization()\" *ngIf=\"manageOrganizations && showAddExisting\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'addExistingOrganization' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (clients | search:searchText:'organizationName':'id') as searchedClients\"> <p *ngIf=\"!searchedClients.length\">{{'noClientsInList' | i18n}}</p> <ng-container *ngIf=\"searchedClients.length\"> <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let o of searchedClients\"> <td width=\"30\"> <app-avatar [data]=\"o.organizationName\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a [routerLink]=\"['/organizations', o.organizationId]\">{{o.organizationName}}</a> </td> <td class=\"table-list-options\" *ngIf=\"manageOrganizations\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> <ng-template #add></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ProviderService } from '../services/provider.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { Provider } from 'jslib-common/models/domain/provider';\n\nimport { PlanType } from 'jslib-common/enums/planType';\n\n@Component({\n    selector: 'provider-add-organization',\n    templateUrl: 'add-organization.component.html',\n})\nexport class AddOrganizationComponent implements OnInit {\n\n    @Input() providerId: string;\n    @Input() organizations: Organization[];\n    @Output() onAddedOrganization = new EventEmitter();\n\n    provider: Provider;\n    formPromise: Promise<any>;\n    loading = true;\n\n    constructor(private userService: UserService, private providerService: ProviderService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private validationService: ValidationService,\n        private apiService: ApiService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        if (this.providerId == null) {\n            return;\n        }\n\n        this.provider = await this.userService.getProvider(this.providerId);\n\n        this.loading = false;\n    }\n\n    async add(organization: Organization) {\n        if (this.formPromise) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('addOrganizationConfirmation', organization.name, this.provider.name), organization.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.formPromise = this.providerService.addOrganizationToProvider(this.providerId, organization.id);\n            await this.formPromise;\n        } catch (e) {\n            this.validationService.showError(e);\n            return;\n        } finally {\n            this.formPromise = null;\n        }\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('organizationJoinedProvider'));\n        this.onAddedOrganization.emit();\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"addTitle\"> {{'addExistingOrganization' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <ng-container *ngIf=\"!loading\"> <table class=\"table table-hover table-list\"> <tr *ngFor=\"let o of organizations\"> <td width=\"30\"> <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{o.name}} </td> <td> <button class=\"btn btn-outline-secondary pull-right\" (click)=\"add(o)\" [disabled]=\"formPromise\">Add</button> </td> </tr> </table> </ng-container> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { OrganizationPlansComponent } from 'src/app/settings/organization-plans.component';\n\n@Component({\n    selector: 'app-create-organization',\n    templateUrl: 'create-organization.component.html',\n})\nexport class CreateOrganizationComponent implements OnInit {\n    @ViewChild(OrganizationPlansComponent, { static: true }) orgPlansComponent: OrganizationPlansComponent;\n\n    providerId: string;\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'newClientOrganization' | i18n}}</h1> </div> <p>{{'newClientOrganizationDesc' | i18n}}</p> <app-organization-plans [providerId]=\"providerId\"></app-organization-plans> ","import Domain from './domainBase';\n\nexport class MasterPasswordPolicyOptions extends Domain {\n    minComplexity: number = 0;\n    minLength: number = 0;\n    requireUpper: boolean = false;\n    requireLower: boolean = false;\n    requireNumbers: boolean = false;\n    requireSpecial: boolean = false;\n}\n","import { TaxInfoUpdateRequest } from './taxInfoUpdateRequest';\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n    taxId: string;\n    line1: string;\n    line2: string;\n    city: string;\n    state: string;\n}\n","export class TaxInfoUpdateRequest {\n    country: string;\n    postalCode: string;\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Toast, ToasterService } from 'angular2-toaster';\n\nimport { BaseAcceptComponent } from 'src/app/common/base.accept.component';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { ProviderUserAcceptRequest } from 'jslib-common/models/request/provider/providerUserAcceptRequest';\n\n@Component({\n    selector: 'app-accept-provider',\n    templateUrl: 'accept-provider.component.html',\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n    providerName: string;\n\n    failedMessage = 'providerInviteAcceptFailed';\n\n    requiredParameters = ['providerId', 'providerUserId', 'token'];\n\n    constructor(router: Router, toasterService: ToasterService, i18nService: I18nService, route: ActivatedRoute,\n        userService: UserService, stateService: StateService, private apiService: ApiService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any) {\n        const request = new ProviderUserAcceptRequest();\n        request.token = qParams.token;\n\n        await this.apiService.postProviderUserAccept(qParams.providerId, qParams.providerUserId, request);\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('providerInviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any) {\n        this.providerName = qParams.providerName;\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'joinProvider' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{providerName}} <strong class=\"d-block mt-2\">{{email}}</strong> </p> <p>{{'joinProviderDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\nimport { EventService } from 'src/app/services/event.service';\n\nimport { BaseEventsComponent } from 'src/app/common/base.events.component';\n\n@Component({\n    selector: 'provider-events',\n    templateUrl: 'events.component.html',\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n    exportFileName: string = 'provider-events';\n    providerId: string;\n\n    private providerUsersUserIdMap = new Map<string, any>();\n    private providerUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute, eventService: EventService,\n        i18nService: I18nService, toasterService: ToasterService, private userService: UserService,\n        exportService: ExportService, platformUtilsService: PlatformUtilsService, private router: Router,\n        logService: LogService, private userNamePipe: UserNamePipe) {\n        super(eventService, i18nService, toasterService, exportService, platformUtilsService, logService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            const provider = await this.userService.getProvider(this.providerId);\n            if (provider == null || !provider.useEvents) {\n                this.router.navigate(['/providers', this.providerId]);\n                return;\n            }\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getProviderUsers(this.providerId);\n        response.data.forEach(u => {\n            const name = this.userNamePipe.transform(u);\n            this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n            this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n        });\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n        return this.apiService.getEventsProvider(this.providerId, startDate, endDate, continuationToken);\n    }\n\n    protected getUserName(r: EventResponse, userId: string) {\n        return userId != null && this.providerUsersUserIdMap.has(userId) ? this.providerUsersUserIdMap.get(userId) : null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'eventLogs' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> </div> <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshForm.loading\"> <i class=\"fa fa-refresh fa-fw\" aria-hidden=\"true\" [ngClass]=\"{'fa-spin': loaded && refreshForm.loading}\"></i> {{'refresh' | i18n}} </button> </form> <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\" [ngClass]=\"{loading:exportForm.loading}\" (click)=\"exportEvents()\" [disabled]=\"loaded && exportForm.loading || dirtyDates\"> <i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i> <span>{{'export' | i18n}}</span> </button> </form> </div> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p *ngIf=\"!events || !events.length\">{{'noEventsInList' | i18n}}</p> <table class=\"table table-hover\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td> <span title=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </ng-container> ","import { Directive } from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { EventView } from 'jslib-common/models/view/eventView';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\n\nimport { EventService } from 'src/app/services/event.service';\n\n@Directive()\nexport abstract class BaseEventsComponent {\n    loading = true;\n    loaded = false;\n    events: EventView[];\n    start: string;\n    end: string;\n    dirtyDates: boolean = true;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    exportPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    abstract readonly exportFileName: string;\n\n    constructor(protected eventService: EventService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected exportService: ExportService,\n        protected platformUtilsService: PlatformUtilsService, protected logService: LogService) {\n        const defaultDates = this.eventService.getDefaultDateFilters();\n        this.start = defaultDates[0];\n        this.end = defaultDates[1];\n    }\n\n    async exportEvents() {\n        if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n            return;\n        }\n\n        this.loading = true;\n\n        const dates = this.parseDates();\n        if (dates == null) {\n            return;\n        }\n\n        try {\n            this.exportPromise = this.export(dates[0], dates[1]);\n\n            await this.exportPromise;\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n\n        this.exportPromise = null;\n        this.loading = false;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.appApiPromiseUnfulfilled()) {\n            return;\n        }\n\n        const dates = this.parseDates();\n        if (dates == null) {\n            return;\n        }\n\n        this.loading = true;\n        let events: EventView[] = [];\n        try {\n            const promise = this.loadAndParseEvents(dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            const result = await promise;\n            this.continuationToken = result.continuationToken;\n            events = result.events;\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.dirtyDates = false;\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n\n    protected abstract requestEvents(startDate: string, endDate: string, continuationToken: string): Promise<ListResponse<EventResponse>>;\n    protected abstract getUserName(r: EventResponse, userId: string): { name: string, email: string };\n\n    protected async loadAndParseEvents(startDate: string, endDate: string, continuationToken: string) {\n        const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n        const events = await Promise.all(response.data.map(async r => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = await this.eventService.getEventInfo(r);\n            const user = this.getUserName(r, userId);\n            return new EventView({\n                message: eventInfo.message,\n                humanReadableMessage: eventInfo.humanReadableMessage,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.i18nService.t('unknown'),\n                userEmail: user != null ? user.email : '',\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            });\n        }));\n        return { continuationToken: response.continuationToken, events: events };\n    }\n\n    protected parseDates() {\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return null;\n        }\n        return dates;\n    }\n\n    protected appApiPromiseUnfulfilled() {\n        return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n    }\n\n    private async export(start: string, end: string) {\n        let continuationToken = this.continuationToken;\n        let events = [].concat(this.events);\n\n        while (continuationToken != null) {\n            const result = await this.loadAndParseEvents(start, end, continuationToken);\n            continuationToken = result.continuationToken;\n            events = events.concat(result.events);\n        }\n\n        const data = await this.exportService.getEventExport(events);\n        const fileName = this.exportService.getFileName(this.exportFileName, 'csv');\n        this.platformUtilsService.saveFile(window, data, { type: 'text/plain' }, fileName);\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\n@Component({\n    selector: 'provider-manage',\n    templateUrl: 'manage.component.html',\n})\nexport class ManageComponent implements OnInit {\n    provider: Provider;\n    accessEvents = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.provider = await this.userService.getProvider(params.providerId);\n            this.accessEvents = this.provider.useEvents;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\" *ngIf=\"provider\"> <div class=\"card-header\">{{'manage' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"people\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"provider.canManageUsers\"> {{'people' | i18n}} </a> <a routerLink=\"events\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"provider.canAccessEventLogs && accessEvents\"> {{'eventLogs' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\n\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { ProviderUserUserDetailsResponse } from 'jslib-common/models/response/provider/providerUserResponse';\n\nimport { ProviderUserBulkRequest } from 'jslib-common/models/request/provider/providerUserBulkRequest';\nimport { ProviderUserConfirmRequest } from 'jslib-common/models/request/provider/providerUserConfirmRequest';\nimport { ProviderUserBulkResponse } from 'jslib-common/models/response/provider/providerUserBulkResponse';\n\nimport { BasePeopleComponent } from 'src/app/common/base.people.component';\nimport { BulkStatusComponent } from 'src/app/organizations/manage/bulk/bulk-status.component';\nimport { EntityEventsComponent } from 'src/app/organizations/manage/entity-events.component';\nimport { BulkConfirmComponent } from './bulk/bulk-confirm.component';\nimport { BulkRemoveComponent } from './bulk/bulk-remove.component';\nimport { UserAddEditComponent } from './user-add-edit.component';\n\n@Component({\n    selector: 'provider-people',\n    templateUrl: 'people.component.html',\n})\nexport class PeopleComponent extends BasePeopleComponent<ProviderUserUserDetailsResponse> implements OnInit {\n\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('groupsTemplate', { read: ViewContainerRef, static: true }) groupsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n    @ViewChild('bulkStatusTemplate', { read: ViewContainerRef, static: true }) bulkStatusModalRef: ViewContainerRef;\n    @ViewChild('bulkConfirmTemplate', { read: ViewContainerRef, static: true }) bulkConfirmModalRef: ViewContainerRef;\n    @ViewChild('bulkRemoveTemplate', { read: ViewContainerRef, static: true }) bulkRemoveModalRef: ViewContainerRef;\n\n    userType = ProviderUserType;\n    userStatusType = ProviderUserStatusType;\n    providerId: string;\n    accessEvents = false;\n\n    constructor(apiService: ApiService, private route: ActivatedRoute,\n        i18nService: I18nService, modalService: ModalService,\n        platformUtilsService: PlatformUtilsService, toasterService: ToasterService,\n        cryptoService: CryptoService, private userService: UserService, private router: Router,\n        storageService: StorageService, searchService: SearchService, validationService: ValidationService,\n        logService: LogService, searchPipe: SearchPipe, userNamePipe: UserNamePipe) {\n        super(apiService, searchService, i18nService, platformUtilsService, toasterService, cryptoService,\n            storageService, validationService, modalService, logService, searchPipe, userNamePipe);\n    }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            const provider = await this.userService.getProvider(this.providerId);\n\n            if (!provider.canManageUsers) {\n                this.router.navigate(['../'], { relativeTo: this.route });\n                return;\n            }\n\n            this.accessEvents = provider.useEvents;\n\n            await this.load();\n\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const user = this.users.filter(u => u.id === qParams.viewEvents);\n                    if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n                        this.events(user[0]);\n                    }\n                }\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n        return this.apiService.getProviderUsers(this.providerId);\n    }\n\n    deleteUser(id: string): Promise<any> {\n        return this.apiService.deleteProviderUser(this.providerId, id);\n    }\n\n    reinviteUser(id: string): Promise<any> {\n        return this.apiService.postProviderUserReinvite(this.providerId, id);\n    }\n\n    async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n        const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n        const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n        const request = new ProviderUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n    }\n\n    async edit(user: ProviderUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(UserAddEditComponent, this.addEditModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.providerId = this.providerId;\n            comp.providerUserId = user != null ? user.id : null;\n            comp.onSavedUser.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n            comp.onDeletedUser.subscribe(() => {\n                modal.close();\n                this.removeUser(user);\n            });\n        });\n    }\n\n    async events(user: ProviderUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.providerId = this.providerId;\n            comp.entityId = user.id;\n            comp.showUser = false;\n            comp.entity = 'user';\n        });\n    }\n\n    async bulkRemove() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkRemoveComponent, this.bulkRemoveModalRef, comp => {\n            comp.providerId = this.providerId;\n            comp.users = this.getCheckedUsers();\n        });\n\n        await modal.onClosedPromise();\n        await this.load();\n    }\n\n    async bulkReinvite() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const users = this.getCheckedUsers();\n        const filteredUsers = users.filter(u => u.status === ProviderUserStatusType.Invited);\n\n        if (filteredUsers.length <= 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('noSelectedUsersApplicable'));\n            return;\n        }\n\n        try {\n            const request = new ProviderUserBulkRequest(filteredUsers.map(user => user.id));\n            const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n            this.showBulkStatus(users, filteredUsers, response, this.i18nService.t('bulkReinviteMessage'));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async bulkConfirm() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkConfirmComponent, this.bulkConfirmModalRef, comp => {\n            comp.providerId = this.providerId;\n            comp.users = this.getCheckedUsers();\n        });\n\n        await modal.onClosedPromise();\n        await this.load();\n    }\n\n    private async showBulkStatus(users: ProviderUserUserDetailsResponse[], filteredUsers: ProviderUserUserDetailsResponse[],\n        request: Promise<ListResponse<ProviderUserBulkResponse>>, successfullMessage: string) {\n\n        const [modal, childComponent] = await this.modalService.openViewRef(BulkStatusComponent, this.bulkStatusModalRef, comp => {\n            comp.loading = true;\n        });\n\n        // Workaround to handle closing the modal shortly after it has been opened\n        let close = false;\n        modal.onShown.subscribe(() => {\n            if (close) {\n                modal.close();\n            }\n        });\n\n        try {\n            const response = await request;\n\n            if (modal) {\n                const keyedErrors: any = response.data.filter(r => r.error !== '').reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n                const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n                childComponent.users = users.map(user => {\n                    let message = keyedErrors[user.id] ?? successfullMessage;\n                    if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n                        message = this.i18nService.t('bulkFilteredMessage');\n                    }\n\n                    return {\n                        user: user,\n                        error: keyedErrors.hasOwnProperty(user.id),\n                        message: message,\n                    };\n                });\n                childComponent.loading = false;\n            }\n        } catch {\n            close = true;\n            modal.close();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'people' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == null}\" (click)=\"filter(null)\"> {{'all' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{allCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Invited}\" (click)=\"filter(userStatusType.Invited)\"> {{'invited' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{invitedCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Accepted}\" (click)=\"filter(userStatusType.Accepted)\"> {{'accepted' | i18n}} <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{acceptedCount}}</span> </button> </div> <div class=\"ml-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <div class=\"dropdown ml-3\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'reinviteSelected' | i18n}} </button> <button class=\"dropdown-item text-success\" appStopClick (click)=\"bulkConfirm()\" *ngIf=\"showBulkConfirmUsers\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirmSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'inviteUser' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedUsers : users | search:searchText:'name':'email':'id') as searchedUsers\"> <p *ngIf=\"!searchedUsers.length\">{{'noUsersInList' | i18n}}</p> <ng-container *ngIf=\"searchedUsers.length\"> <app-callout type=\"info\" title=\"{{'confirmUsers' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"showConfirmUsers\"> {{'providerUsersNeedConfirmed' | i18n}} </app-callout> <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp> </td> <td width=\"30\"> <app-avatar [data]=\"u | userName\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(u)\">{{u.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td> <ng-container *ngIf=\"u.twoFactorEnabled\"> <i class=\"fa fa-lock\" title=\"{{'userUsingTwoStep' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userUsingTwoStep' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === userType.ProviderAdmin\">{{'providerAdmin' | i18n}}</span> <span *ngIf=\"u.type === userType.ServiceUser\">{{'serviceUser' | i18n}}</span> <span *ngIf=\"u.type === userType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(u)\" *ngIf=\"u.status === userStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(u)\" *ngIf=\"u.status === userStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"groups(u)\" *ngIf=\"accessGroups\"> <i class=\"fa fa-fw fa-sitemap\" aria-hidden=\"true\"></i> {{'groups' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"events(u)\" *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> <ng-template #addEdit></ng-template> <ng-template #eventsTemplate></ng-template> <ng-template #confirmTemplate></ng-template> <ng-template #bulkStatusTemplate></ng-template> <ng-template #bulkConfirmTemplate></ng-template> <ng-template #bulkRemoveTemplate></ng-template> ","import {\n    Directive,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\n\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\nimport { ProviderUserUserDetailsResponse } from 'jslib-common/models/response/provider/providerUserResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { UserConfirmComponent } from '../organizations/manage/user-confirm.component';\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse>  {\n\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n\n    get allCount() {\n        return this.allUsers != null ? this.allUsers.length : 0;\n    }\n\n    get invitedCount() {\n        return this.statusMap.has(this.userStatusType.Invited) ?\n            this.statusMap.get(this.userStatusType.Invited).length : 0;\n    }\n\n    get acceptedCount() {\n        return this.statusMap.has(this.userStatusType.Accepted) ?\n            this.statusMap.get(this.userStatusType.Accepted).length : 0;\n    }\n\n    get confirmedCount() {\n        return this.statusMap.has(this.userStatusType.Confirmed) ?\n            this.statusMap.get(this.userStatusType.Confirmed).length : 0;\n    }\n\n    get showConfirmUsers(): boolean {\n        return this.allUsers != null && this.statusMap != null && this.allUsers.length > 1 &&\n            this.confirmedCount > 0 && this.confirmedCount < 3 && this.acceptedCount > 0;\n    }\n\n    get showBulkConfirmUsers(): boolean {\n        return this.acceptedCount > 0;\n    }\n\n    abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n    abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n    loading = true;\n    statusMap = new Map<StatusType, UserType[]>();\n    status: StatusType;\n    users: UserType[] = [];\n    pagedUsers: UserType[] = [];\n    searchText: string;\n    actionPromise: Promise<any>;\n\n    protected allUsers: UserType[] = [];\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedUsersCount = 0;\n\n    constructor(protected apiService: ApiService, private searchService: SearchService,\n        protected i18nService: I18nService, private platformUtilsService: PlatformUtilsService,\n        protected toasterService: ToasterService, protected cryptoService: CryptoService,\n        private storageService: StorageService, protected validationService: ValidationService,\n        protected modalService: ModalService, private logService: LogService,\n        private searchPipe: SearchPipe, protected userNamePipe: UserNamePipe) { }\n\n    abstract edit(user: UserType): void;\n    abstract getUsers(): Promise<ListResponse<UserType>>;\n    abstract deleteUser(id: string): Promise<any>;\n    abstract reinviteUser(id: string): Promise<any>;\n    abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<any>;\n\n    async load() {\n        const response = await this.getUsers();\n        this.statusMap.clear();\n        for (const status of Utils.iterateEnum(this.userStatusType)) {\n            this.statusMap.set(status, []);\n        }\n\n        this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n        this.allUsers.sort(Utils.getSortFunction(this.i18nService, 'email'));\n        this.allUsers.forEach(u => {\n            if (!this.statusMap.has(u.status)) {\n                this.statusMap.set(u.status, [u]);\n            } else {\n                this.statusMap.get(u.status).push(u);\n            }\n        });\n        this.filter(this.status);\n        this.loading = false;\n    }\n\n    filter(status: StatusType) {\n        this.status = status;\n        if (this.status != null) {\n            this.users = this.statusMap.get(this.status);\n        } else {\n            this.users = this.allUsers;\n        }\n        // Reset checkbox selecton\n        this.selectAll(false);\n        this.resetPaging();\n    }\n\n    loadMore() {\n        if (!this.users || this.users.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedUsers.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n            pagedSize = this.pagedUsersCount;\n        }\n        if (this.users.length > pagedLength) {\n            this.pagedUsers = this.pagedUsers.concat(this.users.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedUsersCount = this.pagedUsers.length;\n        this.didScroll = this.pagedUsers.length > this.pageSize;\n    }\n\n    checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n        (user as any).checked = select == null ? !(user as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n\n        const filteredUsers = this.searchPipe.transform(this.users, this.searchText, 'name', 'email', 'id');\n\n        const selectCount = select && filteredUsers.length > MaxCheckedCount\n            ? MaxCheckedCount\n            : filteredUsers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkUser(filteredUsers[i], select);\n        }\n    }\n\n    async resetPaging() {\n        this.pagedUsers = [];\n        this.loadMore();\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    async remove(user: UserType) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.userNamePipe.transform(user),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n\n        if (!confirmed) {\n            return false;\n        }\n\n        this.actionPromise = this.deleteUser(user.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.userNamePipe.transform(user)));\n            this.removeUser(user);\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async reinvite(user: UserType) {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        this.actionPromise = this.reinviteUser(user.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', this.userNamePipe.transform(user)));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async confirm(user: UserType) {\n        function updateUser(self: BasePeopleComponent<UserType>) {\n            user.status = self.userStatusType.Confirmed;\n            const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n            if (mapIndex > -1) {\n                self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n                self.statusMap.get(self.userStatusType.Confirmed).push(user);\n            }\n        }\n\n        const confirmUser = async (publicKey: Uint8Array) => {\n            try {\n                this.actionPromise = this.confirmUser(user, publicKey);\n                await this.actionPromise;\n                updateUser(this);\n                this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.userNamePipe.transform(user)));\n            } catch (e) {\n                this.validationService.showError(e);\n                throw e;\n            } finally {\n                this.actionPromise = null;\n            }\n        };\n\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n            const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n            const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\n            if (autoConfirm == null || !autoConfirm) {\n                const [modal] = await this.modalService.openViewRef(UserConfirmComponent, this.confirmModalRef, comp => {\n                    comp.name = this.userNamePipe.transform(user);\n                    comp.userId = user != null ? user.userId : null;\n                    comp.publicKey = publicKey;\n                    comp.onConfirmedUser.subscribe(async () => {\n                        try {\n                            comp.formPromise = confirmUser(publicKey);\n                            await comp.formPromise;\n                            modal.close();\n                        } catch { }\n                    });\n                });\n                return;\n            }\n\n            try {\n                const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n                this.logService.info(`User's fingerprint: ${fingerprint.join('-')}`);\n            } catch { }\n            await confirmUser(publicKey);\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.users && this.users.length > this.pageSize;\n    }\n\n    protected getCheckedUsers() {\n        return this.users.filter(u => (u as any).checked);\n    }\n\n    protected removeUser(user: UserType) {\n        let index = this.users.indexOf(user);\n        if (index > -1) {\n            this.users.splice(index, 1);\n            this.resetPaging();\n        }\n        if (this.statusMap.has(user.status)) {\n            index = this.statusMap.get(user.status).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(user.status).splice(index, 1);\n            }\n        }\n    }\n\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\n@Component({\n    selector: 'app-user-confirm',\n    templateUrl: 'user-confirm.component.html',\n})\nexport class UserConfirmComponent implements OnInit {\n    @Input() name: string;\n    @Input() userId: string;\n    @Input() publicKey: Uint8Array;\n    @Output() onConfirmedUser = new EventEmitter();\n\n    dontAskAgain = false;\n    loading = true;\n    fingerprint: string;\n    formPromise: Promise<any>;\n\n    constructor(private cryptoService: CryptoService, private storageService: StorageService) { }\n\n    async ngOnInit() {\n        try {\n            if (this.publicKey != null) {\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, this.publicKey.buffer);\n                if (fingerprint != null) {\n                    this.fingerprint = fingerprint.join('-');\n                }\n            }\n        } catch { }\n        this.loading = false;\n    }\n\n    async submit() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.dontAskAgain) {\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\n        }\n\n        this.onConfirmedUser.emit();\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"confirmUserTitle\"> {{'confirmUser' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <p><code>{{fingerprint}}</code></p> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\" [(ngModel)]=\"dontAskAgain\"> <label class=\"form-check-label\" for=\"dontAskAgain\"> {{'dontAskFingerprintAgain' | i18n}} </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport { ProviderUserBulkConfirmRequest } from 'jslib-common/models/request/provider/providerUserBulkConfirmRequest';\nimport { ProviderUserBulkRequest } from 'jslib-common/models/request/provider/providerUserBulkRequest';\n\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\n\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from 'src/app/organizations/manage/bulk/bulk-confirm.component';\nimport { BulkUserDetails } from 'src/app/organizations/manage/bulk/bulk-status.component';\n\n@Component({\n    templateUrl: '/src/app/organizations/manage/bulk/bulk-confirm.component.html',\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n\n    @Input() providerId: string;\n\n    protected isAccepted(user: BulkUserDetails) {\n        return user.status === ProviderUserStatusType.Accepted;\n    }\n\n    protected async getPublicKeys() {\n        const request = new ProviderUserBulkRequest(this.filteredUsers.map(user => user.id));\n        return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n    }\n\n    protected getCryptoKey() {\n        return this.cryptoService.getProviderKey(this.providerId);\n    }\n\n    protected async postConfirmRequest(userIdsWithKeys: any[]) {\n        const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n        return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n    }\n}\n","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport { ProviderUserBulkRequest } from 'jslib-common/models/request/provider/providerUserBulkRequest';\n\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from 'src/app/organizations/manage/bulk/bulk-remove.component';\n\n@Component({\n    templateUrl: '/src/app/organizations/manage/bulk/bulk-remove.component.html',\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n\n    @Input() providerId: string;\n\n    async deleteUsers() {\n        const request = new ProviderUserBulkRequest(this.users.map(user => user.id));\n        return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ProviderUserInviteRequest } from 'jslib-common/models/request/provider/providerUserInviteRequest';\n\nimport { PermissionsApi } from 'jslib-common/models/api/permissionsApi';\n\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\nimport { ProviderUserUpdateRequest } from 'jslib-common/models/request/provider/providerUserUpdateRequest';\n\n@Component({\n    selector: 'provider-user-add-edit',\n    templateUrl: 'user-add-edit.component.html',\n})\nexport class UserAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() providerUserId: string;\n    @Input() providerId: string;\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    emails: string;\n    type: ProviderUserType = ProviderUserType.ServiceUser;\n    permissions = new PermissionsApi();\n    showCustom = false;\n    access: 'all' | 'selected' = 'selected';\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    userType = ProviderUserType;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.providerUserId != null;\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editUser');\n            try {\n                const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n                this.type = user.type;\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteUser');\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            if (this.editMode) {\n                const request = new ProviderUserUpdateRequest();\n                request.type = this.type;\n                this.formPromise = this.apiService.putProviderUser(this.providerId, this.providerUserId, request);\n            } else {\n                const request = new ProviderUserInviteRequest();\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\n                request.type = this.type;\n                this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\n            this.onDeletedUser.emit();\n        } catch { }\n    }\n\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'providerInviteUserDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"emails\">{{'email' | i18n}}</label> <input id=\"emails\" class=\"form-control\" type=\"text\" name=\"Emails\" [(ngModel)]=\"emails\" required appAutoFocus> <small class=\"text-muted\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small> </div> </ng-container> <h3> {{'userType' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#user-types\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeServiceUser\" [value]=\"userType.ServiceUser\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeServiceUser\"> {{'serviceUser' | i18n}} <small>{{'serviceUserDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeProviderAdmin\" [value]=\"userType.ProviderAdmin\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeProviderAdmin\"> {{'providerAdmin' | i18n}} <small>{{'providerAdminDesc' | i18n}}</small> </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'provider-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent {\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            const provider = await this.userService.getProvider(params.providerId);\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myProvider' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { BaseAcceptComponent } from 'src/app/common/base.accept.component';\n\n@Component({\n    selector: 'app-setup-provider',\n    templateUrl: 'setup-provider.component.html',\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n\n    failedShortMessage = 'inviteAcceptFailedShort';\n    failedMessage = 'inviteAcceptFailed';\n\n    requiredParameters = ['providerId', 'email', 'token'];\n\n    async authedHandler(qParams: any) {\n        this.router.navigate(['/providers/setup'], {queryParams: qParams});\n    }\n\n    // tslint:disable-next-line\n    async unauthedHandler(qParams: any) {}\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'setupProvider' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p>{{'setupProviderLoginDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { ProviderSetupRequest } from 'jslib-common/models/request/provider/providerSetupRequest';\n\n@Component({\n    selector: 'provider-setup',\n    templateUrl: 'setup.component.html',\n})\nexport class SetupComponent implements OnInit {\n    loading = true;\n    authed = false;\n    email: string;\n    formPromise: Promise<any>;\n\n    providerId: string;\n    token: string;\n    name: string;\n    billingEmail: string;\n\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private cryptoService: CryptoService, private apiService: ApiService,\n        private syncService: SyncService, private validationService: ValidationService) { }\n\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n            if (error) {\n                const toast: Toast = {\n                    type: 'error',\n                    title: null,\n                    body: this.i18nService.t('emergencyInviteAcceptFailed'),\n                    timeout: 10000,\n                };\n                this.toasterService.popAsync(toast);\n                this.router.navigate(['/']);\n                return;\n            }\n\n            this.providerId = qParams.providerId;\n            this.token = qParams.token;\n\n            // Check if provider exists, redirect if it does\n            try {\n                const provider = await this.apiService.getProvider(this.providerId);\n                if (provider.name != null) {\n                    this.router.navigate(['/providers', provider.id], { replaceUrl: true });\n                }\n            } catch (e) {\n                this.validationService.showError(e);\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n    async submit() {\n        this.formPromise = this.doSubmit();\n        await this.formPromise;\n        this.formPromise = null;\n    }\n\n    async doSubmit() {\n        try {\n            const shareKey = await this.cryptoService.makeShareKey();\n            const key = shareKey[0].encryptedString;\n\n            const request = new ProviderSetupRequest();\n            request.name = this.name;\n            request.billingEmail = this.billingEmail;\n            request.token = this.token;\n            request.key = key;\n\n            const provider = await this.apiService.postProviderSetup(this.providerId, request);\n            this.toasterService.popAsync('success', null, this.i18nService.t('providerSetup'));\n            await this.syncService.fullSync(true);\n\n            this.router.navigate(['/providers', provider.id]);\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n    }\n}\n","<app-navbar></app-navbar> <div class=\"container page-content\"> <div class=\"page-header\"> <h1>{{'setupProvider' | i18n}}</h1> </div> <p>{{'setupProviderDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\"> <h2 class=\"mt-5\">{{'generalInformation' | i18n}}</h2> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'providerName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group col-6\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"billingEmail\" required> </div> </div> <div class=\"mt-4\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\"> {{'cancel' | i18n}} </button> </div> </form> </div> <app-footer></app-footer> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { ProviderUpdateRequest } from 'jslib-common/models/request/provider/providerUpdateRequest';\n\nimport { ProviderResponse } from 'jslib-common/models/response/provider/providerResponse';\n\n@Component({\n    selector: 'provider-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    selfHosted = false;\n    loading = true;\n    provider: ProviderResponse;\n    formPromise: Promise<any>;\n    taxFormPromise: Promise<any>;\n\n    private providerId: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private route: ActivatedRoute,\n        private syncService: SyncService, private platformUtilsService: PlatformUtilsService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n        this.route.parent.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            try {\n                this.provider = await this.apiService.getProvider(this.providerId);\n            } catch (e) {\n                this.logService.error(`Handled exception: ${e}`);\n            }\n        });\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new ProviderUpdateRequest();\n            request.name = this.provider.name;\n            request.businessName = this.provider.businessName;\n            request.billingEmail = this.provider.billingEmail;\n\n            this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('providerUpdated'));\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myProvider' | i18n}}</h1> </div> <div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"provider && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'providerName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"provider.name\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"provider.billingEmail\" [disabled]=\"selfHosted\"> </div> </div> <div class=\"col-6\"> <app-avatar data=\"{{provider.name}}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-nested-checkbox',\n    templateUrl: 'nested-checkbox.component.html',\n})\nexport class NestedCheckboxComponent {\n    @Input() parentId: string;\n    @Input() checkboxes: { id: string, get: () => boolean, set: (v: boolean) => void; }[];\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    get parentIndeterminate() {\n        return !this.parentChecked &&\n            this.checkboxes.some(c => c.get());\n    }\n\n    get parentChecked() {\n        return this.checkboxes.every(c => c.get());\n    }\n\n    set parentChecked(value: boolean) {\n        this.checkboxes.forEach(c => {\n            c.set(value);\n        });\n    }\n\n    pascalize(s: string) {\n        return Utils.camelToPascalCase(s);\n    }\n}\n","<div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" [name]=\"pascalize(parentId)\" [id]=\"parentId\" [(ngModel)]=\"parentChecked\" [indeterminate]=\"parentIndeterminate\"> <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\"> {{parentId | i18n}} </label> </div> <div class=\"form-group form-group-child-check mb-0\"> <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\"> <input class=\"form-check-input\" type=\"checkbox\" [name]=\"pascalize(c.id)\" [id]=\"c.id\" [ngModel]=\"c.get()\" (ngModelChange)=\"c.set($event)\"> <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\"> {{c.id | i18n}} </label> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from 'jslib-angular/components/password-reprompt.component';\n\n@Component({\n    templateUrl: 'password-reprompt.component.html',\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"confirmUserTitle\"> {{'passwordConfirmation' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> {{'passwordConfirmationDesc' | i18n}} <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick> <span>{{'ok' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> </div> </form> </div> </div> ","import { Directive } from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { ModalRef } from './modal/modal.ref';\n\n@Directive()\nexport class PasswordRepromptComponent {\n\n    showPassword = false;\n    masterPassword = '';\n\n    constructor(private modalRef: ModalRef, private cryptoService: CryptoService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService) {}\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n    }\n\n    async submit() {\n        if (!await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n            return;\n        }\n\n        this.modalRef.close(true);\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBlurClick]',\n})\nexport class BlurClickDirective {\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('click') onClick() {\n        this.el.nativeElement.blur();\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-user-layout',\n    templateUrl: 'user-layout.component.html',\n})\nexport class UserLayoutComponent implements OnInit {\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","<app-navbar></app-navbar> <router-outlet></router-outlet> <app-footer></app-footer> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { EmergencyAccessAcceptRequest } from 'jslib-common/models/request/emergencyAccessAcceptRequest';\nimport { BaseAcceptComponent } from '../common/base.accept.component';\n\n@Component({\n    selector: 'app-accept-emergency',\n    templateUrl: 'accept-emergency.component.html',\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n\n    name: string;\n\n    protected requiredParameters: string[] = ['id', 'name', 'email', 'token'];\n    protected failedShortMessage = 'emergencyInviteAcceptFailedShort';\n    protected failedMessage = 'emergencyInviteAcceptFailed';\n\n    constructor(router: Router, toasterService: ToasterService,\n        i18nService: I18nService, route: ActivatedRoute,\n        private apiService: ApiService, userService: UserService,\n        stateService: StateService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any): Promise<void> {\n        const request = new EmergencyAccessAcceptRequest();\n        request.token = qParams.token;\n        this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n        await this.actionPromise;\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('emergencyInviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any): Promise<void> {\n        this.name = qParams.name;\n        if (this.name != null) {\n            // Fix URL encoding of space issue with Angular\n            this.name = this.name.replace(/\\+/g, ' ');\n        }\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'emergencyAccess' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{name}} </p> <p>{{'acceptEmergencyAccess' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { OrganizationUserAcceptRequest } from 'jslib-common/models/request/organizationUserAcceptRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\nimport { Policy } from 'jslib-common/models/domain/policy';\nimport { BaseAcceptComponent } from '../common/base.accept.component';\n\n@Component({\n    selector: 'app-accept-organization',\n    templateUrl: 'accept-organization.component.html',\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n    orgName: string;\n\n    protected requiredParameters: string[] = ['organizationId', 'organizationUserId', 'token'];\n\n    constructor(router: Router, toasterService: ToasterService,\n        i18nService: I18nService, route: ActivatedRoute,\n        private apiService: ApiService, userService: UserService,\n        stateService: StateService, private cryptoService: CryptoService,\n        private policyService: PolicyService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any): Promise<void> {\n        const request = new OrganizationUserAcceptRequest();\n        request.token = qParams.token;\n        if (await this.performResetPasswordAutoEnroll(qParams)) {\n            this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                qParams.organizationUserId, request).then(() => {\n                    // Retrieve Public Key\n                    return this.apiService.getOrganizationKeys(qParams.organizationId);\n                }).then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                    }\n\n                    const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n                    // RSA Encrypt user's encKey.key with organization public key\n                    const encKey = await this.cryptoService.getEncKey();\n                    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n                    // Create request and execute enrollment\n                    const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n                    resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n                    // Get User Id\n                    const userId = await this.userService.getUserId();\n\n                    return this.apiService.putOrganizationUserResetPasswordEnrollment(qParams.organizationId, userId, resetRequest);\n                });\n        } else {\n            this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                qParams.organizationUserId, request);\n        }\n\n        await this.actionPromise;\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('inviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n\n        await this.stateService.remove('orgInvitation');\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any): Promise<void> {\n        this.orgName = qParams.organizationName;\n        if (this.orgName != null) {\n            // Fix URL encoding of space issue with Angular\n            this.orgName = this.orgName.replace(/\\+/g, ' ');\n        }\n        await this.stateService.save('orgInvitation', qParams);\n    }\n\n    private async performResetPasswordAutoEnroll(qParams: any): Promise<boolean> {\n        let policyList: Policy[] = null;\n        try {\n            const policies = await this.apiService.getPoliciesByToken(qParams.organizationId, qParams.token,\n                qParams.email, qParams.organizationUserId);\n            policyList = this.policyService.mapPoliciesFromToken(policies);\n        } catch { }\n\n        if (policyList != null) {\n            const result = this.policyService.getResetPasswordPolicyOptions(policyList, qParams.organizationId);\n            // Return true if policy enabled and auto-enroll enabled\n            return result[1] && result[0].autoEnrollEnabled;\n        }\n\n        return false;\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'joinOrganization' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{orgName}} <strong class=\"d-block mt-2\">{{email}}</strong> </p> <p>{{'joinOrganizationDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { HintComponent as BaseHintComponent } from 'jslib-angular/components/hint.component';\n\n@Component({\n    selector: 'app-hint',\n    templateUrl: 'hint.component.html',\n})\nexport class HintComponent extends BaseHintComponent {\n    constructor(router: Router, i18nService: I18nService,\n        apiService: ApiService, platformUtilsService: PlatformUtilsService) {\n        super(router, i18nService, apiService, platformUtilsService);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'passwordHint' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> <small class=\"form-text text-muted\">{{'enterEmailToGetHint' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span [hidden]=\"form.loading\">{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { RouterService } from '../services/router.service';\n\nimport { LockComponent as BaseLockComponent } from 'jslib-angular/components/lock.component';\n\n@Component({\n    selector: 'app-lock',\n    templateUrl: 'lock.component.html',\n})\nexport class LockComponent extends BaseLockComponent {\n    constructor(router: Router, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, messagingService: MessagingService,\n        userService: UserService, cryptoService: CryptoService,\n        storageService: StorageService, vaultTimeoutService: VaultTimeoutService,\n        environmentService: EnvironmentService, private routerService: RouterService,\n        stateService: StateService, apiService: ApiService) {\n        super(router, i18nService, platformUtilsService, messagingService, userService, cryptoService,\n            storageService, vaultTimeoutService, environmentService, stateService, apiService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        this.onSuccessfulSubmit = () => {\n            const previousUrl = this.routerService.getPreviousUrl();\n            if (previousUrl !== '/' && previousUrl.indexOf('lock') === -1) {\n                this.successRoute = previousUrl;\n            }\n            this.router.navigate([this.successRoute]);\n        };\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"text-center mb-4\"> <i class=\"fa fa-lock fa-4x text-muted\" aria-hidden=\"true\"></i> </p> <p class=\"lead text-center mx-4 mb-4\">{{'yourVaultIsLocked' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> <small class=\"text-muted form-text\"> {{'loggedInAsEmailOn' | i18n : email : webVaultHostname}} </small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-unlock-alt\" aria-hidden=\"true\"></i> {{'unlock' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { LoginComponent as BaseLoginComponent } from 'jslib-angular/components/login.component';\n\nimport { Policy } from 'jslib-common/models/domain/policy';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.component.html',\n})\nexport class LoginComponent extends BaseLoginComponent {\n\n    showResetPasswordAutoEnrollWarning = false;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, private route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService, environmentService: EnvironmentService,\n        passwordGenerationService: PasswordGenerationService, cryptoFunctionService: CryptoFunctionService,\n        private apiService: ApiService, private policyService: PolicyService) {\n        super(authService, router,\n            platformUtilsService, i18nService,\n            stateService, environmentService,\n            passwordGenerationService, cryptoFunctionService,\n            storageService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            await super.ngOnInit();\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            let policyList: Policy[] = null;\n            try {\n                const policies = await this.apiService.getPoliciesByToken(invite.organizationId, invite.token,\n                    invite.email, invite.organizationUserId);\n                policyList = this.policyService.mapPoliciesFromToken(policies);\n            } catch { }\n\n            if (policyList != null) {\n                const result = this.policyService.getResetPasswordPolicyOptions(policyList, invite.organizationId);\n                // Set to true if policy enabled and auto-enroll enabled\n                this.showResetPasswordAutoEnrollWarning = result[1] && result[0].autoEnrollEnabled;\n            }\n        }\n    }\n\n    async goAfterLogIn() {\n        const loginRedirect = await this.stateService.get<any>('loginRedirect');\n        if (loginRedirect != null) {\n            this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n            await this.stateService.remove('loginRedirect');\n        } else {\n            this.router.navigate([this.successRoute]);\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <img class=\"mb-2 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"lead text-center mx-4 mb-4\">{{'loginOrCreateNewAccount' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout type=\"warning\" title=\"{{'resetPasswordPolicyAutoEnroll' | i18n}}\" *ngIf=\"showResetPasswordAutoEnrollWarning\"> {{'resetPasswordAutoEnrollInviteWarning' | i18n}} </app-callout> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> <small class=\"form-text\"> <a routerLink=\"/hint\">{{'getMasterPasswordHint' | i18n}}</a> </small> </div> <div class=\"form-check mb-3\"> <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberEmail\" name=\"RememberEmail\" [(ngModel)]=\"rememberEmail\"> <label class=\"form-check-label\" for=\"rememberEmail\">{{'rememberEmail' | i18n}}</label> </div> <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'createAccount' | i18n}} </a> </div> <div class=\"d-flex\"> <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\"> <i class=\"fa fa-bank\" aria-hidden=\"true\"></i> {{'enterpriseSingleSignOn' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Directive, Input } from '@angular/core';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CaptchaIFrame } from 'jslib-common/misc/captcha_iframe';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n    @Input() captchaSiteKey: string = null;\n    captchaToken: string = null;\n    captcha: CaptchaIFrame;\n\n    constructor(protected environmentService: EnvironmentService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    async setupCaptcha() {\n        const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n        this.captcha = new CaptchaIFrame(window, webVaultUrl,\n            this.i18nService, (token: string) => {\n                this.captchaToken = token;\n            }, (error: string) => {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);\n            }, (info: string) => {\n                this.platformUtilsService.showToast('info', this.i18nService.t('info'), info);\n            }\n        );\n    }\n\n    showCaptcha() {\n        return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n\n    protected handleCaptchaRequired(response: { captchaSiteKey: string; }): boolean {\n        if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n            return false;\n        }\n\n        this.captchaSiteKey = response.captchaSiteKey;\n        this.captcha.init(response.captchaSiteKey);\n        return true;\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { DeleteRecoverRequest } from 'jslib-common/models/request/deleteRecoverRequest';\n\n@Component({\n    selector: 'app-recover-delete',\n    templateUrl: 'recover-delete.component.html',\n})\nexport class RecoverDeleteComponent {\n    email: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService) {\n    }\n\n    async submit() {\n        try {\n            const request = new DeleteRecoverRequest();\n            request.email = this.email.trim().toLowerCase();\n            this.formPromise = this.apiService.postAccountRecoverDelete(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deleteRecoverEmailSent'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <p>{{'deleteRecoverDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { TwoFactorRecoveryRequest } from 'jslib-common/models/request/twoFactorRecoveryRequest';\n\n@Component({\n    selector: 'app-recover-two-factor',\n    templateUrl: 'recover-two-factor.component.html',\n})\nexport class RecoverTwoFactorComponent {\n    email: string;\n    masterPassword: string;\n    recoveryCode: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private cryptoService: CryptoService, private authService: AuthService) { }\n\n    async submit() {\n        try {\n            const request = new TwoFactorRecoveryRequest();\n            request.recoveryCode = this.recoveryCode.replace(/\\s/g, '').toLowerCase();\n            request.email = this.email.trim().toLowerCase();\n            const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n            this.formPromise = this.apiService.postTwoFactorRecover(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepRecoverDisabled'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'recoverAccountTwoStep' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <p>{{'recoverAccountTwoStepDesc' | i18n}} <a href=\"https://help.bitwarden.com/article/lost-two-step-device/\" target=\"_blank\" rel=\"noopener\">{{'learnMore' | i18n}}</a> </p> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"recoveryCode\">{{'recoveryCodeTitle' | i18n}}</label> <input id=\"recoveryCode\" class=\"text-monospace form-control\" type=\"text\" name=\"RecoveryCode\" [(ngModel)]=\"recoveryCode\" required appInputVerbatim> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { RegisterComponent as BaseRegisterComponent } from 'jslib-angular/components/register.component';\n\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { Policy } from 'jslib-common/models/domain/policy';\n\nimport { PolicyData } from 'jslib-common/models/data/policyData';\nimport { ReferenceEventRequest } from 'jslib-common/models/request/referenceEventRequest';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: 'register.component.html',\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n    showCreateOrgMessage = false;\n    layout = '';\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n    private policies: Policy[];\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, cryptoService: CryptoService,\n        apiService: ApiService, private route: ActivatedRoute,\n        stateService: StateService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, private policyService: PolicyService,\n        environmentService: EnvironmentService) {\n        super(authService, router, i18nService, cryptoService, apiService, stateService, platformUtilsService,\n            passwordGenerationService, environmentService);\n    }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(qParams => {\n            this.referenceData = new ReferenceEventRequest();\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.showCreateOrgMessage = true;\n                this.referenceData.flow = qParams.org;\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            if (qParams.layout != null) {\n                this.layout = this.referenceData.layout = qParams.layout;\n            }\n            if (qParams.reference != null) {\n                this.referenceData.id = qParams.reference;\n            } else {\n                this.referenceData.id = ('; ' + document.cookie).split('; reference=').pop().split(';').shift();\n            }\n            if (this.referenceData.id === '') {\n                this.referenceData.id = null;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            try {\n                const policies = await this.apiService.getPoliciesByToken(invite.organizationId, invite.token,\n                    invite.email, invite.organizationUserId);\n                if (policies.data != null) {\n                    const policiesData = policies.data.map(p => new PolicyData(p));\n                    this.policies = policiesData.map(p => new Policy(p));\n                }\n            } catch { }\n        }\n\n        if (this.policies != null) {\n            this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(this.policies);\n        }\n\n        await super.ngOnInit();\n    }\n\n    async submit() {\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(this.masterPasswordScore, this.masterPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return;\n        }\n\n        await super.submit();\n    }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\"> <header class=\"header\" *ngIf=\"layout === 'enterprise2'\"> <div class=\"container\"> <div class=\"row\"> <div class=\"col-7\"> <img alt=\"Bitwarden\" class=\"logo mb-2\" src=\"images/logo-horizontal-white.png\"> </div> </div> </div> </header> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row\"> <div class=\"col-7\" *ngIf=\"layout\"> <div class=\"mt-5\"> <div *ngIf=\"layout === 'enterprise2'\"> <h2>Companies globally trust Bitwarden for password management.</h2> <p>Start your 7-day free trial!</p> <p class=\"highlight\">Quickly deploy your <b>organization</b></p> <p>Use Bitwarden across all platforms</p> <p>Collaborate and share securely</p> <figure> <figcaption> <cite> <img src=\"images/wired-logo.png\" alt=\"Wired\"> </cite> </figcaption> <blockquote> \"Bitwarden has become a popular choice among open-source software advocates. After using it for a few months, I can see why.\" - February 2020 </blockquote> </figure> </div> <div *ngIf=\"layout === 'enterprise3'\"> <p>Enterprise 3 layout</p> </div> <div *ngIf=\"layout === 'enterprise4'\"> <p>Enterprise 4 layout</p> </div> </div> </div> <div [ngClass]=\"{'col-5': layout, 'col-12': !layout}\"> <div class=\"row justify-content-md-center mt-5\"> <div [ngClass]=\"{'col-5': !layout, 'col-12': layout}\"> <p class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{'createAccount' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout title=\"{{'createOrganizationStep1' | i18n}}\" type=\"info\" icon=\"fa-thumb-tack\" *ngIf=\"showCreateOrgMessage\"> {{'createOrganizationCreatePersonalAccount' | i18n}} </app-callout> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required [appAutofocus]=\"email === ''\" inputmode=\"email\" appInputVerbatim=\"false\"> <small class=\"form-text text-muted\">{{'emailAddressDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"name\">{{'yourName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" [appAutofocus]=\"email !== ''\"> <small class=\"form-text text-muted\">{{'yourNameDesc' | i18n}}</small> </div> <div class=\"form-group\"> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"confirmMasterPassword\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div> <div class=\"form-group\" *ngIf=\"showTerms\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"acceptPolicies\" [(ngModel)]=\"acceptPolicies\" name=\"AcceptPolicies\"> <label class=\"form-check-label small text-muted\" for=\"acceptPolicies\"> {{'acceptPolicies' | i18n}}<br> <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{'termsOfService' | i18n}}</a>, <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{'privacyPolicy' | i18n}}</a> </label> </div> </div> <hr> <div class=\"d-flex mb-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </div> </div> </form> </div> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    SetPasswordComponent as BaseSetPasswordComponent,\n} from 'jslib-angular/components/set-password.component';\n\n@Component({\n    selector: 'app-set-password',\n    templateUrl: 'set-password.component.html',\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n    constructor(apiService: ApiService, i18nService: I18nService,\n        cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, router: Router,\n        syncService: SyncService, route: ActivatedRoute) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService, router, apiService, syncService, route);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'setMasterPassword' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body text-center\" *ngIf=\"syncLoading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!syncLoading\"> <app-callout type=\"info\">{{'ssoCompleteRegistration' | i18n}}</app-callout> <app-callout type=\"warning\" title=\"{{'resetPasswordPolicyAutoEnroll' | i18n}}\" *ngIf=\"resetPasswordAutoEnroll\"> {{'resetPasswordAutoEnrollInviteWarning' | i18n}} </app-callout> <div class=\"form-group\"> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordHash\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { SsoComponent as BaseSsoComponent } from 'jslib-angular/components/sso.component';\n\nconst IdentifierStorageKey = 'ssoOrgIdentifier';\n\n@Component({\n    selector: 'app-sso',\n    templateUrl: 'sso.component.html',\n})\nexport class SsoComponent extends BaseSsoComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService,\n        cryptoFunctionService: CryptoFunctionService, environmentService: EnvironmentService,\n        passwordGenerationService: PasswordGenerationService) {\n        super(authService, router, i18nService, route, storageService, stateService, platformUtilsService,\n            apiService, cryptoFunctionService, environmentService, passwordGenerationService);\n        this.redirectUri = window.location.origin + '/sso-connector.html';\n        this.clientId = 'web';\n    }\n\n    async ngOnInit() {\n        super.ngOnInit();\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            } else {\n                const storedIdentifier = await this.storageService.get<string>(IdentifierStorageKey);\n                if (storedIdentifier != null) {\n                    this.identifier = storedIdentifier;\n                }\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    async submit() {\n        await this.storageService.save(IdentifierStorageKey, this.identifier);\n        if (this.clientId === 'browser') {\n            document.cookie = `ssoHandOffMessage=${this.i18nService.t('ssoHandOff')};SameSite=strict`;\n        }\n        super.submit();\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" class=\"container\" [appApiAction]=\"initiateSsoFormPromise\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\"> <div class=\"card d-block mt-4\"> <div class=\"card-body\" *ngIf=\"loggingIn\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loggingIn\"> <p>{{'ssoLogInWithOrgIdentifier' | i18n}}</p> <div class=\"form-group\"> <label for=\"identifier\">{{'organizationIdentifier' | i18n}}</label> <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\" [(ngModel)]=\"identifier\" required appAutofocus> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Directive } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { AuthResult } from 'jslib-common/models/domain/authResult';\n\n@Directive()\nexport class SsoComponent {\n    identifier: string;\n    loggingIn = false;\n\n    formPromise: Promise<AuthResult>;\n    initiateSsoFormPromise: Promise<any>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n    onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n    onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'lock';\n    protected changePasswordRoute = 'set-password';\n    protected forcePasswordResetRoute = 'update-temp-password';\n    protected clientId: string;\n    protected redirectUri: string;\n    protected state: string;\n    protected codeChallenge: string;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected route: ActivatedRoute,\n        protected storageService: StorageService, protected stateService: StateService,\n        protected platformUtilsService: PlatformUtilsService, protected apiService: ApiService,\n        protected cryptoFunctionService: CryptoFunctionService, protected environmentService: EnvironmentService,\n        protected passwordGenerationService: PasswordGenerationService) { }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.code != null && qParams.state != null) {\n                const codeVerifier = await this.storageService.get<string>(ConstantsService.ssoCodeVerifierKey);\n                const state = await this.storageService.get<string>(ConstantsService.ssoStateKey);\n                await this.storageService.remove(ConstantsService.ssoCodeVerifierKey);\n                await this.storageService.remove(ConstantsService.ssoStateKey);\n                if (qParams.code != null && codeVerifier != null && state != null && this.checkState(state, qParams.state)) {\n                    await this.logIn(qParams.code, codeVerifier, this.getOrgIdentiferFromState(qParams.state));\n                }\n            } else if (qParams.clientId != null && qParams.redirectUri != null && qParams.state != null &&\n                qParams.codeChallenge != null) {\n                this.redirectUri = qParams.redirectUri;\n                this.state = qParams.state;\n                this.codeChallenge = qParams.codeChallenge;\n                this.clientId = qParams.clientId;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n        this.initiateSsoFormPromise = this.preValidate();\n        if (await this.initiateSsoFormPromise) {\n            const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n            this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n        }\n    }\n\n    async preValidate(): Promise<boolean> {\n        if (this.identifier == null || this.identifier === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('ssoValidationFailed'),\n                this.i18nService.t('ssoIdentifierRequired'));\n            return false;\n        }\n        return await this.apiService.preValidateSso(this.identifier);\n    }\n\n    protected async buildAuthorizeUrl(returnUri?: string, includeUserIdentifier?: boolean): Promise<string> {\n        let codeChallenge = this.codeChallenge;\n        let state = this.state;\n\n        const passwordOptions: any = {\n            type: 'password',\n            length: 64,\n            uppercase: true,\n            lowercase: true,\n            numbers: true,\n            special: false,\n        };\n\n        if (codeChallenge == null) {\n            const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n            const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, 'sha256');\n            codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n            await this.storageService.save(ConstantsService.ssoCodeVerifierKey, codeVerifier);\n        }\n\n        if (state == null) {\n            state = await this.passwordGenerationService.generatePassword(passwordOptions);\n            if (returnUri) {\n                state += `_returnUri='${returnUri}'`;\n            }\n        }\n\n        // Add Organization Identifier to state\n        state += `_identifier=${this.identifier}`;\n\n        // Save state (regardless of new or existing)\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\n\n        let authorizeUrl = this.environmentService.getIdentityUrl() + '/connect/authorize?' +\n            'client_id=' + this.clientId + '&redirect_uri=' + encodeURIComponent(this.redirectUri) + '&' +\n            'response_type=code&scope=api offline_access&' +\n            'state=' + state + '&code_challenge=' + codeChallenge + '&' +\n            'code_challenge_method=S256&response_mode=query&' +\n            'domain_hint=' + encodeURIComponent(this.identifier);\n\n        if (includeUserIdentifier) {\n            const userIdentifier = await this.apiService.getSsoUserIdentifier();\n            authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n        }\n\n        return authorizeUrl;\n    }\n\n    private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n        this.loggingIn = true;\n        try {\n            this.formPromise = this.authService.logInSso(code, codeVerifier, this.redirectUri);\n            const response = await this.formPromise;\n            if (response.twoFactor) {\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute], {\n                        queryParams: {\n                            identifier: orgIdFromState,\n                            sso: 'true',\n                        },\n                    });\n                }\n            } else if (response.resetMasterPassword) {\n                if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n                    this.onSuccessfulLoginChangePasswordNavigate();\n                } else {\n                    this.router.navigate([this.changePasswordRoute], {\n                        queryParams: {\n                            identifier: orgIdFromState,\n                        },\n                    });\n                }\n            } else if (response.forcePasswordReset) {\n                if (this.onSuccessfulLoginForceResetNavigate != null) {\n                    this.onSuccessfulLoginForceResetNavigate();\n                } else {\n                    this.router.navigate([this.forcePasswordResetRoute]);\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch { }\n        this.loggingIn = false;\n    }\n\n    private getOrgIdentiferFromState(state: string): string {\n        if (state === null || state === undefined) {\n            return null;\n        }\n\n        const stateSplit = state.split('_identifier=');\n        return stateSplit.length > 1 ? stateSplit[1] : null;\n    }\n\n    private checkState(state: string, checkState: string): boolean {\n        if (state === null || state === undefined) {\n            return false;\n        }\n        if (checkState === null || checkState === undefined) {\n            return false;\n        }\n\n        const stateSplit = state.split('_identifier=');\n        const checkStateSplit = checkState.split('_identifier=');\n        return stateSplit[0] === checkStateSplit[0];\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent,\n} from 'jslib-angular/components/two-factor-options.component';\n\n@Component({\n    selector: 'app-two-factor-options',\n    templateUrl: 'two-factor-options.component.html',\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService) {\n        super(authService, router, i18nService, platformUtilsService, window);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{'twoStepOptions' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"list-group list-group-flush\"> <a href=\"#\" appStopClick *ngFor=\"let p of providers\" (click)=\"choose(p)\" class=\"list-group-item list-group-item-action\"> <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\" class=\"pull-right\"> <h3>{{p.name}}</h3> {{p.description}} </a> <a href=\"#\" appStopClick class=\"list-group-item list-group-item-action\" (click)=\"recover()\"> <h3>{{'recoveryCodeTitle' | i18n}}</h3> {{'recoveryCodeDesc' | i18n}} </a> </div> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    Component,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from 'jslib-angular/components/two-factor.component';\n\nimport { TwoFactorOptionsComponent } from './two-factor-options.component';\n\n@Component({\n    selector: 'app-two-factor',\n    templateUrl: 'two-factor.component.html',\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n    @ViewChild('twoFactorOptions', { read: ViewContainerRef, static: true }) twoFactorOptionsModal: ViewContainerRef;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, apiService: ApiService,\n        platformUtilsService: PlatformUtilsService, stateService: StateService,\n        environmentService: EnvironmentService, private modalService: ModalService,\n        storageService: StorageService, route: ActivatedRoute) {\n        super(authService, router, i18nService, apiService, platformUtilsService, window, environmentService,\n            stateService, storageService, route);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    async anotherMethod() {\n        const [modal] = await this.modalService.openViewRef(TwoFactorOptionsComponent, this.twoFactorOptionsModal, comp => {\n            comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n                modal.close();\n                this.selectedProviderType = provider;\n                await this.init();\n            });\n            comp.onRecoverSelected.subscribe(() => {\n                modal.close();\n            });\n        });\n    }\n\n    async goAfterLogIn() {\n        const loginRedirect = await this.stateService.get<any>('loginRedirect');\n        if (loginRedirect != null) {\n            this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n            await this.stateService.remove('loginRedirect');\n        } else {\n            this.router.navigate([this.successRoute], {\n                queryParams: {\n                    identifier: this.identifier,\n                },\n            });\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\" [ngClass]=\"{'col-9': selectedProviderType === providerType.Duo || selectedProviderType === providerType.OrganizationDuo}\"> <p class=\"lead text-center mb-4\">{{title}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <ng-container *ngIf=\"selectedProviderType === providerType.Email || selectedProviderType === providerType.Authenticator\"> <p *ngIf=\"selectedProviderType === providerType.Authenticator\"> {{'enterVerificationCodeApp' | i18n}}</p> <p *ngIf=\"selectedProviderType === providerType.Email\"> {{'enterVerificationCodeEmail' | i18n : twoFactorEmail}} </p> <div class=\"form-group\"> <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label> <input id=\"code\" type=\"text\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required appAutofocus inputmode=\"tel\" appInputVerbatim> <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\"> <a href=\"#\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\" *ngIf=\"selectedProviderType === providerType.Email\"> {{'sendVerificationCodeEmailAgain' | i18n}} </a> </small> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\"> <p class=\"text-center\">{{'insertYubiKey' | i18n}}</p> <img src=\"images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\"> <div class=\"form-group\"> <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label> <input id=\"code\" type=\"password\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required appAutofocus appInputVerbatim autocomplete=\"new-password\"> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\"> <div id=\"web-authn-frame\" class=\"mb-3\"> <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.Duo ||\n                        selectedProviderType === providerType.OrganizationDuo\"> <div id=\"duo-frame\" class=\"mb-3\"> <iframe id=\"duo_iframe\"></iframe> </div> </ng-container> <i class=\"fa fa-spinner text-muted fa-spin pull-right\" title=\"{{'loading' | i18n}}\" *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\" aria-hidden=\"true\"></i> <div class=\"form-check\" *ngIf=\"selectedProviderType != null\"> <input id=\"remember\" type=\"checkbox\" name=\"Remember\" class=\"form-check-input\" [(ngModel)]=\"remember\"> <label for=\"remember\" class=\"form-check-label\">{{'rememberMe' | i18n}}</label> </div> <ng-container *ngIf=\"selectedProviderType == null\"> <p>{{'noTwoStepProviders' | i18n}}</p> <p>{{'noTwoStepProviders2' | i18n}}</p> </ng-container> <hr> <div class=\"d-flex mb-3\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\" *ngIf=\"selectedProviderType != null && selectedProviderType !== providerType.Duo && \n                        selectedProviderType !== providerType.OrganizationDuo && selectedProviderType !== providerType.WebAuthn\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> <div class=\"text-center\"> <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{'useAnotherTwoStepMethod' | i18n}}</a> </div> </div> </div> </div> </div> </form> <ng-template #twoFactorOptions></ng-template> ","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorEmailRequest extends PasswordVerificationRequest {\n    email: string;\n\n    constructor(email: string, masterPasswordHash: string) {\n        super();\n        this.masterPasswordHash = masterPasswordHash;\n        this.email = email;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from 'jslib-angular/components/update-temp-password.component';\n\n@Component({\n    selector: 'app-update-temp-password',\n    templateUrl: 'update-temp-password.component.html',\n})\n\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n    constructor(i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, policyService: PolicyService,\n        cryptoService: CryptoService, userService: UserService,\n        messagingService: MessagingService, apiService: ApiService,\n        syncService: SyncService) {\n        super(i18nService, platformUtilsService, passwordGenerationService, policyService, cryptoService,\n            userService, messagingService, apiService, syncService);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-4\"> <p class=\"lead text-center mb-4\">{{'updateMasterPassword' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout type=\"warning\">{{'updateMasterPasswordWarning' | i18n}} </app-callout> <div class=\"form-group\"> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordHash\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","export class OrganizationUserResetPasswordRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { VerifyEmailRequest } from 'jslib-common/models/request/verifyEmailRequest';\n\n@Component({\n    selector: 'app-verify-email-token',\n    templateUrl: 'verify-email-token.component.html',\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private userService: UserService) { }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null) {\n                try {\n                    await this.apiService.postAccountVerifyEmailToken(\n                        new VerifyEmailRequest(qParams.userId, qParams.token));\n                    const authed = await this.userService.isAuthenticated();\n                    if (authed) {\n                        await this.apiService.refreshIdentityToken();\n                    }\n                    this.toasterService.popAsync('success', null, this.i18nService.t('emailVerified'));\n                    this.router.navigate(['/']);\n                    return;\n                } catch { }\n            }\n            this.toasterService.popAsync('error', null, this.i18nService.t('emailVerifiedFailed'));\n            this.router.navigate(['/']);\n        });\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\"> <div> <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { VerifyDeleteRecoverRequest } from 'jslib-common/models/request/verifyDeleteRecoverRequest';\n\n@Component({\n    selector: 'app-verify-recover-delete',\n    templateUrl: 'verify-recover-delete.component.html',\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n    email: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private token: string;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n                this.userId = qParams.userId;\n                this.token = qParams.token;\n                this.email = qParams.email;\n            } else {\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n    async submit() {\n        try {\n            const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n            this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout> <p class=\"text-center\"> <strong>{{email}}</strong> </p> <p>{{'deleteRecoverConfirmDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-danger btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'deleteAccount' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { CollectionRequest } from 'jslib-common/models/request/collectionRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-collection-add-edit',\n    templateUrl: 'collection-add-edit.component.html',\n})\nexport class CollectionAddEditComponent implements OnInit {\n    @Input() collectionId: string;\n    @Input() organizationId: string;\n    @Input() canSave: boolean;\n    @Input() canDelete: boolean;\n    @Output() onSavedCollection = new EventEmitter();\n    @Output() onDeletedCollection = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    accessGroups: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    private orgKey: SymmetricCryptoKey;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService, private userService: UserService) { }\n\n    async ngOnInit() {\n        const organization = await this.userService.getOrganization(this.organizationId);\n        this.accessGroups = organization.useGroups;\n        this.editMode = this.loading = this.collectionId != null;\n        if (this.accessGroups) {\n            const groupsResponse = await this.apiService.getGroups(this.organizationId);\n            this.groups = groupsResponse.data.map(r => r).sort(Utils.getSortFunction(this.i18nService, 'name'));\n        }\n        this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editCollection');\n            try {\n                const collection = await this.apiService.getCollectionDetails(this.organizationId, this.collectionId);\n                this.name = await this.cryptoService.decryptToUtf8(new EncString(collection.name), this.orgKey);\n                this.externalId = collection.externalId;\n                if (collection.groups != null && this.groups.length > 0) {\n                    collection.groups.forEach(s => {\n                        const group = this.groups.filter(g => !g.accessAll && g.id === s.id);\n                        if (group != null && group.length > 0) {\n                            (group[0] as any).checked = true;\n                            (group[0] as any).readOnly = s.readOnly;\n                            (group[0] as any).hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addCollection');\n        }\n\n        this.groups.forEach(g => {\n            if (g.accessAll) {\n                (g as any).checked = true;\n            }\n        });\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        if (g.accessAll) {\n            return;\n        }\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n            (g as any).hidePasswords = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach(g => this.check(g, select));\n    }\n\n    async submit() {\n        if (this.orgKey == null) {\n            throw new Error('No encryption key for this organization.');\n        }\n\n        const request = new CollectionRequest();\n        request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n        request.externalId = this.externalId;\n        request.groups = this.groups.filter(g => (g as any).checked && !g.accessAll)\n            .map(g => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords));\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putCollection(this.organizationId, this.collectionId, request);\n            } else {\n                this.formPromise = this.apiService.postCollection(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedCollectionId' : 'createdCollectionId', this.name));\n            this.onSavedCollection.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', this.name));\n            this.onDeletedCollection.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required appAutofocus [disabled]=\"!this.canSave\"> </div> <div class=\"form-group\"> <label for=\"externalId\">{{'externalId' | i18n}}</label> <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\" [disabled]=\"!this.canSave\"> <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small> </div> <ng-container *ngIf=\"accessGroups\"> <h3 class=\"mt-4 d-flex mb-0\"> {{'groupAccess' | i18n}} <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div *ngIf=\"!groups || !groups.length\"> {{'noGroupsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let g of groups; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(g)\"> <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" [disabled]=\"g.accessAll || !this.canSave\" appStopProp> </td> <td (click)=\"check(g)\"> {{g.name}} <ng-container *ngIf=\"g.accessAll\"> <i class=\"fa fa-th text-muted fa-fw\" title=\"{{'groupAccessAllItems' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'groupAccessAllItems' | i18n}}</span> </ng-container> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"g.hidePasswords\" name=\"Groups[{{i}}].HidePasswords\" [disabled]=\"!g.checked || g.accessAll || !this.canSave\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"g.readOnly\" name=\"Groups[{{i}}].ReadOnly\" [disabled]=\"!g.checked || g.accessAll || !this.canSave\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"this.canSave\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\" *ngIf=\"this.canDelete\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Collection } from '../domain/collection';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class CollectionRequest {\n    name: string;\n    externalId: string;\n    groups: SelectionReadOnlyRequest[] = [];\n\n    constructor(collection?: Collection) {\n        if (collection == null) {\n            return;\n        }\n        this.name = collection.name ? collection.name.encryptedString : null;\n        this.externalId = collection.externalId;\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport {\n    CollectionDetailsResponse,\n    CollectionResponse,\n} from 'jslib-common/models/response/collectionResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { CollectionAddEditComponent } from './collection-add-edit.component';\nimport { EntityUsersComponent } from './entity-users.component';\n\n@Component({\n    selector: 'app-org-manage-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organization: Organization;\n    canCreate: boolean = false;\n    organizationId: string;\n    collections: CollectionView[];\n    assignedCollections: CollectionView[];\n    pagedCollections: CollectionView[];\n    searchText: string;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedCollectionsCount = 0;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private collectionService: CollectionService, private modalService: ModalService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\n        private searchService: SearchService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        this.organization = await this.userService.getOrganization(this.organizationId);\n        this.canCreate = this.organization.canCreateNewCollections;\n\n        const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n            const collections = r.data.filter(c => c.organizationId === this.organizationId).map(d =>\n                new Collection(new CollectionData(d as CollectionDetailsResponse)));\n            return await this.collectionService.decryptMany(collections);\n        };\n\n        if (this.organization.canViewAssignedCollections) {\n            const response = await this.apiService.getUserCollections();\n            this.assignedCollections = await decryptCollections(response);\n        }\n\n        if (this.organization.canViewAllCollections) {\n            const response = await this.apiService.getCollections(this.organizationId);\n            this.collections = await decryptCollections(response);\n        } else {\n            this.collections = this.assignedCollections;\n        }\n\n        this.resetPaging();\n        this.loading = false;\n    }\n\n    loadMore() {\n        if (!this.collections || this.collections.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCollections.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n            pagedSize = this.pagedCollectionsCount;\n        }\n        if (this.collections.length > pagedLength) {\n            this.pagedCollections =\n                this.pagedCollections.concat(this.collections.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCollectionsCount = this.pagedCollections.length;\n        this.didScroll = this.pagedCollections.length > this.pageSize;\n    }\n\n    async edit(collection: CollectionView) {\n        const canCreate = collection == null && this.canCreate;\n        const canEdit = collection != null && this.canEdit(collection);\n        const canDelete = collection != null && this.canDelete(collection);\n\n        if (!(canCreate || canEdit || canDelete)) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('missingPermissions'));\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(CollectionAddEditComponent, this.addEditModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.collectionId = collection != null ? collection.id : null;\n            comp.canSave = canCreate || canEdit;\n            comp.canDelete = canDelete;\n            comp.onSavedCollection.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n            comp.onDeletedCollection.subscribe(() => {\n                modal.close();\n                this.removeCollection(collection);\n            });\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(collection: CollectionView) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), collection.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteCollection(this.organizationId, collection.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', collection.name));\n            this.removeCollection(collection);\n        } catch {\n            this.toasterService.popAsync('error', null, this.i18nService.t('missingPermissions'));\n        }\n    }\n\n    async users(collection: CollectionView) {\n        const [modal] = await this.modalService.openViewRef(EntityUsersComponent, this.usersModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.entity = 'collection';\n            comp.entityId = collection.id;\n            comp.entityName = collection.name;\n\n            comp.onEditedUsers.subscribe(() => {\n                this.load();\n                modal.close();\n            });\n        });\n    }\n\n    async resetPaging() {\n        this.pagedCollections = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.collections && this.collections.length > this.pageSize;\n    }\n\n    canEdit(collection: CollectionView) {\n        if (this.organization.canEditAnyCollection) {\n            return true;\n        }\n\n        if (this.organization.canEditAssignedCollections && this.assignedCollections.some(c => c.id === collection.id)) {\n            return true;\n        }\n        return false;\n    }\n\n    canDelete(collection: CollectionView) {\n        if (this.organization.canDeleteAnyCollection) {\n            return true;\n        }\n\n        if (this.organization.canDeleteAssignedCollections && this.assignedCollections.some(c => c.id === collection.id)) {\n            return true;\n        }\n        return false;\n    }\n\n    private removeCollection(collection: CollectionView) {\n        const index = this.collections.indexOf(collection);\n        if (index > -1) {\n            this.collections.splice(index, 1);\n            this.resetPaging();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'collections' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <button type=\"button\" *ngIf=\"this.canCreate\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newCollection' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedCollections : collections | search:searchText:'name':'id') as searchedCollections\"> <p *ngIf=\"!searchedCollections.length\">{{'noCollectionsInList' | i18n}}</p> <table class=\"table table-hover table-list\" *ngIf=\"searchedCollections.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let c of searchedCollections\"> <td> <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.name}}</a> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\"> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"this.canEdit(c)\" (click)=\"users(c)\"> <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i> {{'users' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick *ngIf=\"this.canDelete(c)\" (click)=\"delete(c)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> <ng-template #addEdit></ng-template> <ng-template #usersTemplate></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\nimport { EventService } from '../../services/event.service';\n\nimport { BaseEventsComponent } from '../../common/base.events.component';\n\n@Component({\n    selector: 'app-org-events',\n    templateUrl: 'events.component.html',\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n    exportFileName: string = 'org-events';\n    organizationId: string;\n    organization: Organization;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute, eventService: EventService,\n        i18nService: I18nService, toasterService: ToasterService, private userService: UserService,\n        exportService: ExportService, platformUtilsService: PlatformUtilsService, private router: Router,\n        logService: LogService, private userNamePipe: UserNamePipe) {\n        super(eventService, i18nService, toasterService, exportService, platformUtilsService, logService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            this.organization = await this.userService.getOrganization(this.organizationId);\n            if (this.organization == null || !this.organization.useEvents) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        response.data.forEach(u => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n        });\n\n        if (this.organization.providerId != null) {\n            try {\n                const provider = await this.userService.getProvider(this.organization.providerId);\n                if (provider != null && (await this.userService.getProvider(this.organization.providerId)).canManageUsers) {\n                    const providerUsersResponse = await this.apiService.getProviderUsers(this.organization.providerId);\n                    providerUsersResponse.data.forEach(u => {\n                        const name = this.userNamePipe.transform(u);\n                        this.orgUsersUserIdMap.set(u.userId, { name: `${name} (${this.organization.providerName})`, email: u.email });\n                    });\n                }\n            } catch (e) {\n                this.logService.warning(e);\n            }\n        }\n\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n        return this.apiService.getEventsOrganization(this.organizationId, startDate, endDate, continuationToken);\n    }\n\n    protected getUserName(r: EventResponse, userId: string) {\n        if (userId == null) {\n            return null;\n        }\n\n        if (this.orgUsersUserIdMap.has(userId)) {\n            return this.orgUsersUserIdMap.get(userId);\n        }\n\n        if (r.providerId != null && r.providerId === this.organization.providerId) {\n            return {\n                'name': this.organization.providerName,\n            };\n        }\n\n        return null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'eventLogs' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> </div> <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshForm.loading\"> <i class=\"fa fa-refresh fa-fw\" aria-hidden=\"true\" [ngClass]=\"{'fa-spin': loaded && refreshForm.loading}\"></i> {{'refresh' | i18n}} </button> </form> <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\" [ngClass]=\"{loading:exportForm.loading}\" (click)=\"exportEvents()\" [disabled]=\"loaded && exportForm.loading || dirtyDates\"> <i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i> <span>{{'export' | i18n}}</span> </button> </form> </div> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p *ngIf=\"!events || !events.length\">{{'noEventsInList' | i18n}}</p> <table class=\"table table-hover\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td> <span title=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </ng-container> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { GroupRequest } from 'jslib-common/models/request/groupRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\n@Component({\n    selector: 'app-group-add-edit',\n    templateUrl: 'group-add-edit.component.html',\n})\nexport class GroupAddEditComponent implements OnInit {\n    @Input() groupId: string;\n    @Input() organizationId: string;\n    @Output() onSavedGroup = new EventEmitter();\n    @Output() onDeletedGroup = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private collectionService: CollectionService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.groupId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editGroup');\n            try {\n                const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n                this.access = group.accessAll ? 'all' : 'selected';\n                this.name = group.name;\n                this.externalId = group.externalId;\n                if (group.collections != null && this.collections != null) {\n                    group.collections.forEach(s => {\n                        const collection = this.collections.filter(c => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                            collection[0].hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addGroup');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map(r =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n\n    async submit() {\n        const request = new GroupRequest();\n        request.name = this.name;\n        request.externalId = this.externalId;\n        request.accessAll = this.access === 'all';\n        if (!request.accessAll) {\n            request.collections = this.collections.filter(c => (c as any).checked)\n                .map(c => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n        }\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n            } else {\n                this.formPromise = this.apiService.postGroup(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedGroupId' : 'createdGroupId', this.name));\n            this.onSavedGroup.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', this.name));\n            this.onDeletedGroup.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group\"> <label for=\"externalId\">{{'externalId' | i18n}}</label> <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\"> <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small> </div> <h3 class=\"mt-4 d-flex\"> <div class=\"mb-2\"> {{'accessControl' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessAll\"> {{'groupAccessAllItems' | i18n}} </label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessSelected\"> {{'groupAccessSelectedCollections' | i18n}} </label> </div> </div> <ng-container *ngIf=\"access === 'selected'\"> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let c of collections; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(c)\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(c)\"> {{c.name}} </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\" name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\" [disabled]=\"!c.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" aria-hidden=\"true\" title=\"{{'loading' | i18n}}\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { EntityUsersComponent } from './entity-users.component';\nimport { GroupAddEditComponent } from './group-add-edit.component';\n\n@Component({\n    selector: 'app-org-groups',\n    templateUrl: 'groups.component.html',\n})\nexport class GroupsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    groups: GroupResponse[];\n    pagedGroups: GroupResponse[];\n    searchText: string;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedGroupsCount = 0;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private modalService: ModalService,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService,\n        private userService: UserService, private router: Router,\n        private searchService: SearchService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useGroups) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            await this.load();\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getGroups(this.organizationId);\n        const groups = response.data != null && response.data.length > 0 ? response.data : [];\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n        this.resetPaging();\n        this.loading = false;\n    }\n\n    loadMore() {\n        if (!this.groups || this.groups.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedGroups.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n            pagedSize = this.pagedGroupsCount;\n        }\n        if (this.groups.length > pagedLength) {\n            this.pagedGroups = this.pagedGroups.concat(this.groups.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedGroupsCount = this.pagedGroups.length;\n        this.didScroll = this.pagedGroups.length > this.pageSize;\n    }\n\n    async edit(group: GroupResponse) {\n        const [modal] = await this.modalService.openViewRef(GroupAddEditComponent, this.addEditModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.groupId = group != null ? group.id : null;\n            comp.onSavedGroup.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n            comp.onDeletedGroup.subscribe(() => {\n                modal.close();\n                this.removeGroup(group);\n            });\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(group: GroupResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), group.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteGroup(this.organizationId, group.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', group.name));\n            this.removeGroup(group);\n        } catch { }\n    }\n\n    async users(group: GroupResponse) {\n        const [modal] = await this.modalService.openViewRef(EntityUsersComponent, this.usersModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.entity = 'group';\n            comp.entityId = group.id;\n            comp.entityName = group.name;\n\n            comp.onEditedUsers.subscribe(() => {\n                modal.close();\n            });\n        });\n    }\n\n    async resetPaging() {\n        this.pagedGroups = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.groups && this.groups.length > this.pageSize;\n    }\n\n    private removeGroup(group: GroupResponse) {\n        const index = this.groups.indexOf(group);\n        if (index > -1) {\n            this.groups.splice(index, 1);\n            this.resetPaging();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'groups' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newGroup' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedGroups : groups | search:searchText:'name':'id') as searchedGroups\"> <p *ngIf=\"!searchedGroups.length\">{{'noGroupsInList' | i18n}}</p> <table class=\"table table-hover table-list\" *ngIf=\"searchedGroups.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let g of searchedGroups\"> <td> <a href=\"#\" appStopClick (click)=\"edit(g)\">{{g.name}}</a> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\"> <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i> {{'users' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> <ng-template #addEdit></ng-template> <ng-template #usersTemplate></ng-template> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from 'jslib-common/models/request/organizationUserConfirmRequest';\n\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { OrganizationUserBulkResponse } from 'jslib-common/models/response/organizationUserBulkResponse';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { BasePeopleComponent } from '../../common/base.people.component';\nimport { BulkConfirmComponent } from './bulk/bulk-confirm.component';\nimport { BulkRemoveComponent } from './bulk/bulk-remove.component';\nimport { BulkStatusComponent } from './bulk/bulk-status.component';\nimport { EntityEventsComponent } from './entity-events.component';\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { UserAddEditComponent } from './user-add-edit.component';\nimport { UserGroupsComponent } from './user-groups.component';\n\n@Component({\n    selector: 'app-org-people',\n    templateUrl: 'people.component.html',\n})\nexport class PeopleComponent extends BasePeopleComponent<OrganizationUserUserDetailsResponse> implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('groupsTemplate', { read: ViewContainerRef, static: true }) groupsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n    @ViewChild('resetPasswordTemplate', { read: ViewContainerRef, static: true }) resetPasswordModalRef: ViewContainerRef;\n    @ViewChild('bulkStatusTemplate', { read: ViewContainerRef, static: true }) bulkStatusModalRef: ViewContainerRef;\n    @ViewChild('bulkConfirmTemplate', { read: ViewContainerRef, static: true }) bulkConfirmModalRef: ViewContainerRef;\n    @ViewChild('bulkRemoveTemplate', { read: ViewContainerRef, static: true }) bulkRemoveModalRef: ViewContainerRef;\n\n    userType = OrganizationUserType;\n    userStatusType = OrganizationUserStatusType;\n\n    organizationId: string;\n    status: OrganizationUserStatusType = null;\n    accessEvents = false;\n    accessGroups = false;\n    canResetPassword = false; // User permission (admin/custom)\n    orgUseResetPassword = false; // Org plan ability\n    orgHasKeys = false; // Org public/private keys\n    orgResetPasswordPolicyEnabled = false;\n    callingUserType: OrganizationUserType = null;\n\n    constructor(apiService: ApiService, private route: ActivatedRoute,\n        i18nService: I18nService, modalService: ModalService,\n        platformUtilsService: PlatformUtilsService, toasterService: ToasterService,\n        cryptoService: CryptoService, private userService: UserService, private router: Router,\n        storageService: StorageService, searchService: SearchService,\n        validationService: ValidationService, private policyService: PolicyService,\n        logService: LogService, searchPipe: SearchPipe, userNamePipe: UserNamePipe, private syncService: SyncService) {\n            super(apiService, searchService, i18nService, platformUtilsService, toasterService, cryptoService,\n                storageService, validationService, modalService, logService, searchPipe, userNamePipe);\n        }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (!organization.canManageUsers) {\n                this.router.navigate(['../collections'], { relativeTo: this.route });\n                return;\n            }\n            this.accessEvents = organization.useEvents;\n            this.accessGroups = organization.useGroups;\n            this.canResetPassword = organization.canManageUsersPassword;\n            this.orgUseResetPassword = organization.useResetPassword;\n            this.callingUserType = organization.type;\n            this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n            // Backfill pub/priv key if necessary\n            if (this.canResetPassword && !this.orgHasKeys) {\n                const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n                const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n                const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n                const response = await this.apiService.postOrganizationKeys(this.organizationId, request);\n                if (response != null) {\n                    this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n                    await this.syncService.fullSync(true); // Replace oganizations with new data\n                } else {\n                    throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                }\n            }\n\n            await this.load();\n\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const user = this.users.filter(u => u.id === qParams.viewEvents);\n                    if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n                        this.events(user[0]);\n                    }\n                }\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const resetPasswordPolicy = await this.policyService.getPolicyForOrganization(PolicyType.ResetPassword,\n            this.organizationId);\n        this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n        super.load();\n    }\n\n    getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n        return this.apiService.getOrganizationUsers(this.organizationId);\n    }\n\n    deleteUser(id: string): Promise<any> {\n        return this.apiService.deleteOrganizationUser(this.organizationId, id);\n    }\n\n    reinviteUser(id: string): Promise<any> {\n        return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n    }\n\n    async confirmUser(user: OrganizationUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n        const request = new OrganizationUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n    }\n\n    allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n        // Hierarchy check\n        let callingUserHasPermission = false;\n\n        switch (this.callingUserType) {\n            case OrganizationUserType.Owner:\n                callingUserHasPermission = true;\n                break;\n            case OrganizationUserType.Admin:\n                callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n                break;\n            case OrganizationUserType.Custom:\n                callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner\n                    && orgUser.type !== OrganizationUserType.Admin;\n                break;\n        }\n\n        // Final\n        return this.canResetPassword && callingUserHasPermission && this.orgUseResetPassword && this.orgHasKeys\n            && orgUser.resetPasswordEnrolled && this.orgResetPasswordPolicyEnabled\n            && orgUser.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n        return this.orgUseResetPassword && orgUser.resetPasswordEnrolled && this.orgResetPasswordPolicyEnabled;\n    }\n\n    async edit(user: OrganizationUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(UserAddEditComponent, this.addEditModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.organizationId = this.organizationId;\n            comp.organizationUserId = user != null ? user.id : null;\n            comp.onSavedUser.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n            comp.onDeletedUser.subscribe(() => {\n                modal.close();\n                this.removeUser(user);\n            });\n        });\n    }\n\n    async groups(user: OrganizationUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(UserGroupsComponent, this.groupsModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.organizationId = this.organizationId;\n            comp.organizationUserId = user != null ? user.id : null;\n            comp.onSavedUser.subscribe(() => {\n                modal.close();\n            });\n        });\n    }\n\n    async bulkRemove() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkRemoveComponent, this.bulkRemoveModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.users = this.getCheckedUsers();\n        });\n\n        await modal.onClosedPromise();\n        await this.load();\n    }\n\n    async bulkReinvite() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const users = this.getCheckedUsers();\n        const filteredUsers = users.filter(u => u.status === OrganizationUserStatusType.Invited);\n\n        if (filteredUsers.length <= 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('noSelectedUsersApplicable'));\n            return;\n        }\n\n        try {\n            const request = new OrganizationUserBulkRequest(filteredUsers.map(user => user.id));\n            const response = this.apiService.postManyOrganizationUserReinvite(this.organizationId, request);\n            this.showBulkStatus(users, filteredUsers, response, this.i18nService.t('bulkReinviteMessage'));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async bulkConfirm() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const [modal] = await this.modalService.openViewRef(BulkConfirmComponent, this.bulkConfirmModalRef, comp => {\n            comp.organizationId = this.organizationId;\n            comp.users = this.getCheckedUsers();\n        });\n\n        await modal.onClosedPromise();\n        await this.load();\n    }\n\n    async events(user: OrganizationUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.organizationId = this.organizationId;\n            comp.entityId = user.id;\n            comp.showUser = false;\n            comp.entity = 'user';\n        });\n    }\n\n    async resetPassword(user: OrganizationUserUserDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(ResetPasswordComponent, this.resetPasswordModalRef, comp => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.email = user != null ? user.email : null;\n            comp.organizationId = this.organizationId;\n            comp.id = user != null ? user.id : null;\n\n            comp.onPasswordReset.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n        });\n    }\n\n    private async showBulkStatus(users: OrganizationUserUserDetailsResponse[], filteredUsers: OrganizationUserUserDetailsResponse[],\n        request: Promise<ListResponse<OrganizationUserBulkResponse>>, successfullMessage: string) {\n\n        const [modal, childComponent] = await this.modalService.openViewRef(BulkStatusComponent, this.bulkStatusModalRef, comp => {\n            comp.loading = true;\n        });\n\n        // Workaround to handle closing the modal shortly after it has been opened\n        let close = false;\n        modal.onShown.subscribe(() => {\n            if (close) {\n                modal.close();\n            }\n        });\n\n        try {\n            const response = await request;\n\n            if (modal) {\n                const keyedErrors: any = response.data.filter(r => r.error !== '').reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n                const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n                childComponent.users = users.map(user => {\n                    let message = keyedErrors[user.id] ?? successfullMessage;\n                    if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n                        message = this.i18nService.t('bulkFilteredMessage');\n                    }\n\n                    return {\n                        user: user,\n                        error: keyedErrors.hasOwnProperty(user.id),\n                        message: message,\n                    };\n                });\n                childComponent.loading = false;\n            }\n        } catch {\n            close = true;\n            modal.close();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'people' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == null}\" (click)=\"filter(null)\"> {{'all' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{allCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Invited}\" (click)=\"filter(userStatusType.Invited)\"> {{'invited' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{invitedCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Accepted}\" (click)=\"filter(userStatusType.Accepted)\"> {{'accepted' | i18n}} <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{acceptedCount}}</span> </button> </div> <div class=\"ml-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <div class=\"dropdown ml-3\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'reinviteSelected' | i18n}} </button> <button class=\"dropdown-item text-success\" appStopClick (click)=\"bulkConfirm()\" *ngIf=\"showBulkConfirmUsers\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirmSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'inviteUser' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedUsers : users | search:searchText:'name':'email':'id') as searchedUsers\"> <p *ngIf=\"!searchedUsers.length\">{{'noUsersInList' | i18n}}</p> <ng-container *ngIf=\"searchedUsers.length\"> <app-callout type=\"info\" title=\"{{'confirmUsers' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"showConfirmUsers\"> {{'usersNeedConfirmed' | i18n}} </app-callout> <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp> </td> <td width=\"30\"> <app-avatar [data]=\"u | userName\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(u)\">{{u.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td> <ng-container *ngIf=\"u.twoFactorEnabled\"> <i class=\"fa fa-lock\" title=\"{{'userUsingTwoStep' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userUsingTwoStep' | i18n}}</span> </ng-container> <ng-container *ngIf=\"showEnrolledStatus(u)\"> <i class=\"fa fa-key\" title=\"{{'enrolledPasswordReset' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enrolledPasswordReset' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === userType.Owner\">{{'owner' | i18n}}</span> <span *ngIf=\"u.type === userType.Admin\">{{'admin' | i18n}}</span> <span *ngIf=\"u.type === userType.Manager\">{{'manager' | i18n}}</span> <span *ngIf=\"u.type === userType.User\">{{'user' | i18n}}</span> <span *ngIf=\"u.type === userType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(u)\" *ngIf=\"u.status === userStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(u)\" *ngIf=\"u.status === userStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"groups(u)\" *ngIf=\"accessGroups\"> <i class=\"fa fa-fw fa-sitemap\" aria-hidden=\"true\"></i> {{'groups' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"events(u)\" *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"resetPassword(u)\" *ngIf=\"allowResetPassword(u)\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'resetPassword' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> <ng-template #addEdit></ng-template> <ng-template #groupsTemplate></ng-template> <ng-template #eventsTemplate></ng-template> <ng-template #confirmTemplate></ng-template> <ng-template #resetPasswordTemplate></ng-template> <ng-template #bulkStatusTemplate></ng-template> <ng-template #bulkConfirmTemplate></ng-template> <ng-template #bulkRemoveTemplate></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { OrganizationUserResetPasswordRequest } from 'jslib-common/models/request/organizationUserResetPasswordRequest';\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: 'reset-password.component.html',\n})\nexport class ResetPasswordComponent implements OnInit {\n    @Input() name: string;\n    @Input() email: string;\n    @Input() id: string;\n    @Input() organizationId: string;\n    @Output() onPasswordReset = new EventEmitter();\n\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n    newPassword: string = null;\n    showPassword: boolean = false;\n    masterPasswordScore: number;\n    formPromise: Promise<any>;\n    private newPasswordStrengthTimeout: any;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private passwordGenerationService: PasswordGenerationService,\n        private policyService: PolicyService, private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        // Get Enforced Policy Options\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    }\n\n    get loggedOutWarningName() {\n        return this.name != null ? this.name : this.i18nService.t('thisUser');\n    }\n\n    async generatePassword() {\n        const options = (await this.passwordGenerationService.getOptions())[0];\n        this.newPassword = await this.passwordGenerationService.generatePassword(options);\n        this.updatePasswordStrength();\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('newPassword').focus();\n    }\n\n    copy(value: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    async submit() {\n        // Validation\n        if (this.newPassword == null || this.newPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n\n        if (this.newPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return false;\n        }\n\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(this.masterPasswordScore, this.newPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return;\n        }\n\n        if (this.masterPasswordScore < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return false;\n            }\n        }\n\n        // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n        try {\n            this.formPromise = this.apiService.getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n                .then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordDetailsError'));\n                    }\n\n                    const kdfType = response.kdf;\n                    const kdfIterations = response.kdfIterations;\n                    const resetPasswordKey = response.resetPasswordKey;\n                    const encryptedPrivateKey = response.encryptedPrivateKey;\n\n                    // Decrypt Organization's encrypted Private Key with org key\n                    const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n                    const decPrivateKey = await this.cryptoService.decryptToBytes(new EncString(encryptedPrivateKey), orgSymKey);\n\n                    // Decrypt User's Reset Password Key to get EncKey\n                    const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n                    const userEncKey = new SymmetricCryptoKey(decValue);\n\n                    // Create new key and hash new password\n                    const newKey = await this.cryptoService.makeKey(this.newPassword, this.email.trim().toLowerCase(),\n                        kdfType, kdfIterations);\n                    const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n                    // Create new encKey for the User\n                    const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n                    // Create request\n                    const request = new OrganizationUserResetPasswordRequest();\n                    request.key = newEncKey[1].encryptedString;\n                    request.newMasterPasswordHash = newPasswordHash;\n\n                    // Change user's password\n                    return this.apiService.putOrganizationUserResetPassword(this.organizationId, this.id, request);\n                });\n\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('resetPasswordSuccess'));\n            this.onPasswordReset.emit();\n        } catch { }\n    }\n\n    updatePasswordStrength() {\n        if (this.newPasswordStrengthTimeout != null) {\n            clearTimeout(this.newPasswordStrengthTimeout);\n        }\n        this.newPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.newPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        if (this.name != null && this.name !== '') {\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\n        }\n        return userInput;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\"> <div class=\"modal-dialog\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"resetPasswordTitle\"> {{'resetPassword' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"warning\">{{'resetPasswordLoggedOutWarning' | i18n: loggedOutWarningName}} </app-callout> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" enforcedPolicyMessage=\"{{'resetPasswordMasterPasswordPolicyInEffect' | i18n}}\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <div class=\"row\"> <div class=\"col form-group\"> <div class=\"d-flex\"> <label for=\"newPassword\">{{'newPassword' | i18n}}</label> <div class=\"ml-auto d-flex\"> <a href=\"#\" class=\"d-block mr-2 fa-icon-above-input\" appStopClick appA11yTitle=\"{{'generatePassword' | i18n}}\" (click)=\"generatePassword()\"> <i class=\"fa fa-lg fa-fw fa-refresh\" aria-hidden=\"true\"></i> </a> </div> </div> <div class=\"input-group mb-1\"> <input id=\"newPassword\" class=\"form-control text-monospace\" appAutofocus type=\"{{showPassword ? 'text' : 'password'}}\" name=\"NewPassword\" [(ngModel)]=\"newPassword\" required appInputVerbatim autocomplete=\"new-password\" (input)=\"updatePasswordStrength()\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(newPassword)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { OrganizationUserInviteRequest } from 'jslib-common/models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateRequest } from 'jslib-common/models/request/organizationUserUpdateRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PermissionsApi } from 'jslib-common/models/api/permissionsApi';\n\n@Component({\n    selector: 'app-user-add-edit',\n    templateUrl: 'user-add-edit.component.html',\n})\nexport class UserAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    emails: string;\n    type: OrganizationUserType = OrganizationUserType.User;\n    permissions = new PermissionsApi();\n    showCustom = false;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    organizationUserType = OrganizationUserType;\n\n    manageAllCollectionsCheckboxes = [\n        {\n            id: 'createNewCollections',\n            get: () => this.permissions.createNewCollections,\n            set: (v: boolean) => this.permissions.createNewCollections = v,\n        },\n        {\n            id: 'editAnyCollection',\n            get: () => this.permissions.editAnyCollection,\n            set: (v: boolean) => this.permissions.editAnyCollection = v,\n        },\n        {\n            id: 'deleteAnyCollection',\n            get: () => this.permissions.deleteAnyCollection,\n            set: (v: boolean) => this.permissions.deleteAnyCollection = v,\n        },\n    ];\n\n    manageAssignedCollectionsCheckboxes = [\n        {\n            id: 'editAssignedCollections',\n            get: () => this.permissions.editAssignedCollections,\n            set: (v: boolean) => this.permissions.editAssignedCollections = v,\n        },\n        {\n            id: 'deleteAssignedCollections',\n            get: () => this.permissions.deleteAssignedCollections,\n            set: (v: boolean) => this.permissions.deleteAssignedCollections = v,\n        },\n    ];\n\n    get customUserTypeSelected(): boolean {\n        return this.type === OrganizationUserType.Custom;\n    }\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private collectionService: CollectionService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.organizationUserId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editUser');\n            try {\n                const user = await this.apiService.getOrganizationUser(this.organizationId, this.organizationUserId);\n                this.access = user.accessAll ? 'all' : 'selected';\n                this.type = user.type;\n                if (user.type === OrganizationUserType.Custom) {\n                    this.permissions = user.permissions;\n                }\n                if (user.collections != null && this.collections != null) {\n                    user.collections.forEach(s => {\n                        const collection = this.collections.filter(c => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                            collection[0].hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteUser');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map(r =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n\n    setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n        Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n        return p;\n    }\n\n    handleDependentPermissions() {\n        // Manage Password Reset must have Manage Users enabled\n        if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n            this.permissions.manageUsers = true;\n            (document.getElementById('manageUsers') as HTMLInputElement).checked = true;\n            this.platformUtilsService.showToast('info', null, this.i18nService.t('resetPasswordManageUsers'));\n        }\n    }\n\n    async submit() {\n        let collections: SelectionReadOnlyRequest[] = null;\n        if (this.access !== 'all') {\n            collections = this.collections.filter(c => (c as any).checked)\n                .map(c => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n        }\n\n        try {\n            if (this.editMode) {\n                const request = new OrganizationUserUpdateRequest();\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.collections = collections;\n                request.permissions = this.setRequestPermissions(request.permissions ?? new PermissionsApi(), request.type !== OrganizationUserType.Custom);\n                this.formPromise = this.apiService.putOrganizationUser(this.organizationId, this.organizationUserId,\n                    request);\n            } else {\n                const request = new OrganizationUserInviteRequest();\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.permissions = this.setRequestPermissions(request.permissions ?? new PermissionsApi(), request.type !== OrganizationUserType.Custom);\n                request.collections = collections;\n                this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteOrganizationUser(this.organizationId, this.organizationUserId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\n            this.onDeletedUser.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'inviteUserDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"emails\">{{'email' | i18n}}</label> <input id=\"emails\" class=\"form-control\" type=\"text\" name=\"Emails\" [(ngModel)]=\"emails\" required appAutoFocus> <small class=\"text-muted\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small> </div> </ng-container> <h3> {{'userType' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#user-types\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeUser\" [value]=\"organizationUserType.User\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeUser\"> {{'user' | i18n}} <small>{{'userDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeManager\" [value]=\"organizationUserType.Manager\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeManager\"> {{'manager' | i18n}} <small>{{'managerDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeAdmin\" [value]=\"organizationUserType.Admin\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeAdmin\"> {{'admin' | i18n}} <small>{{'adminDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeOwner\" [value]=\"organizationUserType.Owner\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeOwner\"> {{'owner' | i18n}} <small>{{'ownerDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeCustom\" [value]=\"organizationUserType.Custom\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeCustom\"> {{'custom' | i18n}} <small>{{'customDesc' | i18n}}</small> </label> </div> <ng-container *ngIf=\"customUserTypeSelected\"> <h3 class=\"mt-4 d-flex\"> {{'permissions' | i18n}} </h3> <div class=\"row\"> <div class=\"col-6\"> <div class=\"mb-3\"> <label class=\"font-weight-bold mb-0\">Manager Permissions</label> <hr class=\"my-0 mr-2\"/> <app-nested-checkbox parentId=\"manageAssignedCollections\" [checkboxes]=\"manageAssignedCollectionsCheckboxes\"> </app-nested-checkbox> </div> </div> <div class=\"col-6\"> <div class=\"mb-3\"> <label class=\"font-weight-bold mb-0\">Admin Permissions</label> <hr class=\"my-0 mr-2\"/> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessEventLogs\" id=\"accessEventLogs\" [(ngModel)]=\"permissions.accessEventLogs\"> <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\"> {{'accessEventLogs' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessImportExport\" id=\"accessImportExport\" [(ngModel)]=\"permissions.accessImportExport\"> <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\"> {{'accessImportExport' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessReports\" id=\"accessReports\" [(ngModel)]=\"permissions.accessReports\"> <label class=\"form-check-label font-weight-normal\" for=\"accessReports\"> {{'accessReports' | i18n}} </label> </div> </div> <app-nested-checkbox parentId=\"manageAllCollections\" [checkboxes]=\"manageAllCollectionsCheckboxes\"> </app-nested-checkbox> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageGroups\" id=\"manageGroups\" [(ngModel)]=\"permissions.manageGroups\"> <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\"> {{'manageGroups' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageSso\" id=\"managePolicies\" [(ngModel)]=\"permissions.manageSso\"> <label class=\"form-check-label font-weight-normal\" for=\"manageSso\"> {{'manageSso' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"managePolicies\" id=\"managePolicies\" [(ngModel)]=\"permissions.managePolicies\"> <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\"> {{'managePolicies' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageUsers\" id=\"manageUsers\" [(ngModel)]=\"permissions.manageUsers\" (change)=\"handleDependentPermissions()\"> <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\"> {{'manageUsers' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageResetPassword\" id=\"manageResetPassword\" [(ngModel)]=\"permissions.manageResetPassword\" (change)=\"handleDependentPermissions()\"> <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\"> {{'manageResetPassword' | i18n}} </label> </div> </div> </div> </div> </div> </ng-container> <h3 class=\"mt-4 d-flex\"> <div class=\"mb-3\"> {{'accessControl' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessAll\"> {{'userAccessAllItems' | i18n}} </label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessSelected\"> {{'userAccessSelectedCollections' | i18n}} </label> </div> </div> <ng-container *ngIf=\"access === 'selected'\"> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let c of collections; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(c)\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(c)\"> {{c.name}} </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\" name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\" [disabled]=\"!c.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { OrganizationUserUpdateGroupsRequest } from 'jslib-common/models/request/organizationUserUpdateGroupsRequest';\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-user-groups',\n    templateUrl: 'user-groups.component.html',\n})\nexport class UserGroupsComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n\n    loading = true;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const groupsResponse = await this.apiService.getGroups(this.organizationId);\n        const groups = groupsResponse.data.map(r => r);\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n\n        try {\n            const userGroups = await this.apiService.getOrganizationUserGroups(\n                this.organizationId, this.organizationUserId);\n            if (userGroups != null && this.groups != null) {\n                userGroups.forEach(ug => {\n                    const group = this.groups.filter(g => g.id === ug);\n                    if (group != null && group.length > 0) {\n                        (group[0] as any).checked = true;\n                    }\n                });\n            }\n        } catch { }\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach(g => this.check(g, select));\n    }\n\n    async submit() {\n        const request = new OrganizationUserUpdateGroupsRequest();\n        request.groupIds = this.groups.filter(g => (g as any).checked).map(g => g.id);\n\n        try {\n            this.formPromise = this.apiService.putOrganizationUserGroups(this.organizationId, this.organizationUserId,\n                request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedGroupsForUser', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"groupAccessTitle\"> {{'groupAccess' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <p>{{'groupAccessUserDesc' | i18n}}</p> <div *ngIf=\"!groups || !groups.length\"> {{'noGroupsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\"> <tbody> <tr *ngFor=\"let g of groups; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(g)\"> <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(g)\"> {{g.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { PolicyEditComponent } from './policy-edit.component';\n\nimport { PolicyListService } from '../../services/policy-list.service';\nimport { BasePolicy } from '../policies/base-policy.component';\n\n@Component({\n    selector: 'app-org-policies',\n    templateUrl: 'policies.component.html',\n})\nexport class PoliciesComponent implements OnInit {\n    @ViewChild('editTemplate', { read: ViewContainerRef, static: true }) editModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    policies: BasePolicy[];\n    organization: Organization;\n\n    private orgPolicies: PolicyResponse[];\n    private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private modalService: ModalService, private userService: UserService,\n        private policyListService: PolicyListService, private router: Router) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            this.organization = await this.userService.getOrganization(this.organizationId);\n            if (this.organization == null || !this.organization.usePolicies) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n\n            this.policies = this.policyListService.getPolicies();\n\n            await this.load();\n\n            // Handle policies component launch from Event message\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                if (qParams.policyId != null) {\n                    const policyIdFromEvents: string = qParams.policyId;\n                    for (const orgPolicy of this.orgPolicies) {\n                        if (orgPolicy.id === policyIdFromEvents) {\n                            for (let i = 0; i < this.policies.length; i++) {\n                                if (this.policies[i].type === orgPolicy.type) {\n                                    this.edit(this.policies[i]);\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getPolicies(this.organizationId);\n        this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n        this.orgPolicies.forEach(op => {\n            this.policiesEnabledMap.set(op.type, op.enabled);\n        });\n\n        this.loading = false;\n    }\n\n    async edit(policy: BasePolicy) {\n        const [modal] = await this.modalService.openViewRef(PolicyEditComponent, this.editModalRef, comp => {\n            comp.policy = policy;\n            comp.organizationId = this.organizationId;\n            comp.policiesEnabledMap = this.policiesEnabledMap;\n            comp.onSavedPolicy.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n        });\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'policies' | i18n}}</h1> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <table class=\"table table-hover table-list\" *ngIf=\"!loading\"> <tbody> <tr *ngFor=\"let p of policies\"> <td *ngIf=\"p.display(organization)\"> <a href=\"#\" appStopClick (click)=\"edit(p)\">{{p.name | i18n}}</a> <span class=\"badge badge-success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{'enabled' | i18n}}</span> <small class=\"text-muted d-block\">{{p.description | i18n}}</small> </td> </tr> </tbody> </table> <ng-template #editTemplate></ng-template> ","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nimport { BasePolicy, BasePolicyComponent } from '../policies/base-policy.component';\n\n@Component({\n    selector: 'app-policy-edit',\n    templateUrl: 'policy-edit.component.html',\n})\nexport class PolicyEditComponent {\n    @Input() policy: BasePolicy;\n    @Input() organizationId: string;\n    @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n    @Output() onSavedPolicy = new EventEmitter();\n\n    @ViewChild('policyForm', { read: ViewContainerRef, static: true }) policyFormRef: ViewContainerRef;\n\n    policyType = PolicyType;\n    loading = true;\n    enabled = false;\n    formPromise: Promise<any>;\n    defaultTypes: any[];\n    policyComponent: BasePolicyComponent;\n\n    private policyResponse: PolicyResponse;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private componentFactoryResolver: ComponentFactoryResolver,\n        private cdr: ChangeDetectorRef) {\n    }\n\n    async ngAfterViewInit() {\n        await this.load();\n        this.loading = false;\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n        this.policyComponent = this.policyFormRef.createComponent(factory).instance as BasePolicyComponent;\n        this.policyComponent.policy = this.policy;\n        this.policyComponent.policyResponse = this.policyResponse;\n\n        this.cdr.detectChanges();\n    }\n\n    async load() {\n        try {\n            this.policyResponse = await this.apiService.getPolicy(this.organizationId, this.policy.type);\n        } catch (e) {\n            if (e.statusCode === 404) {\n                this.policyResponse = new PolicyResponse({Enabled: false});\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    async submit() {\n        let request: PolicyRequest;\n        try {\n            request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n        } catch (e) {\n            this.toasterService.pop('error', null, e);\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.putPolicy(this.organizationId, this.policy.type, request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedPolicyId', this.i18nService.t(this.policy.name)));\n            this.onSavedPolicy.emit();\n        } catch {}\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"policiesEditTitle\">{{'editPolicy' | i18n}} - {{policy.name | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div [hidden]=\"loading\"> <p>{{policy.description | i18n}}</p> <ng-template #policyForm></ng-template> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> </div> </form> </div> </div> ","import {\n    Component,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUpdateRequest } from 'jslib-common/models/request/organizationUpdateRequest';\n\nimport { OrganizationResponse } from 'jslib-common/models/response/organizationResponse';\n\nimport { ApiKeyComponent } from '../../settings/api-key.component';\nimport { PurgeVaultComponent } from '../../settings/purge-vault.component';\nimport { TaxInfoComponent } from '../../settings/tax-info.component';\n\nimport { DeleteOrganizationComponent } from './delete-organization.component';\n\n@Component({\n    selector: 'app-org-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deleteOrganizationTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n    @ViewChild('purgeOrganizationTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\n    @ViewChild('apiKeyTemplate', { read: ViewContainerRef, static: true }) apiKeyModalRef: ViewContainerRef;\n    @ViewChild('rotateApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateApiKeyModalRef: ViewContainerRef;\n    @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n    selfHosted = false;\n    loading = true;\n    canUseApi = false;\n    org: OrganizationResponse;\n    formPromise: Promise<any>;\n    taxFormPromise: Promise<any>;\n\n    private organizationId: string;\n\n    constructor(private modalService: ModalService,\n        private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private route: ActivatedRoute,\n        private syncService: SyncService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            try {\n                this.org = await this.apiService.getOrganization(this.organizationId);\n                this.canUseApi = this.org.useApi;\n            } catch { }\n        });\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new OrganizationUpdateRequest();\n            request.name = this.org.name;\n            request.businessName = this.org.businessName;\n            request.billingEmail = this.org.billingEmail;\n            request.identifier = this.org.identifier;\n\n            // Backfill pub/priv key if necessary\n            if (!this.org.hasPublicAndPrivateKeys) {\n                const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n                const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n                request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n            }\n\n            this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpdated'));\n        } catch { }\n    }\n\n    async submitTaxInfo() {\n        this.taxFormPromise = this.taxInfo.submitTaxInfo();\n        await this.taxFormPromise;\n        this.toasterService.popAsync('success', null, this.i18nService.t('taxInfoUpdated'));\n    }\n\n    async deleteOrganization() {\n        await this.modalService.openViewRef(DeleteOrganizationComponent, this.deleteModalRef, comp => {\n            comp.organizationId = this.organizationId;\n        });\n    }\n\n    async purgeVault() {\n        await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, comp => {\n            comp.organizationId = this.organizationId;\n        });\n    }\n\n    async viewApiKey() {\n        await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, comp => {\n            comp.keyType = 'organization';\n            comp.entityId = this.organizationId;\n            comp.postKey = this.apiService.postOrganizationApiKey.bind(this.apiService);\n            comp.scope = 'api.organization';\n            comp.grantType = 'client_credentials';\n            comp.apiKeyTitle = 'apiKey';\n            comp.apiKeyWarning = 'apiKeyWarning';\n            comp.apiKeyDescription = 'apiKeyDesc';\n        });\n    }\n\n    async rotateApiKey() {\n        await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, comp => {\n            comp.keyType = 'organization';\n            comp.isRotation = true;\n            comp.entityId = this.organizationId;\n            comp.postKey = this.apiService.postOrganizationRotateApiKey.bind(this.apiService);\n            comp.scope = 'api.organization';\n            comp.grantType = 'client_credentials';\n            comp.apiKeyTitle = 'apiKey';\n            comp.apiKeyWarning = 'apiKeyWarning';\n            comp.apiKeyDescription = 'apiKeyRotateDesc';\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myOrganization' | i18n}}</h1> </div> <div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"org && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'organizationName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"org.name\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"org.billingEmail\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"businessName\">{{'businessName' | i18n}}</label> <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"org.businessName\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"identifier\">{{'identifier' | i18n}}</label> <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\" [(ngModel)]=\"org.identifier\"> </div> </div> <div class=\"col-6\"> <app-avatar data=\"{{org.name}}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> <ng-container *ngIf=\"canUseApi\"> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'apiKey' | i18n}}</h1> </div> <p> {{'apiKeyDesc' | i18n}} <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}} </a> </p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">{{'viewApiKey' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">{{'rotateApiKey' | i18n}}</button> </ng-container> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'taxInformation' | i18n}}</h1> </div> <p>{{'taxInformationDesc' | i18n}}</p> <div *ngIf=\"!org || loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"org && !loading\" #formTax (ngSubmit)=\"submitTaxInfo()\" [appApiAction]=\"taxFormPromise\" ngNativeValidate> <app-tax-info></app-tax-info> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> <div class=\"secondary-header text-danger border-0 mb-0\"> <h1>{{'dangerZone' | i18n}}</h1> </div> <div class=\"card border-danger\"> <div class=\"card-body\"> <p>{{'dangerZoneDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">{{'deleteOrganization' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button> </div> </div> <ng-template #deleteOrganizationTemplate></ng-template> <ng-template #purgeOrganizationTemplate></ng-template> <ng-template #apiKeyTemplate></ng-template> <ng-template #rotateApiKeyTemplate></ng-template> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-organization',\n    templateUrl: 'delete-organization.component.html',\n})\nexport class DeleteOrganizationComponent {\n    organizationId: string;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteOrganization(this.organizationId, request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('organizationDeleted'),\n                this.i18nService.t('organizationDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{'deleteOrganization' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deleteOrganizationDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deleteOrganizationWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deleteOrganization' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { OrganizationSubscriptionUpdateRequest } from 'jslib-common/models/request/organizationSubscriptionUpdateRequest';\n\n@Component({\n    selector: 'app-adjust-subscription',\n    templateUrl: 'adjust-subscription.component.html',\n})\nexport class AdjustSubscription {\n    @Input() organizationId: string;\n    @Input() maxAutoscaleSeats: number;\n    @Input() currentSeatCount: number;\n    @Input() seatPrice = 0;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter();\n\n    formPromise: Promise<any>;\n    limitSubscription: boolean;\n    newSeatCount: number;\n    newMaxSeats: number;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    ngOnInit() {\n        this.limitSubscription = this.maxAutoscaleSeats != null;\n        this.newSeatCount = this.currentSeatCount;\n        this.newMaxSeats = this.maxAutoscaleSeats;\n    }\n\n    async submit() {\n        try {\n            const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n            const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n            this.formPromise = this.apiService.postOrganizationUpdateSubscription(this.organizationId, request);\n\n            await this.formPromise;\n\n            this.toasterService.popAsync('success', null, this.i18nService.t('subscriptionUpdated'));\n        } catch { }\n        this.onAdjusted.emit();\n    }\n\n    limitSubscriptionChanged() {\n        if (!this.limitSubscription) {\n            this.newMaxSeats = null;\n        }\n    }\n\n    get adjustedSeatTotal(): number {\n        return this.newSeatCount * this.seatPrice;\n    }\n\n    get maxSeatTotal(): number {\n        return this.newMaxSeats * this.seatPrice;\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"newSeatCount\">{{'subscriptionSeats' | i18n}}</label> <input id=\"newSeatCount\" class=\"form-control\" type=\"number\" name=\"NewSeatCount\" [(ngModel)]=\"newSeatCount\" min=\"0\" step=\"1\" required> <small class=\"d-block text-muted mb-4\"> <strong>{{'total' | i18n}}:</strong> {{newSeatCount || 0}} &times; {{seatPrice | currency:'$'}} = {{adjustedSeatTotal | currency:'$'}} / {{interval | i18n}} </small> </div> </div> <div class=\"row mb-4\"> <div class=\"form-group col-sm\"> <div class=\"form-check\"> <input id=\"limitSubscription\" class=\"form-check-input\" type=\"checkbox\" name=\"LimitSubscription\" [(ngModel)]=\"limitSubscription\" (change)=\"limitSubscriptionChanged()\"> <label for=\"limitSubscription\">{{'limitSubscription' | i18n}}</label> </div> <small class=\"d-block text-muted\">{{'limitSubscriptionDesc' | i18n}}</small> </div> </div> <div class=\"row mb-4\" [hidden]=\"!limitSubscription\"> <div class=\"form-group col-sm\"> <label for=\"maxAutoscaleSeats\">{{'maxSeatLimit' | i18n}}</label> <input id=\"maxAutoscaleSeats\" class=\"form-control col-6\" type=\"number\" name=\"MaxAutoscaleSeats\" [(ngModel)]=\"newMaxSeats\" [min]=\"newSeatCount == null ? 1 : newSeatCount\" step=\"1\" [required]=\"limitSubscription\"> <small class=\"d-block text-muted\"> <strong>{{'maxSeatCost' | i18n}}:</strong> {{newMaxSeats || 0}} &times; {{seatPrice | currency:'$'}} = {{maxSeatTotal | currency:'$'}} / {{interval | i18n}} </small> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </div> </form> <app-payment [showMethods]=\"false\"></app-payment> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\n@Component({\n    selector: 'app-change-plan',\n    templateUrl: 'change-plan.component.html',\n})\nexport class ChangePlanComponent {\n    @Input() organizationId: string;\n    @Output() onChanged = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n    defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n    defaultUpgradeProduct: ProductType = ProductType.Families;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        try {\n            this.onChanged.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<div class=\"card card-org-plans\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h2 class=\"card-body-header\">{{'changeBillingPlan' | i18n}}</h2> <p class=\"mb-0\">{{'changeBillingPlanUpgrade' | i18n}}</p> <app-organization-plans [showFree]=\"false\" [showCancel]=\"true\" [plan]=\"defaultUpgradePlan\" [product]=\"defaultUpgradeProduct\" [organizationId]=\"organizationId\" (onCanceled)=\"cancel()\"> </app-organization-plans> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-download-license',\n    templateUrl: 'download-license.component.html',\n})\nexport class DownloadLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onDownloaded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    installationId: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        if (this.installationId == null || this.installationId === '') {\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.getOrganizationLicense(this.organizationId, this.installationId);\n            const license = await this.formPromise;\n            const licenseString = JSON.stringify(license, null, 2);\n            this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_organization_license.json');\n            this.onDownloaded.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'downloadLicense' | i18n}}</h3> <div class=\"row\"> <div class=\"form-group col-6\"> <div class=\"d-flex\"> <label for=\"installationId\">{{'enterInstallationId' | i18n}}</label> <a class=\"ml-auto\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://help.bitwarden.com/article/licensing-on-premise/#organization-account-sharing\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <input id=\"installationId\" class=\"form-control\" type=\"text\" name=\"InstallationId\" [(ngModel)]=\"installationId\" required> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { UserBillingComponent } from '../../settings/user-billing.component';\n\n@Component({\n    selector: 'app-org-billing',\n    templateUrl: '../../settings/user-billing.component.html',\n})\nexport class OrganizationBillingComponent extends UserBillingComponent implements OnInit {\n    constructor(apiService: ApiService, i18nService: I18nService, toasterService: ToasterService,\n        private route: ActivatedRoute, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { OrganizationSubscriptionResponse } from 'jslib-common/models/response/organizationSubscriptionResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PlanType } from 'jslib-common/enums/planType';\n\n@Component({\n    selector: 'app-org-subscription',\n    templateUrl: 'organization-subscription.component.html',\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    organizationId: string;\n    adjustSeatsAdd = true;\n    showAdjustSeats = false;\n    showAdjustSeatAutoscale = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    showDownloadLicense = false;\n    showChangePlan = false;\n    sub: OrganizationSubscriptionResponse;\n    selfHosted = false;\n\n    userOrg: Organization;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private toasterService: ToasterService,\n        private messagingService: MessagingService, private route: ActivatedRoute,\n        private userService: UserService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n\n        this.loading = true;\n        this.userOrg = await this.userService.getOrganization(this.organizationId);\n        this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n            await this.reinstatePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n            await this.cancelPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    async changePlan() {\n        this.showChangePlan = !this.showChangePlan;\n    }\n\n    closeChangePlan(changed: boolean) {\n        this.showChangePlan = false;\n    }\n\n    downloadLicense() {\n        this.showDownloadLicense = !this.showDownloadLicense;\n    }\n\n    closeDownloadLicense() {\n        this.showDownloadLicense = false;\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(updated: boolean) {\n        this.showUpdateLicense = false;\n        if (updated) {\n            this.load();\n            this.messagingService.send('updatedOrgLicense');\n        }\n    }\n\n    subscriptionAdjusted() {\n        this.load();\n    }\n\n    adjustStorage(add: boolean) {\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isExpired() {\n        return this.sub != null && this.sub.expiration != null &&\n            new Date(this.sub.expiration) < new Date();\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get billingInterval() {\n        const monthly = !this.sub.plan.isAnnual;\n        return monthly ? 'month' : 'year';\n    }\n\n    get storageGbPrice() {\n        return this.sub.plan.additionalStoragePricePerGb;\n    }\n\n    get seatPrice() {\n        return this.sub.plan.seatPrice;\n    }\n\n    get seats() {\n        return this.sub.seats;\n    }\n\n    get maxAutoscaleSeats() {\n        return this.sub.maxAutoscaleSeats;\n    }\n\n    get canAdjustSeats() {\n        return this.sub.plan.hasAdditionalSeatsOption;\n    }\n\n    get canDownloadLicense() {\n        return (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n            (this.subscription != null && !this.subscription.cancelled);\n    }\n\n    get subscriptionDesc() {\n        if (this.sub.planType === PlanType.Free) {\n            return this.i18nService.t('subscriptionFreePlan', this.sub.seats.toString());\n        } else if (this.sub.planType === PlanType.FamiliesAnnually || this.sub.planType === PlanType.FamiliesAnnually2019) {\n            return this.i18nService.t('subscriptionFamiliesPlan', this.sub.seats.toString());\n        } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n            return this.i18nService.t('subscriptionMaxReached', this.sub.seats.toString());\n        } else if (this.sub.maxAutoscaleSeats == null) {\n            return this.i18nService.t('subscriptionUserSeatsUnlimitedAutoscale');\n        } else {\n            return this.i18nService.t('subscriptionUserSeatsLimitedAutoscale', this.sub.maxAutoscaleSeats.toString());\n        }\n    }\n\n    get showChangePlanButton() {\n        return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n    }\n}\n","<div class=\"page-header\"> <h1> {{'subscription' | i18n}} <small *ngIf=\"firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"sub\"> <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\"> {{'subscriptionCanceled' | i18n}}</app-callout> <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\"> <p>{{'subscriptionPendingCanceled' | i18n}}</p> <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\" [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'reinstateSubscription' | i18n}}</span> </button> </app-callout> <ng-container *ngIf=\"!selfHosted\"> <div class=\"row\"> <div class=\"col-4\"> <dl> <dt>{{'billingPlan' | i18n}}</dt> <dd>{{sub.plan.name}}</dd> <ng-container *ngIf=\"subscription\"> <dt>{{'status' | i18n}}</dt> <dd> <span class=\"text-capitalize\">{{subscription.status || '-'}}</span> <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span> </dd> <dt>{{'nextCharge' | i18n}}</dt> <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) : '-'}} </dd> </ng-container> </dl> </div> <div class=\"col-8\" *ngIf=\"subscription\"> <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong> <table class=\"table\"> <tbody> <tr *ngFor=\"let i of subscription.items\"> <td> {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}} </td> <td> {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}} </td> </tr> </tbody> </table> </div> <ng-container *ngIf=\"userOrg?.providerId != null\"> <div class=\"col-sm\"> <dl> <dt>{{'provider' | i18n}}</dt> <dd>{{'yourProviderIs' | i18n : userOrg.providerName}}</dd> </dl> </div> </ng-container> </div> <ng-container> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePlan()\" *ngIf=\"showChangePlanButton\"> {{'changeBillingPlan' | i18n}} </button> <app-change-plan [organizationId]=\"organizationId\" (onChanged)=\"closeChangePlan(true)\" (onCanceled)=\"closeChangePlan(false)\" *ngIf=\"showChangePlan\"></app-change-plan> </ng-container> <h2 class=\"spaced-header\">{{'manageSubscription' | i18n}}</h2> <p class=\"mb-4\">{{subscriptionDesc}}</p> <ng-container *ngIf=\"subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <app-adjust-subscription [seatPrice]=\"seatPrice\" [organizationId]=\"organizationId\" [interval]=\"billingInterval\" [currentSeatCount]=\"seats\" [maxAutoscaleSeats]=\"maxAutoscaleSeats\" (onAdjusted)=\"subscriptionAdjusted()\"> </app-adjust-subscription> </div> </ng-container> <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2> <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p> <div class=\"progress\"> <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\" [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\"> {{(storagePercentage / 100) | percent}}</div> </div> <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\"> {{'addStorage' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustStorage(false)\"> {{'removeStorage' | i18n}} </button> </div> <app-adjust-storage [storageGbPrice]=\"storageGbPrice\" [add]=\"adjustStorageAdd\" [organizationId]=\"organizationId\" [interval]=\"billingInterval\" (onAdjusted)=\"closeStorage(true)\" (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage> </div> </ng-container> <h2 class=\"spaced-header\">{{'additionalOptions' | i18n}}</h2> <p class=\"mb-4\"> {{'additionalOptionsDesc' | i18n }} </p> <div class=\"d-flex\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"downloadLicense()\" *ngIf=\"canDownloadLicense\" [disabled]=\"showDownloadLicense\"> {{'downloadLicense' | i18n}} </button> <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-1\" (click)=\"cancel()\" [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\" *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'cancelSubscription' | i18n}}</span> </button> </div> <div class=\"mt-3\" *ngIf=\"showDownloadLicense\"> <app-download-license [organizationId]=\"organizationId\" (onDownloaded)=\"closeDownloadLicense()\" (onCanceled)=\"closeDownloadLicense()\"></app-download-license> </div> </ng-container> <ng-container *ngIf=\"selfHosted\"> <dl> <dt>{{'billingPlan' | i18n}}</dt> <dd>{{sub.plan.name}}</dd> <dt>{{'expiration' | i18n}}</dt> <dd *ngIf=\"sub.expiration\"> {{sub.expiration | date:'mediumDate'}} <span *ngIf=\"isExpired\" class=\"text-danger ml-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'licenseIsExpired' | i18n}} </span> </dd> <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd> </dl> <div> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\"> {{'updateLicense' | i18n}} </button> <a href=\"https://vault.bitwarden.com\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\"> {{'manageSubscription' | i18n}} </a> </div> <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3> <app-update-license [organizationId]=\"organizationId\" (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\"></app-update-license> </div> </div> </ng-container> </ng-container> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent {\n    access2fa = false;\n    selfHosted: boolean;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.selfHosted = await this.platformUtilsService.isSelfHost();\n            const organization = await this.userService.getOrganization(params.organizationId);\n            this.access2fa = organization.use2fa;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myOrganization' | i18n}} </a> <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'subscription' | i18n}} </a> <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\"> {{'billing' | i18n}} </a> <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"access2fa\"> {{'twoStepLogin' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorDuoComponent } from '../../settings/two-factor-duo.component';\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from '../../settings/two-factor-setup.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: '../../settings/two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n    constructor(apiService: ApiService, userService: UserService,\n        modalService: ModalService, messagingService: MessagingService,\n        policyService: PolicyService, private route: ActivatedRoute) {\n        super(apiService, userService, modalService, messagingService, policyService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await super.ngOnInit();\n        });\n    }\n\n    async manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.OrganizationDuo:\n                const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.type = TwoFactorProviderType.OrganizationDuo;\n                duoComp.organizationId = this.organizationId;\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type !== TwoFactorProviderType.OrganizationDuo;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UpdateTwoFactorAuthenticatorRequest } from 'jslib-common/models/request/updateTwoFactorAuthenticatorRequest';\nimport { TwoFactorAuthenticatorResponse } from 'jslib-common/models/response/twoFactorAuthenticatorResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-authenticator',\n    templateUrl: 'two-factor-authenticator.component.html',\n})\nexport class TwoFactorAuthenticatorComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\n    type = TwoFactorProviderType.Authenticator;\n    key: string;\n    token: string;\n    formPromise: Promise<any>;\n\n    private qrScript: HTMLScriptElement;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, private userService: UserService,\n        platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n        this.qrScript = window.document.createElement('script');\n        this.qrScript.src = 'scripts/qrious.min.js';\n        this.qrScript.async = true;\n    }\n\n    ngOnInit() {\n        window.document.body.appendChild(this.qrScript);\n    }\n\n    ngOnDestroy() {\n        window.document.body.removeChild(this.qrScript);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorAuthenticatorRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.token = this.token;\n        request.key = this.key;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorAuthenticatorResponse) {\n        this.token = null;\n        this.enabled = response.enabled;\n        this.key = response.key;\n        const email = await this.userService.getEmail();\n        window.setTimeout(() => {\n            const qr = new (window as any).QRious({\n                element: document.getElementById('qr'),\n                value: 'otpauth://totp/Bitwarden:' + encodeURIComponent(email) +\n                    '?secret=' + encodeURIComponent(this.key) + '&issuer=Bitwarden',\n                size: 160,\n            });\n        }, 100);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\"> {{'twoStepLogin' | i18n}} <small>{{'authenticatorAppTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <ng-container *ngIf=\"!enabled\"> <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\"> <p>{{'twoStepAuthenticatorDesc' | i18n}}</p> <p> <strong>1. {{'twoStepAuthenticatorDownloadApp' | i18n}}</strong> </p> </ng-container> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> <p>{{'twoStepLoginProviderEnabled' | i18n}}</p> {{'twoStepAuthenticatorReaddDesc' | i18n}} </app-callout> <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\"> <p>{{'twoStepAuthenticatorNeedApp' | i18n}}</p> </ng-container> <ul class=\"fa-ul\"> <li> <i class=\"fa-li fa fa-apple\"></i>{{'iosDevices' | i18n}}: <a href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\" target=\"_blank\" rel=\"noopener\">Authy</a> </li> <li> <i class=\"fa-li fa fa-android\"></i>{{'androidDevices' | i18n}}: <a href=\"https://play.google.com/store/apps/details?id=com.authy.authy\" target=\"_blank\" rel=\"noopener\">Authy</a> </li> <li> <i class=\"fa-li fa fa-windows\"></i>{{'windowsDevices' | i18n}}: <a href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\" target=\"_blank\" rel=\"noopener\">Microsoft Authenticator</a> </li> </ul> <p>{{'twoStepAuthenticatorAppsRecommended' | i18n}}</p> <p *ngIf=\"!enabled\"> <strong>2. {{'twoStepAuthenticatorScanCode' | i18n}}</strong> </p> <hr *ngIf=\"enabled\"> <p class=\"text-center\" [ngClass]=\"{'mb-0': enabled}\"> <canvas id=\"qr\"></canvas><br> <code appA11yTitle=\"{{'key' | i18n}}\">{{key}}</code> </p> <ng-container *ngIf=\"!enabled\"> <label for=\"token\">3. {{'twoStepAuthenticatorEnterCode' | i18n}}</label> <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required appInputVerbatim> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { TwoFactorEmailRequest } from 'jslib-common/models/request/twoFactorEmailRequest';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { UpdateTwoFactorEmailRequest } from 'jslib-common/models/request/updateTwoFactorEmailRequest';\nimport { TwoFactorEmailResponse } from 'jslib-common/models/response/twoFactorEmailResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-email',\n    templateUrl: 'two-factor-email.component.html',\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Email;\n    email: string;\n    token: string;\n    sentEmail: string;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private userService: UserService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    async sendEmail() {\n        try {\n            const request = new TwoFactorEmailRequest(this.email, this.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n            await this.emailPromise;\n            this.sentEmail = this.email;\n        } catch { }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorEmailRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.email = this.email;\n        request.token = this.token;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorEmail(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorEmailResponse) {\n        this.token = null;\n        this.email = response.email;\n        this.enabled = response.enabled;\n        if (!this.enabled && (this.email == null || this.email === '')) {\n            this.email = await this.userService.getEmail();\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faEmailTitle\"> {{'twoStepLogin' | i18n}} <small>{{'emailTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <strong>{{'email' | i18n}}:</strong> {{email}} </ng-container> <ng-container *ngIf=\"!enabled\"> <p class=\"d-flex\"> <span class=\"mr-3\">{{'twoFactorEmailDesc' | i18n}}</span> <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\"> </p> <div class=\"form-group\"> <label for=\"email\">1. {{'twoFactorEmailEnterEmail' | i18n}}</label> <input id=\"email\" type=\"text\" name=\"Email\" class=\"form-control\" [(ngModel)]=\"email\" required inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"mb-3 d-flex\"> <button #sendBtn type=\"button\" class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\" (click)=\"sendEmail()\" [appApiAction]=\"emailPromise\" [disabled]=\"sendBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'sendEmail' | i18n}}</span> </button> <span class=\"text-success ml-3\" *ngIf=\"sentEmail\"> {{'verificationCodeEmailSent' | i18n : sentEmail}} </span> </div> <div class=\"form-group\"> <label for=\"token\">2. {{'twoFactorEmailEnterCode' | i18n}}</label> <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required appInputVerbatim> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { TwoFactorRecoverResponse } from 'jslib-common/models/response/twoFactorRescoverResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\n@Component({\n    selector: 'app-two-factor-recovery',\n    templateUrl: 'two-factor-recovery.component.html',\n})\nexport class TwoFactorRecoveryComponent {\n    type = -1;\n    code: string;\n    authed: boolean;\n    twoFactorProviderType = TwoFactorProviderType;\n\n    constructor(private i18nService: I18nService) { }\n\n    auth(authResponse: any) {\n        this.authed = true;\n        this.processResponse(authResponse.response);\n    }\n\n    print() {\n        const w = window.open();\n        w.document.write('<div style=\"font-size: 18px; text-align: center;\">' +\n            '<p>' + this.i18nService.t('twoFactorRecoveryYourCode') + ':</p>' +\n            '<code style=\"font-family: Menlo, Monaco, Consolas, \\'Courier New\\', monospace;\">' +\n            this.code + '</code></div>' +\n            '<p style=\"text-align: center;\">' + new Date() + '</p>');\n        w.onafterprint = () => w.close();\n        w.print();\n    }\n\n    private formatString(s: string) {\n        if (s == null) {\n            return null;\n        }\n        return s.replace(/(.{4})/g, '$1 ').trim().toUpperCase();\n    }\n\n    private processResponse(response: TwoFactorRecoverResponse) {\n        this.code = this.formatString(response.code);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faRecoveryTitle\"> {{'twoStepLogin' | i18n}} <small>{{'recoveryCodeTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <ng-container *ngIf=\"authed\"> <div class=\"modal-body text-center\"> <ng-container *ngIf=\"code\"> <p>{{'twoFactorRecoveryYourCode' | i18n}}:</p> <code class=\"text-lg\">{{code}}</code> </ng-container> <ng-container *ngIf=\"!code\"> {{'twoFactorRecoveryNoCode' | i18n}} </ng-container> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">{{'printCode' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </ng-container> </div> </div> </div> ","import {\n    Component,\n    NgZone,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from 'jslib-common/models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from 'jslib-common/models/request/updateTwoFactorWebAuthnRequest';\nimport {\n    ChallengeResponse,\n    TwoFactorWebAuthnResponse,\n} from 'jslib-common/models/response/twoFactorWebAuthnResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-webauthn',\n    templateUrl: 'two-factor-webauthn.component.html',\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.WebAuthn;\n    name: string;\n    keys: any[];\n    keyIdAvailable: number = null;\n    keysConfiguredCount = 0;\n    webAuthnError: boolean;\n    webAuthnListening: boolean;\n    webAuthnResponse: PublicKeyCredential;\n    challengePromise: Promise<ChallengeResponse>;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private ngZone: NgZone) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n            // Should never happen.\n            return Promise.reject();\n        }\n        const request = new UpdateTwoFactorWebAuthnRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.deviceResponse = this.webAuthnResponse;\n        request.id = this.keyIdAvailable;\n        request.name = this.name;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    disable() {\n        return super.disable(this.formPromise);\n    }\n\n    async remove(key: any) {\n        if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n            return;\n        }\n        const name = key.name != null ? key.name : this.i18nService.t('webAuthnkeyX', key.id);\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeU2fConfirmation'), name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n        const request = new UpdateTwoFactorWebAuthnDeleteRequest();\n        request.id = key.id;\n        request.masterPasswordHash = this.masterPasswordHash;\n        try {\n            key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n            const response = await key.removePromise;\n            key.removePromise = null;\n            await this.processResponse(response);\n        } catch { }\n    }\n\n    async readKey() {\n        if (this.keyIdAvailable == null) {\n            return;\n        }\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        try {\n            this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n            const challenge = await this.challengePromise;\n            this.readDevice(challenge);\n        } catch { }\n    }\n\n    private readDevice(webAuthnChallenge: ChallengeResponse) {\n        // tslint:disable-next-line\n        console.log('listening for key...');\n        this.resetWebAuthn(true);\n\n        navigator.credentials.create({\n            publicKey: webAuthnChallenge,\n        }).then((data: PublicKeyCredential) => {\n            this.ngZone.run(() => {\n                this.webAuthnListening = false;\n                this.webAuthnResponse = data;\n            });\n        }).catch(err => {\n            // tslint:disable-next-line\n            console.error(err);\n            this.resetWebAuthn(false);\n            // TODO: Should we display the actual error?\n            this.webAuthnError = true;\n        });\n    }\n\n    private resetWebAuthn(listening = false) {\n        this.webAuthnResponse = null;\n        this.webAuthnError = false;\n        this.webAuthnListening = listening;\n    }\n\n    private processResponse(response: TwoFactorWebAuthnResponse) {\n        this.resetWebAuthn();\n        this.keys = [];\n        this.keyIdAvailable = null;\n        this.name = null;\n        this.keysConfiguredCount = 0;\n        for (let i = 1; i <= 5; i++) {\n            if (response.keys != null) {\n                const key = response.keys.filter(k => k.id === i);\n                if (key.length > 0) {\n                    this.keysConfiguredCount++;\n                    this.keys.push({\n                        id: i, name: key[0].name,\n                        configured: true,\n                        migrated: key[0].migrated,\n                        removePromise: null,\n                    });\n                    continue;\n                }\n            }\n            this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n            if (this.keyIdAvailable == null) {\n                this.keyIdAvailable = i;\n            }\n        }\n        this.enabled = response.enabled;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\"> <div class=\"modal-dialog modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faU2fTitle\"> {{'twoStepLogin' | i18n}} <small>{{'webAuthnTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <app-callout type=\"warning\"> <p>{{'twoFactorWebAuthnWarning' | i18n}}</p> <ul class=\"mb-0\"> <li>{{'twoFactorWebAuthnSupportWeb' | i18n}}</li> </ul> </app-callout> <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\"> <ul class=\"fa-ul\"> <li *ngFor=\"let k of keys; let i = index\" #removeKeyBtn [appApiAction]=\"k.removePromise\"> <i class=\"fa-li fa fa-key\"></i> <strong *ngIf=\"!k.configured || !k.name\">{{'webAuthnkeyX' | i18n : i + 1}}</strong> <strong *ngIf=\"k.configured && k.name\">{{k.name}}</strong> <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\"> <ng-container *ngIf=\"k.migrated\"> <span>{{'webAuthnMigrated' | i18n}}</span> </ng-container> </ng-container> <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\"> <i class=\"fa fa-spin fa-spinner text-muted fa-fw\" title=\"{{'loading' | i18n}}\" *ngIf=\"removeKeyBtn.loading\" aria-hidden=\"true\"></i> - <a href=\"#\" appStopClick (click)=\"remove(k)\">{{'remove' | i18n}}</a> </ng-container> </li> </ul> <hr> <p>{{'twoFactorWebAuthnAdd' | i18n}}:</p> <ol> <li>{{'twoFactorU2fGiveName' | i18n}}</li> <li>{{'twoFactorU2fPlugInReadKey' | i18n}}</li> <li>{{'twoFactorU2fTouchButton' | i18n}}</li> <li>{{'twoFactorU2fSaveForm' | i18n}}</li> </ol> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" type=\"text\" name=\"Name\" class=\"form-control\" [(ngModel)]=\"name\" [disabled]=\"!keyIdAvailable\"> </div> </div> <button type=\"button\" (click)=\"readKey()\" class=\"btn btn-outline-secondary mr-2\" [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\" #readKeyBtn [appApiAction]=\"challengePromise\"> {{'readKey' | i18n}} </button> <ng-container *ngIf=\"readKeyBtn.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i> </ng-container> <ng-container *ngIf=\"!readKeyBtn.loading\"> <ng-container *ngIf=\"webAuthnListening\"> <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i> {{'twoFactorU2fWaiting' | i18n}}... </ng-container> <ng-container *ngIf=\"webAuthnResponse\"> <i class=\"fa fa-check-circle text-success\" aria-hidden=\"true\"></i> {{'twoFactorU2fClickSave' | i18n}} </ng-container> <ng-container *ngIf=\"webAuthnError\"> <i class=\"fa fa-warning text-danger\" aria-hidden=\"true\"></i> {{'twoFactorU2fProblemReadingTryAgain' | i18n}} </ng-container> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || !webAuthnResponse\"> <i class=\"fa fa-spinner fa-spin\" *ngIf=\"form.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!form.loading\">{{'save' | i18n}}</span> </button> <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\" *ngIf=\"enabled\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'disableAllKeys' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { UpdateTwoFactorYubioOtpRequest } from 'jslib-common/models/request/updateTwoFactorYubioOtpRequest';\nimport { TwoFactorYubiKeyResponse } from 'jslib-common/models/response/twoFactorYubiKeyResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-yubikey',\n    templateUrl: 'two-factor-yubikey.component.html',\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Yubikey;\n    keys: any[];\n    nfc = false;\n\n    formPromise: Promise<any>;\n    disablePromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        const request = new UpdateTwoFactorYubioOtpRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n        request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n        request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n        request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n        request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n        request.nfc = this.nfc;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n            this.toasterService.popAsync('success', null, this.i18nService.t('yubikeysUpdated'));\n        });\n    }\n\n    disable() {\n        return super.disable(this.disablePromise);\n    }\n\n    remove(key: any) {\n        key.existingKey = null;\n        key.key = null;\n    }\n\n    private processResponse(response: TwoFactorYubiKeyResponse) {\n        this.enabled = response.enabled;\n        this.keys = [\n            { key: response.key1, existingKey: this.padRight(response.key1) },\n            { key: response.key2, existingKey: this.padRight(response.key2) },\n            { key: response.key3, existingKey: this.padRight(response.key3) },\n            { key: response.key4, existingKey: this.padRight(response.key4) },\n            { key: response.key5, existingKey: this.padRight(response.key5) },\n        ];\n        this.nfc = response.nfc || !response.enabled;\n    }\n\n    private padRight(str: string, character = '•', size = 44) {\n        if (str == null || character == null || str.length >= size) {\n            return str;\n        }\n        const max = (size - str.length) / character.length;\n        for (let i = 0; i < max; i++) {\n            str += character;\n        }\n        return str;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\"> <div class=\"modal-dialog modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\"> {{'twoStepLogin' | i18n}} <small>YubiKey</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\" autocomplete=\"off\"> <div class=\"modal-body\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <app-callout type=\"warning\"> <p>{{'twoFactorYubikeyWarning' | i18n}}</p> <ul class=\"mb-0\"> <li>{{'twoFactorYubikeySupportUsb' | i18n}}</li> <li>{{'twoFactorYubikeySupportMobile' | i18n}}</li> </ul> </app-callout> <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\"> <p>{{'twoFactorYubikeyAdd' | i18n}}:</p> <ol> <li>{{'twoFactorYubikeyPlugIn' | i18n}}</li> <li>{{'twoFactorYubikeySelectKey' | i18n}}</li> <li>{{'twoFactorYubikeyTouchButton' | i18n}}</li> <li>{{'twoFactorYubikeySaveForm' | i18n}}</li> </ol> <hr> <div class=\"row\"> <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\"> <label for=\"key{{i + 1}}\">{{'yubikeyX' | i18n : i + 1}}</label> <input id=\"key{{i + 1}}\" type=\"password\" name=\"Key{{i + 1}}\" class=\"form-control\" [(ngModel)]=\"k.key\" *ngIf=\"!k.existingKey\" appInputVerbatim autocomplete=\"new-password\"> <div class=\"d-flex\" *ngIf=\"k.existingKey\"> <span class=\"mr-2\">{{k.existingKey}}</span> <button type=\"button\" class=\"btn btn-link text-danger ml-auto\" (click)=\"remove(k)\" appA11yTitle=\"{{'remove' | i18n}}\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <strong class=\"d-block mb-2\">{{'nfcSupport' | i18n}}</strong> <div class=\"form-check\"> <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\"> <label class=\"form-check-label\" for=\"nfc\">{{'twoFactorYubikeySupportsNfc' | i18n}}</label> </div> <small class=\"form-text text-muted\">{{'twoFactorYubikeySupportsNfcDesc' | i18n}}</small> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\" *ngIf=\"enabled\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'disableAllKeys' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { ExportComponent as BaseExportComponent } from '../../tools/export.component';\n\n@Component({\n    selector: 'app-org-export',\n    templateUrl: '../../tools/export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService, private route: ActivatedRoute, policyService: PolicyService) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService, policyService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n        });\n    }\n\n    async checkExportDisabled() {\n        return;\n    }\n\n    getExportData() {\n        return this.exportService.getOrganizationExport(this.organizationId, this.format);\n    }\n\n    getFileName() {\n        return super.getFileName('org');\n    }\n\n    async collectEvent(): Promise<any> {\n        // TODO\n        // await this.eventService.collect(EventType.Organization_ClientExportedVault);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport {\n    ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent,\n} from '../../tools/exposed-passwords-report.component';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: '../../tools/exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, auditService: AuditService,\n        modalService: ModalService, messagingService: MessagingService,\n        userService: UserService, passwordRepromptService: PasswordRepromptService, private route: ActivatedRoute) {\n        super(cipherService, auditService, modalService, messagingService, userService, passwordRepromptService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import { AttachmentResponse } from '../response/attachmentResponse';\n\nexport class AttachmentData {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response?: AttachmentResponse) {\n        if (response == null) {\n            return;\n        }\n        this.id = response.id;\n        this.url = response.url;\n        this.fileName = response.fileName;\n        this.key = response.key;\n        this.size = response.size;\n        this.sizeName = response.sizeName;\n    }\n}\n","import { CardApi } from '../api/cardApi';\n\nexport class CardData {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data?: CardApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.cardholderName = data.cardholderName;\n        this.brand = data.brand;\n        this.number = data.number;\n        this.expMonth = data.expMonth;\n        this.expYear = data.expYear;\n        this.code = data.code;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldApi } from '../api/fieldApi';\n\nexport class FieldData {\n    type: FieldType;\n    name: string;\n    value: string;\n\n    constructor(response?: FieldApi) {\n        if (response == null) {\n            return;\n        }\n        this.type = response.type;\n        this.name = response.name;\n        this.value = response.value;\n    }\n}\n","import { IdentityApi } from '../api/identityApi';\n\nexport class IdentityData {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data?: IdentityApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.title = data.title;\n        this.firstName = data.firstName;\n        this.middleName = data.middleName;\n        this.lastName = data.lastName;\n        this.address1 = data.address1;\n        this.address2 = data.address2;\n        this.address3 = data.address3;\n        this.city = data.city;\n        this.state = data.state;\n        this.postalCode = data.postalCode;\n        this.country = data.country;\n        this.company = data.company;\n        this.email = data.email;\n        this.phone = data.phone;\n        this.ssn = data.ssn;\n        this.username = data.username;\n        this.passportNumber = data.passportNumber;\n        this.licenseNumber = data.licenseNumber;\n    }\n}\n","import { LoginApi } from '../api/loginApi';\n\nimport { LoginUriData } from './loginUriData';\n\nexport class LoginData {\n    uris: LoginUriData[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n    autofillOnPageLoad: boolean;\n\n    constructor(data?: LoginApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.username = data.username;\n        this.password = data.password;\n        this.passwordRevisionDate = data.passwordRevisionDate;\n        this.totp = data.totp;\n        this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n        if (data.uris) {\n            this.uris = data.uris.map(u => new LoginUriData(u));\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriApi } from '../api/loginUriApi';\n\nexport class LoginUriData {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data?: LoginUriApi) {\n        if (data == null) {\n            return;\n        }\n        this.uri = data.uri;\n        this.match = data.match;\n    }\n}\n","import { PasswordHistoryResponse } from '../response/passwordHistoryResponse';\n\nexport class PasswordHistoryData {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response?: PasswordHistoryResponse) {\n        if (response == null) {\n            return;\n        }\n\n        this.password = response.password;\n        this.lastUsedDate = response.lastUsedDate;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class SecureNoteData {\n    type: SecureNoteType;\n\n    constructor(data?: SecureNoteApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.type = data.type;\n    }\n}\n","import { AttachmentData } from '../data/attachmentData';\n\nimport { AttachmentView } from '../view/attachmentView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nexport class Attachment extends Domain {\n    id: string;\n    url: string;\n    size: string;\n    sizeName: string;\n    key: EncString;\n    fileName: EncString;\n\n    constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, alreadyEncrypted, ['id', 'url', 'sizeName']);\n    }\n\n    async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n        const view = await this.decryptObj(new AttachmentView(this), {\n            fileName: null,\n        }, orgId, encKey);\n\n        if (this.key != null) {\n            let cryptoService: CryptoService;\n            const containerService = (Utils.global as any).bitwardenContainerService;\n            if (containerService) {\n                cryptoService = containerService.getCryptoService();\n            } else {\n                throw new Error('global bitwardenContainerService not initialized.');\n            }\n\n            try {\n                const orgKey = await cryptoService.getOrgKey(orgId);\n                const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n                view.key = new SymmetricCryptoKey(decValue);\n            } catch (e) {\n                // TODO: error?\n            }\n        }\n\n        return view;\n    }\n\n    toAttachmentData(): AttachmentData {\n        const a = new AttachmentData();\n        a.size = this.size;\n        this.buildDataModel(this, a, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, ['id', 'url', 'sizeName']);\n        return a;\n    }\n}\n","import { PasswordHistoryData } from '../data/passwordHistoryData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { PasswordHistoryView } from '../view/passwordHistoryView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Password extends Domain {\n    password: EncString;\n    lastUsedDate: Date;\n\n    constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            password: null,\n        }, alreadyEncrypted);\n        this.lastUsedDate = new Date(obj.lastUsedDate);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n         return this.decryptObj(new PasswordHistoryView(this), {\n            password: null,\n        }, orgId, encKey);\n    }\n\n    toPasswordHistoryData(): PasswordHistoryData {\n        const ph = new PasswordHistoryData();\n        ph.lastUsedDate = this.lastUsedDate.toISOString();\n        this.buildDataModel(this, ph, {\n            password: null,\n        });\n        return ph;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherCreateRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class CardApi extends BaseResponse {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.cardholderName = this.getResponseProperty('CardholderName');\n        this.brand = this.getResponseProperty('Brand');\n        this.number = this.getResponseProperty('Number');\n        this.expMonth = this.getResponseProperty('ExpMonth');\n        this.expYear = this.getResponseProperty('ExpYear');\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { FieldType } from '../../enums/fieldType';\n\nexport class FieldApi extends BaseResponse {\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.value = this.getResponseProperty('Value');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class IdentityApi extends BaseResponse {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.title = this.getResponseProperty('Title');\n        this.firstName = this.getResponseProperty('FirstName');\n        this.middleName = this.getResponseProperty('MiddleName');\n        this.lastName = this.getResponseProperty('LastName');\n        this.address1 = this.getResponseProperty('Address1');\n        this.address2 = this.getResponseProperty('Address2');\n        this.address3 = this.getResponseProperty('Address3');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n        this.company = this.getResponseProperty('Company');\n        this.email = this.getResponseProperty('Email');\n        this.phone = this.getResponseProperty('Phone');\n        this.ssn = this.getResponseProperty('SSN');\n        this.username = this.getResponseProperty('Username');\n        this.passportNumber = this.getResponseProperty('PassportNumber');\n        this.licenseNumber = this.getResponseProperty('LicenseNumber');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { LoginUriApi } from './loginUriApi';\n\nexport class LoginApi extends BaseResponse {\n    uris: LoginUriApi[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n    autofillOnPageLoad: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.username = this.getResponseProperty('Username');\n        this.password = this.getResponseProperty('Password');\n        this.passwordRevisionDate = this.getResponseProperty('PasswordRevisionDate');\n        this.totp = this.getResponseProperty('Totp');\n        this.autofillOnPageLoad = this.getResponseProperty('AutofillOnPageLoad');\n\n        const uris = this.getResponseProperty('Uris');\n        if (uris != null) {\n            this.uris = uris.map((u: any) => new LoginUriApi(u));\n        }\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { UriMatchType } from '../../enums/uriMatchType';\n\nexport class LoginUriApi extends BaseResponse {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.uri = this.getResponseProperty('Uri');\n        const match = this.getResponseProperty('Match');\n        this.match = match != null ? match : null;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class SecureNoteApi extends BaseResponse {\n    type: SecureNoteType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    Renderer2,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NgControl,\n    NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n    selector: 'input[type=checkbox][appTrueFalseValue]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TrueFalseValueDirective),\n            multi: true,\n        },\n    ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n    @Input() trueValue = true;\n    @Input() falseValue = false;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\n\n    @HostListener('change', ['$event'])\n    onHostChange(ev: any) {\n        this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n    }\n\n    writeValue(obj: any): void {\n        if (obj === this.trueValue) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', true);\n        } else {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', false);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void { /* nothing */ }\n\n    setDisabledState?(isDisabled: boolean): void { /* nothing */ }\n\n    private propagateChange = (_: any) => { /* nothing */ };\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    Input,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appFallbackSrc]',\n})\nexport class FallbackSrcDirective {\n    @Input('appFallbackSrc') appFallbackSrc: string;\n\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('error') onError() {\n        this.el.nativeElement.src = this.appFallbackSrc;\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { ImportService } from 'jslib-common/abstractions/import.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ImportComponent as BaseImportComponent } from '../../tools/import.component';\n\n@Component({\n    selector: 'app-org-import',\n    templateUrl: '../../tools/import.component.html',\n})\nexport class ImportComponent extends BaseImportComponent {\n    organizationName: string;\n\n    constructor(i18nService: I18nService, toasterService: ToasterService,\n        importService: ImportService, router: Router, private route: ActivatedRoute,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private userService: UserService) {\n        super(i18nService, toasterService, importService, router, platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            this.successNavigate = ['organizations', this.organizationId, 'vault'];\n            await super.ngOnInit();\n            this.importBlockedByPolicy = false;\n        });\n        const organization = await this.userService.getOrganization(this.organizationId);\n        this.organizationName = organization.name;\n    }\n\n    async submit() {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('importWarning', this.organizationName),\n            this.i18nService.t('warning'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n        super.submit();\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport {\n    InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent,\n} from '../../tools/inactive-two-factor-report.component';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: '../../tools/inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n    constructor(cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService, passwordRepromptService: PasswordRepromptService,\n        private route: ActivatedRoute) {\n        super(cipherService, modalService, messagingService, userService, passwordRepromptService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport {\n    ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent,\n} from '../../tools/reused-passwords-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: '../../tools/reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService, passwordRepromptService: PasswordRepromptService,\n        private route: ActivatedRoute) {\n        super(cipherService, modalService, messagingService, userService, passwordRepromptService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent {\n    organization: Organization;\n    accessReports = false;\n    loading = true;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private messagingService: MessagingService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            this.accessReports = this.organization.useTotp;\n            this.loading = false;\n        });\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n    }\n}\n","<div class=\"container page-content\"> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\"> <div class=\"card-header\">{{'tools' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'importData' | i18n}} </a> <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exportVault' | i18n}} </a> </div> </div> <div class=\"card\" *ngIf=\"organization.canAccessReports\"> <div class=\"card-header d-flex\"> {{'reports' | i18n}} <div class=\"ml-auto\"> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!accessReports\" (click)=\"upgradeOrganization()\"> {{'upgrade' | i18n}} </a> </div> </div> <div class=\"list-group list-group-flush\"> <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exposedPasswordsReport' | i18n}} </a> <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'reusedPasswordsReport' | i18n}} </a> <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'weakPasswordsReport' | i18n}} </a> <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'unsecuredWebsitesReport' | i18n}} </a> <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'inactive2faReport' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </ng-container> </div> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport {\n    UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent,\n} from '../../tools/unsecured-websites-report.component';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: '../../tools/unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n    constructor(cipherService: CipherService, modalService: ModalService,\n        messagingService: MessagingService, userService: UserService, passwordRepromptService: PasswordRepromptService,\n        private route: ActivatedRoute) {\n        super(cipherService, modalService, messagingService, userService, passwordRepromptService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport {\n    WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent,\n} from '../../tools/weak-passwords-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: '../../tools/weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, passwordGenerationService: PasswordGenerationService,\n        modalService: ModalService, messagingService: MessagingService,\n        userService: UserService, passwordRepromptService: PasswordRepromptService, private route: ActivatedRoute) {\n        super(cipherService, passwordGenerationService, modalService, messagingService, userService,\n            passwordRepromptService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from '../../vault/attachments.component';\n\n@Component({\n    selector: 'app-org-vault-attachments',\n    templateUrl: '../../vault/attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = false;\n    organization: Organization;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n            await super.reuploadCipherAttachment(attachment, true);\n        }\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canEditAnyCollection) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file, this.organization.canEditAnyCollection);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        if (!this.organization.canEditAnyCollection) {\n            return super.deleteCipherAttachment(attachmentId);\n        }\n        return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.organization.canEditAnyCollection;\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Output() onUploadedAttachment = new EventEmitter();\n    @Output() onDeletedAttachment = new EventEmitter();\n    @Output() onReuploadedAttachment = new EventEmitter();\n\n    cipher: CipherView;\n    cipherDomain: Cipher;\n    hasUpdatedKey: boolean;\n    canAccessAttachments: boolean;\n    formPromise: Promise<any>;\n    deletePromises: { [id: string]: Promise<any>; } = {};\n    reuploadPromises: { [id: string]: Promise<any>; } = {};\n    emergencyAccessId?: string = null;\n\n    constructor(protected cipherService: CipherService, protected i18nService: I18nService,\n        protected cryptoService: CryptoService, protected userService: UserService,\n        protected platformUtilsService: PlatformUtilsService, protected apiService: ApiService,\n        protected win: Window) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit() {\n        if (!this.hasUpdatedKey) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        if (files[0].size > 524288000) { // 500 MB\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('maxFileSize'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.saveCipherAttachment(files[0]);\n            this.cipherDomain = await this.formPromise;\n            this.cipher = await this.cipherDomain.decrypt();\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n            this.onUploadedAttachment.emit();\n        } catch { }\n\n        // reset file input\n        // ref: https://stackoverflow.com/a/20552042\n        fileEl.type = '';\n        fileEl.type = 'file';\n        fileEl.value = '';\n    }\n\n    async delete(attachment: AttachmentView) {\n        if (this.deletePromises[attachment.id] != null) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteAttachmentConfirmation'), this.i18nService.t('deleteAttachment'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n            await this.deletePromises[attachment.id];\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedAttachment'));\n            const i = this.cipher.attachments.indexOf(attachment);\n            if (i > -1) {\n                this.cipher.attachments.splice(i, 1);\n            }\n        } catch { }\n\n        this.deletePromises[attachment.id] = null;\n        this.onDeletedAttachment.emit();\n    }\n\n    async download(attachment: AttachmentView) {\n        const a = (attachment as any);\n        if (a.downloading) {\n            return;\n        }\n\n        if (!this.canAccessAttachments) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('premiumRequired'),\n                this.i18nService.t('premiumRequiredDesc'));\n            return;\n        }\n\n        let url: string;\n        try {\n            const attachmentDownloadResponse = await this.apiService.getAttachmentData(this.cipher.id, attachment.id,\n                this.emergencyAccessId);\n            url = attachmentDownloadResponse.url;\n        } catch (e) {\n            if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n                url = attachment.url;\n            } else if (e instanceof ErrorResponse) {\n                throw new Error((e as ErrorResponse).getSingleMessage());\n            } else {\n                throw e;\n            }\n        }\n\n        a.downloading = true;\n        const response = await fetch(new Request(url, { cache: 'no-store' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            a.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const key = attachment.key != null ? attachment.key :\n                await this.cryptoService.getOrgKey(this.cipher.organizationId);\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n            this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        a.downloading = false;\n    }\n\n    protected async init() {\n        this.cipherDomain = await this.loadCipher();\n        this.cipher = await this.cipherDomain.decrypt();\n\n        this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n        const canAccessPremium = await this.userService.canAccessPremium();\n        this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n        if (!this.canAccessAttachments) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=purchase');\n            }\n        } else if (!this.hasUpdatedKey) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateKey'), this.i18nService.t('featureUnavailable'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'), 'warning');\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://help.bitwarden.com/article/update-encryption-key/');\n            }\n        }\n    }\n\n    protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n        const a = (attachment as any);\n        if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n            return;\n        }\n\n        try {\n            this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n                // 1. Download\n                a.downloading = true;\n                const response = await fetch(new Request(attachment.url, { cache: 'no-store' }));\n                if (response.status !== 200) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                    a.downloading = false;\n                    return;\n                }\n\n                try {\n                    // 2. Resave\n                    const buf = await response.arrayBuffer();\n                    const key = attachment.key != null ? attachment.key :\n                        await this.cryptoService.getOrgKey(this.cipher.organizationId);\n                    const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n                    this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n                        this.cipherDomain, attachment.fileName, decBuf, admin);\n                    this.cipher = await this.cipherDomain.decrypt();\n\n                    // 3. Delete old\n                    this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n                    await this.deletePromises[attachment.id];\n                    const foundAttachment = this.cipher.attachments.filter(a2 => a2.id === attachment.id);\n                    if (foundAttachment.length > 0) {\n                        const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n                        if (i > -1) {\n                            this.cipher.attachments.splice(i, 1);\n                        }\n                    }\n\n                    this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n                    this.onReuploadedAttachment.emit();\n                } catch (e) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                }\n\n                a.downloading = false;\n            });\n            await this.reuploadPromises[attachment.id];\n        } catch { }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherCollectionsRequest } from 'jslib-common/models/request/cipherCollectionsRequest';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from '../../vault/collections.component';\n\n@Component({\n    selector: 'app-org-vault-collections',\n    templateUrl: '../../vault/collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService,\n        private apiService: ApiService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService);\n        this.allowSelectNone = true;\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canViewAllCollections) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected loadCipherCollections() {\n        if (!this.organization.canViewAllCollections) {\n            return super.loadCipherCollections();\n        }\n        return this.collectionIds;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.canViewAllCollections) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected saveCollections() {\n        if (this.organization.canEditAnyCollection) {\n            const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n            return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n        } else {\n            return super.saveCollections();\n        }\n    }\n}\n","export class CipherCollectionsRequest {\n    collectionIds: string[];\n\n    constructor(collectionIds: string[]) {\n        this.collectionIds = collectionIds == null ? [] : collectionIds;\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { EntityEventsComponent } from '../manage/entity-events.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { GroupingsComponent } from './groupings.component';\n\nconst BroadcasterSubscriptionId = 'OrgVaultComponent';\n\n@Component({\n    selector: 'app-org-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n\n    organization: Organization;\n    collectionId: string = null;\n    type: CipherType = null;\n    deleted: boolean = false;\n    trashCleanupWarning: string = null;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private syncService: SyncService, private i18nService: I18nService,\n        private modalService: ModalService, private messagingService: MessagingService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.trashCleanupWarning = this.i18nService.t(\n            this.platformUtilsService.isSelfHost() ? 'trashCleanupWarningSelfHosted' : 'trashCleanupWarning'\n        );\n\n        const queryParams = this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.groupingsComponent.organization = this.organization;\n            this.ciphersComponent.organization = this.organization;\n\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\n                if (!this.organization.canViewAllCollections) {\n                    await this.syncService.fullSync(false);\n                    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                        this.ngZone.run(async () => {\n                            switch (message.command) {\n                                case 'syncCompleted':\n                                    if (message.successfully) {\n                                        await Promise.all([\n                                            this.groupingsComponent.load(),\n                                            this.ciphersComponent.refresh(),\n                                        ]);\n                                        this.changeDetectorRef.detectChanges();\n                                    }\n                                    break;\n                            }\n                        });\n                    });\n                }\n                await this.groupingsComponent.load();\n\n                if (qParams == null) {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                } else {\n                    if (qParams.deleted) {\n                        this.groupingsComponent.selectedTrash = true;\n                        await this.filterDeleted(true);\n                    } else if (qParams.type) {\n                        const t = parseInt(qParams.type, null);\n                        this.groupingsComponent.selectedType = t;\n                        await this.filterCipherType(t, true);\n                    } else if (qParams.collectionId) {\n                        this.groupingsComponent.selectedCollectionId = qParams.collectionId;\n                        await this.filterCollection(qParams.collectionId, true);\n                    } else {\n                        this.groupingsComponent.selectedAll = true;\n                        await this.ciphersComponent.reload();\n                    }\n                }\n\n                if (qParams.viewEvents != null) {\n                    const cipher = this.ciphersComponent.ciphers.filter(c => c.id === qParams.viewEvents);\n                    if (cipher.length > 0) {\n                        this.viewEvents(cipher[0]);\n                    }\n                }\n\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n\n            if (queryParams != null) {\n                queryParams.unsubscribe();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.applyFilter();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        const filter = (c: CipherView) => c.type === type;\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        const filter = (c: CipherView) => {\n            if (collectionId === 'unassigned') {\n                return c.collectionIds == null || c.collectionIds.length === 0;\n            } else {\n                return c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1;\n            }\n        };\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    async filterDeleted(load: boolean = false) {\n        this.ciphersComponent.showAddNew = false;\n        this.ciphersComponent.deleted = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\n        if (load) {\n            await this.ciphersComponent.reload(null, true);\n        } else {\n            await this.ciphersComponent.applyFilter(null);\n        }\n        this.clearFilters();\n        this.deleted = true;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    async editCipherAttachments(cipher: CipherView) {\n        if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n            this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n            return;\n        }\n\n        let madeAttachmentChanges = false;\n\n        const [modal] = await this.modalService.openViewRef(AttachmentsComponent, this.attachmentsModalRef, comp => {\n            comp.organization = this.organization;\n            comp.cipherId = cipher.id;\n            comp.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n            comp.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n        });\n\n        modal.onClosed.subscribe(async () => {\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    async editCipherCollections(cipher: CipherView) {\n        const [modal] = await this.modalService.openViewRef(CollectionsComponent, this.collectionsModalRef, comp => {\n            if (this.organization.canEditAnyCollection) {\n                comp.collectionIds = cipher.collectionIds;\n                comp.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n            }\n            comp.organization = this.organization;\n            comp.cipherId = cipher.id;\n            comp.onSavedCollections.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async addCipher() {\n        const component = await this.editCipher(null);\n        component.organizationId = this.organization.id;\n        component.type = this.type;\n        if (this.organization.canEditAnyCollection) {\n            component.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n        }\n        if (this.collectionId != null) {\n            component.collectionIds = [this.collectionId];\n        }\n    }\n\n    async editCipher(cipher: CipherView) {\n        const [modal, childComponent] = await this.modalService.openViewRef(AddEditComponent, this.cipherAddEditModalRef, comp => {\n            comp.organization = this.organization;\n            comp.cipherId = cipher == null ? null : cipher.id;\n            comp.onSavedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n            comp.onDeletedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n            comp.onRestoredCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n\n        return childComponent;\n    }\n\n    async cloneCipher(cipher: CipherView) {\n        const component = await this.editCipher(cipher);\n        component.cloneMode = true;\n        component.organizationId = this.organization.id;\n        if (this.organization.canEditAnyCollection) {\n            component.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n        }\n        // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n        // in the add-edit componenet\n        component.collectionIds = cipher.collectionIds;\n    }\n\n    async viewEvents(cipher: CipherView) {\n        await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, comp => {\n            comp.name = cipher.name;\n            comp.organizationId = this.organization.id;\n            comp.entityId = cipher.id;\n            comp.showUser = true;\n            comp.entity = 'cipher';\n        });\n    }\n\n    private clearFilters() {\n        this.collectionId = null;\n        this.type = null;\n        this.deleted = false;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                type: this.type,\n                collectionId: this.collectionId,\n                deleted: this.deleted ? true : null,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <app-org-vault-groupings [showFolders]=\"false\" [showFavorites]=\"false\" [showTrash]=\"true\" (onAllClicked)=\"clearGroupingFilters()\" (onCipherTypeClicked)=\"filterCipherType($event)\" (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\" (onTrashClicked)=\"filterDeleted()\"> </app-org-vault-groupings> </div> <div class=\"col-9\"> <div class=\"page-header d-flex\"> <h1> {{'vault' | i18n}} <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [deleted]=\"deleted\" [organization]=\"organization\"> </app-vault-bulk-actions> <button type=\"button\" class=\"btn btn-outline-primary btn-sm ml-auto\" (click)=\"addCipher()\" *ngIf=\"!deleted\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}} </button> </div> </div> <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"fa-warning\"> {{trashCleanupWarning}} </app-callout> <app-org-vault-ciphers (onCipherClicked)=\"editCipher($event)\" (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\" (onCollectionsClicked)=\"editCipherCollections($event)\" (onEventsClicked)=\"viewEvents($event)\" (onCloneClicked)=\"cloneCipher($event)\"> </app-org-vault-ciphers> </div> </div> </div> <ng-template #attachments></ng-template> <ng-template #cipherAddEdit></ng-template> <ng-template #collections></ng-template> <ng-template #eventsTemplate></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherBulkDeleteRequest } from 'jslib-common/models/request/cipherBulkDeleteRequest';\n\n@Component({\n    selector: 'app-vault-bulk-delete',\n    templateUrl: 'bulk-delete.component.html',\n})\nexport class BulkDeleteComponent {\n    @Input() cipherIds: string[] = [];\n    @Input() permanent: boolean = false;\n    @Input() organization: Organization;\n    @Output() onDeleted = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private apiService: ApiService) { }\n\n    async submit() {\n        if (!this.organization || !this.organization.canEditAnyCollection) {\n            await this.deleteCiphers();\n        } else {\n            await this.deleteCiphersAdmin();\n        }\n\n        await this.formPromise;\n\n        this.onDeleted.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t(this.permanent ? 'permanentlyDeletedItems'\n            : 'deletedItems'));\n    }\n\n    private async deleteCiphers() {\n        if (this.permanent) {\n            this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n        } else {\n            this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n        }\n    }\n\n    private async deleteCiphersAdmin() {\n        const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n        if (this.permanent) {\n            this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n        } else {\n            this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteSelectedTitle\"> {{(permanent ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> {{(permanent ? 'permanentlyDeleteSelectedItemsDesc' : 'deleteSelectedItemsDesc') | i18n: cipherIds.length}} </div> <div class=\"modal-footer\"> <button appAutoFocus type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(permanent ? 'permanentlyDelete' : 'delete') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","export class CipherBulkDeleteRequest {\n    ids: string[];\n    organizationId: string;\n\n    constructor(ids: string[], organizationId?: string) {\n        this.ids = ids == null ? [] : ids;\n        this.organizationId = organizationId;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\n@Component({\n    selector: 'app-vault-bulk-move',\n    templateUrl: 'bulk-move.component.html',\n})\nexport class BulkMoveComponent implements OnInit {\n    @Input() cipherIds: string[] = [];\n    @Output() onMoved = new EventEmitter();\n\n    folderId: string = null;\n    folders: FolderView[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private folderService: FolderService) { }\n\n    async ngOnInit() {\n        this.folders = await this.folderService.getAllDecrypted();\n        this.folderId = this.folders[0].id;\n    }\n\n    async submit() {\n        this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n        await this.formPromise;\n        this.onMoved.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t('movedItems'));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"moveSelectedTitle\"> {{'moveSelected' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'moveSelectedItemsDesc' | i18n: cipherIds.length}}</p> <div class=\"form-group\"> <label for=\"folder\">{{'folder' | i18n}}</label> <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\"> <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option> </select> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-vault-bulk-restore',\n    templateUrl: 'bulk-restore.component.html',\n})\nexport class BulkRestoreComponent {\n    @Input() cipherIds: string[] = [];\n    @Output() onRestored = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService) { }\n\n    async submit() {\n        this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n        await this.formPromise;\n        this.onRestored.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t('restoredItems'));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"restoreSelectedTitle\"> {{'restoreSelected' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> {{'restoreSelectedItemsDesc' | i18n: cipherIds.length}} </div> <div class=\"modal-footer\"> <button appAutoFocus type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'restore' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-vault-bulk-share',\n    templateUrl: 'bulk-share.component.html',\n})\nexport class BulkShareComponent implements OnInit {\n    @Input() ciphers: CipherView[] = [];\n    @Input() organizationId: string;\n    @Output() onShared = new EventEmitter();\n\n    nonShareableCount = 0;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n    shareableCiphers: CipherView[] = [];\n    formPromise: Promise<any>;\n\n    private writeableCollections: CollectionView[] = [];\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private collectionService: CollectionService,\n        private userService: UserService) { }\n\n    async ngOnInit() {\n        this.shareableCiphers = this.ciphers.filter(c => !c.hasOldAttachments && c.organizationId == null);\n        this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.filter(c => !c.readOnly);\n        this.organizations = await this.userService.getAllOrganizations();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    filterCollections() {\n        this.selectAll(false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit() {\n        const checkedCollectionIds = this.collections.filter(c => (c as any).checked).map(c => c.id);\n        try {\n            this.formPromise = this.cipherService.shareManyWithServer(this.shareableCiphers, this.organizationId,\n                checkedCollectionIds);\n            await this.formPromise;\n            this.onShared.emit();\n            const orgName = this.organizations.find(o => o.id === this.organizationId)?.name ?? this.i18nService.t('organization');\n            this.toasterService.popAsync('success', null, this.i18nService.t('movedItemsToOrg', orgName));\n        } catch { }\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach(c => this.check(c, select));\n    }\n\n    get canSave() {\n        if (this.shareableCiphers != null && this.shareableCiphers.length > 0 && this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\"> {{'moveSelectedToOrg' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'moveManyToOrgDesc' | i18n}}</p> <p>{{'moveSelectedItemsCountDesc' | i18n: this.ciphers.length : shareableCiphers.length : nonShareableCount}} </p> <div class=\"form-group\"> <label for=\"organization\">{{'organization' | i18n}}</label> <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\" (change)=\"filterCollections()\"> <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option> </select> </div> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\" [ngClass]=\"{loading:form.loading}\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { SendAccess } from 'jslib-common/models/domain/sendAccess';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { SendAccessView } from 'jslib-common/models/view/sendAccessView';\n\nimport { SendType } from 'jslib-common/enums/sendType';\nimport { SendAccessRequest } from 'jslib-common/models/request/sendAccessRequest';\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\nimport { SendAccessResponse } from 'jslib-common/models/response/sendAccessResponse';\n\n@Component({\n    selector: 'app-send-access',\n    templateUrl: 'access.component.html',\n})\nexport class AccessComponent implements OnInit {\n    send: SendAccessView;\n    sendType = SendType;\n    downloading = false;\n    loading = true;\n    passwordRequired = false;\n    formPromise: Promise<SendAccessResponse>;\n    password: string;\n    showText = false;\n    unavailable = false;\n    error = false;\n    hideEmail = false;\n\n    private id: string;\n    private key: string;\n    private decKey: SymmetricCryptoKey;\n    private accessRequest: SendAccessRequest;\n\n    constructor(private i18nService: I18nService, private cryptoFunctionService: CryptoFunctionService,\n        private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private route: ActivatedRoute, private cryptoService: CryptoService) {\n    }\n\n    get sendText() {\n        if (this.send == null || this.send.text == null) {\n            return null;\n        }\n        return this.showText ? this.send.text.text : this.send.text.maskedText;\n    }\n\n    get expirationDate() {\n        if (this.send == null || this.send.expirationDate == null) {\n            return null;\n        }\n        return this.send.expirationDate;\n    }\n\n    get creatorIdentifier() {\n        if (this.send == null || this.send.creatorIdentifier == null) {\n            return null;\n        }\n        return this.send.creatorIdentifier;\n    }\n\n    ngOnInit() {\n        this.route.params.subscribe(async params => {\n            this.id = params.sendId;\n            this.key = params.key;\n            if (this.key == null || this.id == null) {\n                return;\n            }\n            await this.load();\n        });\n    }\n\n    async download() {\n        if (this.send == null || this.decKey == null) {\n            return;\n        }\n\n        if (this.downloading) {\n            return;\n        }\n\n\n        const downloadData = await this.apiService.getSendFileDownloadData(this.send, this.accessRequest);\n\n        if (Utils.isNullOrWhitespace(downloadData.url)) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('missingSendFile'));\n            return;\n        }\n\n        this.downloading = true;\n        const response = await fetch(new Request(downloadData.url, { cache: 'no-store' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            this.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, this.decKey);\n            this.platformUtilsService.saveFile(window, decBuf, null, this.send.file.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        this.downloading = false;\n    }\n\n    copyText() {\n        this.platformUtilsService.copyToClipboard(this.send.text.text);\n        this.platformUtilsService.showToast('success', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('sendTypeText')));\n    }\n\n    toggleText() {\n        this.showText = !this.showText;\n    }\n\n    async load() {\n        this.unavailable = false;\n        this.error = false;\n        this.hideEmail = false;\n        const keyArray = Utils.fromUrlB64ToArray(this.key);\n        this.accessRequest = new SendAccessRequest();\n        if (this.password != null) {\n            const passwordHash = await this.cryptoFunctionService.pbkdf2(this.password, keyArray, 'sha256', 100000);\n            this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n        }\n        try {\n            let sendResponse: SendAccessResponse = null;\n            if (this.loading) {\n                sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n            } else {\n                this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n                sendResponse = await this.formPromise;\n            }\n            this.passwordRequired = false;\n            const sendAccess = new SendAccess(sendResponse);\n            this.decKey = await this.cryptoService.makeSendKey(keyArray);\n            this.send = await sendAccess.decrypt(this.decKey);\n            this.showText = this.send.text != null ? !this.send.text.hidden : true;\n        } catch (e) {\n            if (e instanceof ErrorResponse) {\n                if (e.statusCode === 401) {\n                    this.passwordRequired = true;\n                } else if (e.statusCode === 404) {\n                    this.unavailable = true;\n                } else {\n                    this.error = true;\n                }\n            }\n        }\n        this.loading = false;\n        this.hideEmail = this.creatorIdentifier == null && !this.passwordRequired && !this.loading && !this.unavailable;\n    }\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-center mt-5\"> <div class=\"col-12\"> <p class=\"lead text-center mb-4\">Bitwarden Send</p> </div> <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\"> <p>{{'sendCreatorIdentifier' | i18n: creatorIdentifier }}</p> </div> <div class=\"col-8\" *ngIf=\"hideEmail\"> <app-callout type=\"warning\" title=\"{{'warning' | i18n}}\"> {{'viewSendHiddenEmailWarning' | i18n }} <a href=\"https://bitwarden.com/help/article/receive-send/\" target=\"_blank\">{{'learnMore' | i18n}}</a>. </app-callout> </div> </div> <div class=\"row justify-content-center\"> <div class=\"col-5\"> <div class=\"card d-block\"> <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\"> <p>{{'sendProtectedPassword' | i18n}}</p> <p>{{'sendProtectedPasswordDontKnow' | i18n}}</p> <div class=\"form-group\"> <label for=\"password\">{{'password' | i18n}}</label> <input id=\"password\" type=\"password\" name=\"Password\" class=\"text-monospace form-control\" [(ngModel)]=\"password\" required appInputVerbatim appAutofocus> </div> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"card-body\" *ngIf=\"!loading && unavailable\"> {{'sendAccessUnavailable' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loading && error\"> {{'unexpectedError' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\"> <p class=\"text-center\"><b>{{send.name}}</b></p> <hr> <ng-container *ngIf=\"send.type === sendType.Text\"> <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{'sendHiddenByDefault' | i18n}}</app-callout> <div class=\"form-group\"> <textarea id=\"text\" rows=\"8\" name=\"Text\" [(ngModel)]=\"sendText\" class=\"form-control\" readonly=\"readonly\"></textarea> </div> <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"toggleText()\" *ngIf=\"send.text.hidden\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showText, 'fa-eye-slash': showText}\"></i> {{'toggleVisibility' | i18n}} </button> <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\"> <i class=\"fa fa-copy\" aria-hidden=\"true\"></i> {{'copyValue' | i18n}} </button> </ng-container> <ng-container *ngIf=\"send.type === sendType.File\"> <p>{{send.file.fileName}}</p> <button class=\"btn btn-primary btn-block\" type=\"button\" (click)=\"download()\" *ngIf=\"!downloading\"> <i class=\"fa fa-download\" aria-hidden=\"true\"></i> {{'downloadFile' | i18n}} ({{send.file.sizeName}})</button> <button class=\"btn btn-primary btn-block\" type=\"button\" *ngIf=\"downloading\" disabled=\"true\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </ng-container> <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">Expires: {{expirationDate | date: 'medium'}}</p> </div> </div> </div> <div class=\"col-12 text-center mt-5 text-muted\"> <p class=\"mb-0\">{{'sendAccessTaglineProductDesc' | i18n}}<br> {{'sendAccessTaglineLearnMore' | i18n}} <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\">Bitwarden Send</a> {{'sendAccessTaglineOr' | i18n}} <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{'sendAccessTaglineSignUp' | i18n}}</a> {{'sendAccessTaglineTryToday' | i18n}} </p> </div> </div> </form> ","import { DatePipe } from '@angular/common';\n\nimport { Component } from '@angular/core';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib-angular/components/send/add-edit.component';\n\n@Component({\n    selector: 'app-send-add-edit',\n    templateUrl: 'add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    constructor(i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        environmentService: EnvironmentService, datePipe: DatePipe,\n        sendService: SendService, userService: UserService,\n        messagingService: MessagingService, policyService: PolicyService) {\n        super(i18nService, platformUtilsService, environmentService, datePipe, sendService, userService,\n            messagingService, policyService);\n    }\n\n    async copyLinkToClipboard(link: string): Promise<void | boolean> {\n        // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n        // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n        return new Promise(resolve => {\n            window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n        });\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"send\"> <app-callout *ngIf=\"disableSend\"> <span>{{'sendDisabledWarning' | i18n}}</span> </app-callout> <app-callout *ngIf=\"!disableSend && disableHideEmail\"> <span>{{'sendOptionsPolicyInEffect' | i18n}}</span> <ul class=\"mb-0\"> <li>{{'sendDisableHideEmailInEffect' | i18n}}</li> </ul> </app-callout> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"send.name\" required [readOnly]=\"disableSend\"> <small class=\"form-text text-muted\">{{'sendNameDesc' | i18n}}</small> </div> </div> <div class=\"row\" *ngIf=\"!editMode\"> <div class=\"col-6 form-group\"> <label>{{'whatTypeOfSend' | i18n}}</label> <div class=\"form-check\" *ngFor=\"let o of typeOptions\"> <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"send.type\" name=\"Type_{{o.value}}\" id=\"type_{{o.value}}\" [value]=\"o.value\" (change)=\"typeChanged(o)\" [checked]=\"send.type === o.value\"> <label class=\"form-check-label\" for=\"type_{{o.value}}\"> {{o.name}} </label> </div> </div> </div> <ng-container *ngIf=\"send.type === sendType.Text\"> <div class=\"form-group\"> <label for=\"text\">{{'sendTypeText' | i18n}}</label> <textarea id=\"text\" name=\"Text.Text\" rows=\"6\" [(ngModel)]=\"send.text.text\" class=\"form-control\" [readOnly]=\"disableSend\"></textarea> <small class=\"form-text text-muted\">{{'sendTextDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.text.hidden\" id=\"text-hidden\" name=\"Text.Hidden\" [disabled]=\"disableSend\"> <label class=\"form-check-label\" for=\"text-hidden\">{{'textHiddenByDefault' | i18n}}</label> </div> </div> </ng-container> <ng-container *ngIf=\"send.type === sendType.File\"> <div class=\"form-group\"> <div *ngIf=\"editMode\"> <strong class=\"d-block\">{{'file' | i18n}}</strong> {{send.file.fileName}} ({{send.file.sizeName}}) </div> <div *ngIf=\"!editMode\"> <label for=\"file\">{{'file' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required [disabled]=\"disableSend\"> <small class=\"form-text text-muted\">{{'sendFileDesc' | i18n}} {{'maxFileSize' | i18n}}</small> </div> </div> </ng-container> <h3 class=\"mt-5\">{{'share' | i18n}}</h3> <div class=\"form-group\" *ngIf=\"link\"> <label for=\"link\">{{'sendLinkLabel' | i18n}}</label> <input type=\"text\" readonly=\"readonly\" id=\"link\" name=\"Link\" [(ngModel)]=\"link\" class=\"form-control\"> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"copyLink\" id=\"copy-link\" name=\"CopyLink\"> <label class=\"form-check-label\" for=\"copy-link\">{{'copySendLinkOnSave' | i18n}}</label> </div> </div> <div id=\"options-header\" class=\"section-header d-flex flex-row align-items-center mt-5\" (click)=\"toggleOptions()\"> <h3 class=\"mb-0 mr-2\">{{'options' | i18n}}</h3> <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\"> <i class=\"fa\" aria-hidden=\"true\" [ngClass]=\"{'fa-chevron-down': !showOptions, 'fa-chevron-up': showOptions}\"></i> </a> </div> <div id=\"options\" [hidden]=\"!showOptions\"> <app-send-efflux-dates [initialDeletionDate]=\"send.deletionDate\" [initialExpirationDate]=\"send.expirationDate\" [editMode]=\"editMode\" [disabled]=\"disableSend\" (datesChanged)=\"setDates($event)\"> </app-send-efflux-dates> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"maxAccessCount\">{{'maxAccessCount' | i18n}}</label> <input id=\"maxAccessCount\" class=\"form-control\" type=\"number\" name=\"MaxAccessCount\" [(ngModel)]=\"send.maxAccessCount\" min=\"1\" [readOnly]=\"disableSend\"> <div class=\"form-text text-muted small\">{{'maxAccessCountDesc' | i18n}}</div> </div> <div class=\"col-6 form-group\" *ngIf=\"editMode\"> <label for=\"accessCount\">{{'currentAccessCount' | i18n}}</label> <input id=\"accessCount\" class=\"form-control\" type=\"text\" name=\"AccessCount\" readonly=\"readonly\" [(ngModel)]=\"send.accessCount\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"password\" *ngIf=\"!hasPassword\">{{'password' | i18n}}</label> <label for=\"password\" *ngIf=\"hasPassword\">{{'newPassword' | i18n}}</label> <div class=\"input-group\"> <input id=\"password\" class=\"form-control text-monospace\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Password\" [(ngModel)]=\"password\" [readOnly]=\"disableSend\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePasswordVisible()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-text text-muted small\">{{'sendPasswordDesc' | i18n}}</div> </div> </div> <div class=\"form-group\"> <label for=\"notes\">{{'notes' | i18n}}</label> <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"send.notes\" class=\"form-control\" [readOnly]=\"disableSend\"></textarea> <div class=\"form-text text-muted small\">{{'sendNotesDesc' | i18n}}</div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.hideEmail\" id=\"hideEmail\" name=\"HideEmail\" [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"> <label class=\"form-check-label\" for=\"hideEmail\"> {{'hideEmail' | i18n}} </label> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.disabled\" id=\"disabled\" name=\"Disabled\" [disabled]=\"disableSend\"> <label class=\"form-check-label\" for=\"disabled\">{{'disableThisSend' | i18n}}</label> </div> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [ngClass]=\"{loading:form.loading}\" [disabled]=\"form.loading || disableSend\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\" *ngIf=\"send\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { SendType } from '../../enums/sendType';\nimport { Utils } from '../../misc/utils';\n\nimport { Send } from '../domain/send';\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\n\nimport { SendFileView } from './sendFileView';\nimport { SendTextView } from './sendTextView';\nimport { View } from './view';\n\nexport class SendView implements View {\n    id: string = null;\n    accessId: string = null;\n    name: string = null;\n    notes: string = null;\n    key: ArrayBuffer;\n    cryptoKey: SymmetricCryptoKey;\n    type: SendType = null;\n    text = new SendTextView();\n    file = new SendFileView();\n    maxAccessCount?: number = null;\n    accessCount: number = 0;\n    revisionDate: Date = null;\n    deletionDate: Date = null;\n    expirationDate: Date = null;\n    password: string = null;\n    disabled: boolean = false;\n    hideEmail: boolean = false;\n\n    constructor(s?: Send) {\n        if (!s) {\n            return;\n        }\n\n        this.id = s.id;\n        this.accessId = s.accessId;\n        this.type = s.type;\n        this.maxAccessCount = s.maxAccessCount;\n        this.accessCount = s.accessCount;\n        this.revisionDate = s.revisionDate;\n        this.deletionDate = s.deletionDate;\n        this.expirationDate = s.expirationDate;\n        this.disabled = s.disabled;\n        this.password = s.password;\n        this.hideEmail = s.hideEmail;\n    }\n\n    get urlB64Key(): string {\n        return Utils.fromBufferToUrlB64(this.key);\n    }\n\n    get maxAccessCountReached(): boolean {\n        if (this.maxAccessCount == null) {\n            return false;\n        }\n        return this.accessCount >= this.maxAccessCount;\n    }\n\n    get expired(): boolean {\n        if (this.expirationDate == null) {\n            return false;\n        }\n        return this.expirationDate <= new Date();\n    }\n\n    get pendingDelete(): boolean {\n        return this.deletionDate <= new Date();\n    }\n}\n","import { DatePipe } from '@angular/common';\n\nimport { Component } from '@angular/core';\n\nimport { ControlContainer, NgForm } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from 'jslib-angular/components/send/efflux-dates.component';\n\n@Component({\n    selector: 'app-send-efflux-dates',\n    templateUrl: 'efflux-dates.component.html',\n    viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n    constructor(protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected datePipe: DatePipe) {\n        super(i18nService, platformUtilsService, datePipe);\n    }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\"> <div class=\"col-6 form-group\"> <label for=\"deletionDate\">{{'deletionDate' | i18n}}</label> <ng-template #deletionDateCustom> <ng-container [ngSwitch]=\"browserPath\"> <ng-container *ngSwitchCase=\"'firefox'\"> <div class=\"d-flex justify-content-around\"> <input id=\"deletionDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"DeletionDateFallback\" formControlName=\"fallbackDeletionDate\" required placeholder=\"MM/DD/YYYY\" [readOnly]=\"disableSend\" data-date-format=\"mm/dd/yyyy\"> <input id=\"deletionTimeCustomFallback\" class=\"form-control mt-1 ml-1\" type=\"time\" name=\"DeletionTimeDate\" formControlName=\"fallbackDeletionTime\" required placeholder=\"HH:MM AM/PM\" [readOnly]=\"disableSend\"> </div> </ng-container> <ng-container *ngSwitchCase=\"'safari'\"> <div class=\"d-flex justify-content-around\"> <input id=\"deletionDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"DeletionDateFallback\" formControlName=\"fallbackDeletionDate\" required placeholder=\"MM/DD/YYYY\" [readOnly]=\"disableSend\" data-date-format=\"mm/dd/yyyy\"> <select id=\"deletionTimeCustomFallback\" class=\"form-control mt-1 ml-1\" [required]=\"!editMode\" formControlName=\"fallbackDeletionTime\" name=\"SafariDeletionTime\"> <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">{{o.twelveHour}}</option> </select> </div> </ng-container> <ng-container *ngSwitchDefault> <input id=\"deletionDateCustom\" class=\"form-control mt-1\" type=\"datetime-local\" name=\"DeletionDate\" formControlName=\"defaultDeletionDateTime\" required placeholder=\"MM/DD/YYYY HH:MM AM/PM\" [readOnly]=\"disabled\"> </ng-container> </ng-container> </ng-template> <div *ngIf=\"!editMode\"> <select id=\"deletionDate\" name=\"SelectedDeletionDatePreset\" formControlName=\"selectedDeletionDatePreset\" class=\"form-control\" required> <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\"> <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container> </ng-container> </div> <div *ngIf=\"editMode\"> <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container> </div> <div class=\"form-text text-muted small\">{{'deletionDateDesc' | i18n}}</div> </div> <div class=\"col-6 form-group\"> <div class=\"d-flex\"> <label for=\"expirationDate\">{{'expirationDate' | i18n}}</label> <a href=\"#\" appStopClick (click)=\"clearExpiration()\" class=\"ml-auto\" *ngIf=\"editMode && !disabled\"> {{'clear' | i18n}} </a> </div> <ng-template #expirationDateCustom> <ng-container [ngSwitch]=\"browserPath\"> <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\"> <input id=\"expirationDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"ExpirationDateFallback\" formControlName=\"fallbackExpirationDate\" [required]=\"!editMode\" placeholder=\"MM/DD/YYYY\" [readOnly]=\"disabled\" data-date-format=\"mm/dd/yyyy\"> <input id=\"expirationTimeCustomFallback\" class=\"form-control mt-1 ml-1\" type=\"time\" name=\"ExpirationTimeFallback\" formControlName=\"fallbackExpirationTime\" [required]=\"!editMode\" placeholder=\"HH:MM AM/PM\" [readOnly]=\"disabled\"> </div> <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\"> <input id=\"expirationDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"ExpirationDateFallback\" formControlName=\"fallbackExpirationDate\" [required]=\"!editMode\" placeholder=\"MM/DD/YYYY\" [readOnly]=\"disabled\" data-date-format=\"mm/dd/yyyy\"> <select id=\"expirationTimeCustomFallback\" class=\"form-control mt-1 ml-1\" [required]=\"!editMode\" formControlName=\"fallbackExpirationTime\" name=\"SafariExpirationTime\"> <option *ngFor=\"let o of safariExpirationTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">{{o.twelveHour}}</option> </select> </div> <ng-container *ngSwitchDefault> <input id=\"expirationDateCustom\" class=\"form-control mt-1\" type=\"datetime-local\" name=\"ExpirationDate\" formControlName=\"defaultExpirationDateTime\" placeholder=\"MM/DD/YYYY HH:MM AM/PM\" [readOnly]=\"disabled\"> </ng-container> </ng-container> </ng-template> <div *ngIf=\"!editMode\"> <select id=\"expirationDate\" name=\"SelectedExpirationDatePreset\" formControlName=\"selectedExpirationDatePreset\" class=\"form-control\" required> <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\"> <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container> </ng-container> </div> <div *ngIf=\"editMode\"> <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container> </div> <div class=\"form-text text-muted small\">{{'expirationDateDesc' | i18n}}</div> </div> </div> ","import {\n    Component,\n    NgZone,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { SendComponent as BaseSendComponent } from 'jslib-angular/components/send/send.component';\n\nimport { AddEditComponent } from './add-edit.component';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nconst BroadcasterSubscriptionId = 'SendComponent';\n\n@Component({\n    selector: 'app-send',\n    templateUrl: 'send.component.html',\n})\nexport class SendComponent extends BaseSendComponent {\n    @ViewChild('sendAddEdit', { read: ViewContainerRef, static: true }) sendAddEditModalRef: ViewContainerRef;\n\n    constructor(sendService: SendService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, environmentService: EnvironmentService,\n        ngZone: NgZone, searchService: SearchService, policyService: PolicyService, userService: UserService,\n        private modalService: ModalService, private broadcasterService: BroadcasterService) {\n        super(sendService, i18nService, platformUtilsService, environmentService, ngZone, searchService,\n            policyService, userService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        await this.load();\n\n        // Broadcaster subscription - load if sync completes in the background\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'syncCompleted':\n                        if (message.successfully) {\n                            await this.load();\n                        }\n                        break;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async addSend() {\n        if (this.disableSend) {\n            return;\n        }\n\n        const component = await this.editSend(null);\n        component.type = this.type;\n    }\n\n    async editSend(send: SendView) {\n        const [modal, childComponent] = await this.modalService.openViewRef(AddEditComponent, this.sendAddEditModalRef, comp => {\n            comp.sendId = send == null ? null : send.id;\n            comp.onSavedSend.subscribe(async (s: SendView) => {\n                modal.close();\n                await this.load();\n            });\n            comp.onDeletedSend.subscribe(async (s: SendView) => {\n                modal.close();\n                await this.load();\n            });\n        });\n\n        return childComponent;\n    }\n}\n","<div class=\"container page-content\"> <app-callout type=\"warning\" title=\"{{'sendDisabled' | i18n}}\" *ngIf=\"disableSend\"> <span>{{'sendDisabledWarning' | i18n}}</span> </app-callout> <div class=\"row\"> <div class=\"col-3 groupings\"> <div class=\"card vault-filters\"> <div class=\"card-header d-flex\"> {{'filters' | i18n}} </div> <div class=\"card-body\"> <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchSends' | i18n)}}\" id=\"search\" class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\" appAutofocus> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedAll}\"> <a href=\"#\" appStopClick (click)=\"selectAll()\"> <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allSends' | i18n}} </a> </li> </ul> <h3>{{'types' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedType === sendType.Text}\"> <a href=\"#\" appStopClick (click)=\"selectType(sendType.Text)\"> <i class=\"fa-li fa fa-fw fa-file-text-o\"></i>{{'sendTypeText' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === sendType.File}\"> <a href=\"#\" appStopClick (click)=\"selectType(sendType.File)\"> <i class=\"fa-li fa fa-fw fa-file-o\"></i>{{'sendTypeFile' | i18n}} </a> </li> </ul> </div> </div> </div> <div class=\"col-9\"> <div class=\"page-header d-flex\"> <h1> {{'send' | i18n}} <small #actionSpinner [appApiAction]=\"actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addSend()\" [disabled]=\"disableSend\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'createSend' | i18n}} </button> </div> </div> <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\"> <tbody> <tr *ngFor=\"let s of filteredSends\"> <td class=\"table-list-icon\"> <div class=\"icon\" aria-hidden=\"true\"> <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"s.type == sendType.File\"></i> <i class=\"fa fa-fw fa-lg fa-file-text-o\" *ngIf=\"s.type == sendType.Text\"></i> </div> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{s.name}}</a> <ng-container *ngIf=\"s.disabled\"> <i class=\"fa fa-warning\" appStopProp title=\"{{'disabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'disabled' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.password\"> <i class=\"fa fa-key\" appStopProp title=\"{{'password' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'password' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.maxAccessCountReached\"> <i class=\"fa fa-ban\" appStopProp title=\"{{'maxAccessCountReached' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'maxAccessCountReached' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.expired\"> <i class=\"fa fa-clock-o\" appStopProp title=\"{{'expired' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'expired' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.pendingDelete\"> <i class=\"fa fa-trash\" appStopProp title=\"{{'pendingDeletion' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'pendingDeletion' | i18n}}</span> </ng-container> <br> <small appStopProp>{{s.deletionDate | date:'medium'}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(s)\"> <i class=\"fa fa-fw fa-copy\" aria-hidden=\"true\"></i> {{'copySendLink' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'removePassword' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(s)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\"> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p>{{'noSendsInList' | i18n}}</p> <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\"> <i class=\"fa fa-plus fa-fw\"></i>{{'createSend' | i18n}}</button> </ng-container> </div> </div> </div> </div> <ng-template #sendAddEdit></ng-template> ","import {\n    Component,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ApiKeyComponent } from './api-key.component';\nimport { DeauthorizeSessionsComponent } from './deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './delete-account.component';\nimport { PurgeVaultComponent } from './purge-vault.component';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\n@Component({\n    selector: 'app-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deauthorizeSessionsTemplate', { read: ViewContainerRef, static: true }) deauthModalRef: ViewContainerRef;\n    @ViewChild('purgeVaultTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\n    @ViewChild('deleteAccountTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n    @ViewChild('viewUserApiKeyTemplate', { read: ViewContainerRef, static: true }) viewUserApiKeyModalRef: ViewContainerRef;\n    @ViewChild('rotateUserApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateUserApiKeyModalRef: ViewContainerRef;\n\n    constructor(private modalService: ModalService, private apiService: ApiService,\n        private userService: UserService) { }\n\n    async deauthorizeSessions() {\n        await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n    }\n\n    async purgeVault() {\n        await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n    }\n\n    async deleteAccount() {\n        await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n    }\n\n    async viewUserApiKey() {\n        const entityId = await this.userService.getUserId();\n        await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, comp => {\n            comp.keyType = 'user';\n            comp.entityId = entityId;\n            comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n            comp.scope = 'api';\n            comp.grantType = 'client_credentials';\n            comp.apiKeyTitle = 'apiKey';\n            comp.apiKeyWarning = 'userApiKeyWarning';\n            comp.apiKeyDescription = 'userApiKeyDesc';\n        });\n    }\n\n    async rotateUserApiKey() {\n        const entityId = await this.userService.getUserId();\n        await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, comp => {\n            comp.keyType = 'user';\n            comp.isRotation = true;\n            comp.entityId = entityId;\n            comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n            comp.scope = 'api';\n            comp.grantType = 'client_credentials';\n            comp.apiKeyTitle = 'apiKey';\n            comp.apiKeyWarning = 'userApiKeyWarning';\n            comp.apiKeyDescription = 'apiKeyRotateDesc';\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myAccount' | i18n}}</h1> </div> <app-profile></app-profile> <div class=\"secondary-header\"> <h1>{{'changeEmail' | i18n}}</h1> </div> <app-change-email></app-change-email> <div class=\"secondary-header\"> <h1>{{'changeMasterPassword' | i18n}}</h1> </div> <app-change-password></app-change-password> <div class=\"secondary-header\"> <h1>{{'encKeySettings' | i18n}}</h1> </div> <app-change-kdf></app-change-kdf> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'apiKey' | i18n}}</h1> </div> <p> {{'userApiKeyDesc' | i18n}} </p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewUserApiKey()\">{{'viewApiKey' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateUserApiKey()\">{{'rotateApiKey' | i18n}}</button> <div class=\"secondary-header text-danger border-0 mb-0\"> <h1>{{'dangerZone' | i18n}}</h1> </div> <div class=\"card border-danger\"> <div class=\"card-body\"> <p>{{'dangerZoneDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deauthorizeSessions()\">{{'deauthorizeSessions' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteAccount()\">{{'deleteAccount' | i18n}}</button> </div> </div> <ng-template #deauthorizeSessionsTemplate></ng-template> <ng-template #purgeVaultTemplate></ng-template> <ng-template #deleteAccountTemplate></ng-template> <ng-template #viewUserApiKeyTemplate></ng-template> <ng-template #rotateUserApiKeyTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-deauthorize-sessions',\n    templateUrl: 'deauthorize-sessions.component.html',\n})\nexport class DeauthorizeSessionsComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postSecurityStamp(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('sessionsDeauthorized'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deAuthTitle\">{{'deauthorizeSessions' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deauthorizeSessionsDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deauthorizeSessionsWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deauthorizeSessions' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-account',\n    templateUrl: 'delete-account.component.html',\n})\nexport class DeleteAccountComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteAccount(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{'deleteAccount' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deleteAccountDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deleteAccount' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UpdateProfileRequest } from 'jslib-common/models/request/updateProfileRequest';\n\nimport { ProfileResponse } from 'jslib-common/models/response/profileResponse';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: 'profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n    loading = true;\n    profile: ProfileResponse;\n    fingerprint: string;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userService: UserService,\n        private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        this.profile = await this.apiService.getProfile();\n        this.loading = false;\n        const fingerprint = await this.cryptoService.getFingerprint(await this.userService.getUserId());\n        if (fingerprint != null) {\n            this.fingerprint = fingerprint.join('-');\n        }\n    }\n\n    async submit() {\n        try {\n            const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n            this.formPromise = this.apiService.putProfile(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('accountUpdated'));\n        } catch { }\n    }\n}\n","<div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"profile && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\"> </div> <div class=\"form-group\"> <label for=\"email\">{{'email' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"profile.email\" readonly=\"readonly\"> </div> <div class=\"form-group\"> <label for=\"masterPasswordHint\">{{'masterPassHintLabel' | i18n}}</label> <input id=\"masterPasswordHint\" class=\"form-control\" type=\"text\" name=\"MasterPasswordHint\" [(ngModel)]=\"profile.masterPasswordHint\"> </div> </div> <div class=\"col-6\"> <div class=\"mb-3\"> <app-avatar data=\"{{profile | userName}}\" [email]=\"profile.email\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> <hr> <p *ngIf=\"fingerprint\"> {{'yourAccountsFingerprint' | i18n}}: <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i></a><br> <code>{{fingerprint}}</code> </p> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EmailRequest } from 'jslib-common/models/request/emailRequest';\nimport { EmailTokenRequest } from 'jslib-common/models/request/emailTokenRequest';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\n@Component({\n    selector: 'app-change-email',\n    templateUrl: 'change-email.component.html',\n})\nexport class ChangeEmailComponent implements OnInit {\n    masterPassword: string;\n    newEmail: string;\n    token: string;\n    tokenSent = false;\n    showTwoFactorEmailWarning = false;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService) { }\n\n    async ngOnInit() {\n        const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n        this.showTwoFactorEmailWarning = twoFactorProviders.data.some(p => p.type === TwoFactorProviderType.Email &&\n            p.enabled);\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        this.newEmail = this.newEmail.trim().toLowerCase();\n        if (!this.tokenSent) {\n            const request = new EmailTokenRequest();\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            try {\n                this.formPromise = this.apiService.postEmailToken(request);\n                await this.formPromise;\n                this.tokenSent = true;\n            } catch { }\n        } else {\n            const request = new EmailRequest();\n            request.token = this.token;\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            const kdf = await this.userService.getKdf();\n            const kdfIterations = await this.userService.getKdfIterations();\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.newEmail, kdf, kdfIterations);\n            request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n            const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n            request.key = newEncKey[1].encryptedString;\n            try {\n                this.formPromise = this.apiService.postEmail(request);\n                await this.formPromise;\n                this.reset();\n                this.toasterService.popAsync('success', this.i18nService.t('emailChanged'),\n                    this.i18nService.t('logBackIn'));\n                this.messagingService.send('logout');\n            } catch { }\n        }\n    }\n\n    reset() {\n        this.token = this.newEmail = this.masterPassword = null;\n        this.tokenSent = false;\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\"> {{'changeEmailTwoFactorWarning' | i18n}} </app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required [readonly]=\"tokenSent\" appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"newEmail\">{{'newEmail' | i18n}}</label> <input id=\"newEmail\" class=\"form-control\" type=\"text\" name=\"NewEmail\" [(ngModel)]=\"newEmail\" required [readonly]=\"tokenSent\" inputmode=\"email\" appInputVerbatim=\"false\"> </div> </div> </div> <ng-container *ngIf=\"tokenSent\"> <hr> <p>{{'changeEmailDesc' | i18n : newEmail}}</p> <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"token\">{{'code' | i18n}}</label> <input id=\"token\" class=\"form-control\" type=\"text\" name=\"Token\" [(ngModel)]=\"token\" required appInputVerbatim> </div> </div> </div> </ng-container> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!tokenSent\">{{'continue' | i18n}}</span> <span *ngIf=\"tokenSent\">{{'changeEmail' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\"> {{'cancel' | i18n}} </button> </form> ","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class EmailTokenRequest extends PasswordVerificationRequest {\n    newEmail: string;\n    masterPasswordHash: string;\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    ChangePasswordComponent as BaseChangePasswordComponent,\n} from 'jslib-angular/components/change-password.component';\n\nimport { EmergencyAccessStatusType } from 'jslib-common/enums/emergencyAccessStatusType';\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { CipherWithIdRequest } from 'jslib-common/models/request/cipherWithIdRequest';\nimport { EmergencyAccessUpdateRequest } from 'jslib-common/models/request/emergencyAccessUpdateRequest';\nimport { FolderWithIdRequest } from 'jslib-common/models/request/folderWithIdRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { PasswordRequest } from 'jslib-common/models/request/passwordRequest';\nimport { SendWithIdRequest } from 'jslib-common/models/request/sendWithIdRequest';\nimport { UpdateKeyRequest } from 'jslib-common/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-change-password',\n    templateUrl: 'change-password.component.html',\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n    rotateEncKey = false;\n    currentMasterPassword: string;\n\n    constructor(i18nService: I18nService,\n        cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private folderService: FolderService, private cipherService: CipherService,\n        private syncService: SyncService, private apiService: ApiService, private sendService: SendService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async rotateEncKeyClicked() {\n        if (this.rotateEncKey) {\n            const ciphers = await this.cipherService.getAllDecrypted();\n            let hasOldAttachments = false;\n            if (ciphers != null) {\n                for (let i = 0; i < ciphers.length; i++) {\n                    if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n                        hasOldAttachments = true;\n                        break;\n                    }\n                }\n            }\n\n            if (hasOldAttachments) {\n                const learnMore = await this.platformUtilsService.showDialog(\n                    this.i18nService.t('oldAttachmentsNeedFixDesc'), null,\n                    this.i18nService.t('learnMore'), this.i18nService.t('close'), 'warning');\n                if (learnMore) {\n                    this.platformUtilsService.launchUri(\n                        'https://help.bitwarden.com/article/attachments/#fixing-old-attachments');\n                }\n                this.rotateEncKey = false;\n                return;\n            }\n\n            const result = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateEncryptionKeyWarning') + ' ' +\n                this.i18nService.t('updateEncryptionKeyExportWarning') + ' ' +\n                this.i18nService.t('rotateEncKeyConfirmation'), this.i18nService.t('rotateEncKeyTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n            if (!result) {\n                this.rotateEncKey = false;\n            }\n        }\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        await super.submit();\n    }\n\n    async setupSubmitActions() {\n        if (this.currentMasterPassword == null || this.currentMasterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n\n        if (this.rotateEncKey) {\n            await this.syncService.fullSync(true);\n        }\n\n        return super.setupSubmitActions();\n    }\n\n    async performSubmitActions(newMasterPasswordHash: string, newKey: SymmetricCryptoKey,\n        newEncKey: [SymmetricCryptoKey, EncString]) {\n        const request = new PasswordRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.currentMasterPassword, null);\n        request.newMasterPasswordHash = newMasterPasswordHash;\n        request.key = newEncKey[1].encryptedString;\n\n        try {\n            if (this.rotateEncKey) {\n                this.formPromise = this.apiService.postPassword(request).then(() => {\n                    return this.updateKey(newKey, request.newMasterPasswordHash);\n                });\n            } else {\n                this.formPromise = this.apiService.postPassword(request);\n            }\n\n            await this.formPromise;\n\n            this.platformUtilsService.showToast('success', this.i18nService.t('masterPasswordChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n    }\n\n    private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: EncString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = masterPasswordHash;\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        const sends = await this.sendService.getAll();\n        await Promise.all(sends.map(async send => {\n            const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n            send.key = await this.cryptoService.encrypt(cryptoKey, encKey[0]) ?? send.key;\n            request.sends.push(new SendWithIdRequest(send));\n        }));\n\n        await this.apiService.postAccountKey(request);\n\n        await this.updateEmergencyAccesses(encKey[0]);\n\n        await this.updateAllResetPasswordKeys(encKey[0]);\n    }\n\n    private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n        const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n        const allowedStatuses = [\n            EmergencyAccessStatusType.Confirmed,\n            EmergencyAccessStatusType.RecoveryInitiated,\n            EmergencyAccessStatusType.RecoveryApproved,\n        ];\n\n        const filteredAccesses = emergencyAccess.data.filter(d => allowedStatuses.includes(d.status));\n\n        for (const details of filteredAccesses) {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n            const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n            const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n            const updateRequest = new EmergencyAccessUpdateRequest();\n            updateRequest.type = details.type;\n            updateRequest.waitTimeDays = details.waitTimeDays;\n            updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n            await this.apiService.putEmergencyAccess(details.id, updateRequest);\n        }\n    }\n\n    private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey) {\n        const orgs = await this.userService.getAllOrganizations();\n\n        for (const org of orgs) {\n            // If not already enrolled, skip\n            if (!org.resetPasswordEnrolled) {\n                continue;\n            }\n\n            // Retrieve public key\n            const response = await this.apiService.getOrganizationKeys(org.id);\n            const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n            // Re-enroll - encrpyt user's encKey.key with organization public key\n            const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n            // Create/Execute request\n            const request = new OrganizationUserResetPasswordEnrollmentRequest();\n            request.resetPasswordKey = encryptedKey.encryptedString;\n\n            await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n        }\n    }\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"currentMasterPassword\">{{'currentMasterPass' | i18n}}</label> <input id=\"currentMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"currentMasterPassword\" required appInputVerbatim> </div> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"newMasterPassword\">{{'newMasterPass' | i18n}}</label> <input id=\"newMasterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim autocomplete=\"new-password\"> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"></app-password-strength> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'confirmNewMasterPass' | i18n}}</label> <input id=\"masterPasswordRetype\" type=\"password\" name=\"MasterPasswordRetype\" class=\"form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim autocomplete=\"new-password\"> </div> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"rotateEncKey\" name=\"RotateEncKey\" [(ngModel)]=\"rotateEncKey\" (change)=\"rotateEncKeyClicked()\"> <label class=\"form-check-label\" for=\"rotateEncKey\"> {{'rotateAccountEncKey' | i18n}} </label> <a href=\"https://bitwarden.com/help/article/account-encryption-key/#rotate-your-encryption-key\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'changeMasterPassword' | i18n}}</span> </button> </form> ","export enum EmergencyAccessStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n    RecoveryInitiated = 3,\n    RecoveryApproved = 4,\n}\n","import { EmergencyAccessType } from '../../enums/emergencyAccessType';\n\nexport class EmergencyAccessUpdateRequest {\n    type: EmergencyAccessType;\n    waitTimeDays: number;\n    keyEncrypted?: string;\n}\n","import { FolderRequest } from './folderRequest';\n\nimport { Folder } from '../domain/folder';\n\nexport class FolderWithIdRequest extends FolderRequest {\n    id: string;\n\n    constructor(folder: Folder) {\n        super(folder);\n        this.id = folder.id;\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class PasswordRequest extends PasswordVerificationRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nimport { Send } from '../domain/send';\n\nexport class SendRequest {\n    type: SendType;\n    fileLength?: number;\n    name: string;\n    notes: string;\n    key: string;\n    maxAccessCount?: number;\n    expirationDate: string;\n    deletionDate: string;\n    text: SendTextApi;\n    file: SendFileApi;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(send: Send, fileLength?: number) {\n        this.type = send.type;\n        this.fileLength = fileLength;\n        this.name = send.name ? send.name.encryptedString : null;\n        this.notes = send.notes ? send.notes.encryptedString : null;\n        this.maxAccessCount = send.maxAccessCount;\n        this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n        this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n        this.key = send.key != null ? send.key.encryptedString : null;\n        this.password = send.password;\n        this.disabled = send.disabled;\n        this.hideEmail = send.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendTextApi();\n                this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n                this.text.hidden = send.text.hidden;\n                break;\n            case SendType.File:\n                this.file = new SendFileApi();\n                this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\nimport { FolderWithIdRequest } from './folderWithIdRequest';\nimport { SendWithIdRequest } from './sendWithIdRequest';\n\nexport class UpdateKeyRequest {\n    ciphers: CipherWithIdRequest[] = [];\n    folders: FolderWithIdRequest[] = [];\n    sends: SendWithIdRequest[] = [];\n    masterPasswordHash: string;\n    privateKey: string;\n    key: string;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { KdfRequest } from 'jslib-common/models/request/kdfRequest';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\n@Component({\n    selector: 'app-change-kdf',\n    templateUrl: 'change-kdf.component.html',\n})\nexport class ChangeKdfComponent implements OnInit {\n    masterPassword: string;\n    kdfIterations: number;\n    kdf = KdfType.PBKDF2_SHA256;\n    kdfOptions: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService) {\n        this.kdfOptions = [\n            { name: 'PBKDF2 SHA-256', value: KdfType.PBKDF2_SHA256 },\n        ];\n    }\n\n    async ngOnInit() {\n        this.kdf = await this.userService.getKdf();\n        this.kdfIterations = await this.userService.getKdfIterations();\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const request = new KdfRequest();\n        request.kdf = this.kdf;\n        request.kdfIterations = this.kdfIterations;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        const email = await this.userService.getEmail();\n        const newKey = await this.cryptoService.makeKey(this.masterPassword, email, this.kdf, this.kdfIterations);\n        request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n        const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n        request.key = newEncKey[1].encryptedString;\n        try {\n            this.formPromise = this.apiService.postAccountKdf(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('encKeySettingsChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"kdfMasterPassword\">{{'masterPass' | i18n}}</label> <input id=\"kdfMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> </div> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group mb-0\"> <label for=\"kdf\">{{'kdfAlgorithm' | i18n}}</label> <a class=\"ml-auto\" href=\"https://en.wikipedia.org/wiki/Key_derivation_function\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required> <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"col-6\"> <div class=\"form-group mb-0\"> <label for=\"kdfIterations\">{{'kdfIterations' | i18n}}</label> <a class=\"ml-auto\" href=\"https://bitwarden.com/help/article/what-encryption-is-used/#pbkdf2\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> <input id=\"kdfIterations\" type=\"number\" min=\"5000\" max=\"2000000\" name=\"KdfIterations\" class=\"form-control\" [(ngModel)]=\"kdfIterations\" required> </div> </div> <div class=\"col-12\"> <div class=\"form-group\"> <div class=\"small form-text text-muted\"> <p>{{'kdfIterationsDesc' | i18n : (100000 | number)}}</p> <strong>{{'warning' | i18n}}</strong>: {{'kdfIterationsWarning' | i18n : (50000 | number)}} </div> </div> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'changeKdf' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\nimport { OrganizationPlansComponent } from './organization-plans.component';\n\n@Component({\n    selector: 'app-create-organization',\n    templateUrl: 'create-organization.component.html',\n})\nexport class CreateOrganizationComponent implements OnInit {\n    @ViewChild(OrganizationPlansComponent, { static: true }) orgPlansComponent: OrganizationPlansComponent;\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.plan === 'families') {\n                this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n                this.orgPlansComponent.product = ProductType.Families;\n            } else if (qParams.plan === 'teams') {\n                this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n                this.orgPlansComponent.product = ProductType.Teams;\n            } else if (qParams.plan === 'enterprise') {\n                this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n                this.orgPlansComponent.product = ProductType.Enterprise;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'newOrganization' | i18n}}</h1> </div> <p>{{'newOrganizationDesc' | i18n}}</p> <app-organization-plans></app-organization-plans> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { UpdateDomainsRequest } from 'jslib-common/models/request/updateDomainsRequest';\n\n@Component({\n    selector: 'app-domain-rules',\n    templateUrl: 'domain-rules.component.html',\n})\nexport class DomainRulesComponent implements OnInit {\n    loading = true;\n    custom: string[] = [];\n    global: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const response = await this.apiService.getSettingsDomains();\n        this.loading = false;\n        if (response.equivalentDomains != null) {\n            this.custom = response.equivalentDomains.map(d => d.join(', '));\n        }\n        if (response.globalEquivalentDomains != null) {\n            this.global = response.globalEquivalentDomains.map(d => {\n                return {\n                    domains: d.domains.join(', '),\n                    excluded: d.excluded,\n                    key: d.type,\n                };\n            });\n        }\n    }\n\n    toggleExcluded(globalDomain: any) {\n        globalDomain.excluded = !globalDomain.excluded;\n    }\n\n    customize(globalDomain: any) {\n        globalDomain.excluded = true;\n        this.custom.push(globalDomain.domains);\n    }\n\n    remove(index: number) {\n        this.custom.splice(index, 1);\n    }\n\n    add() {\n        this.custom.push('');\n    }\n\n    async submit() {\n        const request = new UpdateDomainsRequest();\n        request.excludedGlobalEquivalentDomains = this.global.filter(d => d.excluded)\n            .map(d => d.key);\n        if (request.excludedGlobalEquivalentDomains.length === 0) {\n            request.excludedGlobalEquivalentDomains = null;\n        }\n        request.equivalentDomains = this.custom.filter(d => d != null && d.trim() !== '')\n            .map(d => d.split(',').map(d2 => d2.trim()));\n        if (request.equivalentDomains.length === 0) {\n            request.equivalentDomains = null;\n        }\n\n        try {\n            this.formPromise = this.apiService.putSettingsDomains(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('domainsUpdated'));\n        } catch { }\n    }\n\n    indexTrackBy(index: number, obj: any): any {\n        return index;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'domainRules' | i18n}}</h1> </div> <p>{{'domainRulesDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <h2>{{'customEqDomains' | i18n}}</h2> <p *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"!loading\"> <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\"> <div class=\"flex-fill\"> <label for=\"customDomain_{{i}}\" class=\"sr-only\">{{'customDomainX' | i18n : (i + 1)}}</label> <textarea class=\"form-control\" name=\"CustomDomain[{{i}}]\" id=\"customDomain_{{i}}\" [(ngModel)]=\"custom[i]\" placeholder=\"{{'ex' | i18n}} google.com, gmail.com\" required></textarea> </div> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"remove(i)\" appA11yTitle=\"{{'remove' | i18n}}\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newCustomDomain' | i18n}} </button> <small class=\"text-muted d-block mb-3\">{{'newCustomDomainDesc' | i18n}}</small> </ng-container> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <h2 class=\"spaced-header\">{{'globalEqDomains' | i18n}}</h2> <p *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\"> <tbody> <tr *ngFor=\"let d of global\"> <td [ngClass]=\"{'table-list-strike': d.excluded}\">{{d.domains}}</td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\" *ngIf=\"!d.excluded\"> <i class=\"fa fa-fw fa-close\" aria-hidden=\"true\"></i> {{'exclude' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\" *ngIf=\"d.excluded\"> <i class=\"fa fa-fw fa-plus\" aria-hidden=\"true\"></i> {{'include' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\"> <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> {{'customize' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { EmergencyAccessType } from 'jslib-common/enums/emergencyAccessType';\nimport { EmergencyAccessInviteRequest } from 'jslib-common/models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessUpdateRequest } from 'jslib-common/models/request/emergencyAccessUpdateRequest';\n\n@Component({\n    selector: 'emergency-access-add-edit',\n    templateUrl: 'emergency-access-add-edit.component.html',\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() emergencyAccessId: string;\n    @Output() onSaved = new EventEmitter();\n    @Output() onDeleted = new EventEmitter();\n\n    loading = true;\n    readOnly: boolean = false;\n    editMode: boolean = false;\n    title: string;\n    email: string;\n    type: EmergencyAccessType = EmergencyAccessType.View;\n\n    formPromise: Promise<any>;\n\n    emergencyAccessType = EmergencyAccessType;\n    waitTimes: { name: string; value: number; }[];\n    waitTime: number;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.emergencyAccessId != null;\n\n        this.waitTimes = [\n            { name: this.i18nService.t('oneDay'), value: 1 },\n            { name: this.i18nService.t('days', '2'), value: 2 },\n            { name: this.i18nService.t('days', '7'), value: 7 },\n            { name: this.i18nService.t('days', '14'), value: 14 },\n            { name: this.i18nService.t('days', '30'), value: 30 },\n            { name: this.i18nService.t('days', '90'), value: 90 },\n        ];\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editEmergencyContact');\n            try {\n                const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n                this.type = emergencyAccess.type;\n                this.waitTime = emergencyAccess.waitTimeDays;\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteEmergencyContact');\n            this.waitTime = this.waitTimes[2].value;\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            if (this.editMode) {\n                const request = new EmergencyAccessUpdateRequest();\n                request.type = this.type;\n                request.waitTimeDays = this.waitTime;\n\n                this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n            } else {\n                const request = new EmergencyAccessInviteRequest();\n                request.email = this.email.trim();\n                request.type = this.type;\n                request.waitTimeDays = this.waitTime;\n\n                this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n            }\n\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSaved.emit();\n        } catch { }\n    }\n\n    async delete() {\n        this.onDeleted.emit();\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> <span class=\"badge badge-primary\" *ngIf=\"readOnly\">{{'premium' | i18n}}</span> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'inviteEmergencyContactDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"email\">{{'email' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required> </div> </ng-container> <h3> {{'userAccess' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/emergency-access/#user-access\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"emergencyTypeView\" [value]=\"emergencyAccessType.View\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"emergencyTypeView\"> {{'view' | i18n}} <small>{{'viewDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"emergencyTypeTakeover\" [value]=\"emergencyAccessType.Takeover\" [(ngModel)]=\"type\" [disabled]=\"readOnly\"> <label class=\"form-check-label\" for=\"emergencyTypeTakeover\"> {{'takeover' | i18n}} <small>{{'takeoverDesc' | i18n}}</small> </label> </div> <div class=\"form-group col-6 mt-4\"> <label for=\"waitTime\">{{'waitTime' | i18n}}</label> <select id=\"waitTime\" name=\"waitTime\" [(ngModel)]=\"waitTime\" class=\"form-control\" [disabled]=\"readOnly\"> <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"text-muted\">{{'waitTimeDesc' | i18n}}</small> </div> </div> <div class=\"modal-footer\"> <button #submitBtn type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loading || submitBtn.loading || readOnly\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\" *ngIf=\"loading || submitBtn.loading\"></i> <span *ngIf=\"!loading && !submitBtn.loading\">{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","export enum EmergencyAccessType\n{\n    View = 0,\n    Takeover = 1,\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib-angular/components/attachments.component';\n\n@Component({\n    selector: 'emergency-access-attachments',\n    templateUrl: '../vault/attachments.component.html',\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = true;\n    canAccessAttachments = true;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, window);\n    }\n\n    protected async init() {\n        // Do nothing since cipher is already decoded\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return false;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'emergency-access-confirm',\n    templateUrl: 'emergency-access-confirm.component.html',\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n    @Input() name: string;\n    @Input() userId: string;\n    @Input() emergencyAccessId: string;\n    @Input() formPromise: Promise<any>;\n    @Output() onConfirmed = new EventEmitter();\n\n    dontAskAgain = false;\n    loading = true;\n    fingerprint: string;\n\n    constructor(private apiService: ApiService, private cryptoService: CryptoService,\n        private storageService: StorageService) { }\n\n    async ngOnInit() {\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n            if (publicKeyResponse != null) {\n                const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n                if (fingerprint != null) {\n                    this.fingerprint = fingerprint.join('-');\n                }\n            }\n        } catch { }\n        this.loading = false;\n    }\n\n    async submit() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.dontAskAgain) {\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\n        }\n\n        try {\n            this.onConfirmed.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"confirmUserTitle\"> {{'confirmUser' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <p><code>{{fingerprint}}</code></p> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\" [(ngModel)]=\"dontAskAgain\"> <label class=\"form-check-label\" for=\"dontAskAgain\"> {{'dontAskFingerprintAgain' | i18n}} </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\nimport { PolicyData } from 'jslib-common/models/data/policyData';\nimport { Policy } from 'jslib-common/models/domain/policy';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { EmergencyAccessPasswordRequest } from 'jslib-common/models/request/emergencyAccessPasswordRequest';\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nimport { ChangePasswordComponent } from 'jslib-angular/components/change-password.component';\n\n@Component({\n    selector: 'emergency-access-takeover',\n    templateUrl: 'emergency-access-takeover.component.html',\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n    @Output() onDone = new EventEmitter();\n    @Input() emergencyAccessId: string;\n    @Input() name: string;\n    @Input() email: string;\n    @Input() kdf: KdfType;\n    @Input() kdfIterations: number;\n\n    formPromise: Promise<any>;\n\n    constructor(i18nService: I18nService, cryptoService: CryptoService,\n        messagingService: MessagingService, userService: UserService,\n        passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private apiService: ApiService, private toasterService: ToasterService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n        if (response.data != null && response.data.length > 0) {\n            const policies = response.data.map((policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse)));\n            this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(policies);\n        }\n     }\n\n    async submit() {\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(this.emergencyAccessId);\n\n        const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n        const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n        if (oldEncKey == null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'), this.i18nService.t('unexpectedError'));\n            return;\n        }\n\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, takeoverResponse.kdf, takeoverResponse.kdfIterations);\n        const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n        const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n        const request = new EmergencyAccessPasswordRequest();\n        request.newMasterPasswordHash = masterPasswordHash;\n        request.key = encKey[1].encryptedString;\n\n        this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n        try {\n            this.onDone.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{'takeover' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <app-callout type=\"info\" [enforcedPolicyOptions]=\"enforcedPolicyOptions\" *ngIf=\"enforcedPolicyOptions\"> </app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'newMasterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim autocomplete=\"new-password\"> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'confirmNewMasterPass' | i18n}}</label> <input id=\"masterPasswordRetype\" type=\"password\" name=\"MasterPasswordRetype\" class=\"form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim autocomplete=\"new-password\"> </div> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { EmergencyAccessViewResponse } from 'jslib-common/models/response/emergencyAccessResponse';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { EmergencyAccessAttachmentsComponent } from './emergency-access-attachments.component';\nimport { EmergencyAddEditComponent } from './emergency-add-edit.component';\n\n@Component({\n    selector: 'emergency-access-view',\n    templateUrl: 'emergency-access-view.component.html',\n})\nexport class EmergencyAccessViewComponent implements OnInit {\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n\n    id: string;\n    ciphers: CipherView[] = [];\n\n    constructor(private cipherService: CipherService, private cryptoService: CryptoService,\n        private modalService: ModalService, private router: Router,\n        private route: ActivatedRoute, private apiService: ApiService) { }\n\n    ngOnInit() {\n        this.route.params.subscribe(qParams => {\n            if (qParams.id == null) {\n                return this.router.navigate(['settings/emergency-access']);\n            }\n\n            this.id = qParams.id;\n\n            this.load();\n        });\n    }\n\n    async selectCipher(cipher: CipherView) {\n        const [_, childComponent] = await this.modalService.openViewRef(EmergencyAddEditComponent, this.cipherAddEditModalRef, comp => {\n            comp.cipherId = cipher == null ? null : cipher.id;\n            comp.cipher = cipher;\n        });\n\n        return childComponent;\n    }\n\n    async load() {\n        const response = await this.apiService.postEmergencyAccessView(this.id);\n        this.ciphers = await this.getAllCiphers(response);\n    }\n\n    async viewAttachments(cipher: CipherView) {\n        await this.modalService.openViewRef(EmergencyAccessAttachmentsComponent, this.attachmentsModalRef, comp => {\n            comp.cipher = cipher;\n            comp.emergencyAccessId = this.id;\n        });\n    }\n\n    protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n        const ciphers = response.ciphers;\n\n        const decCiphers: CipherView[] = [];\n        const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n        const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n        const promises: any[] = [];\n        ciphers.forEach(cipherResponse => {\n            const cipherData = new CipherData(cipherResponse);\n            const cipher = new Cipher(cipherData);\n            promises.push(cipher.decrypt(oldEncKey).then(c => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n        return decCiphers;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'vault' | i18n}}</h1> </div> <div class=\"mt-4\"> <ng-container *ngIf=\"ciphers.length\"> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\"> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\"> <i class=\"fa fa-fw fa-paperclip\" aria-hidden=\"true\"></i> {{'attachments' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> <ng-template #attachments></ng-template> ","import { Component } from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    templateUrl: '../vault/add-edit.component.html',\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n    originalCipher: Cipher = null;\n    viewOnly = true;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\n        messagingService: MessagingService, eventService: EventService, policyService: PolicyService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\n            eventService, policyService);\n    }\n\n    async load() {\n        this.title = this.i18nService.t('viewItem');\n    }\n\n    protected async loadCipher() {\n        return Promise.resolve(this.originalCipher);\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EmergencyAccessStatusType } from 'jslib-common/enums/emergencyAccessStatusType';\nimport { EmergencyAccessType } from 'jslib-common/enums/emergencyAccessType';\nimport { Utils } from 'jslib-common/misc/utils';\nimport { EmergencyAccessConfirmRequest } from 'jslib-common/models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessGranteeDetailsResponse, EmergencyAccessGrantorDetailsResponse } from 'jslib-common/models/response/emergencyAccessResponse';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { EmergencyAccessAddEditComponent } from './emergency-access-add-edit.component';\nimport { EmergencyAccessConfirmComponent } from './emergency-access-confirm.component';\nimport { EmergencyAccessTakeoverComponent } from './emergency-access-takeover.component';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\n@Component({\n    selector: 'emergency-access',\n    templateUrl: 'emergency-access.component.html',\n})\nexport class EmergencyAccessComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('takeoverTemplate', { read: ViewContainerRef, static: true}) takeoverModalRef: ViewContainerRef;\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n\n    canAccessPremium: boolean;\n    trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n    grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n    emergencyAccessType = EmergencyAccessType;\n    emergencyAccessStatusType = EmergencyAccessStatusType;\n    actionPromise: Promise<any>;\n    isOrganizationOwner: boolean;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private modalService: ModalService, private platformUtilsService: PlatformUtilsService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private storageService: StorageService, private userService: UserService,\n        private messagingService: MessagingService, private userNamePipe: UserNamePipe) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        const orgs = await this.userService.getAllOrganizations();\n        this.isOrganizationOwner = orgs.some(o => o.isOwner);\n        this.load();\n    }\n\n    async load() {\n        this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n        this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    }\n\n    async premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    async edit(details: EmergencyAccessGranteeDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(EmergencyAccessAddEditComponent, this.addEditModalRef, comp => {\n            comp.name = this.userNamePipe.transform(details);\n            comp.emergencyAccessId = details?.id;\n            comp.readOnly = !this.canAccessPremium;\n            comp.onSaved.subscribe(() => {\n                modal.close();\n                this.load();\n            });\n            comp.onDeleted.subscribe(() => {\n                modal.close();\n                this.remove(details);\n            });\n        });\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n        if (this.actionPromise != null) {\n            return;\n        }\n        this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n        await this.actionPromise;\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', contact.email));\n        this.actionPromise = null;\n    }\n\n    async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n        function updateUser() {\n            contact.status = EmergencyAccessStatusType.Confirmed;\n        }\n\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\n        if (autoConfirm == null || !autoConfirm) {\n            const [modal] = await this.modalService.openViewRef(EmergencyAccessConfirmComponent, this.confirmModalRef, comp => {\n                comp.name = this.userNamePipe.transform(contact);\n                comp.emergencyAccessId = contact.id;\n                comp.userId = contact?.granteeId;\n                comp.onConfirmed.subscribe(async () => {\n                    modal.close();\n\n                    comp.formPromise = this.doConfirmation(contact);\n                    await comp.formPromise;\n\n                    updateUser();\n                    this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.userNamePipe.transform(contact)));\n                });\n            });\n            return;\n        }\n\n        this.actionPromise = this.doConfirmation(contact);\n        await this.actionPromise;\n        updateUser();\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.userNamePipe.transform(contact)));\n        this.actionPromise = null;\n    }\n\n    async remove(details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.userNamePipe.transform(details),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteEmergencyAccess(details.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.userNamePipe.transform(details)));\n\n            if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n                this.removeGrantee(details);\n            } else {\n                this.removeGrantor(details);\n            }\n        } catch { }\n    }\n\n    async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('requestAccessConfirmation', details.waitTimeDays.toString()),\n            this.userNamePipe.transform(details),\n            this.i18nService.t('requestAccess'),\n            this.i18nService.t('no'),\n            'warning',\n        );\n\n        if (!confirmed) {\n            return false;\n        }\n\n        await this.apiService.postEmergencyAccessInitiate(details.id);\n\n        details.status = EmergencyAccessStatusType.RecoveryInitiated;\n        this.toasterService.popAsync('success', null, this.i18nService.t('requestSent', this.userNamePipe.transform(details)));\n    }\n\n    async approve(details: EmergencyAccessGranteeDetailsResponse) {\n        const type = this.i18nService.t(details.type === EmergencyAccessType.View ? 'view' : 'takeover');\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('approveAccessConfirmation', this.userNamePipe.transform(details), type),\n            this.userNamePipe.transform(details),\n            this.i18nService.t('approve'),\n            this.i18nService.t('no'),\n            'warning',\n        );\n\n        if (!confirmed) {\n            return false;\n        }\n\n        await this.apiService.postEmergencyAccessApprove(details.id);\n        details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('emergencyApproved', this.userNamePipe.transform(details)));\n    }\n\n    async reject(details: EmergencyAccessGranteeDetailsResponse) {\n        await this.apiService.postEmergencyAccessReject(details.id);\n        details.status = EmergencyAccessStatusType.Confirmed;\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('emergencyRejected', this.userNamePipe.transform(details)));\n    }\n\n    async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n        const [modal] = await this.modalService.openViewRef(EmergencyAccessTakeoverComponent, this.takeoverModalRef, comp => {\n            comp.name = this.userNamePipe.transform(details);\n            comp.email = details.email;\n            comp.emergencyAccessId = details != null ? details.id : null;\n\n            comp.onDone.subscribe(() => {\n                modal.close();\n                this.toasterService.popAsync('success', null, this.i18nService.t('passwordResetFor', this.userNamePipe.transform(details)));\n            });\n        });\n    }\n\n    private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n        const index = this.trustedContacts.indexOf(details);\n        if (index > -1) {\n            this.trustedContacts.splice(index, 1);\n        }\n    }\n\n    private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n        const index = this.grantedContacts.indexOf(details);\n        if (index > -1) {\n            this.grantedContacts.splice(index, 1);\n        }\n    }\n\n    // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n    private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n        const encKey = await this.cryptoService.getEncKey();\n        const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n        try {\n            // tslint:disable-next-line\n            console.log('User\\'s fingerprint: ' +\n                (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join('-'));\n        } catch { }\n\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        const request = new EmergencyAccessConfirmRequest();\n        request.key = encryptedKey.encryptedString;\n        await this.apiService.postEmergencyAccessConfirm(details.id, request);\n    }\n}\n","<div class=\"page-header\"> <h1>{{'emergencyAccess' | i18n}}</h1> </div> <p> {{'emergencyAccessDesc' | i18n}} <a href=\"https://bitwarden.com/help/article/emergency-access/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}. </a> </p> <p *ngIf=\"isOrganizationOwner\"> <b>{{'warning' | i18n }}:</b> {{'emergencyAccessOwnerWarning' | i18n}} </p> <div class=\"page-header d-flex\"> <h2> {{'trustedEmergencyContacts' | i18n}} <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </h2> <div class=\"ml-auto d-flex\"> <button class=\"btn btn-sm btn-outline-primary ml-3\" type=\"button\" (click)=\"invite()\" [disabled]=\"!canAccessPremium\"> <i aria-hidden=\"true\" class=\"fa fa-plus fa-fw\"></i> {{'addEmergencyContact' |i18n}} </button> </div> </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\"> <tbody> <tr *ngFor=\"let c of trustedContacts; let i = index\"> <td width=\"30\"> <app-avatar [data]=\"c | userName\" [email]=\"c.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{'accepted' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\">{{'emergencyAccessRecoveryInitiated' | i18n}}</span> <span class=\"badge badge-success\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{'emergencyAccessRecoveryApproved' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{'view' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{'takeover' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{c.name}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"approve(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'approve' | i18n}} </a> <a class=\"dropdown-item text-warning\" href=\"#\" appStopClick (click)=\"reject(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated || c.status === emergencyAccessStatusType.RecoveryApproved\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'reject' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <p *ngIf=\"!trustedContacts || !trustedContacts.length\">{{'noTrustedContacts' | i18n}}</p> <div class=\"page-header spaced-header\"> <h2>{{'designatedEmergencyContacts' | i18n}}</h2> </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\"> <tbody> <tr *ngFor=\"let c of grantedContacts; let i = index\"> <td width=\"30\"> <app-avatar [data]=\"c | userName\" [email]=\"c.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <span>{{c.email}}</span> <span class=\"badge badge-secondary\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{'accepted' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\">{{'emergencyAccessRecoveryInitiated' | i18n}}</span> <span class=\"badge badge-success\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{'emergencyAccessRecoveryApproved' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{'view' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{'takeover' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{c.name}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"requestAccess(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'requestAccess' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"takeover(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved && c.type === emergencyAccessType.Takeover\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'takeover' | i18n}} </a> <a class=\"dropdown-item\" [routerLink]=\"c.id\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved && c.type === emergencyAccessType.View\"> <i class=\"fa fa-fw fa-eye\" aria-hidden=\"true\"></i> {{'view' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <p *ngIf=\"!grantedContacts || !grantedContacts.length\">{{'noGrantedAccess' | i18n}}</p> <ng-template #addEdit></ng-template> <ng-template #takeoverTemplate></ng-template> <ng-template #confirmTemplate></ng-template> ","import { EmergencyAccessStatusType } from '../../enums/emergencyAccessStatusType';\nimport { EmergencyAccessType } from '../../enums/emergencyAccessType';\nimport { KdfType } from '../../enums/kdfType';\nimport { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n    id: string;\n    granteeId: string;\n    name: string;\n    email: string;\n    type: EmergencyAccessType;\n    status: EmergencyAccessStatusType;\n    waitTimeDays: number;\n    creationDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.granteeId = this.getResponseProperty('GranteeId');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.waitTimeDays = this.getResponseProperty('WaitTimeDays');\n        this.creationDate = this.getResponseProperty('CreationDate');\n    }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n    id: string;\n    grantorId: string;\n    name: string;\n    email: string;\n    type: EmergencyAccessType;\n    status: EmergencyAccessStatusType;\n    waitTimeDays: number;\n    creationDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.grantorId = this.getResponseProperty('GrantorId');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.waitTimeDays = this.getResponseProperty('WaitTimeDays');\n        this.creationDate = this.getResponseProperty('CreationDate');\n    }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n    keyEncrypted: string;\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n\n        this.keyEncrypted = this.getResponseProperty('KeyEncrypted');\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n    keyEncrypted: string;\n    ciphers: CipherResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n\n        this.keyEncrypted = this.getResponseProperty('KeyEncrypted');\n\n        const ciphers = this.getResponseProperty('Ciphers');\n        if (ciphers != null) {\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class AttachmentResponse extends BaseResponse {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.url = this.getResponseProperty('Url');\n        this.fileName = this.getResponseProperty('FileName');\n        this.key = this.getResponseProperty('Key');\n        this.size = this.getResponseProperty('Size');\n        this.sizeName = this.getResponseProperty('SizeName');\n    }\n}\n","import {\n    AfterContentInit,\n    Component,\n    Input,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { SsoComponent } from 'jslib-angular/components/sso.component';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-link-sso',\n    templateUrl: 'link-sso.component.html',\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n    @Input() organization: Organization;\n    returnUri: string = '/settings/organizations';\n\n    constructor(platformUtilsService: PlatformUtilsService, i18nService: I18nService,\n        apiService: ApiService, authService: AuthService,\n        router: Router, route: ActivatedRoute,\n        cryptoFunctionService: CryptoFunctionService, passwordGenerationService: PasswordGenerationService,\n        storageService: StorageService, stateService: StateService, environmentService: EnvironmentService) {\n        super(authService, router,\n            i18nService, route,\n            storageService, stateService,\n            platformUtilsService, apiService,\n            cryptoFunctionService, environmentService, passwordGenerationService);\n\n        this.returnUri = '/settings/organizations';\n        this.redirectUri = window.location.origin + '/sso-connector.html';\n        this.clientId = 'web';\n    }\n\n    async ngAfterContentInit() {\n        this.identifier = this.organization.identifier;\n    }\n}\n","<a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"submit(returnUri, true)\"> <i class=\"fa fa-fw fa-link\" aria-hidden=\"true\"></i> {{'linkSso' | i18n}} </a> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ThemeType } from 'jslib-common/enums/themeType';\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-options',\n    templateUrl: 'options.component.html',\n})\nexport class OptionsComponent implements OnInit {\n    vaultTimeoutAction: string = 'lock';\n    disableIcons: boolean;\n    enableGravatars: boolean;\n    enableFullWidth: boolean;\n    theme: string = null;\n    locale: string;\n    vaultTimeouts: { name: string; value: number; }[];\n    localeOptions: any[];\n    themeOptions: any[];\n\n    vaultTimeout: FormControl = new FormControl(null);\n\n    private startingLocale: string;\n    private startingTheme: string;\n\n    constructor(private storageService: StorageService, private stateService: StateService,\n        private i18nService: I18nService, private toasterService: ToasterService,\n        private vaultTimeoutService: VaultTimeoutService, private platformUtilsService: PlatformUtilsService,\n        private messagingService: MessagingService) {\n        this.vaultTimeouts = [\n            { name: i18nService.t('oneMinute'), value: 1 },\n            { name: i18nService.t('fiveMinutes'), value: 5 },\n            { name: i18nService.t('fifteenMinutes'), value: 15 },\n            { name: i18nService.t('thirtyMinutes'), value: 30 },\n            { name: i18nService.t('oneHour'), value: 60 },\n            { name: i18nService.t('fourHours'), value: 240 },\n            { name: i18nService.t('onRefresh'), value: -1 },\n        ];\n        if (this.platformUtilsService.isDev()) {\n            this.vaultTimeouts.push({ name: i18nService.t('never'), value: null });\n        }\n\n        const localeOptions: any[] = [];\n        i18nService.supportedTranslationLocales.forEach(locale => {\n            let name = locale;\n            if (i18nService.localeNames.has(locale)) {\n                name += (' - ' + i18nService.localeNames.get(locale));\n            }\n            localeOptions.push({ name: name, value: locale });\n        });\n        localeOptions.sort(Utils.getSortFunction(i18nService, 'name'));\n        localeOptions.splice(0, 0, { name: i18nService.t('default'), value: null });\n        this.localeOptions = localeOptions;\n        this.themeOptions = [\n            { name: i18nService.t('themeLight'), value: null },\n            { name: i18nService.t('themeDark'), value: ThemeType.Dark },\n            { name: i18nService.t('themeSystem'), value: ThemeType.System },\n        ];\n    }\n\n    async ngOnInit() {\n        this.vaultTimeout.setValue(await this.vaultTimeoutService.getVaultTimeout());\n        this.vaultTimeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n        this.disableIcons = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        this.enableGravatars = await this.storageService.get<boolean>('enableGravatars');\n        this.enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\n        this.locale = this.startingLocale = await this.storageService.get<string>(ConstantsService.localeKey);\n        this.theme = this.startingTheme = await this.storageService.get<ThemeType>(ConstantsService.themeKey);\n    }\n\n    async submit() {\n        if (!this.vaultTimeout.valid) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('vaultTimeoutToLarge'));\n            return;\n        }\n\n        await this.vaultTimeoutService.setVaultTimeoutOptions(this.vaultTimeout.value, this.vaultTimeoutAction);\n        await this.storageService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.stateService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.storageService.save('enableGravatars', this.enableGravatars);\n        await this.stateService.save('enableGravatars', this.enableGravatars);\n        await this.storageService.save('enableFullWidth', this.enableFullWidth);\n        this.messagingService.send('setFullWidth');\n        if (this.theme !== this.startingTheme) {\n            await this.storageService.save(ConstantsService.themeKey, this.theme);\n            this.startingTheme = this.theme;\n            const effectiveTheme = await this.platformUtilsService.getEffectiveTheme();\n            const htmlEl = window.document.documentElement;\n            htmlEl.classList.remove('theme_' + ThemeType.Light, 'theme_' + ThemeType.Dark);\n            htmlEl.classList.add('theme_' + effectiveTheme);\n        }\n        await this.storageService.save(ConstantsService.localeKey, this.locale);\n        if (this.locale !== this.startingLocale) {\n            window.location.reload();\n        } else {\n            this.toasterService.popAsync('success', null, this.i18nService.t('optionsUpdated'));\n        }\n    }\n\n    async vaultTimeoutActionChanged(newValue: string) {\n        if (newValue === 'logOut') {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('vaultTimeoutLogOutConfirmation'),\n                this.i18nService.t('vaultTimeoutLogOutConfirmationTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('cancel'), 'warning');\n            if (!confirmed) {\n                this.vaultTimeoutAction = 'lock';\n                return;\n            }\n        }\n        this.vaultTimeoutAction = newValue;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'options' | i18n}}</h1> </div> <p>{{'optionsDesc' | i18n}}</p> <form (ngSubmit)=\"submit()\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <app-vault-timeout-input [vaultTimeouts]=\"vaultTimeouts\" [formControl]=\"vaultTimeout\" ngDefaultControl> </app-vault-timeout-input> </div> </div> <div class=\"form-group\"> <label>{{'vaultTimeoutAction' | i18n}}</label> <div class=\"form-check form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLock\" value=\"lock\" [(ngModel)]=\"vaultTimeoutAction\"> <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\"> {{'lock' | i18n}} <small>{{'vaultTimeoutActionLockDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLogOut\" value=\"logOut\" [(ngModel)]=\"vaultTimeoutAction\" (ngModelChange)=\"vaultTimeoutActionChanged($event)\"> <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\"> {{'logOut' | i18n}} <small>{{'vaultTimeoutActionLogOutDesc' | i18n}}</small> </label> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <div class=\"d-flex\"> <label for=\"locale\">{{'language' | i18n}}</label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/localization/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\"> <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"form-text text-muted\">{{'languageDesc' | i18n}}</small> </div> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"disableIcons\" name=\"DisableIcons\" [(ngModel)]=\"disableIcons\"> <label class=\"form-check-label\" for=\"disableIcons\"> {{'disableIcons' | i18n}} </label> <a href=\"https://help.bitwarden.com/article/website-icons/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <small class=\"form-text text-muted\">{{'disableIconsDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enableGravatars\" name=\"enableGravatars\" [(ngModel)]=\"enableGravatars\"> <label class=\"form-check-label\" for=\"enableGravatars\"> {{'enableGravatars' | i18n}} </label> <a href=\"https://gravatar.com/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <small class=\"form-text text-muted\">{{'enableGravatarsDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enableFullWidth\" name=\"enableFullWidth\" [(ngModel)]=\"enableFullWidth\"> <label class=\"form-check-label\" for=\"enableFullWidth\"> {{'enableFullWidth' | i18n}} </label> </div> <small class=\"form-text text-muted\">{{'enableFullWidthDesc' | i18n}}</small> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"theme\">{{'theme' | i18n}}</label> <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\"> <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"form-text text-muted\">{{'themeDesc' | i18n}}</small> </div> </div> </div> <button type=\"submit\" class=\"btn btn-primary\"> {{'save' | i18n}} </button> </form> ","import { Component } from '@angular/core';\nimport {\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nimport {\n    VaultTimeoutInputComponent as VaultTimeoutInputComponentBase\n} from 'jslib-angular/components/settings/vault-timeout-input.component';\n\n@Component({\n    selector: 'app-vault-timeout-input',\n    templateUrl: 'vault-timeout-input.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: VaultTimeoutInputComponent,\n        },\n        {\n            provide: NG_VALIDATORS,\n            multi: true,\n            useExisting: VaultTimeoutInputComponent,\n        },\n    ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\"> {{'vaultTimeoutPolicyInEffect' | i18n : vaultTimeoutPolicyHours : vaultTimeoutPolicyMinutes}} </app-callout> <div [formGroup]=\"form\"> <div class=\"form-group\"> <label for=\"vaultTimeout\">{{'vaultTimeout' | i18n}}</label> <select id=\"vaultTimeout\" name=\"VaultTimeout\" formControlName=\"vaultTimeout\" class=\"form-control\"> <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"form-text text-muted\">{{'vaultTimeoutDesc' | i18n}}</small> </div> <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\"> <label for=\"customVaultTimeout\">{{'customVaultTimeout' | i18n}}</label> <div class=\"row\"> <div class=\"col-6\"> <input id=\"hours\" class=\"form-control\" type=\"number\" min=\"0\" name=\"hours\" formControlName=\"hours\"> <small>{{'hours' | i18n }}</small> </div> <div class=\"col-6\"> <input id=\"minutes\" class=\"form-control\" type=\"number\" min=\"0\" name=\"minutes\" formControlName=\"minutes\"> <small>{{'minutes' | i18n }}</small> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\n@Component({\n    selector: 'app-premium',\n    templateUrl: 'premium.component.html',\n})\nexport class PremiumComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n    canAccessPremium = false;\n    selfHosted = false;\n    premiumPrice = 10;\n    storageGbPrice = 4;\n    additionalStorage = 0;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService, private router: Router,\n        private messagingService: MessagingService, private syncService: SyncService,\n        private userService: UserService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        const premium = await this.tokenService.getPremium();\n        if (premium) {\n            this.router.navigate(['/settings/subscription']);\n            return;\n        }\n    }\n\n    async submit() {\n        let files: FileList = null;\n        if (this.selfHosted) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n        }\n\n        try {\n            if (this.selfHosted) {\n                if (!this.tokenService.getEmailVerified()) {\n                    this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                        this.i18nService.t('verifyEmailFirst'));\n                    return;\n                }\n\n                const fd = new FormData();\n                fd.append('license', files[0]);\n                this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n                    return this.finalizePremium();\n                });\n            } else {\n                this.formPromise = this.paymentComponent.createPaymentToken().then(result => {\n                    const fd = new FormData();\n                    fd.append('paymentMethodType', result[1].toString());\n                    if (result[0] != null) {\n                        fd.append('paymentToken', result[0]);\n                    }\n                    fd.append('additionalStorageGb', (this.additionalStorage || 0).toString());\n                    fd.append('country', this.taxInfoComponent.taxInfo.country);\n                    fd.append('postalCode', this.taxInfoComponent.taxInfo.postalCode);\n                    return this.apiService.postPremium(fd);\n                }).then(paymentResponse => {\n                    if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n                        return this.paymentComponent.handleStripeCardPayment(paymentResponse.paymentIntentClientSecret,\n                            () => this.finalizePremium());\n                    } else {\n                        return this.finalizePremium();\n                    }\n                });\n            }\n            await this.formPromise;\n        } catch { }\n    }\n\n    async finalizePremium() {\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n        this.toasterService.popAsync('success', null, this.i18nService.t('premiumUpdated'));\n        this.messagingService.send('purchasedPremium');\n        this.router.navigate(['/settings/subscription']);\n    }\n\n    get additionalStorageTotal(): number {\n        return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n    }\n\n    get subtotal(): number {\n        return this.premiumPrice + this.additionalStorageTotal;\n    }\n\n    get taxCharges(): number {\n        return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null ?\n            (this.taxInfoComponent.taxRate / 100) * this.subtotal :\n            0;\n    }\n\n    get total(): number {\n        return (this.subtotal + this.taxCharges) || 0;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'goPremium' | i18n}}</h1> </div> <app-callout type=\"info\" *ngIf=\"canAccessPremium\" title=\"{{'youHavePremiumAccess' | i18n}}\" icon=\"fa-star\"> {{'alreadyPremiumFromOrg' | i18n}} </app-callout> <app-callout type=\"success\"> <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p> <ul class=\"fa-ul\"> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpStorage' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpTwoStep' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpEmergency' |i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpReports' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpTotp' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpSupport' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpFuture' | i18n}} </li> </ul> <p class=\"text-lg\" [ngClass]=\"{'mb-0':!selfHosted}\">{{'premiumPrice' | i18n : (premiumPrice | currency:'$')}}</p> <a href=\"https://vault.bitwarden.com/#/settings/premium\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\" *ngIf=\"selfHosted\"> {{'purchasePremium' | i18n}} </a> </app-callout> <ng-container *ngIf=\"selfHosted\"> <p>{{'uploadLicenseFilePremium' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_premium_license.json'}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> </ng-container> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\"> <h2 class=\"mt-5\">{{'addons' | i18n}}</h2> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label> <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\" [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\" placeholder=\"{{'additionalStorageGbDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (storageGbPrice | currency:'$') : ('year' | i18n)}}</small> </div> </div> <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2> {{'premiumMembership' | i18n}}: {{premiumPrice | currency:'$'}} <br> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{additionalStorageTotal | currency:'$'}} <hr class=\"my-3\"> <h2 class=\"spaced-header mb-4\">{{'paymentInformation' | i18n}}</h2> <app-payment [hideBank]=\"true\"></app-payment> <app-tax-info></app-tax-info> <div id=\"price\" class=\"my-4\"> <div class=\"text-muted text-sm\"> {{ 'planPrice' | i18n }}: {{ subtotal | currency: 'USD $' }} <br/> <ng-container> {{ 'estimatedTax' | i18n }}: {{ taxCharges | currency: 'USD $' }} </ng-container> </div> <hr class=\"my-1 col-3 ml-0\"> <p class=\"text-lg\"><strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}}/{{'year' | i18n}}</p> </div> <small class=\"text-muted font-italic\">{{'paymentChargedAnnually' | i18n}}</small> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> ","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'SettingsComponent';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n    premium: boolean;\n    selfHosted: boolean;\n\n    constructor(private tokenService: TokenService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'purchasedPremium':\n                        await this.load();\n                        break;\n                    default:\n                }\n            });\n        });\n\n        this.selfHosted = await this.platformUtilsService.isSelfHost();\n        await this.load();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.premium = await this.tokenService.getPremium();\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myAccount' | i18n}} </a> <a routerLink=\"options\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'options' | i18n}} </a> <a routerLink=\"organizations\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'organizations' | i18n}} </a> <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"premium\"> {{'premiumMembership' | i18n}} </a> <a routerLink=\"premium\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!premium\"> {{'goPremium' | i18n}} </a> <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\"> {{'billing' | i18n}} </a> <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'twoStepLogin' | i18n}} </a> <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'domainRules' | i18n}} </a> <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'emergencyAccess' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\n\nimport { CipherWithIdRequest } from 'jslib-common/models/request/cipherWithIdRequest';\nimport { FolderWithIdRequest } from 'jslib-common/models/request/folderWithIdRequest';\nimport { UpdateKeyRequest } from 'jslib-common/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-update-key',\n    templateUrl: 'update-key.component.html',\n})\nexport class UpdateKeyComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private syncService: SyncService,\n        private folderService: FolderService, private cipherService: CipherService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (hasEncKey) {\n            return;\n        }\n\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.makeRequest().then(request => {\n                return this.apiService.postAccountKey(request);\n            });\n            await this.formPromise;\n            const toast: Toast = {\n                type: 'success',\n                title: this.i18nService.t('keyUpdated'),\n                body: this.i18nService.t('logBackInOthersToo'),\n                timeout: 15000,\n            };\n            this.toasterService.popAsync(toast);\n            this.messagingService.send('logout');\n        } catch { }\n    }\n\n    private async makeRequest(): Promise<UpdateKeyRequest> {\n        const key = await this.cryptoService.getKey();\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: EncString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        await this.syncService.fullSync(true);\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        return request;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{'updateEncryptionKey' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'updateEncryptionKeyShortDesc' | i18n}} {{'updateEncryptionKeyDesc' | i18n}} <a href=\"https://help.bitwarden.com/article/update-encryption-key/\" target=\"_blank\" rel=\"noopener\">{{'learnMore' | i18n}}</a> </p> <app-callout type=\"warning\">{{'updateEncryptionKeyWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'updateEncryptionKey' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { SubscriptionResponse } from 'jslib-common/models/response/subscriptionResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\n\n@Component({\n    selector: 'app-user-subscription',\n    templateUrl: 'user-subscription.component.html',\n})\nexport class UserSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    sub: SubscriptionResponse;\n    selfHosted = false;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private tokenService: TokenService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private toasterService: ToasterService, private router: Router) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.tokenService.getPremium()) {\n            this.loading = true;\n            this.sub = await this.apiService.getUserSubscription();\n        } else {\n            this.router.navigate(['/settings/premium']);\n            return;\n        }\n\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postReinstatePremium();\n            await this.reinstatePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postCancelPremium();\n            await this.cancelPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    downloadLicense() {\n        if (this.loading) {\n            return;\n        }\n\n        const licenseString = JSON.stringify(this.sub.license, null, 2);\n        this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_premium_license.json');\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(load: boolean) {\n        this.showUpdateLicense = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t(add ? 'addStorage' : 'removeStorage'), null, null, 'warning');\n            return;\n        }\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get usingInAppPurchase() {\n        return this.sub != null ? this.sub.usingInAppPurchase : false;\n    }\n}\n","<div class=\"page-header\"> <h1> {{'premiumMembership' | i18n}} <small *ngIf=\"firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"sub\"> <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\"> {{'subscriptionCanceled' | i18n}}</app-callout> <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\"> <p>{{'subscriptionPendingCanceled' | i18n}}</p> <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\" [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'reinstateSubscription' | i18n}}</span> </button> </app-callout> <dl *ngIf=\"selfHosted\"> <dt>{{'expiration' | i18n}}</dt> <dd *ngIf=\"sub.expiration\">{{sub.expiration | date:'mediumDate'}}</dd> <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd> </dl> <div class=\"row\" *ngIf=\"!selfHosted\"> <div class=\"col-4\"> <dl> <dt>{{'status' | i18n}}</dt> <dd> <span class=\"text-capitalize\">{{(subscription && subscription.status) || '-'}}</span> <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span> </dd> <dt>{{'nextCharge' | i18n}}</dt> <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) : '-'}} </dd> </dl> </div> <div class=\"col-8\" *ngIf=\"subscription\"> <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong> <table class=\"table\"> <tbody> <tr *ngFor=\"let i of subscription.items\"> <td> {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}} </td> <td> {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}} </td> </tr> </tbody> </table> </div> </div> <ng-container *ngIf=\"selfHosted\"> <div> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\"> {{'updateLicense' | i18n}} </button> <a href=\"https://vault.bitwarden.com/#/settings/subscription\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\"> {{'manageSubscription' | i18n}} </a> </div> <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3> <app-update-license (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\"> </app-update-license> </div> </div> </ng-container> <ng-container *ngIf=\"!selfHosted\"> <div class=\"d-flex\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"downloadLicense()\" *ngIf=\"!subscription || !subscription.cancelled\"> {{'downloadLicense' | i18n}} </button> <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\" [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\" *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'cancelSubscription' | i18n}}</span> </button> </div> <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2> <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p> <div class=\"progress\"> <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\" [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\"> {{(storagePercentage / 100) | percent}}</div> </div> <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\"> {{'addStorage' | i18n}} </button> <button type=\"button\" class=\"ml-1 btn btn-outline-secondary\" (click)=\"adjustStorage(false)\"> {{'removeStorage' | i18n}} </button> </div> <app-adjust-storage [storageGbPrice]=\"4\" [add]=\"adjustStorageAdd\" (onAdjusted)=\"closeStorage(true)\" (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage> </div> </ng-container> </ng-container> </ng-container> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-verify-email',\n    templateUrl: 'verify-email.component.html',\n})\nexport class VerifyEmailComponent {\n    actionPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async send() {\n        if (this.actionPromise != null) {\n            return;\n        }\n        try {\n            this.actionPromise = this.apiService.postAccountVerifyEmail();\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('checkInboxForVerification'));\n        } catch { }\n        this.actionPromise = null;\n    }\n}\n","<div class=\"card border-warning\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-envelope-o fa-fw\" aria-hidden=\"true\"></i> {{'verifyEmail' | i18n}} </div> <div class=\"card-body\"> <p>{{'verifyEmailDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-block btn-outline-secondary btn-submit\" #sendBtn [appApiAction]=\"actionPromise\" [disabled]=\"sendBtn.loading\" (click)=\"send()\"> <i class=\"fa fa-spin fa-spinner\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span> {{'sendEmail' | i18n}} </span> </button> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { BreachAccountResponse } from 'jslib-common/models/response/breachAccountResponse';\n\n@Component({\n    selector: 'app-breach-report',\n    templateUrl: 'breach-report.component.html',\n})\nexport class BreachReportComponent implements OnInit {\n    error = false;\n    username: string;\n    checkedUsername: string;\n    breachedAccounts: BreachAccountResponse[] = [];\n    formPromise: Promise<BreachAccountResponse[]>;\n\n    constructor(private auditService: AuditService, private userService: UserService) { }\n\n    async ngOnInit() {\n        this.username = await this.userService.getEmail();\n    }\n\n    async submit() {\n        this.error = false;\n        this.username = this.username.toLowerCase();\n        try {\n            this.formPromise = this.auditService.breachedAccounts(this.username);\n            this.breachedAccounts = await this.formPromise;\n        } catch {\n            this.error = true;\n        }\n        this.checkedUsername = this.username;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'dataBreachReport' | i18n}}</h1> </div> <p>{{'breachDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"username\">{{'username' | i18n}}</label> <input id=\"username\" type=\"text\" name=\"Username\" class=\"form-control\" [(ngModel)]=\"username\" required> <small class=\"form-text text-muted\">{{'breachCheckUsernameEmail' | i18n}}</small> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'checkBreaches' | i18n}}</span> </button> </form> <div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\"> <p *ngIf=\"error\">{{'reportError' | i18n}}...</p> <ng-container *ngIf=\"!error\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!breachedAccounts.length\"> {{'breachUsernameNotFound' | i18n : checkedUsername}} </app-callout> <app-callout type=\"danger\" title=\"{{'breachFound' | i18n}}\" *ngIf=\"breachedAccounts.length\"> {{'breachUsernameFound' | i18n : checkedUsername : breachedAccounts.length}} </app-callout> <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\"> <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\"> <div class=\"row\"> <div class=\"col-2 text-center\"> <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\"> </div> <div class=\"col-7\"> <h3 class=\"text-lg\">{{a.title}}</h3> <p [innerHTML]=\"a.description\"></p> <p class=\"mb-1\">{{'compromisedData' | i18n}}:</p> <ul> <li *ngFor=\"let d of a.dataClasses\">{{d}}</li> </ul> </div> <div class=\"col-3\"> <dl> <dt>{{'website' | i18n}}</dt> <dd>{{a.domain}}</dd> <dt>{{'affectedUsers' | i18n}}</dt> <dd>{{a.pwnCount | number}}</dd> <dt>{{'breachOccurred' | i18n}}</dt> <dd>{{a.breachDate | date: 'mediumDate'}}</dd> <dt>{{'breachReported' | i18n}}</dt> <dd>{{a.addedDate | date: 'mediumDate'}}</dd> </dl> </div> </div> </li> </ul> </ng-container> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent,\n} from 'jslib-angular/components/password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator-history',\n    templateUrl: 'password-generator-history.component.html',\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{'passwordHistory' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"history.length\"> <ul class=\"list-group list-group-flush\"> <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\"> <div class=\"password-row\"> <div class=\"text-monospace password-wrapper\" [innerHTML]=\"h.password | colorPassword\" appSelectCopy></div> <small class=\"text-muted\">{{h.date | date:'medium'}}</small> </div> <div class=\"ml-auto\"> <button class=\"btn btn-link\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(h.password)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </li> </ul> </div> <div class=\"modal-body\" *ngIf=\"!history.length\"> {{'noPasswordsInList' | i18n}} </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'close' | i18n}} </button> <div class=\"ml-auto\"> <button type=\"button\" (click)=\"clear()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'clear' | i18n}}\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> </div> ","import {\n    Component,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorComponent as BasePasswordGeneratorComponent,\n} from 'jslib-angular/components/password-generator.component';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\nimport { PasswordGeneratorHistoryComponent } from './password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator',\n    templateUrl: 'password-generator.component.html',\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n    @ViewChild('historyTemplate', { read: ViewContainerRef, static: true }) historyModalRef: ViewContainerRef;\n\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, private modalService: ModalService) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n\n    async history() {\n        await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n    }\n\n    lengthChanged() {\n        document.getElementById('length').focus();\n    }\n\n    minNumberChanged() {\n        document.getElementById('min-number').focus();\n    }\n\n    minSpecialChanged() {\n        document.getElementById('min-special').focus();\n    }\n}\n","<div class=\"page-header\"> <h1>{{'passwordGenerator' | i18n}}</h1> </div> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions?.inEffect()\"> {{'passwordGeneratorPolicyInEffect' | i18n}} </app-callout> <div class=\"card card-password bg-light my-4\"> <div class=\"card-body\"> <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div> </div> </div> <div class=\"form-group\"> <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\"> <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"options.type\" name=\"Type_{{o.value}}\" id=\"type_{{o.value}}\" [value]=\"o.value\" (change)=\"saveOptions()\" [checked]=\"options.type === o.value\"> <label class=\"form-check-label\" for=\"type_{{o.value}}\"> {{o.name}} </label> </div> </div> <ng-container *ngIf=\"options.type === 'passphrase'\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"num-words\">{{'numWords' | i18n}}</label> <input id=\"num-words\" class=\"form-control\" type=\"number\" min=\"3\" max=\"20\" [(ngModel)]=\"options.numWords\" (blur)=\"saveOptions()\"> </div> <div class=\"form-group col-4\"> <label for=\"word-separator\">{{'wordSeparator' | i18n}}</label> <input id=\"word-separator\" class=\"form-control\" type=\"text\" maxlength=\"1\" [(ngModel)]=\"options.wordSeparator\" (blur)=\"saveOptions()\"> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input id=\"capitalize\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.capitalize\" [disabled]=\"enforcedPolicyOptions?.capitalize\"> <label for=\"capitalize\" class=\"form-check-label\">{{'capitalize' | i18n}}</label> </div> <div class=\"form-check\"> <input id=\"include-number\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.includeNumber\" [disabled]=\"enforcedPolicyOptions?.includeNumber\"> <label for=\"include-number\" class=\"form-check-label\">{{'includeNumber' | i18n}}</label> </div> </div> </ng-container> <ng-container *ngIf=\"options.type === 'password'\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"length\">{{'length' | i18n}}</label> <input id=\"length\" class=\"form-control\" type=\"number\" min=\"5\" max=\"128\" [(ngModel)]=\"options.length\" (blur)=\"saveOptions()\" (change)=\"lengthChanged()\"> </div> <div class=\"form-group col-4\"> <label for=\"min-number\">{{'minNumbers' | i18n}}</label> <input id=\"min-number\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\" [(ngModel)]=\"options.minNumber\" (change)=\"minNumberChanged()\"> </div> <div class=\"form-group col-4\"> <label for=\"min-special\">{{'minSpecial' | i18n}}</label> <input id=\"min-special\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\" [(ngModel)]=\"options.minSpecial\" (change)=\"minSpecialChanged()\"> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input id=\"uppercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.uppercase\" [disabled]=\"enforcedPolicyOptions?.useUppercase\"> <label for=\"uppercase\" class=\"form-check-label\">A-Z</label> </div> <div class=\"form-check\"> <input id=\"lowercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.lowercase\" [disabled]=\"enforcedPolicyOptions?.useLowercase\"> <label for=\"lowercase\" class=\"form-check-label\">a-z</label> </div> <div class=\"form-check\"> <input id=\"numbers\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.number\" [disabled]=\"enforcedPolicyOptions?.useNumbers\"> <label for=\"numbers\" class=\"form-check-label\">0-9</label> </div> <div class=\"form-check\"> <input id=\"special\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.special\" [disabled]=\"enforcedPolicyOptions?.useSpecial\"> <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label> </div> <div class=\"form-check\"> <input id=\"ambiguous\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"avoidAmbiguous\"> <label for=\"ambiguous\" class=\"form-check-label\">{{'ambiguous' | i18n}}</label> </div> </div> </ng-container> <div class=\"d-flex\"> <div> <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\"> {{'regeneratePassword' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\"> {{'copyPassword' | i18n}} </button> </div> <div class=\"ml-auto\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"history()\" appA11yTitle=\"{{'passwordHistory' | i18n}}\"> <i class=\"fa fa-clock-o fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> <ng-template #historyTemplate></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent implements OnInit {\n    canAccessPremium = false;\n\n    constructor(private userService: UserService, private messagingService: MessagingService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card mb-4\"> <div class=\"card-header\">{{'tools' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'passwordGenerator' | i18n}} </a> <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'importData' | i18n}} </a> <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exportVault' | i18n}} </a> </div> </div> <div class=\"card\"> <div class=\"card-header d-flex\"> {{'reports' | i18n}} <div class=\"ml-auto\"> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </div> </div> <div class=\"list-group list-group-flush\"> <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exposedPasswordsReport' | i18n}} </a> <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'reusedPasswordsReport' | i18n}} </a> <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'weakPasswordsReport' | i18n}} </a> <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'unsecuredWebsitesReport' | i18n}} </a> <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'inactive2faReport' | i18n}} </a> <a routerLink=\"breach-report\" class=\"list-group-item d-flex\" routerLinkActive=\"active\"> {{'dataBreachReport' | i18n}} <div class=\"ml-auto\"> <span class=\"badge badge-success\" *ngIf=\"!canAccessPremium\"> {{'free' | i18n | uppercase}} </span> </div> </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    FolderAddEditComponent as BaseFolderAddEditComponent,\n} from 'jslib-angular/components/folder-add-edit.component';\n\n@Component({\n    selector: 'app-folder-add-edit',\n    templateUrl: 'folder-add-edit.component.html',\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n    constructor(folderService: FolderService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService) {\n        super(folderService, i18nService, platformUtilsService);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"folder.name\" required appAutofocus> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { ShareComponent as BaseShareComponent } from 'jslib-angular/components/share.component';\n\n@Component({\n    selector: 'app-vault-share',\n    templateUrl: 'share.component.html',\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, userService: UserService,\n        cipherService: CipherService) {\n        super(collectionService, platformUtilsService, i18nService, userService, cipherService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach(c => this.check(c, select));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"shareTitle\"> {{'moveToOrganization' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\"> {{'noOrganizationsList' | i18n}} </div> <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\"> <p>{{'moveToOrgDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"organization\">{{'organization' | i18n}}</label> <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\" (change)=\"filterCollections()\"> <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option> </select> </div> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\" [ngClass]=\"{loading:form.loading}\" *ngIf=\"organizations && organizations.length\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-primary\" *ngIf=\"!organizations || !organizations.length\"> {{'newOrganization' | i18n}} </a> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    ChangeDetectorRef,\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { OrganizationsComponent } from '../settings/organizations.component';\nimport { UpdateKeyComponent } from '../settings/update-key.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { FolderAddEditComponent } from './folder-add-edit.component';\nimport { GroupingsComponent } from './groupings.component';\nimport { ShareComponent } from './share.component';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nconst BroadcasterSubscriptionId = 'VaultComponent';\n\n@Component({\n    selector: 'app-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n    @ViewChild(OrganizationsComponent, { static: true }) organizationsComponent: OrganizationsComponent;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('folderAddEdit', { read: ViewContainerRef, static: true }) folderAddEditModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('share', { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('updateKeyTemplate', { read: ViewContainerRef, static: true }) updateKeyModalRef: ViewContainerRef;\n\n    favorites: boolean = false;\n    type: CipherType = null;\n    folderId: string = null;\n    collectionId: string = null;\n    showVerifyEmail = false;\n    showBrowserOutdated = false;\n    showUpdateKey = false;\n    showPremiumCallout = false;\n    showProviders = false;\n    deleted: boolean = false;\n    trashCleanupWarning: string = null;\n\n    constructor(private syncService: SyncService, private route: ActivatedRoute,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private i18nService: I18nService, private modalService: ModalService,\n        private tokenService: TokenService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone) { }\n\n    async ngOnInit() {\n        this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n        this.showBrowserOutdated = window.navigator.userAgent.indexOf('MSIE') !== -1;\n        this.trashCleanupWarning = this.i18nService.t(\n            this.platformUtilsService.isSelfHost() ? 'trashCleanupWarningSelfHosted' : 'trashCleanupWarning'\n        );\n\n        const queryParamsSub = this.route.queryParams.subscribe(async params => {\n            await this.syncService.fullSync(false);\n\n            this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n            const canAccessPremium = await this.userService.canAccessPremium();\n            this.showPremiumCallout = !this.showVerifyEmail && !canAccessPremium &&\n                !this.platformUtilsService.isSelfHost();\n\n            this.showProviders = (await this.userService.getAllProviders()).length > 0;\n\n            await Promise.all([\n                this.groupingsComponent.load(),\n                this.organizationsComponent.load(),\n            ]);\n\n            if (params == null) {\n                this.groupingsComponent.selectedAll = true;\n                await this.ciphersComponent.reload();\n            } else {\n                if (params.deleted) {\n                    this.groupingsComponent.selectedTrash = true;\n                    await this.filterDeleted();\n                } else if (params.favorites) {\n                    this.groupingsComponent.selectedFavorites = true;\n                    await this.filterFavorites();\n                } else if (params.type) {\n                    const t = parseInt(params.type, null);\n                    this.groupingsComponent.selectedType = t;\n                    await this.filterCipherType(t);\n                } else if (params.folderId) {\n                    this.groupingsComponent.selectedFolder = true;\n                    this.groupingsComponent.selectedFolderId = params.folderId;\n                    await this.filterFolder(params.folderId);\n                } else if (params.collectionId) {\n                    this.groupingsComponent.selectedCollectionId = params.collectionId;\n                    await this.filterCollection(params.collectionId);\n                } else {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                }\n            }\n\n            this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                this.ngZone.run(async () => {\n                    switch (message.command) {\n                        case 'syncCompleted':\n                            if (message.successfully) {\n                                await Promise.all([\n                                    this.groupingsComponent.load(),\n                                    this.organizationsComponent.load(),\n                                    this.ciphersComponent.load(this.ciphersComponent.filter),\n                                ]);\n                                this.changeDetectorRef.detectChanges();\n                            }\n                            break;\n                    }\n                });\n            });\n\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.reload();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterFavorites() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFavorites');\n        await this.ciphersComponent.reload(c => c.favorite);\n        this.clearFilters();\n        this.favorites = true;\n        this.go();\n    }\n\n    async filterDeleted() {\n        this.ciphersComponent.showAddNew = false;\n        this.ciphersComponent.deleted = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\n        await this.ciphersComponent.reload(null, true);\n        this.clearFilters();\n        this.deleted = true;\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        await this.ciphersComponent.reload(c => c.type === type);\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterFolder(folderId: string) {\n        this.ciphersComponent.showAddNew = true;\n        folderId = folderId === 'none' ? null : folderId;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFolder');\n        await this.ciphersComponent.reload(c => c.folderId === folderId);\n        this.clearFilters();\n        this.folderId = folderId == null ? 'none' : folderId;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        await this.ciphersComponent.reload(c => c.collectionIds != null &&\n            c.collectionIds.indexOf(collectionId) > -1);\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    async editCipherAttachments(cipher: CipherView) {\n        const canAccessPremium = await this.userService.canAccessPremium();\n        if (cipher.organizationId == null && !canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        } else if (cipher.organizationId != null) {\n            const org = await this.userService.getOrganization(cipher.organizationId);\n            if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n                this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n                return;\n            }\n        }\n\n        let madeAttachmentChanges = false;\n        const [modal] = await this.modalService.openViewRef(AttachmentsComponent, this.attachmentsModalRef, comp => {\n            comp.cipherId = cipher.id;\n            comp.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n            comp.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n            comp.onReuploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        });\n\n        modal.onClosed.subscribe(async () => {\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    async shareCipher(cipher: CipherView) {\n        const [modal] = await this.modalService.openViewRef(ShareComponent, this.shareModalRef, comp => {\n            comp.cipherId = cipher.id;\n            comp.onSharedCipher.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async editCipherCollections(cipher: CipherView) {\n        const [modal] = await this.modalService.openViewRef(CollectionsComponent, this.collectionsModalRef, comp => {\n            comp.cipherId = cipher.id;\n            comp.onSavedCollections.subscribe(async () => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n    }\n\n    async addFolder() {\n        const [modal] = await this.modalService.openViewRef(FolderAddEditComponent, this.folderAddEditModalRef, comp => {\n            comp.folderId = null;\n            comp.onSavedFolder.subscribe(async () => {\n                modal.close();\n                await this.groupingsComponent.loadFolders();\n            });\n        });\n    }\n\n    async editFolder(folderId: string) {\n        const [modal] = await this.modalService.openViewRef(FolderAddEditComponent, this.folderAddEditModalRef, comp => {\n            comp.folderId = folderId;\n            comp.onSavedFolder.subscribe(async () => {\n                modal.close();\n                await this.groupingsComponent.loadFolders();\n            });\n            comp.onDeletedFolder.subscribe(async () => {\n                modal.close();\n                await this.groupingsComponent.loadFolders();\n                await this.filterFolder('none');\n                this.groupingsComponent.selectedFolderId = null;\n            });\n        });\n    }\n\n    async addCipher() {\n        const component = await this.editCipher(null);\n        component.type = this.type;\n        component.folderId = this.folderId === 'none' ? null : this.folderId;\n        if (this.collectionId != null) {\n            const collection = this.groupingsComponent.collections.filter(c => c.id === this.collectionId);\n            if (collection.length > 0) {\n                component.organizationId = collection[0].organizationId;\n                component.collectionIds = [this.collectionId];\n            }\n        }\n    }\n\n    async editCipher(cipher: CipherView) {\n        const [modal, childComponent] = await this.modalService.openViewRef(AddEditComponent, this.cipherAddEditModalRef, comp => {\n            comp.cipherId = cipher == null ? null : cipher.id;\n            comp.onSavedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n            comp.onDeletedCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n            comp.onRestoredCipher.subscribe(async (c: CipherView) => {\n                modal.close();\n                await this.ciphersComponent.refresh();\n            });\n        });\n\n        return childComponent;\n    }\n\n    async cloneCipher(cipher: CipherView) {\n        const component = await this.editCipher(cipher);\n        component.cloneMode = true;\n    }\n\n    async updateKey() {\n        await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n    }\n\n    private clearFilters() {\n        this.folderId = null;\n        this.collectionId = null;\n        this.favorites = false;\n        this.type = null;\n        this.deleted = false;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                favorites: this.favorites ? true : null,\n                type: this.type,\n                folderId: this.folderId,\n                collectionId: this.collectionId,\n                deleted: this.deleted ? true : null,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <app-vault-groupings (onAllClicked)=\"clearGroupingFilters()\" (onFavoritesClicked)=\"filterFavorites()\" (onCipherTypeClicked)=\"filterCipherType($event)\" (onFolderClicked)=\"filterFolder($event.id)\" (onAddFolder)=\"addFolder()\" (onEditFolder)=\"editFolder($event.id)\" (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\" (onTrashClicked)=\"filterDeleted()\"> </app-vault-groupings> </div> <div class=\"col-6\"> <div class=\"page-header d-flex\"> <h1> {{'myVault' | i18n}} <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [deleted]=\"deleted\"> </app-vault-bulk-actions> <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addCipher()\" *ngIf=\"!deleted\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}} </button> </div> </div> <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"fa-warning\"> {{trashCleanupWarning}} </app-callout> <app-vault-ciphers (onCipherClicked)=\"editCipher($event)\" (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\" (onShareClicked)=\"shareCipher($event)\" (onCollectionsClicked)=\"editCipherCollections($event)\" (onCloneClicked)=\"cloneCipher($event)\"> </app-vault-ciphers> </div> <div class=\"col-3\"> <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateKeyTitle' | i18n}} </div> <div class=\"card-body\"> <p>{{'updateEncryptionKeyShortDesc' | i18n}}</p> <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\"> {{'updateEncryptionKey' | i18n}} </button> </div> </div> <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email> <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateBrowser' | i18n}} </div> <div class=\"card-body\"> <p>{{'updateBrowserDesc' | i18n}}</p> <a class=\"btn btn-block btn-outline-secondary\" target=\"_blank\" href=\"https://browser-update.org/update-browser.html\" rel=\"noopener\"> {{'updateBrowser' | i18n}} </a> </div> </div> <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\"> <div class=\"card-header bg-success text-white\"> <i class=\"fa fa-star fa-fw\" aria-hidden=\"true\"></i> {{'goPremium' | i18n}} </div> <div class=\"card-body\"> <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p> <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/premium\"> {{'goPremium' | i18n}} </a> </div> </div> <div class=\"card\"> <div class=\"card-header d-flex\"> {{'organizations' | i18n}} <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/what-is-an-organization/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <app-organizations [vault]=\"true\"></app-organizations> </div> </div> <div class=\"card mt-4\" *ngIf=\"showProviders\"> <div class=\"card-header d-flex\"> {{'providers' | i18n}} <a class=\"ml-auto\" href=\"https://bitwarden.com/help/article/about-providers/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <app-providers vault=\"true\"></app-providers> </div> </div> </div> </div> </div> <ng-template #attachments></ng-template> <ng-template #folderAddEdit></ng-template> <ng-template #cipherAddEdit></ng-template> <ng-template #share></ng-template> <ng-template #collections></ng-template> <ng-template #updateKeyTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class DisableSendPolicy extends BasePolicy {\n    name = 'disableSend';\n    description = 'disableSendPolicyDesc';\n    type = PolicyType.DisableSend;\n    component = DisableSendPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-disable-send',\n    templateUrl: 'disable-send.component.html',\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {\n}\n","<app-callout type=\"warning\"> {{'disableSendExemption' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class MasterPasswordPolicy extends BasePolicy {\n    name = 'masterPass';\n    description = 'masterPassPolicyDesc';\n    type = PolicyType.MasterPassword;\n    component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-master-password',\n    templateUrl: 'master-password.component.html',\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n\n    data = this.fb.group({\n        minComplexity: [null],\n        minLength: [null],\n        requireUpper: [null],\n        requireLower: [null],\n        requireNumbers: [null],\n        requireSpecial: [null],\n    });\n\n    passwordScores: { name: string; value: number; }[];\n\n    constructor(private fb: FormBuilder, i18nService: I18nService) {\n        super();\n\n        this.passwordScores = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('weak') + ' (0)', value: 0 },\n            { name: i18nService.t('weak') + ' (1)', value: 1 },\n            { name: i18nService.t('weak') + ' (2)', value: 2 },\n            { name: i18nService.t('good') + ' (3)', value: 3 },\n            { name: i18nService.t('strong') + ' (4)', value: 4 },\n        ];\n    }\n}\n","<div [formGroup]=\"data\"> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"minComplexity\">{{'minComplexityScore' | i18n}}</label> <select id=\"minComplexity\" name=\"minComplexity\" formControlName=\"minComplexity\" class=\"form-control\"> <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> <div class=\"col-6 form-group\"> <label for=\"minLength\">{{'minLength' | i18n}}</label> <input id=\"minLength\" class=\"form-control\" type=\"number\" min=\"8\" name=\"minLength\" formControlName=\"minLength\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"requireUpper\" name=\"requireUpper\" formControlName=\"requireUpper\"> <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"requireLower\" name=\"requireLower\" formControlName=\"requireLower\"> <label class=\"form-check-label\" for=\"requireLower\">a-z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"requireNumbers\" name=\"requireNumbers\" formControlName=\"requireNumbers\"> <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"requireSpecial\" name=\"requireSpecial\" formControlName=\"requireSpecial\"> <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n    name = 'passwordGenerator';\n    description = 'passwordGeneratorPolicyDesc';\n    type = PolicyType.PasswordGenerator;\n    component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-password-generator',\n    templateUrl: 'password-generator.component.html',\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n\n    data = this.fb.group({\n        defaultType: [null],\n        minLength: [null],\n        useUpper: [null],\n        useLower: [null],\n        useNumbers: [null],\n        useSpecial: [null],\n        minNumbers: [null],\n        minSpecial: [null],\n        minNumberWords: [null],\n        capitalize: [null],\n        includeNumber: [null],\n    });\n\n    defaultTypes: { name: string; value: string; }[];\n\n    constructor(private fb: FormBuilder, i18nService: I18nService) {\n        super();\n\n        this.defaultTypes = [\n            { name: i18nService.t('userPreference'), value: null },\n            { name: i18nService.t('password'), value: 'password' },\n            { name: i18nService.t('passphrase'), value: 'passphrase' },\n        ];\n    }\n}\n","<div [formGroup]=\"data\"> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group mb-0\"> <label for=\"defaultType\">{{'defaultType' | i18n}}</label> <select id=\"defaultType\" name=\"defaultType\" formControlName=\"defaultType\" class=\"form-control\"> <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <h3 class=\"mt-4\">{{'password' | i18n}}</h3> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"minLength\">{{'minLength' | i18n}}</label> <input id=\"minLength\" class=\"form-control\" type=\"number\" name=\"minLength\" min=\"5\" max=\"128\" formControlName=\"minLength\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"minNumbers\">{{'minNumbers' | i18n}}</label> <input id=\"minNumbers\" class=\"form-control\" type=\"number\" name=\"minNumbers\" min=\"0\" max=\"9\" formControlName=\"minNumbers\"> </div> <div class=\"col-6 form-group\"> <label for=\"minSpecial\">{{'minSpecial' | i18n}}</label> <input id=\"minSpecial\" class=\"form-control\" type=\"number\" name=\"minSpecial\" min=\"0\" max=\"9\" formControlName=\"minSpecial\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"useUpper\" formControlName=\"useUpper\" name=\"useUpper\"> <label class=\"form-check-label\" for=\"useUpper\">A-Z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"useLower\" name=\"useLower\" formControlName=\"useLower\"> <label class=\"form-check-label\" for=\"useLower\">a-z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"useNumbers\" name=\"useNumbers\" formControlName=\"useNumbers\"> <label class=\"form-check-label\" for=\"useNumbers\">0-9</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"useSpecial\" name=\"useSpecial\" formControlName=\"useSpecial\"> <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label> </div> <h3 class=\"mt-4\">{{'passphrase' | i18n}}</h3> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"minNumberWords\">{{'minimumNumberOfWords' | i18n}}</label> <input id=\"minNumberWords\" class=\"form-control\" type=\"number\" name=\"minNumberWords\" min=\"3\" max=\"20\" formControlName=\"minNumberWords\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"capitalize\" name=\"capitalize\" formControlName=\"capitalize\"> <label class=\"form-check-label\" for=\"capitalize\">{{'capitalize' | i18n}}</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"includeNumber\" name=\"includeNumber\" formControlName=\"includeNumber\"> <label class=\"form-check-label\" for=\"includeNumber\">{{'includeNumber' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n    name = 'personalOwnership';\n    description = 'personalOwnershipPolicyDesc';\n    type = PolicyType.PersonalOwnership;\n    component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-personal-ownership',\n    templateUrl: 'personal-ownership.component.html',\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {\n}\n","<app-callout type=\"warning\"> {{'personalOwnershipExemption' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'personalOwnershipCheckboxDesc' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class RequireSsoPolicy extends BasePolicy {\n    name = 'requireSso';\n    description = 'requireSsoPolicyDesc';\n    type = PolicyType.RequireSso;\n    component = RequireSsoPolicyComponent;\n\n    display(organization: Organization) {\n        return organization.useSso;\n    }\n}\n\n@Component({\n    selector: 'policy-require-sso',\n    templateUrl: 'require-sso.component.html',\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n    constructor(private i18nService: I18nService) {\n        super();\n    }\n\n    buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n        const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n        if (this.enabled.value && !singleOrgEnabled) {\n            throw new Error(this.i18nService.t('requireSsoPolicyReqError'));\n        }\n\n        return super.buildRequest(policiesEnabledMap);\n    }\n}\n","<app-callout type=\"tip\" title=\"{{'prerequisite' | i18n}}\"> {{'requireSsoPolicyReq' | i18n}} </app-callout> <app-callout type=\"warning\"> {{'requireSsoExemption' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class ResetPasswordPolicy extends BasePolicy {\n    name = 'resetPasswordPolicy';\n    description = 'resetPasswordPolicyDescription';\n    type = PolicyType.ResetPassword;\n    component = ResetPasswordPolicyComponent;\n\n    display(organization: Organization) {\n        return organization.useResetPassword;\n    }\n}\n\n@Component({\n    selector: 'policy-reset-password',\n    templateUrl: 'reset-password.component.html',\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n\n    data = this.fb.group({\n        autoEnrollEnabled: false,\n    });\n\n    defaultTypes: { name: string; value: string; }[];\n\n    constructor(private fb: FormBuilder) {\n        super();\n    }\n}\n","<app-callout type=\"warning\"> {{'resetPasswordPolicyWarning' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div [formGroup]=\"data\"> <h3 class=\"mt-4\">{{'resetPasswordPolicyAutoEnroll' | i18n}}</h3> <p>{{'resetPasswordPolicyAutoEnrollDescription' | i18n}}</p> <app-callout type=\"warning\"> {{'resetPasswordPolicyAutoEnrollWarning' | i18n}} </app-callout> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"autoEnrollEnabled\" name=\"AutoEnrollEnabled\" formControlName=\"autoEnrollEnabled\"> <label class=\"form-check-label\" for=\"autoEnrollEnabled\"> {{'resetPasswordPolicyAutoEnrollCheckbox' | i18n }} </label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class SendOptionsPolicy extends BasePolicy {\n    name = 'sendOptions';\n    description = 'sendOptionsPolicyDesc';\n    type = PolicyType.SendOptions;\n    component = SendOptionsPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-send-options',\n    templateUrl: 'send-options.component.html',\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n\n    data = this.fb.group({\n        disableHideEmail: false,\n    });\n\n    constructor(private fb: FormBuilder) {\n        super();\n    }\n}\n","<app-callout type=\"warning\"> {{'sendOptionsExemption' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div [formGroup]=\"data\"> <h3 class=\"mt-4\">{{'options' | i18n}}</h3> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"disableHideEmail\" name=\"DisableHideEmail\" formControlName=\"disableHideEmail\"> <label class=\"form-check-label\" for=\"disableHideEmail\">{{'disableHideEmail' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class SingleOrgPolicy extends BasePolicy {\n    name = 'singleOrg';\n    description = 'singleOrgDesc';\n    type = PolicyType.SingleOrg;\n    component = SingleOrgPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-single-org',\n    templateUrl: 'single-org.component.html',\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n\n    constructor(private i18nService: I18nService) {\n        super();\n    }\n\n    buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n        if (!this.enabled.value) {\n            if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n                throw new Error(this.i18nService.t('disableRequiredError', this.i18nService.t('requireSso')));\n            }\n\n            if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n                throw new Error(this.i18nService.t('disableRequiredError', this.i18nService.t('maximumVaultTimeoutLabel')));\n            }\n        }\n\n        return super.buildRequest(policiesEnabledMap);\n    }\n}\n","<app-callout type=\"warning\"> {{'singleOrgPolicyWarning' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { BasePolicy, BasePolicyComponent } from './base-policy.component';\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n    name = 'twoStepLogin';\n    description = 'twoStepLoginPolicyDesc';\n    type = PolicyType.TwoFactorAuthentication;\n    component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-two-factor-authentication',\n    templateUrl: 'two-factor-authentication.component.html',\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {\n}\n","<app-callout type=\"warning\"> {{'twoStepLoginPolicyWarning' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { BasePolicy, BasePolicyComponent } from 'src/app/organizations/policies/base-policy.component';\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n    name = 'disablePersonalVaultExport';\n    description = 'disablePersonalVaultExportDesc';\n    type = PolicyType.DisablePersonalVaultExport;\n    component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-disable-personal-vault-export',\n    templateUrl: 'disable-personal-vault-export.component.html',\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {\n}\n","<div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> ","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { BasePolicy, BasePolicyComponent } from 'src/app/organizations/policies/base-policy.component';\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n    name = 'maximumVaultTimeout';\n    description = 'maximumVaultTimeoutDesc';\n    type = PolicyType.MaximumVaultTimeout;\n    component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n    selector: 'policy-maximum-timeout',\n    templateUrl: 'maximum-vault-timeout.component.html',\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n\n    data = this.fb.group({\n        hours: [null],\n        minutes: [null],\n    });\n\n    constructor(private fb: FormBuilder, private i18nService: I18nService) {\n        super();\n    }\n\n    loadData() {\n        const minutes = this.policyResponse.data?.minutes;\n\n        if (minutes == null) {\n            return;\n        }\n\n        this.data.patchValue({\n            hours: Math.floor(minutes / 60),\n            minutes: minutes % 60,\n        });\n    }\n\n    buildRequestData() {\n        if (this.data.value.hours == null && this.data.value.minutes == null) {\n            return null;\n        }\n\n        return {\n            minutes: this.data.value.hours * 60 + this.data.value.minutes,\n        };\n    }\n\n    buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n        const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n        if (this.enabled.value && !singleOrgEnabled) {\n            throw new Error(this.i18nService.t('requireSsoPolicyReqError'));\n        }\n\n        const data = this.buildRequestData();\n        if (data?.minutes == null || data?.minutes <= 0) {\n            throw new Error(this.i18nService.t('invalidMaximumVaultTimeout'));\n        }\n\n        return super.buildRequest(policiesEnabledMap);\n    }\n}\n","<app-callout type=\"tip\" title=\"{{'prerequisite' | i18n}}\"> {{'requireSsoPolicyReq' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div [formGroup]=\"data\"> <div class=\"form-group\"> <label for=\"hours\">{{'maximumVaultTimeoutLabel' | i18n}}</label> <div class=\"row\"> <div class=\"col-6\"> <input id=\"hours\" class=\"form-control\" type=\"number\" min=\"0\" name=\"hours\" formControlName=\"hours\"> <small>{{'hours' | i18n }}</small> </div> <div class=\"col-6\"> <input id=\"minutes\" class=\"form-control\" type=\"number\" min=\"0\" max=\"59\" name=\"minutes\" formControlName=\"minutes\"> <small>{{'minutes' | i18n }}</small> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { OrganizationSsoRequest } from 'jslib-common/models/request/organization/organizationSsoRequest';\n\n@Component({\n    selector: 'app-org-manage-sso',\n    templateUrl: 'sso.component.html',\n})\nexport class SsoComponent implements OnInit {\n\n    samlSigningAlgorithms = [\n        'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256',\n        'http://www.w3.org/2000/09/xmldsig#rsa-sha384',\n        'http://www.w3.org/2000/09/xmldsig#rsa-sha512',\n        'http://www.w3.org/2000/09/xmldsig#rsa-sha1',\n    ];\n\n    loading = true;\n    organizationId: string;\n    formPromise: Promise<any>;\n\n    callbackPath: string;\n    signedOutCallbackPath: string;\n    spEntityId: string;\n    spMetadataUrl: string;\n    spAcsUrl: string;\n\n    enabled = this.fb.control(false);\n    data = this.fb.group({\n        configType: [],\n\n        // OpenId\n        authority: [],\n        clientId: [],\n        clientSecret: [],\n        metadataAddress: [],\n        redirectBehavior: [],\n        getClaimsFromUserInfoEndpoint: [],\n        additionalScopes: [],\n        additionalUserIdClaimTypes: [],\n        additionalEmailClaimTypes: [],\n        additionalNameClaimTypes: [],\n        acrValues: [],\n        expectedReturnAcrValue: [],\n\n        // SAML\n        spNameIdFormat: [],\n        spOutboundSigningAlgorithm: [],\n        spSigningBehavior: [],\n        spMinIncomingSigningAlgorithm: [],\n        spWantAssertionsSigned: [],\n        spValidateCertificates: [],\n\n        idpEntityId: [],\n        idpBindingType: [],\n        idpSingleSignOnServiceUrl: [],\n        idpSingleLogoutServiceUrl: [],\n        idpArtifactResolutionServiceUrl: [],\n        idpX509PublicCert: [],\n        idpOutboundSigningAlgorithm: [],\n        idpAllowUnsolicitedAuthnResponse: [],\n        idpDisableOutboundLogoutRequests: [],\n        idpWantAuthnRequestsSigned: [],\n    });\n\n    constructor(private fb: FormBuilder, private route: ActivatedRoute, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n        });\n    }\n\n    async load() {\n        const ssoSettings = await this.apiService.getOrganizationSso(this.organizationId);\n\n        this.data.patchValue(ssoSettings.data);\n        this.enabled.setValue(ssoSettings.enabled);\n\n        this.callbackPath = ssoSettings.urls.callbackPath;\n        this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n        this.spEntityId = ssoSettings.urls.spEntityId;\n        this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n        this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n        this.loading = false;\n    }\n\n    copy(value: string) {\n        this.platformUtilsService.copyToClipboard(value);\n    }\n\n    launchUri(url: string) {\n        this.platformUtilsService.launchUri(url);\n    }\n\n    async submit() {\n        const request = new OrganizationSsoRequest();\n        request.enabled = this.enabled.value;\n        request.data = this.data.value;\n\n        this.formPromise = this.apiService.postOrganizationSso(this.organizationId, request);\n\n        const response = await this.formPromise;\n        this.data.patchValue(response.data);\n        this.enabled.setValue(response.enabled);\n\n        this.formPromise = null;\n        this.platformUtilsService.showToast('success', null, this.i18nService.t('ssoSettingsSaved'));\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'singleSignOn' | i18n}}</h1> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <form #form (ngSubmit)=\"submit()\" [formGroup]=\"data\" [appApiAction]=\"formPromise\" *ngIf=\"!loading\"> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [formControl]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label> </div> </div> <div class=\"form-group\"> <label for=\"type\">{{'type' | i18n}}</label> <select class=\"form-control\" id=\"type\" formControlName=\"configType\"> <option value=\"0\" disabled=\"disabled\">{{'selectType' | i18n}}</option> <option value=\"1\">OpenID Connect</option> <option value=\"2\">SAML 2.0</option> </select> </div> <div *ngIf=\"data.value.configType == 1\"> <div class=\"config-section\"> <h2>{{'openIdConnectConfig' | i18n}}</h2> <div class=\"form-group\"> <label>{{'callbackPath' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" readonly=\"readonly\" [value]=\"callbackPath\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(callbackPath)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"form-group\"> <label>{{'signedOutCallbackPath' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" readonly=\"readonly\" [value]=\"signedOutCallbackPath\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(signedOutCallbackPath)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"form-group\"> <label>{{'authority' | i18n}}</label> <input class=\"form-control\" formControlName=\"authority\"> </div> <div class=\"form-group\"> <label>{{'clientId' | i18n}}</label> <input class=\"form-control\" formControlName=\"clientId\"> </div> <div class=\"form-group\"> <label>{{'clientSecret' | i18n}}</label> <input class=\"form-control\" formControlName=\"clientSecret\"> </div> <div class=\"form-group\"> <label>{{'metadataAddress' | i18n}}</label> <input class=\"form-control\" formControlName=\"metadataAddress\"> </div> <div class=\"form-group\"> <label>{{'oidcRedirectBehavior' | i18n}}</label> <select class=\"form-control\" formControlName=\"redirectBehavior\"> <option value=\"0\">Redirect GET</option> <option value=\"1\">Form POST</option> </select> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"getClaimsFromUserInfoEndpoint\" formControlName=\"getClaimsFromUserInfoEndpoint\"> <label class=\"form-check-label\" for=\"getClaimsFromUserInfoEndpoint\"> {{'getClaimsFromUserInfoEndpoint' | i18n}} </label> </div> </div> <div class=\"form-group\"> <label>{{'additionalScopes' | i18n}}</label> <input class=\"form-control\" formControlName=\"additionalScopes\"> </div> <div class=\"form-group\"> <label>{{'additionalUserIdClaimTypes' | i18n}}</label> <input class=\"form-control\" formControlName=\"additionalUserIdClaimTypes\"> </div> <div class=\"form-group\"> <label>{{'additionalEmailClaimTypes' | i18n}}</label> <input class=\"form-control\" formControlName=\"additionalEmailClaimTypes\"> </div> <div class=\"form-group\"> <label>{{'additionalNameClaimTypes' | i18n}}</label> <input class=\"form-control\" formControlName=\"additionalNameClaimTypes\"> </div> <div class=\"form-group\"> <label>{{'acrValues' | i18n}}</label> <input class=\"form-control\" formControlName=\"acrValues\"> </div> <div class=\"form-group\"> <label>{{'expectedReturnAcrValue' | i18n}}</label> <input class=\"form-control\" formControlName=\"expectedReturnAcrValue\"> </div> </div> </div> <div *ngIf=\"data.value.configType == 2\"> <div class=\"config-section\"> <h2>{{'samlSpConfig' | i18n}}</h2> <div class=\"form-group\"> <label>{{'spEntityId' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" readonly=\"readonly\" [value]=\"spEntityId\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(spEntityId)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"form-group\"> <label>{{'spMetadataUrl' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" readonly=\"readonly\" [value]=\"spMetadataUrl\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'launch' | i18n}}\" (click)=\"launchUri(spMetadataUrl)\"> <i class=\"fa fa-lg fa-external-link\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(spMetadataUrl)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"form-group\"> <label>{{'spAcsUrl' | i18n}}</label> <div class=\"input-group\"> <input class=\"form-control\" readonly=\"readonly\" [value]=\"spAcsUrl\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(spAcsUrl)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"form-group\"> <label>{{'spNameIdFormat' | i18n}}</label> <select class=\"form-control\" formControlName=\"spNameIdFormat\"> <option value=\"0\">Not Configured</option> <option value=\"1\">Unspecified</option> <option value=\"2\">Email Address</option> <option value=\"3\">X.509 Subject Name</option> <option value=\"4\">Windows Domain Qualified Name</option> <option value=\"5\">Kerberos Principal Name</option> <option value=\"6\">Entity Identifier</option> <option value=\"7\">Persistent</option> <option value=\"8\">Transient</option> </select> </div> <div class=\"form-group\"> <label>{{'spOutboundSigningAlgorithm' | i18n}}</label> <select class=\"form-control\" formControlName=\"spOutboundSigningAlgorithm\"> <option *ngFor=\"let o of samlSigningAlgorithms\" [ngValue]=\"o\">{{o}}</option> </select> </div> <div class=\"form-group\"> <label>{{'spSigningBehavior' | i18n}}</label> <select class=\"form-control\" formControlName=\"spSigningBehavior\"> <option value=\"0\">If IdP Wants Authn Requests Signed</option> <option value=\"1\">Always</option> <option value=\"3\">Never</option> </select> </div> <div class=\"form-group\"> <label>{{'spMinIncomingSigningAlgorithm' | i18n}}</label> <select class=\"form-control\" formControlName=\"spMinIncomingSigningAlgorithm\"> <option *ngFor=\"let o of samlSigningAlgorithms\" [ngValue]=\"o\">{{o}}</option> </select> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"spWantAssertionsSigned\" formControlName=\"spWantAssertionsSigned\"> <label class=\"form-check-label\" for=\"spWantAssertionsSigned\">{{'spWantAssertionsSigned' | i18n}}</label> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"spValidateCertificates\" formControlName=\"spValidateCertificates\"> <label class=\"form-check-label\" for=\"spValidateCertificates\">{{'spValidateCertificates' | i18n}}</label> </div> </div> </div> <div class=\"config-section\"> <h2>{{'samlIdpConfig' | i18n}}</h2> <div class=\"form-group\"> <label>{{'idpEntityId' | i18n}}</label> <input class=\"form-control\" formControlName=\"idpEntityId\"> </div> <div class=\"form-group\"> <label>{{'idpBindingType' | i18n}}</label> <select class=\"form-control\" formControlName=\"idpBindingType\"> <option value=\"1\">Redirect</option> <option value=\"2\">HTTP POST</option> <option value=\"4\">Artifact</option> </select> </div> <div class=\"form-group\"> <label>{{'idpSingleSignOnServiceUrl' | i18n}}</label> <input class=\"form-control\" formControlName=\"idpSingleSignOnServiceUrl\"> </div> <div class=\"form-group\"> <label>{{'idpSingleLogoutServiceUrl' | i18n}}</label> <input class=\"form-control\" formControlName=\"idpSingleLogoutServiceUrl\"> </div> <div class=\"form-group\"> <label>{{'idpArtifactResolutionServiceUrl' | i18n}}</label> <input class=\"form-control\" formControlName=\"idpArtifactResolutionServiceUrl\"> </div> <div class=\"form-group\"> <label>{{'idpX509PublicCert' | i18n}}</label> <textarea formControlName=\"idpX509PublicCert\" class=\"form-control form-control-sm text-monospace\" rows=\"6\"></textarea> </div> <div class=\"form-group\"> <label>{{'idpOutboundSigningAlgorithm' | i18n}}</label> <select class=\"form-control\" formControlName=\"idpOutboundSigningAlgorithm\"> <option *ngFor=\"let o of samlSigningAlgorithms\" [ngValue]=\"o\">{{o}}</option> </select> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"idpAllowUnsolicitedAuthnResponse\" formControlName=\"idpAllowUnsolicitedAuthnResponse\"> <label class=\"form-check-label\" for=\"idpAllowUnsolicitedAuthnResponse\"> {{'idpAllowUnsolicitedAuthnResponse' | i18n}} </label> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"idpDisableOutboundLogoutRequests\" formControlName=\"idpDisableOutboundLogoutRequests\"> <label class=\"form-check-label\" for=\"idpDisableOutboundLogoutRequests\"> {{'idpDisableOutboundLogoutRequests' | i18n}} </label> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"idpWantAuthnRequestsSigned\" formControlName=\"idpWantAuthnRequestsSigned\"> <label class=\"form-check-label\" for=\"idpWantAuthnRequestsSigned\"> {{'idpWantAuthnRequestsSigned' | i18n}} </label> </div> </div> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class LockGuardService implements CanActivate {\n\n    protected homepage = 'vault';\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            if (locked) {\n                return true;\n            } else {\n                this.router.navigate([this.homepage]);\n                return false;\n            }\n        }\n\n        this.router.navigate(['']);\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n\n    protected homepage = 'vault';\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            if (locked) {\n                this.router.navigate(['lock']);\n            } else {\n                this.router.navigate([this.homepage]);\n            }\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class CollectionResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n    readOnly: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.readOnly = this.getResponseProperty('ReadOnly') || false;\n    }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n    groups: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const groups = this.getResponseProperty('Groups');\n        if (groups != null) {\n            this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { GlobalDomainResponse } from './globalDomainResponse';\n\nexport class DomainsResponse extends BaseResponse {\n    equivalentDomains: string[][];\n    globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.equivalentDomains = this.getResponseProperty('EquivalentDomains');\n        const globalEquivalentDomains = this.getResponseProperty('GlobalEquivalentDomains');\n        if (globalEquivalentDomains != null) {\n            this.globalEquivalentDomains = globalEquivalentDomains.map((d: any) => new GlobalDomainResponse(d));\n        } else {\n            this.globalEquivalentDomains = [];\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class FolderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { PlanResponse } from './planResponse';\n\nimport { PlanType } from '../../enums/planType';\n\nexport class OrganizationResponse extends BaseResponse {\n    id: string;\n    identifier: string;\n    name: string;\n    businessName: string;\n    businessAddress1: string;\n    businessAddress2: string;\n    businessAddress3: string;\n    businessCountry: string;\n    businessTaxNumber: string;\n    billingEmail: string;\n    plan: PlanResponse;\n    planType: PlanType;\n    seats: number;\n    maxAutoscaleSeats: number;\n    maxCollections: number;\n    maxStorageGb: number;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useResetPassword: boolean;\n    hasPublicAndPrivateKeys: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.name = this.getResponseProperty('Name');\n        this.businessName = this.getResponseProperty('BusinessName');\n        this.businessAddress1 = this.getResponseProperty('BusinessAddress1');\n        this.businessAddress2 = this.getResponseProperty('BusinessAddress2');\n        this.businessAddress3 = this.getResponseProperty('BusinessAddress3');\n        this.businessCountry = this.getResponseProperty('BusinessCountry');\n        this.businessTaxNumber = this.getResponseProperty('BusinessTaxNumber');\n        this.billingEmail = this.getResponseProperty('BillingEmail');\n        const plan = this.getResponseProperty('Plan');\n        this.plan = plan == null ? null : new PlanResponse(plan);\n        this.planType = this.getResponseProperty('PlanType');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxAutoscaleSeats = this.getResponseProperty('MaxAutoscaleSeats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useResetPassword = this.getResponseProperty('UseResetPassword');\n        this.hasPublicAndPrivateKeys = this.getResponseProperty('HasPublicAndPrivateKeys');\n    }\n}\n","import { PlanType } from '../../enums/planType';\nimport { ProductType } from '../../enums/productType';\n\nimport { BaseResponse } from './baseResponse';\n\nexport class PlanResponse extends BaseResponse {\n    type: PlanType;\n    product: ProductType;\n    name: string;\n    isAnnual: boolean;\n    nameLocalizationKey: string;\n    descriptionLocalizationKey: string;\n    canBeUsedByBusiness: boolean;\n    baseSeats: number;\n    baseStorageGb: number;\n    maxCollections: number;\n    maxUsers: number;\n\n    hasAdditionalSeatsOption: boolean;\n    maxAdditionalSeats: number;\n    hasAdditionalStorageOption: boolean;\n    maxAdditionalStorage: number;\n    hasPremiumAccessOption: boolean;\n    trialPeriodDays: number;\n\n    hasSelfHost: boolean;\n    hasPolicies: boolean;\n    hasGroups: boolean;\n    hasDirectory: boolean;\n    hasEvents: boolean;\n    hasTotp: boolean;\n    has2fa: boolean;\n    hasApi: boolean;\n    hasSso: boolean;\n    hasResetPassword: boolean;\n    usersGetPremium: boolean;\n\n    upgradeSortOrder: number;\n    displaySortOrder: number;\n    legacyYear: number;\n    disabled: boolean;\n\n    stripePlanId: string;\n    stripeSeatPlanId: string;\n    stripeStoragePlanId: string;\n    stripePremiumAccessPlanId: string;\n    basePrice: number;\n    seatPrice: number;\n    additionalStoragePricePerGb: number;\n    premiumAccessOptionPrice: number;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.product = this.getResponseProperty('Product');\n        this.name = this.getResponseProperty('Name');\n        this.isAnnual = this.getResponseProperty('IsAnnual');\n        this.nameLocalizationKey = this.getResponseProperty('NameLocalizationKey');\n        this.descriptionLocalizationKey = this.getResponseProperty('DescriptionLocalizationKey');\n        this.canBeUsedByBusiness = this.getResponseProperty('CanBeUsedByBusiness');\n        this.baseSeats = this.getResponseProperty('BaseSeats');\n        this.baseStorageGb = this.getResponseProperty('BaseStorageGb');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxUsers = this.getResponseProperty('MaxUsers');\n        this.hasAdditionalSeatsOption = this.getResponseProperty('HasAdditionalSeatsOption');\n        this.maxAdditionalSeats = this.getResponseProperty('MaxAdditionalSeats');\n        this.hasAdditionalStorageOption = this.getResponseProperty('HasAdditionalStorageOption');\n        this.maxAdditionalStorage = this.getResponseProperty('MaxAdditionalStorage');\n        this.hasPremiumAccessOption = this.getResponseProperty('HasPremiumAccessOption');\n        this.trialPeriodDays = this.getResponseProperty('TrialPeriodDays');\n        this.hasSelfHost = this.getResponseProperty('HasSelfHost');\n        this.hasPolicies = this.getResponseProperty('HasPolicies');\n        this.hasGroups = this.getResponseProperty('HasGroups');\n        this.hasDirectory = this.getResponseProperty('HasDirectory');\n        this.hasEvents = this.getResponseProperty('HasEvents');\n        this.hasTotp = this.getResponseProperty('HasTotp');\n        this.has2fa = this.getResponseProperty('Has2fa');\n        this.hasApi = this.getResponseProperty('HasApi');\n        this.hasSso = this.getResponseProperty('HasSso');\n        this.hasResetPassword = this.getResponseProperty('HasResetPassword');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.upgradeSortOrder = this.getResponseProperty('UpgradeSortOrder');\n        this.displaySortOrder = this.getResponseProperty('SortOrder');\n        this.legacyYear = this.getResponseProperty('LegacyYear');\n        this.disabled = this.getResponseProperty('Disabled');\n        this.stripePlanId = this.getResponseProperty('StripePlanId');\n        this.stripeSeatPlanId = this.getResponseProperty('StripeSeatPlanId');\n        this.stripeStoragePlanId = this.getResponseProperty('StripeStoragePlanId');\n        this.stripePremiumAccessPlanId = this.getResponseProperty('StripePremiumAccessPlanId');\n        this.basePrice = this.getResponseProperty('BasePrice');\n        this.seatPrice = this.getResponseProperty('SeatPrice');\n        this.additionalStoragePricePerGb = this.getResponseProperty('AdditionalStoragePricePerGb');\n        this.premiumAccessOptionPrice = this.getResponseProperty('PremiumAccessOptionPrice');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SubscriptionResponse extends BaseResponse {\n    storageName: string;\n    storageGb: number;\n    maxStorageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    license: any;\n    expiration: string;\n    usingInAppPurchase: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.license = this.getResponseProperty('License');\n        this.expiration = this.getResponseProperty('Expiration');\n        this.usingInAppPurchase = this.getResponseProperty('UsingInAppPurchase');\n        const subscription = this.getResponseProperty('Subscription');\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n    trialStartDate: string;\n    trialEndDate: string;\n    periodStartDate: string;\n    periodEndDate: string;\n    cancelledDate: string;\n    cancelAtEndDate: boolean;\n    status: string;\n    cancelled: boolean;\n    items: BillingSubscriptionItemResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.trialEndDate = this.getResponseProperty('TrialStartDate');\n        this.trialEndDate = this.getResponseProperty('TrialEndDate');\n        this.periodStartDate = this.getResponseProperty('PeriodStartDate');\n        this.periodEndDate = this.getResponseProperty('PeriodEndDate');\n        this.cancelledDate = this.getResponseProperty('CancelledDate');\n        this.cancelAtEndDate = this.getResponseProperty('CancelAtEndDate');\n        this.status = this.getResponseProperty('Status');\n        this.cancelled = this.getResponseProperty('Cancelled');\n        const items = this.getResponseProperty('Items');\n        if (items != null) {\n            this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n        }\n    }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n    name: string;\n    amount: number;\n    quantity: number;\n    interval: string;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.amount = this.getResponseProperty('Amount');\n        this.quantity = this.getResponseProperty('Quantity');\n        this.interval = this.getResponseProperty('Interval');\n    }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { Utils } from '../../misc/utils';\nimport { BaseResponse } from './baseResponse';\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n    enabled: boolean;\n    keys: KeyResponse[];\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        const keys = this.getResponseProperty('Keys');\n        this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n    }\n}\n\nexport class KeyResponse extends BaseResponse {\n    name: string;\n    id: number;\n    migrated: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.id = this.getResponseProperty('Id');\n        this.migrated = this.getResponseProperty('Migrated');\n    }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n    attestation?: AttestationConveyancePreference;\n    authenticatorSelection?: AuthenticatorSelectionCriteria;\n    challenge: BufferSource;\n    excludeCredentials?: PublicKeyCredentialDescriptor[];\n    extensions?: AuthenticationExtensionsClientInputs;\n    pubKeyCredParams: PublicKeyCredentialParameters[];\n    rp: PublicKeyCredentialRpEntity;\n    timeout?: number;\n    user: PublicKeyCredentialUserEntity;\n\n    constructor(response: any) {\n        super(response);\n        this.attestation = this.getResponseProperty('attestation');\n        this.authenticatorSelection = this.getResponseProperty('authenticatorSelection');\n        this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty('challenge'));\n        this.excludeCredentials = this.getResponseProperty('excludeCredentials').map((c: any) => {\n            c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n            return c;\n        });\n        this.extensions = this.getResponseProperty('extensions');\n        this.pubKeyCredParams = this.getResponseProperty('pubKeyCredParams');\n        this.rp = this.getResponseProperty('rp');\n        this.timeout = this.getResponseProperty('timeout');\n\n        const user = this.getResponseProperty('user');\n        user.id = Utils.fromUrlB64ToArray(user.id);\n\n        this.user = user;\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n    return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n        const originalMethod: () => Promise<any> = descriptor.value;\n        const caches = new Map<any, Map<string, Promise<any>>>();\n\n        const getCache = (obj: any) => {\n            let cache = caches.get(obj);\n            if (cache != null) {\n                return cache;\n            }\n            cache = new Map<string, Promise<any>>();\n            caches.set(obj, cache);\n            return cache;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const cache = getCache(this);\n                const argsCacheKey = cacheKey(args);\n                let response = cache.get(argsCacheKey);\n                if (response != null) {\n                    return response;\n                }\n\n                const onFinally = () => {\n                    cache.delete(argsCacheKey);\n                    if (cache.size === 0) {\n                        caches.delete(this);\n                    }\n                };\n                response = originalMethod.apply(this, args).then((val: any) => {\n                    onFinally();\n                    return val;\n                }).catch((err: any) => {\n                    onFinally();\n                    throw err;\n                });\n\n                cache.set(argsCacheKey, response);\n                return response;\n            },\n        };\n    };\n}\n","import {\n    ITreeNodeObject,\n    TreeNode,\n} from '../models/domain/treeNode';\n\nexport class ServiceUtils {\n    static nestedTraverse(nodeTree: TreeNode<ITreeNodeObject>[], partIndex: number, parts: string[],\n        obj: ITreeNodeObject, parent: ITreeNodeObject, delimiter: string) {\n        if (parts.length <= partIndex) {\n            return;\n        }\n\n        const end = partIndex === parts.length - 1;\n        const partName = parts[partIndex];\n\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.name !== parts[partIndex]) {\n                continue;\n            }\n            if (end && nodeTree[i].node.id !== obj.id) {\n                // Another node with the same name.\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            ServiceUtils.nestedTraverse(nodeTree[i].children, partIndex + 1, parts,\n                obj, nodeTree[i].node, delimiter);\n            return;\n        }\n\n        if (nodeTree.filter(n => n.node.name === partName).length === 0) {\n            if (end) {\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n            ServiceUtils.nestedTraverse(nodeTree, 0, [newPartName, ...parts.slice(partIndex + 2)],\n                obj, parent, delimiter);\n        }\n    }\n\n    static getTreeNodeObject(nodeTree: TreeNode<ITreeNodeObject>[], id: string): TreeNode<ITreeNodeObject> {\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.id === id) {\n                return nodeTree[i];\n            } else if (nodeTree[i].children != null) {\n                const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n                if (node !== null) {\n                    return node;\n                }\n            }\n        }\n        return null;\n    }\n}\n","import { LogLevelType } from '../enums/logLevelType';\n\nimport { LogService as LogServiceAbstraction } from '../abstractions/log.service';\n\nimport * as hrtime from 'browser-hrtime';\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n    protected timersMap: Map<string, [number, number]> = new Map();\n\n    constructor(protected isDev: boolean, protected filter: (level: LogLevelType) => boolean = null) { }\n\n    debug(message: string) {\n        if (!this.isDev) {\n            return;\n        }\n        this.write(LogLevelType.Debug, message);\n    }\n\n    info(message: string) {\n        this.write(LogLevelType.Info, message);\n    }\n\n    warning(message: string) {\n        this.write(LogLevelType.Warning, message);\n    }\n\n    error(message: string) {\n        this.write(LogLevelType.Error, message);\n    }\n\n    write(level: LogLevelType, message: string) {\n        if (this.filter != null && this.filter(level)) {\n            return;\n        }\n\n        switch (level) {\n            case LogLevelType.Debug:\n                // tslint:disable-next-line\n                console.log(message);\n                break;\n            case LogLevelType.Info:\n                // tslint:disable-next-line\n                console.log(message);\n                break;\n            case LogLevelType.Warning:\n                // tslint:disable-next-line\n                console.warn(message);\n                break;\n            case LogLevelType.Error:\n                // tslint:disable-next-line\n                console.error(message);\n                break;\n            default:\n                break;\n        }\n    }\n\n    time(label: string = 'default') {\n        if (!this.timersMap.has(label)) {\n            this.timersMap.set(label, hrtime());\n        }\n    }\n\n    timeEnd(label: string = 'default'): [number, number] {\n        const elapsed = hrtime(this.timersMap.get(label));\n        this.timersMap.delete(label);\n        this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n        return elapsed;\n    }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n    'abacus',\n    'abdomen',\n    'abdominal',\n    'abide',\n    'abiding',\n    'ability',\n    'ablaze',\n    'able',\n    'abnormal',\n    'abrasion',\n    'abrasive',\n    'abreast',\n    'abridge',\n    'abroad',\n    'abruptly',\n    'absence',\n    'absentee',\n    'absently',\n    'absinthe',\n    'absolute',\n    'absolve',\n    'abstain',\n    'abstract',\n    'absurd',\n    'accent',\n    'acclaim',\n    'acclimate',\n    'accompany',\n    'account',\n    'accuracy',\n    'accurate',\n    'accustom',\n    'acetone',\n    'achiness',\n    'aching',\n    'acid',\n    'acorn',\n    'acquaint',\n    'acquire',\n    'acre',\n    'acrobat',\n    'acronym',\n    'acting',\n    'action',\n    'activate',\n    'activator',\n    'active',\n    'activism',\n    'activist',\n    'activity',\n    'actress',\n    'acts',\n    'acutely',\n    'acuteness',\n    'aeration',\n    'aerobics',\n    'aerosol',\n    'aerospace',\n    'afar',\n    'affair',\n    'affected',\n    'affecting',\n    'affection',\n    'affidavit',\n    'affiliate',\n    'affirm',\n    'affix',\n    'afflicted',\n    'affluent',\n    'afford',\n    'affront',\n    'aflame',\n    'afloat',\n    'aflutter',\n    'afoot',\n    'afraid',\n    'afterglow',\n    'afterlife',\n    'aftermath',\n    'aftermost',\n    'afternoon',\n    'aged',\n    'ageless',\n    'agency',\n    'agenda',\n    'agent',\n    'aggregate',\n    'aghast',\n    'agile',\n    'agility',\n    'aging',\n    'agnostic',\n    'agonize',\n    'agonizing',\n    'agony',\n    'agreeable',\n    'agreeably',\n    'agreed',\n    'agreeing',\n    'agreement',\n    'aground',\n    'ahead',\n    'ahoy',\n    'aide',\n    'aids',\n    'aim',\n    'ajar',\n    'alabaster',\n    'alarm',\n    'albatross',\n    'album',\n    'alfalfa',\n    'algebra',\n    'algorithm',\n    'alias',\n    'alibi',\n    'alienable',\n    'alienate',\n    'aliens',\n    'alike',\n    'alive',\n    'alkaline',\n    'alkalize',\n    'almanac',\n    'almighty',\n    'almost',\n    'aloe',\n    'aloft',\n    'aloha',\n    'alone',\n    'alongside',\n    'aloof',\n    'alphabet',\n    'alright',\n    'although',\n    'altitude',\n    'alto',\n    'aluminum',\n    'alumni',\n    'always',\n    'amaretto',\n    'amaze',\n    'amazingly',\n    'amber',\n    'ambiance',\n    'ambiguity',\n    'ambiguous',\n    'ambition',\n    'ambitious',\n    'ambulance',\n    'ambush',\n    'amendable',\n    'amendment',\n    'amends',\n    'amenity',\n    'amiable',\n    'amicably',\n    'amid',\n    'amigo',\n    'amino',\n    'amiss',\n    'ammonia',\n    'ammonium',\n    'amnesty',\n    'amniotic',\n    'among',\n    'amount',\n    'amperage',\n    'ample',\n    'amplifier',\n    'amplify',\n    'amply',\n    'amuck',\n    'amulet',\n    'amusable',\n    'amused',\n    'amusement',\n    'amuser',\n    'amusing',\n    'anaconda',\n    'anaerobic',\n    'anagram',\n    'anatomist',\n    'anatomy',\n    'anchor',\n    'anchovy',\n    'ancient',\n    'android',\n    'anemia',\n    'anemic',\n    'aneurism',\n    'anew',\n    'angelfish',\n    'angelic',\n    'anger',\n    'angled',\n    'angler',\n    'angles',\n    'angling',\n    'angrily',\n    'angriness',\n    'anguished',\n    'angular',\n    'animal',\n    'animate',\n    'animating',\n    'animation',\n    'animator',\n    'anime',\n    'animosity',\n    'ankle',\n    'annex',\n    'annotate',\n    'announcer',\n    'annoying',\n    'annually',\n    'annuity',\n    'anointer',\n    'another',\n    'answering',\n    'antacid',\n    'antarctic',\n    'anteater',\n    'antelope',\n    'antennae',\n    'anthem',\n    'anthill',\n    'anthology',\n    'antibody',\n    'antics',\n    'antidote',\n    'antihero',\n    'antiquely',\n    'antiques',\n    'antiquity',\n    'antirust',\n    'antitoxic',\n    'antitrust',\n    'antiviral',\n    'antivirus',\n    'antler',\n    'antonym',\n    'antsy',\n    'anvil',\n    'anybody',\n    'anyhow',\n    'anymore',\n    'anyone',\n    'anyplace',\n    'anything',\n    'anytime',\n    'anyway',\n    'anywhere',\n    'aorta',\n    'apache',\n    'apostle',\n    'appealing',\n    'appear',\n    'appease',\n    'appeasing',\n    'appendage',\n    'appendix',\n    'appetite',\n    'appetizer',\n    'applaud',\n    'applause',\n    'apple',\n    'appliance',\n    'applicant',\n    'applied',\n    'apply',\n    'appointee',\n    'appraisal',\n    'appraiser',\n    'apprehend',\n    'approach',\n    'approval',\n    'approve',\n    'apricot',\n    'april',\n    'apron',\n    'aptitude',\n    'aptly',\n    'aqua',\n    'aqueduct',\n    'arbitrary',\n    'arbitrate',\n    'ardently',\n    'area',\n    'arena',\n    'arguable',\n    'arguably',\n    'argue',\n    'arise',\n    'armadillo',\n    'armband',\n    'armchair',\n    'armed',\n    'armful',\n    'armhole',\n    'arming',\n    'armless',\n    'armoire',\n    'armored',\n    'armory',\n    'armrest',\n    'army',\n    'aroma',\n    'arose',\n    'around',\n    'arousal',\n    'arrange',\n    'array',\n    'arrest',\n    'arrival',\n    'arrive',\n    'arrogance',\n    'arrogant',\n    'arson',\n    'art',\n    'ascend',\n    'ascension',\n    'ascent',\n    'ascertain',\n    'ashamed',\n    'ashen',\n    'ashes',\n    'ashy',\n    'aside',\n    'askew',\n    'asleep',\n    'asparagus',\n    'aspect',\n    'aspirate',\n    'aspire',\n    'aspirin',\n    'astonish',\n    'astound',\n    'astride',\n    'astrology',\n    'astronaut',\n    'astronomy',\n    'astute',\n    'atlantic',\n    'atlas',\n    'atom',\n    'atonable',\n    'atop',\n    'atrium',\n    'atrocious',\n    'atrophy',\n    'attach',\n    'attain',\n    'attempt',\n    'attendant',\n    'attendee',\n    'attention',\n    'attentive',\n    'attest',\n    'attic',\n    'attire',\n    'attitude',\n    'attractor',\n    'attribute',\n    'atypical',\n    'auction',\n    'audacious',\n    'audacity',\n    'audible',\n    'audibly',\n    'audience',\n    'audio',\n    'audition',\n    'augmented',\n    'august',\n    'authentic',\n    'author',\n    'autism',\n    'autistic',\n    'autograph',\n    'automaker',\n    'automated',\n    'automatic',\n    'autopilot',\n    'available',\n    'avalanche',\n    'avatar',\n    'avenge',\n    'avenging',\n    'avenue',\n    'average',\n    'aversion',\n    'avert',\n    'aviation',\n    'aviator',\n    'avid',\n    'avoid',\n    'await',\n    'awaken',\n    'award',\n    'aware',\n    'awhile',\n    'awkward',\n    'awning',\n    'awoke',\n    'awry',\n    'axis',\n    'babble',\n    'babbling',\n    'babied',\n    'baboon',\n    'backache',\n    'backboard',\n    'backboned',\n    'backdrop',\n    'backed',\n    'backer',\n    'backfield',\n    'backfire',\n    'backhand',\n    'backing',\n    'backlands',\n    'backlash',\n    'backless',\n    'backlight',\n    'backlit',\n    'backlog',\n    'backpack',\n    'backpedal',\n    'backrest',\n    'backroom',\n    'backshift',\n    'backside',\n    'backslid',\n    'backspace',\n    'backspin',\n    'backstab',\n    'backstage',\n    'backtalk',\n    'backtrack',\n    'backup',\n    'backward',\n    'backwash',\n    'backwater',\n    'backyard',\n    'bacon',\n    'bacteria',\n    'bacterium',\n    'badass',\n    'badge',\n    'badland',\n    'badly',\n    'badness',\n    'baffle',\n    'baffling',\n    'bagel',\n    'bagful',\n    'baggage',\n    'bagged',\n    'baggie',\n    'bagginess',\n    'bagging',\n    'baggy',\n    'bagpipe',\n    'baguette',\n    'baked',\n    'bakery',\n    'bakeshop',\n    'baking',\n    'balance',\n    'balancing',\n    'balcony',\n    'balmy',\n    'balsamic',\n    'bamboo',\n    'banana',\n    'banish',\n    'banister',\n    'banjo',\n    'bankable',\n    'bankbook',\n    'banked',\n    'banker',\n    'banking',\n    'banknote',\n    'bankroll',\n    'banner',\n    'bannister',\n    'banshee',\n    'banter',\n    'barbecue',\n    'barbed',\n    'barbell',\n    'barber',\n    'barcode',\n    'barge',\n    'bargraph',\n    'barista',\n    'baritone',\n    'barley',\n    'barmaid',\n    'barman',\n    'barn',\n    'barometer',\n    'barrack',\n    'barracuda',\n    'barrel',\n    'barrette',\n    'barricade',\n    'barrier',\n    'barstool',\n    'bartender',\n    'barterer',\n    'bash',\n    'basically',\n    'basics',\n    'basil',\n    'basin',\n    'basis',\n    'basket',\n    'batboy',\n    'batch',\n    'bath',\n    'baton',\n    'bats',\n    'battalion',\n    'battered',\n    'battering',\n    'battery',\n    'batting',\n    'battle',\n    'bauble',\n    'bazooka',\n    'blabber',\n    'bladder',\n    'blade',\n    'blah',\n    'blame',\n    'blaming',\n    'blanching',\n    'blandness',\n    'blank',\n    'blaspheme',\n    'blasphemy',\n    'blast',\n    'blatancy',\n    'blatantly',\n    'blazer',\n    'blazing',\n    'bleach',\n    'bleak',\n    'bleep',\n    'blemish',\n    'blend',\n    'bless',\n    'blighted',\n    'blimp',\n    'bling',\n    'blinked',\n    'blinker',\n    'blinking',\n    'blinks',\n    'blip',\n    'blissful',\n    'blitz',\n    'blizzard',\n    'bloated',\n    'bloating',\n    'blob',\n    'blog',\n    'bloomers',\n    'blooming',\n    'blooper',\n    'blot',\n    'blouse',\n    'blubber',\n    'bluff',\n    'bluish',\n    'blunderer',\n    'blunt',\n    'blurb',\n    'blurred',\n    'blurry',\n    'blurt',\n    'blush',\n    'blustery',\n    'boaster',\n    'boastful',\n    'boasting',\n    'boat',\n    'bobbed',\n    'bobbing',\n    'bobble',\n    'bobcat',\n    'bobsled',\n    'bobtail',\n    'bodacious',\n    'body',\n    'bogged',\n    'boggle',\n    'bogus',\n    'boil',\n    'bok',\n    'bolster',\n    'bolt',\n    'bonanza',\n    'bonded',\n    'bonding',\n    'bondless',\n    'boned',\n    'bonehead',\n    'boneless',\n    'bonelike',\n    'boney',\n    'bonfire',\n    'bonnet',\n    'bonsai',\n    'bonus',\n    'bony',\n    'boogeyman',\n    'boogieman',\n    'book',\n    'boondocks',\n    'booted',\n    'booth',\n    'bootie',\n    'booting',\n    'bootlace',\n    'bootleg',\n    'boots',\n    'boozy',\n    'borax',\n    'boring',\n    'borough',\n    'borrower',\n    'borrowing',\n    'boss',\n    'botanical',\n    'botanist',\n    'botany',\n    'botch',\n    'both',\n    'bottle',\n    'bottling',\n    'bottom',\n    'bounce',\n    'bouncing',\n    'bouncy',\n    'bounding',\n    'boundless',\n    'bountiful',\n    'bovine',\n    'boxcar',\n    'boxer',\n    'boxing',\n    'boxlike',\n    'boxy',\n    'breach',\n    'breath',\n    'breeches',\n    'breeching',\n    'breeder',\n    'breeding',\n    'breeze',\n    'breezy',\n    'brethren',\n    'brewery',\n    'brewing',\n    'briar',\n    'bribe',\n    'brick',\n    'bride',\n    'bridged',\n    'brigade',\n    'bright',\n    'brilliant',\n    'brim',\n    'bring',\n    'brink',\n    'brisket',\n    'briskly',\n    'briskness',\n    'bristle',\n    'brittle',\n    'broadband',\n    'broadcast',\n    'broaden',\n    'broadly',\n    'broadness',\n    'broadside',\n    'broadways',\n    'broiler',\n    'broiling',\n    'broken',\n    'broker',\n    'bronchial',\n    'bronco',\n    'bronze',\n    'bronzing',\n    'brook',\n    'broom',\n    'brought',\n    'browbeat',\n    'brownnose',\n    'browse',\n    'browsing',\n    'bruising',\n    'brunch',\n    'brunette',\n    'brunt',\n    'brush',\n    'brussels',\n    'brute',\n    'brutishly',\n    'bubble',\n    'bubbling',\n    'bubbly',\n    'buccaneer',\n    'bucked',\n    'bucket',\n    'buckle',\n    'buckshot',\n    'buckskin',\n    'bucktooth',\n    'buckwheat',\n    'buddhism',\n    'buddhist',\n    'budding',\n    'buddy',\n    'budget',\n    'buffalo',\n    'buffed',\n    'buffer',\n    'buffing',\n    'buffoon',\n    'buggy',\n    'bulb',\n    'bulge',\n    'bulginess',\n    'bulgur',\n    'bulk',\n    'bulldog',\n    'bulldozer',\n    'bullfight',\n    'bullfrog',\n    'bullhorn',\n    'bullion',\n    'bullish',\n    'bullpen',\n    'bullring',\n    'bullseye',\n    'bullwhip',\n    'bully',\n    'bunch',\n    'bundle',\n    'bungee',\n    'bunion',\n    'bunkbed',\n    'bunkhouse',\n    'bunkmate',\n    'bunny',\n    'bunt',\n    'busboy',\n    'bush',\n    'busily',\n    'busload',\n    'bust',\n    'busybody',\n    'buzz',\n    'cabana',\n    'cabbage',\n    'cabbie',\n    'cabdriver',\n    'cable',\n    'caboose',\n    'cache',\n    'cackle',\n    'cacti',\n    'cactus',\n    'caddie',\n    'caddy',\n    'cadet',\n    'cadillac',\n    'cadmium',\n    'cage',\n    'cahoots',\n    'cake',\n    'calamari',\n    'calamity',\n    'calcium',\n    'calculate',\n    'calculus',\n    'caliber',\n    'calibrate',\n    'calm',\n    'caloric',\n    'calorie',\n    'calzone',\n    'camcorder',\n    'cameo',\n    'camera',\n    'camisole',\n    'camper',\n    'campfire',\n    'camping',\n    'campsite',\n    'campus',\n    'canal',\n    'canary',\n    'cancel',\n    'candied',\n    'candle',\n    'candy',\n    'cane',\n    'canine',\n    'canister',\n    'cannabis',\n    'canned',\n    'canning',\n    'cannon',\n    'cannot',\n    'canola',\n    'canon',\n    'canopener',\n    'canopy',\n    'canteen',\n    'canyon',\n    'capable',\n    'capably',\n    'capacity',\n    'cape',\n    'capillary',\n    'capital',\n    'capitol',\n    'capped',\n    'capricorn',\n    'capsize',\n    'capsule',\n    'caption',\n    'captivate',\n    'captive',\n    'captivity',\n    'capture',\n    'caramel',\n    'carat',\n    'caravan',\n    'carbon',\n    'cardboard',\n    'carded',\n    'cardiac',\n    'cardigan',\n    'cardinal',\n    'cardstock',\n    'carefully',\n    'caregiver',\n    'careless',\n    'caress',\n    'caretaker',\n    'cargo',\n    'caring',\n    'carless',\n    'carload',\n    'carmaker',\n    'carnage',\n    'carnation',\n    'carnival',\n    'carnivore',\n    'carol',\n    'carpenter',\n    'carpentry',\n    'carpool',\n    'carport',\n    'carried',\n    'carrot',\n    'carrousel',\n    'carry',\n    'cartel',\n    'cartload',\n    'carton',\n    'cartoon',\n    'cartridge',\n    'cartwheel',\n    'carve',\n    'carving',\n    'carwash',\n    'cascade',\n    'case',\n    'cash',\n    'casing',\n    'casino',\n    'casket',\n    'cassette',\n    'casually',\n    'casualty',\n    'catacomb',\n    'catalog',\n    'catalyst',\n    'catalyze',\n    'catapult',\n    'cataract',\n    'catatonic',\n    'catcall',\n    'catchable',\n    'catcher',\n    'catching',\n    'catchy',\n    'caterer',\n    'catering',\n    'catfight',\n    'catfish',\n    'cathedral',\n    'cathouse',\n    'catlike',\n    'catnap',\n    'catnip',\n    'catsup',\n    'cattail',\n    'cattishly',\n    'cattle',\n    'catty',\n    'catwalk',\n    'caucasian',\n    'caucus',\n    'causal',\n    'causation',\n    'cause',\n    'causing',\n    'cauterize',\n    'caution',\n    'cautious',\n    'cavalier',\n    'cavalry',\n    'caviar',\n    'cavity',\n    'cedar',\n    'celery',\n    'celestial',\n    'celibacy',\n    'celibate',\n    'celtic',\n    'cement',\n    'census',\n    'ceramics',\n    'ceremony',\n    'certainly',\n    'certainty',\n    'certified',\n    'certify',\n    'cesarean',\n    'cesspool',\n    'chafe',\n    'chaffing',\n    'chain',\n    'chair',\n    'chalice',\n    'challenge',\n    'chamber',\n    'chamomile',\n    'champion',\n    'chance',\n    'change',\n    'channel',\n    'chant',\n    'chaos',\n    'chaperone',\n    'chaplain',\n    'chapped',\n    'chaps',\n    'chapter',\n    'character',\n    'charbroil',\n    'charcoal',\n    'charger',\n    'charging',\n    'chariot',\n    'charity',\n    'charm',\n    'charred',\n    'charter',\n    'charting',\n    'chase',\n    'chasing',\n    'chaste',\n    'chastise',\n    'chastity',\n    'chatroom',\n    'chatter',\n    'chatting',\n    'chatty',\n    'cheating',\n    'cheddar',\n    'cheek',\n    'cheer',\n    'cheese',\n    'cheesy',\n    'chef',\n    'chemicals',\n    'chemist',\n    'chemo',\n    'cherisher',\n    'cherub',\n    'chess',\n    'chest',\n    'chevron',\n    'chevy',\n    'chewable',\n    'chewer',\n    'chewing',\n    'chewy',\n    'chief',\n    'chihuahua',\n    'childcare',\n    'childhood',\n    'childish',\n    'childless',\n    'childlike',\n    'chili',\n    'chill',\n    'chimp',\n    'chip',\n    'chirping',\n    'chirpy',\n    'chitchat',\n    'chivalry',\n    'chive',\n    'chloride',\n    'chlorine',\n    'choice',\n    'chokehold',\n    'choking',\n    'chomp',\n    'chooser',\n    'choosing',\n    'choosy',\n    'chop',\n    'chosen',\n    'chowder',\n    'chowtime',\n    'chrome',\n    'chubby',\n    'chuck',\n    'chug',\n    'chummy',\n    'chump',\n    'chunk',\n    'churn',\n    'chute',\n    'cider',\n    'cilantro',\n    'cinch',\n    'cinema',\n    'cinnamon',\n    'circle',\n    'circling',\n    'circular',\n    'circulate',\n    'circus',\n    'citable',\n    'citadel',\n    'citation',\n    'citizen',\n    'citric',\n    'citrus',\n    'city',\n    'civic',\n    'civil',\n    'clad',\n    'claim',\n    'clambake',\n    'clammy',\n    'clamor',\n    'clamp',\n    'clamshell',\n    'clang',\n    'clanking',\n    'clapped',\n    'clapper',\n    'clapping',\n    'clarify',\n    'clarinet',\n    'clarity',\n    'clash',\n    'clasp',\n    'class',\n    'clatter',\n    'clause',\n    'clavicle',\n    'claw',\n    'clay',\n    'clean',\n    'clear',\n    'cleat',\n    'cleaver',\n    'cleft',\n    'clench',\n    'clergyman',\n    'clerical',\n    'clerk',\n    'clever',\n    'clicker',\n    'client',\n    'climate',\n    'climatic',\n    'cling',\n    'clinic',\n    'clinking',\n    'clip',\n    'clique',\n    'cloak',\n    'clobber',\n    'clock',\n    'clone',\n    'cloning',\n    'closable',\n    'closure',\n    'clothes',\n    'clothing',\n    'cloud',\n    'clover',\n    'clubbed',\n    'clubbing',\n    'clubhouse',\n    'clump',\n    'clumsily',\n    'clumsy',\n    'clunky',\n    'clustered',\n    'clutch',\n    'clutter',\n    'coach',\n    'coagulant',\n    'coastal',\n    'coaster',\n    'coasting',\n    'coastland',\n    'coastline',\n    'coat',\n    'coauthor',\n    'cobalt',\n    'cobbler',\n    'cobweb',\n    'cocoa',\n    'coconut',\n    'cod',\n    'coeditor',\n    'coerce',\n    'coexist',\n    'coffee',\n    'cofounder',\n    'cognition',\n    'cognitive',\n    'cogwheel',\n    'coherence',\n    'coherent',\n    'cohesive',\n    'coil',\n    'coke',\n    'cola',\n    'cold',\n    'coleslaw',\n    'coliseum',\n    'collage',\n    'collapse',\n    'collar',\n    'collected',\n    'collector',\n    'collide',\n    'collie',\n    'collision',\n    'colonial',\n    'colonist',\n    'colonize',\n    'colony',\n    'colossal',\n    'colt',\n    'coma',\n    'come',\n    'comfort',\n    'comfy',\n    'comic',\n    'coming',\n    'comma',\n    'commence',\n    'commend',\n    'comment',\n    'commerce',\n    'commode',\n    'commodity',\n    'commodore',\n    'common',\n    'commotion',\n    'commute',\n    'commuting',\n    'compacted',\n    'compacter',\n    'compactly',\n    'compactor',\n    'companion',\n    'company',\n    'compare',\n    'compel',\n    'compile',\n    'comply',\n    'component',\n    'composed',\n    'composer',\n    'composite',\n    'compost',\n    'composure',\n    'compound',\n    'compress',\n    'comprised',\n    'computer',\n    'computing',\n    'comrade',\n    'concave',\n    'conceal',\n    'conceded',\n    'concept',\n    'concerned',\n    'concert',\n    'conch',\n    'concierge',\n    'concise',\n    'conclude',\n    'concrete',\n    'concur',\n    'condense',\n    'condiment',\n    'condition',\n    'condone',\n    'conducive',\n    'conductor',\n    'conduit',\n    'cone',\n    'confess',\n    'confetti',\n    'confidant',\n    'confident',\n    'confider',\n    'confiding',\n    'configure',\n    'confined',\n    'confining',\n    'confirm',\n    'conflict',\n    'conform',\n    'confound',\n    'confront',\n    'confused',\n    'confusing',\n    'confusion',\n    'congenial',\n    'congested',\n    'congrats',\n    'congress',\n    'conical',\n    'conjoined',\n    'conjure',\n    'conjuror',\n    'connected',\n    'connector',\n    'consensus',\n    'consent',\n    'console',\n    'consoling',\n    'consonant',\n    'constable',\n    'constant',\n    'constrain',\n    'constrict',\n    'construct',\n    'consult',\n    'consumer',\n    'consuming',\n    'contact',\n    'container',\n    'contempt',\n    'contend',\n    'contented',\n    'contently',\n    'contents',\n    'contest',\n    'context',\n    'contort',\n    'contour',\n    'contrite',\n    'control',\n    'contusion',\n    'convene',\n    'convent',\n    'copartner',\n    'cope',\n    'copied',\n    'copier',\n    'copilot',\n    'coping',\n    'copious',\n    'copper',\n    'copy',\n    'coral',\n    'cork',\n    'cornball',\n    'cornbread',\n    'corncob',\n    'cornea',\n    'corned',\n    'corner',\n    'cornfield',\n    'cornflake',\n    'cornhusk',\n    'cornmeal',\n    'cornstalk',\n    'corny',\n    'coronary',\n    'coroner',\n    'corporal',\n    'corporate',\n    'corral',\n    'correct',\n    'corridor',\n    'corrode',\n    'corroding',\n    'corrosive',\n    'corsage',\n    'corset',\n    'cortex',\n    'cosigner',\n    'cosmetics',\n    'cosmic',\n    'cosmos',\n    'cosponsor',\n    'cost',\n    'cottage',\n    'cotton',\n    'couch',\n    'cough',\n    'could',\n    'countable',\n    'countdown',\n    'counting',\n    'countless',\n    'country',\n    'county',\n    'courier',\n    'covenant',\n    'cover',\n    'coveted',\n    'coveting',\n    'coyness',\n    'cozily',\n    'coziness',\n    'cozy',\n    'crabbing',\n    'crabgrass',\n    'crablike',\n    'crabmeat',\n    'cradle',\n    'cradling',\n    'crafter',\n    'craftily',\n    'craftsman',\n    'craftwork',\n    'crafty',\n    'cramp',\n    'cranberry',\n    'crane',\n    'cranial',\n    'cranium',\n    'crank',\n    'crate',\n    'crave',\n    'craving',\n    'crawfish',\n    'crawlers',\n    'crawling',\n    'crayfish',\n    'crayon',\n    'crazed',\n    'crazily',\n    'craziness',\n    'crazy',\n    'creamed',\n    'creamer',\n    'creamlike',\n    'crease',\n    'creasing',\n    'creatable',\n    'create',\n    'creation',\n    'creative',\n    'creature',\n    'credible',\n    'credibly',\n    'credit',\n    'creed',\n    'creme',\n    'creole',\n    'crepe',\n    'crept',\n    'crescent',\n    'crested',\n    'cresting',\n    'crestless',\n    'crevice',\n    'crewless',\n    'crewman',\n    'crewmate',\n    'crib',\n    'cricket',\n    'cried',\n    'crier',\n    'crimp',\n    'crimson',\n    'cringe',\n    'cringing',\n    'crinkle',\n    'crinkly',\n    'crisped',\n    'crisping',\n    'crisply',\n    'crispness',\n    'crispy',\n    'criteria',\n    'critter',\n    'croak',\n    'crock',\n    'crook',\n    'croon',\n    'crop',\n    'cross',\n    'crouch',\n    'crouton',\n    'crowbar',\n    'crowd',\n    'crown',\n    'crucial',\n    'crudely',\n    'crudeness',\n    'cruelly',\n    'cruelness',\n    'cruelty',\n    'crumb',\n    'crummiest',\n    'crummy',\n    'crumpet',\n    'crumpled',\n    'cruncher',\n    'crunching',\n    'crunchy',\n    'crusader',\n    'crushable',\n    'crushed',\n    'crusher',\n    'crushing',\n    'crust',\n    'crux',\n    'crying',\n    'cryptic',\n    'crystal',\n    'cubbyhole',\n    'cube',\n    'cubical',\n    'cubicle',\n    'cucumber',\n    'cuddle',\n    'cuddly',\n    'cufflink',\n    'culinary',\n    'culminate',\n    'culpable',\n    'culprit',\n    'cultivate',\n    'cultural',\n    'culture',\n    'cupbearer',\n    'cupcake',\n    'cupid',\n    'cupped',\n    'cupping',\n    'curable',\n    'curator',\n    'curdle',\n    'cure',\n    'curfew',\n    'curing',\n    'curled',\n    'curler',\n    'curliness',\n    'curling',\n    'curly',\n    'curry',\n    'curse',\n    'cursive',\n    'cursor',\n    'curtain',\n    'curtly',\n    'curtsy',\n    'curvature',\n    'curve',\n    'curvy',\n    'cushy',\n    'cusp',\n    'cussed',\n    'custard',\n    'custodian',\n    'custody',\n    'customary',\n    'customer',\n    'customize',\n    'customs',\n    'cut',\n    'cycle',\n    'cyclic',\n    'cycling',\n    'cyclist',\n    'cylinder',\n    'cymbal',\n    'cytoplasm',\n    'cytoplast',\n    'dab',\n    'dad',\n    'daffodil',\n    'dagger',\n    'daily',\n    'daintily',\n    'dainty',\n    'dairy',\n    'daisy',\n    'dallying',\n    'dance',\n    'dancing',\n    'dandelion',\n    'dander',\n    'dandruff',\n    'dandy',\n    'danger',\n    'dangle',\n    'dangling',\n    'daredevil',\n    'dares',\n    'daringly',\n    'darkened',\n    'darkening',\n    'darkish',\n    'darkness',\n    'darkroom',\n    'darling',\n    'darn',\n    'dart',\n    'darwinism',\n    'dash',\n    'dastardly',\n    'data',\n    'datebook',\n    'dating',\n    'daughter',\n    'daunting',\n    'dawdler',\n    'dawn',\n    'daybed',\n    'daybreak',\n    'daycare',\n    'daydream',\n    'daylight',\n    'daylong',\n    'dayroom',\n    'daytime',\n    'dazzler',\n    'dazzling',\n    'deacon',\n    'deafening',\n    'deafness',\n    'dealer',\n    'dealing',\n    'dealmaker',\n    'dealt',\n    'dean',\n    'debatable',\n    'debate',\n    'debating',\n    'debit',\n    'debrief',\n    'debtless',\n    'debtor',\n    'debug',\n    'debunk',\n    'decade',\n    'decaf',\n    'decal',\n    'decathlon',\n    'decay',\n    'deceased',\n    'deceit',\n    'deceiver',\n    'deceiving',\n    'december',\n    'decency',\n    'decent',\n    'deception',\n    'deceptive',\n    'decibel',\n    'decidable',\n    'decimal',\n    'decimeter',\n    'decipher',\n    'deck',\n    'declared',\n    'decline',\n    'decode',\n    'decompose',\n    'decorated',\n    'decorator',\n    'decoy',\n    'decrease',\n    'decree',\n    'dedicate',\n    'dedicator',\n    'deduce',\n    'deduct',\n    'deed',\n    'deem',\n    'deepen',\n    'deeply',\n    'deepness',\n    'deface',\n    'defacing',\n    'defame',\n    'default',\n    'defeat',\n    'defection',\n    'defective',\n    'defendant',\n    'defender',\n    'defense',\n    'defensive',\n    'deferral',\n    'deferred',\n    'defiance',\n    'defiant',\n    'defile',\n    'defiling',\n    'define',\n    'definite',\n    'deflate',\n    'deflation',\n    'deflator',\n    'deflected',\n    'deflector',\n    'defog',\n    'deforest',\n    'defraud',\n    'defrost',\n    'deftly',\n    'defuse',\n    'defy',\n    'degraded',\n    'degrading',\n    'degrease',\n    'degree',\n    'dehydrate',\n    'deity',\n    'dejected',\n    'delay',\n    'delegate',\n    'delegator',\n    'delete',\n    'deletion',\n    'delicacy',\n    'delicate',\n    'delicious',\n    'delighted',\n    'delirious',\n    'delirium',\n    'deliverer',\n    'delivery',\n    'delouse',\n    'delta',\n    'deluge',\n    'delusion',\n    'deluxe',\n    'demanding',\n    'demeaning',\n    'demeanor',\n    'demise',\n    'democracy',\n    'democrat',\n    'demote',\n    'demotion',\n    'demystify',\n    'denatured',\n    'deniable',\n    'denial',\n    'denim',\n    'denote',\n    'dense',\n    'density',\n    'dental',\n    'dentist',\n    'denture',\n    'deny',\n    'deodorant',\n    'deodorize',\n    'departed',\n    'departure',\n    'depict',\n    'deplete',\n    'depletion',\n    'deplored',\n    'deploy',\n    'deport',\n    'depose',\n    'depraved',\n    'depravity',\n    'deprecate',\n    'depress',\n    'deprive',\n    'depth',\n    'deputize',\n    'deputy',\n    'derail',\n    'deranged',\n    'derby',\n    'derived',\n    'desecrate',\n    'deserve',\n    'deserving',\n    'designate',\n    'designed',\n    'designer',\n    'designing',\n    'deskbound',\n    'desktop',\n    'deskwork',\n    'desolate',\n    'despair',\n    'despise',\n    'despite',\n    'destiny',\n    'destitute',\n    'destruct',\n    'detached',\n    'detail',\n    'detection',\n    'detective',\n    'detector',\n    'detention',\n    'detergent',\n    'detest',\n    'detonate',\n    'detonator',\n    'detoxify',\n    'detract',\n    'deuce',\n    'devalue',\n    'deviancy',\n    'deviant',\n    'deviate',\n    'deviation',\n    'deviator',\n    'device',\n    'devious',\n    'devotedly',\n    'devotee',\n    'devotion',\n    'devourer',\n    'devouring',\n    'devoutly',\n    'dexterity',\n    'dexterous',\n    'diabetes',\n    'diabetic',\n    'diabolic',\n    'diagnoses',\n    'diagnosis',\n    'diagram',\n    'dial',\n    'diameter',\n    'diaper',\n    'diaphragm',\n    'diary',\n    'dice',\n    'dicing',\n    'dictate',\n    'dictation',\n    'dictator',\n    'difficult',\n    'diffused',\n    'diffuser',\n    'diffusion',\n    'diffusive',\n    'dig',\n    'dilation',\n    'diligence',\n    'diligent',\n    'dill',\n    'dilute',\n    'dime',\n    'diminish',\n    'dimly',\n    'dimmed',\n    'dimmer',\n    'dimness',\n    'dimple',\n    'diner',\n    'dingbat',\n    'dinghy',\n    'dinginess',\n    'dingo',\n    'dingy',\n    'dining',\n    'dinner',\n    'diocese',\n    'dioxide',\n    'diploma',\n    'dipped',\n    'dipper',\n    'dipping',\n    'directed',\n    'direction',\n    'directive',\n    'directly',\n    'directory',\n    'direness',\n    'dirtiness',\n    'disabled',\n    'disagree',\n    'disallow',\n    'disarm',\n    'disarray',\n    'disaster',\n    'disband',\n    'disbelief',\n    'disburse',\n    'discard',\n    'discern',\n    'discharge',\n    'disclose',\n    'discolor',\n    'discount',\n    'discourse',\n    'discover',\n    'discuss',\n    'disdain',\n    'disengage',\n    'disfigure',\n    'disgrace',\n    'dish',\n    'disinfect',\n    'disjoin',\n    'disk',\n    'dislike',\n    'disliking',\n    'dislocate',\n    'dislodge',\n    'disloyal',\n    'dismantle',\n    'dismay',\n    'dismiss',\n    'dismount',\n    'disobey',\n    'disorder',\n    'disown',\n    'disparate',\n    'disparity',\n    'dispatch',\n    'dispense',\n    'dispersal',\n    'dispersed',\n    'disperser',\n    'displace',\n    'display',\n    'displease',\n    'disposal',\n    'dispose',\n    'disprove',\n    'dispute',\n    'disregard',\n    'disrupt',\n    'dissuade',\n    'distance',\n    'distant',\n    'distaste',\n    'distill',\n    'distinct',\n    'distort',\n    'distract',\n    'distress',\n    'district',\n    'distrust',\n    'ditch',\n    'ditto',\n    'ditzy',\n    'dividable',\n    'divided',\n    'dividend',\n    'dividers',\n    'dividing',\n    'divinely',\n    'diving',\n    'divinity',\n    'divisible',\n    'divisibly',\n    'division',\n    'divisive',\n    'divorcee',\n    'dizziness',\n    'dizzy',\n    'doable',\n    'docile',\n    'dock',\n    'doctrine',\n    'document',\n    'dodge',\n    'dodgy',\n    'doily',\n    'doing',\n    'dole',\n    'dollar',\n    'dollhouse',\n    'dollop',\n    'dolly',\n    'dolphin',\n    'domain',\n    'domelike',\n    'domestic',\n    'dominion',\n    'dominoes',\n    'donated',\n    'donation',\n    'donator',\n    'donor',\n    'donut',\n    'doodle',\n    'doorbell',\n    'doorframe',\n    'doorknob',\n    'doorman',\n    'doormat',\n    'doornail',\n    'doorpost',\n    'doorstep',\n    'doorstop',\n    'doorway',\n    'doozy',\n    'dork',\n    'dormitory',\n    'dorsal',\n    'dosage',\n    'dose',\n    'dotted',\n    'doubling',\n    'douche',\n    'dove',\n    'down',\n    'dowry',\n    'doze',\n    'drab',\n    'dragging',\n    'dragonfly',\n    'dragonish',\n    'dragster',\n    'drainable',\n    'drainage',\n    'drained',\n    'drainer',\n    'drainpipe',\n    'dramatic',\n    'dramatize',\n    'drank',\n    'drapery',\n    'drastic',\n    'draw',\n    'dreaded',\n    'dreadful',\n    'dreadlock',\n    'dreamboat',\n    'dreamily',\n    'dreamland',\n    'dreamless',\n    'dreamlike',\n    'dreamt',\n    'dreamy',\n    'drearily',\n    'dreary',\n    'drench',\n    'dress',\n    'drew',\n    'dribble',\n    'dried',\n    'drier',\n    'drift',\n    'driller',\n    'drilling',\n    'drinkable',\n    'drinking',\n    'dripping',\n    'drippy',\n    'drivable',\n    'driven',\n    'driver',\n    'driveway',\n    'driving',\n    'drizzle',\n    'drizzly',\n    'drone',\n    'drool',\n    'droop',\n    'drop-down',\n    'dropbox',\n    'dropkick',\n    'droplet',\n    'dropout',\n    'dropper',\n    'drove',\n    'drown',\n    'drowsily',\n    'drudge',\n    'drum',\n    'dry',\n    'dubbed',\n    'dubiously',\n    'duchess',\n    'duckbill',\n    'ducking',\n    'duckling',\n    'ducktail',\n    'ducky',\n    'duct',\n    'dude',\n    'duffel',\n    'dugout',\n    'duh',\n    'duke',\n    'duller',\n    'dullness',\n    'duly',\n    'dumping',\n    'dumpling',\n    'dumpster',\n    'duo',\n    'dupe',\n    'duplex',\n    'duplicate',\n    'duplicity',\n    'durable',\n    'durably',\n    'duration',\n    'duress',\n    'during',\n    'dusk',\n    'dust',\n    'dutiful',\n    'duty',\n    'duvet',\n    'dwarf',\n    'dweeb',\n    'dwelled',\n    'dweller',\n    'dwelling',\n    'dwindle',\n    'dwindling',\n    'dynamic',\n    'dynamite',\n    'dynasty',\n    'dyslexia',\n    'dyslexic',\n    'each',\n    'eagle',\n    'earache',\n    'eardrum',\n    'earflap',\n    'earful',\n    'earlobe',\n    'early',\n    'earmark',\n    'earmuff',\n    'earphone',\n    'earpiece',\n    'earplugs',\n    'earring',\n    'earshot',\n    'earthen',\n    'earthlike',\n    'earthling',\n    'earthly',\n    'earthworm',\n    'earthy',\n    'earwig',\n    'easeful',\n    'easel',\n    'easiest',\n    'easily',\n    'easiness',\n    'easing',\n    'eastbound',\n    'eastcoast',\n    'easter',\n    'eastward',\n    'eatable',\n    'eaten',\n    'eatery',\n    'eating',\n    'eats',\n    'ebay',\n    'ebony',\n    'ebook',\n    'ecard',\n    'eccentric',\n    'echo',\n    'eclair',\n    'eclipse',\n    'ecologist',\n    'ecology',\n    'economic',\n    'economist',\n    'economy',\n    'ecosphere',\n    'ecosystem',\n    'edge',\n    'edginess',\n    'edging',\n    'edgy',\n    'edition',\n    'editor',\n    'educated',\n    'education',\n    'educator',\n    'eel',\n    'effective',\n    'effects',\n    'efficient',\n    'effort',\n    'eggbeater',\n    'egging',\n    'eggnog',\n    'eggplant',\n    'eggshell',\n    'egomaniac',\n    'egotism',\n    'egotistic',\n    'either',\n    'eject',\n    'elaborate',\n    'elastic',\n    'elated',\n    'elbow',\n    'eldercare',\n    'elderly',\n    'eldest',\n    'electable',\n    'election',\n    'elective',\n    'elephant',\n    'elevate',\n    'elevating',\n    'elevation',\n    'elevator',\n    'eleven',\n    'elf',\n    'eligible',\n    'eligibly',\n    'eliminate',\n    'elite',\n    'elitism',\n    'elixir',\n    'elk',\n    'ellipse',\n    'elliptic',\n    'elm',\n    'elongated',\n    'elope',\n    'eloquence',\n    'eloquent',\n    'elsewhere',\n    'elude',\n    'elusive',\n    'elves',\n    'email',\n    'embargo',\n    'embark',\n    'embassy',\n    'embattled',\n    'embellish',\n    'ember',\n    'embezzle',\n    'emblaze',\n    'emblem',\n    'embody',\n    'embolism',\n    'emboss',\n    'embroider',\n    'emcee',\n    'emerald',\n    'emergency',\n    'emission',\n    'emit',\n    'emote',\n    'emoticon',\n    'emotion',\n    'empathic',\n    'empathy',\n    'emperor',\n    'emphases',\n    'emphasis',\n    'emphasize',\n    'emphatic',\n    'empirical',\n    'employed',\n    'employee',\n    'employer',\n    'emporium',\n    'empower',\n    'emptier',\n    'emptiness',\n    'empty',\n    'emu',\n    'enable',\n    'enactment',\n    'enamel',\n    'enchanted',\n    'enchilada',\n    'encircle',\n    'enclose',\n    'enclosure',\n    'encode',\n    'encore',\n    'encounter',\n    'encourage',\n    'encroach',\n    'encrust',\n    'encrypt',\n    'endanger',\n    'endeared',\n    'endearing',\n    'ended',\n    'ending',\n    'endless',\n    'endnote',\n    'endocrine',\n    'endorphin',\n    'endorse',\n    'endowment',\n    'endpoint',\n    'endurable',\n    'endurance',\n    'enduring',\n    'energetic',\n    'energize',\n    'energy',\n    'enforced',\n    'enforcer',\n    'engaged',\n    'engaging',\n    'engine',\n    'engorge',\n    'engraved',\n    'engraver',\n    'engraving',\n    'engross',\n    'engulf',\n    'enhance',\n    'enigmatic',\n    'enjoyable',\n    'enjoyably',\n    'enjoyer',\n    'enjoying',\n    'enjoyment',\n    'enlarged',\n    'enlarging',\n    'enlighten',\n    'enlisted',\n    'enquirer',\n    'enrage',\n    'enrich',\n    'enroll',\n    'enslave',\n    'ensnare',\n    'ensure',\n    'entail',\n    'entangled',\n    'entering',\n    'entertain',\n    'enticing',\n    'entire',\n    'entitle',\n    'entity',\n    'entomb',\n    'entourage',\n    'entrap',\n    'entree',\n    'entrench',\n    'entrust',\n    'entryway',\n    'entwine',\n    'enunciate',\n    'envelope',\n    'enviable',\n    'enviably',\n    'envious',\n    'envision',\n    'envoy',\n    'envy',\n    'enzyme',\n    'epic',\n    'epidemic',\n    'epidermal',\n    'epidermis',\n    'epidural',\n    'epilepsy',\n    'epileptic',\n    'epilogue',\n    'epiphany',\n    'episode',\n    'equal',\n    'equate',\n    'equation',\n    'equator',\n    'equinox',\n    'equipment',\n    'equity',\n    'equivocal',\n    'eradicate',\n    'erasable',\n    'erased',\n    'eraser',\n    'erasure',\n    'ergonomic',\n    'errand',\n    'errant',\n    'erratic',\n    'error',\n    'erupt',\n    'escalate',\n    'escalator',\n    'escapable',\n    'escapade',\n    'escapist',\n    'escargot',\n    'eskimo',\n    'esophagus',\n    'espionage',\n    'espresso',\n    'esquire',\n    'essay',\n    'essence',\n    'essential',\n    'establish',\n    'estate',\n    'esteemed',\n    'estimate',\n    'estimator',\n    'estranged',\n    'estrogen',\n    'etching',\n    'eternal',\n    'eternity',\n    'ethanol',\n    'ether',\n    'ethically',\n    'ethics',\n    'euphemism',\n    'evacuate',\n    'evacuee',\n    'evade',\n    'evaluate',\n    'evaluator',\n    'evaporate',\n    'evasion',\n    'evasive',\n    'even',\n    'everglade',\n    'evergreen',\n    'everybody',\n    'everyday',\n    'everyone',\n    'evict',\n    'evidence',\n    'evident',\n    'evil',\n    'evoke',\n    'evolution',\n    'evolve',\n    'exact',\n    'exalted',\n    'example',\n    'excavate',\n    'excavator',\n    'exceeding',\n    'exception',\n    'excess',\n    'exchange',\n    'excitable',\n    'exciting',\n    'exclaim',\n    'exclude',\n    'excluding',\n    'exclusion',\n    'exclusive',\n    'excretion',\n    'excretory',\n    'excursion',\n    'excusable',\n    'excusably',\n    'excuse',\n    'exemplary',\n    'exemplify',\n    'exemption',\n    'exerciser',\n    'exert',\n    'exes',\n    'exfoliate',\n    'exhale',\n    'exhaust',\n    'exhume',\n    'exile',\n    'existing',\n    'exit',\n    'exodus',\n    'exonerate',\n    'exorcism',\n    'exorcist',\n    'expand',\n    'expanse',\n    'expansion',\n    'expansive',\n    'expectant',\n    'expedited',\n    'expediter',\n    'expel',\n    'expend',\n    'expenses',\n    'expensive',\n    'expert',\n    'expire',\n    'expiring',\n    'explain',\n    'expletive',\n    'explicit',\n    'explode',\n    'exploit',\n    'explore',\n    'exploring',\n    'exponent',\n    'exporter',\n    'exposable',\n    'expose',\n    'exposure',\n    'express',\n    'expulsion',\n    'exquisite',\n    'extended',\n    'extending',\n    'extent',\n    'extenuate',\n    'exterior',\n    'external',\n    'extinct',\n    'extortion',\n    'extradite',\n    'extras',\n    'extrovert',\n    'extrude',\n    'extruding',\n    'exuberant',\n    'fable',\n    'fabric',\n    'fabulous',\n    'facebook',\n    'facecloth',\n    'facedown',\n    'faceless',\n    'facelift',\n    'faceplate',\n    'faceted',\n    'facial',\n    'facility',\n    'facing',\n    'facsimile',\n    'faction',\n    'factoid',\n    'factor',\n    'factsheet',\n    'factual',\n    'faculty',\n    'fade',\n    'fading',\n    'failing',\n    'falcon',\n    'fall',\n    'false',\n    'falsify',\n    'fame',\n    'familiar',\n    'family',\n    'famine',\n    'famished',\n    'fanatic',\n    'fancied',\n    'fanciness',\n    'fancy',\n    'fanfare',\n    'fang',\n    'fanning',\n    'fantasize',\n    'fantastic',\n    'fantasy',\n    'fascism',\n    'fastball',\n    'faster',\n    'fasting',\n    'fastness',\n    'faucet',\n    'favorable',\n    'favorably',\n    'favored',\n    'favoring',\n    'favorite',\n    'fax',\n    'feast',\n    'federal',\n    'fedora',\n    'feeble',\n    'feed',\n    'feel',\n    'feisty',\n    'feline',\n    'felt-tip',\n    'feminine',\n    'feminism',\n    'feminist',\n    'feminize',\n    'femur',\n    'fence',\n    'fencing',\n    'fender',\n    'ferment',\n    'fernlike',\n    'ferocious',\n    'ferocity',\n    'ferret',\n    'ferris',\n    'ferry',\n    'fervor',\n    'fester',\n    'festival',\n    'festive',\n    'festivity',\n    'fetal',\n    'fetch',\n    'fever',\n    'fiber',\n    'fiction',\n    'fiddle',\n    'fiddling',\n    'fidelity',\n    'fidgeting',\n    'fidgety',\n    'fifteen',\n    'fifth',\n    'fiftieth',\n    'fifty',\n    'figment',\n    'figure',\n    'figurine',\n    'filing',\n    'filled',\n    'filler',\n    'filling',\n    'film',\n    'filter',\n    'filth',\n    'filtrate',\n    'finale',\n    'finalist',\n    'finalize',\n    'finally',\n    'finance',\n    'financial',\n    'finch',\n    'fineness',\n    'finer',\n    'finicky',\n    'finished',\n    'finisher',\n    'finishing',\n    'finite',\n    'finless',\n    'finlike',\n    'fiscally',\n    'fit',\n    'five',\n    'flaccid',\n    'flagman',\n    'flagpole',\n    'flagship',\n    'flagstick',\n    'flagstone',\n    'flail',\n    'flakily',\n    'flaky',\n    'flame',\n    'flammable',\n    'flanked',\n    'flanking',\n    'flannels',\n    'flap',\n    'flaring',\n    'flashback',\n    'flashbulb',\n    'flashcard',\n    'flashily',\n    'flashing',\n    'flashy',\n    'flask',\n    'flatbed',\n    'flatfoot',\n    'flatly',\n    'flatness',\n    'flatten',\n    'flattered',\n    'flatterer',\n    'flattery',\n    'flattop',\n    'flatware',\n    'flatworm',\n    'flavored',\n    'flavorful',\n    'flavoring',\n    'flaxseed',\n    'fled',\n    'fleshed',\n    'fleshy',\n    'flick',\n    'flier',\n    'flight',\n    'flinch',\n    'fling',\n    'flint',\n    'flip',\n    'flirt',\n    'float',\n    'flock',\n    'flogging',\n    'flop',\n    'floral',\n    'florist',\n    'floss',\n    'flounder',\n    'flyable',\n    'flyaway',\n    'flyer',\n    'flying',\n    'flyover',\n    'flypaper',\n    'foam',\n    'foe',\n    'fog',\n    'foil',\n    'folic',\n    'folk',\n    'follicle',\n    'follow',\n    'fondling',\n    'fondly',\n    'fondness',\n    'fondue',\n    'font',\n    'food',\n    'fool',\n    'footage',\n    'football',\n    'footbath',\n    'footboard',\n    'footer',\n    'footgear',\n    'foothill',\n    'foothold',\n    'footing',\n    'footless',\n    'footman',\n    'footnote',\n    'footpad',\n    'footpath',\n    'footprint',\n    'footrest',\n    'footsie',\n    'footsore',\n    'footwear',\n    'footwork',\n    'fossil',\n    'foster',\n    'founder',\n    'founding',\n    'fountain',\n    'fox',\n    'foyer',\n    'fraction',\n    'fracture',\n    'fragile',\n    'fragility',\n    'fragment',\n    'fragrance',\n    'fragrant',\n    'frail',\n    'frame',\n    'framing',\n    'frantic',\n    'fraternal',\n    'frayed',\n    'fraying',\n    'frays',\n    'freckled',\n    'freckles',\n    'freebase',\n    'freebee',\n    'freebie',\n    'freedom',\n    'freefall',\n    'freehand',\n    'freeing',\n    'freeload',\n    'freely',\n    'freemason',\n    'freeness',\n    'freestyle',\n    'freeware',\n    'freeway',\n    'freewill',\n    'freezable',\n    'freezing',\n    'freight',\n    'french',\n    'frenzied',\n    'frenzy',\n    'frequency',\n    'frequent',\n    'fresh',\n    'fretful',\n    'fretted',\n    'friction',\n    'friday',\n    'fridge',\n    'fried',\n    'friend',\n    'frighten',\n    'frightful',\n    'frigidity',\n    'frigidly',\n    'frill',\n    'fringe',\n    'frisbee',\n    'frisk',\n    'fritter',\n    'frivolous',\n    'frolic',\n    'from',\n    'front',\n    'frostbite',\n    'frosted',\n    'frostily',\n    'frosting',\n    'frostlike',\n    'frosty',\n    'froth',\n    'frown',\n    'frozen',\n    'fructose',\n    'frugality',\n    'frugally',\n    'fruit',\n    'frustrate',\n    'frying',\n    'gab',\n    'gaffe',\n    'gag',\n    'gainfully',\n    'gaining',\n    'gains',\n    'gala',\n    'gallantly',\n    'galleria',\n    'gallery',\n    'galley',\n    'gallon',\n    'gallows',\n    'gallstone',\n    'galore',\n    'galvanize',\n    'gambling',\n    'game',\n    'gaming',\n    'gamma',\n    'gander',\n    'gangly',\n    'gangrene',\n    'gangway',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'gargle',\n    'garland',\n    'garlic',\n    'garment',\n    'garnet',\n    'garnish',\n    'garter',\n    'gas',\n    'gatherer',\n    'gathering',\n    'gating',\n    'gauging',\n    'gauntlet',\n    'gauze',\n    'gave',\n    'gawk',\n    'gazing',\n    'gear',\n    'gecko',\n    'geek',\n    'geiger',\n    'gem',\n    'gender',\n    'generic',\n    'generous',\n    'genetics',\n    'genre',\n    'gentile',\n    'gentleman',\n    'gently',\n    'gents',\n    'geography',\n    'geologic',\n    'geologist',\n    'geology',\n    'geometric',\n    'geometry',\n    'geranium',\n    'gerbil',\n    'geriatric',\n    'germicide',\n    'germinate',\n    'germless',\n    'germproof',\n    'gestate',\n    'gestation',\n    'gesture',\n    'getaway',\n    'getting',\n    'getup',\n    'giant',\n    'gibberish',\n    'giblet',\n    'giddily',\n    'giddiness',\n    'giddy',\n    'gift',\n    'gigabyte',\n    'gigahertz',\n    'gigantic',\n    'giggle',\n    'giggling',\n    'giggly',\n    'gigolo',\n    'gilled',\n    'gills',\n    'gimmick',\n    'girdle',\n    'giveaway',\n    'given',\n    'giver',\n    'giving',\n    'gizmo',\n    'gizzard',\n    'glacial',\n    'glacier',\n    'glade',\n    'gladiator',\n    'gladly',\n    'glamorous',\n    'glamour',\n    'glance',\n    'glancing',\n    'glandular',\n    'glare',\n    'glaring',\n    'glass',\n    'glaucoma',\n    'glazing',\n    'gleaming',\n    'gleeful',\n    'glider',\n    'gliding',\n    'glimmer',\n    'glimpse',\n    'glisten',\n    'glitch',\n    'glitter',\n    'glitzy',\n    'gloater',\n    'gloating',\n    'gloomily',\n    'gloomy',\n    'glorified',\n    'glorifier',\n    'glorify',\n    'glorious',\n    'glory',\n    'gloss',\n    'glove',\n    'glowing',\n    'glowworm',\n    'glucose',\n    'glue',\n    'gluten',\n    'glutinous',\n    'glutton',\n    'gnarly',\n    'gnat',\n    'goal',\n    'goatskin',\n    'goes',\n    'goggles',\n    'going',\n    'goldfish',\n    'goldmine',\n    'goldsmith',\n    'golf',\n    'goliath',\n    'gonad',\n    'gondola',\n    'gone',\n    'gong',\n    'good',\n    'gooey',\n    'goofball',\n    'goofiness',\n    'goofy',\n    'google',\n    'goon',\n    'gopher',\n    'gore',\n    'gorged',\n    'gorgeous',\n    'gory',\n    'gosling',\n    'gossip',\n    'gothic',\n    'gotten',\n    'gout',\n    'gown',\n    'grab',\n    'graceful',\n    'graceless',\n    'gracious',\n    'gradation',\n    'graded',\n    'grader',\n    'gradient',\n    'grading',\n    'gradually',\n    'graduate',\n    'graffiti',\n    'grafted',\n    'grafting',\n    'grain',\n    'granddad',\n    'grandkid',\n    'grandly',\n    'grandma',\n    'grandpa',\n    'grandson',\n    'granite',\n    'granny',\n    'granola',\n    'grant',\n    'granular',\n    'grape',\n    'graph',\n    'grapple',\n    'grappling',\n    'grasp',\n    'grass',\n    'gratified',\n    'gratify',\n    'grating',\n    'gratitude',\n    'gratuity',\n    'gravel',\n    'graveness',\n    'graves',\n    'graveyard',\n    'gravitate',\n    'gravity',\n    'gravy',\n    'gray',\n    'grazing',\n    'greasily',\n    'greedily',\n    'greedless',\n    'greedy',\n    'green',\n    'greeter',\n    'greeting',\n    'grew',\n    'greyhound',\n    'grid',\n    'grief',\n    'grievance',\n    'grieving',\n    'grievous',\n    'grill',\n    'grimace',\n    'grimacing',\n    'grime',\n    'griminess',\n    'grimy',\n    'grinch',\n    'grinning',\n    'grip',\n    'gristle',\n    'grit',\n    'groggily',\n    'groggy',\n    'groin',\n    'groom',\n    'groove',\n    'grooving',\n    'groovy',\n    'grope',\n    'ground',\n    'grouped',\n    'grout',\n    'grove',\n    'grower',\n    'growing',\n    'growl',\n    'grub',\n    'grudge',\n    'grudging',\n    'grueling',\n    'gruffly',\n    'grumble',\n    'grumbling',\n    'grumbly',\n    'grumpily',\n    'grunge',\n    'grunt',\n    'guacamole',\n    'guidable',\n    'guidance',\n    'guide',\n    'guiding',\n    'guileless',\n    'guise',\n    'gulf',\n    'gullible',\n    'gully',\n    'gulp',\n    'gumball',\n    'gumdrop',\n    'gumminess',\n    'gumming',\n    'gummy',\n    'gurgle',\n    'gurgling',\n    'guru',\n    'gush',\n    'gusto',\n    'gusty',\n    'gutless',\n    'guts',\n    'gutter',\n    'guy',\n    'guzzler',\n    'gyration',\n    'habitable',\n    'habitant',\n    'habitat',\n    'habitual',\n    'hacked',\n    'hacker',\n    'hacking',\n    'hacksaw',\n    'had',\n    'haggler',\n    'haiku',\n    'half',\n    'halogen',\n    'halt',\n    'halved',\n    'halves',\n    'hamburger',\n    'hamlet',\n    'hammock',\n    'hamper',\n    'hamster',\n    'hamstring',\n    'handbag',\n    'handball',\n    'handbook',\n    'handbrake',\n    'handcart',\n    'handclap',\n    'handclasp',\n    'handcraft',\n    'handcuff',\n    'handed',\n    'handful',\n    'handgrip',\n    'handgun',\n    'handheld',\n    'handiness',\n    'handiwork',\n    'handlebar',\n    'handled',\n    'handler',\n    'handling',\n    'handmade',\n    'handoff',\n    'handpick',\n    'handprint',\n    'handrail',\n    'handsaw',\n    'handset',\n    'handsfree',\n    'handshake',\n    'handstand',\n    'handwash',\n    'handwork',\n    'handwoven',\n    'handwrite',\n    'handyman',\n    'hangnail',\n    'hangout',\n    'hangover',\n    'hangup',\n    'hankering',\n    'hankie',\n    'hanky',\n    'haphazard',\n    'happening',\n    'happier',\n    'happiest',\n    'happily',\n    'happiness',\n    'happy',\n    'harbor',\n    'hardcopy',\n    'hardcore',\n    'hardcover',\n    'harddisk',\n    'hardened',\n    'hardener',\n    'hardening',\n    'hardhat',\n    'hardhead',\n    'hardiness',\n    'hardly',\n    'hardness',\n    'hardship',\n    'hardware',\n    'hardwired',\n    'hardwood',\n    'hardy',\n    'harmful',\n    'harmless',\n    'harmonica',\n    'harmonics',\n    'harmonize',\n    'harmony',\n    'harness',\n    'harpist',\n    'harsh',\n    'harvest',\n    'hash',\n    'hassle',\n    'haste',\n    'hastily',\n    'hastiness',\n    'hasty',\n    'hatbox',\n    'hatchback',\n    'hatchery',\n    'hatchet',\n    'hatching',\n    'hatchling',\n    'hate',\n    'hatless',\n    'hatred',\n    'haunt',\n    'haven',\n    'hazard',\n    'hazelnut',\n    'hazily',\n    'haziness',\n    'hazing',\n    'hazy',\n    'headache',\n    'headband',\n    'headboard',\n    'headcount',\n    'headdress',\n    'headed',\n    'header',\n    'headfirst',\n    'headgear',\n    'heading',\n    'headlamp',\n    'headless',\n    'headlock',\n    'headphone',\n    'headpiece',\n    'headrest',\n    'headroom',\n    'headscarf',\n    'headset',\n    'headsman',\n    'headstand',\n    'headstone',\n    'headway',\n    'headwear',\n    'heap',\n    'heat',\n    'heave',\n    'heavily',\n    'heaviness',\n    'heaving',\n    'hedge',\n    'hedging',\n    'heftiness',\n    'hefty',\n    'helium',\n    'helmet',\n    'helper',\n    'helpful',\n    'helping',\n    'helpless',\n    'helpline',\n    'hemlock',\n    'hemstitch',\n    'hence',\n    'henchman',\n    'henna',\n    'herald',\n    'herbal',\n    'herbicide',\n    'herbs',\n    'heritage',\n    'hermit',\n    'heroics',\n    'heroism',\n    'herring',\n    'herself',\n    'hertz',\n    'hesitancy',\n    'hesitant',\n    'hesitate',\n    'hexagon',\n    'hexagram',\n    'hubcap',\n    'huddle',\n    'huddling',\n    'huff',\n    'hug',\n    'hula',\n    'hulk',\n    'hull',\n    'human',\n    'humble',\n    'humbling',\n    'humbly',\n    'humid',\n    'humiliate',\n    'humility',\n    'humming',\n    'hummus',\n    'humongous',\n    'humorist',\n    'humorless',\n    'humorous',\n    'humpback',\n    'humped',\n    'humvee',\n    'hunchback',\n    'hundredth',\n    'hunger',\n    'hungrily',\n    'hungry',\n    'hunk',\n    'hunter',\n    'hunting',\n    'huntress',\n    'huntsman',\n    'hurdle',\n    'hurled',\n    'hurler',\n    'hurling',\n    'hurray',\n    'hurricane',\n    'hurried',\n    'hurry',\n    'hurt',\n    'husband',\n    'hush',\n    'husked',\n    'huskiness',\n    'hut',\n    'hybrid',\n    'hydrant',\n    'hydrated',\n    'hydration',\n    'hydrogen',\n    'hydroxide',\n    'hyperlink',\n    'hypertext',\n    'hyphen',\n    'hypnoses',\n    'hypnosis',\n    'hypnotic',\n    'hypnotism',\n    'hypnotist',\n    'hypnotize',\n    'hypocrisy',\n    'hypocrite',\n    'ibuprofen',\n    'ice',\n    'iciness',\n    'icing',\n    'icky',\n    'icon',\n    'icy',\n    'idealism',\n    'idealist',\n    'idealize',\n    'ideally',\n    'idealness',\n    'identical',\n    'identify',\n    'identity',\n    'ideology',\n    'idiocy',\n    'idiom',\n    'idly',\n    'igloo',\n    'ignition',\n    'ignore',\n    'iguana',\n    'illicitly',\n    'illusion',\n    'illusive',\n    'image',\n    'imaginary',\n    'imagines',\n    'imaging',\n    'imbecile',\n    'imitate',\n    'imitation',\n    'immature',\n    'immerse',\n    'immersion',\n    'imminent',\n    'immobile',\n    'immodest',\n    'immorally',\n    'immortal',\n    'immovable',\n    'immovably',\n    'immunity',\n    'immunize',\n    'impaired',\n    'impale',\n    'impart',\n    'impatient',\n    'impeach',\n    'impeding',\n    'impending',\n    'imperfect',\n    'imperial',\n    'impish',\n    'implant',\n    'implement',\n    'implicate',\n    'implicit',\n    'implode',\n    'implosion',\n    'implosive',\n    'imply',\n    'impolite',\n    'important',\n    'importer',\n    'impose',\n    'imposing',\n    'impotence',\n    'impotency',\n    'impotent',\n    'impound',\n    'imprecise',\n    'imprint',\n    'imprison',\n    'impromptu',\n    'improper',\n    'improve',\n    'improving',\n    'improvise',\n    'imprudent',\n    'impulse',\n    'impulsive',\n    'impure',\n    'impurity',\n    'iodine',\n    'iodize',\n    'ion',\n    'ipad',\n    'iphone',\n    'ipod',\n    'irate',\n    'irk',\n    'iron',\n    'irregular',\n    'irrigate',\n    'irritable',\n    'irritably',\n    'irritant',\n    'irritate',\n    'islamic',\n    'islamist',\n    'isolated',\n    'isolating',\n    'isolation',\n    'isotope',\n    'issue',\n    'issuing',\n    'italicize',\n    'italics',\n    'item',\n    'itinerary',\n    'itunes',\n    'ivory',\n    'ivy',\n    'jab',\n    'jackal',\n    'jacket',\n    'jackknife',\n    'jackpot',\n    'jailbird',\n    'jailbreak',\n    'jailer',\n    'jailhouse',\n    'jalapeno',\n    'jam',\n    'janitor',\n    'january',\n    'jargon',\n    'jarring',\n    'jasmine',\n    'jaundice',\n    'jaunt',\n    'java',\n    'jawed',\n    'jawless',\n    'jawline',\n    'jaws',\n    'jaybird',\n    'jaywalker',\n    'jazz',\n    'jeep',\n    'jeeringly',\n    'jellied',\n    'jelly',\n    'jersey',\n    'jester',\n    'jet',\n    'jiffy',\n    'jigsaw',\n    'jimmy',\n    'jingle',\n    'jingling',\n    'jinx',\n    'jitters',\n    'jittery',\n    'job',\n    'jockey',\n    'jockstrap',\n    'jogger',\n    'jogging',\n    'john',\n    'joining',\n    'jokester',\n    'jokingly',\n    'jolliness',\n    'jolly',\n    'jolt',\n    'jot',\n    'jovial',\n    'joyfully',\n    'joylessly',\n    'joyous',\n    'joyride',\n    'joystick',\n    'jubilance',\n    'jubilant',\n    'judge',\n    'judgingly',\n    'judicial',\n    'judiciary',\n    'judo',\n    'juggle',\n    'juggling',\n    'jugular',\n    'juice',\n    'juiciness',\n    'juicy',\n    'jujitsu',\n    'jukebox',\n    'july',\n    'jumble',\n    'jumbo',\n    'jump',\n    'junction',\n    'juncture',\n    'june',\n    'junior',\n    'juniper',\n    'junkie',\n    'junkman',\n    'junkyard',\n    'jurist',\n    'juror',\n    'jury',\n    'justice',\n    'justifier',\n    'justify',\n    'justly',\n    'justness',\n    'juvenile',\n    'kabob',\n    'kangaroo',\n    'karaoke',\n    'karate',\n    'karma',\n    'kebab',\n    'keenly',\n    'keenness',\n    'keep',\n    'keg',\n    'kelp',\n    'kennel',\n    'kept',\n    'kerchief',\n    'kerosene',\n    'kettle',\n    'kick',\n    'kiln',\n    'kilobyte',\n    'kilogram',\n    'kilometer',\n    'kilowatt',\n    'kilt',\n    'kimono',\n    'kindle',\n    'kindling',\n    'kindly',\n    'kindness',\n    'kindred',\n    'kinetic',\n    'kinfolk',\n    'king',\n    'kinship',\n    'kinsman',\n    'kinswoman',\n    'kissable',\n    'kisser',\n    'kissing',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kitty',\n    'kiwi',\n    'kleenex',\n    'knapsack',\n    'knee',\n    'knelt',\n    'knickers',\n    'knoll',\n    'koala',\n    'kooky',\n    'kosher',\n    'krypton',\n    'kudos',\n    'kung',\n    'labored',\n    'laborer',\n    'laboring',\n    'laborious',\n    'labrador',\n    'ladder',\n    'ladies',\n    'ladle',\n    'ladybug',\n    'ladylike',\n    'lagged',\n    'lagging',\n    'lagoon',\n    'lair',\n    'lake',\n    'lance',\n    'landed',\n    'landfall',\n    'landfill',\n    'landing',\n    'landlady',\n    'landless',\n    'landline',\n    'landlord',\n    'landmark',\n    'landmass',\n    'landmine',\n    'landowner',\n    'landscape',\n    'landside',\n    'landslide',\n    'language',\n    'lankiness',\n    'lanky',\n    'lantern',\n    'lapdog',\n    'lapel',\n    'lapped',\n    'lapping',\n    'laptop',\n    'lard',\n    'large',\n    'lark',\n    'lash',\n    'lasso',\n    'last',\n    'latch',\n    'late',\n    'lather',\n    'latitude',\n    'latrine',\n    'latter',\n    'latticed',\n    'launch',\n    'launder',\n    'laundry',\n    'laurel',\n    'lavender',\n    'lavish',\n    'laxative',\n    'lazily',\n    'laziness',\n    'lazy',\n    'lecturer',\n    'left',\n    'legacy',\n    'legal',\n    'legend',\n    'legged',\n    'leggings',\n    'legible',\n    'legibly',\n    'legislate',\n    'lego',\n    'legroom',\n    'legume',\n    'legwarmer',\n    'legwork',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'lent',\n    'leotard',\n    'lesser',\n    'letdown',\n    'lethargic',\n    'lethargy',\n    'letter',\n    'lettuce',\n    'level',\n    'leverage',\n    'levers',\n    'levitate',\n    'levitator',\n    'liability',\n    'liable',\n    'liberty',\n    'librarian',\n    'library',\n    'licking',\n    'licorice',\n    'lid',\n    'life',\n    'lifter',\n    'lifting',\n    'liftoff',\n    'ligament',\n    'likely',\n    'likeness',\n    'likewise',\n    'liking',\n    'lilac',\n    'lilly',\n    'lily',\n    'limb',\n    'limeade',\n    'limelight',\n    'limes',\n    'limit',\n    'limping',\n    'limpness',\n    'line',\n    'lingo',\n    'linguini',\n    'linguist',\n    'lining',\n    'linked',\n    'linoleum',\n    'linseed',\n    'lint',\n    'lion',\n    'lip',\n    'liquefy',\n    'liqueur',\n    'liquid',\n    'lisp',\n    'list',\n    'litigate',\n    'litigator',\n    'litmus',\n    'litter',\n    'little',\n    'livable',\n    'lived',\n    'lively',\n    'liver',\n    'livestock',\n    'lividly',\n    'living',\n    'lizard',\n    'lubricant',\n    'lubricate',\n    'lucid',\n    'luckily',\n    'luckiness',\n    'luckless',\n    'lucrative',\n    'ludicrous',\n    'lugged',\n    'lukewarm',\n    'lullaby',\n    'lumber',\n    'luminance',\n    'luminous',\n    'lumpiness',\n    'lumping',\n    'lumpish',\n    'lunacy',\n    'lunar',\n    'lunchbox',\n    'luncheon',\n    'lunchroom',\n    'lunchtime',\n    'lung',\n    'lurch',\n    'lure',\n    'luridness',\n    'lurk',\n    'lushly',\n    'lushness',\n    'luster',\n    'lustfully',\n    'lustily',\n    'lustiness',\n    'lustrous',\n    'lusty',\n    'luxurious',\n    'luxury',\n    'lying',\n    'lyrically',\n    'lyricism',\n    'lyricist',\n    'lyrics',\n    'macarena',\n    'macaroni',\n    'macaw',\n    'mace',\n    'machine',\n    'machinist',\n    'magazine',\n    'magenta',\n    'maggot',\n    'magical',\n    'magician',\n    'magma',\n    'magnesium',\n    'magnetic',\n    'magnetism',\n    'magnetize',\n    'magnifier',\n    'magnify',\n    'magnitude',\n    'magnolia',\n    'mahogany',\n    'maimed',\n    'majestic',\n    'majesty',\n    'majorette',\n    'majority',\n    'makeover',\n    'maker',\n    'makeshift',\n    'making',\n    'malformed',\n    'malt',\n    'mama',\n    'mammal',\n    'mammary',\n    'mammogram',\n    'manager',\n    'managing',\n    'manatee',\n    'mandarin',\n    'mandate',\n    'mandatory',\n    'mandolin',\n    'manger',\n    'mangle',\n    'mango',\n    'mangy',\n    'manhandle',\n    'manhole',\n    'manhood',\n    'manhunt',\n    'manicotti',\n    'manicure',\n    'manifesto',\n    'manila',\n    'mankind',\n    'manlike',\n    'manliness',\n    'manly',\n    'manmade',\n    'manned',\n    'mannish',\n    'manor',\n    'manpower',\n    'mantis',\n    'mantra',\n    'manual',\n    'many',\n    'map',\n    'marathon',\n    'marauding',\n    'marbled',\n    'marbles',\n    'marbling',\n    'march',\n    'mardi',\n    'margarine',\n    'margarita',\n    'margin',\n    'marigold',\n    'marina',\n    'marine',\n    'marital',\n    'maritime',\n    'marlin',\n    'marmalade',\n    'maroon',\n    'married',\n    'marrow',\n    'marry',\n    'marshland',\n    'marshy',\n    'marsupial',\n    'marvelous',\n    'marxism',\n    'mascot',\n    'masculine',\n    'mashed',\n    'mashing',\n    'massager',\n    'masses',\n    'massive',\n    'mastiff',\n    'matador',\n    'matchbook',\n    'matchbox',\n    'matcher',\n    'matching',\n    'matchless',\n    'material',\n    'maternal',\n    'maternity',\n    'math',\n    'mating',\n    'matriarch',\n    'matrimony',\n    'matrix',\n    'matron',\n    'matted',\n    'matter',\n    'maturely',\n    'maturing',\n    'maturity',\n    'mauve',\n    'maverick',\n    'maximize',\n    'maximum',\n    'maybe',\n    'mayday',\n    'mayflower',\n    'moaner',\n    'moaning',\n    'mobile',\n    'mobility',\n    'mobilize',\n    'mobster',\n    'mocha',\n    'mocker',\n    'mockup',\n    'modified',\n    'modify',\n    'modular',\n    'modulator',\n    'module',\n    'moisten',\n    'moistness',\n    'moisture',\n    'molar',\n    'molasses',\n    'mold',\n    'molecular',\n    'molecule',\n    'molehill',\n    'mollusk',\n    'mom',\n    'monastery',\n    'monday',\n    'monetary',\n    'monetize',\n    'moneybags',\n    'moneyless',\n    'moneywise',\n    'mongoose',\n    'mongrel',\n    'monitor',\n    'monkhood',\n    'monogamy',\n    'monogram',\n    'monologue',\n    'monopoly',\n    'monorail',\n    'monotone',\n    'monotype',\n    'monoxide',\n    'monsieur',\n    'monsoon',\n    'monstrous',\n    'monthly',\n    'monument',\n    'moocher',\n    'moodiness',\n    'moody',\n    'mooing',\n    'moonbeam',\n    'mooned',\n    'moonlight',\n    'moonlike',\n    'moonlit',\n    'moonrise',\n    'moonscape',\n    'moonshine',\n    'moonstone',\n    'moonwalk',\n    'mop',\n    'morale',\n    'morality',\n    'morally',\n    'morbidity',\n    'morbidly',\n    'morphine',\n    'morphing',\n    'morse',\n    'mortality',\n    'mortally',\n    'mortician',\n    'mortified',\n    'mortify',\n    'mortuary',\n    'mosaic',\n    'mossy',\n    'most',\n    'mothball',\n    'mothproof',\n    'motion',\n    'motivate',\n    'motivator',\n    'motive',\n    'motocross',\n    'motor',\n    'motto',\n    'mountable',\n    'mountain',\n    'mounted',\n    'mounting',\n    'mourner',\n    'mournful',\n    'mouse',\n    'mousiness',\n    'moustache',\n    'mousy',\n    'mouth',\n    'movable',\n    'move',\n    'movie',\n    'moving',\n    'mower',\n    'mowing',\n    'much',\n    'muck',\n    'mud',\n    'mug',\n    'mulberry',\n    'mulch',\n    'mule',\n    'mulled',\n    'mullets',\n    'multiple',\n    'multiply',\n    'multitask',\n    'multitude',\n    'mumble',\n    'mumbling',\n    'mumbo',\n    'mummified',\n    'mummify',\n    'mummy',\n    'mumps',\n    'munchkin',\n    'mundane',\n    'municipal',\n    'muppet',\n    'mural',\n    'murkiness',\n    'murky',\n    'murmuring',\n    'muscular',\n    'museum',\n    'mushily',\n    'mushiness',\n    'mushroom',\n    'mushy',\n    'music',\n    'musket',\n    'muskiness',\n    'musky',\n    'mustang',\n    'mustard',\n    'muster',\n    'mustiness',\n    'musty',\n    'mutable',\n    'mutate',\n    'mutation',\n    'mute',\n    'mutilated',\n    'mutilator',\n    'mutiny',\n    'mutt',\n    'mutual',\n    'muzzle',\n    'myself',\n    'myspace',\n    'mystified',\n    'mystify',\n    'myth',\n    'nacho',\n    'nag',\n    'nail',\n    'name',\n    'naming',\n    'nanny',\n    'nanometer',\n    'nape',\n    'napkin',\n    'napped',\n    'napping',\n    'nappy',\n    'narrow',\n    'nastily',\n    'nastiness',\n    'national',\n    'native',\n    'nativity',\n    'natural',\n    'nature',\n    'naturist',\n    'nautical',\n    'navigate',\n    'navigator',\n    'navy',\n    'nearby',\n    'nearest',\n    'nearly',\n    'nearness',\n    'neatly',\n    'neatness',\n    'nebula',\n    'nebulizer',\n    'nectar',\n    'negate',\n    'negation',\n    'negative',\n    'neglector',\n    'negligee',\n    'negligent',\n    'negotiate',\n    'nemeses',\n    'nemesis',\n    'neon',\n    'nephew',\n    'nerd',\n    'nervous',\n    'nervy',\n    'nest',\n    'net',\n    'neurology',\n    'neuron',\n    'neurosis',\n    'neurotic',\n    'neuter',\n    'neutron',\n    'never',\n    'next',\n    'nibble',\n    'nickname',\n    'nicotine',\n    'niece',\n    'nifty',\n    'nimble',\n    'nimbly',\n    'nineteen',\n    'ninetieth',\n    'ninja',\n    'nintendo',\n    'ninth',\n    'nuclear',\n    'nuclei',\n    'nucleus',\n    'nugget',\n    'nullify',\n    'number',\n    'numbing',\n    'numbly',\n    'numbness',\n    'numeral',\n    'numerate',\n    'numerator',\n    'numeric',\n    'numerous',\n    'nuptials',\n    'nursery',\n    'nursing',\n    'nurture',\n    'nutcase',\n    'nutlike',\n    'nutmeg',\n    'nutrient',\n    'nutshell',\n    'nuttiness',\n    'nutty',\n    'nuzzle',\n    'nylon',\n    'oaf',\n    'oak',\n    'oasis',\n    'oat',\n    'obedience',\n    'obedient',\n    'obituary',\n    'object',\n    'obligate',\n    'obliged',\n    'oblivion',\n    'oblivious',\n    'oblong',\n    'obnoxious',\n    'oboe',\n    'obscure',\n    'obscurity',\n    'observant',\n    'observer',\n    'observing',\n    'obsessed',\n    'obsession',\n    'obsessive',\n    'obsolete',\n    'obstacle',\n    'obstinate',\n    'obstruct',\n    'obtain',\n    'obtrusive',\n    'obtuse',\n    'obvious',\n    'occultist',\n    'occupancy',\n    'occupant',\n    'occupier',\n    'occupy',\n    'ocean',\n    'ocelot',\n    'octagon',\n    'octane',\n    'october',\n    'octopus',\n    'ogle',\n    'oil',\n    'oink',\n    'ointment',\n    'okay',\n    'old',\n    'olive',\n    'olympics',\n    'omega',\n    'omen',\n    'ominous',\n    'omission',\n    'omit',\n    'omnivore',\n    'onboard',\n    'oncoming',\n    'ongoing',\n    'onion',\n    'online',\n    'onlooker',\n    'only',\n    'onscreen',\n    'onset',\n    'onshore',\n    'onslaught',\n    'onstage',\n    'onto',\n    'onward',\n    'onyx',\n    'oops',\n    'ooze',\n    'oozy',\n    'opacity',\n    'opal',\n    'open',\n    'operable',\n    'operate',\n    'operating',\n    'operation',\n    'operative',\n    'operator',\n    'opium',\n    'opossum',\n    'opponent',\n    'oppose',\n    'opposing',\n    'opposite',\n    'oppressed',\n    'oppressor',\n    'opt',\n    'opulently',\n    'osmosis',\n    'other',\n    'otter',\n    'ouch',\n    'ought',\n    'ounce',\n    'outage',\n    'outback',\n    'outbid',\n    'outboard',\n    'outbound',\n    'outbreak',\n    'outburst',\n    'outcast',\n    'outclass',\n    'outcome',\n    'outdated',\n    'outdoors',\n    'outer',\n    'outfield',\n    'outfit',\n    'outflank',\n    'outgoing',\n    'outgrow',\n    'outhouse',\n    'outing',\n    'outlast',\n    'outlet',\n    'outline',\n    'outlook',\n    'outlying',\n    'outmatch',\n    'outmost',\n    'outnumber',\n    'outplayed',\n    'outpost',\n    'outpour',\n    'output',\n    'outrage',\n    'outrank',\n    'outreach',\n    'outright',\n    'outscore',\n    'outsell',\n    'outshine',\n    'outshoot',\n    'outsider',\n    'outskirts',\n    'outsmart',\n    'outsource',\n    'outspoken',\n    'outtakes',\n    'outthink',\n    'outward',\n    'outweigh',\n    'outwit',\n    'oval',\n    'ovary',\n    'oven',\n    'overact',\n    'overall',\n    'overarch',\n    'overbid',\n    'overbill',\n    'overbite',\n    'overblown',\n    'overboard',\n    'overbook',\n    'overbuilt',\n    'overcast',\n    'overcoat',\n    'overcome',\n    'overcook',\n    'overcrowd',\n    'overdraft',\n    'overdrawn',\n    'overdress',\n    'overdrive',\n    'overdue',\n    'overeager',\n    'overeater',\n    'overexert',\n    'overfed',\n    'overfeed',\n    'overfill',\n    'overflow',\n    'overfull',\n    'overgrown',\n    'overhand',\n    'overhang',\n    'overhaul',\n    'overhead',\n    'overhear',\n    'overheat',\n    'overhung',\n    'overjoyed',\n    'overkill',\n    'overlabor',\n    'overlaid',\n    'overlap',\n    'overlay',\n    'overload',\n    'overlook',\n    'overlord',\n    'overlying',\n    'overnight',\n    'overpass',\n    'overpay',\n    'overplant',\n    'overplay',\n    'overpower',\n    'overprice',\n    'overrate',\n    'overreach',\n    'overreact',\n    'override',\n    'overripe',\n    'overrule',\n    'overrun',\n    'overshoot',\n    'overshot',\n    'oversight',\n    'oversized',\n    'oversleep',\n    'oversold',\n    'overspend',\n    'overstate',\n    'overstay',\n    'overstep',\n    'overstock',\n    'overstuff',\n    'oversweet',\n    'overtake',\n    'overthrow',\n    'overtime',\n    'overtly',\n    'overtone',\n    'overture',\n    'overturn',\n    'overuse',\n    'overvalue',\n    'overview',\n    'overwrite',\n    'owl',\n    'oxford',\n    'oxidant',\n    'oxidation',\n    'oxidize',\n    'oxidizing',\n    'oxygen',\n    'oxymoron',\n    'oyster',\n    'ozone',\n    'paced',\n    'pacemaker',\n    'pacific',\n    'pacifier',\n    'pacifism',\n    'pacifist',\n    'pacify',\n    'padded',\n    'padding',\n    'paddle',\n    'paddling',\n    'padlock',\n    'pagan',\n    'pager',\n    'paging',\n    'pajamas',\n    'palace',\n    'palatable',\n    'palm',\n    'palpable',\n    'palpitate',\n    'paltry',\n    'pampered',\n    'pamperer',\n    'pampers',\n    'pamphlet',\n    'panama',\n    'pancake',\n    'pancreas',\n    'panda',\n    'pandemic',\n    'pang',\n    'panhandle',\n    'panic',\n    'panning',\n    'panorama',\n    'panoramic',\n    'panther',\n    'pantomime',\n    'pantry',\n    'pants',\n    'pantyhose',\n    'paparazzi',\n    'papaya',\n    'paper',\n    'paprika',\n    'papyrus',\n    'parabola',\n    'parachute',\n    'parade',\n    'paradox',\n    'paragraph',\n    'parakeet',\n    'paralegal',\n    'paralyses',\n    'paralysis',\n    'paralyze',\n    'paramedic',\n    'parameter',\n    'paramount',\n    'parasail',\n    'parasite',\n    'parasitic',\n    'parcel',\n    'parched',\n    'parchment',\n    'pardon',\n    'parish',\n    'parka',\n    'parking',\n    'parkway',\n    'parlor',\n    'parmesan',\n    'parole',\n    'parrot',\n    'parsley',\n    'parsnip',\n    'partake',\n    'parted',\n    'parting',\n    'partition',\n    'partly',\n    'partner',\n    'partridge',\n    'party',\n    'passable',\n    'passably',\n    'passage',\n    'passcode',\n    'passenger',\n    'passerby',\n    'passing',\n    'passion',\n    'passive',\n    'passivism',\n    'passover',\n    'passport',\n    'password',\n    'pasta',\n    'pasted',\n    'pastel',\n    'pastime',\n    'pastor',\n    'pastrami',\n    'pasture',\n    'pasty',\n    'patchwork',\n    'patchy',\n    'paternal',\n    'paternity',\n    'path',\n    'patience',\n    'patient',\n    'patio',\n    'patriarch',\n    'patriot',\n    'patrol',\n    'patronage',\n    'patronize',\n    'pauper',\n    'pavement',\n    'paver',\n    'pavestone',\n    'pavilion',\n    'paving',\n    'pawing',\n    'payable',\n    'payback',\n    'paycheck',\n    'payday',\n    'payee',\n    'payer',\n    'paying',\n    'payment',\n    'payphone',\n    'payroll',\n    'pebble',\n    'pebbly',\n    'pecan',\n    'pectin',\n    'peculiar',\n    'peddling',\n    'pediatric',\n    'pedicure',\n    'pedigree',\n    'pedometer',\n    'pegboard',\n    'pelican',\n    'pellet',\n    'pelt',\n    'pelvis',\n    'penalize',\n    'penalty',\n    'pencil',\n    'pendant',\n    'pending',\n    'penholder',\n    'penknife',\n    'pennant',\n    'penniless',\n    'penny',\n    'penpal',\n    'pension',\n    'pentagon',\n    'pentagram',\n    'pep',\n    'perceive',\n    'percent',\n    'perch',\n    'percolate',\n    'perennial',\n    'perfected',\n    'perfectly',\n    'perfume',\n    'periscope',\n    'perish',\n    'perjurer',\n    'perjury',\n    'perkiness',\n    'perky',\n    'perm',\n    'peroxide',\n    'perpetual',\n    'perplexed',\n    'persecute',\n    'persevere',\n    'persuaded',\n    'persuader',\n    'pesky',\n    'peso',\n    'pessimism',\n    'pessimist',\n    'pester',\n    'pesticide',\n    'petal',\n    'petite',\n    'petition',\n    'petri',\n    'petroleum',\n    'petted',\n    'petticoat',\n    'pettiness',\n    'petty',\n    'petunia',\n    'phantom',\n    'phobia',\n    'phoenix',\n    'phonebook',\n    'phoney',\n    'phonics',\n    'phoniness',\n    'phony',\n    'phosphate',\n    'photo',\n    'phrase',\n    'phrasing',\n    'placard',\n    'placate',\n    'placidly',\n    'plank',\n    'planner',\n    'plant',\n    'plasma',\n    'plaster',\n    'plastic',\n    'plated',\n    'platform',\n    'plating',\n    'platinum',\n    'platonic',\n    'platter',\n    'platypus',\n    'plausible',\n    'plausibly',\n    'playable',\n    'playback',\n    'player',\n    'playful',\n    'playgroup',\n    'playhouse',\n    'playing',\n    'playlist',\n    'playmaker',\n    'playmate',\n    'playoff',\n    'playpen',\n    'playroom',\n    'playset',\n    'plaything',\n    'playtime',\n    'plaza',\n    'pleading',\n    'pleat',\n    'pledge',\n    'plentiful',\n    'plenty',\n    'plethora',\n    'plexiglas',\n    'pliable',\n    'plod',\n    'plop',\n    'plot',\n    'plow',\n    'ploy',\n    'pluck',\n    'plug',\n    'plunder',\n    'plunging',\n    'plural',\n    'plus',\n    'plutonium',\n    'plywood',\n    'poach',\n    'pod',\n    'poem',\n    'poet',\n    'pogo',\n    'pointed',\n    'pointer',\n    'pointing',\n    'pointless',\n    'pointy',\n    'poise',\n    'poison',\n    'poker',\n    'poking',\n    'polar',\n    'police',\n    'policy',\n    'polio',\n    'polish',\n    'politely',\n    'polka',\n    'polo',\n    'polyester',\n    'polygon',\n    'polygraph',\n    'polymer',\n    'poncho',\n    'pond',\n    'pony',\n    'popcorn',\n    'pope',\n    'poplar',\n    'popper',\n    'poppy',\n    'popsicle',\n    'populace',\n    'popular',\n    'populate',\n    'porcupine',\n    'pork',\n    'porous',\n    'porridge',\n    'portable',\n    'portal',\n    'portfolio',\n    'porthole',\n    'portion',\n    'portly',\n    'portside',\n    'poser',\n    'posh',\n    'posing',\n    'possible',\n    'possibly',\n    'possum',\n    'postage',\n    'postal',\n    'postbox',\n    'postcard',\n    'posted',\n    'poster',\n    'posting',\n    'postnasal',\n    'posture',\n    'postwar',\n    'pouch',\n    'pounce',\n    'pouncing',\n    'pound',\n    'pouring',\n    'pout',\n    'powdered',\n    'powdering',\n    'powdery',\n    'power',\n    'powwow',\n    'pox',\n    'praising',\n    'prance',\n    'prancing',\n    'pranker',\n    'prankish',\n    'prankster',\n    'prayer',\n    'praying',\n    'preacher',\n    'preaching',\n    'preachy',\n    'preamble',\n    'precinct',\n    'precise',\n    'precision',\n    'precook',\n    'precut',\n    'predator',\n    'predefine',\n    'predict',\n    'preface',\n    'prefix',\n    'preflight',\n    'preformed',\n    'pregame',\n    'pregnancy',\n    'pregnant',\n    'preheated',\n    'prelaunch',\n    'prelaw',\n    'prelude',\n    'premiere',\n    'premises',\n    'premium',\n    'prenatal',\n    'preoccupy',\n    'preorder',\n    'prepaid',\n    'prepay',\n    'preplan',\n    'preppy',\n    'preschool',\n    'prescribe',\n    'preseason',\n    'preset',\n    'preshow',\n    'president',\n    'presoak',\n    'press',\n    'presume',\n    'presuming',\n    'preteen',\n    'pretended',\n    'pretender',\n    'pretense',\n    'pretext',\n    'pretty',\n    'pretzel',\n    'prevail',\n    'prevalent',\n    'prevent',\n    'preview',\n    'previous',\n    'prewar',\n    'prewashed',\n    'prideful',\n    'pried',\n    'primal',\n    'primarily',\n    'primary',\n    'primate',\n    'primer',\n    'primp',\n    'princess',\n    'print',\n    'prior',\n    'prism',\n    'prison',\n    'prissy',\n    'pristine',\n    'privacy',\n    'private',\n    'privatize',\n    'prize',\n    'proactive',\n    'probable',\n    'probably',\n    'probation',\n    'probe',\n    'probing',\n    'probiotic',\n    'problem',\n    'procedure',\n    'process',\n    'proclaim',\n    'procreate',\n    'procurer',\n    'prodigal',\n    'prodigy',\n    'produce',\n    'product',\n    'profane',\n    'profanity',\n    'professed',\n    'professor',\n    'profile',\n    'profound',\n    'profusely',\n    'progeny',\n    'prognosis',\n    'program',\n    'progress',\n    'projector',\n    'prologue',\n    'prolonged',\n    'promenade',\n    'prominent',\n    'promoter',\n    'promotion',\n    'prompter',\n    'promptly',\n    'prone',\n    'prong',\n    'pronounce',\n    'pronto',\n    'proofing',\n    'proofread',\n    'proofs',\n    'propeller',\n    'properly',\n    'property',\n    'proponent',\n    'proposal',\n    'propose',\n    'props',\n    'prorate',\n    'protector',\n    'protegee',\n    'proton',\n    'prototype',\n    'protozoan',\n    'protract',\n    'protrude',\n    'proud',\n    'provable',\n    'proved',\n    'proven',\n    'provided',\n    'provider',\n    'providing',\n    'province',\n    'proving',\n    'provoke',\n    'provoking',\n    'provolone',\n    'prowess',\n    'prowler',\n    'prowling',\n    'proximity',\n    'proxy',\n    'prozac',\n    'prude',\n    'prudishly',\n    'prune',\n    'pruning',\n    'pry',\n    'psychic',\n    'public',\n    'publisher',\n    'pucker',\n    'pueblo',\n    'pug',\n    'pull',\n    'pulmonary',\n    'pulp',\n    'pulsate',\n    'pulse',\n    'pulverize',\n    'puma',\n    'pumice',\n    'pummel',\n    'punch',\n    'punctual',\n    'punctuate',\n    'punctured',\n    'pungent',\n    'punisher',\n    'punk',\n    'pupil',\n    'puppet',\n    'puppy',\n    'purchase',\n    'pureblood',\n    'purebred',\n    'purely',\n    'pureness',\n    'purgatory',\n    'purge',\n    'purging',\n    'purifier',\n    'purify',\n    'purist',\n    'puritan',\n    'purity',\n    'purple',\n    'purplish',\n    'purposely',\n    'purr',\n    'purse',\n    'pursuable',\n    'pursuant',\n    'pursuit',\n    'purveyor',\n    'pushcart',\n    'pushchair',\n    'pusher',\n    'pushiness',\n    'pushing',\n    'pushover',\n    'pushpin',\n    'pushup',\n    'pushy',\n    'putdown',\n    'putt',\n    'puzzle',\n    'puzzling',\n    'pyramid',\n    'pyromania',\n    'python',\n    'quack',\n    'quadrant',\n    'quail',\n    'quaintly',\n    'quake',\n    'quaking',\n    'qualified',\n    'qualifier',\n    'qualify',\n    'quality',\n    'qualm',\n    'quantum',\n    'quarrel',\n    'quarry',\n    'quartered',\n    'quarterly',\n    'quarters',\n    'quartet',\n    'quench',\n    'query',\n    'quicken',\n    'quickly',\n    'quickness',\n    'quicksand',\n    'quickstep',\n    'quiet',\n    'quill',\n    'quilt',\n    'quintet',\n    'quintuple',\n    'quirk',\n    'quit',\n    'quiver',\n    'quizzical',\n    'quotable',\n    'quotation',\n    'quote',\n    'rabid',\n    'race',\n    'racing',\n    'racism',\n    'rack',\n    'racoon',\n    'radar',\n    'radial',\n    'radiance',\n    'radiantly',\n    'radiated',\n    'radiation',\n    'radiator',\n    'radio',\n    'radish',\n    'raffle',\n    'raft',\n    'rage',\n    'ragged',\n    'raging',\n    'ragweed',\n    'raider',\n    'railcar',\n    'railing',\n    'railroad',\n    'railway',\n    'raisin',\n    'rake',\n    'raking',\n    'rally',\n    'ramble',\n    'rambling',\n    'ramp',\n    'ramrod',\n    'ranch',\n    'rancidity',\n    'random',\n    'ranged',\n    'ranger',\n    'ranging',\n    'ranked',\n    'ranking',\n    'ransack',\n    'ranting',\n    'rants',\n    'rare',\n    'rarity',\n    'rascal',\n    'rash',\n    'rasping',\n    'ravage',\n    'raven',\n    'ravine',\n    'raving',\n    'ravioli',\n    'ravishing',\n    'reabsorb',\n    'reach',\n    'reacquire',\n    'reaction',\n    'reactive',\n    'reactor',\n    'reaffirm',\n    'ream',\n    'reanalyze',\n    'reappear',\n    'reapply',\n    'reappoint',\n    'reapprove',\n    'rearrange',\n    'rearview',\n    'reason',\n    'reassign',\n    'reassure',\n    'reattach',\n    'reawake',\n    'rebalance',\n    'rebate',\n    'rebel',\n    'rebirth',\n    'reboot',\n    'reborn',\n    'rebound',\n    'rebuff',\n    'rebuild',\n    'rebuilt',\n    'reburial',\n    'rebuttal',\n    'recall',\n    'recant',\n    'recapture',\n    'recast',\n    'recede',\n    'recent',\n    'recess',\n    'recharger',\n    'recipient',\n    'recital',\n    'recite',\n    'reckless',\n    'reclaim',\n    'recliner',\n    'reclining',\n    'recluse',\n    'reclusive',\n    'recognize',\n    'recoil',\n    'recollect',\n    'recolor',\n    'reconcile',\n    'reconfirm',\n    'reconvene',\n    'recopy',\n    'record',\n    'recount',\n    'recoup',\n    'recovery',\n    'recreate',\n    'rectal',\n    'rectangle',\n    'rectified',\n    'rectify',\n    'recycled',\n    'recycler',\n    'recycling',\n    'reemerge',\n    'reenact',\n    'reenter',\n    'reentry',\n    'reexamine',\n    'referable',\n    'referee',\n    'reference',\n    'refill',\n    'refinance',\n    'refined',\n    'refinery',\n    'refining',\n    'refinish',\n    'reflected',\n    'reflector',\n    'reflex',\n    'reflux',\n    'refocus',\n    'refold',\n    'reforest',\n    'reformat',\n    'reformed',\n    'reformer',\n    'reformist',\n    'refract',\n    'refrain',\n    'refreeze',\n    'refresh',\n    'refried',\n    'refueling',\n    'refund',\n    'refurbish',\n    'refurnish',\n    'refusal',\n    'refuse',\n    'refusing',\n    'refutable',\n    'refute',\n    'regain',\n    'regalia',\n    'regally',\n    'reggae',\n    'regime',\n    'region',\n    'register',\n    'registrar',\n    'registry',\n    'regress',\n    'regretful',\n    'regroup',\n    'regular',\n    'regulate',\n    'regulator',\n    'rehab',\n    'reheat',\n    'rehire',\n    'rehydrate',\n    'reimburse',\n    'reissue',\n    'reiterate',\n    'rejoice',\n    'rejoicing',\n    'rejoin',\n    'rekindle',\n    'relapse',\n    'relapsing',\n    'relatable',\n    'related',\n    'relation',\n    'relative',\n    'relax',\n    'relay',\n    'relearn',\n    'release',\n    'relenting',\n    'reliable',\n    'reliably',\n    'reliance',\n    'reliant',\n    'relic',\n    'relieve',\n    'relieving',\n    'relight',\n    'relish',\n    'relive',\n    'reload',\n    'relocate',\n    'relock',\n    'reluctant',\n    'rely',\n    'remake',\n    'remark',\n    'remarry',\n    'rematch',\n    'remedial',\n    'remedy',\n    'remember',\n    'reminder',\n    'remindful',\n    'remission',\n    'remix',\n    'remnant',\n    'remodeler',\n    'remold',\n    'remorse',\n    'remote',\n    'removable',\n    'removal',\n    'removed',\n    'remover',\n    'removing',\n    'rename',\n    'renderer',\n    'rendering',\n    'rendition',\n    'renegade',\n    'renewable',\n    'renewably',\n    'renewal',\n    'renewed',\n    'renounce',\n    'renovate',\n    'renovator',\n    'rentable',\n    'rental',\n    'rented',\n    'renter',\n    'reoccupy',\n    'reoccur',\n    'reopen',\n    'reorder',\n    'repackage',\n    'repacking',\n    'repaint',\n    'repair',\n    'repave',\n    'repaying',\n    'repayment',\n    'repeal',\n    'repeated',\n    'repeater',\n    'repent',\n    'rephrase',\n    'replace',\n    'replay',\n    'replica',\n    'reply',\n    'reporter',\n    'repose',\n    'repossess',\n    'repost',\n    'repressed',\n    'reprimand',\n    'reprint',\n    'reprise',\n    'reproach',\n    'reprocess',\n    'reproduce',\n    'reprogram',\n    'reps',\n    'reptile',\n    'reptilian',\n    'repugnant',\n    'repulsion',\n    'repulsive',\n    'repurpose',\n    'reputable',\n    'reputably',\n    'request',\n    'require',\n    'requisite',\n    'reroute',\n    'rerun',\n    'resale',\n    'resample',\n    'rescuer',\n    'reseal',\n    'research',\n    'reselect',\n    'reseller',\n    'resemble',\n    'resend',\n    'resent',\n    'reset',\n    'reshape',\n    'reshoot',\n    'reshuffle',\n    'residence',\n    'residency',\n    'resident',\n    'residual',\n    'residue',\n    'resigned',\n    'resilient',\n    'resistant',\n    'resisting',\n    'resize',\n    'resolute',\n    'resolved',\n    'resonant',\n    'resonate',\n    'resort',\n    'resource',\n    'respect',\n    'resubmit',\n    'result',\n    'resume',\n    'resupply',\n    'resurface',\n    'resurrect',\n    'retail',\n    'retainer',\n    'retaining',\n    'retake',\n    'retaliate',\n    'retention',\n    'rethink',\n    'retinal',\n    'retired',\n    'retiree',\n    'retiring',\n    'retold',\n    'retool',\n    'retorted',\n    'retouch',\n    'retrace',\n    'retract',\n    'retrain',\n    'retread',\n    'retreat',\n    'retrial',\n    'retrieval',\n    'retriever',\n    'retry',\n    'return',\n    'retying',\n    'retype',\n    'reunion',\n    'reunite',\n    'reusable',\n    'reuse',\n    'reveal',\n    'reveler',\n    'revenge',\n    'revenue',\n    'reverb',\n    'revered',\n    'reverence',\n    'reverend',\n    'reversal',\n    'reverse',\n    'reversing',\n    'reversion',\n    'revert',\n    'revisable',\n    'revise',\n    'revision',\n    'revisit',\n    'revivable',\n    'revival',\n    'reviver',\n    'reviving',\n    'revocable',\n    'revoke',\n    'revolt',\n    'revolver',\n    'revolving',\n    'reward',\n    'rewash',\n    'rewind',\n    'rewire',\n    'reword',\n    'rework',\n    'rewrap',\n    'rewrite',\n    'rhyme',\n    'ribbon',\n    'ribcage',\n    'rice',\n    'riches',\n    'richly',\n    'richness',\n    'rickety',\n    'ricotta',\n    'riddance',\n    'ridden',\n    'ride',\n    'riding',\n    'rifling',\n    'rift',\n    'rigging',\n    'rigid',\n    'rigor',\n    'rimless',\n    'rimmed',\n    'rind',\n    'rink',\n    'rinse',\n    'rinsing',\n    'riot',\n    'ripcord',\n    'ripeness',\n    'ripening',\n    'ripping',\n    'ripple',\n    'rippling',\n    'riptide',\n    'rise',\n    'rising',\n    'risk',\n    'risotto',\n    'ritalin',\n    'ritzy',\n    'rival',\n    'riverbank',\n    'riverbed',\n    'riverboat',\n    'riverside',\n    'riveter',\n    'riveting',\n    'roamer',\n    'roaming',\n    'roast',\n    'robbing',\n    'robe',\n    'robin',\n    'robotics',\n    'robust',\n    'rockband',\n    'rocker',\n    'rocket',\n    'rockfish',\n    'rockiness',\n    'rocking',\n    'rocklike',\n    'rockslide',\n    'rockstar',\n    'rocky',\n    'rogue',\n    'roman',\n    'romp',\n    'rope',\n    'roping',\n    'roster',\n    'rosy',\n    'rotten',\n    'rotting',\n    'rotunda',\n    'roulette',\n    'rounding',\n    'roundish',\n    'roundness',\n    'roundup',\n    'roundworm',\n    'routine',\n    'routing',\n    'rover',\n    'roving',\n    'royal',\n    'rubbed',\n    'rubber',\n    'rubbing',\n    'rubble',\n    'rubdown',\n    'ruby',\n    'ruckus',\n    'rudder',\n    'rug',\n    'ruined',\n    'rule',\n    'rumble',\n    'rumbling',\n    'rummage',\n    'rumor',\n    'runaround',\n    'rundown',\n    'runner',\n    'running',\n    'runny',\n    'runt',\n    'runway',\n    'rupture',\n    'rural',\n    'ruse',\n    'rush',\n    'rust',\n    'rut',\n    'sabbath',\n    'sabotage',\n    'sacrament',\n    'sacred',\n    'sacrifice',\n    'sadden',\n    'saddlebag',\n    'saddled',\n    'saddling',\n    'sadly',\n    'sadness',\n    'safari',\n    'safeguard',\n    'safehouse',\n    'safely',\n    'safeness',\n    'saffron',\n    'saga',\n    'sage',\n    'sagging',\n    'saggy',\n    'said',\n    'saint',\n    'sake',\n    'salad',\n    'salami',\n    'salaried',\n    'salary',\n    'saline',\n    'salon',\n    'saloon',\n    'salsa',\n    'salt',\n    'salutary',\n    'salute',\n    'salvage',\n    'salvaging',\n    'salvation',\n    'same',\n    'sample',\n    'sampling',\n    'sanction',\n    'sanctity',\n    'sanctuary',\n    'sandal',\n    'sandbag',\n    'sandbank',\n    'sandbar',\n    'sandblast',\n    'sandbox',\n    'sanded',\n    'sandfish',\n    'sanding',\n    'sandlot',\n    'sandpaper',\n    'sandpit',\n    'sandstone',\n    'sandstorm',\n    'sandworm',\n    'sandy',\n    'sanitary',\n    'sanitizer',\n    'sank',\n    'santa',\n    'sapling',\n    'sappiness',\n    'sappy',\n    'sarcasm',\n    'sarcastic',\n    'sardine',\n    'sash',\n    'sasquatch',\n    'sassy',\n    'satchel',\n    'satiable',\n    'satin',\n    'satirical',\n    'satisfied',\n    'satisfy',\n    'saturate',\n    'saturday',\n    'sauciness',\n    'saucy',\n    'sauna',\n    'savage',\n    'savanna',\n    'saved',\n    'savings',\n    'savior',\n    'savor',\n    'saxophone',\n    'say',\n    'scabbed',\n    'scabby',\n    'scalded',\n    'scalding',\n    'scale',\n    'scaling',\n    'scallion',\n    'scallop',\n    'scalping',\n    'scam',\n    'scandal',\n    'scanner',\n    'scanning',\n    'scant',\n    'scapegoat',\n    'scarce',\n    'scarcity',\n    'scarecrow',\n    'scared',\n    'scarf',\n    'scarily',\n    'scariness',\n    'scarring',\n    'scary',\n    'scavenger',\n    'scenic',\n    'schedule',\n    'schematic',\n    'scheme',\n    'scheming',\n    'schilling',\n    'schnapps',\n    'scholar',\n    'science',\n    'scientist',\n    'scion',\n    'scoff',\n    'scolding',\n    'scone',\n    'scoop',\n    'scooter',\n    'scope',\n    'scorch',\n    'scorebook',\n    'scorecard',\n    'scored',\n    'scoreless',\n    'scorer',\n    'scoring',\n    'scorn',\n    'scorpion',\n    'scotch',\n    'scoundrel',\n    'scoured',\n    'scouring',\n    'scouting',\n    'scouts',\n    'scowling',\n    'scrabble',\n    'scraggly',\n    'scrambled',\n    'scrambler',\n    'scrap',\n    'scratch',\n    'scrawny',\n    'screen',\n    'scribble',\n    'scribe',\n    'scribing',\n    'scrimmage',\n    'script',\n    'scroll',\n    'scrooge',\n    'scrounger',\n    'scrubbed',\n    'scrubber',\n    'scruffy',\n    'scrunch',\n    'scrutiny',\n    'scuba',\n    'scuff',\n    'sculptor',\n    'sculpture',\n    'scurvy',\n    'scuttle',\n    'secluded',\n    'secluding',\n    'seclusion',\n    'second',\n    'secrecy',\n    'secret',\n    'sectional',\n    'sector',\n    'secular',\n    'securely',\n    'security',\n    'sedan',\n    'sedate',\n    'sedation',\n    'sedative',\n    'sediment',\n    'seduce',\n    'seducing',\n    'segment',\n    'seismic',\n    'seizing',\n    'seldom',\n    'selected',\n    'selection',\n    'selective',\n    'selector',\n    'self',\n    'seltzer',\n    'semantic',\n    'semester',\n    'semicolon',\n    'semifinal',\n    'seminar',\n    'semisoft',\n    'semisweet',\n    'senate',\n    'senator',\n    'send',\n    'senior',\n    'senorita',\n    'sensation',\n    'sensitive',\n    'sensitize',\n    'sensually',\n    'sensuous',\n    'sepia',\n    'september',\n    'septic',\n    'septum',\n    'sequel',\n    'sequence',\n    'sequester',\n    'series',\n    'sermon',\n    'serotonin',\n    'serpent',\n    'serrated',\n    'serve',\n    'service',\n    'serving',\n    'sesame',\n    'sessions',\n    'setback',\n    'setting',\n    'settle',\n    'settling',\n    'setup',\n    'sevenfold',\n    'seventeen',\n    'seventh',\n    'seventy',\n    'severity',\n    'shabby',\n    'shack',\n    'shaded',\n    'shadily',\n    'shadiness',\n    'shading',\n    'shadow',\n    'shady',\n    'shaft',\n    'shakable',\n    'shakily',\n    'shakiness',\n    'shaking',\n    'shaky',\n    'shale',\n    'shallot',\n    'shallow',\n    'shame',\n    'shampoo',\n    'shamrock',\n    'shank',\n    'shanty',\n    'shape',\n    'shaping',\n    'share',\n    'sharpener',\n    'sharper',\n    'sharpie',\n    'sharply',\n    'sharpness',\n    'shawl',\n    'sheath',\n    'shed',\n    'sheep',\n    'sheet',\n    'shelf',\n    'shell',\n    'shelter',\n    'shelve',\n    'shelving',\n    'sherry',\n    'shield',\n    'shifter',\n    'shifting',\n    'shiftless',\n    'shifty',\n    'shimmer',\n    'shimmy',\n    'shindig',\n    'shine',\n    'shingle',\n    'shininess',\n    'shining',\n    'shiny',\n    'ship',\n    'shirt',\n    'shivering',\n    'shock',\n    'shone',\n    'shoplift',\n    'shopper',\n    'shopping',\n    'shoptalk',\n    'shore',\n    'shortage',\n    'shortcake',\n    'shortcut',\n    'shorten',\n    'shorter',\n    'shorthand',\n    'shortlist',\n    'shortly',\n    'shortness',\n    'shorts',\n    'shortwave',\n    'shorty',\n    'shout',\n    'shove',\n    'showbiz',\n    'showcase',\n    'showdown',\n    'shower',\n    'showgirl',\n    'showing',\n    'showman',\n    'shown',\n    'showoff',\n    'showpiece',\n    'showplace',\n    'showroom',\n    'showy',\n    'shrank',\n    'shrapnel',\n    'shredder',\n    'shredding',\n    'shrewdly',\n    'shriek',\n    'shrill',\n    'shrimp',\n    'shrine',\n    'shrink',\n    'shrivel',\n    'shrouded',\n    'shrubbery',\n    'shrubs',\n    'shrug',\n    'shrunk',\n    'shucking',\n    'shudder',\n    'shuffle',\n    'shuffling',\n    'shun',\n    'shush',\n    'shut',\n    'shy',\n    'siamese',\n    'siberian',\n    'sibling',\n    'siding',\n    'sierra',\n    'siesta',\n    'sift',\n    'sighing',\n    'silenced',\n    'silencer',\n    'silent',\n    'silica',\n    'silicon',\n    'silk',\n    'silliness',\n    'silly',\n    'silo',\n    'silt',\n    'silver',\n    'similarly',\n    'simile',\n    'simmering',\n    'simple',\n    'simplify',\n    'simply',\n    'sincere',\n    'sincerity',\n    'singer',\n    'singing',\n    'single',\n    'singular',\n    'sinister',\n    'sinless',\n    'sinner',\n    'sinuous',\n    'sip',\n    'siren',\n    'sister',\n    'sitcom',\n    'sitter',\n    'sitting',\n    'situated',\n    'situation',\n    'sixfold',\n    'sixteen',\n    'sixth',\n    'sixties',\n    'sixtieth',\n    'sixtyfold',\n    'sizable',\n    'sizably',\n    'size',\n    'sizing',\n    'sizzle',\n    'sizzling',\n    'skater',\n    'skating',\n    'skedaddle',\n    'skeletal',\n    'skeleton',\n    'skeptic',\n    'sketch',\n    'skewed',\n    'skewer',\n    'skid',\n    'skied',\n    'skier',\n    'skies',\n    'skiing',\n    'skilled',\n    'skillet',\n    'skillful',\n    'skimmed',\n    'skimmer',\n    'skimming',\n    'skimpily',\n    'skincare',\n    'skinhead',\n    'skinless',\n    'skinning',\n    'skinny',\n    'skintight',\n    'skipper',\n    'skipping',\n    'skirmish',\n    'skirt',\n    'skittle',\n    'skydiver',\n    'skylight',\n    'skyline',\n    'skype',\n    'skyrocket',\n    'skyward',\n    'slab',\n    'slacked',\n    'slacker',\n    'slacking',\n    'slackness',\n    'slacks',\n    'slain',\n    'slam',\n    'slander',\n    'slang',\n    'slapping',\n    'slapstick',\n    'slashed',\n    'slashing',\n    'slate',\n    'slather',\n    'slaw',\n    'sled',\n    'sleek',\n    'sleep',\n    'sleet',\n    'sleeve',\n    'slept',\n    'sliceable',\n    'sliced',\n    'slicer',\n    'slicing',\n    'slick',\n    'slider',\n    'slideshow',\n    'sliding',\n    'slighted',\n    'slighting',\n    'slightly',\n    'slimness',\n    'slimy',\n    'slinging',\n    'slingshot',\n    'slinky',\n    'slip',\n    'slit',\n    'sliver',\n    'slobbery',\n    'slogan',\n    'sloped',\n    'sloping',\n    'sloppily',\n    'sloppy',\n    'slot',\n    'slouching',\n    'slouchy',\n    'sludge',\n    'slug',\n    'slum',\n    'slurp',\n    'slush',\n    'sly',\n    'small',\n    'smartly',\n    'smartness',\n    'smasher',\n    'smashing',\n    'smashup',\n    'smell',\n    'smelting',\n    'smile',\n    'smilingly',\n    'smirk',\n    'smite',\n    'smith',\n    'smitten',\n    'smock',\n    'smog',\n    'smoked',\n    'smokeless',\n    'smokiness',\n    'smoking',\n    'smoky',\n    'smolder',\n    'smooth',\n    'smother',\n    'smudge',\n    'smudgy',\n    'smuggler',\n    'smuggling',\n    'smugly',\n    'smugness',\n    'snack',\n    'snagged',\n    'snaking',\n    'snap',\n    'snare',\n    'snarl',\n    'snazzy',\n    'sneak',\n    'sneer',\n    'sneeze',\n    'sneezing',\n    'snide',\n    'sniff',\n    'snippet',\n    'snipping',\n    'snitch',\n    'snooper',\n    'snooze',\n    'snore',\n    'snoring',\n    'snorkel',\n    'snort',\n    'snout',\n    'snowbird',\n    'snowboard',\n    'snowbound',\n    'snowcap',\n    'snowdrift',\n    'snowdrop',\n    'snowfall',\n    'snowfield',\n    'snowflake',\n    'snowiness',\n    'snowless',\n    'snowman',\n    'snowplow',\n    'snowshoe',\n    'snowstorm',\n    'snowsuit',\n    'snowy',\n    'snub',\n    'snuff',\n    'snuggle',\n    'snugly',\n    'snugness',\n    'speak',\n    'spearfish',\n    'spearhead',\n    'spearman',\n    'spearmint',\n    'species',\n    'specimen',\n    'specked',\n    'speckled',\n    'specks',\n    'spectacle',\n    'spectator',\n    'spectrum',\n    'speculate',\n    'speech',\n    'speed',\n    'spellbind',\n    'speller',\n    'spelling',\n    'spendable',\n    'spender',\n    'spending',\n    'spent',\n    'spew',\n    'sphere',\n    'spherical',\n    'sphinx',\n    'spider',\n    'spied',\n    'spiffy',\n    'spill',\n    'spilt',\n    'spinach',\n    'spinal',\n    'spindle',\n    'spinner',\n    'spinning',\n    'spinout',\n    'spinster',\n    'spiny',\n    'spiral',\n    'spirited',\n    'spiritism',\n    'spirits',\n    'spiritual',\n    'splashed',\n    'splashing',\n    'splashy',\n    'splatter',\n    'spleen',\n    'splendid',\n    'splendor',\n    'splice',\n    'splicing',\n    'splinter',\n    'splotchy',\n    'splurge',\n    'spoilage',\n    'spoiled',\n    'spoiler',\n    'spoiling',\n    'spoils',\n    'spoken',\n    'spokesman',\n    'sponge',\n    'spongy',\n    'sponsor',\n    'spoof',\n    'spookily',\n    'spooky',\n    'spool',\n    'spoon',\n    'spore',\n    'sporting',\n    'sports',\n    'sporty',\n    'spotless',\n    'spotlight',\n    'spotted',\n    'spotter',\n    'spotting',\n    'spotty',\n    'spousal',\n    'spouse',\n    'spout',\n    'sprain',\n    'sprang',\n    'sprawl',\n    'spray',\n    'spree',\n    'sprig',\n    'spring',\n    'sprinkled',\n    'sprinkler',\n    'sprint',\n    'sprite',\n    'sprout',\n    'spruce',\n    'sprung',\n    'spry',\n    'spud',\n    'spur',\n    'sputter',\n    'spyglass',\n    'squabble',\n    'squad',\n    'squall',\n    'squander',\n    'squash',\n    'squatted',\n    'squatter',\n    'squatting',\n    'squeak',\n    'squealer',\n    'squealing',\n    'squeamish',\n    'squeegee',\n    'squeeze',\n    'squeezing',\n    'squid',\n    'squiggle',\n    'squiggly',\n    'squint',\n    'squire',\n    'squirt',\n    'squishier',\n    'squishy',\n    'stability',\n    'stabilize',\n    'stable',\n    'stack',\n    'stadium',\n    'staff',\n    'stage',\n    'staging',\n    'stagnant',\n    'stagnate',\n    'stainable',\n    'stained',\n    'staining',\n    'stainless',\n    'stalemate',\n    'staleness',\n    'stalling',\n    'stallion',\n    'stamina',\n    'stammer',\n    'stamp',\n    'stand',\n    'stank',\n    'staple',\n    'stapling',\n    'starboard',\n    'starch',\n    'stardom',\n    'stardust',\n    'starfish',\n    'stargazer',\n    'staring',\n    'stark',\n    'starless',\n    'starlet',\n    'starlight',\n    'starlit',\n    'starring',\n    'starry',\n    'starship',\n    'starter',\n    'starting',\n    'startle',\n    'startling',\n    'startup',\n    'starved',\n    'starving',\n    'stash',\n    'state',\n    'static',\n    'statistic',\n    'statue',\n    'stature',\n    'status',\n    'statute',\n    'statutory',\n    'staunch',\n    'stays',\n    'steadfast',\n    'steadier',\n    'steadily',\n    'steadying',\n    'steam',\n    'steed',\n    'steep',\n    'steerable',\n    'steering',\n    'steersman',\n    'stegosaur',\n    'stellar',\n    'stem',\n    'stench',\n    'stencil',\n    'step',\n    'stereo',\n    'sterile',\n    'sterility',\n    'sterilize',\n    'sterling',\n    'sternness',\n    'sternum',\n    'stew',\n    'stick',\n    'stiffen',\n    'stiffly',\n    'stiffness',\n    'stifle',\n    'stifling',\n    'stillness',\n    'stilt',\n    'stimulant',\n    'stimulate',\n    'stimuli',\n    'stimulus',\n    'stinger',\n    'stingily',\n    'stinging',\n    'stingray',\n    'stingy',\n    'stinking',\n    'stinky',\n    'stipend',\n    'stipulate',\n    'stir',\n    'stitch',\n    'stock',\n    'stoic',\n    'stoke',\n    'stole',\n    'stomp',\n    'stonewall',\n    'stoneware',\n    'stonework',\n    'stoning',\n    'stony',\n    'stood',\n    'stooge',\n    'stool',\n    'stoop',\n    'stoplight',\n    'stoppable',\n    'stoppage',\n    'stopped',\n    'stopper',\n    'stopping',\n    'stopwatch',\n    'storable',\n    'storage',\n    'storeroom',\n    'storewide',\n    'storm',\n    'stout',\n    'stove',\n    'stowaway',\n    'stowing',\n    'straddle',\n    'straggler',\n    'strained',\n    'strainer',\n    'straining',\n    'strangely',\n    'stranger',\n    'strangle',\n    'strategic',\n    'strategy',\n    'stratus',\n    'straw',\n    'stray',\n    'streak',\n    'stream',\n    'street',\n    'strength',\n    'strenuous',\n    'strep',\n    'stress',\n    'stretch',\n    'strewn',\n    'stricken',\n    'strict',\n    'stride',\n    'strife',\n    'strike',\n    'striking',\n    'strive',\n    'striving',\n    'strobe',\n    'strode',\n    'stroller',\n    'strongbox',\n    'strongly',\n    'strongman',\n    'struck',\n    'structure',\n    'strudel',\n    'struggle',\n    'strum',\n    'strung',\n    'strut',\n    'stubbed',\n    'stubble',\n    'stubbly',\n    'stubborn',\n    'stucco',\n    'stuck',\n    'student',\n    'studied',\n    'studio',\n    'study',\n    'stuffed',\n    'stuffing',\n    'stuffy',\n    'stumble',\n    'stumbling',\n    'stump',\n    'stung',\n    'stunned',\n    'stunner',\n    'stunning',\n    'stunt',\n    'stupor',\n    'sturdily',\n    'sturdy',\n    'styling',\n    'stylishly',\n    'stylist',\n    'stylized',\n    'stylus',\n    'suave',\n    'subarctic',\n    'subatomic',\n    'subdivide',\n    'subdued',\n    'subduing',\n    'subfloor',\n    'subgroup',\n    'subheader',\n    'subject',\n    'sublease',\n    'sublet',\n    'sublevel',\n    'sublime',\n    'submarine',\n    'submerge',\n    'submersed',\n    'submitter',\n    'subpanel',\n    'subpar',\n    'subplot',\n    'subprime',\n    'subscribe',\n    'subscript',\n    'subsector',\n    'subside',\n    'subsiding',\n    'subsidize',\n    'subsidy',\n    'subsoil',\n    'subsonic',\n    'substance',\n    'subsystem',\n    'subtext',\n    'subtitle',\n    'subtly',\n    'subtotal',\n    'subtract',\n    'subtype',\n    'suburb',\n    'subway',\n    'subwoofer',\n    'subzero',\n    'succulent',\n    'such',\n    'suction',\n    'sudden',\n    'sudoku',\n    'suds',\n    'sufferer',\n    'suffering',\n    'suffice',\n    'suffix',\n    'suffocate',\n    'suffrage',\n    'sugar',\n    'suggest',\n    'suing',\n    'suitable',\n    'suitably',\n    'suitcase',\n    'suitor',\n    'sulfate',\n    'sulfide',\n    'sulfite',\n    'sulfur',\n    'sulk',\n    'sullen',\n    'sulphate',\n    'sulphuric',\n    'sultry',\n    'superbowl',\n    'superglue',\n    'superhero',\n    'superior',\n    'superjet',\n    'superman',\n    'supermom',\n    'supernova',\n    'supervise',\n    'supper',\n    'supplier',\n    'supply',\n    'support',\n    'supremacy',\n    'supreme',\n    'surcharge',\n    'surely',\n    'sureness',\n    'surface',\n    'surfacing',\n    'surfboard',\n    'surfer',\n    'surgery',\n    'surgical',\n    'surging',\n    'surname',\n    'surpass',\n    'surplus',\n    'surprise',\n    'surreal',\n    'surrender',\n    'surrogate',\n    'surround',\n    'survey',\n    'survival',\n    'survive',\n    'surviving',\n    'survivor',\n    'sushi',\n    'suspect',\n    'suspend',\n    'suspense',\n    'sustained',\n    'sustainer',\n    'swab',\n    'swaddling',\n    'swagger',\n    'swampland',\n    'swan',\n    'swapping',\n    'swarm',\n    'sway',\n    'swear',\n    'sweat',\n    'sweep',\n    'swell',\n    'swept',\n    'swerve',\n    'swifter',\n    'swiftly',\n    'swiftness',\n    'swimmable',\n    'swimmer',\n    'swimming',\n    'swimsuit',\n    'swimwear',\n    'swinger',\n    'swinging',\n    'swipe',\n    'swirl',\n    'switch',\n    'swivel',\n    'swizzle',\n    'swooned',\n    'swoop',\n    'swoosh',\n    'swore',\n    'sworn',\n    'swung',\n    'sycamore',\n    'sympathy',\n    'symphonic',\n    'symphony',\n    'symptom',\n    'synapse',\n    'syndrome',\n    'synergy',\n    'synopses',\n    'synopsis',\n    'synthesis',\n    'synthetic',\n    'syrup',\n    'system',\n    't-shirt',\n    'tabasco',\n    'tabby',\n    'tableful',\n    'tables',\n    'tablet',\n    'tableware',\n    'tabloid',\n    'tackiness',\n    'tacking',\n    'tackle',\n    'tackling',\n    'tacky',\n    'taco',\n    'tactful',\n    'tactical',\n    'tactics',\n    'tactile',\n    'tactless',\n    'tadpole',\n    'taekwondo',\n    'tag',\n    'tainted',\n    'take',\n    'taking',\n    'talcum',\n    'talisman',\n    'tall',\n    'talon',\n    'tamale',\n    'tameness',\n    'tamer',\n    'tamper',\n    'tank',\n    'tanned',\n    'tannery',\n    'tanning',\n    'tantrum',\n    'tapeless',\n    'tapered',\n    'tapering',\n    'tapestry',\n    'tapioca',\n    'tapping',\n    'taps',\n    'tarantula',\n    'target',\n    'tarmac',\n    'tarnish',\n    'tarot',\n    'tartar',\n    'tartly',\n    'tartness',\n    'task',\n    'tassel',\n    'taste',\n    'tastiness',\n    'tasting',\n    'tasty',\n    'tattered',\n    'tattle',\n    'tattling',\n    'tattoo',\n    'taunt',\n    'tavern',\n    'thank',\n    'that',\n    'thaw',\n    'theater',\n    'theatrics',\n    'thee',\n    'theft',\n    'theme',\n    'theology',\n    'theorize',\n    'thermal',\n    'thermos',\n    'thesaurus',\n    'these',\n    'thesis',\n    'thespian',\n    'thicken',\n    'thicket',\n    'thickness',\n    'thieving',\n    'thievish',\n    'thigh',\n    'thimble',\n    'thing',\n    'think',\n    'thinly',\n    'thinner',\n    'thinness',\n    'thinning',\n    'thirstily',\n    'thirsting',\n    'thirsty',\n    'thirteen',\n    'thirty',\n    'thong',\n    'thorn',\n    'those',\n    'thousand',\n    'thrash',\n    'thread',\n    'threaten',\n    'threefold',\n    'thrift',\n    'thrill',\n    'thrive',\n    'thriving',\n    'throat',\n    'throbbing',\n    'throng',\n    'throttle',\n    'throwaway',\n    'throwback',\n    'thrower',\n    'throwing',\n    'thud',\n    'thumb',\n    'thumping',\n    'thursday',\n    'thus',\n    'thwarting',\n    'thyself',\n    'tiara',\n    'tibia',\n    'tidal',\n    'tidbit',\n    'tidiness',\n    'tidings',\n    'tidy',\n    'tiger',\n    'tighten',\n    'tightly',\n    'tightness',\n    'tightrope',\n    'tightwad',\n    'tigress',\n    'tile',\n    'tiling',\n    'till',\n    'tilt',\n    'timid',\n    'timing',\n    'timothy',\n    'tinderbox',\n    'tinfoil',\n    'tingle',\n    'tingling',\n    'tingly',\n    'tinker',\n    'tinkling',\n    'tinsel',\n    'tinsmith',\n    'tint',\n    'tinwork',\n    'tiny',\n    'tipoff',\n    'tipped',\n    'tipper',\n    'tipping',\n    'tiptoeing',\n    'tiptop',\n    'tiring',\n    'tissue',\n    'trace',\n    'tracing',\n    'track',\n    'traction',\n    'tractor',\n    'trade',\n    'trading',\n    'tradition',\n    'traffic',\n    'tragedy',\n    'trailing',\n    'trailside',\n    'train',\n    'traitor',\n    'trance',\n    'tranquil',\n    'transfer',\n    'transform',\n    'translate',\n    'transpire',\n    'transport',\n    'transpose',\n    'trapdoor',\n    'trapeze',\n    'trapezoid',\n    'trapped',\n    'trapper',\n    'trapping',\n    'traps',\n    'trash',\n    'travel',\n    'traverse',\n    'travesty',\n    'tray',\n    'treachery',\n    'treading',\n    'treadmill',\n    'treason',\n    'treat',\n    'treble',\n    'tree',\n    'trekker',\n    'tremble',\n    'trembling',\n    'tremor',\n    'trench',\n    'trend',\n    'trespass',\n    'triage',\n    'trial',\n    'triangle',\n    'tribesman',\n    'tribunal',\n    'tribune',\n    'tributary',\n    'tribute',\n    'triceps',\n    'trickery',\n    'trickily',\n    'tricking',\n    'trickle',\n    'trickster',\n    'tricky',\n    'tricolor',\n    'tricycle',\n    'trident',\n    'tried',\n    'trifle',\n    'trifocals',\n    'trillion',\n    'trilogy',\n    'trimester',\n    'trimmer',\n    'trimming',\n    'trimness',\n    'trinity',\n    'trio',\n    'tripod',\n    'tripping',\n    'triumph',\n    'trivial',\n    'trodden',\n    'trolling',\n    'trombone',\n    'trophy',\n    'tropical',\n    'tropics',\n    'trouble',\n    'troubling',\n    'trough',\n    'trousers',\n    'trout',\n    'trowel',\n    'truce',\n    'truck',\n    'truffle',\n    'trump',\n    'trunks',\n    'trustable',\n    'trustee',\n    'trustful',\n    'trusting',\n    'trustless',\n    'truth',\n    'try',\n    'tubby',\n    'tubeless',\n    'tubular',\n    'tucking',\n    'tuesday',\n    'tug',\n    'tuition',\n    'tulip',\n    'tumble',\n    'tumbling',\n    'tummy',\n    'turban',\n    'turbine',\n    'turbofan',\n    'turbojet',\n    'turbulent',\n    'turf',\n    'turkey',\n    'turmoil',\n    'turret',\n    'turtle',\n    'tusk',\n    'tutor',\n    'tutu',\n    'tux',\n    'tweak',\n    'tweed',\n    'tweet',\n    'tweezers',\n    'twelve',\n    'twentieth',\n    'twenty',\n    'twerp',\n    'twice',\n    'twiddle',\n    'twiddling',\n    'twig',\n    'twilight',\n    'twine',\n    'twins',\n    'twirl',\n    'twistable',\n    'twisted',\n    'twister',\n    'twisting',\n    'twisty',\n    'twitch',\n    'twitter',\n    'tycoon',\n    'tying',\n    'tyke',\n    'udder',\n    'ultimate',\n    'ultimatum',\n    'ultra',\n    'umbilical',\n    'umbrella',\n    'umpire',\n    'unabashed',\n    'unable',\n    'unadorned',\n    'unadvised',\n    'unafraid',\n    'unaired',\n    'unaligned',\n    'unaltered',\n    'unarmored',\n    'unashamed',\n    'unaudited',\n    'unawake',\n    'unaware',\n    'unbaked',\n    'unbalance',\n    'unbeaten',\n    'unbend',\n    'unbent',\n    'unbiased',\n    'unbitten',\n    'unblended',\n    'unblessed',\n    'unblock',\n    'unbolted',\n    'unbounded',\n    'unboxed',\n    'unbraided',\n    'unbridle',\n    'unbroken',\n    'unbuckled',\n    'unbundle',\n    'unburned',\n    'unbutton',\n    'uncanny',\n    'uncapped',\n    'uncaring',\n    'uncertain',\n    'unchain',\n    'unchanged',\n    'uncharted',\n    'uncheck',\n    'uncivil',\n    'unclad',\n    'unclaimed',\n    'unclamped',\n    'unclasp',\n    'uncle',\n    'unclip',\n    'uncloak',\n    'unclog',\n    'unclothed',\n    'uncoated',\n    'uncoiled',\n    'uncolored',\n    'uncombed',\n    'uncommon',\n    'uncooked',\n    'uncork',\n    'uncorrupt',\n    'uncounted',\n    'uncouple',\n    'uncouth',\n    'uncover',\n    'uncross',\n    'uncrown',\n    'uncrushed',\n    'uncured',\n    'uncurious',\n    'uncurled',\n    'uncut',\n    'undamaged',\n    'undated',\n    'undaunted',\n    'undead',\n    'undecided',\n    'undefined',\n    'underage',\n    'underarm',\n    'undercoat',\n    'undercook',\n    'undercut',\n    'underdog',\n    'underdone',\n    'underfed',\n    'underfeed',\n    'underfoot',\n    'undergo',\n    'undergrad',\n    'underhand',\n    'underline',\n    'underling',\n    'undermine',\n    'undermost',\n    'underpaid',\n    'underpass',\n    'underpay',\n    'underrate',\n    'undertake',\n    'undertone',\n    'undertook',\n    'undertow',\n    'underuse',\n    'underwear',\n    'underwent',\n    'underwire',\n    'undesired',\n    'undiluted',\n    'undivided',\n    'undocked',\n    'undoing',\n    'undone',\n    'undrafted',\n    'undress',\n    'undrilled',\n    'undusted',\n    'undying',\n    'unearned',\n    'unearth',\n    'unease',\n    'uneasily',\n    'uneasy',\n    'uneatable',\n    'uneaten',\n    'unedited',\n    'unelected',\n    'unending',\n    'unengaged',\n    'unenvied',\n    'unequal',\n    'unethical',\n    'uneven',\n    'unexpired',\n    'unexposed',\n    'unfailing',\n    'unfair',\n    'unfasten',\n    'unfazed',\n    'unfeeling',\n    'unfiled',\n    'unfilled',\n    'unfitted',\n    'unfitting',\n    'unfixable',\n    'unfixed',\n    'unflawed',\n    'unfocused',\n    'unfold',\n    'unfounded',\n    'unframed',\n    'unfreeze',\n    'unfrosted',\n    'unfrozen',\n    'unfunded',\n    'unglazed',\n    'ungloved',\n    'unglue',\n    'ungodly',\n    'ungraded',\n    'ungreased',\n    'unguarded',\n    'unguided',\n    'unhappily',\n    'unhappy',\n    'unharmed',\n    'unhealthy',\n    'unheard',\n    'unhearing',\n    'unheated',\n    'unhelpful',\n    'unhidden',\n    'unhinge',\n    'unhitched',\n    'unholy',\n    'unhook',\n    'unicorn',\n    'unicycle',\n    'unified',\n    'unifier',\n    'uniformed',\n    'uniformly',\n    'unify',\n    'unimpeded',\n    'uninjured',\n    'uninstall',\n    'uninsured',\n    'uninvited',\n    'union',\n    'uniquely',\n    'unisexual',\n    'unison',\n    'unissued',\n    'unit',\n    'universal',\n    'universe',\n    'unjustly',\n    'unkempt',\n    'unkind',\n    'unknotted',\n    'unknowing',\n    'unknown',\n    'unlaced',\n    'unlatch',\n    'unlawful',\n    'unleaded',\n    'unlearned',\n    'unleash',\n    'unless',\n    'unleveled',\n    'unlighted',\n    'unlikable',\n    'unlimited',\n    'unlined',\n    'unlinked',\n    'unlisted',\n    'unlit',\n    'unlivable',\n    'unloaded',\n    'unloader',\n    'unlocked',\n    'unlocking',\n    'unlovable',\n    'unloved',\n    'unlovely',\n    'unloving',\n    'unluckily',\n    'unlucky',\n    'unmade',\n    'unmanaged',\n    'unmanned',\n    'unmapped',\n    'unmarked',\n    'unmasked',\n    'unmasking',\n    'unmatched',\n    'unmindful',\n    'unmixable',\n    'unmixed',\n    'unmolded',\n    'unmoral',\n    'unmovable',\n    'unmoved',\n    'unmoving',\n    'unnamable',\n    'unnamed',\n    'unnatural',\n    'unneeded',\n    'unnerve',\n    'unnerving',\n    'unnoticed',\n    'unopened',\n    'unopposed',\n    'unpack',\n    'unpadded',\n    'unpaid',\n    'unpainted',\n    'unpaired',\n    'unpaved',\n    'unpeeled',\n    'unpicked',\n    'unpiloted',\n    'unpinned',\n    'unplanned',\n    'unplanted',\n    'unpleased',\n    'unpledged',\n    'unplowed',\n    'unplug',\n    'unpopular',\n    'unproven',\n    'unquote',\n    'unranked',\n    'unrated',\n    'unraveled',\n    'unreached',\n    'unread',\n    'unreal',\n    'unreeling',\n    'unrefined',\n    'unrelated',\n    'unrented',\n    'unrest',\n    'unretired',\n    'unrevised',\n    'unrigged',\n    'unripe',\n    'unrivaled',\n    'unroasted',\n    'unrobed',\n    'unroll',\n    'unruffled',\n    'unruly',\n    'unrushed',\n    'unsaddle',\n    'unsafe',\n    'unsaid',\n    'unsalted',\n    'unsaved',\n    'unsavory',\n    'unscathed',\n    'unscented',\n    'unscrew',\n    'unsealed',\n    'unseated',\n    'unsecured',\n    'unseeing',\n    'unseemly',\n    'unseen',\n    'unselect',\n    'unselfish',\n    'unsent',\n    'unsettled',\n    'unshackle',\n    'unshaken',\n    'unshaved',\n    'unshaven',\n    'unsheathe',\n    'unshipped',\n    'unsightly',\n    'unsigned',\n    'unskilled',\n    'unsliced',\n    'unsmooth',\n    'unsnap',\n    'unsocial',\n    'unsoiled',\n    'unsold',\n    'unsolved',\n    'unsorted',\n    'unspoiled',\n    'unspoken',\n    'unstable',\n    'unstaffed',\n    'unstamped',\n    'unsteady',\n    'unsterile',\n    'unstirred',\n    'unstitch',\n    'unstopped',\n    'unstuck',\n    'unstuffed',\n    'unstylish',\n    'unsubtle',\n    'unsubtly',\n    'unsuited',\n    'unsure',\n    'unsworn',\n    'untagged',\n    'untainted',\n    'untaken',\n    'untamed',\n    'untangled',\n    'untapped',\n    'untaxed',\n    'unthawed',\n    'unthread',\n    'untidy',\n    'untie',\n    'until',\n    'untimed',\n    'untimely',\n    'untitled',\n    'untoasted',\n    'untold',\n    'untouched',\n    'untracked',\n    'untrained',\n    'untreated',\n    'untried',\n    'untrimmed',\n    'untrue',\n    'untruth',\n    'unturned',\n    'untwist',\n    'untying',\n    'unusable',\n    'unused',\n    'unusual',\n    'unvalued',\n    'unvaried',\n    'unvarying',\n    'unveiled',\n    'unveiling',\n    'unvented',\n    'unviable',\n    'unvisited',\n    'unvocal',\n    'unwanted',\n    'unwarlike',\n    'unwary',\n    'unwashed',\n    'unwatched',\n    'unweave',\n    'unwed',\n    'unwelcome',\n    'unwell',\n    'unwieldy',\n    'unwilling',\n    'unwind',\n    'unwired',\n    'unwitting',\n    'unwomanly',\n    'unworldly',\n    'unworn',\n    'unworried',\n    'unworthy',\n    'unwound',\n    'unwoven',\n    'unwrapped',\n    'unwritten',\n    'unzip',\n    'upbeat',\n    'upchuck',\n    'upcoming',\n    'upcountry',\n    'update',\n    'upfront',\n    'upgrade',\n    'upheaval',\n    'upheld',\n    'uphill',\n    'uphold',\n    'uplifted',\n    'uplifting',\n    'upload',\n    'upon',\n    'upper',\n    'upright',\n    'uprising',\n    'upriver',\n    'uproar',\n    'uproot',\n    'upscale',\n    'upside',\n    'upstage',\n    'upstairs',\n    'upstart',\n    'upstate',\n    'upstream',\n    'upstroke',\n    'upswing',\n    'uptake',\n    'uptight',\n    'uptown',\n    'upturned',\n    'upward',\n    'upwind',\n    'uranium',\n    'urban',\n    'urchin',\n    'urethane',\n    'urgency',\n    'urgent',\n    'urging',\n    'urologist',\n    'urology',\n    'usable',\n    'usage',\n    'useable',\n    'used',\n    'uselessly',\n    'user',\n    'usher',\n    'usual',\n    'utensil',\n    'utility',\n    'utilize',\n    'utmost',\n    'utopia',\n    'utter',\n    'vacancy',\n    'vacant',\n    'vacate',\n    'vacation',\n    'vagabond',\n    'vagrancy',\n    'vagrantly',\n    'vaguely',\n    'vagueness',\n    'valiant',\n    'valid',\n    'valium',\n    'valley',\n    'valuables',\n    'value',\n    'vanilla',\n    'vanish',\n    'vanity',\n    'vanquish',\n    'vantage',\n    'vaporizer',\n    'variable',\n    'variably',\n    'varied',\n    'variety',\n    'various',\n    'varmint',\n    'varnish',\n    'varsity',\n    'varying',\n    'vascular',\n    'vaseline',\n    'vastly',\n    'vastness',\n    'veal',\n    'vegan',\n    'veggie',\n    'vehicular',\n    'velcro',\n    'velocity',\n    'velvet',\n    'vendetta',\n    'vending',\n    'vendor',\n    'veneering',\n    'vengeful',\n    'venomous',\n    'ventricle',\n    'venture',\n    'venue',\n    'venus',\n    'verbalize',\n    'verbally',\n    'verbose',\n    'verdict',\n    'verify',\n    'verse',\n    'version',\n    'versus',\n    'vertebrae',\n    'vertical',\n    'vertigo',\n    'very',\n    'vessel',\n    'vest',\n    'veteran',\n    'veto',\n    'vexingly',\n    'viability',\n    'viable',\n    'vibes',\n    'vice',\n    'vicinity',\n    'victory',\n    'video',\n    'viewable',\n    'viewer',\n    'viewing',\n    'viewless',\n    'viewpoint',\n    'vigorous',\n    'village',\n    'villain',\n    'vindicate',\n    'vineyard',\n    'vintage',\n    'violate',\n    'violation',\n    'violator',\n    'violet',\n    'violin',\n    'viper',\n    'viral',\n    'virtual',\n    'virtuous',\n    'virus',\n    'visa',\n    'viscosity',\n    'viscous',\n    'viselike',\n    'visible',\n    'visibly',\n    'vision',\n    'visiting',\n    'visitor',\n    'visor',\n    'vista',\n    'vitality',\n    'vitalize',\n    'vitally',\n    'vitamins',\n    'vivacious',\n    'vividly',\n    'vividness',\n    'vixen',\n    'vocalist',\n    'vocalize',\n    'vocally',\n    'vocation',\n    'voice',\n    'voicing',\n    'void',\n    'volatile',\n    'volley',\n    'voltage',\n    'volumes',\n    'voter',\n    'voting',\n    'voucher',\n    'vowed',\n    'vowel',\n    'voyage',\n    'wackiness',\n    'wad',\n    'wafer',\n    'waffle',\n    'waged',\n    'wager',\n    'wages',\n    'waggle',\n    'wagon',\n    'wake',\n    'waking',\n    'walk',\n    'walmart',\n    'walnut',\n    'walrus',\n    'waltz',\n    'wand',\n    'wannabe',\n    'wanted',\n    'wanting',\n    'wasabi',\n    'washable',\n    'washbasin',\n    'washboard',\n    'washbowl',\n    'washcloth',\n    'washday',\n    'washed',\n    'washer',\n    'washhouse',\n    'washing',\n    'washout',\n    'washroom',\n    'washstand',\n    'washtub',\n    'wasp',\n    'wasting',\n    'watch',\n    'water',\n    'waviness',\n    'waving',\n    'wavy',\n    'whacking',\n    'whacky',\n    'wham',\n    'wharf',\n    'wheat',\n    'whenever',\n    'whiff',\n    'whimsical',\n    'whinny',\n    'whiny',\n    'whisking',\n    'whoever',\n    'whole',\n    'whomever',\n    'whoopee',\n    'whooping',\n    'whoops',\n    'why',\n    'wick',\n    'widely',\n    'widen',\n    'widget',\n    'widow',\n    'width',\n    'wieldable',\n    'wielder',\n    'wife',\n    'wifi',\n    'wikipedia',\n    'wildcard',\n    'wildcat',\n    'wilder',\n    'wildfire',\n    'wildfowl',\n    'wildland',\n    'wildlife',\n    'wildly',\n    'wildness',\n    'willed',\n    'willfully',\n    'willing',\n    'willow',\n    'willpower',\n    'wilt',\n    'wimp',\n    'wince',\n    'wincing',\n    'wind',\n    'wing',\n    'winking',\n    'winner',\n    'winnings',\n    'winter',\n    'wipe',\n    'wired',\n    'wireless',\n    'wiring',\n    'wiry',\n    'wisdom',\n    'wise',\n    'wish',\n    'wisplike',\n    'wispy',\n    'wistful',\n    'wizard',\n    'wobble',\n    'wobbling',\n    'wobbly',\n    'wok',\n    'wolf',\n    'wolverine',\n    'womanhood',\n    'womankind',\n    'womanless',\n    'womanlike',\n    'womanly',\n    'womb',\n    'woof',\n    'wooing',\n    'wool',\n    'woozy',\n    'word',\n    'work',\n    'worried',\n    'worrier',\n    'worrisome',\n    'worry',\n    'worsening',\n    'worshiper',\n    'worst',\n    'wound',\n    'woven',\n    'wow',\n    'wrangle',\n    'wrath',\n    'wreath',\n    'wreckage',\n    'wrecker',\n    'wrecking',\n    'wrench',\n    'wriggle',\n    'wriggly',\n    'wrinkle',\n    'wrinkly',\n    'wrist',\n    'writing',\n    'written',\n    'wrongdoer',\n    'wronged',\n    'wrongful',\n    'wrongly',\n    'wrongness',\n    'wrought',\n    'xbox',\n    'xerox',\n    'yahoo',\n    'yam',\n    'yanking',\n    'yapping',\n    'yard',\n    'yarn',\n    'yeah',\n    'yearbook',\n    'yearling',\n    'yearly',\n    'yearning',\n    'yeast',\n    'yelling',\n    'yelp',\n    'yen',\n    'yesterday',\n    'yiddish',\n    'yield',\n    'yin',\n    'yippee',\n    'yo-yo',\n    'yodel',\n    'yoga',\n    'yogurt',\n    'yonder',\n    'yoyo',\n    'yummy',\n    'zap',\n    'zealous',\n    'zebra',\n    'zen',\n    'zeppelin',\n    'zero',\n    'zestfully',\n    'zesty',\n    'zigzagged',\n    'zipfile',\n    'zipping',\n    'zippy',\n    'zips',\n    'zit',\n    'zodiac',\n    'zombie',\n    'zone',\n    'zoning',\n    'zookeeper',\n    'zoologist',\n    'zoology',\n    'zoom',\n];\n","import { Cipher } from './cipher';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Cipher as CipherDomain } from '../domain/cipher';\n\nexport class CipherWithIds extends Cipher {\n    id: string;\n    collectionIds: string[];\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView | CipherDomain) {\n        this.id = o.id;\n        super.build(o);\n        this.collectionIds = o.collectionIds;\n    }\n}\n","import { Collection } from './collection';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport { Collection as CollectionDomain } from '../domain/collection';\n\nexport class CollectionWithId extends Collection {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView | CollectionDomain) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","import { Folder } from './folder';\n\nimport { FolderView } from '../view/folderView';\n\nimport { Folder as FolderDomain } from '../domain/folder';\n\nexport class FolderWithId extends Folder {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView | FolderDomain) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","import { FolderData } from '../data/folderData';\n\nimport { FolderView } from '../view/folderView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nexport class Folder extends Domain {\n    id: string;\n    name: EncString;\n    revisionDate: Date;\n\n    constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n        }, alreadyEncrypted, ['id']);\n\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    }\n\n    decrypt(): Promise<FolderView> {\n        return this.decryptObj(new FolderView(this), {\n            name: null,\n        }, null);\n    }\n}\n","import { FolderResponse } from '../response/folderResponse';\n\nexport class FolderData {\n    id: string;\n    userId: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: FolderResponse, userId: string) {\n        this.userId = userId;\n        this.name = response.name;\n        this.id = response.id;\n        this.revisionDate = response.revisionDate;\n    }\n}\n","import { ImportResult } from '../../models/domain/importResult';\nimport { BaseImporter } from '../baseImporter';\nimport { Importer } from '../importer';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { FieldType } from '../../enums/fieldType';\nimport { CipherView } from '../../models/view/cipherView';\nimport { CipherImportContext } from './cipherImportContext';\n\nexport const IgnoredProperties = ['ainfo', 'autosubmit', 'notesplain', 'ps', 'scope', 'tags', 'title', 'uuid', 'notes'];\n\nexport abstract class OnePasswordCsvImporter extends BaseImporter implements Importer {\n    protected loginPropertyParsers = [this.setLoginUsername, this.setLoginPassword, this.setLoginUris];\n    protected creditCardPropertyParsers = [this.setCreditCardNumber, this.setCreditCardVerification, this.setCreditCardCardholderName, this.setCreditCardExpiry];\n    protected identityPropertyParsers = [this.setIdentityFirstName, this.setIdentityInitial, this.setIdentityLastName, this.setIdentityUserName, this.setIdentityEmail, this.setIdentityPhone, this.setIdentityCompany];\n\n    abstract setCipherType(value: any, cipher: CipherView): void;\n\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true, {\n            quoteChar: '\"',\n            escapeChar: '\\\\',\n        });\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(this.getProp(value, 'title'))) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.getProp(value, 'title'), '--');\n\n            this.setNotes(value, cipher);\n\n            this.setCipherType(value, cipher);\n\n            let altUsername: string = null;\n            for (const property in value) {\n                if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n                    continue;\n                }\n\n                const context = new CipherImportContext(value, property, cipher);\n                if (cipher.type === CipherType.Login && this.setKnownLoginValue(context)) {\n                    continue;\n                } else if (cipher.type === CipherType.Card && this.setKnownCreditCardValue(context)) {\n                    continue;\n                } else if (cipher.type === CipherType.Identity && this.setKnownIdentityValue(context)) {\n                    continue;\n                }\n\n                altUsername = this.setUnknownValue(context, altUsername);\n            }\n\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(altUsername) &&\n                this.isNullOrWhitespace(cipher.login.username) && altUsername.indexOf('://') === -1) {\n                cipher.login.username = altUsername;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    protected getProp(obj: any, name: string): any {\n        const lowerObj = Object.entries(obj).reduce((agg: any, entry: [string, any]) => {\n            agg[entry[0].toLowerCase()] = entry[1];\n            return agg;\n        }, {});\n        return lowerObj[name.toLowerCase()];\n    }\n\n    protected getPropByRegexp(obj: any, regexp: RegExp): any {\n        const matchingKeys = Object.keys(obj).reduce((agg: string[], key: string) => {\n            if (key.match(regexp)) {\n                agg.push(key);\n            }\n            return agg;\n        }, []);\n        if (matchingKeys.length === 0) {\n            return null;\n        } else {\n            return obj[matchingKeys[0]];\n        }\n    }\n\n    protected getPropIncluding(obj: any, name: string): any {\n        const includesMap = Object.keys(obj).reduce((agg: string[], entry: string) => {\n            if (entry.toLowerCase().includes(name.toLowerCase())) {\n                agg.push(entry);\n            }\n            return agg;\n        }, []);\n        if (includesMap.length === 0) {\n            return null;\n        } else {\n            return obj[includesMap[0]];\n        }\n    }\n\n    protected setNotes(importRecord: any, cipher: CipherView) {\n        cipher.notes = this.getValueOrDefault(this.getProp(importRecord, 'notesPlain'), '') + '\\n' +\n            this.getValueOrDefault(this.getProp(importRecord, 'notes'), '') + '\\n';\n        cipher.notes.trim();\n\n    }\n\n    protected setKnownLoginValue(context: CipherImportContext): boolean {\n        return this.loginPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setKnownCreditCardValue(context: CipherImportContext): boolean {\n        return this.creditCardPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setKnownIdentityValue(context: CipherImportContext): boolean {\n        return this.identityPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setUnknownValue(context: CipherImportContext, altUsername: string): string {\n        if (IgnoredProperties.indexOf(context.lowerProperty) === -1 && !context.lowerProperty.startsWith('section:') &&\n            !context.lowerProperty.startsWith('section ')) {\n            if (altUsername == null && context.lowerProperty === 'email') {\n                return context.importRecord[context.property];\n            }\n            else if (context.lowerProperty === 'created date' || context.lowerProperty === 'modified date') {\n                const readableDate = new Date(parseInt(context.importRecord[context.property], 10) * 1000).toUTCString();\n                this.processKvp(context.cipher, '1Password ' + context.property, readableDate);\n                return null;\n            }\n            if (context.lowerProperty.includes('password') || context.lowerProperty.includes('key') || context.lowerProperty.includes('secret')) {\n                this.processKvp(context.cipher, context.property, context.importRecord[context.property], FieldType.Hidden);\n            } else {\n                this.processKvp(context.cipher, context.property, context.importRecord[context.property]);\n            }\n        }\n        return null;\n    }\n\n    protected setIdentityFirstName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.firstName) && context.lowerProperty.includes('first name')) {\n            context.cipher.identity.firstName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityInitial(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.middleName) && context.lowerProperty.includes('initial')) {\n            context.cipher.identity.middleName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityLastName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.lastName) && context.lowerProperty.includes('last name')) {\n            context.cipher.identity.lastName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityUserName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.username) && context.lowerProperty.includes('username')) {\n            context.cipher.identity.username = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityCompany(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.company) && context.lowerProperty.includes('company')) {\n            context.cipher.identity.company = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityPhone(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.phone) && context.lowerProperty.includes('default phone')) {\n            context.cipher.identity.phone = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityEmail(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.email) && context.lowerProperty.includes('email')) {\n            context.cipher.identity.email = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardNumber(context: CipherImportContext): boolean {\n        if (this.isNullOrWhitespace(context.cipher.card.number) && context.lowerProperty.includes('number')) {\n            context.cipher.card.number = context.importRecord[context.property];\n            context.cipher.card.brand = this.getCardBrand(context.cipher.card.number);\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardVerification(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.code) && context.lowerProperty.includes('verification number')) {\n            context.cipher.card.code = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardCardholderName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.cardholderName) && context.lowerProperty.includes('cardholder name')) {\n            context.cipher.card.cardholderName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardExpiry(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.expiration) && context.lowerProperty.includes('expiry date') &&\n            context.importRecord[context.property].length === 7) {\n            context.cipher.card.expMonth = (context.importRecord[context.property] as string).substr(0, 2);\n            if (context.cipher.card.expMonth[0] === '0') {\n                context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n            }\n            context.cipher.card.expYear = (context.importRecord[context.property] as string).substr(3, 4);\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginPassword(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.login.password) && context.lowerProperty === 'password') {\n            context.cipher.login.password = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginUsername(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.login.username) && context.lowerProperty === 'username') {\n            context.cipher.login.username = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginUris(context: CipherImportContext) {\n        if ((context.cipher.login.uris == null || context.cipher.login.uris.length === 0) && context.lowerProperty === 'urls') {\n            const urls = context.importRecord[context.property].split(this.newLineRegex);\n            context.cipher.login.uris = this.makeUriArray(urls);\n            return true;\n        } else if ((context.lowerProperty === 'url')) {\n            if (context.cipher.login.uris == null) {\n                context.cipher.login.uris = [];\n            }\n            context.cipher.login.uris.concat(this.makeUriArray(context.importRecord[context.property]));\n            return true;\n        }\n        return false;\n    }\n}\n","export enum NotificationType {\n    SyncCipherUpdate = 0,\n    SyncCipherCreate = 1,\n    SyncLoginDelete = 2,\n    SyncFolderDelete = 3,\n    SyncCiphers = 4,\n\n    SyncVault = 5,\n    SyncOrgKeys = 6,\n    SyncFolderCreate = 7,\n    SyncFolderUpdate = 8,\n    SyncCipherDelete = 9,\n    SyncSettings = 10,\n\n    LogOut = 11,\n\n    SyncSendCreate = 12,\n    SyncSendUpdate = 13,\n    SyncSendDelete = 14,\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendFileData } from './sendFileData';\nimport { SendTextData } from './sendTextData';\n\nimport { SendResponse } from '../response/sendResponse';\n\nexport class SendData {\n    id: string;\n    accessId: string;\n    userId: string;\n    type: SendType;\n    name: string;\n    notes: string;\n    file: SendFileData;\n    text: SendTextData;\n    key: string;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: string;\n    expirationDate: string;\n    deletionDate: string;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(response?: SendResponse, userId?: string) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.accessId = response.accessId;\n        this.userId = userId;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n        this.key = response.key;\n        this.maxAccessCount = response.maxAccessCount;\n        this.accessCount = response.accessCount;\n        this.revisionDate = response.revisionDate;\n        this.expirationDate = response.expirationDate;\n        this.deletionDate = response.deletionDate;\n        this.password = response.password;\n        this.disabled = response.disable;\n        this.hideEmail = response.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendTextData(response.text);\n                break;\n            case SendType.File:\n                this.file = new SendFileData(response.file);\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'bootstrap';\nimport 'jquery';\nimport 'popper.js';\n\n// tslint:disable-next-line\nrequire('src/scss/styles.scss');\n\nimport { AppModule } from './app.module';\n\nif (process.env.NODE_ENV === 'production') {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","// extracted by mini-css-extract-plugin\nexport {};","import { ToasterModule } from 'angular2-toaster';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { OrganizationsModule } from './organizations/organizations.module';\nimport { DisablePersonalVaultExportPolicyComponent } from './policies/disable-personal-vault-export.component';\nimport { MaximumVaultTimeoutPolicyComponent } from './policies/maximum-vault-timeout.component';\n\nimport { OssRoutingModule } from 'src/app/oss-routing.module';\nimport { OssModule } from 'src/app/oss.module';\nimport { ServicesModule } from 'src/app/services/services.module';\nimport { WildcardRoutingModule } from 'src/app/wildcard-routing.module';\n\n@NgModule({\n    imports: [\n        OssModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ServicesModule,\n        ToasterModule.forRoot(),\n        InfiniteScrollModule,\n        DragDropModule,\n        AppRoutingModule,\n        OssRoutingModule,\n        OrganizationsModule,\n        RouterModule,\n        WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n    ],\n    declarations: [\n        AppComponent,\n        MaximumVaultTimeoutPolicyComponent,\n        DisablePersonalVaultExportPolicyComponent,\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: 'providers',\n        loadChildren: async () => (await import('./providers/providers.module')).ProvidersModule,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { ComponentFactoryResolver } from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ModalService } from 'jslib-angular/services/modal.service';\n\nimport { ProviderGuardService } from './services/provider-guard.service';\nimport { ProviderTypeGuardService } from './services/provider-type-guard.service';\nimport { ProviderService } from './services/provider.service';\n\nimport { ProvidersLayoutComponent } from './providers-layout.component';\nimport { ProvidersRoutingModule } from './providers-routing.module';\n\nimport { AddOrganizationComponent } from './clients/add-organization.component';\nimport { ClientsComponent } from './clients/clients.component';\nimport { CreateOrganizationComponent } from './clients/create-organization.component';\n\nimport { AcceptProviderComponent } from './manage/accept-provider.component';\nimport { BulkConfirmComponent } from './manage/bulk/bulk-confirm.component';\nimport { BulkRemoveComponent } from './manage/bulk/bulk-remove.component';\nimport { EventsComponent } from './manage/events.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { PeopleComponent } from './manage/people.component';\nimport { UserAddEditComponent } from './manage/user-add-edit.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nimport { SetupProviderComponent } from './setup/setup-provider.component';\nimport { SetupComponent } from './setup/setup.component';\n\nimport { OssModule } from 'src/app/oss.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        OssModule,\n        ProvidersRoutingModule,\n    ],\n    declarations: [\n        AcceptProviderComponent,\n        AccountComponent,\n        AddOrganizationComponent,\n        BulkConfirmComponent,\n        BulkRemoveComponent,\n        ClientsComponent,\n        CreateOrganizationComponent,\n        EventsComponent,\n        ManageComponent,\n        PeopleComponent,\n        ProvidersLayoutComponent,\n        SettingsComponent,\n        SetupComponent,\n        SetupProviderComponent,\n        UserAddEditComponent,\n    ],\n    providers: [\n        ProviderService,\n        ProviderGuardService,\n        ProviderTypeGuardService,\n    ],\n})\nexport class ProvidersModule {\n    constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n        modalService.registerComponentFactoryResolver(AddOrganizationComponent, componentFactoryResolver);\n    }\n}\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    OnDestroy,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\n\nimport { ModalService } from '../../services/modal.service';\n\nimport { ModalRef } from './modal.ref';\n\n@Component({\n    selector: 'app-modal',\n    template: '<ng-template #modalContent></ng-template>',\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n    componentRef: ComponentRef<any>;\n\n    @ViewChild('modalContent', { read: ViewContainerRef, static: true }) modalContentRef: ViewContainerRef;\n\n    childComponentType: Type<any>;\n    setComponentParameters: (component: any) => void;\n\n    constructor(private modalService: ModalService, private cd: ChangeDetectorRef,\n        private el: ElementRef<HTMLElement>, public modalRef: ModalRef) {}\n\n    ngAfterViewInit() {\n        this.loadChildComponent(this.childComponentType);\n        if (this.setComponentParameters != null) {\n            this.setComponentParameters(this.componentRef.instance);\n        }\n        this.cd.detectChanges();\n\n        this.modalRef.created(this.el.nativeElement);\n    }\n\n    loadChildComponent(componentType: Type<any>) {\n        const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n        this.modalContentRef.clear();\n        this.componentRef = this.modalContentRef.createComponent(componentFactory);\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n        }\n    }\n\n    close() {\n        this.modalRef.close();\n    }\n}\n","import {\n    InjectFlags,\n    InjectionToken,\n    Injector,\n    Type\n} from '@angular/core';\n\nexport class ModalInjector implements Injector {\n    constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n    get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n    get(token: any, notFoundValue?: any, flags?: any) {\n        return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n    }\n}\n","export class ProviderAddOrganizationRequest {\n    organizationId: string;\n    key: string;\n}\n","export function getDomain(host: string): string | null {\n    return null;\n}\n\nexport function isValid(host: string): boolean {\n    return true;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { Permissions } from 'jslib-common/enums/permissions';\n\nimport { AddOrganizationComponent } from './clients/add-organization.component';\nimport { ClientsComponent } from './clients/clients.component';\nimport { CreateOrganizationComponent } from './clients/create-organization.component';\nimport { AcceptProviderComponent } from './manage/accept-provider.component';\nimport { EventsComponent } from './manage/events.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { PeopleComponent } from './manage/people.component';\nimport { ProvidersLayoutComponent } from './providers-layout.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { SetupProviderComponent } from './setup/setup-provider.component';\nimport { SetupComponent } from './setup/setup.component';\n\nimport { FrontendLayoutComponent } from 'src/app/layouts/frontend-layout.component';\n\nimport { ProvidersComponent } from 'src/app/providers/providers.component';\nimport { ProviderGuardService } from './services/provider-guard.service';\nimport { ProviderTypeGuardService } from './services/provider-type-guard.service';\nimport { AccountComponent } from './settings/account.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        canActivate: [AuthGuardService],\n        component: ProvidersComponent,\n    },\n    {\n        path: '',\n        component: FrontendLayoutComponent,\n        children: [\n            {\n                path: 'setup-provider',\n                component: SetupProviderComponent,\n                data: { titleId: 'setupProvider' },\n            },\n            {\n                path: 'accept-provider',\n                component: AcceptProviderComponent,\n                data: { titleId: 'acceptProvider' },\n            },\n        ],\n    },\n    {\n        path: '',\n        canActivate: [AuthGuardService],\n        children: [\n            {\n                path: 'setup',\n                component: SetupComponent,\n            },\n            {\n                path: ':providerId',\n                component: ProvidersLayoutComponent,\n                canActivate: [ProviderGuardService],\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'clients' },\n                    { path: 'clients/create', component: CreateOrganizationComponent },\n                    { path: 'clients', component: ClientsComponent, data: { titleId: 'clients' } },\n                    {\n                        path: 'manage',\n                        component: ManageComponent,\n                        children: [\n                            {\n                                path: '',\n                                pathMatch: 'full',\n                                redirectTo: 'people',\n                            },\n                            {\n                                path: 'people',\n                                component: PeopleComponent,\n                                canActivate: [ProviderTypeGuardService],\n                                data: {\n                                    titleId: 'people',\n                                    permissions: [Permissions.ManageUsers],\n                                },\n                            },\n                            {\n                                path: 'events',\n                                component: EventsComponent,\n                                canActivate: [ProviderTypeGuardService],\n                                data: {\n                                    titleId: 'eventLogs',\n                                    permissions: [Permissions.AccessEventLogs],\n                                },\n                            },\n                        ],\n                    },\n                    {\n                        path: 'settings',\n                        component: SettingsComponent,\n                        children: [\n                            {\n                                path: '',\n                                pathMatch: 'full',\n                                redirectTo: 'account',\n                            },\n                            {\n                                path: 'account',\n                                component: AccountComponent,\n                                canActivate: [ProviderTypeGuardService],\n                                data: {\n                                    titleId: 'myProvider',\n                                    permissions: [Permissions.ManageProvider],\n                                },\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class ProvidersRoutingModule { }\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { PlanType } from '../../enums/planType';\n\nimport { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationCreateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n    planType: PlanType;\n    key: string;\n    keys: OrganizationKeysRequest;\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n    additionalSeats: number;\n    maxAutoscaleSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n    collectionName: string;\n    taxIdNumber: string;\n    billingAddressLine1: string;\n    billingAddressLine2: string;\n    billingAddressCity: string;\n    billingAddressState: string;\n    billingAddressPostalCode: string;\n    billingAddressCountry: string;\n}\n","import { PlanType } from '../../enums/planType';\n\nimport { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationUpgradeRequest {\n    businessName: string;\n    planType: PlanType;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n    billingAddressCountry: string;\n    billingAddressPostalCode: string;\n    keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from '../organizationCreateRequest';\n\nexport class ProviderOrganizationCreateRequest {\n    constructor(public clientOwnerEmail: string, public organizationCreateRequest: OrganizationCreateRequest) { }\n}\n","export class ProviderUserAcceptRequest {\n    token: string;\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventView {\n    message: string;\n    humanReadableMessage: string;\n    appIcon: string;\n    appName: string;\n    userId: string;\n    userName: string;\n    userEmail: string;\n    date: string;\n    ip: string;\n    type: EventType;\n\n    constructor(data: Required<EventView>) {\n        this.message = data.message;\n        this.humanReadableMessage = data.humanReadableMessage;\n        this.appIcon = data.appIcon;\n        this.appName = data.appName;\n        this.userId = data.userId;\n        this.userName = data.userName;\n        this.userEmail = data.userEmail;\n        this.date = data.date;\n        this.ip = data.ip;\n        this.type = data.type;\n    }\n}\n","export class ProviderUserConfirmRequest {\n    key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n    id: string;\n    key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n    keys: ProviderUserBulkRequestEntry[];\n\n    constructor(keys: ProviderUserBulkRequestEntry[]) {\n        this.keys = keys;\n    }\n}\n","type OrganizationUserBulkRequestEntry = {\n    id: string;\n    key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n    keys: OrganizationUserBulkRequestEntry[];\n\n    constructor(keys: OrganizationUserBulkRequestEntry[]) {\n        this.keys = keys;\n    }\n}\n","import { ProviderUserType } from '../../../enums/providerUserType';\n\nexport class ProviderUserInviteRequest {\n    emails: string[] = [];\n    type: ProviderUserType;\n}\n","import { ProviderUserType } from '../../../enums/providerUserType';\n\nexport class ProviderUserUpdateRequest {\n    type: ProviderUserType;\n}\n","export class ProviderSetupRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n    token: string;\n    key: string;\n}\n","export class ProviderUpdateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from '../abstractions/broadcaster.service';\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n    subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n    send(message: any, id?: string) {\n        if (id != null) {\n            if (this.subscribers.has(id)) {\n                this.subscribers.get(id)(message);\n            }\n            return;\n        }\n\n        this.subscribers.forEach(value => {\n            value(message);\n        });\n    }\n\n    subscribe(id: string, messageCallback: (message: any) => any) {\n        this.subscribers.set(id, messageCallback);\n    }\n\n    unsubscribe(id: string) {\n        if (this.subscribers.has(id)) {\n            this.subscribers.delete(id);\n        }\n    }\n}\n","export class EmergencyAccessAcceptRequest {\n    token: string;\n}\n","export class OrganizationUserAcceptRequest {\n    token: string;\n}\n","import { Router } from '@angular/router';\n\nimport { PasswordHintRequest } from 'jslib-common/models/request/passwordHintRequest';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nexport class HintComponent {\n    email: string = '';\n    formPromise: Promise<any>;\n\n    protected successRoute = 'login';\n    protected onSuccessfulSubmit: () => void;\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected apiService: ApiService, protected platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('masterPassSent'));\n            if (this.onSuccessfulSubmit != null) {\n                this.onSuccessfulSubmit();\n            } else if (this.router != null) {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch { }\n    }\n}\n","export class PasswordHintRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { HashPurpose } from 'jslib-common/enums/hashPurpose';\n\n@Directive()\nexport class LockComponent implements OnInit {\n    masterPassword: string = '';\n    pin: string = '';\n    showPassword: boolean = false;\n    email: string;\n    pinLock: boolean = false;\n    webVaultHostname: string = '';\n    formPromise: Promise<any>;\n    supportsBiometric: boolean;\n    biometricLock: boolean;\n    biometricText: string;\n\n    protected successRoute: string = 'vault';\n    protected onSuccessfulSubmit: () => void;\n\n    private invalidPinAttempts = 0;\n    private pinSet: [boolean, boolean];\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected messagingService: MessagingService,\n        protected userService: UserService, protected cryptoService: CryptoService,\n        protected storageService: StorageService, protected vaultTimeoutService: VaultTimeoutService,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected apiService: ApiService) { }\n\n    async ngOnInit() {\n        this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n        this.pinLock = (this.pinSet[0] && this.vaultTimeoutService.pinProtectedKey != null) || this.pinSet[1];\n        this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n        this.biometricLock = await this.vaultTimeoutService.isBiometricLockSet() &&\n            (await this.cryptoService.hasKeyStored('biometric') || !this.platformUtilsService.supportsSecureStorage());\n        this.biometricText = await this.storageService.get(ConstantsService.biometricText);\n        this.email = await this.userService.getEmail();\n\n        const webVaultUrl = this.environmentService.getWebVaultUrl();\n        const vaultUrl = webVaultUrl === 'https://vault.bitwarden.com' ? 'https://bitwarden.com' : webVaultUrl;\n        this.webVaultHostname = Utils.getHostname(vaultUrl);\n    }\n\n    async submit() {\n        if (this.pinLock && (this.pin == null || this.pin === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('pinRequired'));\n            return;\n        }\n        if (!this.pinLock && (this.masterPassword == null || this.masterPassword === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const kdf = await this.userService.getKdf();\n        const kdfIterations = await this.userService.getKdfIterations();\n\n        if (this.pinLock) {\n            let failed = true;\n            try {\n                if (this.pinSet[0]) {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations,\n                        this.vaultTimeoutService.pinProtectedKey);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n                    failed = decPin !== this.pin;\n                    if (!failed) {\n                        await this.setKeyAndContinue(key);\n                    }\n                } else {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations);\n                    failed = false;\n                    await this.setKeyAndContinue(key);\n                }\n            } catch {\n                failed = true;\n            }\n\n            if (failed) {\n                this.invalidPinAttempts++;\n                if (this.invalidPinAttempts >= 5) {\n                    this.messagingService.send('logout');\n                    return;\n                }\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidPin'));\n            }\n        } else {\n            const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n            const storedKeyHash = await this.cryptoService.getKeyHash();\n\n            let passwordValid = false;\n\n            if (storedKeyHash != null) {\n                passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n            } else {\n                const request = new PasswordVerificationRequest();\n                const serverKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n                    HashPurpose.ServerAuthorization);\n                request.masterPasswordHash = serverKeyHash;\n                try {\n                    this.formPromise = this.apiService.postAccountVerifyPassword(request);\n                    await this.formPromise;\n                    passwordValid = true;\n                    const localKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n                        HashPurpose.LocalAuthorization);\n                    await this.cryptoService.setKeyHash(localKeyHash);\n                } catch { }\n            }\n\n            if (passwordValid) {\n                if (this.pinSet[0]) {\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n                    const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n                    this.vaultTimeoutService.pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n                }\n                this.setKeyAndContinue(key);\n            } else {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidMasterPassword'));\n            }\n        }\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    async unlockBiometric(): Promise<boolean> {\n        if (!this.biometricLock) {\n            return;\n        }\n\n        const success = (await this.cryptoService.getKey('biometric')) != null;\n\n        if (success) {\n            await this.doContinue();\n        }\n\n        return success;\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById(this.pinLock ? 'pin' : 'masterPassword').focus();\n    }\n\n    private async setKeyAndContinue(key: SymmetricCryptoKey) {\n        await this.cryptoService.setKey(key);\n        this.doContinue();\n    }\n\n    private async doContinue() {\n        this.vaultTimeoutService.biometricLocked = false;\n        this.vaultTimeoutService.everBeenUnlocked = true;\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n        this.messagingService.send('unlocked');\n        if (this.onSuccessfulSubmit != null) {\n            this.onSuccessfulSubmit();\n        } else if (this.router != null) {\n            this.router.navigate([this.successRoute]);\n        }\n    }\n}\n","import {\n    Directive,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { AuthResult } from 'jslib-common/models/domain/authResult';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { CaptchaProtectedComponent } from './captchaProtected.component';\n\nconst Keys = {\n    rememberedEmail: 'rememberedEmail',\n    rememberEmail: 'rememberEmail',\n};\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n    @Input() email: string = '';\n    @Input() rememberEmail = true;\n\n    masterPassword: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<AuthResult>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n    onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'vault';\n    protected forcePasswordResetRoute = 'update-temp-password';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        platformUtilsService: PlatformUtilsService, i18nService: I18nService,\n        protected stateService: StateService, environmentService: EnvironmentService,\n        protected passwordGenerationService: PasswordGenerationService,\n        protected cryptoFunctionService: CryptoFunctionService, private storageService: StorageService) {\n        super(environmentService, i18nService, platformUtilsService);\n    }\n\n    async ngOnInit() {\n        if (this.email == null || this.email === '') {\n            this.email = await this.storageService.get<string>(Keys.rememberedEmail);\n            if (this.email == null) {\n                this.email = '';\n            }\n        }\n        this.rememberEmail = await this.storageService.get<boolean>(Keys.rememberEmail);\n        if (this.rememberEmail == null) {\n            this.rememberEmail = true;\n        }\n        if (Utils.isBrowser && !Utils.isNode) {\n            this.focusInput();\n        }\n    }\n\n    async submit() {\n        await this.setupCaptcha();\n\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.authService.logIn(this.email, this.masterPassword, this.captchaToken);\n            const response = await this.formPromise;\n            await this.storageService.save(Keys.rememberEmail, this.rememberEmail);\n            if (this.rememberEmail) {\n                await this.storageService.save(Keys.rememberedEmail, this.email);\n            } else {\n                await this.storageService.remove(Keys.rememberedEmail);\n            }\n            if (this.handleCaptchaRequired(response)) {\n                return;\n            } else if (response.twoFactor) {\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute]);\n                }\n            } else if (response.forcePasswordReset) {\n                if (this.onSuccessfulLoginForceResetNavigate != null) {\n                    this.onSuccessfulLoginForceResetNavigate();\n                } else {\n                    this.router.navigate([this.forcePasswordResetRoute]);\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch { }\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n        // Generate necessary sso params\n        const passwordOptions: any = {\n            type: 'password',\n            length: 64,\n            uppercase: true,\n            lowercase: true,\n            numbers: true,\n            special: false,\n        };\n        const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n        const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n        const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, 'sha256');\n        const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n        // Save sso params\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\n        await this.storageService.save(ConstantsService.ssoCodeVerifierKey, ssoCodeVerifier);\n\n        // Build URI\n        const webUrl = this.environmentService.getWebVaultUrl();\n\n        // Launch browser\n        this.platformUtilsService.launchUri(webUrl + '/#/sso?clientId=' + clientId +\n            '&redirectUri=' + encodeURIComponent(ssoRedirectUri) +\n            '&state=' + state + '&codeChallenge=' + codeChallenge);\n    }\n\n    protected focusInput() {\n        document.getElementById(this.email == null || this.email === '' ? 'email' : 'masterPassword').focus();\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\nimport { IFrameComponent } from './iframe_component';\n\nexport class CaptchaIFrame extends IFrameComponent {\n    constructor(win: Window, webVaultUrl: string,\n        private i18nService: I18nService, successCallback: (message: string) => any, errorCallback: (message: string) => any,\n        infoCallback: (message: string) => any) {\n        super(win, webVaultUrl, 'captcha-connector.html', 'hcaptcha_iframe', successCallback, errorCallback, (message: string) => {\n            const parsedMessage = JSON.parse(message);\n            if (typeof (parsedMessage) !== 'string') {\n                this.iframe.height = (parsedMessage.height).toString();\n                this.iframe.width = (parsedMessage.width).toString();\n            } else {\n                infoCallback(parsedMessage);\n            }\n        });\n    }\n\n    init(siteKey: string): void {\n        super.initComponent(this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1));\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\n\nexport abstract class IFrameComponent {\n    iframe: HTMLIFrameElement;\n    private connectorLink: HTMLAnchorElement;\n    private parseFunction = this.parseMessage.bind(this);\n\n    constructor(private win: Window, protected webVaultUrl: string, private path: string, private iframeId: string,\n        public successCallback?: (message: string) => any,\n        public errorCallback?: (message: string) => any, public infoCallback?: (message: string) => any) {\n        this.connectorLink = win.document.createElement('a');\n    }\n\n    stop() {\n        this.sendMessage('stop');\n    }\n\n    start() {\n        this.sendMessage('start');\n    }\n\n    sendMessage(message: any) {\n        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n            return;\n        }\n\n        this.iframe.contentWindow.postMessage(message, this.iframe.src);\n    }\n\n    base64Encode(str: string): string {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n    }\n\n    cleanup() {\n        this.win.removeEventListener('message', this.parseFunction, false);\n    }\n\n    protected createParams(data: any, version: number) {\n        return new URLSearchParams({\n            data: this.base64Encode(JSON.stringify(data)),\n            parent: encodeURIComponent(this.win.document.location.href),\n            v: version.toString(),\n        });\n    }\n\n    protected initComponent(params: URLSearchParams): void {\n        this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n        this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n        this.iframe.src = this.connectorLink.href;\n\n        this.win.addEventListener('message', this.parseFunction, false);\n    }\n\n    private parseMessage(event: MessageEvent) {\n        if (!this.validMessage(event)) {\n            return;\n        }\n\n        const parts: string[] = event.data.split('|');\n        if (parts[0] === 'success' && this.successCallback) {\n            this.successCallback(parts[1]);\n        } else if (parts[0] === 'error' && this.errorCallback) {\n            this.errorCallback(parts[1]);\n        } else if (parts[0] === 'info' && this.infoCallback) {\n            this.infoCallback(parts[1]);\n        }\n    }\n\n    private validMessage(event: MessageEvent) {\n        if (event.origin == null || event.origin === '' || event.origin !== (this.connectorLink as any).origin ||\n            event.data == null || typeof (event.data) !== 'string') {\n            return false;\n        }\n\n        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||\n            event.data.indexOf('info|') === 0;\n    }\n}\n","export class DeleteRecoverRequest {\n    email: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorRecoveryRequest extends PasswordVerificationRequest {\n    recoveryCode: string;\n    email: string;\n}\n","import { Directive, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { KeysRequest } from 'jslib-common/models/request/keysRequest';\nimport { ReferenceEventRequest } from 'jslib-common/models/request/referenceEventRequest';\nimport { RegisterRequest } from 'jslib-common/models/request/registerRequest';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\nimport { CaptchaProtectedComponent } from './captchaProtected.component';\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n    name: string = '';\n    email: string = '';\n    masterPassword: string = '';\n    confirmMasterPassword: string = '';\n    hint: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    referenceData: ReferenceEventRequest;\n    showTerms = true;\n    acceptPolicies: boolean = false;\n\n    protected successRoute = 'login';\n    private masterPasswordStrengthTimeout: any;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        i18nService: I18nService, protected cryptoService: CryptoService,\n        protected apiService: ApiService, protected stateService: StateService,\n        platformUtilsService: PlatformUtilsService,\n        protected passwordGenerationService: PasswordGenerationService, environmentService: EnvironmentService) {\n        super(environmentService, i18nService, platformUtilsService);\n        this.showTerms = !platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.setupCaptcha();\n    }\n\n    get masterPasswordScoreWidth() {\n        return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    }\n\n    get masterPasswordScoreColor() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return 'success';\n            case 3:\n                return 'primary';\n            case 2:\n                return 'warning';\n            default:\n                return 'danger';\n        }\n    }\n\n    get masterPasswordScoreText() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return this.i18nService.t('strong');\n            case 3:\n                return this.i18nService.t('good');\n            case 2:\n                return this.i18nService.t('weak');\n            default:\n                return this.masterPasswordScore != null ? this.i18nService.t('weak') : null;\n        }\n    }\n\n    async submit() {\n        if (!this.acceptPolicies && this.showTerms) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('acceptPoliciesError'));\n            return;\n        }\n\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return;\n        }\n        if (this.masterPassword !== this.confirmMasterPassword) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return;\n            }\n        }\n\n        if (this.hint === this.masterPassword) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('hintEqualsPassword'));\n            return;\n        }\n\n        this.name = this.name === '' ? null : this.name;\n        this.email = this.email.trim().toLowerCase();\n        const kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isIE();\n        const kdfIterations = useLowerKdf ? 10000 : 100000;\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        const request = new RegisterRequest(this.email, this.name, hashedPassword,\n            this.hint, encKey[1].encryptedString, kdf, kdfIterations, this.referenceData, this.captchaToken);\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n        const orgInvite = await this.stateService.get<any>('orgInvitation');\n        if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n            request.token = orgInvite.token;\n            request.organizationUserId = orgInvite.organizationUserId;\n        }\n\n        try {\n            this.formPromise = this.apiService.postRegister(request);\n            try {\n                await this.formPromise;\n            } catch (e) {\n                if (this.handleCaptchaRequired(e)) {\n                    return;\n                } else {\n                    throw e;\n                }\n            }\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('newAccountCreated'));\n            this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n        } catch { }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        if (this.name != null && this.name !== '') {\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\n        }\n        return userInput;\n    }\n}\n","import { KeysRequest } from './keysRequest';\nimport { ReferenceEventRequest } from './referenceEventRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nimport { CaptchaProtectedRequest } from './captchaProtectedRequest';\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n    masterPasswordHint: string;\n    keys: KeysRequest;\n    token: string;\n    organizationUserId: string;\n\n\n    constructor(public email: string, public name: string, public masterPasswordHash: string,\n        masterPasswordHint: string, public key: string, public kdf: KdfType, public kdfIterations: number,\n        public referenceData: ReferenceEventRequest, public captchaResponse: string) {\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n    }\n}\n","export class ReferenceEventRequest {\n    id: string;\n    layout: string;\n    flow: string;\n}\n","import { Directive } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { KeysRequest } from 'jslib-common/models/request/keysRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { SetPasswordRequest } from 'jslib-common/models/request/setPasswordRequest';\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from './change-password.component';\n\nimport { HashPurpose } from 'jslib-common/enums/hashPurpose';\nimport { KdfType } from 'jslib-common/enums/kdfType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n    syncLoading: boolean = true;\n    showPassword: boolean = false;\n    hint: string = '';\n    identifier: string = null;\n    orgId: string;\n    resetPasswordAutoEnroll = false;\n\n    onSuccessfulChangePassword: () => Promise<any>;\n    successRoute = 'vault';\n\n    constructor(i18nService: I18nService, cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, protected router: Router,\n        private apiService: ApiService, private syncService: SyncService, private route: ActivatedRoute) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        await this.syncService.fullSync(true);\n        this.syncLoading = false;\n\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            }\n\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n\n        // Automatic Enrollment Detection\n        if (this.identifier != null) {\n            try {\n                const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n                this.orgId = response.id;\n                this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n            } catch {\n                this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            }\n        }\n\n        super.ngOnInit();\n    }\n\n    async setupSubmitActions() {\n        this.kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isIE();\n        this.kdfIterations = useLowerKdf ? 10000 : 100000;\n        return true;\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        const request = new SetPasswordRequest(\n            masterPasswordHash,\n            encKey[1].encryptedString,\n            this.hint,\n            this.kdf,\n            this.kdfIterations,\n            this.identifier,\n            new KeysRequest(keys[0], keys[1].encryptedString)\n        );\n        try {\n            if (this.resetPasswordAutoEnroll) {\n                this.formPromise = this.apiService.setPassword(request).then(async () => {\n                    await this.onSetPasswordSuccess(key, encKey, keys);\n                    return this.apiService.getOrganizationKeys(this.orgId);\n                }).then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                    }\n                    const userId = await this.userService.getUserId();\n                    const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n                    // RSA Encrypt user's encKey.key with organization public key\n                    const userEncKey = await this.cryptoService.getEncKey();\n                    const encryptedKey = await this.cryptoService.rsaEncrypt(userEncKey.key, publicKey.buffer);\n\n                    const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n                    resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n                    return this.apiService.putOrganizationUserResetPasswordEnrollment(this.orgId, userId, resetRequest);\n                });\n            } else {\n                this.formPromise = this.apiService.setPassword(request).then(async () => {\n                    await this.onSetPasswordSuccess(key, encKey, keys);\n                });\n            }\n\n            await this.formPromise;\n\n            if (this.onSuccessfulChangePassword != null) {\n                this.onSuccessfulChangePassword();\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    private async onSetPasswordSuccess(key: SymmetricCryptoKey, encKey: [SymmetricCryptoKey, EncString], keys: [string, EncString]) {\n        await this.userService.setInformation(await this.userService.getUserId(), await this.userService.getEmail(),\n            this.kdf, this.kdfIterations);\n        await this.cryptoService.setKey(key);\n        await this.cryptoService.setEncKey(encKey[1].encryptedString);\n        await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n        const localKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n            HashPurpose.LocalAuthorization);\n        await this.cryptoService.setKeyHash(localKeyHash);\n    }\n}\n","import { KeysRequest } from './keysRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class SetPasswordRequest {\n    masterPasswordHash: string;\n    key: string;\n    masterPasswordHint: string;\n    keys: KeysRequest;\n    kdf: KdfType;\n    kdfIterations: number;\n    orgIdentifier: string;\n\n    constructor(masterPasswordHash: string, key: string, masterPasswordHint: string, kdf: KdfType,\n        kdfIterations: number, orgIdentifier: string, keys: KeysRequest) {\n        this.masterPasswordHash = masterPasswordHash;\n        this.key = key;\n        this.masterPasswordHint = masterPasswordHint;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n        this.orgIdentifier = orgIdentifier;\n        this.keys = keys;\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n    @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n    @Output() onRecoverSelected = new EventEmitter();\n\n    providers: any[] = [];\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected win: Window) { }\n\n    ngOnInit() {\n        this.providers = this.authService.getSupportedTwoFactorProviders(this.win);\n    }\n\n    choose(p: any) {\n        this.onProviderSelected.emit(p.type);\n    }\n\n    recover() {\n        this.platformUtilsService.launchUri('https://help.bitwarden.com/article/lost-two-step-device/');\n        this.onRecoverSelected.emit();\n    }\n}\n","import { Directive, OnDestroy, OnInit } from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { first } from 'rxjs/operators';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorEmailRequest } from 'jslib-common/models/request/twoFactorEmailRequest';\n\nimport { AuthResult } from 'jslib-common/models/domain/authResult';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { TwoFactorProviders } from 'jslib-common/services/auth.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport * as DuoWebSDK from 'duo_web_sdk';\nimport { WebAuthnIFrame } from 'jslib-common/misc/webauthn_iframe';\n\n@Directive()\nexport class TwoFactorComponent implements OnInit, OnDestroy {\n    token: string = '';\n    remember: boolean = false;\n    webAuthnReady: boolean = false;\n    webAuthnNewTab: boolean = false;\n    providers = TwoFactorProviders;\n    providerType = TwoFactorProviderType;\n    selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n    webAuthnSupported: boolean = false;\n    webAuthn: WebAuthnIFrame = null;\n    title: string = '';\n    twoFactorEmail: string = null;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n    identifier: string = null;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n\n    get webAuthnAllow(): string {\n        return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n    }\n\n    protected loginRoute = 'login';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected apiService: ApiService,\n        protected platformUtilsService: PlatformUtilsService, protected win: Window,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected storageService: StorageService, protected route: ActivatedRoute) {\n        this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n    }\n\n    async ngOnInit() {\n        if (!this.authing || this.authService.twoFactorProvidersData == null) {\n            this.router.navigate([this.loginRoute]);\n            return;\n        }\n\n        this.route.queryParams.pipe(first()).subscribe(qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            }\n        });\n\n        if (this.needsLock) {\n            this.successRoute = 'lock';\n        }\n\n        if (this.win != null && this.webAuthnSupported) {\n            const webVaultUrl = this.environmentService.getWebVaultUrl();\n            this.webAuthn = new WebAuthnIFrame(this.win, webVaultUrl, this.webAuthnNewTab, this.platformUtilsService,\n                this.i18nService, (token: string) => {\n                    this.token = token;\n                    this.submit();\n                }, (error: string) => {\n                    this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);\n                }, (info: string) => {\n                    if (info === 'ready') {\n                        this.webAuthnReady = true;\n                    }\n                }\n            );\n        }\n\n        this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(this.webAuthnSupported);\n        await this.init();\n    }\n\n    ngOnDestroy(): void {\n        this.cleanupWebAuthn();\n        this.webAuthn = null;\n    }\n\n    async init() {\n        if (this.selectedProviderType == null) {\n            this.title = this.i18nService.t('loginUnavailable');\n            return;\n        }\n\n        this.cleanupWebAuthn();\n        this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n        switch (this.selectedProviderType) {\n            case TwoFactorProviderType.WebAuthn:\n                if (!this.webAuthnNewTab) {\n                    setTimeout(() => {\n                        this.authWebAuthn();\n                    }, 500);\n                }\n                break;\n            case TwoFactorProviderType.Duo:\n            case TwoFactorProviderType.OrganizationDuo:\n                setTimeout(() => {\n                    DuoWebSDK.init({\n                        iframe: undefined,\n                        host: providerData.Host,\n                        sig_request: providerData.Signature,\n                        submit_callback: async (f: HTMLFormElement) => {\n                            const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n                            if (sig != null) {\n                                this.token = sig.value;\n                                await this.submit();\n                            }\n                        },\n                    });\n                }, 0);\n                break;\n            case TwoFactorProviderType.Email:\n                this.twoFactorEmail = providerData.Email;\n                if (this.authService.twoFactorProvidersData.size > 1) {\n                    await this.sendEmail(false);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    async submit() {\n        if (this.token == null || this.token === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('verificationCodeRequired'));\n            return;\n        }\n\n        if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n            if (this.webAuthn != null) {\n                this.webAuthn.stop();\n            } else {\n                return;\n            }\n        } else if (this.selectedProviderType === TwoFactorProviderType.Email ||\n            this.selectedProviderType === TwoFactorProviderType.Authenticator) {\n            this.token = this.token.replace(' ', '').trim();\n        }\n\n        try {\n            await this.doSubmit();\n        } catch {\n            if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n                this.webAuthn.start();\n            }\n        }\n    }\n\n    async doSubmit() {\n        this.formPromise = this.authService.logInTwoFactor(this.selectedProviderType, this.token, this.remember);\n        const response: AuthResult = await this.formPromise;\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n            this.onSuccessfulLogin();\n        }\n        if (response.resetMasterPassword) {\n            this.successRoute = 'set-password';\n        }\n        if (response.forcePasswordReset) {\n            this.successRoute = 'update-temp-password';\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n            this.onSuccessfulLoginNavigate();\n        } else {\n            this.router.navigate([this.successRoute], {\n                queryParams: {\n                    identifier: this.identifier,\n                },\n            });\n        }\n    }\n\n    async sendEmail(doToast: boolean) {\n        if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n            return;\n        }\n\n        if (this.emailPromise != null) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorEmailRequest(this.authService.email, this.authService.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmail(request);\n            await this.emailPromise;\n            if (doToast) {\n                this.platformUtilsService.showToast('success', null,\n                    this.i18nService.t('verificationCodeEmailSent', this.twoFactorEmail));\n            }\n        } catch { }\n\n        this.emailPromise = null;\n    }\n\n    authWebAuthn() {\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n\n        if (!this.webAuthnSupported || this.webAuthn == null) {\n            return;\n        }\n\n        this.webAuthn.init(providerData);\n    }\n\n    private cleanupWebAuthn() {\n        if (this.webAuthn != null) {\n            this.webAuthn.stop();\n            this.webAuthn.cleanup();\n        }\n    }\n\n    get authing(): boolean {\n        return this.authService.authingWithPassword() || this.authService.authingWithSso() || this.authService.authingWithApiKey();\n    }\n\n    get needsLock(): boolean {\n        return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class AuthResult {\n    twoFactor: boolean = false;\n    captchaSiteKey: string = '';\n    resetMasterPassword: boolean = false;\n    forcePasswordReset: boolean = false;\n    twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string; }> = null;\n}\n","import { DeviceType } from '../../enums/deviceType';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class DeviceRequest {\n    type: DeviceType;\n    name: string;\n    identifier: string;\n    pushToken?: string;\n\n    constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n        this.type = platformUtilsService.getDevice();\n        this.name = platformUtilsService.getDeviceString();\n        this.identifier = appId;\n        this.pushToken = null;\n    }\n}\n","export class PreloginRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { CaptchaProtectedRequest } from './captchaProtectedRequest';\nimport { DeviceRequest } from './deviceRequest';\n\nimport { Utils } from '../../misc/utils';\n\nexport class TokenRequest implements CaptchaProtectedRequest {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    redirectUri: string;\n    clientId: string;\n    clientSecret: string;\n    device?: DeviceRequest;\n\n    constructor(credentials: string[], codes: string[], clientIdClientSecret: string[], public provider: TwoFactorProviderType,\n        public token: string, public remember: boolean, public captchaResponse: string, device?: DeviceRequest) {\n        if (credentials != null && credentials.length > 1) {\n            this.email = credentials[0];\n            this.masterPasswordHash = credentials[1];\n        } else if (codes != null && codes.length > 2) {\n            this.code = codes[0];\n            this.codeVerifier = codes[1];\n            this.redirectUri = codes[2];\n        } else if (clientIdClientSecret != null && clientIdClientSecret.length > 1) {\n            this.clientId = clientIdClientSecret[0];\n            this.clientSecret = clientIdClientSecret[1];\n        }\n        this.device = device != null ? device : null;\n    }\n\n    toIdentityToken(clientId: string) {\n        const obj: any = {\n            scope: 'api offline_access',\n            client_id: clientId,\n        };\n\n        if (this.clientSecret != null) {\n            obj.scope = clientId.startsWith('organization') ? 'api.organization' : 'api';\n            obj.grant_type = 'client_credentials';\n            obj.client_secret = this.clientSecret;\n        } else if (this.masterPasswordHash != null && this.email != null) {\n            obj.grant_type = 'password';\n            obj.username = this.email;\n            obj.password = this.masterPasswordHash;\n        } else if (this.code != null && this.codeVerifier != null && this.redirectUri != null) {\n            obj.grant_type = 'authorization_code';\n            obj.code = this.code;\n            obj.code_verifier = this.codeVerifier;\n            obj.redirect_uri = this.redirectUri;\n        } else {\n            throw new Error('must provide credentials or codes');\n        }\n\n        if (this.device) {\n            obj.deviceType = this.device.type;\n            obj.deviceIdentifier = this.device.identifier;\n            obj.deviceName = this.device.name;\n            // no push tokens for browser apps yet\n            // obj.devicePushToken = this.device.pushToken;\n        }\n\n        if (this.token && this.provider != null) {\n            obj.twoFactorToken = this.token;\n            obj.twoFactorProvider = this.provider;\n            obj.twoFactorRemember = this.remember ? '1' : '0';\n        }\n\n        if (this.captchaResponse != null) {\n            obj.captchaResponse = this.captchaResponse;\n        }\n\n\n        return obj;\n    }\n\n    alterIdentityTokenHeaders(headers: Headers) {\n        if (this.clientSecret == null && this.masterPasswordHash != null && this.email != null) {\n            headers.set('Auth-Email', Utils.fromUtf8ToUrlB64(this.email));\n        }\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nexport class WebAuthnIFrame {\n    private iframe: HTMLIFrameElement = null;\n    private connectorLink: HTMLAnchorElement;\n    private parseFunction = this.parseMessage.bind(this);\n\n    constructor(private win: Window, private webVaultUrl: string, private webAuthnNewTab: boolean,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private successCallback: Function, private errorCallback: Function, private infoCallback: Function) {\n        this.connectorLink = win.document.createElement('a');\n    }\n\n    init(data: any): void {\n        const params = new URLSearchParams({\n            data: this.base64Encode(JSON.stringify(data)),\n            parent: encodeURIComponent(this.win.document.location.href),\n            btnText: encodeURIComponent(this.i18nService.t('webAuthnAuthenticate')),\n            v: '1',\n        });\n\n        if (this.webAuthnNewTab) {\n            // Firefox fallback which opens the webauthn page in a new tab\n            params.append('locale', this.i18nService.translationLocale);\n            this.platformUtilsService.launchUri(`${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`);\n        } else {\n            this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n            this.iframe = this.win.document.getElementById('webauthn_iframe') as HTMLIFrameElement;\n            this.iframe.allow = 'publickey-credentials-get ' + new URL(this.webVaultUrl).origin;\n            this.iframe.src = this.connectorLink.href;\n\n            this.win.addEventListener('message', this.parseFunction, false);\n        }\n    }\n\n    stop() {\n        this.sendMessage('stop');\n    }\n\n    start() {\n        this.sendMessage('start');\n    }\n\n    sendMessage(message: any) {\n        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n            return;\n        }\n\n        this.iframe.contentWindow.postMessage(message, this.iframe.src);\n    }\n\n    base64Encode(str: string): string {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n    }\n\n    cleanup() {\n        this.win.removeEventListener('message', this.parseFunction, false);\n    }\n\n    private parseMessage(event: MessageEvent) {\n        if (!this.validMessage(event)) {\n            return;\n        }\n\n        const parts: string[] = event.data.split('|');\n        if (parts[0] === 'success' && this.successCallback) {\n            this.successCallback(parts[1]);\n        } else if (parts[0] === 'error' && this.errorCallback) {\n            this.errorCallback(parts[1]);\n        } else if (parts[0] === 'info' && this.infoCallback) {\n            this.infoCallback(parts[1]);\n        }\n    }\n\n    private validMessage(event: MessageEvent) {\n        if (event.origin == null || event.origin === '' || event.origin !== (this.connectorLink as any).origin ||\n            event.data == null || typeof (event.data) !== 'string') {\n            return false;\n        }\n\n        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||\n            event.data.indexOf('info|') === 0;\n    }\n}\n","import { Directive } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from './change-password.component';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { UpdateTempPasswordRequest } from 'jslib-common/models/request/updateTempPasswordRequest';\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n    hint: string;\n    key: string;\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n    showPassword: boolean = false;\n\n    onSuccessfulChangePassword: () => Promise<any>;\n\n    constructor(i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, policyService: PolicyService,\n        cryptoService: CryptoService, userService: UserService,\n        messagingService: MessagingService, private apiService: ApiService,\n        private syncService: SyncService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        await this.syncService.fullSync(true);\n        super.ngOnInit();\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    async setupSubmitActions(): Promise<boolean> {\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n        this.email = await this.userService.getEmail();\n        this.kdf = await this.userService.getKdf();\n        this.kdfIterations = await this.userService.getKdfIterations();\n        return true;\n    }\n\n    async submit() {\n        // Validation\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        if (!await this.setupSubmitActions()) {\n            return;\n        }\n\n        try {\n            // Create new key and hash new password\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.email.trim().toLowerCase(),\n                this.kdf, this.kdfIterations);\n            const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n            // Grab user's current enc key\n            const userEncKey = await this.cryptoService.getEncKey();\n\n            // Create new encKey for the User\n            const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n            await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n        } catch { }\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        try {\n            // Create request\n            const request = new UpdateTempPasswordRequest();\n            request.key = encKey[1].encryptedString;\n            request.newMasterPasswordHash = masterPasswordHash;\n            request.masterPasswordHint = this.hint;\n\n            // Update user's password\n            this.formPromise = this.apiService.putUpdateTempPassword(request);\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('updatedMasterPassword'));\n\n            if (this.onSuccessfulChangePassword != null) {\n                this.onSuccessfulChangePassword();\n            } else {\n                this.messagingService.send('logout');\n            }\n        } catch { }\n    }\n}\n","import { OrganizationUserResetPasswordRequest } from './organizationUserResetPasswordRequest';\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n    masterPasswordHint: string;\n}\n","export class VerifyEmailRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","export class VerifyDeleteRecoverRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class GroupRequest {\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","export class OrganizationUserConfirmRequest {\n    key: string;\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationUserInviteRequest {\n    emails: string[] = [];\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n    permissions: PermissionsApi;\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationUserUpdateRequest {\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n    permissions: PermissionsApi;\n}\n","export class OrganizationUserUpdateGroupsRequest {\n    groupIds: string[] = [];\n}\n","import { PolicyType } from '../../enums/policyType';\n\nexport class PolicyRequest {\n    type: PolicyType;\n    enabled: boolean;\n    data: any;\n}\n","import { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationUpdateRequest {\n    name: string;\n    identifier: string;\n    businessName: string;\n    billingEmail: string;\n    keys: OrganizationKeysRequest;\n}\n","export class OrganizationSubscriptionUpdateRequest {\n    constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) { }\n}\n","export enum TransactionType {\n    Charge = 0,\n    Credit = 1,\n    PromotionalCredit = 2,\n    ReferralCredit = 3,\n    Refund = 4,\n}\n","export class VerifyBankRequest {\n    amount1: number;\n    amount2: number;\n}\n","export class BitPayInvoiceRequest {\n    userId: string;\n    organizationId: string;\n    credit: boolean;\n    amount: number;\n    returnUrl: string;\n    name: string;\n    email: string;\n}\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { OrganizationTaxInfoUpdateRequest } from '../request/organizationTaxInfoUpdateRequest';\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n}\n","export class StorageRequest {\n    storageGbAdjustment: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorDuoRequest extends PasswordVerificationRequest {\n    integrationKey: string;\n    secretKey: string;\n    host: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderRequest extends PasswordVerificationRequest {\n    type: TwoFactorProviderType;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorAuthenticatorRequest extends PasswordVerificationRequest {\n    token: string;\n    key: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorEmailRequest extends PasswordVerificationRequest {\n    token: string;\n    email: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends PasswordVerificationRequest {\n    id: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorWebAuthnRequest extends PasswordVerificationRequest {\n    deviceResponse: PublicKeyCredential;\n    name: string;\n    id: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorYubioOtpRequest extends PasswordVerificationRequest {\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n}\n","import {\n    Directive,\n    EventEmitter,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\n@Directive()\nexport class ExportComponent implements OnInit {\n    @Output() onSaved = new EventEmitter();\n\n    formPromise: Promise<string>;\n    masterPassword: string;\n    format: 'json' | 'encrypted_json' | 'csv' = 'json';\n    showPassword = false;\n    disabledByPolicy: boolean = false;\n\n    constructor(protected cryptoService: CryptoService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected exportService: ExportService,\n        protected eventService: EventService, private policyService: PolicyService, protected win: Window) { }\n\n    async ngOnInit() {\n        await this.checkExportDisabled();\n    }\n\n    async checkExportDisabled() {\n        this.disabledByPolicy = await this.policyService.policyAppliesToUser(PolicyType.DisablePersonalVaultExport);\n    }\n\n    get encryptedFormat() {\n        return this.format === 'encrypted_json';\n    }\n\n    async submit() {\n        if (this.disabledByPolicy) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('personalVaultExportPolicyInEffect'));\n            return;\n        }\n\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n            return;\n        }\n\n        const acceptedWarning = await this.warningDialog();\n        if (!acceptedWarning) {\n            return;\n        }\n\n        const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null);\n        if (passwordValid) {\n            try {\n                this.formPromise = this.getExportData();\n                const data = await this.formPromise;\n                this.downloadFile(data);\n                this.saved();\n                await this.collectEvent();\n            } catch { }\n        } else {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n        }\n    }\n\n    async warningDialog() {\n        if (this.encryptedFormat) {\n            return await this.platformUtilsService.showDialog(\n                '<p>' + this.i18nService.t('encExportKeyWarningDesc') +\n                '<p>' + this.i18nService.t('encExportAccountWarningDesc'),\n                this.i18nService.t('confirmVaultExport'), this.i18nService.t('exportVault'),\n                this.i18nService.t('cancel'), 'warning',\n                true);\n        } else {\n            return await this.platformUtilsService.showDialog(\n                this.i18nService.t('exportWarningDesc'),\n                this.i18nService.t('confirmVaultExport'), this.i18nService.t('exportVault'),\n                this.i18nService.t('cancel'), 'warning');\n        }\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    protected saved() {\n        this.onSaved.emit();\n    }\n\n    protected getExportData() {\n        return this.exportService.getExport(this.format);\n    }\n\n    protected getFileName(prefix?: string) {\n        let extension = this.format;\n        if (this.format === 'encrypted_json') {\n            if (prefix == null) {\n                prefix = 'encrypted';\n            } else {\n                prefix = 'encrypted_' + prefix;\n            }\n            extension = 'json';\n        }\n        return this.exportService.getFileName(prefix, extension);\n    }\n\n    protected async collectEvent(): Promise<any> {\n        await this.eventService.collect(EventType.User_ClientExportedVault);\n    }\n\n    private downloadFile(csv: string): void {\n        const fileName = this.getFileName();\n        this.platformUtilsService.saveFile(this.win, csv, { type: 'text/plain' }, fileName);\n    }\n}\n","import { View } from './view';\n\nimport { Attachment } from '../domain/attachment';\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\n\nexport class AttachmentView implements View {\n    id: string = null;\n    url: string = null;\n    size: string = null;\n    sizeName: string = null;\n    fileName: string = null;\n    key: SymmetricCryptoKey = null;\n\n    constructor(a?: Attachment) {\n        if (!a) {\n            return;\n        }\n\n        this.id = a.id;\n        this.url = a.url;\n        this.size = a.size;\n        this.sizeName = a.sizeName;\n    }\n\n    get fileSize(): number {\n        try {\n            if (this.size != null) {\n                return parseInt(this.size, null);\n            }\n        } catch { }\n        return 0;\n    }\n}\n","export class AttachmentRequest {\n    fileName: string;\n    key: string;\n    fileSize: number;\n    adminRequest: boolean;\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SecureNoteType } from 'jslib-common/enums/secureNoteType';\nimport { UriMatchType } from 'jslib-common/enums/uriMatchType';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CardView } from 'jslib-common/models/view/cardView';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\nimport { FolderView } from 'jslib-common/models/view/folderView';\nimport { IdentityView } from 'jslib-common/models/view/identityView';\nimport { LoginUriView } from 'jslib-common/models/view/loginUriView';\nimport { LoginView } from 'jslib-common/models/view/loginView';\nimport { SecureNoteView } from 'jslib-common/models/view/secureNoteView';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n    @Input() cloneMode: boolean = false;\n    @Input() folderId: string = null;\n    @Input() cipherId: string;\n    @Input() type: CipherType;\n    @Input() collectionIds: string[];\n    @Input() organizationId: string = null;\n    @Output() onSavedCipher = new EventEmitter<CipherView>();\n    @Output() onDeletedCipher = new EventEmitter<CipherView>();\n    @Output() onRestoredCipher = new EventEmitter<CipherView>();\n    @Output() onCancelled = new EventEmitter<CipherView>();\n    @Output() onEditAttachments = new EventEmitter<CipherView>();\n    @Output() onShareCipher = new EventEmitter<CipherView>();\n    @Output() onEditCollections = new EventEmitter<CipherView>();\n    @Output() onGeneratePassword = new EventEmitter();\n\n    editMode: boolean = false;\n    cipher: CipherView;\n    folders: FolderView[];\n    collections: CollectionView[] = [];\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    restorePromise: Promise<any>;\n    checkPasswordPromise: Promise<number>;\n    showPassword: boolean = false;\n    showCardNumber: boolean = false;\n    showCardCode: boolean = false;\n    cipherType = CipherType;\n    typeOptions: any[];\n    cardBrandOptions: any[];\n    cardExpMonthOptions: any[];\n    identityTitleOptions: any[];\n    uriMatchOptions: any[];\n    ownershipOptions: any[] = [];\n    autofillOnPageLoadOptions: any[];\n    currentDate = new Date();\n    allowPersonal = true;\n    reprompt: boolean = false;\n\n    protected writeableCollections: CollectionView[];\n    private previousCipherId: string;\n\n    constructor(protected cipherService: CipherService, protected folderService: FolderService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected auditService: AuditService, protected stateService: StateService,\n        protected userService: UserService, protected collectionService: CollectionService,\n        protected messagingService: MessagingService, protected eventService: EventService,\n        protected policyService: PolicyService) {\n        this.typeOptions = [\n            { name: i18nService.t('typeLogin'), value: CipherType.Login },\n            { name: i18nService.t('typeCard'), value: CipherType.Card },\n            { name: i18nService.t('typeIdentity'), value: CipherType.Identity },\n            { name: i18nService.t('typeSecureNote'), value: CipherType.SecureNote },\n        ];\n        this.cardBrandOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: 'Visa', value: 'Visa' },\n            { name: 'Mastercard', value: 'Mastercard' },\n            { name: 'American Express', value: 'Amex' },\n            { name: 'Discover', value: 'Discover' },\n            { name: 'Diners Club', value: 'Diners Club' },\n            { name: 'JCB', value: 'JCB' },\n            { name: 'Maestro', value: 'Maestro' },\n            { name: 'UnionPay', value: 'UnionPay' },\n            { name: i18nService.t('other'), value: 'Other' },\n        ];\n        this.cardExpMonthOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: '01 - ' + i18nService.t('january'), value: '1' },\n            { name: '02 - ' + i18nService.t('february'), value: '2' },\n            { name: '03 - ' + i18nService.t('march'), value: '3' },\n            { name: '04 - ' + i18nService.t('april'), value: '4' },\n            { name: '05 - ' + i18nService.t('may'), value: '5' },\n            { name: '06 - ' + i18nService.t('june'), value: '6' },\n            { name: '07 - ' + i18nService.t('july'), value: '7' },\n            { name: '08 - ' + i18nService.t('august'), value: '8' },\n            { name: '09 - ' + i18nService.t('september'), value: '9' },\n            { name: '10 - ' + i18nService.t('october'), value: '10' },\n            { name: '11 - ' + i18nService.t('november'), value: '11' },\n            { name: '12 - ' + i18nService.t('december'), value: '12' },\n        ];\n        this.identityTitleOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('mr'), value: i18nService.t('mr') },\n            { name: i18nService.t('mrs'), value: i18nService.t('mrs') },\n            { name: i18nService.t('ms'), value: i18nService.t('ms') },\n            { name: i18nService.t('dr'), value: i18nService.t('dr') },\n        ];\n        this.uriMatchOptions = [\n            { name: i18nService.t('defaultMatchDetection'), value: null },\n            { name: i18nService.t('baseDomain'), value: UriMatchType.Domain },\n            { name: i18nService.t('host'), value: UriMatchType.Host },\n            { name: i18nService.t('startsWith'), value: UriMatchType.StartsWith },\n            { name: i18nService.t('regEx'), value: UriMatchType.RegularExpression },\n            { name: i18nService.t('exact'), value: UriMatchType.Exact },\n            { name: i18nService.t('never'), value: UriMatchType.Never },\n        ];\n        this.autofillOnPageLoadOptions = [\n            { name: i18nService.t('autoFillOnPageLoadUseDefault'), value: null },\n            { name: i18nService.t('autoFillOnPageLoadYes'), value: true },\n            { name: i18nService.t('autoFillOnPageLoadNo'), value: false },\n        ];\n    }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async init() {\n        if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n            this.allowPersonal = false;\n        } else {\n            const myEmail = await this.userService.getEmail();\n            this.ownershipOptions.push({ name: myEmail, value: null });\n        }\n\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name')).forEach(o => {\n            if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n                this.ownershipOptions.push({ name: o.name, value: o.id });\n            }\n        });\n        if (!this.allowPersonal) {\n            this.organizationId = this.ownershipOptions[0].value;\n        }\n\n        this.writeableCollections = await this.loadCollections();\n    }\n\n    async load() {\n        this.editMode = this.cipherId != null;\n        if (this.editMode) {\n            this.editMode = true;\n            if (this.cloneMode) {\n                this.cloneMode = true;\n                this.title = this.i18nService.t('addItem');\n            } else {\n                this.title = this.i18nService.t('editItem');\n            }\n        } else {\n            this.title = this.i18nService.t('addItem');\n        }\n\n        const addEditCipherInfo: any = await this.stateService.get<any>('addEditCipherInfo');\n        if (addEditCipherInfo != null) {\n            this.cipher = addEditCipherInfo.cipher;\n            this.collectionIds = addEditCipherInfo.collectionIds;\n        }\n        await this.stateService.remove('addEditCipherInfo');\n\n        if (this.cipher == null) {\n            if (this.editMode) {\n                const cipher = await this.loadCipher();\n                this.cipher = await cipher.decrypt();\n\n                // Adjust Cipher Name if Cloning\n                if (this.cloneMode) {\n                    this.cipher.name += ' - ' + this.i18nService.t('clone');\n                    // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n                    if (this.cipher.organizationId == null && !this.allowPersonal) {\n                        this.cipher.organizationId = this.organizationId;\n                    }\n                }\n            } else {\n                this.cipher = new CipherView();\n                this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n                this.cipher.folderId = this.folderId;\n                this.cipher.type = this.type == null ? CipherType.Login : this.type;\n                this.cipher.login = new LoginView();\n                this.cipher.login.uris = [new LoginUriView()];\n                this.cipher.card = new CardView();\n                this.cipher.identity = new IdentityView();\n                this.cipher.secureNote = new SecureNoteView();\n                this.cipher.secureNote.type = SecureNoteType.Generic;\n                this.cipher.reprompt = CipherRepromptType.None;\n            }\n        }\n\n        if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n            await this.organizationChanged();\n            if (this.collectionIds != null && this.collectionIds.length > 0 && this.collections.length > 0) {\n                this.collections.forEach(c => {\n                    if (this.collectionIds.indexOf(c.id) > -1) {\n                        (c as any).checked = true;\n                    }\n                });\n            }\n        }\n\n        this.folders = await this.folderService.getAllDecrypted();\n\n        if (this.editMode && this.previousCipherId !== this.cipherId) {\n            this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n        }\n        this.previousCipherId = this.cipherId;\n        this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.cipher.isDeleted) {\n            return this.restore();\n        }\n\n        if (this.cipher.name == null || this.cipher.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        if ((!this.editMode || this.cloneMode) && !this.allowPersonal && this.cipher.organizationId == null) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('personalOwnershipSubmitError'));\n            return false;\n        }\n\n        if ((!this.editMode || this.cloneMode) && this.cipher.type === CipherType.Login &&\n            this.cipher.login.uris != null && this.cipher.login.uris.length === 1 &&\n            (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === '')) {\n            this.cipher.login.uris = null;\n        }\n\n        // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n        if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n            this.cipher.collectionIds = this.collections == null ? [] :\n                this.collections.filter(c => (c as any).checked).map(c => c.id);\n        }\n\n        // Clear current Cipher Id to trigger \"Add\" cipher flow\n        if (this.cloneMode) {\n            this.cipher.id = null;\n        }\n\n        const cipher = await this.encryptCipher();\n        try {\n            this.formPromise = this.saveCipher(cipher);\n            await this.formPromise;\n            this.cipher.id = cipher.id;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode && !this.cloneMode ? 'editedItem' : 'addedItem'));\n            this.onSavedCipher.emit(this.cipher);\n            this.messagingService.send(this.editMode && !this.cloneMode ? 'editedCipher' : 'addedCipher');\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    addUri() {\n        if (this.cipher.type !== CipherType.Login) {\n            return;\n        }\n\n        if (this.cipher.login.uris == null) {\n            this.cipher.login.uris = [];\n        }\n\n        this.cipher.login.uris.push(new LoginUriView());\n    }\n\n    removeUri(uri: LoginUriView) {\n        if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n            return;\n        }\n\n        const i = this.cipher.login.uris.indexOf(uri);\n        if (i > -1) {\n            this.cipher.login.uris.splice(i, 1);\n        }\n    }\n\n    trackByFunction(index: number, item: any) {\n        return index;\n    }\n\n    cancel() {\n        this.onCancelled.emit(this.cipher);\n    }\n\n    attachments() {\n        this.onEditAttachments.emit(this.cipher);\n    }\n\n    share() {\n        this.onShareCipher.emit(this.cipher);\n    }\n\n    editCollections() {\n        this.onEditCollections.emit(this.cipher);\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\n            this.i18nService.t('deleteItem'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.deleteCipher();\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeletedItem' : 'deletedItem'));\n            this.onDeletedCipher.emit(this.cipher);\n            this.messagingService.send(this.cipher.isDeleted ? 'permanentlyDeletedCipher' : 'deletedCipher');\n        } catch { }\n\n        return true;\n    }\n\n    async restore(): Promise<boolean> {\n        if (!this.cipher.isDeleted) {\n            return false;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('restoreItemConfirmation'), this.i18nService.t('restoreItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.restorePromise = this.restoreCipher();\n            await this.restorePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('restoredItem'));\n            this.onRestoredCipher.emit(this.cipher);\n            this.messagingService.send('restoredCipher');\n        } catch { }\n\n        return true;\n    }\n\n    async generatePassword(): Promise<boolean> {\n        if (this.cipher.login != null && this.cipher.login.password != null && this.cipher.login.password.length) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('overwritePasswordConfirmation'), this.i18nService.t('overwritePassword'),\n                this.i18nService.t('yes'), this.i18nService.t('no'));\n            if (!confirmed) {\n                return false;\n            }\n        }\n\n        this.onGeneratePassword.emit();\n        return true;\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('loginPassword').focus();\n        if (this.editMode && this.showPassword) {\n            this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n        }\n    }\n\n    async toggleCardNumber() {\n        this.showCardNumber = !this.showCardNumber;\n        if (this.showCardNumber) {\n            this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n        }\n    }\n\n    toggleCardCode() {\n        this.showCardCode = !this.showCardCode;\n        document.getElementById('cardCode').focus();\n        if (this.editMode && this.showCardCode) {\n            this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n        }\n    }\n\n    toggleUriOptions(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n    }\n\n    loginUriMatchChanged(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null ? true : u.showOptions;\n    }\n\n    async organizationChanged() {\n        if (this.writeableCollections != null) {\n            this.writeableCollections.forEach(c => (c as any).checked = false);\n        }\n        if (this.cipher.organizationId != null) {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.cipher.organizationId);\n            const org = await this.userService.getOrganization(this.cipher.organizationId);\n            if (org != null) {\n                this.cipher.organizationUseTotp = org.useTotp;\n            }\n        } else {\n            this.collections = [];\n        }\n    }\n\n    async checkPassword() {\n        if (this.checkPasswordPromise != null) {\n            return;\n        }\n\n        if (this.cipher.login == null || this.cipher.login.password == null || this.cipher.login.password === '') {\n            return;\n        }\n\n        this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n        const matches = await this.checkPasswordPromise;\n        this.checkPasswordPromise = null;\n\n        if (matches > 0) {\n            this.platformUtilsService.showToast('warning', null,\n                this.i18nService.t('passwordExposed', matches.toString()));\n        } else {\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('passwordSafe'));\n        }\n    }\n\n    repromptChanged() {\n        this.reprompt = !this.reprompt;\n        if (this.reprompt) {\n            this.cipher.reprompt = CipherRepromptType.Password;\n        } else {\n            this.cipher.reprompt = CipherRepromptType.None;\n        }\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter(c => !c.readOnly);\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected encryptCipher() {\n        return this.cipherService.encrypt(this.cipher);\n    }\n\n    protected saveCipher(cipher: Cipher) {\n        return this.cipherService.saveWithServer(cipher);\n    }\n\n    protected deleteCipher() {\n        return this.cipher.isDeleted ? this.cipherService.deleteWithServer(this.cipher.id)\n            : this.cipherService.softDeleteWithServer(this.cipher.id);\n    }\n\n    protected restoreCipher() {\n        return this.cipherService.restoreWithServer(this.cipher.id);\n    }\n}\n","import {\n    Directive,\n    Input,\n} from '@angular/core';\n\nimport {\n    CdkDragDrop,\n    moveItemInArray,\n} from '@angular/cdk/drag-drop';\n\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { FieldView } from 'jslib-common/models/view/fieldView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { FieldType } from 'jslib-common/enums/fieldType';\n\n@Directive()\nexport class AddEditCustomFieldsComponent {\n    @Input() cipher: CipherView;\n    @Input() editMode: boolean;\n\n    addFieldType: FieldType = FieldType.Text;\n    addFieldTypeOptions: any[];\n    linkedFieldOptions: any[] = [];\n\n    cipherType = CipherType;\n    fieldType = FieldType;\n    eventType = EventType;\n\n    constructor(private i18nService: I18nService, private eventService: EventService) {\n        this.addFieldTypeOptions = [\n            { name: i18nService.t('cfTypeText'), value: FieldType.Text },\n            { name: i18nService.t('cfTypeHidden'), value: FieldType.Hidden },\n            { name: i18nService.t('cfTypeBoolean'), value: FieldType.Boolean },\n        ];\n    }\n\n    addField() {\n        if (this.cipher.fields == null) {\n            this.cipher.fields = [];\n        }\n\n        const f = new FieldView();\n        f.type = this.addFieldType;\n        f.newField = true;\n\n        this.cipher.fields.push(f);\n    }\n\n    removeField(field: FieldView) {\n        const i = this.cipher.fields.indexOf(field);\n        if (i > -1) {\n            this.cipher.fields.splice(i, 1);\n        }\n    }\n\n    toggleFieldValue(field: FieldView) {\n        const f = (field as any);\n        f.showValue = !f.showValue;\n        if (this.editMode && f.showValue) {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n        }\n    }\n\n    trackByFunction(index: number, item: any) {\n        return index;\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { SearchService } from 'jslib-common/abstractions/search.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Directive()\nexport class CiphersComponent {\n    @Input() activeCipherId: string = null;\n    @Output() onCipherClicked = new EventEmitter<CipherView>();\n    @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n    @Output() onAddCipher = new EventEmitter();\n    @Output() onAddCipherOptions = new EventEmitter();\n\n    loaded: boolean = false;\n    ciphers: CipherView[] = [];\n    searchText: string;\n    searchPlaceholder: string = null;\n    filter: (cipher: CipherView) => boolean = null;\n    deleted: boolean = false;\n\n    protected searchPending = false;\n\n    private searchTimeout: any = null;\n\n    constructor(protected searchService: SearchService) { }\n\n    async load(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n        this.deleted = deleted || false;\n        await this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    async reload(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n        this.loaded = false;\n        this.ciphers = [];\n        await this.load(filter, deleted);\n    }\n\n    async refresh() {\n        await this.reload(this.filter, this.deleted);\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        this.filter = filter;\n        await this.search(null);\n    }\n\n    async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n        this.searchPending = false;\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout);\n        }\n        if (timeout == null) {\n            await this.doSearch(indexedCiphers);\n            return;\n        }\n        this.searchPending = true;\n        this.searchTimeout = setTimeout(async () => {\n            await this.doSearch(indexedCiphers);\n            this.searchPending = false;\n        }, timeout);\n    }\n\n    selectCipher(cipher: CipherView) {\n        this.onCipherClicked.emit(cipher);\n    }\n\n    rightClickCipher(cipher: CipherView) {\n        this.onCipherRightClicked.emit(cipher);\n    }\n\n    addCipher() {\n        this.onAddCipher.emit();\n    }\n\n    addCipherOptions() {\n        this.onAddCipherOptions.emit();\n    }\n\n    isSearching() {\n        return !this.searchPending && this.searchService.isSearchable(this.searchText);\n    }\n\n    protected deletedFilter: (cipher: CipherView) => boolean = c => c.isDeleted === this.deleted;\n\n    protected async doSearch(indexedCiphers?: CipherView[]) {\n        this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, this.deletedFilter], indexedCiphers);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() allowSelectNone = false;\n    @Output() onSavedCollections = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collectionIds: string[];\n    collections: CollectionView[] = [];\n\n    protected cipherDomain: Cipher;\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        this.cipherDomain = await this.loadCipher();\n        this.collectionIds = this.loadCipherCollections();\n        this.cipher = await this.cipherDomain.decrypt();\n        this.collections = await this.loadCollections();\n\n        this.collections.forEach(c => (c as any).checked = false);\n        if (this.collectionIds != null) {\n            this.collections.forEach(c => {\n                (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n            });\n        }\n    }\n\n    async submit() {\n        const selectedCollectionIds = this.collections\n            .filter(c => !!(c as any).checked)\n            .map(c => c.id);\n        if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n        this.cipherDomain.collectionIds = selectedCollectionIds;\n        try {\n            this.formPromise = this.saveCollections();\n            await this.formPromise;\n            this.onSavedCollections.emit();\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('editedItem'));\n        } catch { }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected loadCipherCollections() {\n        return this.cipherDomain.collectionIds;\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter(c => !c.readOnly && c.organizationId === this.cipher.organizationId);\n    }\n\n    protected saveCollections() {\n        return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\nimport { TreeNode } from 'jslib-common/models/domain/treeNode';\n\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\n@Directive()\nexport class GroupingsComponent {\n    @Input() showFolders = true;\n    @Input() showCollections = true;\n    @Input() showFavorites = true;\n    @Input() showTrash = true;\n\n    @Output() onAllClicked = new EventEmitter();\n    @Output() onFavoritesClicked = new EventEmitter();\n    @Output() onTrashClicked = new EventEmitter();\n    @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n    @Output() onFolderClicked = new EventEmitter<FolderView>();\n    @Output() onAddFolder = new EventEmitter();\n    @Output() onEditFolder = new EventEmitter<FolderView>();\n    @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n    folders: FolderView[];\n    nestedFolders: TreeNode<FolderView>[];\n    collections: CollectionView[];\n    nestedCollections: TreeNode<CollectionView>[];\n    loaded: boolean = false;\n    cipherType = CipherType;\n    selectedAll: boolean = false;\n    selectedFavorites: boolean = false;\n    selectedTrash: boolean = false;\n    selectedType: CipherType = null;\n    selectedFolder: boolean = false;\n    selectedFolderId: string = null;\n    selectedCollectionId: string = null;\n\n    private collapsedGroupings: Set<string>;\n    private collapsedGroupingsKey: string;\n\n    constructor(protected collectionService: CollectionService, protected folderService: FolderService,\n        protected storageService: StorageService, protected userService: UserService) { }\n\n    async load(setLoaded = true) {\n        const userId = await this.userService.getUserId();\n        this.collapsedGroupingsKey = ConstantsService.collapsedGroupingsKey + '_' + userId;\n        const collapsedGroupings = await this.storageService.get<string[]>(this.collapsedGroupingsKey);\n        if (collapsedGroupings == null) {\n            this.collapsedGroupings = new Set<string>();\n        } else {\n            this.collapsedGroupings = new Set(collapsedGroupings);\n        }\n\n        await this.loadFolders();\n        await this.loadCollections();\n\n        if (setLoaded) {\n            this.loaded = true;\n        }\n    }\n\n    async loadCollections(organizationId?: string) {\n        if (!this.showCollections) {\n            return;\n        }\n        const collections = await this.collectionService.getAllDecrypted();\n        if (organizationId != null) {\n            this.collections = collections.filter(c => c.organizationId === organizationId);\n        } else {\n            this.collections = collections;\n        }\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    async loadFolders() {\n        if (!this.showFolders) {\n            return;\n        }\n        this.folders = await this.folderService.getAllDecrypted();\n        this.nestedFolders = await this.folderService.getAllNested();\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.onAllClicked.emit();\n    }\n\n    selectFavorites() {\n        this.clearSelections();\n        this.selectedFavorites = true;\n        this.onFavoritesClicked.emit();\n    }\n\n    selectTrash() {\n        this.clearSelections();\n        this.selectedTrash = true;\n        this.onTrashClicked.emit();\n    }\n\n    selectType(type: CipherType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.onCipherTypeClicked.emit(type);\n    }\n\n    selectFolder(folder: FolderView) {\n        this.clearSelections();\n        this.selectedFolder = true;\n        this.selectedFolderId = folder.id;\n        this.onFolderClicked.emit(folder);\n    }\n\n    addFolder() {\n        this.onAddFolder.emit();\n    }\n\n    editFolder(folder: FolderView) {\n        this.onEditFolder.emit(folder);\n    }\n\n    selectCollection(collection: CollectionView) {\n        this.clearSelections();\n        this.selectedCollectionId = collection.id;\n        this.onCollectionClicked.emit(collection);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedFavorites = false;\n        this.selectedTrash = false;\n        this.selectedType = null;\n        this.selectedFolder = false;\n        this.selectedFolderId = null;\n        this.selectedCollectionId = null;\n    }\n\n    collapse(grouping: FolderView | CollectionView, idPrefix = '') {\n        if (grouping.id == null) {\n            return;\n        }\n        const id = idPrefix + grouping.id;\n        if (this.isCollapsed(grouping, idPrefix)) {\n            this.collapsedGroupings.delete(id);\n        } else {\n            this.collapsedGroupings.add(id);\n        }\n        this.storageService.save(this.collapsedGroupingsKey, this.collapsedGroupings);\n    }\n\n    isCollapsed(grouping: FolderView | CollectionView, idPrefix = '') {\n        return this.collapsedGroupings.has(idPrefix + grouping.id);\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendAccessResponse } from '../response/sendAccessResponse';\n\nimport { SendAccessView } from '../view/sendAccessView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SendFile } from './sendFile';\nimport { SendText } from './sendText';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class SendAccess extends Domain {\n    id: string;\n    type: SendType;\n    name: EncString;\n    file: SendFile;\n    text: SendText;\n    expirationDate: Date;\n    creatorIdentifier: string;\n\n    constructor(obj?: SendAccessResponse, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n            expirationDate: null,\n            creatorIdentifier: null,\n        }, alreadyEncrypted, ['id', 'expirationDate', 'creatorIdentifier']);\n\n        this.type = obj.type;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendText(obj.text, alreadyEncrypted);\n                break;\n            case SendType.File:\n                this.file = new SendFile(obj.file, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n    }\n\n    async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n        const model = new SendAccessView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n        }, null, key);\n\n        switch (this.type) {\n            case SendType.File:\n                model.file = await this.file.decrypt(key);\n                break;\n            case SendType.Text:\n                model.text = await this.text.decrypt(key);\n                break;\n            default:\n                break;\n        }\n\n        return model;\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendAccess } from '../domain/sendAccess';\n\nimport { SendFileView } from './sendFileView';\nimport { SendTextView } from './sendTextView';\nimport { View } from './view';\n\nexport class SendAccessView implements View {\n    id: string = null;\n    name: string = null;\n    type: SendType = null;\n    text = new SendTextView();\n    file = new SendFileView();\n    expirationDate: Date = null;\n    creatorIdentifier: string = null;\n\n    constructor(s?: SendAccess) {\n        if (!s) {\n            return;\n        }\n\n        this.id = s.id;\n        this.type = s.type;\n        this.expirationDate = s.expirationDate;\n        this.creatorIdentifier = s.creatorIdentifier;\n    }\n}\n","export class SendAccessRequest {\n    password: string;\n}\n","import { DatePipe } from '@angular/common';\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SendType } from 'jslib-common/enums/sendType';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { SendFileView } from 'jslib-common/models/view/sendFileView';\nimport { SendTextView } from 'jslib-common/models/view/sendTextView';\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { EncArrayBuffer } from 'jslib-common/models/domain/encArrayBuffer';\nimport { Send } from 'jslib-common/models/domain/send';\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n    @Input() sendId: string;\n    @Input() type: SendType;\n\n    @Output() onSavedSend = new EventEmitter<SendView>();\n    @Output() onDeletedSend = new EventEmitter<SendView>();\n    @Output() onCancelled = new EventEmitter<SendView>();\n\n    copyLink = false;\n    disableSend = false;\n    disableHideEmail = false;\n    send: SendView;\n    deletionDate: string;\n    expirationDate: string;\n    hasPassword: boolean;\n    password: string;\n    showPassword = false;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    sendType = SendType;\n    typeOptions: any[];\n    canAccessPremium = true;\n    emailVerified = true;\n    alertShown = false;\n    showOptions = false;\n\n    private sendLinkBaseUrl: string;\n\n    constructor(protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected environmentService: EnvironmentService, protected datePipe: DatePipe,\n        protected sendService: SendService, protected userService: UserService,\n        protected messagingService: MessagingService, protected policyService: PolicyService) {\n        this.typeOptions = [\n            { name: i18nService.t('sendTypeFile'), value: SendType.File },\n            { name: i18nService.t('sendTypeText'), value: SendType.Text },\n        ];\n        this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n    }\n\n    get link(): string {\n        if (this.send.id != null && this.send.accessId != null) {\n            return this.sendLinkBaseUrl + this.send.accessId + '/' + this.send.urlB64Key;\n        }\n        return null;\n    }\n\n    get isSafari() {\n        return this.platformUtilsService.isSafari();\n    }\n\n    get isDateTimeLocalSupported(): boolean {\n        return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n    }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    get editMode(): boolean {\n        return this.sendId != null;\n    }\n\n    get title(): string {\n        return this.i18nService.t(\n            this.editMode ?\n                'editSend' :\n                'createSend'\n        );\n    }\n\n    setDates(event: {deletionDate: string, expirationDate: string}) {\n        this.deletionDate = event.deletionDate;\n        this.expirationDate = event.expirationDate;\n    }\n\n    async load() {\n        this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n        this.disableHideEmail = await this.policyService.policyAppliesToUser(PolicyType.SendOptions,\n            p => p.data.disableHideEmail);\n\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        this.emailVerified = await this.userService.getEmailVerified();\n        if (!this.canAccessPremium || !this.emailVerified) {\n            this.type = SendType.Text;\n        }\n\n        if (this.send == null) {\n            if (this.editMode) {\n                const send = await this.loadSend();\n                this.send = await send.decrypt();\n            } else {\n                this.send = new SendView();\n                this.send.type = this.type == null ? SendType.File : this.type;\n                this.send.file = new SendFileView();\n                this.send.text = new SendTextView();\n                this.send.deletionDate = new Date();\n                this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n            }\n        }\n\n        this.hasPassword = this.send.password != null && this.send.password.trim() !== '';\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.disableSend) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('sendDisabledWarning'));\n            return false;\n        }\n\n        if (this.send.name == null || this.send.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        let file: File = null;\n        if (this.send.type === SendType.File && !this.editMode) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            const files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n\n            file = files[0];\n            if (files[0].size > 524288000) { // 500 MB\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('maxFileSize'));\n                return;\n            }\n        }\n\n        if (this.password != null && this.password.trim() === '') {\n            this.password = null;\n        }\n\n        this.formPromise = this.encryptSend(file)\n            .then(async encSend => {\n                const uploadPromise = this.sendService.saveWithServer(encSend);\n                await uploadPromise;\n                if (this.send.id == null) {\n                    this.send.id = encSend[0].id;\n                }\n                if (this.send.accessId == null) {\n                    this.send.accessId = encSend[0].accessId;\n                }\n                this.onSavedSend.emit(this.send);\n                if (this.copyLink && this.link != null) {\n                    const copySuccess = await this.copyLinkToClipboard(this.link);\n                    if (copySuccess ?? true) {\n                        this.platformUtilsService.showToast('success', null,\n                            this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'));\n                    } else {\n                        await this.platformUtilsService.showDialog(\n                            this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'), null,\n                            this.i18nService.t('ok'), null, 'success', null);\n                        await this.copyLinkToClipboard(this.link);\n                    }\n                }\n            });\n        try {\n            await this.formPromise;\n            return true;\n        } catch { }\n        return false;\n    }\n\n    async copyLinkToClipboard(link: string): Promise<void | boolean> {\n        return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n    }\n\n    async delete(): Promise<boolean> {\n        if (this.deletePromise != null) {\n            return false;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteSendConfirmation'),\n            this.i18nService.t('deleteSend'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));\n            await this.load();\n            this.onDeletedSend.emit(this.send);\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    typeChanged() {\n        if (this.send.type === SendType.File && !this.alertShown) {\n            if (!this.canAccessPremium) {\n                this.alertShown = true;\n                this.messagingService.send('premiumRequired');\n            } else if (!this.emailVerified) {\n                this.alertShown = true;\n                this.messagingService.send('emailVerificationRequired');\n            }\n        }\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    protected async loadSend(): Promise<Send> {\n        return this.sendService.get(this.sendId);\n    }\n\n    protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n        const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n        // Parse dates\n        try {\n            sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n        } catch {\n            sendData[0].deletionDate = null;\n        }\n        try {\n            sendData[0].expirationDate = this.expirationDate == null ? null : new Date(this.expirationDate);\n        } catch {\n            sendData[0].expirationDate = null;\n        }\n\n        return sendData;\n    }\n\n    protected togglePasswordVisible() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('password').focus();\n    }\n}\n","import { DatePipe } from '@angular/common';\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n    // Native datetime-locale.\n    // We are happy.\n    Default = 'default',\n\n    // Native date and time inputs, but no datetime-locale.\n    // We use individual date and time inputs and create a datetime programatically on submit.\n    Firefox = 'firefox',\n\n    // No native date, time, or datetime-locale inputs.\n    // We use a polyfill for dates and a dropdown for times.\n    Safari = 'safari',\n}\n\nenum DateField {\n    DeletionDate = 'deletion',\n    ExpriationDate = 'expiration',\n}\n\n// Value = hours\nenum DatePreset {\n    OneHour = 1,\n    OneDay = 24,\n    TwoDays = 48,\n    ThreeDays = 72,\n    SevenDays = 168,\n    ThirtyDays = 720,\n    Custom = 0,\n    Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n    twelveHour: string;\n    twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n    @Input() readonly initialDeletionDate: Date;\n    @Input() readonly initialExpirationDate: Date;\n    @Input() readonly editMode: boolean;\n    @Input() readonly disabled: boolean;\n\n    @Output() datesChanged = new EventEmitter<{deletionDate: string, expirationDate: string}>();\n\n    get browserPath(): BrowserPath {\n        if (this.platformUtilsService.isFirefox()) {\n            return BrowserPath.Firefox;\n        } else if (this.platformUtilsService.isSafari()) {\n            return BrowserPath.Safari;\n        }\n        return BrowserPath.Default;\n    }\n\n    datesForm = new FormGroup({\n        selectedDeletionDatePreset: new FormControl(),\n        selectedExpirationDatePreset: new FormControl(),\n        defaultDeletionDateTime: new FormControl(),\n        defaultExpirationDateTime: new FormControl(),\n        fallbackDeletionDate: new FormControl(),\n        fallbackDeletionTime: new FormControl(),\n        fallbackExpirationDate: new FormControl(),\n        fallbackExpirationTime: new FormControl(),\n    });\n\n    deletionDatePresets: any[] = [\n            { name: this.i18nService.t('oneHour'), value: DatePreset.OneHour },\n            { name: this.i18nService.t('oneDay'), value: DatePreset.OneDay },\n            { name: this.i18nService.t('days', '2'), value: DatePreset.TwoDays },\n            { name: this.i18nService.t('days', '3'), value: DatePreset.ThreeDays },\n            { name: this.i18nService.t('days', '7'), value: DatePreset.SevenDays },\n            { name: this.i18nService.t('days', '30'), value: DatePreset.ThirtyDays },\n            { name: this.i18nService.t('custom'), value: DatePreset.Custom },\n    ];\n\n    expirationDatePresets: any[] = [\n            { name: this.i18nService.t('never'), value: DatePreset.Never },\n    ].concat([...this.deletionDatePresets]);\n\n    get selectedDeletionDatePreset(): FormControl {\n        return this.datesForm.get('selectedDeletionDatePreset') as FormControl;\n    }\n\n    get selectedExpirationDatePreset(): FormControl {\n        return this.datesForm.get('selectedExpirationDatePreset') as FormControl;\n    }\n\n    get defaultDeletionDateTime(): FormControl {\n        return this.datesForm.get('defaultDeletionDateTime') as FormControl;\n    }\n\n    get defaultExpirationDateTime(): FormControl {\n        return this.datesForm.get('defaultExpirationDateTime') as FormControl;\n    }\n\n    get fallbackDeletionDate(): FormControl {\n        return this.datesForm.get('fallbackDeletionDate') as FormControl;\n    }\n\n    get fallbackDeletionTime(): FormControl {\n        return this.datesForm.get('fallbackDeletionTime') as FormControl;\n    }\n\n    get fallbackExpirationDate(): FormControl {\n        return this.datesForm.get('fallbackExpirationDate') as FormControl;\n    }\n\n    get fallbackExpirationTime(): FormControl {\n        return this.datesForm.get('fallbackExpirationTime') as FormControl;\n    }\n\n    // Should be able to call these at any time and compute a submitable value\n    get formattedDeletionDate(): string {\n        switch (this.selectedDeletionDatePreset.value as DatePreset) {\n            case DatePreset.Never:\n                this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n                return this.formattedDeletionDate;\n            case DatePreset.Custom:\n                switch (this.browserPath) {\n                    case BrowserPath.Safari:\n                    case BrowserPath.Firefox:\n                        return this.fallbackDeletionDate.value + 'T' + this.fallbackDeletionTime.value;\n                    default:\n                        return this.defaultDeletionDateTime.value;\n                }\n            default:\n                const now = new Date();\n                const miliseconds = now.setTime(now.getTime() +\n                    (this.selectedDeletionDatePreset.value as number * 60 * 60 * 1000)) ;\n                return new Date(miliseconds).toString();\n        }\n    }\n\n    get formattedExpirationDate(): string {\n        switch (this.selectedExpirationDatePreset.value as DatePreset) {\n            case DatePreset.Never:\n                return null;\n            case DatePreset.Custom:\n                switch (this.browserPath) {\n                    case BrowserPath.Safari:\n                    case BrowserPath.Firefox:\n                        if ((!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n                            this.editMode) {\n                            return null;\n                        }\n                        return this.fallbackExpirationDate.value + 'T' + this.fallbackExpirationTime.value;\n                    default:\n                        if (!this.defaultExpirationDateTime.value) {\n                            return null;\n                        }\n                        return this.defaultExpirationDateTime.value;\n                }\n            default:\n                const now = new Date();\n                const miliseconds = now.setTime(now.getTime() +\n                    (this.selectedExpirationDatePreset.value as number * 60 * 60 * 1000));\n                return new Date(miliseconds).toString();\n        }\n    }\n    //\n\n    get safariDeletionTimePresetOptions() {\n        return this.safariTimePresetOptions(DateField.DeletionDate);\n    }\n\n    get safariExpirationTimePresetOptions() {\n        return this.safariTimePresetOptions(DateField.ExpriationDate);\n    }\n\n    private get nextWeek(): Date {\n        const nextWeek = new Date();\n        nextWeek.setDate(nextWeek.getDate() + 7);\n        return nextWeek;\n    }\n\n    constructor(protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected datePipe: DatePipe) {\n    }\n\n    ngOnInit(): void {\n        this.setInitialFormValues();\n        this.emitDates();\n        this.datesForm.valueChanges.subscribe(() => {\n            this.emitDates();\n        });\n    }\n\n    onDeletionDatePresetSelect(value: DatePreset) {\n        this.selectedDeletionDatePreset.setValue(value);\n    }\n\n    clearExpiration() {\n        switch (this.browserPath) {\n            case BrowserPath.Safari:\n            case BrowserPath.Firefox:\n                this.fallbackExpirationDate.setValue(null);\n                this.fallbackExpirationTime.setValue(null);\n                break;\n            case BrowserPath.Default:\n                this.defaultExpirationDateTime.setValue(null);\n                break;\n        }\n    }\n\n    protected emitDates() {\n        this.datesChanged.emit({\n            deletionDate: this.formattedDeletionDate,\n            expirationDate: this.formattedExpirationDate,\n        });\n    }\n\n    protected setInitialFormValues() {\n        if (this.editMode) {\n            this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n            this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n            switch (this.browserPath) {\n                case BrowserPath.Safari:\n                case BrowserPath.Firefox:\n                    this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n                    this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n                    if (this.initialExpirationDate != null) {\n                        this.fallbackExpirationDate.setValue(this.initialExpirationDate.toISOString().slice(0, 10));\n                        this.fallbackExpirationTime.setValue(this.initialExpirationDate.toTimeString().slice(0, 5));\n                    }\n                    break;\n                case BrowserPath.Default:\n                    if (this.initialExpirationDate) {\n                        this.defaultExpirationDateTime.setValue(\n                            this.datePipe.transform(new Date(this.initialExpirationDate), 'yyyy-MM-ddTHH:mm'));\n                    }\n                    this.defaultDeletionDateTime.setValue(this.datePipe.transform(new Date(this.initialDeletionDate), 'yyyy-MM-ddTHH:mm'));\n                    break;\n            }\n        } else {\n            this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n            this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n            switch (this.browserPath) {\n                case BrowserPath.Safari:\n                    this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n                    this.fallbackDeletionTime.setValue(this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    protected safariTimePresetOptions(field: DateField): TimeOption[] {\n        // init individual arrays for major sort groups\n        const noon: TimeOption[] = [];\n        const midnight: TimeOption[] = [];\n        const ams: TimeOption[] = [];\n        const pms: TimeOption[] = [];\n\n        // determine minute skip (5 min, 10 min, 15 min, etc.)\n        const minuteIncrementer = 15;\n\n        // loop through each hour on a 12 hour system\n        for (let h = 1; h <= 12; h++) {\n            // loop through each minute in the hour using the skip to incriment\n            for (let m = 0; m < 60; m += minuteIncrementer) {\n                // init the final strings that will be added to the lists\n                let hour = h.toString();\n                let minutes = m.toString();\n\n                // add prepending 0s to single digit hours/minutes\n                if (h < 10) {\n                    hour = '0' + hour;\n                }\n                if (m < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                // build time strings and push to relevant sort groups\n                if (h === 12) {\n                    const midnightOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} AM`,\n                        twentyFourHour: `00:${minutes}`,\n                    };\n                    midnight.push(midnightOption);\n\n                    const noonOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} PM`,\n                        twentyFourHour: `${hour}:${minutes}`,\n                    };\n                    noon.push(noonOption);\n                } else {\n                    const amOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} AM`,\n                        twentyFourHour: `${hour}:${minutes}`,\n                    };\n                    ams.push(amOption);\n\n                    const pmOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} PM`,\n                        twentyFourHour: `${h + 12}:${minutes}`,\n                    };\n                    pms.push(pmOption);\n                }\n            }\n        }\n\n        // bring all the arrays together in the right order\n        const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n        // determine if an unsupported value already exists on the send & add that to the top of the option list\n        // example: if the Send was created with a different client\n        if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n            const previousValue: TimeOption = {\n                twelveHour: this.datePipe.transform(this.initialExpirationDate, 'hh:mm a'),\n                twentyFourHour: this.datePipe.transform(this.initialExpirationDate, 'HH:mm'),\n            };\n            return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n        } else if (field === DateField.DeletionDate && this.initialDeletionDate != null && this.editMode) {\n            const previousValue: TimeOption = {\n                twelveHour: this.datePipe.transform(this.initialDeletionDate, 'hh:mm a'),\n                twentyFourHour: this.datePipe.transform(this.initialDeletionDate, 'HH:mm'),\n            };\n            return [previousValue, ...validTimes];\n        } else {\n            return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n        }\n    }\n}\n","import {\n    Directive,\n    NgZone,\n    OnInit,\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SendType } from 'jslib-common/enums/sendType';\n\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Directive()\nexport class SendComponent implements OnInit {\n\n    disableSend = false;\n    sendType = SendType;\n    loaded = false;\n    loading = true;\n    refreshing = false;\n    expired: boolean = false;\n    type: SendType = null;\n    sends: SendView[] = [];\n    filteredSends: SendView[] = [];\n    searchText: string;\n    selectedType: SendType;\n    selectedAll: boolean;\n    searchPlaceholder: string;\n    filter: (cipher: SendView) => boolean;\n    searchPending = false;\n    hasSearched = false; // search() function called - returns true if text qualifies for search\n\n    actionPromise: any;\n    onSuccessfulRemovePassword: () => Promise<any>;\n    onSuccessfulDelete: () => Promise<any>;\n    onSuccessfulLoad: () => Promise<any>;\n\n    private searchTimeout: any;\n\n    constructor(protected sendService: SendService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected environmentService: EnvironmentService,\n        protected ngZone: NgZone, protected searchService: SearchService,\n        protected policyService: PolicyService, protected userService: UserService) { }\n\n    async ngOnInit() {\n        this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    }\n\n    async load(filter: (send: SendView) => boolean = null) {\n        this.loading = true;\n        const sends = await this.sendService.getAllDecrypted();\n        this.sends = sends;\n        if (this.onSuccessfulLoad != null) {\n            await this.onSuccessfulLoad();\n        } else {\n            // Default action\n            this.selectAll();\n        }\n        this.loading = false;\n        this.loaded = true;\n    }\n\n    async reload(filter: (send: SendView) => boolean = null) {\n        this.loaded = false;\n        this.sends = [];\n        await this.load(filter);\n    }\n\n    async refresh() {\n        try {\n            this.refreshing = true;\n            await this.reload(this.filter);\n        } finally {\n            this.refreshing = false;\n        }\n    }\n\n    async applyFilter(filter: (send: SendView) => boolean = null) {\n        this.filter = filter;\n        await this.search(null);\n    }\n\n    async search(timeout: number = null) {\n        this.searchPending = false;\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout);\n        }\n        if (timeout == null) {\n            this.hasSearched = this.searchService.isSearchable(this.searchText);\n            this.filteredSends = this.sends.filter(s => this.filter == null || this.filter(s));\n            this.applyTextSearch();\n            return;\n        }\n        this.searchPending = true;\n        this.searchTimeout = setTimeout(async () => {\n            this.hasSearched = this.searchService.isSearchable(this.searchText);\n            this.filteredSends = this.sends.filter(s => this.filter == null || this.filter(s));\n            this.applyTextSearch();\n            this.searchPending = false;\n        }, timeout);\n    }\n\n    async removePassword(s: SendView): Promise<boolean> {\n        if (this.actionPromise != null || s.password == null) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('removePasswordConfirmation'),\n            this.i18nService.t('removePassword'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n            await this.actionPromise;\n            if (this.onSuccessfulRemovePassword != null) {\n                this.onSuccessfulRemovePassword();\n            } else {\n                // Default actions\n                this.platformUtilsService.showToast('success', null, this.i18nService.t('removedPassword'));\n                await this.load();\n            }\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    async delete(s: SendView): Promise<boolean> {\n        if (this.actionPromise != null) {\n            return false;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteSendConfirmation'),\n            this.i18nService.t('deleteSend'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.sendService.deleteWithServer(s.id);\n            await this.actionPromise;\n\n            if (this.onSuccessfulDelete != null) {\n                this.onSuccessfulDelete();\n            } else {\n                // Default actions\n                this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));\n                await this.refresh();\n            }\n        } catch { }\n        this.actionPromise = null;\n        return true;\n    }\n\n    copy(s: SendView) {\n        const sendLinkBaseUrl = this.environmentService.getSendUrl();\n        const link = sendLinkBaseUrl + s.accessId + '/' + s.urlB64Key;\n        this.platformUtilsService.copyToClipboard(link);\n        this.platformUtilsService.showToast('success', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('sendLink')));\n    }\n\n    searchTextChanged() {\n        this.search(200);\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.applyFilter(null);\n    }\n\n    selectType(type: SendType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.applyFilter(s => s.type === type);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedType = null;\n    }\n\n    private applyTextSearch() {\n        if (this.searchText != null) {\n            this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n        }\n    }\n}\n","export class UpdateProfileRequest {\n    name: string;\n    masterPasswordHint: string;\n    culture = 'en-US'; // deprecated\n\n    constructor(name: string, masterPasswordHint: string) {\n        this.name = name;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n    }\n}\n","import { EmailTokenRequest } from './emailTokenRequest';\n\nexport class EmailRequest extends EmailTokenRequest {\n    newMasterPasswordHash: string;\n    token: string;\n    key: string;\n}\n","import { SendRequest } from './sendRequest';\n\nimport { Send } from '../domain/send';\n\nexport class SendWithIdRequest extends SendRequest {\n    id: string;\n\n    constructor(send: Send) {\n        super(send);\n        this.id = send.id;\n    }\n}\n","import { PasswordRequest } from './passwordRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class KdfRequest extends PasswordRequest {\n    kdf: KdfType;\n    kdfIterations: number;\n}\n","export class UpdateDomainsRequest {\n    equivalentDomains: string[][];\n    excludedGlobalEquivalentDomains: number[];\n}\n","import { EmergencyAccessType } from '../../enums/emergencyAccessType';\n\nexport class EmergencyAccessInviteRequest {\n    email: string;\n    type: EmergencyAccessType;\n    waitTimeDays: number;\n}\n","export class EmergencyAccessPasswordRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","export class EmergencyAccessConfirmRequest {\n    key: string;\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class PasswordHistoryResponse extends BaseResponse {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.password = this.getResponseProperty('Password');\n        this.lastUsedDate = this.getResponseProperty('LastUsedDate');\n    }\n}\n","import {\n    Directive,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    FormBuilder,\n    ValidationErrors,\n    Validator\n} from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { Policy } from 'jslib-common/models/domain/policy';\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n\n    get showCustom() {\n        return this.form.get('vaultTimeout').value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n    }\n\n    static CUSTOM_VALUE = -100;\n\n    form = this.fb.group({\n        vaultTimeout: [null],\n        custom: this.fb.group({\n            hours: [null],\n            minutes: [null],\n        }),\n    });\n\n    @Input() vaultTimeouts: { name: string; value: number; }[];\n    vaultTimeoutPolicy: Policy;\n    vaultTimeoutPolicyHours: number;\n    vaultTimeoutPolicyMinutes: number;\n\n    private onChange: (vaultTimeout: number) => void;\n    private validatorChange: () => void;\n\n    constructor(private fb: FormBuilder, private policyService: PolicyService, private i18nService: I18nService) {\n    }\n\n    async ngOnInit() {\n        if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n            const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n            this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n            this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n            this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n            this.vaultTimeouts = this.vaultTimeouts.filter(t =>\n                t.value <= this.vaultTimeoutPolicy.data.minutes &&\n                (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n                t.value != null\n            );\n            this.validatorChange();\n        }\n\n        this.form.valueChanges.subscribe(async value => {\n            this.onChange(this.getVaultTimeout(value));\n        });\n\n        // Assign the previous value to the custom fields\n        this.form.get('vaultTimeout').valueChanges.subscribe(value => {\n            if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n                return;\n            }\n\n            const current = Math.max(this.form.value.vaultTimeout, 0);\n            this.form.patchValue({\n                custom: {\n                    hours: Math.floor(current / 60),\n                    minutes: current % 60,\n                },\n            });\n        });\n    }\n\n    ngOnChanges() {\n        this.vaultTimeouts.push({ name: this.i18nService.t('custom'), value: VaultTimeoutInputComponent.CUSTOM_VALUE });\n    }\n\n    getVaultTimeout(value: any) {\n        if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n            return value.vaultTimeout;\n        }\n\n        return value.custom.hours * 60 + value.custom.minutes;\n    }\n\n    writeValue(value: number): void {\n        if (value == null) {\n            return;\n        }\n\n        if (this.vaultTimeouts.every(p => p.value !== value)) {\n            this.form.setValue({\n                vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n                custom: {\n                    hours: Math.floor(value / 60),\n                    minutes: value % 60,\n                },\n            });\n            return;\n        }\n\n        this.form.patchValue({\n            vaultTimeout: value,\n        });\n    }\n\n    registerOnChange(onChange: any): void {\n        this.onChange = onChange;\n    }\n\n    // tslint:disable-next-line\n    registerOnTouched(onTouched: any): void {}\n\n    // tslint:disable-next-line\n    setDisabledState?(isDisabled: boolean): void { }\n\n    validate(control: AbstractControl): ValidationErrors {\n        if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n            return { policyError: true };\n        }\n\n        return null;\n    }\n\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorChange = fn;\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { GeneratedPasswordHistory } from 'jslib-common/models/domain/generatedPasswordHistory';\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n    history: GeneratedPasswordHistory[] = [];\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) { }\n\n    async ngOnInit() {\n        this.history = await this.passwordGenerationService.getHistory();\n    }\n\n    clear() {\n        this.history = [];\n        this.passwordGenerationService.clear();\n    }\n\n    copy(password: string) {\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PasswordGeneratorPolicyOptions } from 'jslib-common/models/domain/passwordGeneratorPolicyOptions';\n\n@Directive()\nexport class PasswordGeneratorComponent implements OnInit {\n    @Input() showSelect: boolean = false;\n    @Output() onSelected = new EventEmitter<string>();\n\n    passTypeOptions: any[];\n    options: any = {};\n    password: string = '-';\n    showOptions = false;\n    avoidAmbiguous = false;\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions;\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) {\n            this.passTypeOptions = [\n                { name: i18nService.t('password'), value: 'password' },\n                { name: i18nService.t('passphrase'), value: 'passphrase' },\n            ];\n         }\n\n    async ngOnInit() {\n        const optionsResponse = await this.passwordGenerationService.getOptions();\n        this.options = optionsResponse[0];\n        this.enforcedPolicyOptions = optionsResponse[1];\n        this.avoidAmbiguous = !this.options.ambiguous;\n        this.options.type = this.options.type === 'passphrase' ? 'passphrase' : 'password';\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderChanged() {\n        this.saveOptions(false);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderInput() {\n        this.normalizeOptions();\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n    }\n\n    async saveOptions(regenerate: boolean = true) {\n        this.normalizeOptions();\n        await this.passwordGenerationService.saveOptions(this.options);\n\n        if (regenerate) {\n            await this.regenerate();\n        }\n    }\n\n    async regenerate() {\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    copy() {\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    select() {\n        this.onSelected.emit(this.password);\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    private normalizeOptions() {\n        // Application level normalize options depedent on class variables\n        this.options.ambiguous = !this.avoidAmbiguous;\n\n        if (!this.options.uppercase && !this.options.lowercase && !this.options.number && !this.options.special) {\n            this.options.lowercase = true;\n            if (this.win != null) {\n                const lowercase = this.win.document.querySelector('#lowercase') as HTMLInputElement;\n                if (lowercase) {\n                    lowercase.checked = true;\n                }\n            }\n        }\n\n        this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n    @Input() folderId: string;\n    @Output() onSavedFolder = new EventEmitter<FolderView>();\n    @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n    editMode: boolean = false;\n    folder: FolderView = new FolderView();\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(protected folderService: FolderService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.folder.name == null || this.folder.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        try {\n            const folder = await this.folderService.encrypt(this.folder);\n            this.formPromise = this.folderService.saveWithServer(folder);\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode ? 'editedFolder' : 'addedFolder'));\n            this.onSavedFolder.emit(this.folder);\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteFolderConfirmation'), this.i18nService.t('deleteFolder'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedFolder'));\n            this.onDeletedFolder.emit(this.folder);\n        } catch { }\n\n        return true;\n    }\n\n    protected async init() {\n        this.editMode = this.folderId != null;\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editFolder');\n            const folder = await this.folderService.get(this.folderId);\n            this.folder = await folder.decrypt();\n        } else {\n            this.title = this.i18nService.t('addFolder');\n        }\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class ShareComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() organizationId: string;\n    @Output() onSharedCipher = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n\n    protected writeableCollections: CollectionView[] = [];\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected userService: UserService,\n        protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.map(c => c).filter(c => !c.readOnly);\n        const orgs = await this.userService.getAllOrganizations();\n        this.organizations = orgs.sort(Utils.getSortFunction(this.i18nService, 'name'))\n            .filter(o => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        this.cipher = await cipherDomain.decrypt();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    filterCollections() {\n        this.writeableCollections.forEach(c => (c as any).checked = false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit(): Promise<boolean> {\n        const selectedCollectionIds = this.collections\n            .filter(c => !!(c as any).checked)\n            .map(c => c.id);\n        if (selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        const cipherView = await cipherDomain.decrypt();\n        const orgName = this.organizations.find(o => o.id === this.organizationId)?.name ?? this.i18nService.t('organization');\n\n        try {\n            this.formPromise = this.cipherService.shareWithServer(cipherView, this.organizationId,\n                selectedCollectionIds).then(async () => {\n                    this.onSharedCipher.emit();\n                    this.platformUtilsService.showToast('success', null,\n                        this.i18nService.t('movedItemToOrg', cipherView.name, orgName));\n                });\n            await this.formPromise;\n            return true;\n        } catch { }\n        return false;\n    }\n\n    get canSave() {\n        if (this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    OnInit,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBoxRow]',\n})\nexport class BoxRowDirective implements OnInit {\n    el: HTMLElement = null;\n    formEls: Element[];\n\n    constructor(private elRef: ElementRef) {\n        this.el = elRef.nativeElement;\n    }\n\n    ngOnInit(): void {\n        this.formEls = Array.from(this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea'));\n        this.formEls.forEach(formEl => {\n            formEl.addEventListener('focus', (event: Event) => {\n                this.el.classList.add('active');\n            }, false);\n\n            formEl.addEventListener('blur', (event: Event) => {\n                this.el.classList.remove('active');\n            }, false);\n        });\n    }\n\n    @HostListener('click', ['$event']) onClick(event: Event) {\n        const target = event.target as HTMLElement;\n        if (target !== this.el && !target.classList.contains('progress') &&\n            !target.classList.contains('progress-bar')) {\n            return;\n        }\n\n        if (this.formEls.length > 0) {\n            const formEl = (this.formEls[0] as HTMLElement);\n            if (formEl.tagName.toLowerCase() === 'input') {\n                const inputEl = (formEl as HTMLInputElement);\n                if (inputEl.type != null && inputEl.type.toLowerCase() === 'checkbox') {\n                    inputEl.click();\n                    return;\n                }\n            }\n            formEl.focus();\n        }\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Pipe({\n    name: 'searchCiphers',\n})\nexport class SearchCiphersPipe implements PipeTransform {\n    transform(ciphers: CipherView[], searchText: string, deleted: boolean = false): CipherView[] {\n        if (ciphers == null || ciphers.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return ciphers.filter(c => {\n                return deleted !== c.isDeleted;\n            });\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return ciphers.filter(c => {\n            if (deleted !== c.isDeleted) {\n                return false;\n            }\n            if (c.name != null && c.name.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (searchText.length >= 8 && c.id.startsWith(searchText)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { AppComponent as BaseAppComponent } from 'src/app/app.component';\nimport { DisablePersonalVaultExportPolicy } from './policies/disable-personal-vault-export.component';\nimport { MaximumVaultTimeoutPolicy } from './policies/maximum-vault-timeout.component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: '../../../src/app/app.component.html',\n})\nexport class AppComponent extends BaseAppComponent {\n\n    ngOnInit() {\n        super.ngOnInit();\n\n        this.policyListService.addPolicies([\n            new MaximumVaultTimeoutPolicy(),\n            new DisablePersonalVaultExportPolicy(),\n        ]);\n    }\n\n}\n","<toaster-container [toasterconfig]=\"toasterConfig\" aria-live=\"polite\"></toaster-container> <router-outlet></router-outlet> ","import * as jq from 'jquery';\nimport Swal from 'sweetalert2';\n\nimport {\n    BodyOutputType,\n    Toast,\n    ToasterConfig,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { NotificationsService } from 'jslib-common/abstractions/notifications.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SettingsService } from 'jslib-common/abstractions/settings.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { PolicyListService } from './services/policy-list.service';\nimport { RouterService } from './services/router.service';\n\nimport { DisableSendPolicy } from './organizations/policies/disable-send.component';\nimport { MasterPasswordPolicy } from './organizations/policies/master-password.component';\nimport { PasswordGeneratorPolicy } from './organizations/policies/password-generator.component';\nimport { PersonalOwnershipPolicy } from './organizations/policies/personal-ownership.component';\nimport { RequireSsoPolicy } from './organizations/policies/require-sso.component';\nimport { ResetPasswordPolicy } from './organizations/policies/reset-password.component';\nimport { SendOptionsPolicy } from './organizations/policies/send-options.component';\nimport { SingleOrgPolicy } from './organizations/policies/single-org.component';\nimport { TwoFactorAuthenticationPolicy } from './organizations/policies/two-factor-authentication.component';\n\nconst BroadcasterSubscriptionId = 'AppComponent';\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n})\nexport class AppComponent implements OnDestroy, OnInit {\n\n    toasterConfig: ToasterConfig = new ToasterConfig({\n        showCloseButton: true,\n        mouseoverTimerStop: true,\n        animation: 'flyRight',\n        limit: 5,\n    });\n\n    private lastActivity: number = null;\n    private idleTimer: number = null;\n    private isIdle = false;\n\n    constructor(\n        private broadcasterService: BroadcasterService, private userService: UserService,\n        private tokenService: TokenService, private folderService: FolderService,\n        private settingsService: SettingsService, private syncService: SyncService,\n        private passwordGenerationService: PasswordGenerationService, private cipherService: CipherService,\n        private authService: AuthService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private ngZone: NgZone,\n        private vaultTimeoutService: VaultTimeoutService, private storageService: StorageService,\n        private cryptoService: CryptoService, private collectionService: CollectionService,\n        private sanitizer: DomSanitizer, private searchService: SearchService,\n        private notificationsService: NotificationsService, private routerService: RouterService,\n        private stateService: StateService, private eventService: EventService,\n        private policyService: PolicyService, protected policyListService: PolicyListService) { }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            window.onmousemove = () => this.recordActivity();\n            window.onmousedown = () => this.recordActivity();\n            window.ontouchstart = () => this.recordActivity();\n            window.onclick = () => this.recordActivity();\n            window.onscroll = () => this.recordActivity();\n            window.onkeypress = () => this.recordActivity();\n        });\n\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'loggedIn':\n                    case 'loggedOut':\n                    case 'unlocked':\n                        this.notificationsService.updateConnection(false);\n                        break;\n                    case 'authBlocked':\n                        this.router.navigate(['/']);\n                        break;\n                    case 'logout':\n                        this.logOut(!!message.expired);\n                        break;\n                    case 'lockVault':\n                        await this.vaultTimeoutService.lock();\n                        break;\n                    case 'locked':\n                        this.notificationsService.updateConnection(false);\n                        this.router.navigate(['lock']);\n                        break;\n                    case 'lockedUrl':\n                        window.setTimeout(() => this.routerService.setPreviousUrl(message.url), 500);\n                        break;\n                    case 'syncStarted':\n                        break;\n                    case 'syncCompleted':\n                        break;\n                    case 'upgradeOrganization':\n                        const upgradeConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('upgradeOrganizationDesc'), this.i18nService.t('upgradeOrganization'),\n                            this.i18nService.t('upgradeOrganization'), this.i18nService.t('cancel'));\n                        if (upgradeConfirmed) {\n                            this.router.navigate(['organizations', message.organizationId, 'settings', 'billing']);\n                        }\n                        break;\n                    case 'premiumRequired':\n                        const premiumConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (premiumConfirmed) {\n                            this.router.navigate(['settings/premium']);\n                        }\n                        break;\n                    case 'emailVerificationRequired':\n                        const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('emailVerificationRequiredDesc'),\n                            this.i18nService.t('emailVerificationRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (emailVerificationConfirmed) {\n                            this.platformUtilsService.launchUri('https://bitwarden.com/help/article/create-bitwarden-account/');\n                        }\n                        break;\n                    case 'showToast':\n                        this.showToast(message);\n                        break;\n                    case 'setFullWidth':\n                        this.setFullWidth();\n                        break;\n                    default:\n                        break;\n                }\n            });\n        });\n\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                const modals = Array.from(document.querySelectorAll('.modal'));\n                for (const modal of modals) {\n                    (jq(modal) as any).modal('hide');\n                }\n\n                if (document.querySelector('.swal-modal') != null) {\n                    Swal.close(undefined);\n                }\n            }\n        });\n\n        this.policyListService.addPolicies([\n            new TwoFactorAuthenticationPolicy(),\n            new MasterPasswordPolicy(),\n            new PasswordGeneratorPolicy(),\n            new SingleOrgPolicy(),\n            new RequireSsoPolicy(),\n            new PersonalOwnershipPolicy(),\n            new DisableSendPolicy(),\n            new SendOptionsPolicy(),\n            new ResetPasswordPolicy(),\n        ]);\n\n        this.setFullWidth();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    private async logOut(expired: boolean) {\n        await this.eventService.uploadEvents();\n        const userId = await this.userService.getUserId();\n\n        await Promise.all([\n            this.eventService.clearEvents(),\n            this.syncService.setLastSync(new Date(0)),\n            this.tokenService.clearToken(),\n            this.cryptoService.clearKeys(),\n            this.userService.clear(),\n            this.settingsService.clear(userId),\n            this.cipherService.clear(userId),\n            this.folderService.clear(userId),\n            this.collectionService.clear(userId),\n            this.policyService.clear(userId),\n            this.passwordGenerationService.clear(),\n            this.stateService.purge(),\n        ]);\n\n        this.searchService.clearIndex();\n        this.authService.logOut(async () => {\n            if (expired) {\n                this.toasterService.popAsync('warning', this.i18nService.t('loggedOut'),\n                    this.i18nService.t('loginExpired'));\n            }\n\n            Swal.close();\n            this.router.navigate(['/']);\n        });\n    }\n\n    private async recordActivity() {\n        const now = (new Date()).getTime();\n        if (this.lastActivity != null && now - this.lastActivity < 250) {\n            return;\n        }\n\n        this.lastActivity = now;\n        this.storageService.save(ConstantsService.lastActiveKey, now);\n\n        // Idle states\n        if (this.isIdle) {\n            this.isIdle = false;\n            this.idleStateChanged();\n        }\n        if (this.idleTimer != null) {\n            window.clearTimeout(this.idleTimer);\n            this.idleTimer = null;\n        }\n        this.idleTimer = window.setTimeout(() => {\n            if (!this.isIdle) {\n                this.isIdle = true;\n                this.idleStateChanged();\n            }\n        }, IdleTimeout);\n    }\n\n    private showToast(msg: any) {\n        const toast: Toast = {\n            type: msg.type,\n            title: msg.title,\n        };\n        if (typeof (msg.text) === 'string') {\n            toast.body = msg.text;\n        } else if (msg.text.length === 1) {\n            toast.body = msg.text[0];\n        } else {\n            let message = '';\n            msg.text.forEach((t: string) =>\n                message += ('<p>' + this.sanitizer.sanitize(SecurityContext.HTML, t) + '</p>'));\n            toast.body = message;\n            toast.bodyOutputType = BodyOutputType.TrustedHtml;\n        }\n        if (msg.options != null) {\n            if (msg.options.trustedHtml === true) {\n                toast.bodyOutputType = BodyOutputType.TrustedHtml;\n            }\n            if (msg.options.timeout != null && msg.options.timeout > 0) {\n                toast.timeout = msg.options.timeout;\n            }\n        }\n        this.toasterService.popAsync(toast);\n    }\n\n    private idleStateChanged() {\n        if (this.isIdle) {\n            this.notificationsService.disconnectFromInactivity();\n        } else {\n            this.notificationsService.reconnectFromActivity();\n        }\n    }\n\n    private async setFullWidth() {\n        const enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\n        if (enableFullWidth) {\n            document.body.classList.add('full-width');\n        } else {\n            document.body.classList.remove('full-width');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { OssModule } from 'src/app/oss.module';\n\nimport { SsoComponent } from './manage/sso.component';\nimport { OrganizationsRoutingModule } from './organizations-routing.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        OssModule,\n        OrganizationsRoutingModule,\n    ],\n    declarations: [\n        SsoComponent,\n    ],\n})\nexport class OrganizationsModule {}\n","import { SsoConfigApi } from '../../api/ssoConfigApi';\n\nexport class OrganizationSsoRequest {\n    enabled: boolean = false;\n    data: SsoConfigApi;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\nimport { OrganizationLayoutComponent } from 'src/app/layouts/organization-layout.component';\nimport { ManageComponent } from 'src/app/organizations/manage/manage.component';\nimport { OrganizationGuardService } from 'src/app/services/organization-guard.service';\nimport { OrganizationTypeGuardService } from 'src/app/services/organization-type-guard.service';\n\nimport { SsoComponent } from './manage/sso.component';\n\nconst routes: Routes = [\n    {\n        path: 'organizations/:organizationId',\n        component: OrganizationLayoutComponent,\n        canActivate: [AuthGuardService, OrganizationGuardService],\n        children: [\n            {\n                path: 'manage',\n                component: ManageComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: {\n                    permissions: [\n                        Permissions.CreateNewCollections,\n                        Permissions.EditAnyCollection,\n                        Permissions.DeleteAnyCollection,\n                        Permissions.EditAssignedCollections,\n                        Permissions.DeleteAssignedCollections,\n                        Permissions.AccessEventLogs,\n                        Permissions.ManageGroups,\n                        Permissions.ManageUsers,\n                        Permissions.ManagePolicies,\n                        Permissions.ManageSso,\n                    ],\n                },\n                children: [\n                    {\n                        path: 'sso',\n                        component: SsoComponent,\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport {\n    RouterModule,\n    Routes,\n} from '@angular/router';\n\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptEmergencyComponent } from './accounts/accept-emergency.component';\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { SetPasswordComponent } from './accounts/set-password.component';\nimport { SsoComponent } from './accounts/sso.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { UpdateTempPasswordComponent } from './accounts/update-temp-password.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { SettingsComponent as OrgSettingsComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccessComponent } from './send/access.component';\nimport { SendComponent } from './send/send.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { VaultComponent } from './vault/vault.component';\n\nimport { OrganizationGuardService } from './services/organization-guard.service';\nimport { OrganizationTypeGuardService } from './services/organization-type-guard.service';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { LockGuardService } from 'jslib-angular/services/lock-guard.service';\nimport { UnauthGuardService } from 'jslib-angular/services/unauth-guard.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\nimport { EmergencyAccessViewComponent } from './settings/emergency-access-view.component';\nimport { EmergencyAccessComponent } from './settings/emergency-access.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FrontendLayoutComponent,\n        children: [\n            { path: '', pathMatch: 'full', component: LoginComponent, canActivate: [UnauthGuardService] },\n            { path: '2fa', component: TwoFactorComponent, canActivate: [UnauthGuardService] },\n            {\n                path: 'register', component: RegisterComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'createAccount' },\n            },\n            {\n                path: 'sso', component: SsoComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'enterpriseSingleSignOn' },\n            },\n            {\n                path: 'set-password', component: SetPasswordComponent,\n                data: { titleId: 'setMasterPassword' },\n            },\n            {\n                path: 'hint', component: HintComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'passwordHint' },\n            },\n            {\n                path: 'lock',\n                component: LockComponent,\n                canActivate: [LockGuardService],\n            },\n            { path: 'verify-email', component: VerifyEmailTokenComponent },\n            {\n                path: 'accept-organization',\n                component: AcceptOrganizationComponent,\n                data: { titleId: 'joinOrganization' },\n            },\n            {\n                path: 'accept-emergency',\n                component: AcceptEmergencyComponent,\n                data: { titleId: 'acceptEmergency' },\n            },\n            { path: 'recover', pathMatch: 'full', redirectTo: 'recover-2fa' },\n            {\n                path: 'recover-2fa',\n                component: RecoverTwoFactorComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'recoverAccountTwoStep' },\n            },\n            {\n                path: 'recover-delete',\n                component: RecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'verify-recover-delete',\n                component: VerifyRecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'send/:sendId/:key',\n                component: AccessComponent,\n                data: { title: 'Bitwarden Send' },\n            },\n            {\n                path: 'update-temp-password',\n                component: UpdateTempPasswordComponent,\n                canActivate: [AuthGuardService],\n                data: { titleId: 'updateTempPassword' },\n            },\n        ],\n    },\n    {\n        path: '',\n        component: UserLayoutComponent,\n        canActivate: [AuthGuardService],\n        children: [\n            { path: 'vault', component: VaultComponent, data: { titleId: 'myVault' } },\n            { path: 'sends', component: SendComponent, data: { title: 'Send' } },\n            {\n                path: 'settings',\n                component: SettingsComponent,\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: AccountComponent, data: { titleId: 'myAccount' } },\n                    { path: 'options', component: OptionsComponent, data: { titleId: 'options' } },\n                    { path: 'domain-rules', component: DomainRulesComponent, data: { titleId: 'domainRules' } },\n                    { path: 'two-factor', component: TwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    { path: 'premium', component: PremiumComponent, data: { titleId: 'goPremium' } },\n                    { path: 'billing', component: UserBillingComponent, data: { titleId: 'billing' } },\n                    {\n                        path: 'subscription',\n                        component: UserSubscriptionComponent,\n                        data: { titleId: 'premiumMembership' },\n                    },\n                    { path: 'organizations', component: OrganizationsComponent, data: { titleId: 'organizations' } },\n                    {\n                        path: 'create-organization',\n                        component: CreateOrganizationComponent,\n                        data: { titleId: 'newOrganization' },\n                    },\n                    {\n                        path: 'emergency-access',\n                        children: [\n                            {\n                                path: '',\n                                component: EmergencyAccessComponent,\n                                data: { titleId: 'emergencyAccess' },\n                            },\n                            {\n                                path: ':id',\n                                component: EmergencyAccessViewComponent,\n                                data: { titleId: 'emergencyAccess' },\n                            },\n                        ],\n                    },\n                ],\n            },\n            {\n                path: 'tools',\n                component: ToolsComponent,\n                canActivate: [AuthGuardService],\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'generator' },\n                    { path: 'import', component: ImportComponent, data: { titleId: 'importData' } },\n                    { path: 'export', component: ExportComponent, data: { titleId: 'exportVault' } },\n                    {\n                        path: 'generator',\n                        component: PasswordGeneratorComponent,\n                        data: { titleId: 'passwordGenerator' },\n                    },\n                    { path: 'breach-report', component: BreachReportComponent, data: { titleId: 'dataBreachReport' } },\n                    {\n                        path: 'reused-passwords-report',\n                        component: ReusedPasswordsReportComponent,\n                        data: { titleId: 'reusedPasswordsReport' },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: UnsecuredWebsitesReportComponent,\n                        data: { titleId: 'unsecuredWebsitesReport' },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: WeakPasswordsReportComponent,\n                        data: { titleId: 'weakPasswordsReport' },\n                    },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: ExposedPasswordsReportComponent,\n                        data: { titleId: 'exposedPasswordsReport' },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: InactiveTwoFactorReportComponent,\n                        data: { titleId: 'inactive2faReport' },\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        path: 'organizations/:organizationId',\n        component: OrganizationLayoutComponent,\n        canActivate: [AuthGuardService, OrganizationGuardService],\n        children: [\n            { path: '', pathMatch: 'full', redirectTo: 'vault' },\n            { path: 'vault', component: OrgVaultComponent, data: { titleId: 'vault' } },\n            {\n                path: 'tools',\n                component: OrgToolsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { permissions: [Permissions.AccessImportExport, Permissions.AccessReports] },\n                children: [\n                    {\n                        path: '',\n                        pathMatch: 'full',\n                        redirectTo: 'import',\n                    },\n                    {\n                        path: 'import',\n                        component: OrgImportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'importData',\n                            permissions: [Permissions.AccessImportExport],\n                        },\n                    },\n                    {\n                        path: 'export',\n                        component: OrgExportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'exportVault',\n                            permissions: [Permissions.AccessImportExport],\n                        },\n                    },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: OrgExposedPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'exposedPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: OrgInactiveTwoFactorReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'inactive2faReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'reused-passwords-report',\n                        component: OrgReusedPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'reusedPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: OrgUnsecuredWebsitesReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'unsecuredWebsitesReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: OrgWeakPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'weakPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                ],\n            },\n            {\n                path: 'manage',\n                component: OrgManageComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: {\n                    permissions: [\n                        Permissions.CreateNewCollections,\n                        Permissions.EditAnyCollection,\n                        Permissions.DeleteAnyCollection,\n                        Permissions.EditAssignedCollections,\n                        Permissions.DeleteAssignedCollections,\n                        Permissions.AccessEventLogs,\n                        Permissions.ManageGroups,\n                        Permissions.ManageUsers,\n                        Permissions.ManagePolicies,\n                    ],\n                },\n                children: [\n                    {\n                        path: '',\n                        pathMatch: 'full',\n                        redirectTo: 'people',\n                    },\n                    {\n                        path: 'collections',\n                        component: OrgManageCollectionsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'collections',\n                            permissions: [\n                                Permissions.CreateNewCollections,\n                                Permissions.EditAnyCollection,\n                                Permissions.DeleteAnyCollection,\n                                Permissions.EditAssignedCollections,\n                                Permissions.DeleteAssignedCollections,\n                            ],\n                        },\n                    },\n                    {\n                        path: 'events',\n                        component: OrgEventsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'eventLogs',\n                            permissions: [Permissions.AccessEventLogs],\n                        },\n                    },\n                    {\n                        path: 'groups',\n                        component: OrgGroupsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'groups',\n                            permissions: [Permissions.ManageGroups],\n                        },\n                    },\n                    {\n                        path: 'people',\n                        component: OrgPeopleComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'people',\n                            permissions: [Permissions.ManageUsers, Permissions.ManageUsersPassword],\n                        },\n                    },\n                    {\n                        path: 'policies',\n                        component: OrgPoliciesComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'policies',\n                            permissions: [Permissions.ManagePolicies],\n                        },\n                    },\n                ],\n            },\n            {\n                path: 'settings',\n                component: OrgSettingsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { permissions: [Permissions.ManageOrganization] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: OrgAccountComponent, data: { titleId: 'myOrganization' } },\n                    { path: 'two-factor', component: OrgTwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    {\n                        path: 'billing',\n                        component: OrganizationBillingComponent,\n                        data: { titleId: 'billing' },\n                    },\n                    {\n                        path: 'subscription',\n                        component: OrganizationSubscriptionComponent,\n                        data: { titleId: 'subscription' },\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {\n        useHash: true,\n        paramsInheritanceStrategy: 'always',\n        /*enableTracing: true,*/\n    })],\n    exports: [RouterModule],\n})\nexport class OssRoutingModule { }\n","import {\n    APP_INITIALIZER,\n    LOCALE_ID,\n    NgModule,\n} from '@angular/core';\n\nimport { ToasterModule } from 'angular2-toaster';\n\nimport { BroadcasterMessagingService } from '../../services/broadcasterMessaging.service';\nimport { HtmlStorageService } from '../../services/htmlStorage.service';\nimport { I18nService } from '../../services/i18n.service';\nimport { MemoryStorageService } from '../../services/memoryStorage.service';\nimport { PasswordRepromptService } from '../../services/passwordReprompt.service';\nimport { WebPlatformUtilsService } from '../../services/webPlatformUtils.service';\n\nimport { EventService } from './event.service';\nimport { OrganizationGuardService } from './organization-guard.service';\nimport { OrganizationTypeGuardService } from './organization-type-guard.service';\nimport { PolicyListService } from './policy-list.service';\nimport { RouterService } from './router.service';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\nimport { LockGuardService } from 'jslib-angular/services/lock-guard.service';\nimport { ModalService as ModalServiceAbstraction } from 'jslib-angular/services/modal.service';\nimport { UnauthGuardService } from 'jslib-angular/services/unauth-guard.service';\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ApiService } from 'jslib-common/services/api.service';\nimport { AppIdService } from 'jslib-common/services/appId.service';\nimport { AuditService } from 'jslib-common/services/audit.service';\nimport { AuthService } from 'jslib-common/services/auth.service';\nimport { CipherService } from 'jslib-common/services/cipher.service';\nimport { CollectionService } from 'jslib-common/services/collection.service';\nimport { ConsoleLogService } from 'jslib-common/services/consoleLog.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\nimport { ContainerService } from 'jslib-common/services/container.service';\nimport { CryptoService } from 'jslib-common/services/crypto.service';\nimport { EnvironmentService } from 'jslib-common/services/environment.service';\nimport { EventService as EventLoggingService } from 'jslib-common/services/event.service';\nimport { ExportService } from 'jslib-common/services/export.service';\nimport { FileUploadService } from 'jslib-common/services/fileUpload.service';\nimport { FolderService } from 'jslib-common/services/folder.service';\nimport { ImportService } from 'jslib-common/services/import.service';\nimport { NotificationsService } from 'jslib-common/services/notifications.service';\nimport { PasswordGenerationService } from 'jslib-common/services/passwordGeneration.service';\nimport { PolicyService } from 'jslib-common/services/policy.service';\nimport { SearchService } from 'jslib-common/services/search.service';\nimport { SendService } from 'jslib-common/services/send.service';\nimport { SettingsService } from 'jslib-common/services/settings.service';\nimport { StateService } from 'jslib-common/services/state.service';\nimport { SyncService } from 'jslib-common/services/sync.service';\nimport { TokenService } from 'jslib-common/services/token.service';\nimport { TotpService } from 'jslib-common/services/totp.service';\nimport { UserService } from 'jslib-common/services/user.service';\nimport { VaultTimeoutService } from 'jslib-common/services/vaultTimeout.service';\nimport { WebCryptoFunctionService } from 'jslib-common/services/webCryptoFunction.service';\n\nimport { ApiService as ApiServiceAbstraction } from 'jslib-common/abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from 'jslib-common/abstractions/audit.service';\nimport { AuthService as AuthServiceAbstraction } from 'jslib-common/abstractions/auth.service';\nimport { CipherService as CipherServiceAbstraction } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService as CollectionServiceAbstraction } from 'jslib-common/abstractions/collection.service';\nimport { CryptoService as CryptoServiceAbstraction } from 'jslib-common/abstractions/crypto.service';\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction, Urls } from 'jslib-common/abstractions/environment.service';\nimport { EventService as EventLoggingServiceAbstraction } from 'jslib-common/abstractions/event.service';\nimport { ExportService as ExportServiceAbstraction } from 'jslib-common/abstractions/export.service';\nimport { FileUploadService as FileUploadServiceAbstraction }  from 'jslib-common/abstractions/fileUpload.service';\nimport { FolderService as FolderServiceAbstraction } from 'jslib-common/abstractions/folder.service';\nimport { I18nService as I18nServiceAbstraction } from 'jslib-common/abstractions/i18n.service';\nimport { ImportService as ImportServiceAbstraction } from 'jslib-common/abstractions/import.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService as MessagingServiceAbstraction } from 'jslib-common/abstractions/messaging.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from 'jslib-common/abstractions/notifications.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService as PolicyServiceAbstraction } from 'jslib-common/abstractions/policy.service';\nimport { SearchService as SearchServiceAbstraction } from 'jslib-common/abstractions/search.service';\nimport { SendService as SendServiceAbstraction } from 'jslib-common/abstractions/send.service';\nimport { SettingsService as SettingsServiceAbstraction } from 'jslib-common/abstractions/settings.service';\nimport { StateService as StateServiceAbstraction } from 'jslib-common/abstractions/state.service';\nimport { StorageService as StorageServiceAbstraction } from 'jslib-common/abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from 'jslib-common/abstractions/sync.service';\nimport { TokenService as TokenServiceAbstraction } from 'jslib-common/abstractions/token.service';\nimport { TotpService as TotpServiceAbstraction } from 'jslib-common/abstractions/totp.service';\nimport { UserService as UserServiceAbstraction } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from 'jslib-common/abstractions/vaultTimeout.service';\nimport { ModalService } from './modal.service';\n\nimport { ThemeType } from 'jslib-common/enums/themeType';\n\nconst i18nService = new I18nService(window.navigator.language, 'locales');\nconst stateService = new StateService();\nconst broadcasterService = new BroadcasterService();\nconst messagingService = new BroadcasterMessagingService(broadcasterService);\nconst consoleLogService = new ConsoleLogService(false);\nconst platformUtilsService = new WebPlatformUtilsService(i18nService, messagingService, consoleLogService, () => storageService);\nconst storageService: StorageServiceAbstraction = new HtmlStorageService(platformUtilsService);\nconst secureStorageService: StorageServiceAbstraction = new MemoryStorageService();\nconst cryptoFunctionService: CryptoFunctionServiceAbstraction = new WebCryptoFunctionService(window,\n    platformUtilsService);\nconst cryptoService = new CryptoService(storageService,\n    platformUtilsService.isDev() ? storageService : secureStorageService, cryptoFunctionService, platformUtilsService,\n    consoleLogService);\nconst tokenService = new TokenService(storageService);\nconst appIdService = new AppIdService(storageService);\nconst environmentService = new EnvironmentService(storageService);\nconst apiService = new ApiService(tokenService, platformUtilsService, environmentService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst userService = new UserService(tokenService, storageService);\nconst settingsService = new SettingsService(userService, storageService);\nexport let searchService: SearchService = null;\nconst fileUploadService = new FileUploadService(consoleLogService, apiService);\nconst cipherService = new CipherService(cryptoService, userService, settingsService,\n    apiService, fileUploadService, storageService, i18nService, () => searchService);\nconst folderService = new FolderService(cryptoService, userService, apiService, storageService,\n    i18nService, cipherService);\nconst collectionService = new CollectionService(cryptoService, userService, storageService, i18nService);\nsearchService = new SearchService(cipherService, consoleLogService, i18nService);\nconst policyService = new PolicyService(userService, storageService, apiService);\nconst sendService = new SendService(cryptoService, userService, apiService, fileUploadService, storageService,\n    i18nService, cryptoFunctionService);\nconst vaultTimeoutService = new VaultTimeoutService(cipherService, folderService, collectionService,\n    cryptoService, platformUtilsService, storageService, messagingService, searchService, userService, tokenService,\n    policyService, null, async () => messagingService.send('logout', { expired: false }));\nconst syncService = new SyncService(userService, apiService, settingsService,\n    folderService, cipherService, cryptoService, collectionService, storageService, messagingService, policyService,\n    sendService, async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst passwordGenerationService = new PasswordGenerationService(cryptoService, storageService, policyService);\nconst totpService = new TotpService(storageService, cryptoFunctionService);\nconst containerService = new ContainerService(cryptoService);\nconst authService = new AuthService(cryptoService, apiService,\n    userService, tokenService, appIdService, i18nService, platformUtilsService, messagingService, vaultTimeoutService,\n    consoleLogService);\nconst exportService = new ExportService(folderService, cipherService, apiService, cryptoService);\nconst importService = new ImportService(cipherService, folderService, apiService, i18nService, collectionService,\n    platformUtilsService, cryptoService);\nconst notificationsService = new NotificationsService(userService, syncService, appIdService, apiService, vaultTimeoutService,\n    environmentService, async () => messagingService.send('logout', { expired: true }), consoleLogService);\nconst auditService = new AuditService(cryptoFunctionService, apiService);\nconst eventLoggingService = new EventLoggingService(storageService, apiService, userService, cipherService);\n\ncontainerService.attachToWindow(window);\n\nexport function initFactory(): Function {\n    return async () => {\n        await (storageService as HtmlStorageService).init();\n\n        const urls = process.env.URLS as Urls;\n        urls.base ??= window.location.origin;\n        environmentService.setUrls(urls, false);\n\n        setTimeout(() => notificationsService.init(), 3000);\n\n        vaultTimeoutService.init(true);\n        const locale = await storageService.get<string>(ConstantsService.localeKey);\n        await i18nService.init(locale);\n        eventLoggingService.init(true);\n        authService.init();\n        const htmlEl = window.document.documentElement;\n        htmlEl.classList.add('locale_' + i18nService.translationLocale);\n\n        // Initial theme is set in index.html which must be updated if there are any changes to theming logic\n        platformUtilsService.onDefaultSystemThemeChange(async sysTheme => {\n            const bwTheme = await storageService.get<ThemeType>(ConstantsService.themeKey);\n            if (bwTheme === ThemeType.System) {\n                htmlEl.classList.remove('theme_' + ThemeType.Light, 'theme_' + ThemeType.Dark);\n                htmlEl.classList.add('theme_' + sysTheme);\n            }\n        });\n\n        stateService.save(ConstantsService.disableFaviconKey,\n            await storageService.get<boolean>(ConstantsService.disableFaviconKey));\n        stateService.save('enableGravatars', await storageService.get<boolean>('enableGravatars'));\n    };\n}\n\n@NgModule({\n    imports: [\n        ToasterModule,\n    ],\n    declarations: [],\n    providers: [\n        ValidationService,\n        AuthGuardService,\n        OrganizationGuardService,\n        OrganizationTypeGuardService,\n        UnauthGuardService,\n        RouterService,\n        EventService,\n        LockGuardService,\n        PolicyListService,\n        { provide: ModalServiceAbstraction, useClass: ModalService },\n        { provide: AuditServiceAbstraction, useValue: auditService },\n        { provide: AuthServiceAbstraction, useValue: authService },\n        { provide: CipherServiceAbstraction, useValue: cipherService },\n        { provide: FolderServiceAbstraction, useValue: folderService },\n        { provide: LogService, useValue: consoleLogService },\n        { provide: CollectionServiceAbstraction, useValue: collectionService },\n        { provide: EnvironmentServiceAbstraction, useValue: environmentService },\n        { provide: TotpServiceAbstraction, useValue: totpService },\n        { provide: TokenServiceAbstraction, useValue: tokenService },\n        { provide: I18nServiceAbstraction, useValue: i18nService },\n        { provide: CryptoServiceAbstraction, useValue: cryptoService },\n        { provide: PlatformUtilsServiceAbstraction, useValue: platformUtilsService },\n        { provide: PasswordGenerationServiceAbstraction, useValue: passwordGenerationService },\n        { provide: ApiServiceAbstraction, useValue: apiService },\n        { provide: FileUploadServiceAbstraction, useValue: fileUploadService },\n        { provide: SyncServiceAbstraction, useValue: syncService },\n        { provide: UserServiceAbstraction, useValue: userService },\n        { provide: MessagingServiceAbstraction, useValue: messagingService },\n        { provide: BroadcasterService, useValue: broadcasterService },\n        { provide: SettingsServiceAbstraction, useValue: settingsService },\n        { provide: VaultTimeoutServiceAbstraction, useValue: vaultTimeoutService },\n        { provide: StorageServiceAbstraction, useValue: storageService },\n        { provide: StateServiceAbstraction, useValue: stateService },\n        { provide: ExportServiceAbstraction, useValue: exportService },\n        { provide: SearchServiceAbstraction, useValue: searchService },\n        { provide: ImportServiceAbstraction, useValue: importService },\n        { provide: NotificationsServiceAbstraction, useValue: notificationsService },\n        { provide: CryptoFunctionServiceAbstraction, useValue: cryptoFunctionService },\n        { provide: EventLoggingServiceAbstraction, useValue: eventLoggingService },\n        { provide: PolicyServiceAbstraction, useValue: policyService },\n        { provide: SendServiceAbstraction, useValue: sendService },\n        { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n        { provide: LogService, useValue: consoleLogService },\n        {\n            provide: APP_INITIALIZER,\n            useFactory: initFactory,\n            deps: [],\n            multi: true,\n        },\n        {\n            provide: LOCALE_ID,\n            useFactory: () => i18nService.translationLocale,\n            deps: [],\n        },\n    ],\n})\nexport class ServicesModule {\n}\n","import { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nexport class BroadcasterMessagingService implements MessagingService {\n    constructor(private broadcasterService: BroadcasterService) { }\n\n    send(subscriber: string, arg: any = {}) {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        this.broadcasterService.send(message);\n    }\n}\n","import { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nexport class HtmlStorageService implements StorageService {\n    private localStorageKeys = new Set(['appId', 'anonymousAppId', 'rememberedEmail', 'passwordGenerationOptions',\n        ConstantsService.disableFaviconKey, 'rememberEmail', 'enableGravatars', 'enableFullWidth',\n        ConstantsService.localeKey, ConstantsService.autoConfirmFingerprints,\n        ConstantsService.vaultTimeoutKey, ConstantsService.vaultTimeoutActionKey, ConstantsService.ssoCodeVerifierKey,\n        ConstantsService.ssoStateKey, 'ssoOrgIdentifier', ConstantsService.themeKey]);\n    private localStorageStartsWithKeys = ['twoFactorToken_', ConstantsService.collapsedGroupingsKey + '_'];\n    private memoryStorageStartsWithKeys = ['ciphers_', 'folders_', 'collections_', 'settings_', 'lastSync_'];\n    private memoryStorage = new Map<string, string>();\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async init() {\n        // LockOption -> VaultTimeout (uses the same legacy string value for backwards compat)\n        const vaultTimeout = await this.get<number>(ConstantsService.vaultTimeoutKey);\n        if (vaultTimeout == null && !this.platformUtilsService.isDev()) {\n            await this.save(ConstantsService.vaultTimeoutKey, 15);\n        }\n\n        // Default Action to lock\n        const vaultTimeoutAction = await this.get<string>(ConstantsService.vaultTimeoutActionKey);\n        if (vaultTimeoutAction == null) {\n            await this.save(ConstantsService.vaultTimeoutActionKey, 'lock');\n        }\n    }\n\n    get<T>(key: string): Promise<T> {\n        let json: string = null;\n        if (this.isLocalStorage(key)) {\n            json = window.localStorage.getItem(key);\n        } else if (this.isMemoryStorage(key)) {\n            json = this.memoryStorage.get(key);\n        } else {\n            json = window.sessionStorage.getItem(key);\n        }\n        if (json != null) {\n            const obj = JSON.parse(json);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    async has(key: string): Promise<boolean> {\n        return await this.get(key) != null;\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n\n        if (obj instanceof Set) {\n            obj = Array.from(obj);\n        }\n\n        const json = JSON.stringify(obj);\n        if (this.isLocalStorage(key)) {\n            window.localStorage.setItem(key, json);\n        } else if (this.isMemoryStorage(key)) {\n            this.memoryStorage.set(key, json);\n        } else {\n            window.sessionStorage.setItem(key, json);\n        }\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        if (this.isLocalStorage(key)) {\n            window.localStorage.removeItem(key);\n        } else if (this.isMemoryStorage(key)) {\n            this.memoryStorage.delete(key);\n        } else {\n            window.sessionStorage.removeItem(key);\n        }\n        return Promise.resolve();\n    }\n\n    private isLocalStorage(key: string): boolean {\n        if (this.localStorageKeys.has(key)) {\n            return true;\n        }\n        for (const swKey of this.localStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private isMemoryStorage(key: string): boolean {\n        for (const swKey of this.memoryStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","import { I18nService as BaseI18nService } from 'jslib-common/services/i18n.service';\n\nexport class I18nService extends BaseI18nService {\n    constructor(systemLanguage: string, localesDirectory: string) {\n        super(systemLanguage || 'en-US', localesDirectory, async (formattedLocale: string) => {\n            const filePath = this.localesDirectory + '/' + formattedLocale + '/messages.json?cache=' +\n                process.env.CACHE_TAG;\n            const localesResult = await fetch(filePath);\n            const locales = await localesResult.json();\n            return locales;\n        });\n\n        // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n        this.supportedTranslationLocales = [\n            'en', 'az', 'bg', 'ca', 'cs', 'da', 'de', 'el', 'eo', 'en-GB', 'en-IN', 'es', 'et', 'fi', 'fr', 'he', 'hr', 'hu', 'id', 'it', 'ja', 'kn', 'ko', 'lv', 'ml', 'nb',\n            'nl', 'pl', 'pt-PT', 'pt-BR', 'ro', 'ru', 'sk', 'sr', 'sv', 'tr', 'uk', 'zh-CN', 'zh-TW',\n        ];\n    }\n}\n","import { I18nService as I18nServiceAbstraction } from '../abstractions/i18n.service';\n\nexport class I18nService implements I18nServiceAbstraction {\n    locale: string;\n    // First locale is the default (English)\n    supportedTranslationLocales: string[] = ['en'];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames = new Map<string, string>([\n        ['af', 'Afrikaans'],\n        ['az', 'Azərbaycanca'],\n        ['be', 'Беларуская'],\n        ['bg', 'български'],\n        ['ca', 'català'],\n        ['cs', 'čeština'],\n        ['da', 'dansk'],\n        ['de', 'Deutsch'],\n        ['el', 'Ελληνικά'],\n        ['en', 'English'],\n        ['en-GB', 'English (British)'],\n        ['eo', 'Esperanto'],\n        ['es', 'español'],\n        ['et', 'eesti'],\n        ['fa', 'فارسی'],\n        ['fi', 'suomi'],\n        ['fr', 'français'],\n        ['he', 'עברית'],\n        ['hi', 'हिन्दी'],\n        ['hr', 'hrvatski'],\n        ['hu', 'magyar'],\n        ['id', 'Bahasa Indonesia'],\n        ['it', 'italiano'],\n        ['ja', '日本語'],\n        ['ko', '한국어'],\n        ['lv', 'Latvietis'],\n        ['ml', 'മലയാളം'],\n        ['nb', 'norsk (bokmål)'],\n        ['nl', 'Nederlands'],\n        ['pl', 'polski'],\n        ['pt-BR', 'português do Brasil'],\n        ['pt-PT', 'português'],\n        ['ro', 'română'],\n        ['ru', 'русский'],\n        ['sk', 'slovenčina'],\n        ['sr', 'Српски'],\n        ['sv', 'svenska'],\n        ['th', 'ไทย'],\n        ['tr', 'Türkçe'],\n        ['uk', 'українська'],\n        ['vi', 'Tiếng Việt'],\n        ['zh-CN', '中文（中国大陆）'],\n        ['zh-TW', '中文（台灣）'],\n    ]);\n\n    protected inited: boolean;\n    protected defaultMessages: any = {};\n    protected localeMessages: any = {};\n\n    constructor(protected systemLanguage: string, protected localesDirectory: string,\n        protected getLocalesJson: (formattedLocale: string) => Promise<any>) {\n        this.systemLanguage = systemLanguage.replace('_', '-');\n    }\n\n    async init(locale?: string) {\n        if (this.inited) {\n            throw new Error('i18n already initialized.');\n        }\n        if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n            throw new Error('supportedTranslationLocales not set.');\n        }\n\n        this.inited = true;\n        this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n        try {\n            this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: 'base' });\n        } catch {\n            this.collator = null;\n        }\n\n        if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n            this.translationLocale = this.translationLocale.slice(0, 2);\n\n            if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n                this.translationLocale = this.supportedTranslationLocales[0];\n            }\n        }\n\n        if (this.localesDirectory != null) {\n            await this.loadMessages(this.translationLocale, this.localeMessages);\n            if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n                await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n            }\n        }\n    }\n\n    t(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.translate(id, p1, p2, p3);\n    }\n\n    translate(id: string, p1?: string, p2?: string, p3?: string): string {\n        let result: string;\n        if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n            result = this.localeMessages[id];\n        } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n            result = this.defaultMessages[id];\n        } else {\n            result = '';\n        }\n\n        if (result !== '') {\n            if (p1 != null) {\n                result = result.split('__$1__').join(p1);\n            }\n            if (p2 != null) {\n                result = result.split('__$2__').join(p2);\n            }\n            if (p3 != null) {\n                result = result.split('__$3__').join(p3);\n            }\n        }\n\n        return result;\n    }\n\n    private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n        const formattedLocale = locale.replace('-', '_');\n        const locales = await this.getLocalesJson(formattedLocale);\n        for (const prop in locales) {\n            if (!locales.hasOwnProperty(prop)) {\n                continue;\n            }\n            messagesObj[prop] = locales[prop].message;\n\n            if (locales[prop].placeholders) {\n                for (const placeProp in locales[prop].placeholders) {\n                    if (!locales[prop].placeholders.hasOwnProperty(placeProp) ||\n                        !locales[prop].placeholders[placeProp].content) {\n                        continue;\n                    }\n\n                    const replaceToken = '\\\\$' + placeProp.toUpperCase() + '\\\\$';\n                    let replaceContent = locales[prop].placeholders[placeProp].content;\n                    if (replaceContent === '$1' || replaceContent === '$2' || replaceContent === '$3') {\n                        replaceContent = '__$' + replaceContent + '__';\n                    }\n                    messagesObj[prop] = messagesObj[prop].replace(new RegExp(replaceToken, 'g'), replaceContent);\n                }\n            }\n        }\n    }\n\n}\n","import { StorageService } from 'jslib-common/abstractions/storage.service';\n\nexport class MemoryStorageService implements StorageService {\n    private store = new Map<string, any>();\n\n    get<T>(key: string): Promise<T> {\n        if (this.store.has(key)) {\n            const obj = this.store.get(key);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    async has(key: string): Promise<boolean> {\n        return this.get(key) != null;\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n        this.store.set(key, obj);\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        this.store.delete(key);\n        return Promise.resolve();\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from 'jslib-angular/services/passwordReprompt.service';\nimport { PasswordRepromptComponent } from '../app/components/password-reprompt.component';\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n    component = PasswordRepromptComponent;\n}\n","import { Injectable } from '@angular/core';\n\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from 'jslib-common/abstractions/passwordReprompt.service';\n\nimport { PasswordRepromptComponent } from '../components/password-reprompt.component';\nimport { ModalService } from './modal.service';\n\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n    protected component = PasswordRepromptComponent;\n\n    constructor(private modalService: ModalService) { }\n\n    protectedFields() {\n        return ['TOTP', 'Password', 'H_Field', 'Card Number', 'Security Code'];\n    }\n\n    async showPasswordPrompt() {\n        const ref = this.modalService.open(this.component, {allowMultipleModals: true});\n\n        if (ref == null) {\n            return false;\n        }\n\n        const result = await ref.onClosedPromise();\n        return result === true;\n    }\n}\n","import Swal, { SweetAlertIcon } from 'sweetalert2';\n\nimport { DeviceType } from 'jslib-common/enums/deviceType';\nimport { ThemeType } from 'jslib-common/enums/themeType';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n    identityClientId: string = 'web';\n\n    private browserCache: DeviceType = null;\n    private prefersColorSchemeDark = window.matchMedia('(prefers-color-scheme: dark)');\n\n    constructor(private i18nService: I18nService, private messagingService: MessagingService,\n        private logService: LogService, private storageService: () => StorageService) { }\n\n    getDevice(): DeviceType {\n        if (this.browserCache != null) {\n            return this.browserCache;\n        }\n\n        if (navigator.userAgent.indexOf(' Firefox/') !== -1 || navigator.userAgent.indexOf(' Gecko/') !== -1) {\n            this.browserCache = DeviceType.FirefoxBrowser;\n        } else if (navigator.userAgent.indexOf(' OPR/') >= 0) {\n            this.browserCache = DeviceType.OperaBrowser;\n        } else if (navigator.userAgent.indexOf(' Edg/') !== -1) {\n            this.browserCache = DeviceType.EdgeBrowser;\n        } else if (navigator.userAgent.indexOf(' Vivaldi/') !== -1) {\n            this.browserCache = DeviceType.VivaldiBrowser;\n        } else if (navigator.userAgent.indexOf(' Safari/') !== -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n            this.browserCache = DeviceType.SafariBrowser;\n        } else if ((window as any).chrome && navigator.userAgent.indexOf(' Chrome/') !== -1) {\n            this.browserCache = DeviceType.ChromeBrowser;\n        } else if (navigator.userAgent.indexOf(' Trident/') !== -1) {\n            this.browserCache = DeviceType.IEBrowser;\n        } else {\n            this.browserCache = DeviceType.UnknownBrowser;\n        }\n\n        return this.browserCache;\n    }\n\n    getDeviceString(): string {\n        const device = DeviceType[this.getDevice()].toLowerCase();\n        return device.replace('browser', '');\n    }\n\n    isFirefox(): boolean {\n        return this.getDevice() === DeviceType.FirefoxBrowser;\n    }\n\n    isChrome(): boolean {\n        return this.getDevice() === DeviceType.ChromeBrowser;\n    }\n\n    isEdge(): boolean {\n        return this.getDevice() === DeviceType.EdgeBrowser;\n    }\n\n    isOpera(): boolean {\n        return this.getDevice() === DeviceType.OperaBrowser;\n    }\n\n    isVivaldi(): boolean {\n        return this.getDevice() === DeviceType.VivaldiBrowser;\n    }\n\n    isSafari(): boolean {\n        return this.getDevice() === DeviceType.SafariBrowser;\n    }\n\n    isIE(): boolean {\n        return this.getDevice() === DeviceType.IEBrowser;\n    }\n\n    isMacAppStore(): boolean {\n        return false;\n    }\n\n    isViewOpen(): Promise<boolean> {\n        return Promise.resolve(false);\n    }\n\n    launchUri(uri: string, options?: any): void {\n        const a = document.createElement('a');\n        a.href = uri;\n        if (options == null || !options.sameWindow) {\n            a.target = '_blank';\n            a.rel = 'noreferrer noopener';\n        }\n        a.classList.add('d-none');\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n        let blob: Blob = null;\n        let type: string = null;\n        const fileNameLower = fileName.toLowerCase();\n        let doDownload = true;\n        if (fileNameLower.endsWith('.pdf')) {\n            type = 'application/pdf';\n            doDownload = false;\n        } else if (fileNameLower.endsWith('.xlsx')) {\n            type = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n        } else if (fileNameLower.endsWith('.docx')) {\n            type = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n        } else if (fileNameLower.endsWith('.pptx')) {\n            type = 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\n        } else if (fileNameLower.endsWith('.csv')) {\n            type = 'text/csv';\n        } else if (fileNameLower.endsWith('.png')) {\n            type = 'image/png';\n        } else if (fileNameLower.endsWith('.jpg') || fileNameLower.endsWith('.jpeg')) {\n            type = 'image/jpeg';\n        } else if (fileNameLower.endsWith('.gif')) {\n            type = 'image/gif';\n        }\n        if (type != null) {\n            blobOptions = blobOptions || {};\n            if (blobOptions.type == null) {\n                blobOptions.type = type;\n            }\n        }\n        if (blobOptions != null && !this.isIE()) {\n            blob = new Blob([blobData], blobOptions);\n        } else {\n            blob = new Blob([blobData]);\n        }\n        if (navigator.msSaveOrOpenBlob) {\n            navigator.msSaveBlob(blob, fileName);\n        } else {\n            const a = win.document.createElement('a');\n            if (doDownload) {\n                a.download = fileName;\n            } else if (!this.isSafari()) {\n                a.target = '_blank';\n            }\n            a.href = URL.createObjectURL(blob);\n            a.style.position = 'fixed';\n            win.document.body.appendChild(a);\n            a.click();\n            win.document.body.removeChild(a);\n        }\n    }\n\n    getApplicationVersion(): Promise<string> {\n        return Promise.resolve(process.env.APPLICATION_VERSION || '-');\n    }\n\n    supportsWebAuthn(win: Window): boolean {\n        return (typeof(PublicKeyCredential) !== 'undefined');\n    }\n\n    supportsDuo(): boolean {\n        return true;\n    }\n\n    showToast(type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any): void {\n        this.messagingService.send('showToast', {\n            text: text,\n            title: title,\n            type: type,\n            options: options,\n        });\n    }\n\n    async showDialog(body: string, title?: string, confirmText?: string, cancelText?: string, type?: string,\n        bodyIsHtml: boolean = false) {\n        let iconClasses: string = null;\n        if (type != null) {\n            // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n            switch (type) {\n                case 'success':\n                    iconClasses = 'fa-check text-success';\n                    break;\n                case 'warning':\n                    iconClasses = 'fa-warning text-warning';\n                    break;\n                case 'error':\n                    iconClasses = 'fa-bolt text-danger';\n                    break;\n                case 'info':\n                    iconClasses = 'fa-info-circle text-info';\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        const bootstrapModal = document.querySelector('div.modal');\n        if (bootstrapModal != null) {\n            bootstrapModal.removeAttribute('tabindex');\n        }\n\n        const iconHtmlStr = iconClasses != null ? `<i class=\"swal-custom-icon fa ${iconClasses}\"></i>` : undefined;\n        const confirmed = await Swal.fire({\n            heightAuto: false,\n            buttonsStyling: false,\n            icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n            iconHtml: iconHtmlStr,\n            text: bodyIsHtml ? null : body,\n            html: bodyIsHtml ? body : null,\n            titleText: title,\n            showCancelButton: (cancelText != null),\n            cancelButtonText: cancelText,\n            showConfirmButton: true,\n            confirmButtonText: confirmText == null ? this.i18nService.t('ok') : confirmText,\n        });\n\n        if (bootstrapModal != null) {\n            bootstrapModal.setAttribute('tabindex', '-1');\n        }\n\n        return confirmed.value;\n    }\n\n    isDev(): boolean {\n        return process.env.NODE_ENV === 'development';\n    }\n\n    isSelfHost(): boolean {\n        return process.env.ENV.toString() === 'selfhosted';\n    }\n\n    copyToClipboard(text: string, options?: any): void | boolean {\n        let win = window;\n        let doc = window.document;\n        if (options && (options.window || options.win)) {\n            win = options.window || options.win;\n            doc = win.document;\n        } else if (options && options.doc) {\n            doc = options.doc;\n        }\n        if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n            // IE specific code path to prevent textarea being shown while dialog is visible.\n            (win as any).clipboardData.setData('Text', text);\n        } else if (doc.queryCommandSupported && doc.queryCommandSupported('copy')) {\n            const textarea = doc.createElement('textarea');\n            textarea.textContent = text;\n            // Prevent scrolling to bottom of page in MS Edge.\n            textarea.style.position = 'fixed';\n            let copyEl = doc.body;\n            // For some reason copy command won't work when modal is open if appending to body\n            if (doc.body.classList.contains('modal-open')) {\n                copyEl = doc.body.querySelector<HTMLElement>('.modal');\n            }\n            copyEl.appendChild(textarea);\n            textarea.select();\n            let success = false;\n            try {\n                // Security exception may be thrown by some browsers.\n                success = doc.execCommand('copy');\n                if (!success) {\n                    this.logService.debug('Copy command unsupported or disabled.');\n                }\n            } catch (e) {\n                // tslint:disable-next-line\n                console.warn('Copy to clipboard failed.', e);\n            } finally {\n                copyEl.removeChild(textarea);\n            }\n            return success;\n        }\n    }\n\n    readFromClipboard(options?: any): Promise<string> {\n        throw new Error('Cannot read from clipboard on web.');\n    }\n\n    supportsBiometric() {\n        return Promise.resolve(false);\n    }\n\n    authenticateBiometric() {\n        return Promise.resolve(false);\n    }\n\n    supportsSecureStorage() {\n        return false;\n    }\n\n    getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n        return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n    }\n\n    async getEffectiveTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n        const theme = await this.storageService().get<ThemeType>(ConstantsService.themeKey);\n        if (theme === ThemeType.Dark) {\n            return ThemeType.Dark;\n        } else if (theme === ThemeType.System) {\n            return this.getDefaultSystemTheme();\n        } else {\n            return ThemeType.Light;\n        }\n    }\n\n    onDefaultSystemThemeChange(callback: ((theme: ThemeType.Light | ThemeType.Dark) => unknown)) {\n        this.prefersColorSchemeDark.addEventListener('change', ({ matches }) => {\n            callback(matches ? ThemeType.Dark : ThemeType.Light);\n        });\n    }\n}\n","import { DeviceType } from '../enums/deviceType';\nimport { PolicyType } from '../enums/policyType';\n\nimport { ApiService as ApiServiceAbstraction } from '../abstractions/api.service';\nimport { EnvironmentService } from '../abstractions/environment.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\n\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EmergencyAccessAcceptRequest } from '../models/request/emergencyAccessAcceptRequest';\nimport { EmergencyAccessConfirmRequest } from '../models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessInviteRequest } from '../models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessPasswordRequest } from '../models/request/emergencyAccessPasswordRequest';\nimport { EmergencyAccessUpdateRequest } from '../models/request/emergencyAccessUpdateRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationSsoRequest } from '../models/request/organization/organizationSsoRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationImportRequest } from '../models/request/organizationImportRequest';\nimport { OrganizationKeysRequest } from '../models/request/organizationKeysRequest';\nimport { OrganizationSubscriptionUpdateRequest } from '../models/request/organizationSubscriptionUpdateRequest';\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserBulkConfirmRequest } from '../models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from '../models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from '../models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { OrganizationUserResetPasswordRequest } from '../models/request/organizationUserResetPasswordRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PolicyRequest } from '../models/request/policyRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { ProviderAddOrganizationRequest } from '../models/request/provider/providerAddOrganizationRequest';\nimport { ProviderOrganizationCreateRequest } from '../models/request/provider/providerOrganizationCreateRequest';\nimport { ProviderSetupRequest } from '../models/request/provider/providerSetupRequest';\nimport { ProviderUpdateRequest } from '../models/request/provider/providerUpdateRequest';\nimport { ProviderUserAcceptRequest } from '../models/request/provider/providerUserAcceptRequest';\nimport { ProviderUserBulkConfirmRequest } from '../models/request/provider/providerUserBulkConfirmRequest';\nimport { ProviderUserBulkRequest } from '../models/request/provider/providerUserBulkRequest';\nimport { ProviderUserConfirmRequest } from '../models/request/provider/providerUserConfirmRequest';\nimport { ProviderUserInviteRequest } from '../models/request/provider/providerUserInviteRequest';\nimport { ProviderUserUpdateRequest } from '../models/request/provider/providerUserUpdateRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { SendAccessRequest } from '../models/request/sendAccessRequest';\nimport { SendRequest } from '../models/request/sendRequest';\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTempPasswordRequest } from '../models/request/updateTempPasswordRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from '../models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from '../models/request/updateTwoFactorWebAuthnRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { Utils } from '../misc/utils';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { AttachmentResponse } from '../models/response/attachmentResponse';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport {\n    EmergencyAccessGranteeDetailsResponse,\n    EmergencyAccessGrantorDetailsResponse,\n    EmergencyAccessTakeoverResponse,\n    EmergencyAccessViewResponse\n} from '../models/response/emergencyAccessResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityCaptchaResponse } from '../models/response/identityCaptchaResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationSsoResponse } from '../models/response/organization/organizationSsoResponse';\nimport { OrganizationAutoEnrollStatusResponse } from '../models/response/organizationAutoEnrollStatusResponse';\nimport { OrganizationKeysResponse } from '../models/response/organizationKeysResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport { OrganizationUserBulkPublicKeyResponse } from '../models/response/organizationUserBulkPublicKeyResponse';\nimport { OrganizationUserBulkResponse } from '../models/response/organizationUserBulkResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserResetPasswordDetailsReponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PlanResponse } from '../models/response/planResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { ProviderOrganizationOrganizationDetailsResponse, ProviderOrganizationResponse } from '../models/response/provider/providerOrganizationResponse';\nimport { ProviderResponse } from '../models/response/provider/providerResponse';\nimport { ProviderUserBulkPublicKeyResponse } from '../models/response/provider/providerUserBulkPublicKeyResponse';\nimport { ProviderUserBulkResponse } from '../models/response/provider/providerUserBulkResponse';\nimport {\n    ProviderUserResponse,\n    ProviderUserUserDetailsResponse\n} from '../models/response/provider/providerUserResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SendAccessResponse } from '../models/response/sendAccessResponse';\nimport { SendFileDownloadDataResponse } from '../models/response/sendFileDownloadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\nimport { SendResponse } from '../models/response/sendResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\nimport { TaxRateResponse } from '../models/response/taxRateResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport { TwoFactorWebAuthnResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { ChallengeResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nimport { SendAccessView } from '../models/view/sendAccessView';\n\nexport class ApiService implements ApiServiceAbstraction {\n    protected apiKeyRefresh: (clientId: string, clientSecret: string) => Promise<any>;\n    private device: DeviceType;\n    private deviceType: string;\n    private isWebClient = false;\n    private isDesktopClient = false;\n\n    constructor(private tokenService: TokenService, private platformUtilsService: PlatformUtilsService,\n        private environmentService: EnvironmentService, private logoutCallback: (expired: boolean) => Promise<void>,\n        private customUserAgent: string = null) {\n        this.device = platformUtilsService.getDevice();\n        this.deviceType = this.device.toString();\n        this.isWebClient = this.device === DeviceType.IEBrowser || this.device === DeviceType.ChromeBrowser ||\n            this.device === DeviceType.EdgeBrowser || this.device === DeviceType.FirefoxBrowser ||\n            this.device === DeviceType.OperaBrowser || this.device === DeviceType.SafariBrowser ||\n            this.device === DeviceType.UnknownBrowser || this.device === DeviceType.VivaldiBrowser;\n        this.isDesktopClient = this.device === DeviceType.WindowsDesktop || this.device === DeviceType.MacOsDesktop ||\n            this.device === DeviceType.LinuxDesktop;\n    }\n\n    // Auth APIs\n\n    async postIdentityToken(request: TokenRequest): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n        const headers = new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n        request.alterIdentityTokenHeaders(headers);\n        const response = await this.fetch(new Request(this.environmentService.getIdentityUrl() + '/connect/token', {\n            body: this.qsStringify(request.toIdentityToken(request.clientId ?? this.platformUtilsService.identityClientId)),\n            credentials: this.getCredentials(),\n            cache: 'no-store',\n            headers: headers,\n            method: 'POST',\n        }));\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        }\n\n        if (responseJson != null) {\n            if (response.status === 200) {\n                return new IdentityTokenResponse(responseJson);\n            } else if (response.status === 400 && responseJson.TwoFactorProviders2 &&\n                Object.keys(responseJson.TwoFactorProviders2).length) {\n                await this.tokenService.clearTwoFactorToken(request.email);\n                return new IdentityTwoFactorResponse(responseJson);\n            } else if (response.status === 400 && responseJson.HCaptcha_SiteKey &&\n                Object.keys(responseJson.HCaptcha_SiteKey).length) {\n                return new IdentityCaptchaResponse(responseJson);\n            }\n        }\n\n        return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n    }\n\n    async refreshIdentityToken(): Promise<any> {\n        try {\n            await this.doAuthRefresh();\n        } catch (e) {\n            return Promise.reject(null);\n        }\n    }\n\n    // Account APIs\n\n    async getProfile(): Promise<ProfileResponse> {\n        const r = await this.send('GET', '/accounts/profile', null, true, true);\n        return new ProfileResponse(r);\n    }\n\n    async getUserBilling(): Promise<BillingResponse> {\n        const r = await this.send('GET', '/accounts/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getUserSubscription(): Promise<SubscriptionResponse> {\n        const r = await this.send('GET', '/accounts/subscription', null, true, true);\n        return new SubscriptionResponse(r);\n    }\n\n    async getTaxInfo(): Promise<TaxInfoResponse> {\n        const r = await this.send('GET', '/accounts/tax', null, true, true);\n        return new TaxInfoResponse(r);\n    }\n\n    async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n        const r = await this.send('PUT', '/accounts/profile', request, true, true);\n        return new ProfileResponse(r);\n    }\n\n    putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n        return this.send('PUT', '/accounts/tax', request, true, false);\n    }\n\n    async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n        const r = await this.send('POST', '/accounts/prelogin', request, false, true);\n        return new PreloginResponse(r);\n    }\n\n    postEmailToken(request: EmailTokenRequest): Promise<any> {\n        return this.send('POST', '/accounts/email-token', request, true, false);\n    }\n\n    postEmail(request: EmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/email', request, true, false);\n    }\n\n    postPassword(request: PasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/password', request, true, false);\n    }\n\n    setPassword(request: SetPasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/set-password', request, true, false);\n    }\n\n    postSecurityStamp(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/security-stamp', request, true, false);\n    }\n\n    deleteAccount(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/accounts', request, true, false);\n    }\n\n    async getAccountRevisionDate(): Promise<number> {\n        const r = await this.send('GET', '/accounts/revision-date', null, true, true);\n        return r as number;\n    }\n\n    postPasswordHint(request: PasswordHintRequest): Promise<any> {\n        return this.send('POST', '/accounts/password-hint', request, false, false);\n    }\n\n    postRegister(request: RegisterRequest): Promise<any> {\n        return this.send('POST', '/accounts/register', request, false, false);\n    }\n\n    async postPremium(data: FormData): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/premium', data, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postIapCheck(request: IapCheckRequest): Promise<any> {\n        return this.send('POST', '/accounts/iap-check', request, true, false);\n    }\n\n    postReinstatePremium(): Promise<any> {\n        return this.send('POST', '/accounts/reinstate-premium', null, true, false);\n    }\n\n    postCancelPremium(): Promise<any> {\n        return this.send('POST', '/accounts/cancel-premium', null, true, false);\n    }\n\n    async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postAccountPayment(request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/accounts/payment', request, true, false);\n    }\n\n    postAccountLicense(data: FormData): Promise<any> {\n        return this.send('POST', '/accounts/license', data, true, false);\n    }\n\n    postAccountKeys(request: KeysRequest): Promise<any> {\n        return this.send('POST', '/accounts/keys', request, true, false);\n    }\n\n    postAccountKey(request: UpdateKeyRequest): Promise<any> {\n        return this.send('POST', '/accounts/key', request, true, false);\n    }\n\n    postAccountVerifyEmail(): Promise<any> {\n        return this.send('POST', '/accounts/verify-email', null, true, false);\n    }\n\n    postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-email-token', request, false, false);\n    }\n\n    postAccountVerifyPassword(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-password', request, true, false);\n    }\n\n    postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover', request, false, false);\n    }\n\n    postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover-token', request, false, false);\n    }\n\n    postAccountKdf(request: KdfRequest): Promise<any> {\n        return this.send('POST', '/accounts/kdf', request, true, false);\n    }\n\n    async deleteSsoUser(organizationId: string): Promise<any> {\n        return this.send('DELETE', '/accounts/sso/' + organizationId, null, true, false);\n    }\n\n    async getSsoUserIdentifier(): Promise<string> {\n        return this.send('GET', '/accounts/sso/user-identifier', null, true, true);\n    }\n\n    async postUserApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/accounts/api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postUserRotateApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/accounts/rotate-api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n        return this.send('PUT', '/accounts/update-temp-password', request, true, false);\n    }\n\n    // Folder APIs\n\n    async getFolder(id: string): Promise<FolderResponse> {\n        const r = await this.send('GET', '/folders/' + id, null, true, true);\n        return new FolderResponse(r);\n    }\n\n    async postFolder(request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('POST', '/folders', request, true, true);\n        return new FolderResponse(r);\n    }\n\n    async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('PUT', '/folders/' + id, request, true, true);\n        return new FolderResponse(r);\n    }\n\n    deleteFolder(id: string): Promise<any> {\n        return this.send('DELETE', '/folders/' + id, null, true, false);\n    }\n\n    // Send APIs\n\n    async getSend(id: string): Promise<SendResponse> {\n        const r = await this.send('GET', '/sends/' + id, null, true, true);\n        return new SendResponse(r);\n    }\n\n    async postSendAccess(id: string, request: SendAccessRequest, apiUrl?: string): Promise<SendAccessResponse> {\n        const addSendIdHeader = (headers: Headers) => {\n            headers.set('Send-Id', id);\n        };\n        const r = await this.send('POST', '/sends/access/' + id, request, false, true, apiUrl, addSendIdHeader);\n        return new SendAccessResponse(r);\n    }\n\n    async getSendFileDownloadData(send: SendAccessView, request: SendAccessRequest, apiUrl?: string): Promise<SendFileDownloadDataResponse> {\n        const addSendIdHeader = (headers: Headers) => {\n            headers.set('Send-Id', send.id);\n        };\n        const r = await this.send('POST', '/sends/' + send.id + '/access/file/' + send.file.id, request, false, true,\n            apiUrl, addSendIdHeader);\n        return new SendFileDownloadDataResponse(r);\n    }\n\n    async getSends(): Promise<ListResponse<SendResponse>> {\n        const r = await this.send('GET', '/sends', null, true, true);\n        return new ListResponse(r, SendResponse);\n    }\n\n    async postSend(request: SendRequest): Promise<SendResponse> {\n        const r = await this.send('POST', '/sends', request, true, true);\n        return new SendResponse(r);\n    }\n\n    async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n        const r = await this.send('POST', '/sends/file/v2', request, true, true);\n        return new SendFileUploadDataResponse(r);\n    }\n\n    async renewSendFileUploadUrl(sendId: string, fileId: string): Promise<SendFileUploadDataResponse> {\n        const r = await this.send('GET', '/sends/' + sendId + '/file/' + fileId, null, true, true);\n        return new SendFileUploadDataResponse(r);\n    }\n\n    postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n        return this.send('POST', '/sends/' + sendId + '/file/' + fileId, data, true, false);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n        const r = await this.send('POST', '/sends/file', data, true, true);\n        return new SendResponse(r);\n    }\n\n    async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n        const r = await this.send('PUT', '/sends/' + id, request, true, true);\n        return new SendResponse(r);\n    }\n\n    async putSendRemovePassword(id: string): Promise<SendResponse> {\n        const r = await this.send('PUT', '/sends/' + id + '/remove-password', null, true, true);\n        return new SendResponse(r);\n    }\n\n    deleteSend(id: string): Promise<any> {\n        return this.send('DELETE', '/sends/' + id, null, true, false);\n    }\n\n    // Cipher APIs\n\n    async getCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id, null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('GET', '/ciphers/organization-details?organizationId=' + organizationId,\n            null, true, true);\n        return new ListResponse(r, CipherResponse);\n    }\n\n    async postCipher(request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/create', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id, request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipher(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id, null, true, false);\n    }\n\n    deleteCipherAdmin(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/admin', null, true, false);\n    }\n\n    deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers', request, true, false);\n    }\n\n    deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers/admin', request, true, false);\n    }\n\n    putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/move', request, true, false);\n    }\n\n    async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/share', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/share', request, true, false);\n    }\n\n    putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections', request, true, false);\n    }\n\n    putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections-admin', request, true, false);\n    }\n\n    postPurgeCiphers(request: PasswordVerificationRequest, organizationId: string = null): Promise<any> {\n        let path = '/ciphers/purge';\n        if (organizationId != null) {\n            path += '?organizationId=' + organizationId;\n        }\n        return this.send('POST', path, request, true, false);\n    }\n\n    postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import', request, true, false);\n    }\n\n    postImportOrganizationCiphers(organizationId: string, request: ImportOrganizationCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import-organization?organizationId=' + organizationId, request, true, false);\n    }\n\n    putDeleteCipher(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/delete', null, true, false);\n    }\n\n    putDeleteCipherAdmin(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/delete-admin', null, true, false);\n    }\n\n    putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/delete', request, true, false);\n    }\n\n    putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/delete-admin', request, true, false);\n    }\n\n    async putRestoreCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/restore', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/restore-admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putRestoreManyCiphers(request: CipherBulkDeleteRequest): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('PUT', '/ciphers/restore', request, true, true);\n        return new ListResponse<CipherResponse>(r, CipherResponse);\n    }\n\n    // Attachments APIs\n\n    async getAttachmentData(cipherId: string, attachmentId: string, emergencyAccessId?: string): Promise<AttachmentResponse> {\n        const path = (emergencyAccessId != null ?\n            '/emergency-access/' + emergencyAccessId + '/' :\n            '/ciphers/') + cipherId + '/attachment/' + attachmentId;\n        const r = await this.send('GET', path, null, true, true);\n        return new AttachmentResponse(r);\n    }\n\n    async postCipherAttachment(id: string, request: AttachmentRequest): Promise<AttachmentUploadDataResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment/v2', request, true, true);\n        return new AttachmentUploadDataResponse(r);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment-admin', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId, null, true, false);\n    }\n\n    deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId + '/admin', null, true, false);\n    }\n\n    postShareCipherAttachment(id: string, attachmentId: string, data: FormData,\n        organizationId: string): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' +\n            attachmentId + '/share?organizationId=' + organizationId, data, true, false);\n    }\n\n    async renewAttachmentUploadUrl(id: string, attachmentId: string): Promise<AttachmentUploadDataResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/attachment/' + attachmentId + '/renew', null, true, true);\n        return new AttachmentUploadDataResponse(r);\n    }\n\n    postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' + attachmentId, data, true, false);\n    }\n\n    // Collections APIs\n\n    async getCollectionDetails(organizationId: string, id: string): Promise<CollectionGroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/details',\n            null, true, true);\n        return new CollectionGroupDetailsResponse(r);\n    }\n\n    async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollectionUsers(organizationId: string, id: string): Promise<SelectionReadOnlyResponse[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            null, true, true);\n        return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n    }\n\n    async postCollection(organizationId: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/collections', request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollection(organizationId: string, id: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id,\n            request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollectionUsers(organizationId: string, id: string, request: SelectionReadOnlyRequest[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            request, true, false);\n    }\n\n    deleteCollection(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/collections/' + id, null, true, false);\n    }\n\n    deleteCollectionUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/collections/' + id + '/user/' + organizationUserId,\n            null, true, false);\n    }\n\n    // Groups APIs\n\n    async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/details',\n            null, true, true);\n        return new GroupDetailsResponse(r);\n    }\n\n    async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups', null, true, true);\n        return new ListResponse(r, GroupResponse);\n    }\n\n    async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/users',\n            null, true, true);\n        return r;\n    }\n\n    async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/groups', request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroup(organizationId: string, id: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id, request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id + '/users', request, true, false);\n    }\n\n    deleteGroup(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/groups/' + id, null, true, false);\n    }\n\n    deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/groups/' + id + '/user/' + organizationUserId, null, true, false);\n    }\n\n    // Policy APIs\n\n    async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/' + type, null, true, true);\n        return new PolicyResponse(r);\n    }\n\n    async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies', null, true, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    async getPoliciesByToken(organizationId: string, token: string, email: string, organizationUserId: string):\n        Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/token?' +\n            'token=' + encodeURIComponent(token) + '&email=' + encodeURIComponent(email) +\n            '&organizationUserId=' + organizationUserId, null, false, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<PolicyResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/policies/' + type, request, true, true);\n        return new PolicyResponse(r);\n    }\n\n    // Organization User APIs\n\n    async getOrganizationUser(organizationId: string, id: string): Promise<OrganizationUserDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id, null, true, true);\n        return new OrganizationUserDetailsResponse(r);\n    }\n\n    async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id + '/groups',\n            null, true, true);\n        return r;\n    }\n\n    async getOrganizationUsers(organizationId: string): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users', null, true, true);\n        return new ListResponse(r, OrganizationUserUserDetailsResponse);\n    }\n\n    async getOrganizationUserResetPasswordDetails(organizationId: string, id: string):\n        Promise<OrganizationUserResetPasswordDetailsReponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id +\n            '/reset-password-details', null, true, true);\n        return new OrganizationUserResetPasswordDetailsReponse(r);\n    }\n\n    async getOrganizationAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n        const r = await this.send('GET', '/organizations/' + identifier + '/auto-enroll-status', null, true, true);\n        return new OrganizationAutoEnrollStatusResponse(r);\n    }\n\n    postOrganizationUserInvite(organizationId: string, request: OrganizationUserInviteRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/invite', request, true, false);\n    }\n\n    postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/reinvite', null, true, false);\n    }\n\n    async postManyOrganizationUserReinvite(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/reinvite', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    postOrganizationUserAccept(organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/accept', request, true, false);\n    }\n\n    postOrganizationUserConfirm(organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/confirm',\n            request, true, false);\n    }\n\n    async postOrganizationUsersPublicKey(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/public-keys', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n    }\n\n    async postOrganizationUserBulkConfirm(organizationId: string, request: OrganizationUserBulkConfirmRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/confirm', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    putOrganizationUser(organizationId: string, id: string, request: OrganizationUserUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id, request, true, false);\n    }\n\n    putOrganizationUserGroups(organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/groups', request, true, false);\n    }\n\n    putOrganizationUserResetPasswordEnrollment(organizationId: string, userId: string,\n        request: OrganizationUserResetPasswordEnrollmentRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + userId + '/reset-password-enrollment',\n            request, true, false);\n    }\n\n    putOrganizationUserResetPassword(organizationId: string, id: string,\n        request: OrganizationUserResetPasswordRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/reset-password',\n            request, true, false);\n    }\n\n    deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/users/' + id, null, true, false);\n    }\n\n    async deleteManyOrganizationUsers(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('DELETE', '/organizations/' + organizationId + '/users', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    // Plan APIs\n\n    async getPlans(): Promise<ListResponse<PlanResponse>> {\n        const r = await this.send('GET', '/plans/', null, true, true);\n        return new ListResponse(r, PlanResponse);\n    }\n\n    async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/import', request, true, false);\n    }\n\n    async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n        return this.send('POST', '/public/organization/import', request, true, false);\n    }\n\n    async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n        const r = await this.send('GET', '/plans/sales-tax-rates/', null, true, true);\n        return new ListResponse(r, TaxRateResponse);\n    }\n\n    // Settings APIs\n\n    async getSettingsDomains(): Promise<DomainsResponse> {\n        const r = await this.send('GET', '/settings/domains', null, true, true);\n        return new DomainsResponse(r);\n    }\n\n    async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n        const r = await this.send('PUT', '/settings/domains', request, true, true);\n        return new DomainsResponse(r);\n    }\n\n    // Sync APIs\n\n    async getSync(): Promise<SyncResponse> {\n        const path = this.isDesktopClient || this.isWebClient ? '/sync?excludeDomains=true' : '/sync';\n        const r = await this.send('GET', path, null, true, true);\n        return new SyncResponse(r);\n    }\n\n    // Two-factor APIs\n\n    async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorOrganizationProviders(organizationId: string): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorAuthenticator(request: PasswordVerificationRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('POST', '/two-factor/get-authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async getTwoFactorEmail(request: PasswordVerificationRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('POST', '/two-factor/get-email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async getTwoFactorDuo(request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/two-factor/get-duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorOrganizationDuo(organizationId: string,\n        request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/two-factor/get-duo',\n            request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorYubiKey(request: PasswordVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('POST', '/two-factor/get-yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async getTwoFactorWebAuthn(request: PasswordVerificationRequest): Promise<TwoFactorWebAuthnResponse> {\n        const r = await this.send('POST', '/two-factor/get-webauthn', request, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async getTwoFactorWebAuthnChallenge(request: PasswordVerificationRequest): Promise<ChallengeResponse> {\n        const r = await this.send('POST', '/two-factor/get-webauthn-challenge', request, true, true);\n        return new ChallengeResponse(r);\n    }\n\n    async getTwoFactorRecover(request: PasswordVerificationRequest): Promise<TwoFactorRecoverResponse> {\n        const r = await this.send('POST', '/two-factor/get-recover', request, true, true);\n        return new TwoFactorRecoverResponse(r);\n    }\n\n    async putTwoFactorAuthenticator(\n        request: UpdateTwoFactorAuthenticatorRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('PUT', '/two-factor/authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('PUT', '/two-factor/email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorOrganizationDuo(organizationId: string,\n        request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorYubiKey(request: UpdateTwoFactorYubioOtpRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('PUT', '/two-factor/yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async putTwoFactorWebAuthn(request: UpdateTwoFactorWebAuthnRequest): Promise<TwoFactorWebAuthnResponse> {\n        const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n        const data: any = Object.assign({}, request);\n\n        data.deviceResponse = {\n            id: request.deviceResponse.id,\n            rawId: btoa(request.deviceResponse.id),\n            type: request.deviceResponse.type,\n            extensions: request.deviceResponse.getClientExtensionResults(),\n            response: {\n                AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n                clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n            },\n        };\n\n        const r = await this.send('PUT', '/two-factor/webauthn', data, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async deleteTwoFactorWebAuthn(request: UpdateTwoFactorWebAuthnDeleteRequest): Promise<TwoFactorWebAuthnResponse> {\n        const r = await this.send('DELETE', '/two-factor/webauthn', request, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/two-factor/disable', request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    async putTwoFactorOrganizationDisable(organizationId: string,\n        request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/disable',\n            request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n        return this.send('POST', '/two-factor/recover', request, false, false);\n    }\n\n    postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email', request, true, false);\n    }\n\n    postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email-login', request, false, false);\n    }\n\n    // Emergency Access APIs\n\n    async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n        const r = await this.send('GET', '/emergency-access/trusted', null, true, true);\n        return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n    }\n\n    async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n        const r = await this.send('GET', '/emergency-access/granted', null, true, true);\n        return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n    }\n\n    async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n        const r = await this.send('GET', '/emergency-access/' + id, null, true, true);\n        return new EmergencyAccessGranteeDetailsResponse(r);\n    }\n\n    async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/emergency-access/' + id + '/policies', null, true, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n        return this.send('PUT', '/emergency-access/' + id, request, true, false);\n    }\n\n    deleteEmergencyAccess(id: string): Promise<any> {\n        return this.send('DELETE', '/emergency-access/' + id, null, true, false);\n    }\n\n    postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/invite', request, true, false);\n    }\n\n    postEmergencyAccessReinvite(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/reinvite', null, true, false);\n    }\n\n    postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/accept', request, true, false);\n    }\n\n    postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/confirm', request, true, false);\n    }\n\n    postEmergencyAccessInitiate(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/initiate', null, true, false);\n    }\n\n    postEmergencyAccessApprove(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/approve', null, true, false);\n    }\n\n    postEmergencyAccessReject(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/reject', null, true, false);\n    }\n\n    async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/takeover', null, true, true);\n        return new EmergencyAccessTakeoverResponse(r);\n    }\n\n    async postEmergencyAccessPassword(id: string, request: EmergencyAccessPasswordRequest): Promise<any> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/password', request, true, true);\n    }\n\n    async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/view', null, true, true);\n        return new EmergencyAccessViewResponse(r);\n    }\n\n    // Organization APIs\n\n    async getOrganization(id: string): Promise<OrganizationResponse> {\n        const r = await this.send('GET', '/organizations/' + id, null, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async getOrganizationBilling(id: string): Promise<BillingResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/subscription', null, true, true);\n        return new OrganizationSubscriptionResponse(r);\n    }\n\n    async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n        return this.send('GET', '/organizations/' + id + '/license?installationId=' + installationId,\n            null, true, true);\n    }\n\n    async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/tax', null, true, true);\n        return new TaxInfoResponse(r);\n    }\n\n    async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/sso', null, true, true);\n        return new OrganizationSsoResponse(r);\n    }\n\n    async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations', request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganization(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('PUT', '/organizations/' + id, request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganizationTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + id + '/tax', request, true, false);\n    }\n\n    postLeaveOrganization(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/leave', null, true, false);\n    }\n\n    async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations/license', data, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/license', data, true, false);\n    }\n\n    async postOrganizationApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationRotateApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/rotate-api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/sso', request, true, true);\n        return new OrganizationSsoResponse(r);\n    }\n\n    async postOrganizationUpgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/upgrade', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationUpdateSubscription(id: string, request: OrganizationSubscriptionUpdateRequest): Promise<void> {\n        return this.send('POST', '/organizations/' + id + '/subscription', request, true, false);\n    }\n\n    async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/seat', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/payment', request, true, false);\n    }\n\n    postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/verify-bank', request, true, false);\n    }\n\n    postOrganizationCancel(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/cancel', null, true, false);\n    }\n\n    postOrganizationReinstate(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/reinstate', null, true, false);\n    }\n\n    deleteOrganization(id: string, request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/organizations/' + id, request, true, false);\n    }\n\n    async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/keys', null, true, true);\n        return new OrganizationKeysResponse(r);\n    }\n\n    async postOrganizationKeys(id: string, request: OrganizationKeysRequest): Promise<OrganizationKeysResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/keys', request, true, true);\n        return new OrganizationKeysResponse(r);\n    }\n\n    // Provider APIs\n\n    async postProviderSetup(id: string, request: ProviderSetupRequest) {\n        const r = await this.send('POST', '/providers/' + id + '/setup', request, true, true);\n        return new ProviderResponse(r);\n    }\n\n    async getProvider(id: string) {\n        const r = await this.send('GET', '/providers/' + id, null, true, true);\n        return new ProviderResponse(r);\n    }\n\n    async putProvider(id: string, request: ProviderUpdateRequest) {\n        const r = await this.send('PUT', '/providers/' + id, request, true, true);\n        return new ProviderResponse(r);\n    }\n\n    // Provider User APIs\n\n    async getProviderUsers(providerId: string): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n        const r = await this.send('GET', '/providers/' + providerId + '/users', null, true, true);\n        return new ListResponse(r, ProviderUserUserDetailsResponse);\n    }\n\n    async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n        const r = await this.send('GET', '/providers/' + providerId + '/users/' + id, null, true, true);\n        return new ProviderUserResponse(r);\n    }\n\n    postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/invite', request, true, false);\n    }\n\n    postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/' + id + '/reinvite', null, true, false);\n    }\n\n    async postManyProviderUserReinvite(providerId: string, request: ProviderUserBulkRequest): Promise<ListResponse<ProviderUserBulkResponse>> {\n        const r = await this.send('POST', '/providers/' + providerId + '/users/reinvite', request, true, true);\n        return new ListResponse(r, ProviderUserBulkResponse);\n    }\n\n    async postProviderUserBulkConfirm(providerId: string, request: ProviderUserBulkConfirmRequest): Promise<ListResponse<ProviderUserBulkResponse>> {\n        const r = await this.send('POST', '/providers/' + providerId + '/users/confirm', request, true, true);\n        return new ListResponse(r, ProviderUserBulkResponse);\n    }\n\n    async deleteManyProviderUsers(providerId: string, request: ProviderUserBulkRequest): Promise<ListResponse<ProviderUserBulkResponse>> {\n        const r = await this.send('DELETE', '/providers/' + providerId + '/users', request, true, true);\n        return new ListResponse(r, ProviderUserBulkResponse);\n    }\n\n    postProviderUserAccept(providerId: string, id: string, request: ProviderUserAcceptRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/' + id + '/accept', request, true, false);\n    }\n\n    postProviderUserConfirm(providerId: string, id: string, request: ProviderUserConfirmRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/' + id + '/confirm',\n            request, true, false);\n    }\n\n    async postProviderUsersPublicKey(providerId: string, request: ProviderUserBulkRequest): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n        const r = await this.send('POST', '/providers/' + providerId + '/users/public-keys', request, true, true);\n        return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n    }\n\n\n    putProviderUser(providerId: string, id: string, request: ProviderUserUpdateRequest): Promise<any> {\n        return this.send('PUT', '/providers/' + providerId + '/users/' + id, request, true, false);\n    }\n\n    deleteProviderUser(providerId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/providers/' + providerId + '/users/' + id, null, true, false);\n    }\n\n    // Provider Organization APIs\n\n    async getProviderClients(providerId: string): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n        const r = await this.send('GET', '/providers/' + providerId + '/organizations', null, true, true);\n        return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n    }\n\n    postProviderAddOrganization(providerId: string, request: ProviderAddOrganizationRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/organizations/add', request, true, false);\n    }\n\n    async postProviderCreateOrganization(providerId: string, request: ProviderOrganizationCreateRequest): Promise<ProviderOrganizationResponse> {\n        const r = await this.send('POST', '/providers/' + providerId + '/organizations', request, true, true);\n        return new ProviderOrganizationResponse(r);\n    }\n\n    deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/providers/' + providerId + '/organizations/' + id, null, true, false);\n    }\n\n    // Event APIs\n\n    async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/events', start, end, token), null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsCipher(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/ciphers/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganization(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/organizations/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganizationUser(organizationId: string, id: string,\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET',\n            this.addEventParameters('/organizations/' + organizationId + '/users/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsProvider(id: string, start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/providers/' + id + '/events', start, end, token), null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsProviderUser(providerId: string, id: string,\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET',\n            this.addEventParameters('/providers/' + providerId + '/users/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async postEventsCollect(request: EventRequest[]): Promise<any> {\n        const authHeader = await this.getActiveBearerToken();\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n            'Authorization': 'Bearer ' + authHeader,\n            'Content-Type': 'application/json; charset=utf-8',\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n        const response = await this.fetch(new Request(this.environmentService.getEventsUrl() + '/collect', {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            method: 'POST',\n            body: JSON.stringify(request),\n            headers: headers,\n        }));\n        if (response.status !== 200) {\n            return Promise.reject('Event post failed.');\n        }\n    }\n\n    // User APIs\n\n    async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n        const r = await this.send('GET', '/users/' + id + '/public-key', null, true, true);\n        return new UserKeyResponse(r);\n    }\n\n    // HIBP APIs\n\n    async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n        const r = await this.send('GET', '/hibp/breach?username=' + username, null, true, true);\n        return r.map((a: any) => new BreachAccountResponse(a));\n    }\n\n    // Misc\n\n    async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n        const r = await this.send('POST', '/bitpay-invoice', request, true, true);\n        return r as string;\n    }\n\n    async postSetupPayment(): Promise<string> {\n        const r = await this.send('POST', '/setup-payment', null, true, true);\n        return r as string;\n    }\n\n    // Helpers\n\n    async getActiveBearerToken(): Promise<string> {\n        let accessToken = await this.tokenService.getToken();\n        if (this.tokenService.tokenNeedsRefresh()) {\n            await this.doAuthRefresh();\n            accessToken = await this.tokenService.getToken();\n        }\n        return accessToken;\n    }\n\n    fetch(request: Request): Promise<Response> {\n        if (request.method === 'GET') {\n            request.headers.set('Cache-Control', 'no-store');\n            request.headers.set('Pragma', 'no-cache');\n        }\n        return this.nativeFetch(request);\n    }\n\n    nativeFetch(request: Request): Promise<Response> {\n        return fetch(request);\n    }\n\n    async preValidateSso(identifier: string): Promise<boolean> {\n        if (identifier == null || identifier === '') {\n            throw new Error('Organization Identifier was not provided.');\n        }\n        const headers = new Headers({\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n        const response = await this.fetch(new Request(this.environmentService.getIdentityUrl() + path, {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            headers: headers,\n            method: 'GET',\n        }));\n\n        if (response.status === 200) {\n            return true;\n        } else {\n            const error = await this.handleError(response, false, true);\n            return Promise.reject(error);\n        }\n    }\n\n    protected async doAuthRefresh(): Promise<void> {\n        const refreshToken = await this.tokenService.getRefreshToken();\n        if (refreshToken != null && refreshToken !== '') {\n            return this.doRefreshToken();\n        }\n\n        const clientId = await this.tokenService.getClientId();\n        const clientSecret = await this.tokenService.getClientSecret();\n        if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n            return this.doApiTokenRefresh();\n        }\n\n        throw new Error('Cannot refresh token, no refresh token or api keys are stored');\n    }\n\n    protected async doApiTokenRefresh(): Promise<void> {\n        const clientId = await this.tokenService.getClientId();\n        const clientSecret = await this.tokenService.getClientSecret();\n        if (Utils.isNullOrWhitespace(clientId) || Utils.isNullOrWhitespace(clientSecret) || this.apiKeyRefresh == null) {\n            throw new Error();\n        }\n\n        await this.apiKeyRefresh(clientId, clientSecret);\n    }\n\n    protected async doRefreshToken(): Promise<void> {\n        const refreshToken = await this.tokenService.getRefreshToken();\n        if (refreshToken == null || refreshToken === '') {\n            throw new Error();\n        }\n        const headers = new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const decodedToken = this.tokenService.decodeToken();\n        const response = await this.fetch(new Request(this.environmentService.getIdentityUrl() + '/connect/token', {\n            body: this.qsStringify({\n                grant_type: 'refresh_token',\n                client_id: decodedToken.client_id,\n                refresh_token: refreshToken,\n            }),\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            headers: headers,\n            method: 'POST',\n        }));\n\n        if (response.status === 200) {\n            const responseJson = await response.json();\n            const tokenResponse = new IdentityTokenResponse(responseJson);\n            await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken, null);\n        } else {\n            const error = await this.handleError(response, true, true);\n            return Promise.reject(error);\n        }\n    }\n\n    private async send(method: 'GET' | 'POST' | 'PUT' | 'DELETE', path: string, body: any,\n        authed: boolean, hasResponse: boolean, apiUrl?: string,\n        alterHeaders?: (headers: Headers) => void): Promise<any> {\n        apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const requestInit: RequestInit = {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            method: method,\n        };\n\n        if (authed) {\n            const authHeader = await this.getActiveBearerToken();\n            headers.set('Authorization', 'Bearer ' + authHeader);\n        }\n        if (body != null) {\n            if (typeof body === 'string') {\n                requestInit.body = body;\n                headers.set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n            } else if (typeof body === 'object') {\n                if (body instanceof FormData) {\n                    requestInit.body = body;\n                } else {\n                    headers.set('Content-Type', 'application/json; charset=utf-8');\n                    requestInit.body = JSON.stringify(body);\n                }\n            }\n        }\n        if (hasResponse) {\n            headers.set('Accept', 'application/json');\n        }\n        if (alterHeaders != null) {\n            alterHeaders(headers);\n        }\n\n        requestInit.headers = headers;\n        const response = await this.fetch(new Request(apiUrl + path, requestInit));\n\n        if (hasResponse && response.status === 200) {\n            const responseJson = await response.json();\n            return responseJson;\n        } else if (response.status !== 200) {\n            const error = await this.handleError(response, false, authed);\n            return Promise.reject(error);\n        }\n    }\n\n    private async handleError(response: Response, tokenError: boolean, authed: boolean): Promise<ErrorResponse> {\n        if (authed && ((tokenError && response.status === 400) || response.status === 401 || response.status === 403)) {\n            await this.logoutCallback(true);\n            return null;\n        }\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        } else if (this.isTextResponse(response)) {\n            responseJson = { Message: await response.text() };\n        }\n\n        return new ErrorResponse(responseJson, response.status, tokenError);\n    }\n\n    private qsStringify(params: any): string {\n        return Object.keys(params).map(key => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n        }).join('&');\n    }\n\n    private getCredentials(): RequestCredentials {\n        if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n            return 'include';\n        }\n        return undefined;\n    }\n\n    private addEventParameters(base: string, start: string, end: string, token: string) {\n        if (start != null) {\n            base += ('?start=' + start);\n        }\n        if (end != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('end=' + end);\n        }\n        if (token != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('continuationToken=' + token);\n        }\n        return base;\n    }\n\n    private isJsonResponse(response: Response): boolean {\n        const typeHeader = response.headers.get('content-type');\n        return typeHeader != null && typeHeader.indexOf('application/json') > -1;\n    }\n\n    private isTextResponse(response: Response): boolean {\n        const typeHeader = response.headers.get('content-type');\n        return typeHeader != null && typeHeader.indexOf('text') > -1;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ApiKeyResponse extends BaseResponse {\n    apiKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.apiKey = this.getResponseProperty('ApiKey');\n    }\n}\n","import { FileUploadType } from '../../enums/fileUploadType';\nimport { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n    attachmentId: string;\n    fileUploadType: FileUploadType;\n    cipherResponse: CipherResponse;\n    cipherMiniResponse: CipherResponse;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.attachmentId = this.getResponseProperty('AttachmentId');\n        this.fileUploadType = this.getResponseProperty('FileUploadType');\n        const cipherResponse = this.getResponseProperty('CipherResponse');\n        const cipherMiniResponse = this.getResponseProperty('CipherMiniResponse');\n        this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n        this.cipherMiniResponse = cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n        this.url = this.getResponseProperty('Url');\n    }\n\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { TransactionType } from '../../enums/transactionType';\n\nexport class BillingResponse extends BaseResponse {\n    balance: number;\n    paymentSource: BillingSourceResponse;\n    invoices: BillingInvoiceResponse[] = [];\n    transactions: BillingTransactionResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.balance = this.getResponseProperty('Balance');\n        const paymentSource = this.getResponseProperty('PaymentSource');\n        const transactions = this.getResponseProperty('Transactions');\n        const invoices = this.getResponseProperty('Invoices');\n        this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n        if (transactions != null) {\n            this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n        }\n        if (invoices != null) {\n            this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n        }\n    }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n    type: PaymentMethodType;\n    cardBrand: string;\n    description: string;\n    needsVerification: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.cardBrand = this.getResponseProperty('CardBrand');\n        this.description = this.getResponseProperty('Description');\n        this.needsVerification = this.getResponseProperty('NeedsVerification');\n    }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n    url: string;\n    pdfUrl: string;\n    number: string;\n    paid: boolean;\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.url = this.getResponseProperty('Url');\n        this.pdfUrl = this.getResponseProperty('PdfUrl');\n        this.number = this.getResponseProperty('Number');\n        this.paid = this.getResponseProperty('Paid');\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n    createdDate: string;\n    amount: number;\n    refunded: boolean;\n    partiallyRefunded: boolean;\n    refundedAmount: number;\n    type: TransactionType;\n    paymentMethodType: PaymentMethodType;\n    details: string;\n\n    constructor(response: any) {\n        super(response);\n        this.createdDate = this.getResponseProperty('CreatedDate');\n        this.amount = this.getResponseProperty('Amount');\n        this.refunded = this.getResponseProperty('Refunded');\n        this.partiallyRefunded = this.getResponseProperty('PartiallyRefunded');\n        this.refundedAmount = this.getResponseProperty('RefundedAmount');\n        this.type = this.getResponseProperty('Type');\n        this.paymentMethodType = this.getResponseProperty('PaymentMethodType');\n        this.details = this.getResponseProperty('Details');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class BreachAccountResponse extends BaseResponse {\n    addedDate: string;\n    breachDate: string;\n    dataClasses: string[];\n    description: string;\n    domain: string;\n    isActive: boolean;\n    isVerified: boolean;\n    logoPath: string;\n    modifiedDate: string;\n    name: string;\n    pwnCount: number;\n    title: string;\n\n    constructor(response: any) {\n        super(response);\n        this.addedDate = this.getResponseProperty('AddedDate');\n        this.breachDate = this.getResponseProperty('BreachDate');\n        this.dataClasses = this.getResponseProperty('DataClasses');\n        this.description = this.getResponseProperty('Description');\n        this.domain = this.getResponseProperty('Domain');\n        this.isActive = this.getResponseProperty('IsActive');\n        this.isVerified = this.getResponseProperty('IsVerified');\n        this.logoPath = this.getResponseProperty('LogoPath');\n        this.modifiedDate = this.getResponseProperty('ModifiedDate');\n        this.name = this.getResponseProperty('Name');\n        this.pwnCount = this.getResponseProperty('PwnCount');\n        this.title = this.getResponseProperty('Title');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class GlobalDomainResponse extends BaseResponse {\n    type: number;\n    domains: string[];\n    excluded: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.domains = this.getResponseProperty('Domains');\n        this.excluded = this.getResponseProperty('Excluded');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { DeviceType } from '../../enums/deviceType';\nimport { EventType } from '../../enums/eventType';\n\nexport class EventResponse extends BaseResponse {\n    type: EventType;\n    userId: string;\n    organizationId: string;\n    providerId: string;\n    cipherId: string;\n    collectionId: string;\n    groupId: string;\n    policyId: string;\n    organizationUserId: string;\n    providerUserId: string;\n    providerOrganizationId: string;\n    actingUserId: string;\n    date: string;\n    deviceType: DeviceType;\n    ipAddress: string;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.cipherId = this.getResponseProperty('CipherId');\n        this.collectionId = this.getResponseProperty('CollectionId');\n        this.groupId = this.getResponseProperty('GroupId');\n        this.policyId = this.getResponseProperty('PolicyId');\n        this.organizationUserId = this.getResponseProperty('OrganizationUserId');\n        this.providerUserId = this.getResponseProperty('ProviderUserId');\n        this.providerOrganizationId = this.getResponseProperty('ProviderOrganizationId');\n        this.actingUserId = this.getResponseProperty('ActingUserId');\n        this.date = this.getResponseProperty('Date');\n        this.deviceType = this.getResponseProperty('DeviceType');\n        this.ipAddress = this.getResponseProperty('IpAddress');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class GroupResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.accessAll = this.getResponseProperty('AccessAll');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n    siteKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.siteKey = this.getResponseProperty('HCaptcha_SiteKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class IdentityTokenResponse extends BaseResponse {\n    accessToken: string;\n    expiresIn: number;\n    refreshToken: string;\n    tokenType: string;\n\n    resetMasterPassword: boolean;\n    privateKey: string;\n    key: string;\n    twoFactorToken: string;\n    kdf: KdfType;\n    kdfIterations: number;\n    forcePasswordReset: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.accessToken = response.access_token;\n        this.expiresIn = response.expires_in;\n        this.refreshToken = response.refresh_token;\n        this.tokenType = response.token_type;\n\n        this.resetMasterPassword = this.getResponseProperty('ResetMasterPassword');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.key = this.getResponseProperty('Key');\n        this.twoFactorToken = this.getResponseProperty('TwoFactorToken');\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n        this.forcePasswordReset = this.getResponseProperty('ForcePasswordReset');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n    twoFactorProviders: TwoFactorProviderType[];\n    twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string; }>();\n    captchaToken: string;\n\n    constructor(response: any) {\n        super(response);\n        this.captchaToken = this.getResponseProperty('CaptchaBypassToken');\n        this.twoFactorProviders = this.getResponseProperty('TwoFactorProviders');\n        const twoFactorProviders2 = this.getResponseProperty('TwoFactorProviders2');\n        if (twoFactorProviders2 != null) {\n            for (const prop in twoFactorProviders2) {\n                if (twoFactorProviders2.hasOwnProperty(prop)) {\n                    this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n                }\n            }\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ListResponse<T> extends BaseResponse {\n    data: T[];\n    continuationToken: string;\n\n    constructor(response: any, t: new (dataResponse: any) => T) {\n        super(response);\n        const data = this.getResponseProperty('Data');\n        this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n        this.continuationToken = this.getResponseProperty('ContinuationToken');\n    }\n}\n","import { SsoConfigApi } from '../../api/ssoConfigApi';\nimport { BaseResponse } from '../baseResponse';\n\nexport class OrganizationSsoResponse extends BaseResponse {\n    enabled: boolean;\n    data: SsoConfigApi;\n    urls: SsoUrls;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.data = new SsoConfigApi(this.getResponseProperty('Data'));\n        this.urls = new SsoUrls(this.getResponseProperty('Urls'));\n    }\n}\n\nclass SsoUrls extends BaseResponse {\n    callbackPath: string;\n    signedOutCallbackPath: string;\n    spEntityId: string;\n    spMetadataUrl: string;\n    spAcsUrl: string;\n\n    constructor(response: any) {\n        super(response);\n        this.callbackPath = this.getResponseProperty('CallbackPath');\n        this.signedOutCallbackPath = this.getResponseProperty('SignedOutCallbackPath');\n        this.spEntityId = this.getResponseProperty('SpEntityId');\n        this.spMetadataUrl = this.getResponseProperty('SpMetadataUrl');\n        this.spAcsUrl = this.getResponseProperty('SpAcsUrl');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nenum SsoType {\n    OpenIdConnect = 1,\n    Saml2 = 2,\n}\n\nenum OpenIdConnectRedirectBehavior {\n    RedirectGet = 0,\n    FormPost = 1,\n}\n\nenum Saml2BindingType {\n    HttpRedirect = 1,\n    HttpPost = 2,\n    Artifact = 4,\n}\n\nenum Saml2NameIdFormat {\n    NotConfigured = 0,\n    Unspecified = 1,\n    EmailAddress = 2,\n    X509SubjectName = 3,\n    WindowsDomainQualifiedName = 4,\n    KerberosPrincipalName = 5,\n    EntityIdentifier = 6,\n    Persistent = 7,\n    Transient = 8,\n}\n\nenum Saml2SigningBehavior {\n    IfIdpWantAuthnRequestsSigned = 0,\n    Always = 1,\n    Never = 3,\n}\n\nexport class SsoConfigApi extends BaseResponse {\n    configType: SsoType;\n\n    // OpenId\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n\n    // SAML\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: boolean;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpArtifactResolutionServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpDisableOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n\n        this.configType = this.getResponseProperty('ConfigType');\n\n        this.authority = this.getResponseProperty('Authority');\n        this.clientId = this.getResponseProperty('ClientId');\n        this.clientSecret = this.getResponseProperty('ClientSecret');\n        this.metadataAddress = this.getResponseProperty('MetadataAddress');\n        this.redirectBehavior = this.getResponseProperty('RedirectBehavior');\n        this.getClaimsFromUserInfoEndpoint = this.getResponseProperty('GetClaimsFromUserInfoEndpoint');\n        this.additionalScopes = this.getResponseProperty('AdditionalScopes');\n        this.additionalUserIdClaimTypes = this.getResponseProperty('AdditionalUserIdClaimTypes');\n        this.additionalEmailClaimTypes = this.getResponseProperty('AdditionalEmailClaimTypes');\n        this.additionalNameClaimTypes = this.getResponseProperty('AdditionalNameClaimTypes');\n        this.acrValues = this.getResponseProperty('AcrValues');\n        this.expectedReturnAcrValue = this.getResponseProperty('ExpectedReturnAcrValue');\n\n        this.spNameIdFormat = this.getResponseProperty('SpNameIdFormat');\n        this.spOutboundSigningAlgorithm = this.getResponseProperty('SpOutboundSigningAlgorithm');\n        this.spSigningBehavior = this.getResponseProperty('SpSigningBehavior');\n        this.spMinIncomingSigningAlgorithm = this.getResponseProperty('SpMinIncomingSigningAlgorithm');\n        this.spWantAssertionsSigned = this.getResponseProperty('SpWantAssertionsSigned');\n        this.spValidateCertificates = this.getResponseProperty('SpValidateCertificates');\n\n        this.idpEntityId = this.getResponseProperty('IdpEntityId');\n        this.idpBindingType = this.getResponseProperty('IdpBindingType');\n        this.idpSingleSignOnServiceUrl = this.getResponseProperty('IdpSingleSignOnServiceUrl');\n        this.idpSingleLogoutServiceUrl = this.getResponseProperty('IdpSingleLogoutServiceUrl');\n        this.idpArtifactResolutionServiceUrl = this.getResponseProperty('IdpArtifactResolutionServiceUrl');\n        this.idpX509PublicCert = this.getResponseProperty('IdpX509PublicCert');\n        this.idpOutboundSigningAlgorithm = this.getResponseProperty('IdpOutboundSigningAlgorithm');\n        this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty('IdpAllowUnsolicitedAuthnResponse');\n        this.idpDisableOutboundLogoutRequests = this.getResponseProperty('IdpDisableOutboundLogoutRequests');\n        this.idpWantAuthnRequestsSigned = this.getResponseProperty('IdpWantAuthnRequestsSigned');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n    id: string;\n    resetPasswordEnabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.resetPasswordEnabled = this.getResponseProperty('ResetPasswordEnabled');\n    }\n}\n","import { KeysResponse } from './keysResponse';\n\nexport class OrganizationKeysResponse extends KeysResponse {\n    constructor(response: any) {\n        super(response);\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class KeysResponse extends BaseResponse {\n    privateKey: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.publicKey = this.getResponseProperty('PublicKey');\n    }\n}\n","import { OrganizationResponse } from './organizationResponse';\nimport {\n    BillingSubscriptionResponse,\n    BillingSubscriptionUpcomingInvoiceResponse,\n} from './subscriptionResponse';\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n    storageName: string;\n    storageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    expiration: string;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        const subscription = this.getResponseProperty('Subscription');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n        this.expiration = this.getResponseProperty('Expiration');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n    id: string;\n    error: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.error = this.getResponseProperty('Error');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nimport { PermissionsApi } from '../api/permissionsApi';\n\nimport { KdfType } from '../../enums/kdfType';\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class OrganizationUserResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    type: OrganizationUserType;\n    status: OrganizationUserStatusType;\n    accessAll: boolean;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.permissions = new PermissionsApi(this.getResponseProperty('Permissions'));\n        this.accessAll = this.getResponseProperty('AccessAll');\n        this.resetPasswordEnrolled = this.getResponseProperty('ResetPasswordEnrolled');\n    }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n    name: string;\n    email: string;\n    twoFactorEnabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n    }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n    kdf: KdfType;\n    kdfIterations: number;\n    resetPasswordKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n        this.resetPasswordKey = this.getResponseProperty('ResetPasswordKey');\n        this.encryptedPrivateKey = this.getResponseProperty('EncryptedPrivateKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileResponse } from './profileResponse';\n\nexport class PaymentResponse extends BaseResponse {\n    userProfile: ProfileResponse;\n    paymentIntentClientSecret: string;\n    success: boolean;\n\n    constructor(response: any) {\n        super(response);\n        const userProfile = this.getResponseProperty('UserProfile');\n        if (userProfile != null) {\n            this.userProfile = new ProfileResponse(userProfile);\n        }\n        this.paymentIntentClientSecret = this.getResponseProperty('PaymentIntentClientSecret');\n        this.success = this.getResponseProperty('Success');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n    id: string;\n    name: string;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    key: string;\n    hasPublicAndPrivateKeys: boolean;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    providerId: string;\n    providerName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.usePolicies = this.getResponseProperty('UsePolicies');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useSso = this.getResponseProperty('UseSso');\n        this.useResetPassword = this.getResponseProperty('UseResetPassword');\n        this.selfHost = this.getResponseProperty('SelfHost');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.key = this.getResponseProperty('Key');\n        this.hasPublicAndPrivateKeys = this.getResponseProperty('HasPublicAndPrivateKeys');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n        this.ssoBound = this.getResponseProperty('SsoBound');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.permissions = new PermissionsApi(this.getResponseProperty('permissions'));\n        this.resetPasswordEnrolled = this.getResponseProperty('ResetPasswordEnrolled');\n        this.userId = this.getResponseProperty('UserId');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.providerName = this.getResponseProperty('ProviderName');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class ProfileProviderOrganizationResponse extends BaseResponse {\n    id: string;\n    name: string;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    key: string;\n    hasPublicAndPrivateKeys: boolean;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    providerId: string;\n    providerName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.usePolicies = this.getResponseProperty('UsePolicies');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useSso = this.getResponseProperty('UseSso');\n        this.useResetPassword = this.getResponseProperty('UseResetPassword');\n        this.selfHost = this.getResponseProperty('SelfHost');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.key = this.getResponseProperty('Key');\n        this.hasPublicAndPrivateKeys = this.getResponseProperty('HasPublicAndPrivateKeys');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n        this.ssoBound = this.getResponseProperty('SsoBound');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.permissions = new PermissionsApi(this.getResponseProperty('permissions'));\n        this.resetPasswordEnrolled = this.getResponseProperty('ResetPasswordEnrolled');\n        this.userId = this.getResponseProperty('UserId');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.providerName = this.getResponseProperty('ProviderName');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { ProviderUserStatusType } from '../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../enums/providerUserType';\n\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class ProfileProviderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    key: string;\n    status: ProviderUserStatusType;\n    type: ProviderUserType;\n    enabled: boolean;\n    permissions: PermissionsApi;\n    userId: string;\n    useEvents: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.key = this.getResponseProperty('Key');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n        this.permissions = new PermissionsApi(this.getResponseProperty('permissions'));\n        this.userId = this.getResponseProperty('UserId');\n        this.useEvents = this.getResponseProperty('UseEvents');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class PreloginResponse extends BaseResponse {\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n","import { BaseResponse } from '../baseResponse';\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n    id: string;\n    providerId: string;\n    organizationId: string;\n    key: string;\n    settings: string;\n    creationDate: string;\n    revisionDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.key = this.getResponseProperty('Key');\n        this.settings = this.getResponseProperty('Settings');\n        this.creationDate = this.getResponseProperty('CreationDate');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n    }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n    organizationName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.organizationName = this.getResponseProperty('OrganizationName');\n    }\n}\n","import { BaseResponse } from '../baseResponse';\n\nexport class ProviderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    businessName: string;\n    billingEmail: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.businessName = this.getResponseProperty('BusinessName');\n        this.billingEmail = this.getResponseProperty('BillingEmail');\n    }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from '../organizationUserBulkPublicKeyResponse';\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {\n\n}\n","import { BaseResponse } from '../baseResponse';\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n    id: string;\n    error: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.error = this.getResponseProperty('Error');\n    }\n}\n","import { BaseResponse } from '../baseResponse';\n\nimport { PermissionsApi } from '../../api/permissionsApi';\n\nimport { ProviderUserStatusType } from '../../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../../enums/providerUserType';\n\nexport class ProviderUserResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    type: ProviderUserType;\n    status: ProviderUserStatusType;\n    permissions: PermissionsApi;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.permissions = new PermissionsApi(this.getResponseProperty('Permissions'));\n    }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n    name: string;\n    email: string;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nexport class SendAccessResponse extends BaseResponse {\n    id: string;\n    type: SendType;\n    name: string;\n    file: SendFileApi;\n    text: SendTextApi;\n    expirationDate: Date;\n    creatorIdentifier: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n\n        const text = this.getResponseProperty('Text');\n        if (text != null) {\n            this.text = new SendTextApi(text);\n        }\n\n        const file = this.getResponseProperty('File');\n        if (file != null) {\n            this.file = new SendFileApi(file);\n        }\n\n        this.expirationDate = this.getResponseProperty('ExpirationDate');\n        this.creatorIdentifier = this.getResponseProperty('CreatorIdentifier');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n\n    id: string = null;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.url = this.getResponseProperty('Url');\n    }\n}\n","import { FileUploadType } from '../../enums/fileUploadType';\n\nimport { BaseResponse } from './baseResponse';\nimport { SendResponse } from './sendResponse';\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n\n    fileUploadType: FileUploadType;\n    sendResponse: SendResponse;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.fileUploadType = this.getResponseProperty('FileUploadType');\n        const sendResponse = this.getResponseProperty('SendResponse');\n        this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n        this.url = this.getResponseProperty('Url');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\nimport { CollectionDetailsResponse } from './collectionResponse';\nimport { DomainsResponse } from './domainsResponse';\nimport { FolderResponse } from './folderResponse';\nimport { PolicyResponse } from './policyResponse';\nimport { ProfileResponse } from './profileResponse';\nimport { SendResponse } from './sendResponse';\n\nexport class SyncResponse extends BaseResponse {\n    profile?: ProfileResponse;\n    folders: FolderResponse[] = [];\n    collections: CollectionDetailsResponse[] = [];\n    ciphers: CipherResponse[] = [];\n    domains?: DomainsResponse;\n    policies?: PolicyResponse[] = [];\n    sends: SendResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n\n        const profile = this.getResponseProperty('Profile');\n        if (profile != null) {\n            this.profile = new ProfileResponse(profile);\n        }\n\n        const folders = this.getResponseProperty('Folders');\n        if (folders != null) {\n            this.folders = folders.map((f: any) => new FolderResponse(f));\n        }\n\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n        }\n\n        const ciphers = this.getResponseProperty('Ciphers');\n        if (ciphers != null) {\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n        }\n\n        const domains = this.getResponseProperty('Domains');\n        if (domains != null) {\n            this.domains = new DomainsResponse(domains);\n        }\n\n        const policies = this.getResponseProperty('Policies');\n        if (policies != null) {\n            this.policies = policies.map((p: any) => new PolicyResponse(p));\n        }\n\n        const sends = this.getResponseProperty('Sends');\n        if (sends != null) {\n            this.sends = sends.map((s: any) => new SendResponse(s));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TaxInfoResponse extends BaseResponse {\n    taxId: string;\n    taxIdType: string;\n    line1: string;\n    line2: string;\n    city: string;\n    state: string;\n    country: string;\n    postalCode: string;\n\n    constructor(response: any) {\n        super(response);\n        this.taxId = this.getResponseProperty('TaxIdNumber');\n        this.taxIdType = this.getResponseProperty('TaxIdType');\n        this.line1 = this.getResponseProperty('Line1');\n        this.line2 = this.getResponseProperty('Line2');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TaxRateResponse extends BaseResponse {\n    id: string;\n    country: string;\n    state: string;\n    postalCode: string;\n    rate: number;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.country = this.getResponseProperty('Country');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.rate = this.getResponseProperty('Rate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n    enabled: boolean;\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n    enabled: boolean;\n    host: string;\n    secretKey: string;\n    integrationKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.host = this.getResponseProperty('Host');\n        this.secretKey = this.getResponseProperty('SecretKey');\n        this.integrationKey = this.getResponseProperty('IntegrationKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n    enabled: boolean;\n    email: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.email = this.getResponseProperty('Email');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n    enabled: boolean;\n    type: TwoFactorProviderType;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n    code: string;\n\n    constructor(response: any) {\n        super(response);\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n    enabled: boolean;\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key1 = this.getResponseProperty('Key1');\n        this.key2 = this.getResponseProperty('Key2');\n        this.key3 = this.getResponseProperty('Key3');\n        this.key4 = this.getResponseProperty('Key4');\n        this.key5 = this.getResponseProperty('Key5');\n        this.nfc = this.getResponseProperty('Nfc');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class UserKeyResponse extends BaseResponse {\n    userId: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.publicKey = this.getResponseProperty('PublicKey');\n    }\n}\n","import { Utils } from '../misc/utils';\n\nimport { AppIdService as AppIdServiceAbstraction } from '../abstractions/appId.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class AppIdService implements AppIdServiceAbstraction {\n    constructor(private storageService: StorageService) {\n    }\n\n    getAppId(): Promise<string> {\n        return this.makeAndGetAppId('appId');\n    }\n\n    getAnonymousAppId(): Promise<string> {\n        return this.makeAndGetAppId('anonymousAppId');\n    }\n\n    private async makeAndGetAppId(key: string) {\n        const existingId = await this.storageService.get<string>(key);\n        if (existingId != null) {\n            return existingId;\n        }\n\n        const guid = Utils.newGuid();\n        await this.storageService.save(key, guid);\n        return guid;\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from '../abstractions/audit.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\n\nimport { throttle } from '../misc/throttle';\nimport { Utils } from '../misc/utils';\n\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nconst PwnedPasswordsApi = 'https://api.pwnedpasswords.com/range/';\n\nexport class AuditService implements AuditServiceAbstraction {\n    constructor(private cryptoFunctionService: CryptoFunctionService, private apiService: ApiService) { }\n\n    @throttle(100, () => 'passwordLeaked')\n    async passwordLeaked(password: string): Promise<number> {\n        const hashBytes = await this.cryptoFunctionService.hash(password, 'sha1');\n        const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n        const hashStart = hash.substr(0, 5);\n        const hashEnding = hash.substr(5);\n\n        const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n        const leakedHashes = await response.text();\n        const match = leakedHashes.split(/\\r?\\n/).find(v => {\n            return v.split(':')[0] === hashEnding;\n        });\n\n        return match != null ? parseInt(match.split(':')[1], 10) : 0;\n    }\n\n    async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n        try {\n            return await this.apiService.getHibpBreach(username);\n        } catch (e) {\n            const error = e as ErrorResponse;\n            if (error.statusCode === 404) {\n                return [];\n            }\n            throw new Error();\n        }\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n    return <T>(target: any, propertyKey: string | symbol,\n        descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>) => {\n        const originalMethod: () => Promise<T> = descriptor.value;\n        const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n        const getThrottles = (obj: any) => {\n            let throttles = allThrottles.get(obj);\n            if (throttles != null) {\n                return throttles;\n            }\n            throttles = new Map<string, (() => void)[]>();\n            allThrottles.set(obj, throttles);\n            return throttles;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const throttles = getThrottles(this);\n                const argsThrottleKey = throttleKey(args);\n                let queue = throttles.get(argsThrottleKey);\n                if (queue == null) {\n                    queue = [];\n                    throttles.set(argsThrottleKey, queue);\n                }\n\n                return new Promise<T>((resolve, reject) => {\n                    const exec = () => {\n                        const onFinally = () => {\n                            queue.splice(queue.indexOf(exec), 1);\n                            if (queue.length >= limit) {\n                                queue[limit - 1]();\n                            } else if (queue.length === 0) {\n                                throttles.delete(argsThrottleKey);\n                                if (throttles.size === 0) {\n                                    allThrottles.delete(this);\n                                }\n                            }\n                        };\n                        originalMethod.apply(this, args).then((val: any) => {\n                            onFinally();\n                            return val;\n                        }).catch((err: any) => {\n                            onFinally();\n                            throw err;\n                        }).then(resolve, reject);\n                    };\n                    queue.push(exec);\n                    if (queue.length <= limit) {\n                        exec();\n                    }\n                });\n            },\n        };\n    };\n}\n","import { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Attachment } from '../models/domain/attachment';\nimport { Card } from '../models/domain/card';\nimport { Cipher } from '../models/domain/cipher';\nimport Domain from '../models/domain/domainBase';\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { Field } from '../models/domain/field';\nimport { Identity } from '../models/domain/identity';\nimport { Login } from '../models/domain/login';\nimport { LoginUri } from '../models/domain/loginUri';\nimport { Password } from '../models/domain/password';\nimport { SecureNote } from '../models/domain/secureNote';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nimport { AttachmentView } from '../models/view/attachmentView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\nimport { View } from '../models/view/view';\n\nimport { SortedCiphersCache } from '../models/domain/sortedCiphersCache';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService as CipherServiceAbstraction } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FileUploadService } from '../abstractions/fileUpload.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    ciphersPrefix: 'ciphers_',\n    localData: 'sitesLocalData',\n    neverDomains: 'neverDomains',\n};\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n    ['google.com', new Set(['script.google.com'])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n    // tslint:disable-next-line\n    _decryptedCipherCache: CipherView[];\n\n    private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(this.sortCiphersByLastUsed);\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private settingsService: SettingsService, private apiService: ApiService,\n        private fileUploadService: FileUploadService, private storageService: StorageService,\n        private i18nService: I18nService, private searchService: () => SearchService) {\n    }\n\n    get decryptedCipherCache() {\n        return this._decryptedCipherCache;\n    }\n    set decryptedCipherCache(value: CipherView[]) {\n        this._decryptedCipherCache = value;\n        if (this.searchService != null) {\n            if (value == null) {\n                this.searchService().clearIndex();\n            } else {\n                this.searchService().indexCiphers();\n            }\n        }\n    }\n\n    clearCache(): void {\n        this.decryptedCipherCache = null;\n        this.sortedCiphersCache.clear();\n    }\n\n    async encrypt(model: CipherView, key?: SymmetricCryptoKey, originalCipher: Cipher = null): Promise<Cipher> {\n        // Adjust password history\n        if (model.id != null) {\n            if (originalCipher == null) {\n                originalCipher = await this.get(model.id);\n            }\n            if (originalCipher != null) {\n                const existingCipher = await originalCipher.decrypt();\n                model.passwordHistory = existingCipher.passwordHistory || [];\n                if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n                    if (existingCipher.login.password != null && existingCipher.login.password !== '' &&\n                        existingCipher.login.password !== model.login.password) {\n                        const ph = new PasswordHistoryView();\n                        ph.password = existingCipher.login.password;\n                        ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n                        model.passwordHistory.splice(0, 0, ph);\n                    } else {\n                        model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n                    }\n                }\n                if (existingCipher.hasFields) {\n                    const existingHiddenFields = existingCipher.fields.filter(f => f.type === FieldType.Hidden &&\n                        f.name != null && f.name !== '' && f.value != null && f.value !== '');\n                    const hiddenFields = model.fields == null ? [] :\n                        model.fields.filter(f => f.type === FieldType.Hidden && f.name != null && f.name !== '');\n                    existingHiddenFields.forEach(ef => {\n                        const matchedField = hiddenFields.find(f => f.name === ef.name);\n                        if (matchedField == null || matchedField.value !== ef.value) {\n                            const ph = new PasswordHistoryView();\n                            ph.password = ef.name + ': ' + ef.value;\n                            ph.lastUsedDate = new Date();\n                            model.passwordHistory.splice(0, 0, ph);\n                        }\n                    });\n                }\n            }\n            if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n                model.passwordHistory = null;\n            } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n                // only save last 5 history\n                model.passwordHistory = model.passwordHistory.slice(0, 5);\n            }\n        }\n\n        const cipher = new Cipher();\n        cipher.id = model.id;\n        cipher.folderId = model.folderId;\n        cipher.favorite = model.favorite;\n        cipher.organizationId = model.organizationId;\n        cipher.type = model.type;\n        cipher.collectionIds = model.collectionIds;\n        cipher.revisionDate = model.revisionDate;\n        cipher.reprompt = model.reprompt;\n\n        if (key == null && cipher.organizationId != null) {\n            key = await this.cryptoService.getOrgKey(cipher.organizationId);\n            if (key == null) {\n                throw new Error('Cannot encrypt cipher for organization. No key.');\n            }\n        }\n        await Promise.all([\n            this.encryptObjProperty(model, cipher, {\n                name: null,\n                notes: null,\n            }, key),\n            this.encryptCipherData(cipher, model, key),\n            this.encryptFields(model.fields, key).then(fields => {\n                cipher.fields = fields;\n            }),\n            this.encryptPasswordHistories(model.passwordHistory, key).then(ph => {\n                cipher.passwordHistory = ph;\n            }),\n            this.encryptAttachments(model.attachments, key).then(attachments => {\n                cipher.attachments = attachments;\n            }),\n        ]);\n\n        return cipher;\n    }\n\n    async encryptAttachments(attachmentsModel: AttachmentView[], key: SymmetricCryptoKey): Promise<Attachment[]> {\n        if (attachmentsModel == null || attachmentsModel.length === 0) {\n            return null;\n        }\n\n        const promises: Promise<any>[] = [];\n        const encAttachments: Attachment[] = [];\n        attachmentsModel.forEach(async model => {\n            const attachment = new Attachment();\n            attachment.id = model.id;\n            attachment.size = model.size;\n            attachment.sizeName = model.sizeName;\n            attachment.url = model.url;\n            const promise = this.encryptObjProperty(model, attachment, {\n                fileName: null,\n            }, key).then(async () => {\n                if (model.key != null) {\n                    attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n                }\n                encAttachments.push(attachment);\n            });\n            promises.push(promise);\n        });\n\n        await Promise.all(promises);\n        return encAttachments;\n    }\n\n    async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n        if (!fieldsModel || !fieldsModel.length) {\n            return null;\n        }\n\n        const self = this;\n        const encFields: Field[] = [];\n        await fieldsModel.reduce((promise, field) => {\n            return promise.then(() => {\n                return self.encryptField(field, key);\n            }).then((encField: Field) => {\n                encFields.push(encField);\n            });\n        }, Promise.resolve());\n\n        return encFields;\n    }\n\n    async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n        const field = new Field();\n        field.type = fieldModel.type;\n        // normalize boolean type field values\n        if (fieldModel.type === FieldType.Boolean && fieldModel.value !== 'true') {\n            fieldModel.value = 'false';\n        }\n\n        await this.encryptObjProperty(fieldModel, field, {\n            name: null,\n            value: null,\n        }, key);\n\n        return field;\n    }\n\n    async encryptPasswordHistories(phModels: PasswordHistoryView[], key: SymmetricCryptoKey): Promise<Password[]> {\n        if (!phModels || !phModels.length) {\n            return null;\n        }\n\n        const self = this;\n        const encPhs: Password[] = [];\n        await phModels.reduce((promise, ph) => {\n            return promise.then(() => {\n                return self.encryptPasswordHistory(ph, key);\n            }).then((encPh: Password) => {\n                encPhs.push(encPh);\n            });\n        }, Promise.resolve());\n\n        return encPhs;\n    }\n\n    async encryptPasswordHistory(phModel: PasswordHistoryView, key: SymmetricCryptoKey): Promise<Password> {\n        const ph = new Password();\n        ph.lastUsedDate = phModel.lastUsedDate;\n\n        await this.encryptObjProperty(phModel, ph, {\n            password: null,\n        }, key);\n\n        return ph;\n    }\n\n    async get(id: string): Promise<Cipher> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n    }\n\n    async getAll(): Promise<Cipher[]> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        const response: Cipher[] = [];\n        for (const id in ciphers) {\n            if (ciphers.hasOwnProperty(id)) {\n                response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n            }\n        }\n        return response;\n    }\n\n    @sequentialize(() => 'getAllDecrypted')\n    async getAllDecrypted(): Promise<CipherView[]> {\n        if (this.decryptedCipherCache != null) {\n            const userId = await this.userService.getUserId();\n            if (this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId)\n            {\n                await this.searchService().indexCiphers(userId, this.decryptedCipherCache);\n            }\n            return this.decryptedCipherCache;\n        }\n\n        const decCiphers: CipherView[] = [];\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const promises: any[] = [];\n        const ciphers = await this.getAll();\n        ciphers.forEach(cipher => {\n            promises.push(cipher.decrypt().then(c => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.getLocaleSortingFunction());\n        this.decryptedCipherCache = decCiphers;\n        return this.decryptedCipherCache;\n    }\n\n    async getAllDecryptedForGrouping(groupingId: string, folder: boolean = true): Promise<CipherView[]> {\n        const ciphers = await this.getAllDecrypted();\n\n        return ciphers.filter(cipher => {\n            if (cipher.isDeleted) {\n                return false;\n            }\n            if (folder && cipher.folderId === groupingId) {\n                return true;\n            } else if (!folder && cipher.collectionIds != null && cipher.collectionIds.indexOf(groupingId) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n\n    async getAllDecryptedForUrl(url: string, includeOtherTypes?: CipherType[],\n        defaultMatch: UriMatchType = null): Promise<CipherView[]> {\n        if (url == null && includeOtherTypes == null) {\n            return Promise.resolve([]);\n        }\n\n        const domain = Utils.getDomain(url);\n        const eqDomainsPromise = domain == null ? Promise.resolve([]) :\n            this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n                let matches: any[] = [];\n                eqDomains.forEach(eqDomain => {\n                    if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                        matches = matches.concat(eqDomain);\n                    }\n                });\n\n                if (!matches.length) {\n                    matches.push(domain);\n                }\n\n                return matches;\n            });\n\n        const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n        const matchingDomains = result[0];\n        const ciphers = result[1];\n\n        if (defaultMatch == null) {\n            defaultMatch = await this.storageService.get<UriMatchType>(ConstantsService.defaultUriMatch);\n            if (defaultMatch == null) {\n                defaultMatch = UriMatchType.Domain;\n            }\n        }\n\n        return ciphers.filter(cipher => {\n            if (cipher.deletedDate != null) {\n                return false;\n            }\n            if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n                return true;\n            }\n\n            if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n                for (let i = 0; i < cipher.login.uris.length; i++) {\n                    const u = cipher.login.uris[i];\n                    if (u.uri == null) {\n                        continue;\n                    }\n\n                    const match = u.match == null ? defaultMatch : u.match;\n                    switch (match) {\n                        case UriMatchType.Domain:\n                            if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                                if (DomainMatchBlacklist.has(u.domain)) {\n                                    const domainUrlHost = Utils.getHost(url);\n                                    if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                                        return true;\n                                    }\n                                } else {\n                                    return true;\n                                }\n                            }\n                            break;\n                        case UriMatchType.Host:\n                            const urlHost = Utils.getHost(url);\n                            if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.Exact:\n                            if (url === u.uri) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.StartsWith:\n                            if (url.startsWith(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.RegularExpression:\n                            try {\n                                const regex = new RegExp(u.uri, 'i');\n                                if (regex.test(url)) {\n                                    return true;\n                                }\n                            } catch { }\n                            break;\n                        case UriMatchType.Never:\n                        default:\n                            break;\n                    }\n                }\n            }\n\n            return false;\n        });\n    }\n\n    async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n        const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n        if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n            const decCiphers: CipherView[] = [];\n            const promises: any[] = [];\n            ciphers.data.forEach(r => {\n                const data = new CipherData(r);\n                const cipher = new Cipher(data);\n                promises.push(cipher.decrypt().then(c => decCiphers.push(c)));\n            });\n            await Promise.all(promises);\n            decCiphers.sort(this.getLocaleSortingFunction());\n            return decCiphers;\n        } else {\n            return [];\n        }\n    }\n\n    async getLastUsedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n        return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n    }\n\n    async getLastLaunchedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n        return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n    }\n\n    async getNextCipherForUrl(url: string): Promise<CipherView> {\n        return this.getCipherForUrl(url, false, false, false);\n    }\n\n    updateLastUsedIndexForUrl(url: string) {\n        this.sortedCiphersCache.updateLastUsedIndex(url);\n    }\n\n    async updateLastUsedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastUsedDate = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async updateLastLaunchedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastLaunched = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async saveNeverDomain(domain: string): Promise<void> {\n        if (domain == null) {\n            return;\n        }\n\n        let domains = await this.storageService.get<{ [id: string]: any; }>(Keys.neverDomains);\n        if (!domains) {\n            domains = {};\n        }\n        domains[domain] = null;\n        await this.storageService.save(Keys.neverDomains, domains);\n    }\n\n    async saveWithServer(cipher: Cipher): Promise<any> {\n        let response: CipherResponse;\n        if (cipher.id == null) {\n            if (cipher.collectionIds != null) {\n                const request = new CipherCreateRequest(cipher);\n                response = await this.apiService.postCipherCreate(request);\n            } else {\n                const request = new CipherRequest(cipher);\n                response = await this.apiService.postCipher(request);\n            }\n            cipher.id = response.id;\n        } else {\n            const request = new CipherRequest(cipher);\n            response = await this.apiService.putCipher(cipher.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, cipher.collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareWithServer(cipher: CipherView, organizationId: string, collectionIds: string[]): Promise<any> {\n        const attachmentPromises: Promise<any>[] = [];\n        if (cipher.attachments != null) {\n            cipher.attachments.forEach(attachment => {\n                if (attachment.key == null) {\n                    attachmentPromises.push(this.shareAttachmentWithServer(attachment, cipher.id, organizationId));\n                }\n            });\n        }\n        await Promise.all(attachmentPromises);\n\n        cipher.organizationId = organizationId;\n        cipher.collectionIds = collectionIds;\n        const encCipher = await this.encrypt(cipher);\n        const request = new CipherShareRequest(encCipher);\n        const response = await this.apiService.putShareCipher(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareManyWithServer(ciphers: CipherView[], organizationId: string, collectionIds: string[]): Promise<any> {\n        const promises: Promise<any>[] = [];\n        const encCiphers: Cipher[] = [];\n        for (const cipher of ciphers) {\n            cipher.organizationId = organizationId;\n            cipher.collectionIds = collectionIds;\n            promises.push(this.encrypt(cipher).then(c => {\n                encCiphers.push(c);\n            }));\n        }\n        await Promise.all(promises);\n        const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n        await this.apiService.putShareCiphers(request);\n        const userId = await this.userService.getUserId();\n        await this.upsert(encCiphers.map(c => c.toCipherData(userId)));\n    }\n\n    saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(unencryptedFile);\n            reader.onload = async (evt: any) => {\n                try {\n                    const cData = await this.saveAttachmentRawWithServer(cipher,\n                        unencryptedFile.name, evt.target.result, admin);\n                    resolve(cData);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = evt => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    async saveAttachmentRawWithServer(cipher: Cipher, filename: string,\n        data: ArrayBuffer, admin = false): Promise<Cipher> {\n        const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n        const encFileName = await this.cryptoService.encrypt(filename, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n        const request: AttachmentRequest = {\n            key: dataEncKey[1].encryptedString,\n            fileName: encFileName.encryptedString,\n            fileSize: encData.buffer.byteLength,\n            adminRequest: admin,\n        };\n\n        let response: CipherResponse;\n        try {\n            const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n            response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n            await this.fileUploadService.uploadCipherAttachment(admin, uploadDataResponse, encFileName, encData);\n        } catch (e) {\n            if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404 || (e as ErrorResponse).statusCode === 405) {\n                response = await this.legacyServerAttachmentFileUpload(admin, cipher.id, encFileName, encData, dataEncKey[1]);\n            } else if (e instanceof ErrorResponse) {\n                throw new Error((e as ErrorResponse).getSingleMessage());\n            } else {\n                throw e;\n            }\n        }\n\n        const userId = await this.userService.getUserId();\n        const cData = new CipherData(response, userId, cipher.collectionIds);\n        if (!admin) {\n            await this.upsert(cData);\n        }\n        return new Cipher(cData);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async legacyServerAttachmentFileUpload(admin: boolean, cipherId: string, encFileName: EncString,\n        encData: EncArrayBuffer, key: EncString) {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData.buffer], { type: 'application/octet-stream' });\n            fd.append('key', key.encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', key.encryptedString);\n                fd.append('data', Buffer.from(encData.buffer) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        let response: CipherResponse;\n        try {\n            if (admin) {\n                response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n            } else {\n                response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n            }\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n\n        return response;\n    }\n\n    async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n        const request = new CipherCollectionsRequest(cipher.collectionIds);\n        await this.apiService.putCipherCollections(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = cipher.toCipherData(userId);\n        await this.upsert(data);\n    }\n\n    async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        if (cipher instanceof CipherData) {\n            const c = cipher as CipherData;\n            ciphers[c.id] = c;\n        } else {\n            (cipher as CipherData[]).forEach(c => {\n                ciphers[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async replace(ciphers: { [id: string]: CipherData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.ciphersPrefix + userId);\n        this.clearCache();\n    }\n\n    async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n        await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        ids.forEach(id => {\n            if (ciphers.hasOwnProperty(id)) {\n                ciphers[id].folderId = folderId;\n            }\n        });\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (ciphers[id] == null) {\n                return;\n            }\n            delete ciphers[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete ciphers[i];\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteCipher(id);\n        await this.delete(id);\n    }\n\n    async deleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.delete(ids);\n    }\n\n    async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n\n        if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n            return;\n        }\n\n        for (let i = 0; i < ciphers[id].attachments.length; i++) {\n            if (ciphers[id].attachments[i].id === attachmentId) {\n                ciphers[id].attachments.splice(i, 1);\n            }\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n        try {\n            await this.apiService.deleteCipherAttachment(id, attachmentId);\n        } catch (e) {\n            return Promise.reject((e as ErrorResponse).getSingleMessage());\n        }\n        await this.deleteAttachment(id, attachmentId);\n    }\n\n    sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n        const aLastUsed = a.localData && a.localData.lastUsedDate ? a.localData.lastUsedDate as number : null;\n        const bLastUsed = b.localData && b.localData.lastUsedDate ? b.localData.lastUsedDate as number : null;\n\n        const bothNotNull = aLastUsed != null && bLastUsed != null;\n        if (bothNotNull && aLastUsed < bLastUsed) {\n            return 1;\n        }\n        if (aLastUsed != null && bLastUsed == null) {\n            return -1;\n        }\n\n        if (bothNotNull && aLastUsed > bLastUsed) {\n            return -1;\n        }\n        if (bLastUsed != null && aLastUsed == null) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n        const result = this.sortCiphersByLastUsed(a, b);\n        if (result !== 0) {\n            return result;\n        }\n\n        return this.getLocaleSortingFunction()(a, b);\n    }\n\n    getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n        return (a, b) => {\n            let aName = a.name;\n            let bName = b.name;\n\n            if (aName == null && bName != null) {\n                return -1;\n            }\n            if (aName != null && bName == null) {\n                return 1;\n            }\n            if (aName == null && bName == null) {\n                return 0;\n            }\n\n            const result = this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n\n            if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n                return result;\n            }\n\n            if (a.login.username != null) {\n                aName += a.login.username;\n            }\n\n            if (b.login.username != null) {\n                bName += b.login.username;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n        };\n    }\n\n    async softDelete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        const setDeletedDate = (cipherId: string) => {\n            if (ciphers[cipherId] == null) {\n                return;\n            }\n            ciphers[cipherId].deletedDate = new Date().toISOString();\n        };\n\n        if (typeof id === 'string') {\n            setDeletedDate(id);\n        } else {\n            (id as string[]).forEach(setDeletedDate);\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async softDeleteWithServer(id: string): Promise<any> {\n        await this.apiService.putDeleteCipher(id);\n        await this.softDelete(id);\n    }\n\n    async softDeleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.softDelete(ids);\n    }\n\n    async restore(cipher: { id: string, revisionDate: string; } | { id: string, revisionDate: string; }[]) {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        const clearDeletedDate = (c: { id: string, revisionDate: string; }) => {\n            if (ciphers[c.id] == null) {\n                return;\n            }\n            ciphers[c.id].deletedDate = null;\n            ciphers[c.id].revisionDate = c.revisionDate;\n        };\n\n\n        if (cipher.constructor.name === 'Array') {\n            (cipher as { id: string, revisionDate: string; }[]).forEach(clearDeletedDate);\n        } else {\n            clearDeletedDate(cipher as { id: string, revisionDate: string; });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async restoreWithServer(id: string): Promise<any> {\n        const response = await this.apiService.putRestoreCipher(id);\n        await this.restore({ id: id, revisionDate: response.revisionDate });\n    }\n\n    async restoreManyWithServer(ids: string[]): Promise<any> {\n        const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n        const restores: { id: string, revisionDate: string; }[] = [];\n        for (const cipher of response.data) {\n            restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n        }\n        await this.restore(restores);\n    }\n\n    // Helpers\n\n    private async shareAttachmentWithServer(attachmentView: AttachmentView, cipherId: string,\n        organizationId: string): Promise<any> {\n        const attachmentResponse = await this.apiService.nativeFetch(\n            new Request(attachmentView.url, { cache: 'no-store' }));\n        if (attachmentResponse.status !== 200) {\n            throw Error('Failed to download attachment: ' + attachmentResponse.status.toString());\n        }\n\n        const buf = await attachmentResponse.arrayBuffer();\n        const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n        const key = await this.cryptoService.getOrgKey(organizationId);\n        const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData.buffer], { type: 'application/octet-stream' });\n            fd.append('key', dataEncKey[1].encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', dataEncKey[1].encryptedString);\n                fd.append('data', Buffer.from(encData.buffer) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        try {\n            await this.apiService.postShareCipherAttachment(cipherId, attachmentView.id, fd, organizationId);\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n    }\n\n    private async encryptObjProperty<V extends View, D extends Domain>(model: V, obj: D,\n        map: any, key: SymmetricCryptoKey): Promise<void> {\n        const promises = [];\n        const self = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp, theObj) {\n                const p = Promise.resolve().then(() => {\n                    const modelProp = (model as any)[(map[theProp] || theProp)];\n                    if (modelProp && modelProp !== '') {\n                        return self.cryptoService.encrypt(modelProp, key);\n                    }\n                    return null;\n                }).then((val: EncString) => {\n                    (theObj as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop, obj);\n        }\n\n        await Promise.all(promises);\n    }\n\n    private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n        switch (cipher.type) {\n            case CipherType.Login:\n                cipher.login = new Login();\n                cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n                cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n                await this.encryptObjProperty(model.login, cipher.login, {\n                    username: null,\n                    password: null,\n                    totp: null,\n                }, key);\n\n                if (model.login.uris != null) {\n                    cipher.login.uris = [];\n                    for (let i = 0; i < model.login.uris.length; i++) {\n                        const loginUri = new LoginUri();\n                        loginUri.match = model.login.uris[i].match;\n                        await this.encryptObjProperty(model.login.uris[i], loginUri, {\n                            uri: null,\n                        }, key);\n                        cipher.login.uris.push(loginUri);\n                    }\n                }\n                return;\n            case CipherType.SecureNote:\n                cipher.secureNote = new SecureNote();\n                cipher.secureNote.type = model.secureNote.type;\n                return;\n            case CipherType.Card:\n                cipher.card = new Card();\n                await this.encryptObjProperty(model.card, cipher.card, {\n                    cardholderName: null,\n                    brand: null,\n                    number: null,\n                    expMonth: null,\n                    expYear: null,\n                    code: null,\n                }, key);\n                return;\n            case CipherType.Identity:\n                cipher.identity = new Identity();\n                await this.encryptObjProperty(model.identity, cipher.identity, {\n                    title: null,\n                    firstName: null,\n                    middleName: null,\n                    lastName: null,\n                    address1: null,\n                    address2: null,\n                    address3: null,\n                    city: null,\n                    state: null,\n                    postalCode: null,\n                    country: null,\n                    company: null,\n                    email: null,\n                    phone: null,\n                    ssn: null,\n                    username: null,\n                    passportNumber: null,\n                    licenseNumber: null,\n                }, key);\n                return;\n            default:\n                throw new Error('Unknown cipher type.');\n        }\n    }\n\n    private async getCipherForUrl(url: string, lastUsed: boolean, lastLaunched: boolean, autofillOnPageLoad: boolean): Promise<CipherView> {\n        const cacheKey = autofillOnPageLoad ? 'autofillOnPageLoad-' + url : url;\n\n        if (!this.sortedCiphersCache.isCached(cacheKey)) {\n            let ciphers = await this.getAllDecryptedForUrl(url);\n            if (!ciphers) {\n                return null;\n            }\n\n            if (autofillOnPageLoad) {\n                const autofillOnPageLoadDefault = await this.storageService.get(ConstantsService.autoFillOnPageLoadDefaultKey);\n                ciphers = ciphers.filter(cipher => cipher.login.autofillOnPageLoad ||\n                    (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false));\n                if (ciphers.length === 0) {\n                    return null;\n                }\n            }\n\n            this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n        }\n\n        if (lastLaunched) {\n            return this.sortedCiphersCache.getLastLaunched(cacheKey);\n        } else if (lastUsed) {\n            return this.sortedCiphersCache.getLastUsed(cacheKey);\n        } else {\n            return this.sortedCiphersCache.getNext(cacheKey);\n        }\n    }\n}\n","export class CipherBulkMoveRequest {\n    ids: string[];\n    folderId: string;\n\n    constructor(ids: string[], folderId: string) {\n        this.ids = ids == null ? [] : ids;\n        this.folderId = folderId;\n    }\n}\n","export class CipherBulkRestoreRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherBulkShareRequest {\n    ciphers: CipherWithIdRequest[];\n    collectionIds: string[];\n\n    constructor(ciphers: Cipher[], collectionIds: string[]) {\n        if (ciphers != null) {\n            this.ciphers = [];\n            ciphers.forEach(c => {\n                this.ciphers.push(new CipherWithIdRequest(c));\n            });\n        }\n        this.collectionIds = collectionIds;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherShareRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { CipherView } from '../view/cipherView';\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n    private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n    private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n    constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) { }\n\n    isCached(url: string) {\n        return this.sortedCiphersByUrl.has(url);\n    }\n\n    addCiphers(url: string, ciphers: CipherView[]) {\n        ciphers.sort(this.comparator);\n        this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n        this.resetTimer(url);\n    }\n\n    getLastUsed(url: string) {\n        this.resetTimer(url);\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n    }\n\n    getLastLaunched(url: string) {\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n    }\n\n    getNext(url: string) {\n        this.resetTimer(url);\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n    }\n\n    updateLastUsedIndex(url: string) {\n        if (this.isCached(url)) {\n            this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n        }\n    }\n\n    clear() {\n        this.sortedCiphersByUrl.clear();\n        this.timeouts.clear();\n    }\n\n    private resetTimer(url: string) {\n        clearTimeout(this.timeouts.get(url));\n        this.timeouts.set(url, setTimeout(() => {\n            this.sortedCiphersByUrl.delete(url);\n            this.timeouts.delete(url);\n        }, CacheTTL));\n    }\n}\n\nclass Ciphers {\n    lastUsedIndex = -1;\n\n    constructor(private readonly ciphers: CipherView[]) { }\n\n    getLastUsed() {\n        this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n        return this.ciphers[this.lastUsedIndex];\n    }\n\n    getLastLaunched() {\n        const usedCiphers = this.ciphers.filter(cipher => cipher.localData?.lastLaunched);\n        const sortedCiphers = usedCiphers.sort((x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf());\n        return sortedCiphers[0];\n    }\n\n    getNextIndex() {\n        return (this.lastUsedIndex + 1) % this.ciphers.length;\n    }\n\n    getNext() {\n        return this.ciphers[this.getNextIndex()];\n    }\n\n    updateLastUsedIndex() {\n        this.lastUsedIndex = this.getNextIndex();\n    }\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nimport { CollectionService as CollectionServiceAbstraction } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    collectionsPrefix: 'collections_',\n};\nconst NestingDelimiter = '/';\n\nexport class CollectionService implements CollectionServiceAbstraction {\n    decryptedCollectionCache: CollectionView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private storageService: StorageService, private i18nService: I18nService) {\n    }\n\n    clearCache(): void {\n        this.decryptedCollectionCache = null;\n    }\n\n    async encrypt(model: CollectionView): Promise<Collection> {\n        if (model.organizationId == null) {\n            throw new Error('Collection has no organization id.');\n        }\n        const key = await this.cryptoService.getOrgKey(model.organizationId);\n        if (key == null) {\n            throw new Error('No key for this collection\\'s organization.');\n        }\n        const collection = new Collection();\n        collection.id = model.id;\n        collection.organizationId = model.organizationId;\n        collection.readOnly = model.readOnly;\n        collection.name = await this.cryptoService.encrypt(model.name, key);\n        return collection;\n    }\n\n    async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n        if (collections == null) {\n            return [];\n        }\n        const decCollections: CollectionView[] = [];\n        const promises: Promise<any>[] = [];\n        collections.forEach(collection => {\n            promises.push(collection.decrypt().then(c => decCollections.push(c)));\n        });\n        await Promise.all(promises);\n        return decCollections.sort(Utils.getSortFunction(this.i18nService, 'name'));\n    }\n\n    async get(id: string): Promise<Collection> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null || !collections.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Collection(collections[id]);\n    }\n\n    async getAll(): Promise<Collection[]> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        const response: Collection[] = [];\n        for (const id in collections) {\n            if (collections.hasOwnProperty(id)) {\n                response.push(new Collection(collections[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<CollectionView[]> {\n        if (this.decryptedCollectionCache != null) {\n            return this.decryptedCollectionCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const collections = await this.getAll();\n        this.decryptedCollectionCache = await this.decryptMany(collections);\n        return this.decryptedCollectionCache;\n    }\n\n    async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n        if (collections == null) {\n            collections = await this.getAllDecrypted();\n        }\n        const nodes: TreeNode<CollectionView>[] = [];\n        collections.forEach(c => {\n            const collectionCopy = new CollectionView();\n            collectionCopy.id = c.id;\n            collectionCopy.organizationId = c.organizationId;\n            const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<CollectionView>> {\n        const collections = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n    }\n\n    async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            collections = {};\n        }\n\n        if (collection instanceof CollectionData) {\n            const c = collection as CollectionData;\n            collections[c.id] = c;\n        } else {\n            (collection as CollectionData[]).forEach(c => {\n                collections[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async replace(collections: { [id: string]: CollectionData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.collectionsPrefix + userId);\n        this.decryptedCollectionCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            const i = id as string;\n            delete collections[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete collections[i];\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n    parent: T;\n    node: T;\n    children: TreeNode<T>[] = [];\n\n    constructor(node: T, name: string, parent: T) {\n        this.parent = parent;\n        this.node = node;\n        this.node.name = name;\n    }\n}\n\nexport interface ITreeNodeObject {\n    id: string;\n    name: string;\n}\n","export enum LogLevelType {\n    Debug,\n    Info,\n    Warning,\n    Error,\n}\n","import { CryptoService } from '../abstractions/crypto.service';\n\nexport class ContainerService {\n    constructor(private cryptoService: CryptoService) {\n    }\n\n    // deprecated, use attachToGlobal instead\n    attachToWindow(win: any) {\n        this.attachToGlobal(win);\n    }\n\n    attachToGlobal(global: any) {\n        if (!global.bitwardenContainerService) {\n            global.bitwardenContainerService = this;\n        }\n    }\n\n    getCryptoService(): CryptoService {\n        return this.cryptoService;\n    }\n}\n","import * as bigInt from 'big-integer';\n\nimport { EncryptionType } from '../enums/encryptionType';\nimport { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncryptedObject } from '../models/domain/encryptedObject';\nimport { EncString } from '../models/domain/encString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nimport { CryptoService as CryptoServiceAbstraction } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { LogService } from '../abstractions/log.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport {\n    KeySuffixOptions,\n    StorageService,\n} from '../abstractions/storage.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\nimport { EEFLongWordList } from '../misc/wordlist';\nimport { ProfileProviderOrganizationResponse } from '../models/response/profileProviderOrganizationResponse';\nimport { ProfileProviderResponse } from '../models/response/profileProviderResponse';\n\nexport const Keys = {\n    key: 'key', // Master Key\n    encOrgKeys: 'encOrgKeys',\n    encProviderKeys: 'encProviderKeys',\n    encPrivateKey: 'encPrivateKey',\n    encKey: 'encKey', // Generated Symmetric Key\n    keyHash: 'keyHash',\n};\n\nexport class CryptoService implements CryptoServiceAbstraction {\n    private key: SymmetricCryptoKey;\n    private encKey: SymmetricCryptoKey;\n    private legacyEtmKey: SymmetricCryptoKey;\n    private keyHash: string;\n    private publicKey: ArrayBuffer;\n    private privateKey: ArrayBuffer;\n    private orgKeys: Map<string, SymmetricCryptoKey>;\n    private providerKeys: Map<string, SymmetricCryptoKey>;\n\n    constructor(private storageService: StorageService, protected secureStorageService: StorageService,\n        private cryptoFunctionService: CryptoFunctionService, protected platformUtilService: PlatformUtilsService,\n        protected logService: LogService) {\n    }\n\n    async setKey(key: SymmetricCryptoKey): Promise<any> {\n        this.key = key;\n\n        await this.storeKey(key);\n    }\n\n    setKeyHash(keyHash: string): Promise<{}> {\n        this.keyHash = keyHash;\n        return this.storageService.save(Keys.keyHash, keyHash);\n    }\n\n    async setEncKey(encKey: string): Promise<{}> {\n        if (encKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encKey, encKey);\n        this.encKey = null;\n    }\n\n    async setEncPrivateKey(encPrivateKey: string): Promise<{}> {\n        if (encPrivateKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encPrivateKey, encPrivateKey);\n        this.privateKey = null;\n    }\n\n    async setOrgKeys(orgs: ProfileOrganizationResponse[], providerOrgs: ProfileProviderOrganizationResponse[]): Promise<{}> {\n        const orgKeys: any = {};\n        orgs.forEach(org => {\n            orgKeys[org.id] = org.key;\n        });\n\n        for (const providerOrg of providerOrgs) {\n            // Convert provider encrypted keys to user encrypted.\n            const providerKey = await this.getProviderKey(providerOrg.providerId);\n            const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n            orgKeys[providerOrg.id] = await (await this.rsaEncrypt(decValue)).encryptedString;\n        }\n\n        this.orgKeys = null;\n        return this.storageService.save(Keys.encOrgKeys, orgKeys);\n    }\n\n    setProviderKeys(providers: ProfileProviderResponse[]): Promise<{}> {\n        const providerKeys: any = {};\n        providers.forEach(provider => {\n            providerKeys[provider.id] = provider.key;\n        });\n\n        this.providerKeys = null;\n        return this.storageService.save(Keys.encProviderKeys, providerKeys);\n    }\n\n    async getKey(keySuffix?: KeySuffixOptions): Promise<SymmetricCryptoKey> {\n        if (this.key != null) {\n            return this.key;\n        }\n\n        keySuffix ||= 'auto';\n        const symmetricKey = await this.getKeyFromStorage(keySuffix);\n\n        if (symmetricKey != null) {\n            this.setKey(symmetricKey);\n        }\n\n        return symmetricKey;\n    }\n\n    async getKeyFromStorage(keySuffix: KeySuffixOptions): Promise<SymmetricCryptoKey> {\n        const key = await this.retrieveKeyFromStorage(keySuffix);\n        if (key != null) {\n\n            const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n            if (!await this.validateKey(symmetricKey)) {\n                this.logService.warning('Wrong key, throwing away stored key');\n                this.secureStorageService.remove(Keys.key, { keySuffix: keySuffix });\n                return null;\n            }\n\n            return symmetricKey;\n        }\n        return null;\n    }\n\n    async getKeyHash(): Promise<string> {\n        if (this.keyHash != null) {\n            return this.keyHash;\n        }\n\n        const keyHash = await this.storageService.get<string>(Keys.keyHash);\n        if (keyHash != null) {\n            this.keyHash = keyHash;\n        }\n\n        return keyHash == null ? null : this.keyHash;\n    }\n\n    async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n        const storedKeyHash = await this.getKeyHash();\n        if (masterPassword != null && storedKeyHash != null) {\n            const localKeyHash = await this.hashPassword(masterPassword, key, HashPurpose.LocalAuthorization);\n            if (localKeyHash != null && storedKeyHash === localKeyHash) {\n                return true;\n            }\n\n            // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n            const serverKeyHash = await this.hashPassword(masterPassword, key, HashPurpose.ServerAuthorization);\n            if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n                await this.setKeyHash(localKeyHash);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    @sequentialize(() => 'getEncKey')\n    async getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n        if (this.encKey != null) {\n            return this.encKey;\n        }\n\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        if (encKey == null) {\n            return null;\n        }\n\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (key == null) {\n            return null;\n        }\n\n        let decEncKey: ArrayBuffer;\n        const encKeyCipher = new EncString(encKey);\n        if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n            decEncKey = await this.decryptToBytes(encKeyCipher, key);\n        } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n            const newKey = await this.stretchKey(key);\n            decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n        } else {\n            throw new Error('Unsupported encKey type.');\n        }\n\n        if (decEncKey == null) {\n            return null;\n        }\n        this.encKey = new SymmetricCryptoKey(decEncKey);\n        return this.encKey;\n    }\n\n    async getPublicKey(): Promise<ArrayBuffer> {\n        if (this.publicKey != null) {\n            return this.publicKey;\n        }\n\n        const privateKey = await this.getPrivateKey();\n        if (privateKey == null) {\n            return null;\n        }\n\n        this.publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        return this.publicKey;\n    }\n\n    async getPrivateKey(): Promise<ArrayBuffer> {\n        if (this.privateKey != null) {\n            return this.privateKey;\n        }\n\n        const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n        if (encPrivateKey == null) {\n            return null;\n        }\n\n        this.privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n        return this.privateKey;\n    }\n\n    async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey === null) {\n            throw new Error('No public key available.');\n        }\n        const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, 'sha256');\n        const userFingerprint = await this.cryptoFunctionService.hkdfExpand(keyFingerprint, userId, 32, 'sha256');\n        return this.hashPhrase(userFingerprint);\n    }\n\n    @sequentialize(() => 'getOrgKeys')\n    async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n        if (this.orgKeys != null && this.orgKeys.size > 0) {\n            return this.orgKeys;\n        }\n\n        const encOrgKeys = await this.storageService.get<any>(Keys.encOrgKeys);\n        if (encOrgKeys == null) {\n            return null;\n        }\n\n        const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n        let setKey = false;\n\n        for (const orgId in encOrgKeys) {\n            if (!encOrgKeys.hasOwnProperty(orgId)) {\n                continue;\n            }\n\n            const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n            orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n            setKey = true;\n        }\n\n        if (setKey) {\n            this.orgKeys = orgKeys;\n        }\n\n        return this.orgKeys;\n    }\n\n    async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n        if (orgId == null) {\n            return null;\n        }\n\n        const orgKeys = await this.getOrgKeys();\n        if (orgKeys == null || !orgKeys.has(orgId)) {\n            return null;\n        }\n\n        return orgKeys.get(orgId);\n    }\n\n    @sequentialize(() => 'getProviderKeys')\n    async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n        if (this.providerKeys != null && this.providerKeys.size > 0) {\n            return this.providerKeys;\n        }\n\n        const encProviderKeys = await this.storageService.get<any>(Keys.encProviderKeys);\n        if (encProviderKeys == null) {\n            return null;\n        }\n\n        const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n        let setKey = false;\n\n        for (const orgId in encProviderKeys) {\n            if (!encProviderKeys.hasOwnProperty(orgId)) {\n                continue;\n            }\n\n            const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n            providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n            setKey = true;\n        }\n\n        if (setKey) {\n            this.providerKeys = providerKeys;\n        }\n\n        return this.providerKeys;\n    }\n\n    async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n        if (providerId == null) {\n            return null;\n        }\n\n        const providerKeys = await this.getProviderKeys();\n        if (providerKeys == null || !providerKeys.has(providerId)) {\n            return null;\n        }\n\n        return providerKeys.get(providerId);\n    }\n\n    async hasKey(): Promise<boolean> {\n        return this.hasKeyInMemory() || await this.hasKeyStored('auto') || await this.hasKeyStored('biometric');\n    }\n\n    hasKeyInMemory(): boolean {\n        return this.key != null;\n    }\n\n    hasKeyStored(keySuffix: KeySuffixOptions): Promise<boolean> {\n        return this.secureStorageService.has(Keys.key, { keySuffix: keySuffix });\n    }\n\n    async hasEncKey(): Promise<boolean> {\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        return encKey != null;\n    }\n\n    async clearKey(clearSecretStorage: boolean = true): Promise<any> {\n        this.key = this.legacyEtmKey = null;\n        if (clearSecretStorage) {\n            this.clearStoredKey('auto');\n            this.clearStoredKey('biometric');\n        }\n    }\n\n    async clearStoredKey(keySuffix: KeySuffixOptions) {\n        await this.secureStorageService.remove(Keys.key, { keySuffix: keySuffix });\n    }\n\n    clearKeyHash(): Promise<any> {\n        this.keyHash = null;\n        return this.storageService.remove(Keys.keyHash);\n    }\n\n    clearEncKey(memoryOnly?: boolean): Promise<any> {\n        this.encKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encKey);\n    }\n\n    clearKeyPair(memoryOnly?: boolean): Promise<any> {\n        this.privateKey = null;\n        this.publicKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encPrivateKey);\n    }\n\n    clearOrgKeys(memoryOnly?: boolean): Promise<any> {\n        this.orgKeys = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encOrgKeys);\n    }\n\n    clearProviderKeys(memoryOnly?: boolean): Promise<any> {\n        this.providerKeys = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encOrgKeys);\n    }\n\n    clearPinProtectedKey(): Promise<any> {\n        return this.storageService.remove(ConstantsService.pinProtectedKey);\n    }\n\n    async clearKeys(): Promise<any> {\n        await this.clearKey();\n        await this.clearKeyHash();\n        await this.clearOrgKeys();\n        await this.clearProviderKeys();\n        await this.clearEncKey();\n        await this.clearKeyPair();\n        await this.clearPinProtectedKey();\n    }\n\n    async toggleKey(): Promise<any> {\n        const key = await this.getKey();\n\n        await this.setKey(key);\n    }\n\n    async makeKey(password: string, salt: string, kdf: KdfType, kdfIterations: number):\n        Promise<SymmetricCryptoKey> {\n        let key: ArrayBuffer = null;\n        if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n            if (kdfIterations == null) {\n                kdfIterations = 5000;\n            } else if (kdfIterations < 5000) {\n                throw new Error('PBKDF2 iteration minimum is 5000.');\n            }\n            key = await this.cryptoFunctionService.pbkdf2(password, salt, 'sha256', kdfIterations);\n        } else {\n            throw new Error('Unknown Kdf.');\n        }\n        return new SymmetricCryptoKey(key);\n    }\n\n    async makeKeyFromPin(pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs: EncString = null):\n        Promise<SymmetricCryptoKey> {\n        if (protectedKeyCs == null) {\n            const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n            if (pinProtectedKey == null) {\n                throw new Error('No PIN protected key found.');\n            }\n            protectedKeyCs = new EncString(pinProtectedKey);\n        }\n        const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n        const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n        return new SymmetricCryptoKey(decKey);\n    }\n\n    async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n        const shareKey = await this.cryptoFunctionService.randomBytes(64);\n        const publicKey = await this.getPublicKey();\n        const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n        return [encShareKey, new SymmetricCryptoKey(shareKey)];\n    }\n\n    async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n        const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n        const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n        const privateEnc = await this.encrypt(keyPair[1], key);\n        return [publicB64, privateEnc];\n    }\n\n    async makePinKey(pin: string, salt: string, kdf: KdfType, kdfIterations: number): Promise<SymmetricCryptoKey> {\n        const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n        return await this.stretchKey(pinKey);\n    }\n\n    async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n        const sendKey = await this.cryptoFunctionService.hkdf(keyMaterial, 'bitwarden-send', 'send', 64, 'sha256');\n        return new SymmetricCryptoKey(sendKey);\n    }\n\n    async hashPassword(password: string, key: SymmetricCryptoKey, hashPurpose?: HashPurpose): Promise<string> {\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (password == null || key == null) {\n            throw new Error('Invalid parameters.');\n        }\n\n        const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n        const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, 'sha256', iterations);\n        return Utils.fromBufferToB64(hash);\n    }\n\n    async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n        const theKey = await this.getKeyForEncryption(key);\n        const encKey = await this.cryptoFunctionService.randomBytes(64);\n        return this.buildEncKey(theKey, encKey);\n    }\n\n    async remakeEncKey(key: SymmetricCryptoKey, encKey?: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n        if (encKey == null) {\n            encKey = await this.getEncKey();\n        }\n        return this.buildEncKey(key, encKey.key);\n    }\n\n    async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n        if (plainValue == null) {\n            return Promise.resolve(null);\n        }\n\n        let plainBuf: ArrayBuffer;\n        if (typeof (plainValue) === 'string') {\n            plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n        } else {\n            plainBuf = plainValue;\n        }\n\n        const encObj = await this.aesEncrypt(plainBuf, key);\n        const iv = Utils.fromBufferToB64(encObj.iv);\n        const data = Utils.fromBufferToB64(encObj.data);\n        const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n        return new EncString(encObj.key.encType, data, iv, mac);\n    }\n\n    async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n        const encValue = await this.aesEncrypt(plainValue, key);\n        let macLen = 0;\n        if (encValue.mac != null) {\n            macLen = encValue.mac.byteLength;\n        }\n\n        const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n        encBytes.set([encValue.key.encType]);\n        encBytes.set(new Uint8Array(encValue.iv), 1);\n        if (encValue.mac != null) {\n            encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n        }\n\n        encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n        return new EncArrayBuffer(encBytes.buffer);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey == null) {\n            throw new Error('Public key unavailable.');\n        }\n\n        const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, 'sha1');\n        return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n    }\n\n    async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n        const headerPieces = encValue.split('.');\n        let encType: EncryptionType = null;\n        let encPieces: string[];\n\n        if (headerPieces.length === 1) {\n            encType = EncryptionType.Rsa2048_OaepSha256_B64;\n            encPieces = [headerPieces[0]];\n        } else if (headerPieces.length === 2) {\n            try {\n                encType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) { }\n        }\n\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            // HmacSha256 types are deprecated\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        if (encPieces == null || encPieces.length <= 0) {\n            throw new Error('encPieces unavailable.');\n        }\n\n        const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n        const privateKey = privateKeyValue ?? await this.getPrivateKey();\n        if (privateKey == null) {\n            throw new Error('No private key.');\n        }\n\n        let alg: 'sha1' | 'sha256' = 'sha1';\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n                alg = 'sha256';\n                break;\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n    }\n\n    async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const iv = Utils.fromB64ToArray(encString.iv).buffer;\n        const data = Utils.fromB64ToArray(encString.data).buffer;\n        const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n        const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n        if (decipher == null) {\n            return null;\n        }\n\n        return decipher;\n    }\n\n    async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n        return await this.aesDecryptToUtf8(encString.encryptionType, encString.data,\n            encString.iv, encString.mac, key);\n    }\n\n    async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        if (encBuf == null) {\n            throw new Error('no encBuf.');\n        }\n\n        const encBytes = new Uint8Array(encBuf);\n        const encType = encBytes[0];\n        let ctBytes: Uint8Array = null;\n        let ivBytes: Uint8Array = null;\n        let macBytes: Uint8Array = null;\n\n        switch (encType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encBytes.length <= 49) { // 1 + 16 + 32 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                macBytes = encBytes.slice(17, 49);\n                ctBytes = encBytes.slice(49);\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encBytes.length <= 17) { // 1 + 16 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                ctBytes = encBytes.slice(17);\n                break;\n            default:\n                return null;\n        }\n\n        return await this.aesDecryptToBytes(encType, ctBytes.buffer, ivBytes.buffer,\n            macBytes != null ? macBytes.buffer : null, key);\n    }\n\n    // EFForg/OpenWireless\n    // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n    async randomNumber(min: number, max: number): Promise<number> {\n        let rval = 0;\n        const range = max - min + 1;\n        const bitsNeeded = Math.ceil(Math.log2(range));\n        if (bitsNeeded > 53) {\n            throw new Error('We cannot generate numbers larger than 53 bits.');\n        }\n\n        const bytesNeeded = Math.ceil(bitsNeeded / 8);\n        const mask = Math.pow(2, bitsNeeded) - 1;\n        // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n        // Fill a byte array with N random numbers\n        const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n        let p = (bytesNeeded - 1) * 8;\n        for (let i = 0; i < bytesNeeded; i++) {\n            rval += byteArray[i] * Math.pow(2, p);\n            p -= 8;\n        }\n\n        // Use & to apply the mask and reduce the number of recursive lookups\n        // tslint:disable-next-line\n        rval = rval & mask;\n\n        if (rval >= range) {\n            // Integer out of acceptable range\n            return this.randomNumber(min, max);\n        }\n\n        // Return an integer that falls within the range\n        return min + rval;\n    }\n\n    async validateKey(key: SymmetricCryptoKey) {\n        try {\n            const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n            const encKey = await this.getEncKey(key);\n            if (encPrivateKey == null || encKey == null) {\n                return false;\n            }\n\n            const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n            await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        } catch (e) {\n            return false;\n        }\n\n        return true;\n    }\n\n    // Helpers\n\n    protected async storeKey(key: SymmetricCryptoKey) {\n        if (await this.shouldStoreKey('auto') || await this.shouldStoreKey('biometric')) {\n            this.secureStorageService.save(Keys.key, key.keyB64);\n        } else {\n            this.secureStorageService.remove(Keys.key);\n        }\n    }\n\n    protected async shouldStoreKey(keySuffix: KeySuffixOptions) {\n        let shouldStoreKey = false;\n        if (keySuffix === 'auto') {\n            const vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n            shouldStoreKey = vaultTimeout == null;\n        } else if (keySuffix === 'biometric') {\n            const biometricUnlock = await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\n            shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n        }\n        return shouldStoreKey;\n    }\n\n    protected retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n        return this.secureStorageService.get<string>(Keys.key, { keySuffix: keySuffix });\n    }\n\n    private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n        const obj = new EncryptedObject();\n        obj.key = await this.getKeyForEncryption(key);\n        obj.iv = await this.cryptoFunctionService.randomBytes(16);\n        obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n        if (obj.key.macKey != null) {\n            const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n            macData.set(new Uint8Array(obj.iv), 0);\n            macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n            obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, 'sha256');\n        }\n\n        return obj;\n    }\n\n    private async aesDecryptToUtf8(encType: EncryptionType, data: string, iv: string, mac: string,\n        key: SymmetricCryptoKey): Promise<string> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            this.logService.error('mac required.');\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            this.logService.error('encType unavailable.');\n            return null;\n        }\n\n        const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n        if (fastParams.macKey != null && fastParams.mac != null) {\n            const computedMac = await this.cryptoFunctionService.hmacFast(fastParams.macData,\n                fastParams.macKey, 'sha256');\n            const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n            if (!macsEqual) {\n                this.logService.error('mac failed.');\n                return null;\n            }\n        }\n\n        return this.cryptoFunctionService.aesDecryptFast(fastParams);\n    }\n\n    private async aesDecryptToBytes(encType: EncryptionType, data: ArrayBuffer, iv: ArrayBuffer,\n        mac: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            return null;\n        }\n\n        if (theKey.macKey != null && mac != null) {\n            const macData = new Uint8Array(iv.byteLength + data.byteLength);\n            macData.set(new Uint8Array(iv), 0);\n            macData.set(new Uint8Array(data), iv.byteLength);\n            const computedMac = await this.cryptoFunctionService.hmac(macData.buffer, theKey.macKey, 'sha256');\n            if (computedMac === null) {\n                return null;\n            }\n\n            const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n            if (!macsMatch) {\n                this.logService.error('mac failed.');\n                return null;\n            }\n        }\n\n        return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n    }\n\n    private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        if (key != null) {\n            return key;\n        }\n\n        const encKey = await this.getEncKey();\n        if (encKey != null) {\n            return encKey;\n        }\n\n        return await this.getKey();\n    }\n\n    private resolveLegacyKey(encType: EncryptionType, key: SymmetricCryptoKey): SymmetricCryptoKey {\n        if (encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n            key.encType === EncryptionType.AesCbc256_B64) {\n            // Old encrypt-then-mac scheme, make a new key\n            if (this.legacyEtmKey == null) {\n                this.legacyEtmKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n            }\n            return this.legacyEtmKey;\n        }\n\n        return key;\n    }\n\n    private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        const newKey = new Uint8Array(64);\n        const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, 'enc', 32, 'sha256');\n        const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, 'mac', 32, 'sha256');\n        newKey.set(new Uint8Array(encKey));\n        newKey.set(new Uint8Array(macKey), 32);\n        return new SymmetricCryptoKey(newKey.buffer);\n    }\n\n    private async hashPhrase(hash: ArrayBuffer, minimumEntropy: number = 64) {\n        const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n        let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n        const hashArr = Array.from(new Uint8Array(hash));\n        const entropyAvailable = hashArr.length * 4;\n        if (numWords * entropyPerWord > entropyAvailable) {\n            throw new Error('Output entropy of hash function is too small');\n        }\n\n        const phrase: string[] = [];\n        let hashNumber = bigInt.fromArray(hashArr, 256);\n        while (numWords--) {\n            const remainder = hashNumber.mod(EEFLongWordList.length);\n            hashNumber = hashNumber.divide(EEFLongWordList.length);\n            phrase.push(EEFLongWordList[remainder as any]);\n        }\n        return phrase;\n    }\n\n    private async buildEncKey(key: SymmetricCryptoKey, encKey: ArrayBuffer)\n        : Promise<[SymmetricCryptoKey, EncString]> {\n        let encKeyEnc: EncString = null;\n        if (key.key.byteLength === 32) {\n            const newKey = await this.stretchKey(key);\n            encKeyEnc = await this.encrypt(encKey, newKey);\n        } else if (key.key.byteLength === 64) {\n            encKeyEnc = await this.encrypt(encKey, key);\n        } else {\n            throw new Error('Invalid key size.');\n        }\n        return [new SymmetricCryptoKey(encKey), encKeyEnc];\n    }\n}\n","export class EncArrayBuffer {\n    constructor(public buffer: ArrayBuffer) { }\n}\n","import { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncryptedObject {\n    iv: ArrayBuffer;\n    data: ArrayBuffer;\n    mac: ArrayBuffer;\n    key: SymmetricCryptoKey;\n}\n","import { Observable, Subject } from 'rxjs';\n\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { ConstantsService } from './constants.service';\n\nimport { EnvironmentService as EnvironmentServiceAbstraction, Urls } from '../abstractions/environment.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n\n    private readonly urlsSubject = new Subject<Urls>();\n    urls: Observable<Urls> = this.urlsSubject; // tslint:disable-line\n\n    private baseUrl: string;\n    private webVaultUrl: string;\n    private apiUrl: string;\n    private identityUrl: string;\n    private iconsUrl: string;\n    private notificationsUrl: string;\n    private eventsUrl: string;\n\n    constructor(private storageService: StorageService) {}\n\n    hasBaseUrl() {\n        return this.baseUrl != null;\n    }\n\n    getNotificationsUrl() {\n        if (this.notificationsUrl != null) {\n            return this.notificationsUrl;\n        }\n\n        if (this.baseUrl != null) {\n            return this.baseUrl + '/notifications';\n        }\n\n        return 'https://notifications.bitwarden.com';\n    }\n\n    getWebVaultUrl() {\n        if (this.webVaultUrl != null) {\n            return this.webVaultUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl;\n        }\n        return 'https://vault.bitwarden.com';\n    }\n\n    getSendUrl() {\n        return this.getWebVaultUrl() === 'https://vault.bitwarden.com'\n            ? 'https://send.bitwarden.com/#'\n            : this.getWebVaultUrl() + '/#/send/';\n    }\n\n    getIconsUrl() {\n        if (this.iconsUrl != null) {\n            return this.iconsUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/icons';\n        }\n\n        return 'https://icons.bitwarden.net';\n    }\n\n    getApiUrl() {\n        if (this.apiUrl != null) {\n            return this.apiUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/api';\n        }\n\n        return 'https://api.bitwarden.com';\n    }\n\n    getIdentityUrl() {\n        if (this.identityUrl != null) {\n            return this.identityUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/identity';\n        }\n\n        return 'https://identity.bitwarden.com';\n    }\n\n    getEventsUrl() {\n        if (this.eventsUrl != null) {\n            return this.eventsUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/events';\n        }\n\n        return 'https://events.bitwarden.com';\n    }\n\n    async setUrlsFromStorage(): Promise<void> {\n        const urlsObj: any = await this.storageService.get(ConstantsService.environmentUrlsKey);\n        const urls = urlsObj || {\n            base: null,\n            api: null,\n            identity: null,\n            icons: null,\n            notifications: null,\n            events: null,\n            webVault: null,\n        };\n\n        const envUrls = new EnvironmentUrls();\n\n        if (urls.base) {\n            this.baseUrl = envUrls.base = urls.base;\n            return;\n        }\n\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = envUrls.api = urls.api;\n        this.identityUrl = envUrls.identity = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = envUrls.events = urls.events;\n    }\n\n    async setUrls(urls: Urls, saveSettings: boolean = true): Promise<any> {\n        urls.base = this.formatUrl(urls.base);\n        urls.webVault = this.formatUrl(urls.webVault);\n        urls.api = this.formatUrl(urls.api);\n        urls.identity = this.formatUrl(urls.identity);\n        urls.icons = this.formatUrl(urls.icons);\n        urls.notifications = this.formatUrl(urls.notifications);\n        urls.events = this.formatUrl(urls.events);\n\n        if (saveSettings) {\n            await this.storageService.save(ConstantsService.environmentUrlsKey, {\n                base: urls.base,\n                api: urls.api,\n                identity: urls.identity,\n                webVault: urls.webVault,\n                icons: urls.icons,\n                notifications: urls.notifications,\n                events: urls.events,\n            });\n        }\n\n        this.baseUrl = urls.base;\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = urls.api;\n        this.identityUrl = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = urls.events;\n\n        this.urlsSubject.next(urls);\n\n        return urls;\n    }\n\n    getUrls() {\n        return {\n            base: this.baseUrl,\n            webVault: this.webVaultUrl,\n            api: this.apiUrl,\n            identity: this.identityUrl,\n            icons: this.iconsUrl,\n            notifications: this.notificationsUrl,\n            events: this.eventsUrl,\n        };\n    }\n\n    private formatUrl(url: string): string {\n        if (url == null || url === '') {\n            return null;\n        }\n\n        url = url.replace(/\\/+$/g, '');\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            url = 'https://' + url;\n        }\n\n        return url.trim();\n    }\n}\n","export class EnvironmentUrls {\n    base: string;\n    api: string;\n    identity: string;\n    events: string;\n}\n","import { EventType } from '../enums/eventType';\n\nimport { EventData } from '../models/data/eventData';\n\nimport { EventRequest } from '../models/request/eventRequest';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { EventService as EventServiceAbstraction } from '../abstractions/event.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nexport class EventService implements EventServiceAbstraction {\n    private inited = false;\n\n    constructor(private storageService: StorageService, private apiService: ApiService,\n        private userService: UserService, private cipherService: CipherService) { }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.uploadEvents();\n            setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n        }\n    }\n\n    async collect(eventType: EventType, cipherId: string = null, uploadImmediately = false): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const organizations = await this.userService.getAllOrganizations();\n        if (organizations == null) {\n            return;\n        }\n        const orgIds = new Set<string>(organizations.filter(o => o.useEvents).map(o => o.id));\n        if (orgIds.size === 0) {\n            return;\n        }\n        if (cipherId != null) {\n            const cipher = await this.cipherService.get(cipherId);\n            if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n                return;\n            }\n        }\n        let eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null) {\n            eventCollection = [];\n        }\n        const event = new EventData();\n        event.type = eventType;\n        event.cipherId = cipherId;\n        event.date = new Date().toISOString();\n        eventCollection.push(event);\n        await this.storageService.save(ConstantsService.eventCollectionKey, eventCollection);\n        if (uploadImmediately) {\n            await this.uploadEvents();\n        }\n    }\n\n    async uploadEvents(): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null || eventCollection.length === 0) {\n            return;\n        }\n        const request = eventCollection.map(e => {\n            const req = new EventRequest();\n            req.type = e.type;\n            req.cipherId = e.cipherId;\n            req.date = e.date;\n            return req;\n        });\n        try {\n            await this.apiService.postEventsCollect(request);\n            this.clearEvents();\n        } catch { }\n    }\n\n    async clearEvents(): Promise<any> {\n        await this.storageService.remove(ConstantsService.eventCollectionKey);\n    }\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventData {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventRequest {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import * as papa from 'papaparse';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { ExportService as ExportServiceAbstraction } from '../abstractions/export.service';\nimport { FolderService } from '../abstractions/folder.service';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Collection } from '../models/domain/collection';\nimport { Folder } from '../models/domain/folder';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\n\nimport { CipherWithIds as CipherExport } from '../models/export/cipherWithIds';\nimport { CollectionWithId as CollectionExport } from '../models/export/collectionWithId';\nimport { Event } from '../models/export/event';\nimport { FolderWithId as FolderExport } from '../models/export/folderWithId';\nimport { EventView } from '../models/view/eventView';\n\nimport { Utils } from '../misc/utils';\n\nexport class ExportService implements ExportServiceAbstraction {\n    constructor(private folderService: FolderService, private cipherService: CipherService,\n        private apiService: ApiService, private cryptoService: CryptoService) { }\n\n    async getExport(format: 'csv' | 'json' | 'encrypted_json' = 'csv'): Promise<string> {\n        if (format === 'encrypted_json') {\n            return this.getEncryptedExport();\n        } else {\n            return this.getDecryptedExport(format);\n        }\n    }\n\n    async getOrganizationExport(organizationId: string,\n        format: 'csv' | 'json' | 'encrypted_json' = 'csv'): Promise<string> {\n        if (format === 'encrypted_json') {\n            return this.getOrganizationEncryptedExport(organizationId);\n        } else {\n            return this.getOrganizationDecryptedExport(organizationId, format);\n        }\n    }\n\n    async getEventExport(events: EventView[]): Promise<string> {\n        return papa.unparse(events.map(e => new Event(e)));\n    }\n\n    getFileName(prefix: string = null, extension: string = 'csv'): string {\n        const now = new Date();\n        const dateString =\n            now.getFullYear() + '' + this.padNumber(now.getMonth() + 1, 2) + '' + this.padNumber(now.getDate(), 2) +\n            this.padNumber(now.getHours(), 2) + '' + this.padNumber(now.getMinutes(), 2) +\n            this.padNumber(now.getSeconds(), 2);\n\n        return 'bitwarden' + (prefix ? ('_' + prefix) : '') + '_export_' + dateString + '.' + extension;\n    }\n\n    private async getDecryptedExport(format: 'json' | 'csv'): Promise<string> {\n        let decFolders: FolderView[] = [];\n        let decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAllDecrypted().then(folders => {\n            decFolders = folders;\n        }));\n\n        promises.push(this.cipherService.getAllDecrypted().then(ciphers => {\n            decCiphers = ciphers.filter(f => f.deletedDate == null);\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const foldersMap = new Map<string, FolderView>();\n            decFolders.forEach(f => {\n                if (f.id != null) {\n                    foldersMap.set(f.id, f);\n                }\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach(c => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n                if (c.organizationId != null) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.folder = c.folderId != null && foldersMap.has(c.folderId) ?\n                    foldersMap.get(c.folderId).name : null;\n                cipher.favorite = c.favorite ? 1 : null;\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                encrypted: false,\n                folders: [],\n                items: [],\n            };\n\n            decFolders.forEach(f => {\n                if (f.id == null) {\n                    return;\n                }\n                const folder = new FolderExport();\n                folder.build(f);\n                jsonDoc.folders.push(folder);\n            });\n\n            decCiphers.forEach(c => {\n                if (c.organizationId != null) {\n                    return;\n                }\n                const cipher = new CipherExport();\n                cipher.build(c);\n                cipher.collectionIds = null;\n                jsonDoc.items.push(cipher);\n            });\n\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    private async getEncryptedExport(): Promise<string> {\n        let folders: Folder[] = [];\n        let ciphers: Cipher[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAll().then(f => {\n            folders = f;\n        }));\n\n        promises.push(this.cipherService.getAll().then(c => {\n            ciphers = c.filter(f => f.deletedDate == null);\n        }));\n\n        await Promise.all(promises);\n\n        const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n        const jsonDoc: any = {\n            encrypted: true,\n            encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n            folders: [],\n            items: [],\n        };\n\n        folders.forEach(f => {\n            if (f.id == null) {\n                return;\n            }\n            const folder = new FolderExport();\n            folder.build(f);\n            jsonDoc.folders.push(folder);\n        });\n\n        ciphers.forEach(c => {\n            if (c.organizationId != null) {\n                return;\n            }\n            const cipher = new CipherExport();\n            cipher.build(c);\n            cipher.collectionIds = null;\n            jsonDoc.items.push(cipher);\n        });\n\n        return JSON.stringify(jsonDoc, null, '  ');\n    }\n\n    private async getOrganizationDecryptedExport(organizationId: string, format: 'json' | 'csv'): Promise<string> {\n        const decCollections: CollectionView[] = [];\n        const decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then(collections => {\n            const collectionPromises: any = [];\n            if (collections != null && collections.data != null && collections.data.length > 0) {\n                collections.data.forEach(c => {\n                    const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n                    collectionPromises.push(collection.decrypt().then(decCol => {\n                        decCollections.push(decCol);\n                    }));\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then(ciphers => {\n            const cipherPromises: any = [];\n            if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n                ciphers.data.filter(c => c.deletedDate === null).forEach(c => {\n                    const cipher = new Cipher(new CipherData(c));\n                    cipherPromises.push(cipher.decrypt().then(decCipher => {\n                        decCiphers.push(decCipher);\n                    }));\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const collectionsMap = new Map<string, CollectionView>();\n            decCollections.forEach(c => {\n                collectionsMap.set(c.id, c);\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach(c => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.collections = [];\n                if (c.collectionIds != null) {\n                    cipher.collections = c.collectionIds.filter(id => collectionsMap.has(id))\n                        .map(id => collectionsMap.get(id).name);\n                }\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                encrypted: false,\n                collections: [],\n                items: [],\n            };\n\n            decCollections.forEach(c => {\n                const collection = new CollectionExport();\n                collection.build(c);\n                jsonDoc.collections.push(collection);\n            });\n\n            decCiphers.forEach(c => {\n                const cipher = new CipherExport();\n                cipher.build(c);\n                jsonDoc.items.push(cipher);\n            });\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n        const collections: Collection[] = [];\n        const ciphers: Cipher[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then(c => {\n            const collectionPromises: any = [];\n            if (c != null && c.data != null && c.data.length > 0) {\n                c.data.forEach(r => {\n                    const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n                    collections.push(collection);\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then(c => {\n            const cipherPromises: any = [];\n            if (c != null && c.data != null && c.data.length > 0) {\n                c.data.filter(item => item.deletedDate === null).forEach(item => {\n                    const cipher = new Cipher(new CipherData(item));\n                    ciphers.push(cipher);\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        const orgKey = await this.cryptoService.getOrgKey(organizationId);\n        const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n        const jsonDoc: any = {\n            encrypted: true,\n            encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n            collections: [],\n            items: [],\n        };\n\n        collections.forEach(c => {\n            const collection = new CollectionExport();\n            collection.build(c);\n            jsonDoc.collections.push(collection);\n        });\n\n        ciphers.forEach(c => {\n            const cipher = new CipherExport();\n            cipher.build(c);\n            jsonDoc.items.push(cipher);\n        });\n        return JSON.stringify(jsonDoc, null, '  ');\n    }\n\n    private padNumber(num: number, width: number, padCharacter: string = '0'): string {\n        const numString = num.toString();\n        return numString.length >= width ? numString :\n            new Array(width - numString.length + 1).join(padCharacter) + numString;\n    }\n\n    private buildCommonCipher(cipher: any, c: CipherView) {\n        cipher.type = null;\n        cipher.name = c.name;\n        cipher.notes = c.notes;\n        cipher.fields = null;\n        cipher.reprompt = c.reprompt;\n        // Login props\n        cipher.login_uri = null;\n        cipher.login_username = null;\n        cipher.login_password = null;\n        cipher.login_totp = null;\n\n        if (c.fields) {\n            c.fields.forEach((f: any) => {\n                if (!cipher.fields) {\n                    cipher.fields = '';\n                } else {\n                    cipher.fields += '\\n';\n                }\n\n                cipher.fields += ((f.name || '') + ': ' + f.value);\n            });\n        }\n\n        switch (c.type) {\n            case CipherType.Login:\n                cipher.type = 'login';\n                cipher.login_username = c.login.username;\n                cipher.login_password = c.login.password;\n                cipher.login_totp = c.login.totp;\n\n                if (c.login.uris) {\n                    cipher.login_uri = [];\n                    c.login.uris.forEach(u => {\n                        cipher.login_uri.push(u.uri);\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                cipher.type = 'note';\n                break;\n            default:\n                return;\n        }\n\n        return cipher;\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Cipher as CipherDomain } from '../domain/cipher';\nimport { EncString } from '../domain/encString';\n\nimport { Card } from './card';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { SecureNote } from './secureNote';\n\nexport class Cipher {\n    static template(): Cipher {\n        const req = new Cipher();\n        req.organizationId = null;\n        req.collectionIds = null;\n        req.folderId = null;\n        req.type = CipherType.Login;\n        req.name = 'Item name';\n        req.notes = 'Some notes about this item.';\n        req.favorite = false;\n        req.fields = [];\n        req.login = null;\n        req.secureNote = null;\n        req.card = null;\n        req.identity = null;\n        req.reprompt = CipherRepromptType.None;\n        return req;\n    }\n\n    static toView(req: Cipher, view = new CipherView()) {\n        view.type = req.type;\n        view.folderId = req.folderId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        if (view.collectionIds || req.collectionIds) {\n            const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n            view.collectionIds = Array.from(set.values());\n        }\n        view.name = req.name;\n        view.notes = req.notes;\n        view.favorite = req.favorite;\n        view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n        if (req.fields != null) {\n            view.fields = req.fields.map(f => Field.toView(f));\n        }\n\n        switch (req.type) {\n            case CipherType.Login:\n                view.login = Login.toView(req.login);\n                break;\n            case CipherType.SecureNote:\n                view.secureNote = SecureNote.toView(req.secureNote);\n                break;\n            case CipherType.Card:\n                view.card = Card.toView(req.card);\n                break;\n            case CipherType.Identity:\n                view.identity = Identity.toView(req.identity);\n                break;\n        }\n\n        return view;\n    }\n\n    static toDomain(req: Cipher, domain = new CipherDomain()) {\n        domain.type = req.type;\n        domain.folderId = req.folderId;\n        if (domain.organizationId == null) {\n            domain.organizationId = req.organizationId;\n        }\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        domain.notes = req.notes != null ? new EncString(req.notes) : null;\n        domain.favorite = req.favorite;\n        domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n        if (req.fields != null) {\n            domain.fields = req.fields.map(f => Field.toDomain(f));\n        }\n\n        switch (req.type) {\n            case CipherType.Login:\n                domain.login = Login.toDomain(req.login);\n                break;\n            case CipherType.SecureNote:\n                domain.secureNote = SecureNote.toDomain(req.secureNote);\n                break;\n            case CipherType.Card:\n                domain.card = Card.toDomain(req.card);\n                break;\n            case CipherType.Identity:\n                domain.identity = Identity.toDomain(req.identity);\n                break;\n        }\n\n        return domain;\n    }\n\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    collectionIds: string[];\n    name: string;\n    notes: string;\n    favorite: boolean;\n    fields: Field[];\n    login: Login;\n    secureNote: SecureNote;\n    card: Card;\n    identity: Identity;\n    reprompt: CipherRepromptType;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView | CipherDomain) {\n        this.organizationId = o.organizationId;\n        this.folderId = o.folderId;\n        this.type = o.type;\n        this.reprompt = o.reprompt;\n\n        if (o instanceof CipherView) {\n            this.name = o.name;\n            this.notes = o.notes;\n        } else {\n            this.name = o.name?.encryptedString;\n            this.notes = o.notes?.encryptedString;\n        }\n\n        this.favorite = o.favorite;\n\n        if (o.fields != null) {\n            if (o instanceof CipherView) {\n                this.fields = o.fields.map(f => new Field(f));\n            } else {\n                this.fields = o.fields.map(f => new Field(f));\n            }\n        }\n\n        switch (o.type) {\n            case CipherType.Login:\n                this.login = new Login(o.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(o.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new Card(o.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(o.identity);\n                break;\n        }\n    }\n}\n","import { CardView } from '../view/cardView';\n\nimport { Card as CardDomain } from '../domain/card';\nimport { EncString } from '../domain/encString';\n\nexport class Card {\n    static template(): Card {\n        const req = new Card();\n        req.cardholderName = 'John Doe';\n        req.brand = 'visa';\n        req.number = '4242424242424242';\n        req.expMonth = '04';\n        req.expYear = '2023';\n        req.code = '123';\n        return req;\n    }\n\n    static toView(req: Card, view = new CardView()) {\n        view.cardholderName = req.cardholderName;\n        view.brand = req.brand;\n        view.number = req.number;\n        view.expMonth = req.expMonth;\n        view.expYear = req.expYear;\n        view.code = req.code;\n        return view;\n    }\n\n    static toDomain(req: Card, domain = new CardDomain()) {\n        domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n        domain.brand = req.brand != null ? new EncString(req.brand) : null;\n        domain.number = req.number != null ? new EncString(req.number) : null;\n        domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n        domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n        domain.code = req.code != null ? new EncString(req.code) : null;\n        return domain;\n    }\n\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(o?: CardView | CardDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof CardView) {\n            this.cardholderName = o.cardholderName;\n            this.brand = o.brand;\n            this.number = o.number;\n            this.expMonth = o.expMonth;\n            this.expYear = o.expYear;\n            this.code = o.code;\n        } else {\n            this.cardholderName = o.cardholderName?.encryptedString;\n            this.brand = o.brand?.encryptedString;\n            this.number = o.number?.encryptedString;\n            this.expMonth = o.expMonth?.encryptedString;\n            this.expYear = o.expYear?.encryptedString;\n            this.code = o.code?.encryptedString;\n        }\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldView } from '../view/fieldView';\n\nimport { EncString } from '../domain/encString';\nimport { Field as FieldDomain } from '../domain/field';\n\nexport class Field {\n    static template(): Field {\n        const req = new Field();\n        req.name = 'Field name';\n        req.value = 'Some value';\n        req.type = FieldType.Text;\n        return req;\n    }\n\n    static toView(req: Field, view = new FieldView()) {\n        view.type = req.type;\n        view.value = req.value;\n        view.name = req.name;\n        return view;\n    }\n\n    static toDomain(req: Field, domain = new FieldDomain()) {\n        domain.type = req.type;\n        domain.value = req.value != null ? new EncString(req.value) : null;\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        return domain;\n    }\n\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(o?: FieldView | FieldDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof FieldView) {\n            this.name = o.name;\n            this.value = o.value;\n        } else {\n            this.name = o.name?.encryptedString;\n            this.value = o.value?.encryptedString;\n        }\n        this.type = o.type;\n    }\n}\n","import { IdentityView } from '../view/identityView';\n\nimport { EncString } from '../domain/encString';\nimport { Identity as IdentityDomain } from '../domain/identity';\n\nexport class Identity {\n    static template(): Identity {\n        const req = new Identity();\n        req.title = 'Mr';\n        req.firstName = 'John';\n        req.middleName = 'William';\n        req.lastName = 'Doe';\n        req.address1 = '123 Any St';\n        req.address2 = 'Apt #123';\n        req.address3 = null;\n        req.city = 'New York';\n        req.state = 'NY';\n        req.postalCode = '10001';\n        req.country = 'US';\n        req.company = 'Acme Inc.';\n        req.email = 'john@company.com';\n        req.phone = '5555551234';\n        req.ssn = '000-123-4567';\n        req.username = 'jdoe';\n        req.passportNumber = 'US-123456789';\n        req.licenseNumber = 'D123-12-123-12333';\n        return req;\n    }\n\n    static toView(req: Identity, view = new IdentityView()) {\n        view.title = req.title;\n        view.firstName = req.firstName;\n        view.middleName = req.middleName;\n        view.lastName = req.lastName;\n        view.address1 = req.address1;\n        view.address2 = req.address2;\n        view.address3 = req.address3;\n        view.city = req.city;\n        view.state = req.state;\n        view.postalCode = req.postalCode;\n        view.country = req.country;\n        view.company = req.company;\n        view.email = req.email;\n        view.phone = req.phone;\n        view.ssn = req.ssn;\n        view.username = req.username;\n        view.passportNumber = req.passportNumber;\n        view.licenseNumber = req.licenseNumber;\n        return view;\n    }\n\n    static toDomain(req: Identity, domain = new IdentityDomain()) {\n        domain.title = req.title != null ? new EncString(req.title) : null;\n        domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n        domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n        domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n        domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n        domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n        domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n        domain.city = req.city != null ? new EncString(req.city) : null;\n        domain.state = req.state != null ? new EncString(req.state) : null;\n        domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n        domain.country = req.country != null ? new EncString(req.country) : null;\n        domain.company = req.company != null ? new EncString(req.company) : null;\n        domain.email = req.email != null ? new EncString(req.email) : null;\n        domain.phone = req.phone != null ? new EncString(req.phone) : null;\n        domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n        domain.username = req.username != null ? new EncString(req.username) : null;\n        domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n        domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n        return domain;\n    }\n\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(o?: IdentityView | IdentityDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof IdentityView) {\n            this.title = o.title;\n            this.firstName = o.firstName;\n            this.middleName = o.middleName;\n            this.lastName = o.lastName;\n            this.address1 = o.address1;\n            this.address2 = o.address2;\n            this.address3 = o.address3;\n            this.city = o.city;\n            this.state = o.state;\n            this.postalCode = o.postalCode;\n            this.country = o.country;\n            this.company = o.company;\n            this.email = o.email;\n            this.phone = o.phone;\n            this.ssn = o.ssn;\n            this.username = o.username;\n            this.passportNumber = o.passportNumber;\n            this.licenseNumber = o.licenseNumber;\n        } else {\n            this.title = o.title?.encryptedString;\n            this.firstName = o.firstName?.encryptedString;\n            this.middleName = o.middleName?.encryptedString;\n            this.lastName = o.lastName?.encryptedString;\n            this.address1 = o.address1?.encryptedString;\n            this.address2 = o.address2?.encryptedString;\n            this.address3 = o.address3?.encryptedString;\n            this.city = o.city?.encryptedString;\n            this.state = o.state?.encryptedString;\n            this.postalCode = o.postalCode?.encryptedString;\n            this.country = o.country?.encryptedString;\n            this.company = o.company?.encryptedString;\n            this.email = o.email?.encryptedString;\n            this.phone = o.phone?.encryptedString;\n            this.ssn = o.ssn?.encryptedString;\n            this.username = o.username?.encryptedString;\n            this.passportNumber = o.passportNumber?.encryptedString;\n            this.licenseNumber = o.licenseNumber?.encryptedString;\n        }\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginView } from '../view/loginView';\n\nimport { EncString } from '../domain/encString';\nimport { Login as LoginDomain } from '../domain/login';\n\nexport class Login {\n    static template(): Login {\n        const req = new Login();\n        req.uris = [];\n        req.username = 'jdoe';\n        req.password = 'myp@ssword123';\n        req.totp = 'JBSWY3DPEHPK3PXP';\n        return req;\n    }\n\n    static toView(req: Login, view = new LoginView()) {\n        if (req.uris != null) {\n            view.uris = req.uris.map(u => LoginUri.toView(u));\n        }\n        view.username = req.username;\n        view.password = req.password;\n        view.totp = req.totp;\n        return view;\n    }\n\n    static toDomain(req: Login, domain = new LoginDomain()) {\n        if (req.uris != null) {\n            domain.uris = req.uris.map(u => LoginUri.toDomain(u));\n        }\n        domain.username = req.username != null ? new EncString(req.username) : null;\n        domain.password = req.password != null ? new EncString(req.password) : null;\n        domain.totp = req.totp != null ? new EncString(req.totp) : null;\n        return domain;\n    }\n\n    uris: LoginUri[];\n    username: string;\n    password: string;\n    totp: string;\n\n    constructor(o?: LoginView | LoginDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o.uris != null) {\n            if (o instanceof LoginView) {\n                this.uris = o.uris.map(u => new LoginUri(u));\n            } else {\n                this.uris = o.uris.map(u => new LoginUri(u));\n            }\n        }\n\n        if (o instanceof LoginView) {\n            this.username = o.username;\n            this.password = o.password;\n            this.totp = o.totp;\n        } else {\n            this.username = o.username?.encryptedString;\n            this.password = o.password?.encryptedString;\n            this.totp = o.totp?.encryptedString;\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport { EncString } from '../domain/encString';\nimport { LoginUri as LoginUriDomain } from '../domain/loginUri';\n\nexport class LoginUri {\n    static template(): LoginUri {\n        const req = new LoginUri();\n        req.uri = 'https://google.com';\n        req.match = null;\n        return req;\n    }\n\n    static toView(req: LoginUri, view = new LoginUriView()) {\n        view.uri = req.uri;\n        view.match = req.match;\n        return view;\n    }\n\n    static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n        domain.uri = req.uri != null ? new EncString(req.uri) : null;\n        domain.match = req.match;\n        return domain;\n    }\n\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(o?: LoginUriView | LoginUriDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof LoginUriView) {\n            this.uri = o.uri;\n        } else {\n            this.uri = o.uri?.encryptedString;\n        }\n        this.match = o.match;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteView } from '../view/secureNoteView';\n\nimport { SecureNote as SecureNoteDomain } from '../domain/secureNote';\n\nexport class SecureNote {\n    static template(): SecureNote {\n        const req = new SecureNote();\n        req.type = SecureNoteType.Generic;\n        return req;\n    }\n\n    static toView(req: SecureNote, view = new SecureNoteView()) {\n        view.type = req.type;\n        return view;\n    }\n\n    static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n        view.type = req.type;\n        return view;\n    }\n\n    type: SecureNoteType;\n\n    constructor(o?: SecureNoteView | SecureNoteDomain) {\n        if (o == null) {\n            return;\n        }\n\n        this.type = o.type;\n    }\n}\n","import { CollectionView } from '../view/collectionView';\n\nimport { Collection as CollectionDomain } from '../domain/collection';\nimport { EncString } from '../domain/encString';\n\nexport class Collection {\n    static template(): Collection {\n        const req = new Collection();\n        req.organizationId = '00000000-0000-0000-0000-000000000000';\n        req.name = 'Collection name';\n        req.externalId = null;\n        return req;\n    }\n\n    static toView(req: Collection, view = new CollectionView()) {\n        view.name = req.name;\n        view.externalId = req.externalId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        return view;\n    }\n\n    static toDomain(req: Collection, domain = new CollectionDomain()) {\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        domain.externalId = req.externalId;\n        if (domain.organizationId == null) {\n            domain.organizationId = req.organizationId;\n        }\n        return domain;\n    }\n\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView | CollectionDomain) {\n        this.organizationId = o.organizationId;\n        if (o instanceof CollectionView) {\n            this.name = o.name;\n        } else {\n            this.name = o.name?.encryptedString;\n        }\n        this.externalId = o.externalId;\n    }\n}\n","import { EventType } from '../../enums/eventType';\nimport { EventView } from '../view/eventView';\n\nexport class Event {\n    message: string;\n    appIcon: string;\n    appName: string;\n    userId: string;\n    userName: string;\n    userEmail: string;\n    date: string;\n    ip: string;\n    type: string;\n\n    constructor(event: EventView) {\n        this.message = event.humanReadableMessage;\n        this.appIcon = event.appIcon;\n        this.appName = event.appName;\n        this.userId = event.userId;\n        this.userName = event.userName;\n        this.userEmail = event.userEmail;\n        this.date = event.date;\n        this.ip = event.ip;\n        this.type = EventType[event.type];\n    }\n}\n","import { FolderView } from '../view/folderView';\n\nimport { EncString } from '../domain/encString';\nimport { Folder as FolderDomain } from '../domain/folder';\n\nexport class Folder {\n    static template(): Folder {\n        const req = new Folder();\n        req.name = 'Folder name';\n        return req;\n    }\n\n    static toView(req: Folder, view = new FolderView()) {\n        view.name = req.name;\n        return view;\n    }\n\n    static toDomain(req: Folder, domain = new FolderDomain()) {\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        return domain;\n    }\n\n    name: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView | FolderDomain) {\n        if (o instanceof FolderView) {\n            this.name = o.name;\n        } else {\n            this.name = o.name?.encryptedString;\n        }\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { FileUploadService as FileUploadServiceAbstraction } from '../abstractions/fileUpload.service';\nimport { LogService } from '../abstractions/log.service';\n\nimport { FileUploadType } from '../enums/fileUploadType';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\n\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\n\nimport { AzureFileUploadService } from './azureFileUpload.service';\nimport { BitwardenFileUploadService } from './bitwardenFileUpload.service';\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n    private azureFileUploadService: AzureFileUploadService;\n    private bitwardenFileUploadService: BitwardenFileUploadService;\n\n    constructor(private logService: LogService, private apiService: ApiService) {\n        this.azureFileUploadService = new AzureFileUploadService(logService);\n        this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n    }\n\n    async uploadSendFile(uploadData: SendFileUploadDataResponse, fileName: EncString, encryptedFileData: EncArrayBuffer) {\n        try {\n            switch (uploadData.fileUploadType) {\n                case FileUploadType.Direct:\n                    await this.bitwardenFileUploadService.upload(fileName.encryptedString, encryptedFileData,\n                        fd => this.apiService.postSendFile(uploadData.sendResponse.id, uploadData.sendResponse.file.id, fd));\n                    break;\n                case FileUploadType.Azure:\n                    const renewalCallback = async () => {\n                        const renewalResponse = await this.apiService.renewSendFileUploadUrl(uploadData.sendResponse.id,\n                            uploadData.sendResponse.file.id);\n                        return renewalResponse.url;\n                    };\n                    await this.azureFileUploadService.upload(uploadData.url, encryptedFileData,\n                        renewalCallback);\n                    break;\n                default:\n                    throw new Error('Unknown file upload type');\n            }\n        } catch (e) {\n            await this.apiService.deleteSend(uploadData.sendResponse.id);\n            throw e;\n        }\n    }\n\n    async uploadCipherAttachment(admin: boolean, uploadData: AttachmentUploadDataResponse, encryptedFileName: EncString,\n        encryptedFileData: EncArrayBuffer) {\n        const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n        try {\n            switch (uploadData.fileUploadType) {\n                case FileUploadType.Direct:\n                    await this.bitwardenFileUploadService.upload(encryptedFileName.encryptedString, encryptedFileData,\n                        fd => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd));\n                    break;\n                case FileUploadType.Azure:\n                    const renewalCallback = async () => {\n                        const renewalResponse = await this.apiService.renewAttachmentUploadUrl(response.id,\n                            uploadData.attachmentId);\n                        return renewalResponse.url;\n                    };\n                    await this.azureFileUploadService.upload(uploadData.url, encryptedFileData, renewalCallback);\n                    break;\n                default:\n                    throw new Error('Unknown file upload type.');\n            }\n        } catch (e) {\n            if (admin) {\n                await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n            } else {\n                await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n            }\n            throw e;\n        }\n    }\n}\n","export enum FileUploadType {\n    Direct = 0,\n    Azure = 1,\n}\n","import { LogService } from '../abstractions/log.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n    constructor(private logService: LogService) { }\n\n    async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n        if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n            return await this.azureUploadBlob(url, data);\n        } else {\n            return await this.azureUploadBlocks(url, data, renewalCallback);\n        }\n    }\n    private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n        const urlObject = Utils.getUrl(url);\n        const headers = new Headers({\n            'x-ms-date': new Date().toUTCString(),\n            'x-ms-version': urlObject.searchParams.get('sv'),\n            'Content-Length': data.buffer.byteLength.toString(),\n            'x-ms-blob-type': 'BlockBlob',\n        });\n\n        const request = new Request(url, {\n            body: data.buffer,\n            cache: 'no-store',\n            method: 'PUT',\n            headers: headers,\n        });\n\n        const blobResponse = await fetch(request);\n\n        if (blobResponse.status !== 201) {\n            throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n        }\n    }\n    private async azureUploadBlocks(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n        const baseUrl = Utils.getUrl(url);\n        const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get('sv'));\n        let blockIndex = 0;\n        const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n        const blocksStaged: string[] = [];\n\n        if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n            throw new Error(`Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`);\n        }\n\n        try {\n            while (blockIndex < numBlocks) {\n                url = await this.renewUrlIfNecessary(url, renewalCallback);\n                const blockUrl = Utils.getUrl(url);\n                const blockId = this.encodedBlockId(blockIndex);\n                blockUrl.searchParams.append('comp', 'block');\n                blockUrl.searchParams.append('blockid', blockId);\n                const start = blockIndex * blockSize;\n                const blockData = data.buffer.slice(start, start + blockSize);\n                const blockHeaders = new Headers({\n                    'x-ms-date': new Date().toUTCString(),\n                    'x-ms-version': blockUrl.searchParams.get('sv'),\n                    'Content-Length': blockData.byteLength.toString(),\n                });\n\n                const blockRequest = new Request(blockUrl.toString(), {\n                    body: blockData,\n                    cache: 'no-store',\n                    method: 'PUT',\n                    headers: blockHeaders,\n                });\n\n                const blockResponse = await fetch(blockRequest);\n\n                if (blockResponse.status !== 201) {\n                    const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n                    this.logService.error(message + '\\n' + await blockResponse.json());\n                    throw new Error(message);\n                }\n\n                blocksStaged.push(blockId);\n                blockIndex++;\n            }\n\n            url = await this.renewUrlIfNecessary(url, renewalCallback);\n            const blockListUrl = Utils.getUrl(url);\n            const blockListXml = this.blockListXml(blocksStaged);\n            blockListUrl.searchParams.append('comp', 'blocklist');\n            const headers = new Headers({\n                'x-ms-date': new Date().toUTCString(),\n                'x-ms-version': blockListUrl.searchParams.get('sv'),\n                'Content-Length': blockListXml.length.toString(),\n            });\n\n            const request = new Request(blockListUrl.toString(), {\n                body: blockListXml,\n                cache: 'no-store',\n                method: 'PUT',\n                headers: headers,\n            });\n\n            const response = await fetch(request);\n\n            if (response.status !== 201) {\n                const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n                this.logService.error(message + '\\n' + await response.json());\n                throw new Error(message);\n            }\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    private async renewUrlIfNecessary(url: string, renewalCallback: () => Promise<string>): Promise<string> {\n        const urlObject = Utils.getUrl(url);\n        const expiry = new Date(urlObject.searchParams.get('se') ?? '');\n\n        if (isNaN(expiry.getTime())) {\n            expiry.setTime(Date.now() + 3600000);\n        }\n\n        if (expiry.getTime() < Date.now() + 1000) {\n            return await renewalCallback();\n        }\n        return url;\n    }\n\n    private encodedBlockId(blockIndex: number) {\n        // Encoded blockId max size is 64, so pre-encoding max size is 48\n        const utfBlockId = ('000000000000000000000000000000000000000000000000' + blockIndex.toString()).slice(-48);\n        return Utils.fromUtf8ToB64(utfBlockId);\n    }\n\n    private blockListXml(blockIdList: string[]) {\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n        blockIdList.forEach(blockId => {\n            xml += `<Latest>${blockId}</Latest>`;\n        });\n        xml += '</BlockList>';\n        return xml;\n    }\n\n    private getMaxBlockSize(version: string) {\n        if (Version.compare(version, '2019-12-12') >= 0) {\n            return 4000 * 1024 * 1024; // 4000 MiB\n        } else if (Version.compare(version, '2016-05-31') >= 0) {\n            return 100 * 1024 * 1024; // 100 MiB\n        } else {\n            return 4 * 1024 * 1024; // 4 MiB\n        }\n    }\n}\n\nclass Version {\n    /**\n     * Compares two Azure Versions against each other\n     * @param a Version to compare\n     * @param b Version to compare\n     * @returns a number less than zero if b is newer than a, 0 if equal,\n     * and greater than zero if a is newer than b\n     */\n    static compare(a: Required<Version> | string, b: Required<Version> | string) {\n        if (typeof (a) === 'string') {\n            a = new Version(a);\n        }\n\n        if (typeof (b) === 'string') {\n            b = new Version(b);\n        }\n\n        return a.year !== b.year ? a.year - b.year :\n            a.month !== b.month ? a.month - b.month :\n                a.day !== b.day ? a.day - b.day :\n                    0;\n    }\n    year = 0;\n    month = 0;\n    day = 0;\n\n    constructor(version: string) {\n        try {\n            const parts = version.split('-').map(v => Number.parseInt(v, 10));\n            this.year = parts[0];\n            this.month = parts[1];\n            this.day = parts[2];\n        } catch { }\n    }\n    /**\n     * Compares two Azure Versions against each other\n     * @param compareTo Version to compare against\n     * @returns a number less than zero if compareTo is newer, 0 if equal,\n     * and greater than zero if this is greater than compareTo\n     */\n    compare(compareTo: Required<Version> | string) {\n        return Version.compare(this, compareTo);\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\n\nimport { Utils } from '../misc/utils';\n\nexport class BitwardenFileUploadService\n{\n    constructor(private apiService: ApiService) { }\n\n    async upload(encryptedFileName: string, encryptedFileData: EncArrayBuffer, apiCall: (fd: FormData) => Promise<any>) {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encryptedFileData.buffer], { type: 'application/octet-stream' });\n            fd.append('data', blob, encryptedFileName);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('data', Buffer.from(encryptedFileData.buffer) as any, {\n                    filepath: encryptedFileName,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        await apiCall(fd);\n    }\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderRequest } from '../models/request/folderRequest';\n\nimport { FolderResponse } from '../models/response/folderResponse';\n\nimport { FolderView } from '../models/view/folderView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService as FolderServiceAbstraction } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\nimport { CipherData } from '../models/data/cipherData';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    foldersPrefix: 'folders_',\n    ciphersPrefix: 'ciphers_',\n};\nconst NestingDelimiter = '/';\n\nexport class FolderService implements FolderServiceAbstraction {\n    decryptedFolderCache: FolderView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private storageService: StorageService,\n        private i18nService: I18nService, private cipherService: CipherService) { }\n\n    clearCache(): void {\n        this.decryptedFolderCache = null;\n    }\n\n    async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n        const folder = new Folder();\n        folder.id = model.id;\n        folder.name = await this.cryptoService.encrypt(model.name, key);\n        return folder;\n    }\n\n    async get(id: string): Promise<Folder> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null || !folders.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Folder(folders[id]);\n    }\n\n    async getAll(): Promise<Folder[]> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        const response: Folder[] = [];\n        for (const id in folders) {\n            if (folders.hasOwnProperty(id)) {\n                response.push(new Folder(folders[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<FolderView[]> {\n        if (this.decryptedFolderCache != null) {\n            return this.decryptedFolderCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decFolders: FolderView[] = [];\n        const promises: Promise<any>[] = [];\n        const folders = await this.getAll();\n        folders.forEach(folder => {\n            promises.push(folder.decrypt().then(f => decFolders.push(f)));\n        });\n\n        await Promise.all(promises);\n        decFolders.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        const noneFolder = new FolderView();\n        noneFolder.name = this.i18nService.t('noneFolder');\n        decFolders.push(noneFolder);\n\n        this.decryptedFolderCache = decFolders;\n        return this.decryptedFolderCache;\n    }\n\n    async getAllNested(): Promise<TreeNode<FolderView>[]> {\n        const folders = await this.getAllDecrypted();\n        const nodes: TreeNode<FolderView>[] = [];\n        folders.forEach(f => {\n            const folderCopy = new FolderView();\n            folderCopy.id = f.id;\n            folderCopy.revisionDate = f.revisionDate;\n            const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<FolderView>> {\n        const folders = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n    }\n\n    async saveWithServer(folder: Folder): Promise<any> {\n        const request = new FolderRequest(folder);\n\n        let response: FolderResponse;\n        if (folder.id == null) {\n            response = await this.apiService.postFolder(request);\n            folder.id = response.id;\n        } else {\n            response = await this.apiService.putFolder(folder.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new FolderData(response, userId);\n        await this.upsert(data);\n    }\n\n    async upsert(folder: FolderData | FolderData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            folders = {};\n        }\n\n        if (folder instanceof FolderData) {\n            const f = folder as FolderData;\n            folders[f.id] = f;\n        } else {\n            (folder as FolderData[]).forEach(f => {\n                folders[f.id] = f;\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async replace(folders: { [id: string]: FolderData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.foldersPrefix + userId);\n        this.decryptedFolderCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (folders[id] == null) {\n                return;\n            }\n            delete folders[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete folders[i];\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n\n        // Items in a deleted folder are re-assigned to \"No Folder\"\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(Keys.ciphersPrefix + userId);\n        if (ciphers != null) {\n            const updates: CipherData[] = [];\n            for (const cId in ciphers) {\n                if (ciphers[cId].folderId === id) {\n                    ciphers[cId].folderId = null;\n                    updates.push(ciphers[cId]);\n                }\n            }\n            if (updates.length > 0) {\n                this.cipherService.upsert(updates);\n            }\n        }\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteFolder(id);\n        await this.delete(id);\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport {\n    ImportOption,\n    ImportService as ImportServiceAbstraction,\n} from '../abstractions/import.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { Utils } from '../misc/utils';\n\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KvpRequest } from '../models/request/kvpRequest';\n\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { CipherView } from '../models/view/cipherView';\n\nimport { AscendoCsvImporter } from '../importers/ascendoCsvImporter';\nimport { AvastCsvImporter } from '../importers/avastCsvImporter';\nimport { AvastJsonImporter } from '../importers/avastJsonImporter';\nimport { AviraCsvImporter } from '../importers/aviraCsvImporter';\nimport { BitwardenCsvImporter } from '../importers/bitwardenCsvImporter';\nimport { BitwardenJsonImporter } from '../importers/bitwardenJsonImporter';\nimport { BlackBerryCsvImporter } from '../importers/blackBerryCsvImporter';\nimport { BlurCsvImporter } from '../importers/blurCsvImporter';\nimport { ButtercupCsvImporter } from '../importers/buttercupCsvImporter';\nimport { ChromeCsvImporter } from '../importers/chromeCsvImporter';\nimport { ClipperzHtmlImporter } from '../importers/clipperzHtmlImporter';\nimport { CodebookCsvImporter } from '../importers/codebookCsvImporter';\nimport { DashlaneJsonImporter } from '../importers/dashlaneJsonImporter';\nimport { EncryptrCsvImporter } from '../importers/encryptrCsvImporter';\nimport { EnpassCsvImporter } from '../importers/enpassCsvImporter';\nimport { EnpassJsonImporter } from '../importers/enpassJsonImporter';\nimport { FirefoxCsvImporter } from '../importers/firefoxCsvImporter';\nimport { FSecureFskImporter } from '../importers/fsecureFskImporter';\nimport { GnomeJsonImporter } from '../importers/gnomeJsonImporter';\nimport { Importer } from '../importers/importer';\nimport { KasperskyTxtImporter } from '../importers/kasperskyTxtImporter';\nimport { KeePass2XmlImporter } from '../importers/keepass2XmlImporter';\nimport { KeePassXCsvImporter } from '../importers/keepassxCsvImporter';\nimport { KeeperCsvImporter } from '../importers/keeperCsvImporter';\nimport { LastPassCsvImporter } from '../importers/lastpassCsvImporter';\nimport { LogMeOnceCsvImporter } from '../importers/logMeOnceCsvImporter';\nimport { MeldiumCsvImporter } from '../importers/meldiumCsvImporter';\nimport { MSecureCsvImporter } from '../importers/msecureCsvImporter';\nimport { MykiCsvImporter } from '../importers/mykiCsvImporter';\nimport { NordPassCsvImporter } from '../importers/nordpassCsvImporter';\nimport { OnePassword1PifImporter } from '../importers/onepasswordImporters/onepassword1PifImporter';\nimport { OnePasswordMacCsvImporter } from '../importers/onepasswordImporters/onepasswordMacCsvImporter';\nimport { OnePasswordWinCsvImporter } from '../importers/onepasswordImporters/onepasswordWinCsvImporter';\nimport { PadlockCsvImporter } from '../importers/padlockCsvImporter';\nimport { PassKeepCsvImporter } from '../importers/passkeepCsvImporter';\nimport { PassmanJsonImporter } from '../importers/passmanJsonImporter';\nimport { PasspackCsvImporter } from '../importers/passpackCsvImporter';\nimport { PasswordAgentCsvImporter } from '../importers/passwordAgentCsvImporter';\nimport { PasswordBossJsonImporter } from '../importers/passwordBossJsonImporter';\nimport { PasswordDragonXmlImporter } from '../importers/passwordDragonXmlImporter';\nimport { PasswordSafeXmlImporter } from '../importers/passwordSafeXmlImporter';\nimport { PasswordWalletTxtImporter } from '../importers/passwordWalletTxtImporter';\nimport { RememBearCsvImporter } from '../importers/rememBearCsvImporter';\nimport { RoboFormCsvImporter } from '../importers/roboformCsvImporter';\nimport { SafeInCloudXmlImporter } from '../importers/safeInCloudXmlImporter';\nimport { SaferPassCsvImporter } from '../importers/saferpassCsvImport';\nimport { SecureSafeCsvImporter } from '../importers/secureSafeCsvImporter';\nimport { SplashIdCsvImporter } from '../importers/splashIdCsvImporter';\nimport { StickyPasswordXmlImporter } from '../importers/stickyPasswordXmlImporter';\nimport { TrueKeyCsvImporter } from '../importers/truekeyCsvImporter';\nimport { UpmCsvImporter } from '../importers/upmCsvImporter';\nimport { YotiCsvImporter } from '../importers/yotiCsvImporter';\nimport { ZohoVaultCsvImporter } from '../importers/zohoVaultCsvImporter';\n\nexport class ImportService implements ImportServiceAbstraction {\n    featuredImportOptions = [\n        { id: 'bitwardenjson', name: 'Bitwarden (json)' },\n        { id: 'bitwardencsv', name: 'Bitwarden (csv)' },\n        { id: 'lastpasscsv', name: 'LastPass (csv)' },\n        { id: 'chromecsv', name: 'Chrome (csv)' },\n        { id: 'firefoxcsv', name: 'Firefox (csv)' },\n        { id: 'keepass2xml', name: 'KeePass 2 (xml)' },\n        { id: '1password1pif', name: '1Password (1pif)' },\n        { id: 'dashlanejson', name: 'Dashlane (json)' },\n    ];\n\n    regularImportOptions: ImportOption[] = [\n        { id: 'keepassxcsv', name: 'KeePassX (csv)' },\n        { id: '1passwordwincsv', name: '1Password 6 and 7 Windows (csv)' },\n        { id: '1passwordmaccsv', name: '1Password 6 and 7 Mac (csv)' },\n        { id: 'roboformcsv', name: 'RoboForm (csv)' },\n        { id: 'keepercsv', name: 'Keeper (csv)' },\n        { id: 'enpasscsv', name: 'Enpass (csv)' },\n        { id: 'enpassjson', name: 'Enpass (json)' },\n        { id: 'safeincloudxml', name: 'SafeInCloud (xml)' },\n        { id: 'pwsafexml', name: 'Password Safe (xml)' },\n        { id: 'stickypasswordxml', name: 'Sticky Password (xml)' },\n        { id: 'msecurecsv', name: 'mSecure (csv)' },\n        { id: 'truekeycsv', name: 'True Key (csv)' },\n        { id: 'passwordbossjson', name: 'Password Boss (json)' },\n        { id: 'zohovaultcsv', name: 'Zoho Vault (csv)' },\n        { id: 'splashidcsv', name: 'SplashID (csv)' },\n        { id: 'passworddragonxml', name: 'Password Dragon (xml)' },\n        { id: 'padlockcsv', name: 'Padlock (csv)' },\n        { id: 'passboltcsv', name: 'Passbolt (csv)' },\n        { id: 'clipperzhtml', name: 'Clipperz (html)' },\n        { id: 'aviracsv', name: 'Avira (csv)' },\n        { id: 'saferpasscsv', name: 'SaferPass (csv)' },\n        { id: 'upmcsv', name: 'Universal Password Manager (csv)' },\n        { id: 'ascendocsv', name: 'Ascendo DataVault (csv)' },\n        { id: 'meldiumcsv', name: 'Meldium (csv)' },\n        { id: 'passkeepcsv', name: 'PassKeep (csv)' },\n        { id: 'operacsv', name: 'Opera (csv)' },\n        { id: 'vivaldicsv', name: 'Vivaldi (csv)' },\n        { id: 'gnomejson', name: 'GNOME Passwords and Keys/Seahorse (json)' },\n        { id: 'blurcsv', name: 'Blur (csv)' },\n        { id: 'passwordagentcsv', name: 'Password Agent (csv)' },\n        { id: 'passpackcsv', name: 'Passpack (csv)' },\n        { id: 'passmanjson', name: 'Passman (json)' },\n        { id: 'avastcsv', name: 'Avast Passwords (csv)' },\n        { id: 'avastjson', name: 'Avast Passwords (json)' },\n        { id: 'fsecurefsk', name: 'F-Secure KEY (fsk)' },\n        { id: 'kasperskytxt', name: 'Kaspersky Password Manager (txt)' },\n        { id: 'remembearcsv', name: 'RememBear (csv)' },\n        { id: 'passwordwallettxt', name: 'PasswordWallet (txt)' },\n        { id: 'mykicsv', name: 'Myki (csv)' },\n        { id: 'securesafecsv', name: 'SecureSafe (csv)' },\n        { id: 'logmeoncecsv', name: 'LogMeOnce (csv)' },\n        { id: 'blackberrycsv', name: 'BlackBerry Password Keeper (csv)' },\n        { id: 'buttercupcsv', name: 'Buttercup (csv)' },\n        { id: 'codebookcsv', name: 'Codebook (csv)' },\n        { id: 'encryptrcsv', name: 'Encryptr (csv)' },\n        { id: 'yoticsv', name: 'Yoti (csv)' },\n        { id: 'nordpasscsv', name: 'Nordpass (csv)' },\n    ];\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private apiService: ApiService, private i18nService: I18nService,\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService) { }\n\n    getImportOptions(): ImportOption[] {\n        return this.featuredImportOptions.concat(this.regularImportOptions);\n    }\n\n    async import(importer: Importer, fileContents: string, organizationId: string = null): Promise<Error> {\n        const importResult = await importer.parse(fileContents);\n        if (importResult.success) {\n            if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n                return new Error(this.i18nService.t('importNothingError'));\n            } else if (importResult.ciphers.length > 0) {\n                const halfway = Math.floor(importResult.ciphers.length / 2);\n                const last = importResult.ciphers.length - 1;\n\n                if (this.badData(importResult.ciphers[0]) &&\n                    this.badData(importResult.ciphers[halfway]) &&\n                    this.badData(importResult.ciphers[last])) {\n                    return new Error(this.i18nService.t('importFormatError'));\n                }\n            }\n            try {\n                await this.postImport(importResult, organizationId);\n            } catch (error) {\n                const errorResponse = new ErrorResponse(error, 400);\n                return this.handleServerError(errorResponse, importResult);\n            }\n            return null;\n        } else {\n            if (!Utils.isNullOrWhitespace(importResult.errorMessage)) {\n                return new Error(importResult.errorMessage);\n            } else {\n                return new Error(this.i18nService.t('importFormatError'));\n            }\n        }\n    }\n\n    getImporter(format: string, organizationId: string = null): Importer {\n        const importer = this.getImporterInstance(format);\n        if (importer == null) {\n            return null;\n        }\n        importer.organizationId = organizationId;\n        return importer;\n    }\n\n    private getImporterInstance(format: string) {\n        if (format == null || format === '') {\n            return null;\n        }\n\n        switch (format) {\n            case 'bitwardencsv':\n                return new BitwardenCsvImporter();\n            case 'bitwardenjson':\n                return new BitwardenJsonImporter(this.cryptoService, this.i18nService);\n            case 'lastpasscsv':\n            case 'passboltcsv':\n                return new LastPassCsvImporter();\n            case 'keepassxcsv':\n                return new KeePassXCsvImporter();\n            case 'aviracsv':\n                return new AviraCsvImporter();\n            case 'blurcsv':\n                return new BlurCsvImporter();\n            case 'safeincloudxml':\n                return new SafeInCloudXmlImporter();\n            case 'padlockcsv':\n                return new PadlockCsvImporter();\n            case 'keepass2xml':\n                return new KeePass2XmlImporter();\n            case 'chromecsv':\n            case 'operacsv':\n            case 'vivaldicsv':\n                return new ChromeCsvImporter();\n            case 'firefoxcsv':\n                return new FirefoxCsvImporter();\n            case 'upmcsv':\n                return new UpmCsvImporter();\n            case 'saferpasscsv':\n                return new SaferPassCsvImporter();\n            case 'meldiumcsv':\n                return new MeldiumCsvImporter();\n            case '1password1pif':\n                return new OnePassword1PifImporter();\n            case '1passwordwincsv':\n                return new OnePasswordWinCsvImporter();\n            case '1passwordmaccsv':\n                return new OnePasswordMacCsvImporter();\n            case 'keepercsv':\n                return new KeeperCsvImporter();\n            case 'passworddragonxml':\n                return new PasswordDragonXmlImporter();\n            case 'enpasscsv':\n                return new EnpassCsvImporter();\n            case 'enpassjson':\n                return new EnpassJsonImporter();\n            case 'pwsafexml':\n                return new PasswordSafeXmlImporter();\n            case 'dashlanejson':\n                return new DashlaneJsonImporter();\n            case 'msecurecsv':\n                return new MSecureCsvImporter();\n            case 'stickypasswordxml':\n                return new StickyPasswordXmlImporter();\n            case 'truekeycsv':\n                return new TrueKeyCsvImporter();\n            case 'clipperzhtml':\n                return new ClipperzHtmlImporter();\n            case 'roboformcsv':\n                return new RoboFormCsvImporter();\n            case 'ascendocsv':\n                return new AscendoCsvImporter();\n            case 'passwordbossjson':\n                return new PasswordBossJsonImporter();\n            case 'zohovaultcsv':\n                return new ZohoVaultCsvImporter();\n            case 'splashidcsv':\n                return new SplashIdCsvImporter();\n            case 'passkeepcsv':\n                return new PassKeepCsvImporter();\n            case 'gnomejson':\n                return new GnomeJsonImporter();\n            case 'passwordagentcsv':\n                return new PasswordAgentCsvImporter();\n            case 'passpackcsv':\n                return new PasspackCsvImporter();\n            case 'passmanjson':\n                return new PassmanJsonImporter();\n            case 'avastcsv':\n                return new AvastCsvImporter();\n            case 'avastjson':\n                return new AvastJsonImporter();\n            case 'fsecurefsk':\n                return new FSecureFskImporter();\n            case 'kasperskytxt':\n                return new KasperskyTxtImporter();\n            case 'remembearcsv':\n                return new RememBearCsvImporter();\n            case 'passwordwallettxt':\n                return new PasswordWalletTxtImporter();\n            case 'mykicsv':\n                return new MykiCsvImporter();\n            case 'securesafecsv':\n                return new SecureSafeCsvImporter();\n            case 'logmeoncecsv':\n                return new LogMeOnceCsvImporter();\n            case 'blackberrycsv':\n                return new BlackBerryCsvImporter();\n            case 'buttercupcsv':\n                return new ButtercupCsvImporter();\n            case 'codebookcsv':\n                return new CodebookCsvImporter();\n            case 'encryptrcsv':\n                return new EncryptrCsvImporter();\n            case 'yoticsv':\n                return new YotiCsvImporter();\n            case 'nordpasscsv':\n                return new NordPassCsvImporter();\n            default:\n                return null;\n        }\n    }\n\n    private async postImport(importResult: ImportResult, organizationId: string = null) {\n        if (organizationId == null) {\n            const request = new ImportCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.folders != null) {\n                for (let i = 0; i < importResult.folders.length; i++) {\n                    const f = await this.folderService.encrypt(importResult.folders[i]);\n                    request.folders.push(new FolderRequest(f));\n                }\n            }\n            if (importResult.folderRelationships != null) {\n                importResult.folderRelationships.forEach(r =>\n                    request.folderRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportCiphers(request);\n        } else {\n            const request = new ImportOrganizationCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                importResult.ciphers[i].organizationId = organizationId;\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.collections != null) {\n                for (let i = 0; i < importResult.collections.length; i++) {\n                    importResult.collections[i].organizationId = organizationId;\n                    const c = await this.collectionService.encrypt(importResult.collections[i]);\n                    request.collections.push(new CollectionRequest(c));\n                }\n            }\n            if (importResult.collectionRelationships != null) {\n                importResult.collectionRelationships.forEach(r =>\n                    request.collectionRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportOrganizationCiphers(organizationId, request);\n        }\n    }\n\n    private badData(c: CipherView) {\n        return (c.name == null || c.name === '--') &&\n            (c.type === CipherType.Login && c.login != null && Utils.isNullOrWhitespace(c.login.password));\n    }\n\n    private handleServerError(errorResponse: ErrorResponse, importResult: ImportResult): Error {\n        if (errorResponse.validationErrors == null) {\n            return new Error(errorResponse.message);\n        }\n\n        let errorMessage = '';\n\n        Object.entries(errorResponse.validationErrors).forEach(([key, value], index) => {\n            let item;\n            let itemType;\n            const i = Number(key.match(/[0-9]+/)[0]);\n\n            switch (key.match(/^\\w+/)[0]) {\n                case 'Ciphers':\n                    item = importResult.ciphers[i];\n                    itemType = CipherType[item.type];\n                    break;\n                case 'Folders':\n                    item = importResult.folders[i];\n                    itemType = 'Folder';\n                    break;\n                case 'Collections':\n                    item = importResult.collections[i];\n                    itemType = 'Collection';\n                    break;\n                default:\n                    return;\n            }\n\n            if (index > 0) {\n                errorMessage += '\\n\\n';\n            }\n\n            if (itemType !== 'Folder' && itemType !== 'Collection') {\n                errorMessage += '[' + (i + 1) + '] ';\n            }\n\n            errorMessage += '[' + itemType + '] \"' + item.name + '\": ' + value;\n        });\n\n        return new Error(errorMessage);\n    }\n}\n","import { CipherRequest } from './cipherRequest';\nimport { FolderRequest } from './folderRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    folders: FolderRequest[] = [];\n    folderRelationships: KvpRequest<number, number>[] = [];\n}\n","import { CipherRequest } from './cipherRequest';\nimport { CollectionRequest } from './collectionRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportOrganizationCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    collections: CollectionRequest[] = [];\n    collectionRelationships: KvpRequest<number, number>[] = [];\n}\n","export class KvpRequest<TK, TV> {\n    key: TK;\n    value: TV;\n\n    constructor(key: TK, value: TV) {\n        this.key = key;\n        this.value = value;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 2) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const val: string = value[i + 2];\n                    const field: string = value[i + 1];\n                    if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n                        continue;\n                    }\n\n                    const fieldLower = field.toLowerCase();\n                    if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.password = this.getValueOrDefault(val);\n                    } else if (cipher.login.username == null &&\n                        this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.username = this.getValueOrDefault(val);\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                    } else {\n                        this.processKvp(cipher, field, val);\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AvastCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.login.uris = this.makeUriArray(value.web);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.username = this.getValueOrDefault(value.login);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class AvastJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        if (results.logins != null) {\n            results.logins.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.name = this.getValueOrDefault(value.custName);\n                cipher.notes = this.getValueOrDefault(value.note);\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.password = this.getValueOrDefault(value.pwd);\n                cipher.login.username = this.getValueOrDefault(value.loginName);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (results.notes != null) {\n            results.notes.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.label);\n                cipher.notes = this.getValueOrDefault(value.text);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (results.cards != null) {\n            results.cards.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.type = CipherType.Card;\n                cipher.name = this.getValueOrDefault(value.custName);\n                cipher.notes = this.getValueOrDefault(value.note);\n                cipher.card.cardholderName = this.getValueOrDefault(value.holderName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (value.expirationDate != null) {\n                    if (value.expirationDate.month != null) {\n                        cipher.card.expMonth = value.expirationDate.month + '';\n                    }\n                    if (value.expirationDate.year != null) {\n                        cipher.card.expYear = value.expirationDate.year + '';\n                    }\n                }\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name,\n                this.getValueOrDefault(this.nameFromUrl(value.website), '--'));\n            cipher.login.uris = this.makeUriArray(value.website);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.username) && !this.isNullOrWhitespace(value.secondary_username)) {\n                cipher.login.username = value.secondary_username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.notes = this.getValueOrDefault(value.secondary_username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherRepromptType } from '../enums/cipherRepromptType';\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n                const collections = (value.collections as string).split(',');\n                collections.forEach(col => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === col) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = col;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization) {\n                this.processFolder(result, value.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.favorite, '0') !== '0' ? true : false;\n            cipher.type = CipherType.Login;\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            try {\n                cipher.reprompt = parseInt(this.getValueOrDefault(value.reprompt, CipherRepromptType.None.toString()), 10);\n            } catch (e) {\n                // tslint:disable-next-line\n                console.error('Unable to parse reprompt value', e);\n                cipher.reprompt = CipherRepromptType.None;\n            }\n\n            if (!this.isNullOrWhitespace(value.fields)) {\n                const fields = this.splitNewLine(value.fields);\n                for (let i = 0; i < fields.length; i++) {\n                    if (this.isNullOrWhitespace(fields[i])) {\n                        continue;\n                    }\n\n                    const delimPosition = fields[i].lastIndexOf(': ');\n                    if (delimPosition === -1) {\n                        continue;\n                    }\n\n                    if (cipher.fields == null) {\n                        cipher.fields = [];\n                    }\n\n                    const field = new FieldView();\n                    field.name = fields[i].substr(0, delimPosition);\n                    field.value = null;\n                    field.type = FieldType.Text;\n                    if (fields[i].length > (delimPosition + 2)) {\n                        field.value = fields[i].substr(delimPosition + 2);\n                    }\n                    cipher.fields.push(field);\n                }\n            }\n\n            const valueType = value.type != null ? value.type.toLowerCase() : null;\n            switch (valueType) {\n                case 'note':\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote = new SecureNoteView();\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n                    cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n                    cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n                    const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n                    cipher.login.uris = this.makeUriArray(uris);\n                    break;\n            }\n\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { EncString } from '../models/domain/encString';\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherWithIds } from '../models/export/cipherWithIds';\nimport { CollectionWithId } from '../models/export/collectionWithId';\nimport { FolderWithId } from '../models/export/folderWithId';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\n\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\n    private results: any;\n    private result: ImportResult;\n\n    constructor(private cryptoService: CryptoService, private i18nService: I18nService) {\n        super();\n    }\n\n    async parse(data: string): Promise<ImportResult> {\n        this.result = new ImportResult();\n        this.results = JSON.parse(data);\n        if (this.results == null || this.results.items == null || this.results.items.length === 0) {\n            this.result.success = false;\n            return this.result;\n        }\n\n        if (this.results.encrypted) {\n            await this.parseEncrypted();\n        } else {\n            this.parseDecrypted();\n        }\n\n        return this.result;\n    }\n\n    private async parseEncrypted() {\n        if (this.results.encKeyValidation_DO_NOT_EDIT != null) {\n            const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const encKeyValidation = new EncString(this.results.encKeyValidation_DO_NOT_EDIT);\n            const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(encKeyValidation, orgKey);\n            if (encKeyValidationDecrypt === null) {\n                this.result.success = false;\n                this.result.errorMessage = this.i18nService.t('importEncKeyError');\n                return;\n            }\n        }\n\n        const groupingsMap = new Map<string, number>();\n\n        if (this.organization && this.results.collections != null) {\n            for (const c of this.results.collections as CollectionWithId[]) {\n                const collection = CollectionWithId.toDomain(c);\n                if (collection != null) {\n                    collection.id = null;\n                    collection.organizationId = this.organizationId;\n                    const view = await collection.decrypt();\n                    groupingsMap.set(c.id, this.result.collections.length);\n                    this.result.collections.push(view);\n                }\n            }\n        } else if (!this.organization && this.results.folders != null) {\n            for (const f of this.results.folders as FolderWithId[]) {\n                const folder = FolderWithId.toDomain(f);\n                if (folder != null) {\n                    folder.id = null;\n                    const view = await folder.decrypt();\n                    groupingsMap.set(f.id, this.result.folders.length);\n                    this.result.folders.push(view);\n                }\n            }\n        }\n\n        for (const c of this.results.items as CipherWithIds[]) {\n            const cipher = CipherWithIds.toDomain(c);\n            // reset ids incase they were set for some reason\n            cipher.id = null;\n            cipher.folderId = null;\n            cipher.organizationId = this.organizationId;\n            cipher.collectionIds = null;\n\n            // make sure password history is limited\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n            }\n\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n                this.result.folderRelationships.push([this.result.ciphers.length, groupingsMap.get(c.folderId)]);\n            } else if (this.organization && c.collectionIds != null) {\n                c.collectionIds.forEach(cId => {\n                    if (groupingsMap.has(cId)) {\n                        this.result.collectionRelationships.push([this.result.ciphers.length, groupingsMap.get(cId)]);\n                    }\n                });\n            }\n\n            const view = await cipher.decrypt();\n            this.cleanupCipher(view);\n            this.result.ciphers.push(view);\n        }\n\n        this.result.success = true;\n    }\n\n    private parseDecrypted() {\n        const groupingsMap = new Map<string, number>();\n        if (this.organization && this.results.collections != null) {\n            this.results.collections.forEach((c: CollectionWithId) => {\n                const collection = CollectionWithId.toView(c);\n                if (collection != null) {\n                    collection.id = null;\n                    collection.organizationId = null;\n                    groupingsMap.set(c.id, this.result.collections.length);\n                    this.result.collections.push(collection);\n                }\n            });\n        } else if (!this.organization && this.results.folders != null) {\n            this.results.folders.forEach((f: FolderWithId) => {\n                const folder = FolderWithId.toView(f);\n                if (folder != null) {\n                    folder.id = null;\n                    groupingsMap.set(f.id, this.result.folders.length);\n                    this.result.folders.push(folder);\n                }\n            });\n        }\n\n        this.results.items.forEach((c: CipherWithIds) => {\n            const cipher = CipherWithIds.toView(c);\n            // reset ids incase they were set for some reason\n            cipher.id = null;\n            cipher.folderId = null;\n            cipher.organizationId = null;\n            cipher.collectionIds = null;\n\n            // make sure password history is limited\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n            }\n\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n                this.result.folderRelationships.push([this.result.ciphers.length, groupingsMap.get(c.folderId)]);\n            } else if (this.organization && c.collectionIds != null) {\n                c.collectionIds.forEach(cId => {\n                    if (groupingsMap.has(cId)) {\n                        this.result.collectionRelationships.push([this.result.ciphers.length, groupingsMap.get(cId)]);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlackBerryCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.grouping === 'list') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.favorite = value.fav === '1';\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.extra);\n            if (value.grouping !== 'note') {\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.label === 'null') {\n                value.label = null;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.label,\n                this.getValueOrDefault(this.nameFromUrl(value.domain), '--'));\n            cipher.login.uris = this.makeUriArray(value.domain);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n                cipher.login.username = value.username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.email);\n                cipher.notes = this.getValueOrDefault(value.username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst OfficialProps = [\n    '!group_id', '!group_name', 'title', 'username', 'password', 'URL', 'id',\n];\n\nexport class ButtercupCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValueOrDefault(value['!group_name']));\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.title, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            let processingCustomFields = false;\n            for (const prop in value) {\n                if (value.hasOwnProperty(prop)) {\n                    if (!processingCustomFields && OfficialProps.indexOf(prop) === -1) {\n                        processingCustomFields = true;\n                    }\n                    if (processingCustomFields) {\n                        this.processKvp(cipher, prop, value[prop]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const textarea = doc.querySelector('textarea');\n        if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n            result.errorMessage = 'Missing textarea.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const entries = JSON.parse(textarea.textContent);\n        entries.forEach((entry: any) => {\n            const cipher = this.initLoginCipher();\n            if (!this.isNullOrWhitespace(entry.label)) {\n                cipher.name = entry.label.split(' ')[0];\n            }\n            if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n                cipher.notes = entry.data.notes.split('\\\\n').join('\\n');\n            }\n\n            if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n                for (const property in entry.currentVersion.fields) {\n                    if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n                        continue;\n                    }\n\n                    const field = entry.currentVersion.fields[property];\n                    const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n                    switch (actionType) {\n                        case 'password':\n                            cipher.login.password = this.getValueOrDefault(field.value);\n                            break;\n                        case 'email':\n                        case 'username':\n                        case 'user':\n                        case 'name':\n                            cipher.login.username = this.getValueOrDefault(field.value);\n                            break;\n                        case 'url':\n                            cipher.login.uris = this.makeUriArray(field.value);\n                            break;\n                        default:\n                            const labelLower = field.label != null ? field.label.toLowerCase() : null;\n                            if (cipher.login.password == null && this.passwordFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.password = this.getValueOrDefault(field.value);\n                            } else if (cipher.login.username == null &&\n                                this.usernameFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.username = this.getValueOrDefault(field.value);\n                            } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                                this.uriFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.uris = this.makeUriArray(field.value);\n                            } else {\n                                this.processKvp(cipher, field.label, field.value);\n                            }\n                            break;\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class CodebookCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValueOrDefault(value.Category));\n\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite) === 'True';\n            cipher.name = this.getValueOrDefault(value.Entry, '--');\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.login.username = this.getValueOrDefault(value.Username, value.Email);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.totp = this.getValueOrDefault(value.TOTP);\n            cipher.login.uris = this.makeUriArray(value.Website);\n\n            if (!this.isNullOrWhitespace(value.Username)) {\n                this.processKvp(cipher, 'Email', value.Email);\n            }\n            this.processKvp(cipher, 'Phone', value.Phone);\n            this.processKvp(cipher, 'PIN', value.PIN);\n            this.processKvp(cipher, 'Account', value.Account);\n            this.processKvp(cipher, 'Date', value.Date);\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst HandledResults = new Set(['ADDRESS', 'AUTHENTIFIANT', 'BANKSTATEMENT', 'IDCARD', 'IDENTITY',\n    'PAYMENTMEANS_CREDITCARD', 'PAYMENTMEAN_PAYPAL', 'EMAIL']);\n\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\n    private result: ImportResult;\n\n    parse(data: string): Promise<ImportResult> {\n        this.result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        if (results.ADDRESS != null) {\n            this.processAddress(results.ADDRESS);\n        }\n        if (results.AUTHENTIFIANT != null) {\n            this.processAuth(results.AUTHENTIFIANT);\n        }\n        if (results.BANKSTATEMENT != null) {\n            this.processNote(results.BANKSTATEMENT, 'BankAccountName');\n        }\n        if (results.IDCARD != null) {\n            this.processNote(results.IDCARD, 'Fullname');\n        }\n        if (results.PAYMENTMEANS_CREDITCARD != null) {\n            this.processCard(results.PAYMENTMEANS_CREDITCARD);\n        }\n        if (results.IDENTITY != null) {\n            this.processIdentity(results.IDENTITY);\n        }\n\n        for (const key in results) {\n            if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\n                this.processNote(results[key], null, 'Generic Note');\n            }\n        }\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    private processAuth(results: any[]) {\n        results.forEach((credential: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(credential.title);\n\n            cipher.login.username = this.getValueOrDefault(credential.login,\n                this.getValueOrDefault(credential.secondaryLogin));\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.domain);\n            cipher.notes += this.getValueOrDefault(credential.note, '');\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processIdentity(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.fullName, '');\n            const nameParts = cipher.name.split(' ');\n            if (nameParts.length > 0) {\n                cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n            }\n            if (nameParts.length === 2) {\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n            } else if (nameParts.length === 3) {\n                cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\n            }\n            cipher.identity.username = this.getValueOrDefault(obj.pseudo);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processAddress(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.addressName);\n            cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\n            cipher.identity.city = this.getValueOrDefault(obj.city);\n            cipher.identity.state = this.getValueOrDefault(obj.state);\n            cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\n            cipher.identity.country = this.getValueOrDefault(obj.country);\n            if (cipher.identity.country != null) {\n                cipher.identity.country = cipher.identity.country.toUpperCase();\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processCard(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.card = new CardView();\n            cipher.type = CipherType.Card;\n            cipher.name = this.getValueOrDefault(obj.bank);\n            cipher.card.number = this.getValueOrDefault(obj.cardNumber);\n            cipher.card.brand = this.getCardBrand(cipher.card.number);\n            cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\n            if (!this.isNullOrWhitespace(cipher.card.brand)) {\n                if (this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name = cipher.card.brand;\n                } else {\n                    cipher.name += (' - ' + cipher.card.brand);\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processNote(results: any[], nameProperty: string, name: string = null) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.secureNote = new SecureNoteView();\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote.type = SecureNoteType.Generic;\n            if (name != null) {\n                cipher.name = name;\n            } else {\n                cipher.name = this.getValueOrDefault(obj[nameProperty]);\n            }\n            for (const key in obj) {\n                if (obj.hasOwnProperty(key) && key !== nameProperty) {\n                    this.processKvp(cipher, key, obj[key].toString());\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class EncryptrCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Label, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            const text = this.getValueOrDefault(value.Text);\n            if (!this.isNullOrWhitespace(text)) {\n                if (this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = text;\n                } else {\n                    cipher.notes += ('\\n\\n' + text);\n                }\n            }\n\n            const type = value['Entry Type'];\n            if (type === 'Password') {\n                cipher.login.username = this.getValueOrDefault(value.Username);\n                cipher.login.password = this.getValueOrDefault(value.Password);\n                cipher.login.uris = this.makeUriArray(value['Site URL']);\n            } else if (type === 'Credit Card') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value['Name on card']);\n                cipher.card.number = this.getValueOrDefault(value['Card Number']);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.CVV);\n                const expiry = this.getValueOrDefault(value.Expiry);\n                if (!this.isNullOrWhitespace(expiry)) {\n                    const expParts = expiry.split('/');\n                    if (expParts.length > 1) {\n                        cipher.card.expMonth = parseInt(expParts[0], null).toString();\n                        cipher.card.expYear = (2000 + parseInt(expParts[1], null)).toString();\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let firstRow = true;\n        results.forEach(value => {\n            if (value.length < 2 || (firstRow && (value[0] === 'Title' || value[0] === 'title'))) {\n                firstRow = false;\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length === 2 || (!this.containsField(value, 'username') &&\n                !this.containsField(value, 'password') && !this.containsField(value, 'email') &&\n                !this.containsField(value, 'url'))) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            }\n\n            if (this.containsField(value, 'cardholder') && this.containsField(value, 'number') &&\n                this.containsField(value, 'expiry date')) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const fieldValue: string = value[i + 2];\n                    if (this.isNullOrWhitespace(fieldValue)) {\n                        continue;\n                    }\n\n                    const fieldName: string = value[i + 1];\n                    const fieldNameLower = fieldName.toLowerCase();\n\n                    if (cipher.type === CipherType.Login) {\n                        if (fieldNameLower === 'url' && (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n                            cipher.login.uris = this.makeUriArray(fieldValue);\n                            continue;\n                        } else if ((fieldNameLower === 'username' || fieldNameLower === 'email') &&\n                            this.isNullOrWhitespace(cipher.login.username)) {\n                            cipher.login.username = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                            cipher.login.password = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                            cipher.login.totp = fieldValue;\n                            continue;\n                        }\n                    } else if (cipher.type === CipherType.Card) {\n                        if (fieldNameLower === 'cardholder' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                            cipher.card.cardholderName = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'number' && this.isNullOrWhitespace(cipher.card.number)) {\n                            cipher.card.number = fieldValue;\n                            cipher.card.brand = this.getCardBrand(fieldValue);\n                            continue;\n                        } else if (fieldNameLower === 'cvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                            cipher.card.code = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'expiry date' && this.isNullOrWhitespace(cipher.card.expMonth) &&\n                            this.isNullOrWhitespace(cipher.card.expYear)) {\n                            if (this.setCardExpiration(cipher, fieldValue)) {\n                                continue;\n                            }\n                        } else if (fieldNameLower === 'type') {\n                            // Skip since brand was determined from number above\n                            continue;\n                        }\n                    }\n\n                    this.processKvp(cipher, fieldName, fieldValue);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private containsField(fields: any[], name: string) {\n        if (fields == null || name == null) {\n            return false;\n        }\n        return fields.filter(f => !this.isNullOrWhitespace(f) &&\n            f.toLowerCase() === name.toLowerCase()).length > 0;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\n\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null || results.items.length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, string>();\n        const foldersIndexMap = new Map<string, number>();\n        const folderTree = this.buildFolderTree(results.folders);\n        this.flattenFolderTree(null, folderTree, foldersMap);\n        foldersMap.forEach((val, key) => {\n            foldersIndexMap.set(key, result.folders.length);\n            const f = new FolderView();\n            f.name = val;\n            result.folders.push(f);\n        });\n\n        results.items.forEach((item: any) => {\n            if (item.folders != null && item.folders.length > 0 && foldersIndexMap.has(item.folders[0])) {\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(item.folders[0])]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(item.title);\n            cipher.favorite = item.favorite > 0;\n\n            if (item.template_type != null && item.fields != null && item.fields.length > 0) {\n                if (item.template_type.indexOf('login.') === 0 || item.template_type.indexOf('password.') === 0) {\n                    this.processLogin(cipher, item.fields);\n                } else if (item.template_type.indexOf('creditcard.') === 0) {\n                    this.processCard(cipher, item.fields);\n                } else if (item.template_type.indexOf('identity.') < 0 &&\n                    item.fields.some((f: any) => f.type === 'password' && !this.isNullOrWhitespace(f.value))) {\n                    this.processLogin(cipher, item.fields);\n                } else {\n                    this.processNote(cipher, item.fields);\n                }\n            }\n\n            cipher.notes += ('\\n' + this.getValueOrDefault(item.note, ''));\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private processLogin(cipher: CipherView, fields: any[]) {\n        const urls: string[] = [];\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n\n            if ((field.type === 'username' || field.type === 'email') &&\n                this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = field.value;\n            } else if (field.type === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                cipher.login.password = field.value;\n            } else if (field.type === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                cipher.login.totp = field.value;\n            } else if (field.type === 'url') {\n                urls.push(field.value);\n            } else {\n                this.processKvp(cipher, field.label, field.value,\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n            }\n        });\n        cipher.login.uris = this.makeUriArray(urls);\n    }\n\n    private processCard(cipher: CipherView, fields: any[]) {\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section' || field.type === 'ccType') {\n                return;\n            }\n\n            if (field.type === 'ccName' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                cipher.card.cardholderName = field.value;\n            } else if (field.type === 'ccNumber' && this.isNullOrWhitespace(cipher.card.number)) {\n                cipher.card.number = field.value;\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n            } else if (field.type === 'ccCvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                cipher.card.code = field.value;\n            } else if (field.type === 'ccExpiry' && this.isNullOrWhitespace(cipher.card.expYear)) {\n                if (!this.setCardExpiration(cipher, field.value)) {\n                    this.processKvp(cipher, field.label, field.value,\n                        field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n                }\n            } else {\n                this.processKvp(cipher, field.label, field.value,\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n            }\n        });\n    }\n\n    private processNote(cipher: CipherView, fields: any[]) {\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n            this.processKvp(cipher, field.label, field.value,\n                field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n        });\n    }\n\n    private buildFolderTree(folders: any[]): any[] {\n        if (folders == null) {\n            return [];\n        }\n        const folderTree: any[] = [];\n        const map = new Map<string, any>([]);\n        folders.forEach((obj: any) => {\n            map.set(obj.uuid, obj);\n            obj.children = [];\n        });\n        folders.forEach((obj: any) => {\n            if (obj.parent_uuid != null && obj.parent_uuid !== '' && map.has(obj.parent_uuid)) {\n                map.get(obj.parent_uuid).children.push(obj);\n            } else {\n                folderTree.push(obj);\n            }\n        });\n        return folderTree;\n    }\n\n    private flattenFolderTree(titlePrefix: string, tree: any[], map: Map<string, string>) {\n        if (tree == null) {\n            return;\n        }\n        tree.forEach((f: any) => {\n            if (f.title != null && f.title.trim() !== '') {\n                let title = f.title.trim();\n                if (titlePrefix != null && titlePrefix.trim() !== '') {\n                    title = titlePrefix + '/' + title;\n                }\n                map.set(f.uuid, title);\n                if (f.children != null && f.children.length !== 0) {\n                    this.flattenFolderTree(title, f.children, map);\n                }\n            }\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.filter(value => {\n            return value.url !== 'chrome://FirefoxAccounts';\n        }).forEach(value => {\n            const cipher = this.initLoginCipher();\n            const url = this.getValueOrDefault(value.url, this.getValueOrDefault(value.hostname));\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(url), '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class FSecureFskImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.data == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        for (const key in results.data) {\n            if (!results.data.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const value = results.data[key];\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.service);\n            cipher.notes = this.getValueOrDefault(value.notes);\n\n            if (value.style === 'website') {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.uris = this.makeUriArray(value.url);\n            } else if (value.style === 'creditcard') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.username);\n                cipher.card.number = this.getValueOrDefault(value.creditNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.creditCvv);\n                if (!this.isNullOrWhitespace(value.creditExpiry)) {\n                    if (!this.setCardExpiration(cipher, value.creditExpiry)) {\n                        this.processKvp(cipher, 'Expiration', value.creditExpiry);\n                    }\n                }\n                if (!this.isNullOrWhitespace(value.password)) {\n                    this.processKvp(cipher, 'PIN', value.password);\n                }\n            } else {\n                continue;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || Object.keys(results).length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        for (const keyRing in results) {\n            if (!results.hasOwnProperty(keyRing) || this.isNullOrWhitespace(keyRing) ||\n                results[keyRing].length === 0) {\n                continue;\n            }\n\n            results[keyRing].forEach((value: any) => {\n                if (this.isNullOrWhitespace(value.display_name) || value.display_name.indexOf('http') !== 0) {\n                    return;\n                }\n\n                this.processFolder(result, keyRing);\n                const cipher = this.initLoginCipher();\n                cipher.name = value.display_name.replace('http://', '').replace('https://', '');\n                if (cipher.name.length > 30) {\n                    cipher.name = cipher.name.substring(0, 30);\n                }\n                cipher.login.password = this.getValueOrDefault(value.secret);\n                cipher.login.uris = this.makeUriArray(value.display_name);\n\n                if (value.attributes != null) {\n                    cipher.login.username = value.attributes != null ?\n                        this.getValueOrDefault(value.attributes.username_value) : null;\n                    for (const attr in value.attributes) {\n                        if (!value.attributes.hasOwnProperty(attr) || attr === 'username_value' ||\n                            attr === 'xdg:schema') {\n                            continue;\n                        }\n                        this.processKvp(cipher, attr, value.attributes[attr]);\n                    }\n                }\n\n                this.convertToNoteIfNeeded(cipher);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst NotesHeader = 'Notes\\n\\n';\nconst ApplicationsHeader = 'Applications\\n\\n';\nconst WebsitesHeader = 'Websites\\n\\n';\nconst Delimiter = '\\n---\\n';\n\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n\n        let notesData: string;\n        let applicationsData: string;\n        let websitesData: string;\n        let workingData = this.splitNewLine(data).join('\\n');\n\n        if (workingData.indexOf(NotesHeader) !== -1) {\n            const parts = workingData.split(NotesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                notesData = parts[1];\n            }\n        }\n        if (workingData.indexOf(ApplicationsHeader) !== -1) {\n            const parts = workingData.split(ApplicationsHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                applicationsData = parts[1];\n            }\n        }\n        if (workingData.indexOf(WebsitesHeader) === 0) {\n            const parts = workingData.split(WebsitesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                websitesData = parts[1];\n            }\n        }\n\n        const notes = this.parseDataCategory(notesData);\n        const applications = this.parseDataCategory(applicationsData);\n        const websites = this.parseDataCategory(websitesData);\n\n        notes.forEach(n => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(n.get('Name'));\n            cipher.notes = this.getValueOrDefault(n.get('Text'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        websites.concat(applications).forEach(w => {\n            const cipher = this.initLoginCipher();\n            const nameKey = w.has('Website name') ? 'Website name' : 'Application';\n            cipher.name = this.getValueOrDefault(w.get(nameKey), '');\n            if (!this.isNullOrWhitespace(w.get('Login name'))) {\n                if (!this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name += ': ';\n                }\n                cipher.name += w.get('Login name');\n            }\n            cipher.notes = this.getValueOrDefault(w.get('Comment'));\n            if (w.has('Website URL')) {\n                cipher.login.uris = this.makeUriArray(w.get('Website URL'));\n            }\n            cipher.login.username = this.getValueOrDefault(w.get('Login'));\n            cipher.login.password = this.getValueOrDefault(w.get('Password'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseDataCategory(data: string): Map<string, string>[] {\n        if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\n            return [];\n        }\n        const items: Map<string, string>[] = [];\n        data.split(Delimiter).forEach(p => {\n            if (p.indexOf('\\n') === -1) {\n                return;\n            }\n            const item = new Map<string, string>();\n            let itemComment: string;\n            let itemCommentKey: string;\n            p.split('\\n').forEach(l => {\n                if (itemComment != null) {\n                    itemComment += ('\\n' + l);\n                    return;\n                }\n                const colonIndex = l.indexOf(':');\n                let key: string;\n                let val: string;\n                if (colonIndex === -1) {\n                    return;\n                } else {\n                    key = l.substring(0, colonIndex);\n                    if (l.length > colonIndex + 1) {\n                        val = l.substring(colonIndex + 2);\n                    }\n                }\n                if (key != null) {\n                    item.set(key, val);\n                }\n                if (key === 'Comment' || key === 'Text') {\n                    itemComment = val;\n                    itemCommentKey = key;\n                }\n            });\n            if (itemComment != null && itemCommentKey != null) {\n                item.set(itemCommentKey, itemComment);\n            }\n            if (item.size === 0) {\n                return;\n            }\n            items.push(item);\n        });\n        return items;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { FieldType } from '../enums/fieldType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): Promise<ImportResult> {\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        const rootGroup = doc.querySelector('KeePassFile > Root > Group');\n        if (rootGroup == null) {\n            this.result.errorMessage = 'Missing `KeePassFile > Root > Group` node.';\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        this.traverse(rootGroup, true, '');\n\n        if (this.organization) {\n            this.moveFoldersToCollections(this.result);\n        }\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n        const folderIndex = this.result.folders.length;\n        let groupName = groupPrefixName;\n\n        if (!isRootNode) {\n            if (groupName !== '') {\n                groupName += '/';\n            }\n            const nameEl = this.querySelectorDirectChild(node, 'Name');\n            groupName += nameEl == null ? '-' : nameEl.textContent;\n            const folder = new FolderView();\n            folder.name = groupName;\n            this.result.folders.push(folder);\n        }\n\n        this.querySelectorAllDirectChild(node, 'Entry').forEach(entry => {\n            const cipherIndex = this.result.ciphers.length;\n\n            const cipher = this.initLoginCipher();\n            this.querySelectorAllDirectChild(entry, 'String').forEach(entryString => {\n                const valueEl = this.querySelectorDirectChild(entryString, 'Value');\n                const value = valueEl != null ? valueEl.textContent : null;\n                if (this.isNullOrWhitespace(value)) {\n                    return;\n                }\n                const keyEl = this.querySelectorDirectChild(entryString, 'Key');\n                const key = keyEl != null ? keyEl.textContent : null;\n\n                if (key === 'URL') {\n                    cipher.login.uris = this.makeUriArray(value);\n                } else if (key === 'UserName') {\n                    cipher.login.username = value;\n                } else if (key === 'Password') {\n                    cipher.login.password = value;\n                }  else if (key === 'otp') {\n                    cipher.login.totp = value.replace('key=', '');\n                } else if (key === 'Title') {\n                    cipher.name = value;\n                } else if (key === 'Notes') {\n                    cipher.notes += (value + '\\n');\n                } else {\n                    let type = FieldType.Text;\n                    const attrs = (valueEl.attributes as any);\n                    if (attrs.length > 0 && attrs.ProtectInMemory != null &&\n                        attrs.ProtectInMemory.value === 'True') {\n                        type = FieldType.Hidden;\n                    }\n                    this.processKvp(cipher, key, value, type);\n                }\n            });\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n\n            if (!isRootNode) {\n                this.result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        this.querySelectorAllDirectChild(node, 'Group').forEach(group => {\n            this.traverse(group, false, groupName);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(value.Title)) {\n                return;\n            }\n\n            value.Group = !this.isNullOrWhitespace(value.Group) && value.Group.startsWith('Root/') ?\n                value.Group.replace('Root/', '') : value.Group;\n            const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n            this.processFolder(result, groupName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(value.Title, '--');\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 6) {\n                return;\n            }\n\n            this.processFolder(result, value[0]);\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[5]) + '\\n';\n            cipher.name = this.getValueOrDefault(value[1], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[4]);\n\n            if (value.length > 7) {\n                // we have some custom fields.\n                for (let i = 7; i < value.length; i = i + 2) {\n                    this.processKvp(cipher, value[i], value[i + 1]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\nimport { IdentityView } from '../models/view/identityView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach((value, index) => {\n            const cipherIndex = result.ciphers.length;\n            let folderIndex = result.folders.length;\n            let grouping = value.grouping;\n            if (grouping != null) {\n                grouping = grouping.replace(/\\\\/g, '/').replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '');\n            }\n            const hasFolder = this.getValueOrDefault(grouping, '(none)') !== '(none)';\n            let addFolder = hasFolder;\n\n            if (hasFolder) {\n                for (let i = 0; i < result.folders.length; i++) {\n                    if (result.folders[i].name === grouping) {\n                        addFolder = false;\n                        folderIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            const cipher = this.buildBaseCipher(value);\n            if (cipher.type === CipherType.Login) {\n                cipher.notes = this.getValueOrDefault(value.extra);\n                cipher.login = new LoginView();\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.totp = this.getValueOrDefault(value.totp);\n            } else if (cipher.type === CipherType.SecureNote) {\n                this.parseSecureNote(value, cipher);\n            } else if (cipher.type === CipherType.Card) {\n                cipher.card = this.parseCard(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n            } else if (cipher.type === CipherType.Identity) {\n                cipher.identity = this.parseIdentity(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n                if (!this.isNullOrWhitespace(value.ccnum)) {\n                    // there is a card on this identity too\n                    const cardCipher = this.buildBaseCipher(value);\n                    cardCipher.identity = null;\n                    cardCipher.type = CipherType.Card;\n                    cardCipher.card = this.parseCard(value);\n                    result.ciphers.push(cardCipher);\n                }\n            }\n\n            result.ciphers.push(cipher);\n\n            if (addFolder) {\n                const f = new FolderView();\n                f.name = grouping;\n                result.folders.push(f);\n            }\n            if (hasFolder) {\n                result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private buildBaseCipher(value: any) {\n        const cipher = new CipherView();\n        if (value.hasOwnProperty('profilename') && value.hasOwnProperty('profilelanguage')) {\n            // form fill\n            cipher.favorite = false;\n            cipher.name = this.getValueOrDefault(value.profilename, '--');\n            cipher.type = CipherType.Card;\n\n            if (!this.isNullOrWhitespace(value.title) || !this.isNullOrWhitespace(value.firstname) ||\n                !this.isNullOrWhitespace(value.lastname) || !this.isNullOrWhitespace(value.address1) ||\n                !this.isNullOrWhitespace(value.phone) || !this.isNullOrWhitespace(value.username) ||\n                !this.isNullOrWhitespace(value.email)) {\n                cipher.type = CipherType.Identity;\n            }\n        } else {\n            // site or secure note\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, '0') === '1';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.type = value.url === 'http://sn' ? CipherType.SecureNote : CipherType.Login;\n        }\n        return cipher;\n    }\n\n    private parseCard(value: any): CardView {\n        const card = new CardView();\n        card.cardholderName = this.getValueOrDefault(value.ccname);\n        card.number = this.getValueOrDefault(value.ccnum);\n        card.code = this.getValueOrDefault(value.cccsc);\n        card.brand = this.getCardBrand(value.ccnum);\n\n        if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf('-') > -1) {\n            const ccexpParts = (value.ccexp as string).split('-');\n            if (ccexpParts.length > 1) {\n                card.expYear = ccexpParts[0];\n                card.expMonth = ccexpParts[1];\n                if (card.expMonth.length === 2 && card.expMonth[0] === '0') {\n                    card.expMonth = card.expMonth[1];\n                }\n            }\n        }\n\n        return card;\n    }\n\n    private parseIdentity(value: any): IdentityView {\n        const identity = new IdentityView();\n        identity.title = this.getValueOrDefault(value.title);\n        identity.firstName = this.getValueOrDefault(value.firstname);\n        identity.middleName = this.getValueOrDefault(value.middlename);\n        identity.lastName = this.getValueOrDefault(value.lastname);\n        identity.username = this.getValueOrDefault(value.username);\n        identity.company = this.getValueOrDefault(value.company);\n        identity.ssn = this.getValueOrDefault(value.ssn);\n        identity.address1 = this.getValueOrDefault(value.address1);\n        identity.address2 = this.getValueOrDefault(value.address2);\n        identity.address3 = this.getValueOrDefault(value.address3);\n        identity.city = this.getValueOrDefault(value.city);\n        identity.state = this.getValueOrDefault(value.state);\n        identity.postalCode = this.getValueOrDefault(value.zip);\n        identity.country = this.getValueOrDefault(value.country);\n        identity.email = this.getValueOrDefault(value.email);\n        identity.phone = this.getValueOrDefault(value.phone);\n\n        if (!this.isNullOrWhitespace(identity.title)) {\n            identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n        }\n\n        return identity;\n    }\n\n    private parseSecureNote(value: any, cipher: CipherView) {\n        const extraParts = this.splitNewLine(value.extra);\n        let processedNote = false;\n\n        if (extraParts.length) {\n            const typeParts = extraParts[0].split(':');\n            if (typeParts.length > 1 && typeParts[0] === 'NoteType' &&\n                (typeParts[1] === 'Credit Card' || typeParts[1] === 'Address')) {\n                if (typeParts[1] === 'Credit Card') {\n                    const mappedData = this.parseSecureNoteMapping<CardView>(cipher, extraParts, {\n                        'Number': 'number',\n                        'Name on Card': 'cardholderName',\n                        'Security Code': 'code',\n                        // LP provides date in a format like 'June,2020'\n                        // Store in expMonth, then parse and modify\n                        'Expiration Date': 'expMonth',\n                    });\n\n                    if (this.isNullOrWhitespace(mappedData.expMonth) || mappedData.expMonth === ',') {\n                        // No expiration data\n                        mappedData.expMonth = undefined;\n                    } else {\n                        const [monthString, year] = mappedData.expMonth.split(',');\n                        // Parse month name into number\n                        if (!this.isNullOrWhitespace(monthString)) {\n                            const month = new Date(Date.parse(monthString.trim() + ' 1, 2012')).getMonth() + 1;\n                            if (isNaN(month)) {\n                                mappedData.expMonth = undefined;\n                            } else {\n                                mappedData.expMonth = month.toString();\n                            }\n                        } else {\n                            mappedData.expMonth = undefined;\n                        }\n                        if (!this.isNullOrWhitespace(year)) {\n                            mappedData.expYear = year;\n                        }\n                    }\n\n                    cipher.type = CipherType.Card;\n                    cipher.card = mappedData;\n                } else if (typeParts[1] === 'Address') {\n                    const mappedData = this.parseSecureNoteMapping<IdentityView>(cipher, extraParts, {\n                        'Title': 'title',\n                        'First Name': 'firstName',\n                        'Last Name': 'lastName',\n                        'Middle Name': 'middleName',\n                        'Company': 'company',\n                        'Address 1': 'address1',\n                        'Address 2': 'address2',\n                        'Address 3': 'address3',\n                        'City / Town': 'city',\n                        'State': 'state',\n                        'Zip / Postal Code': 'postalCode',\n                        'Country': 'country',\n                        'Email Address': 'email',\n                        'Username': 'username',\n                    });\n                    cipher.type = CipherType.Identity;\n                    cipher.identity = mappedData;\n                }\n                processedNote = true;\n            }\n        }\n\n        if (!processedNote) {\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n            cipher.notes = this.getValueOrDefault(value.extra);\n        }\n    }\n\n    private parseSecureNoteMapping<T>(cipher: CipherView, extraParts: string[], map: any): T {\n        const dataObj: any = {};\n\n        let processingNotes = false;\n        extraParts.forEach(extraPart => {\n            let key: string = null;\n            let val: string = null;\n            if (!processingNotes) {\n                if (this.isNullOrWhitespace(extraPart)) {\n                    return;\n                }\n                const colonIndex = extraPart.indexOf(':');\n                if (colonIndex === -1) {\n                    key = extraPart;\n                } else {\n                    key = extraPart.substring(0, colonIndex);\n                    if (extraPart.length > colonIndex) {\n                        val = extraPart.substring(colonIndex + 1);\n                    }\n                }\n                if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === 'NoteType') {\n                    return;\n                }\n            }\n\n            if (processingNotes) {\n                cipher.notes += ('\\n' + extraPart);\n            } else if (key === 'Notes') {\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes += ('\\n' + val);\n                } else {\n                    cipher.notes = val;\n                }\n                processingNotes = true;\n            } else if (map.hasOwnProperty(key)) {\n                dataObj[map[key]] = val;\n            } else {\n                this.processKvp(cipher, key, val);\n            }\n        });\n\n        return dataObj;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 4) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[1]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.DisplayName, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.login.username = this.getValueOrDefault(value.UserName);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 3) {\n                return;\n            }\n\n            const folderName = this.getValueOrDefault(value[0], 'Unassigned') !== 'Unassigned' ? value[0] : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[2], '--');\n\n            if (value[1] === 'Web Logins' || value[1] === 'Login') {\n                cipher.login.uris = this.makeUriArray(value[4]);\n                cipher.login.username = this.getValueOrDefault(value[5]);\n                cipher.login.password = this.getValueOrDefault(value[6]);\n                cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split('\\\\n').join('\\n') : null;\n            } else if (value.length > 3) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                for (let i = 3; i < value.length; i++) {\n                    if (!this.isNullOrWhitespace(value[i])) {\n                        cipher.notes += (value[i] + '\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n                cipher.name = value[1] + ': ' + cipher.name;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MykiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.nickname, '--');\n            cipher.notes = this.getValueOrDefault(value.additionalInfo);\n\n            if (value.url !== undefined) {\n                // Accounts\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.totp = this.getValueOrDefault(value.twoFactAuthToken);\n            } else if (value.cardNumber !== undefined) {\n                // Cards\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\n                cipher.card.expYear = this.getValueOrDefault(value.exp_year);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n            } else if (value.firstName !== undefined) {\n                // Identities\n                cipher.identity = new IdentityView();\n                cipher.type = CipherType.Identity;\n                cipher.identity.title = this.getValueOrDefault(value.title);\n                cipher.identity.firstName = this.getValueOrDefault(value.firstName);\n                cipher.identity.middleName = this.getValueOrDefault(value.middleName);\n                cipher.identity.lastName = this.getValueOrDefault(value.lastName);\n                cipher.identity.phone = this.getValueOrDefault(value.number);\n                cipher.identity.email = this.getValueOrDefault(value.email);\n                cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\n                cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\n                cipher.identity.city = this.getValueOrDefault(value.city);\n                cipher.identity.country = this.getValueOrDefault(value.country);\n                cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\n            } else if (value.content !== undefined) {\n                // Notes\n                cipher.secureNote = new SecureNoteView();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.content);\n            } else {\n                return;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { LoginView } from '../models/view/loginView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\ntype nodePassCsvParsed = {\n    name: string;\n    url: string;\n    username: string;\n    password: string;\n    note: string;\n    cardholdername: string;\n    cardnumber: string;\n    cvc: string;\n    expirydate: string;\n    zipcode: string;\n    folder: string;\n    full_name: string;\n    phone_number: string;\n    email: string;\n    address1: string;\n    address2: string;\n    city: string;\n    country: string;\n    state: string;\n};\n\nexport class NordPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results: nodePassCsvParsed[] = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(record => {\n\n            const recordType = this.evaluateType(record);\n            if (recordType === undefined) {\n                return;\n            }\n\n            if (!this.organization) {\n                this.processFolder(result, record.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.name = this.getValueOrDefault(record.name, '--');\n            cipher.notes = this.getValueOrDefault(record.note);\n\n            switch (recordType) {\n                case CipherType.Login:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.username = this.getValueOrDefault(record.username);\n                    cipher.login.password = this.getValueOrDefault(record.password);\n                    cipher.login.uris = this.makeUriArray(record.url);\n                    break;\n                case CipherType.Card:\n                    cipher.type = CipherType.Card;\n                    cipher.card.cardholderName = this.getValueOrDefault(record.cardholdername);\n                    cipher.card.number = this.getValueOrDefault(record.cardnumber);\n                    cipher.card.code = this.getValueOrDefault(record.cvc);\n                    cipher.card.brand = this.getCardBrand(cipher.card.number);\n                    this.setCardExpiration(cipher, record.expirydate);\n                    break;\n\n                case CipherType.Identity:\n                    cipher.type = CipherType.Identity;\n\n                    this.processName(cipher, this.getValueOrDefault(record.full_name));\n                    cipher.identity.address1 = this.getValueOrDefault(record.address1);\n                    cipher.identity.address2 = this.getValueOrDefault(record.address2);\n                    cipher.identity.city = this.getValueOrDefault(record.city);\n                    cipher.identity.state = this.getValueOrDefault(record.state);\n                    cipher.identity.postalCode = this.getValueOrDefault(record.zipcode);\n                    cipher.identity.country = this.getValueOrDefault(record.country);\n                    if (cipher.identity.country != null) {\n                        cipher.identity.country = cipher.identity.country.toUpperCase();\n                    }\n                    cipher.identity.email = this.getValueOrDefault(record.email);\n                    cipher.identity.phone = this.getValueOrDefault(record.phone_number);\n                    break;\n                case CipherType.SecureNote:\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    break;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private evaluateType(record: nodePassCsvParsed): CipherType {\n\n        if (!this.isNullOrWhitespace(record.username)) {\n            return CipherType.Login;\n        }\n\n        if (!this.isNullOrWhitespace(record.cardnumber)) {\n            return CipherType.Card;\n        }\n\n        if (!this.isNullOrWhitespace(record.full_name)) {\n            return CipherType.Identity;\n        }\n\n        if (!this.isNullOrWhitespace(record.note)) {\n            return CipherType.SecureNote;\n        }\n\n        return undefined;\n    }\n\n    private processName(cipher: CipherView, fullName: string) {\n\n        if (this.isNullOrWhitespace(fullName)) {\n            return;\n        }\n\n        const nameParts = fullName.split(' ');\n        if (nameParts.length > 0) {\n            cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n        }\n        if (nameParts.length === 2) {\n            cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n        } else if (nameParts.length >= 3) {\n            cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n            cipher.identity.lastName = nameParts.slice(2, nameParts.length).join(' ');\n        }\n    }\n}\n","import { BaseImporter } from '../baseImporter';\nimport { Importer } from '../importer';\n\nimport { ImportResult } from '../../models/domain/importResult';\n\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { IdentityView } from '../../models/view/identityView';\nimport { PasswordHistoryView } from '../../models/view/passwordHistoryView';\nimport { SecureNoteView } from '../../models/view/secureNoteView';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { FieldType } from '../../enums/fieldType';\nimport { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): Promise<ImportResult> {\n        data.split(this.newLineRegex).forEach(line => {\n            if (this.isNullOrWhitespace(line) || line[0] !== '{') {\n                return;\n            }\n            const item = JSON.parse(line);\n            if (item.trashed === true) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n\n            if (this.isNullOrWhitespace(item.hmac)) {\n                this.processStandardItem(item, cipher);\n            } else {\n                this.processWinOpVaultItem(item, cipher);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    private processWinOpVaultItem(item: any, cipher: CipherView) {\n        if (item.overview != null) {\n            cipher.name = this.getValueOrDefault(item.overview.title);\n            if (item.overview.URLs != null) {\n                const urls: string[] = [];\n                item.overview.URLs.forEach((url: any) => {\n                    if (!this.isNullOrWhitespace(url.u)) {\n                        urls.push(url.u);\n                    }\n                });\n                cipher.login.uris = this.makeUriArray(urls);\n            }\n        }\n\n        if (item.details != null) {\n            if (item.details.passwordHistory != null) {\n                this.parsePasswordHistory(item.details.passwordHistory, cipher);\n            }\n            if (!this.isNullOrWhitespace(item.details.ccnum) || !this.isNullOrWhitespace(item.details.cvv)) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            } else if (!this.isNullOrWhitespace(item.details.firstname) ||\n                !this.isNullOrWhitespace(item.details.address1)) {\n                cipher.type = CipherType.Identity;\n                cipher.identity = new IdentityView();\n            }\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\n                cipher.login.password = item.details.password;\n            }\n            if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n                cipher.notes = item.details.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (item.details.fields != null) {\n                this.parseFields(item.details.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.details.sections != null) {\n                item.details.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n        }\n    }\n\n    private processStandardItem(item: any, cipher: CipherView) {\n        cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n        cipher.name = this.getValueOrDefault(item.title);\n\n        if (item.typeName === 'securenotes.SecureNote') {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        } else if (item.typeName === 'wallet.financial.CreditCard') {\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n        } else if (item.typeName === 'identities.Identity') {\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n        } else {\n            cipher.login.uris = this.makeUriArray(item.location);\n        }\n\n        if (item.secureContents != null) {\n            if (item.secureContents.passwordHistory != null) {\n                this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\n            }\n            if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n                cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (cipher.type === CipherType.Login) {\n                if (!this.isNullOrWhitespace(item.secureContents.password)) {\n                    cipher.login.password = item.secureContents.password;\n                }\n                if (item.secureContents.URLs != null) {\n                    const urls: string[] = [];\n                    item.secureContents.URLs.forEach((u: any) => {\n                        if (!this.isNullOrWhitespace(u.url)) {\n                            urls.push(u.url);\n                        }\n                    });\n                    if (urls.length > 0) {\n                        cipher.login.uris = this.makeUriArray(urls);\n                    }\n                }\n            }\n            if (item.secureContents.fields != null) {\n                this.parseFields(item.secureContents.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.secureContents.sections != null) {\n                item.secureContents.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n        }\n    }\n\n    private parsePasswordHistory(items: any[], cipher: CipherView) {\n        const maxSize = items.length > 5 ? 5 : items.length;\n        cipher.passwordHistory = items\n            .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n            .sort((a, b) => b.time - a.time)\n            .slice(0, maxSize)\n            .map((h: any) => {\n                const ph = new PasswordHistoryView();\n                ph.password = h.value;\n                ph.lastUsedDate = new Date(('' + h.time).length >= 13 ? h.time : h.time * 1000);\n                return ph;\n            });\n    }\n\n    private parseFields(fields: any[], cipher: CipherView, designationKey: string, valueKey: string, nameKey: string) {\n        fields.forEach((field: any) => {\n            if (field[valueKey] == null || field[valueKey].toString().trim() === '') {\n                return;\n            }\n\n            const fieldValue = field[valueKey].toString();\n            const fieldDesignation = field[designationKey] != null ? field[designationKey].toString() : null;\n\n            if (cipher.type === CipherType.Login) {\n                if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === 'username') {\n                    cipher.login.username = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.password) && fieldDesignation === 'password') {\n                    cipher.login.password = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.totp) && fieldDesignation != null &&\n                    fieldDesignation.startsWith('TOTP_')) {\n                    cipher.login.totp = fieldValue;\n                    return;\n                }\n            } else if (cipher.type === CipherType.Card) {\n                if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === 'ccnum') {\n                    cipher.card.number = fieldValue;\n                    cipher.card.brand = this.getCardBrand(fieldValue);\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === 'cvv') {\n                    cipher.card.code = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && fieldDesignation === 'cardholder') {\n                    cipher.card.cardholderName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.expiration) && fieldDesignation === 'expiry' &&\n                    fieldValue.length === 6) {\n                    cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n                    if (cipher.card.expMonth[0] === '0') {\n                        cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                    }\n                    cipher.card.expYear = (fieldValue as string).substr(0, 4);\n                    return;\n                } else if (fieldDesignation === 'type') {\n                    // Skip since brand was determined from number above\n                    return;\n                }\n            } else if (cipher.type === CipherType.Identity) {\n                const identity = cipher.identity;\n                if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === 'firstname') {\n                    identity.firstName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === 'lastname') {\n                    identity.lastName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === 'initial') {\n                    identity.middleName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === 'defphone') {\n                    identity.phone = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === 'company') {\n                    identity.company = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === 'email') {\n                    identity.email = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === 'username') {\n                    identity.username = fieldValue;\n                    return;\n                } else if (fieldDesignation === 'address') {\n                    // fieldValue is an object casted into a string, so access the plain value instead\n                    const { street, city, country, zip } = field[valueKey];\n                    identity.address1 = this.getValueOrDefault(street);\n                    identity.city = this.getValueOrDefault(city);\n                    if (!this.isNullOrWhitespace(country)) {\n                        identity.country = country.toUpperCase();\n                    }\n                    identity.postalCode = this.getValueOrDefault(zip);\n                    return;\n                }\n            }\n\n            const fieldName = this.isNullOrWhitespace(field[nameKey]) ? 'no_name' : field[nameKey];\n            if (fieldName === 'password' && cipher.passwordHistory != null &&\n                cipher.passwordHistory.some(h => h.password === fieldValue)) {\n                return;\n            }\n\n            const fieldType = field.k === 'concealed' ? FieldType.Hidden : FieldType.Text;\n            this.processKvp(cipher, fieldName, fieldValue, fieldType);\n        });\n    }\n}\n","import { Importer } from '../importer';\nimport { IgnoredProperties, OnePasswordCsvImporter } from './onepasswordCsvImporter';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { IdentityView } from '../../models/view/identityView';\n\nexport class OnePasswordMacCsvImporter extends OnePasswordCsvImporter implements Importer {\n    setCipherType(value: any, cipher: CipherView) {\n        const onePassType = this.getValueOrDefault(this.getProp(value, 'type'), 'Login');\n        switch (onePassType) {\n            case 'Credit Card':\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                IgnoredProperties.push('type');\n                break;\n            case 'Identity':\n                cipher.type = CipherType.Identity;\n                cipher.identity = new IdentityView();\n                IgnoredProperties.push('type');\n                break;\n            case 'Login':\n            case 'Secure Note':\n                IgnoredProperties.push('type');\n            default:\n                break;\n        }\n    }\n}\n","import { CipherView } from '../../models/view/cipherView';\n\nexport class CipherImportContext {\n    lowerProperty: string;\n    constructor(public importRecord: any, public property: string, public cipher: CipherView) {\n        this.lowerProperty = property.toLowerCase();\n    }\n}\n","import { Importer } from '../importer';\nimport { CipherImportContext } from './cipherImportContext';\nimport { OnePasswordCsvImporter } from './onepasswordCsvImporter';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { IdentityView } from '../../models/view/identityView';\nimport { LoginView } from '../../models/view/loginView';\n\nexport class OnePasswordWinCsvImporter extends OnePasswordCsvImporter implements Importer {\n    constructor() {\n        super();\n        this.identityPropertyParsers.push(this.setIdentityAddress);\n    }\n\n    setCipherType(value: any, cipher: CipherView) {\n        cipher.type = CipherType.Login;\n        cipher.login = new LoginView();\n\n        if (!this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: number/i)) &&\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: expiry date/i))) {\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n        }\n\n        if (!this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: first name/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: initial/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: last name/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /internet \\d+: email/i))) {\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n        }\n    }\n\n    setIdentityAddress(context: CipherImportContext) {\n        if (context.lowerProperty.match(/address \\d+: address/i)) {\n            this.processKvp(context.cipher, 'address', context.importRecord[context.property]);\n            return true;\n        }\n        return false;\n    }\n\n    setCreditCardExpiry(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.expiration) && context.lowerProperty.includes('expiry date')) {\n            const expSplit = (context.importRecord[context.property] as string).split('/');\n            context.cipher.card.expMonth = expSplit[0];\n            if (context.cipher.card.expMonth[0] === '0' && context.cipher.card.expMonth.length === 2) {\n                context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n            }\n            context.cipher.card.expYear = expSplit[2].length > 4 ? expSplit[2].substr(0, 4) : expSplit[2];\n            return true;\n        }\n        return false;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let headers: string[] = null;\n        results.forEach(value => {\n            if (headers == null) {\n                headers = value.map((v: string) => v);\n                return;\n            }\n\n            if (value.length < 2 || value.length !== headers.length) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value[1])) {\n                if (this.organization) {\n                    const tags = (value[1] as string).split(',');\n                    tags.forEach(tag => {\n                        tag = tag.trim();\n                        let addCollection = true;\n                        let collectionIndex = result.collections.length;\n\n                        for (let i = 0; i < result.collections.length; i++) {\n                            if (result.collections[i].name === tag) {\n                                addCollection = false;\n                                collectionIndex = i;\n                                break;\n                            }\n                        }\n\n                        if (addCollection) {\n                            const collection = new CollectionView();\n                            collection.name = tag;\n                            result.collections.push(collection);\n                        }\n\n                        result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                    });\n                } else {\n                    const tags = (value[1] as string).split(',');\n                    const tag = tags.length > 0 ? tags[0].trim() : null;\n                    this.processFolder(result, tag);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            for (let i = 2; i < value.length; i++) {\n                const header = headers[i].trim().toLowerCase();\n                if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n                    continue;\n                }\n\n                if (this.usernameFieldNames.indexOf(header) > -1) {\n                    cipher.login.username = value[i];\n                } else if (this.passwordFieldNames.indexOf(header) > -1) {\n                    cipher.login.password = value[i];\n                } else if (this.uriFieldNames.indexOf(header) > -1) {\n                    cipher.login.uris = this.makeUriArray(value[i]);\n                } else {\n                    this.processKvp(cipher, headers[i], value[i]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValue('category', value));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValue('description', value);\n            cipher.name = this.getValueOrDefault(this.getValue('title', value), '--');\n            cipher.login.username = this.getValue('username', value);\n            cipher.login.password = this.getValue('password', value);\n            cipher.login.uris = this.makeUriArray(this.getValue('site', value));\n            this.processKvp(cipher, 'Password 2', this.getValue('password2', value));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private getValue(key: string, value: any) {\n        return this.getValueOrDefault(value[key], this.getValueOrDefault(value[(' ' + key)]));\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach((credential: any) => {\n            if (credential.tags != null && credential.tags.length > 0) {\n                const folderName = credential.tags[0].text;\n                this.processFolder(result, folderName);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = credential.label;\n\n            cipher.login.username = this.getValueOrDefault(credential.username);\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.url);\n            cipher.notes += this.getValueOrDefault(credential.description, '');\n            if (credential.otp != null) {\n                cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\n            }\n\n            if (credential.custom_fields != null) {\n                credential.custom_fields.forEach((customField: any) => {\n                    switch (customField.field_type) {\n                        case 'text':\n                        case 'password':\n                            this.processKvp(cipher, customField.label, customField.value);\n                            break;\n                    }\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\n            const tags: string[] = tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0 ?\n                tagsJson.tags.map((tagJson: string) => {\n                    try {\n                        const t = JSON.parse(tagJson);\n                        return this.getValueOrDefault(t.tag);\n                    } catch { }\n                    return null;\n                }).filter((t: string) => !this.isNullOrWhitespace(t)) : null;\n\n            if (this.organization && tags != null && tags.length > 0) {\n                tags.forEach(tag => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === tag) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = tag;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization && tags != null && tags.length > 0) {\n                this.processFolder(result, tags[0]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes, '');\n            cipher.notes += ('\\n\\n' + this.getValueOrDefault(value['Shared Notes'], '') + '\\n');\n            cipher.name = this.getValueOrDefault(value['Entry Name'], '--');\n            cipher.login.username = this.getValueOrDefault(value['User ID']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                value.__parsed_extra.forEach((extra: string) => {\n                    if (!this.isNullOrWhitespace(extra)) {\n                        cipher.notes += ('\\n' + extra);\n                    }\n                });\n            }\n\n            const fieldsJson = !this.isNullOrWhitespace(value['Extra Fields']) ?\n                JSON.parse(value['Extra Fields']) : null;\n            const fields = fieldsJson != null && fieldsJson.extraFields != null &&\n                fieldsJson.extraFields.length > 0 ? fieldsJson.extraFields.map((fieldJson: string) => {\n                    try {\n                        return JSON.parse(fieldJson);\n                    } catch { }\n                    return null;\n                }) : null;\n            if (fields != null) {\n                fields.forEach((f: any) => {\n                    if (f != null) {\n                        this.processKvp(cipher, f.name, f.data);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let newVersion = true;\n        results.forEach(value => {\n            if (value.length !== 5 && value.length < 9) {\n                return;\n            }\n            const altFormat = value.length === 10 && value[0] === '0';\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], '--');\n            cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\n            cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\n            if (value.length === 5) {\n                newVersion = false;\n                cipher.notes = this.getValueOrDefault(value[4]);\n                cipher.login.uris = this.makeUriArray(value[3]);\n            } else {\n                const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], '(None)');\n                let folderName = folder !== '(None)' ? folder.split('\\\\').join('/') : null;\n                if (folderName != null) {\n                    folderName = folder.split(' > ').join('/');\n                    folderName = folder.split('>').join('/');\n                }\n                this.processFolder(result, folderName);\n                cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (newVersion && this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, string>();\n        results.folders.forEach((value: any) => {\n            foldersMap.set(value.id, value.name);\n        });\n        const foldersIndexMap = new Map<string, number>();\n        foldersMap.forEach((val, key) => {\n            foldersIndexMap.set(key, result.folders.length);\n            const f = new FolderView();\n            f.name = val;\n            result.folders.push(f);\n        });\n\n        results.items.forEach((value: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.uris = this.makeUriArray(value.login_url);\n\n            if (value.folder != null && foldersIndexMap.has(value.folder)) {\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(value.folder)]);\n            }\n\n            if (value.identifiers == null) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n                cipher.notes = value.identifiers.notes.split('\\\\r\\\\n').join('\\n').split('\\\\n').join('\\n');\n            }\n\n            if (value.type === 'CreditCard') {\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n            }\n\n            for (const property in value.identifiers) {\n                if (!value.identifiers.hasOwnProperty(property)) {\n                    continue;\n                }\n                const valObj = value.identifiers[property];\n                const val = valObj != null ? valObj.toString() : null;\n                if (this.isNullOrWhitespace(val) || property === 'notes' || property === 'ignoreItemInSecurityScore') {\n                    continue;\n                }\n\n                if (property === 'custom_fields') {\n                    valObj.forEach((cf: any) => {\n                        this.processKvp(cipher, cf.name, cf.value);\n                    });\n                    continue;\n                }\n\n                if (cipher.type === CipherType.Card) {\n                    if (property === 'cardNumber') {\n                        cipher.card.number = val;\n                        cipher.card.brand = this.getCardBrand(val);\n                        continue;\n                    } else if (property === 'nameOnCard') {\n                        cipher.card.cardholderName = val;\n                        continue;\n                    } else if (property === 'security_code') {\n                        cipher.card.code = val;\n                        continue;\n                    } else if (property === 'expires') {\n                        try {\n                            const expDate = new Date(val);\n                            cipher.card.expYear = expDate.getFullYear().toString();\n                            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                        } catch { }\n                        continue;\n                    } else if (property === 'cardType') {\n                        continue;\n                    }\n                } else {\n                    if ((property === 'username' || property === 'email') &&\n                        this.isNullOrWhitespace(cipher.login.username)) {\n                        cipher.login.username = val;\n                        continue;\n                    } else if (property === 'password') {\n                        cipher.login.password = val;\n                        continue;\n                    } else if (property === 'totp') {\n                        cipher.login.totp = val;\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(property) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                        continue;\n                    }\n                }\n\n                this.processKvp(cipher, property, val);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const records = doc.querySelectorAll('PasswordManager > record');\n        Array.from(records).forEach(record => {\n            const category = this.querySelectorDirectChild(record, 'Category');\n            const categoryText = category != null && !this.isNullOrWhitespace(category.textContent) &&\n                category.textContent !== 'Unfiled' ? category.textContent : null;\n            this.processFolder(result, categoryText);\n\n            const accountName = this.querySelectorDirectChild(record, 'Account-Name');\n            const userId = this.querySelectorDirectChild(record, 'User-Id');\n            const password = this.querySelectorDirectChild(record, 'Password');\n            const url = this.querySelectorDirectChild(record, 'URL');\n            const notes = this.querySelectorDirectChild(record, 'Notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = accountName != null ? this.getValueOrDefault(accountName.textContent, '--') : '--';\n            cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : '';\n            cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            const attributes: string[] = [];\n            for (let i = 1; i <= 10; i++) {\n                attributes.push('Attribute-' + i);\n            }\n\n            this.querySelectorAllDirectChild(record, attributes.join(',')).forEach(attr => {\n                if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === 'null') {\n                    return;\n                }\n                this.processKvp(cipher, attr.tagName, attr.textContent);\n            });\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const passwordSafe = doc.querySelector('passwordsafe');\n        if (passwordSafe == null) {\n            result.errorMessage = 'Missing `passwordsafe` node.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const notesDelimiter = passwordSafe.getAttribute('delimiter');\n        const entries = doc.querySelectorAll('passwordsafe > entry');\n        Array.from(entries).forEach(entry => {\n            const group = this.querySelectorDirectChild(entry, 'group');\n            const groupText = group != null && !this.isNullOrWhitespace(group.textContent) ?\n                group.textContent.split('.').join('/') : null;\n            this.processFolder(result, groupText);\n\n            const title = this.querySelectorDirectChild(entry, 'title');\n            const username = this.querySelectorDirectChild(entry, 'username');\n            const email = this.querySelectorDirectChild(entry, 'email');\n            const password = this.querySelectorDirectChild(entry, 'password');\n            const url = this.querySelectorDirectChild(entry, 'url');\n            const notes = this.querySelectorDirectChild(entry, 'notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = title != null ? this.getValueOrDefault(title.textContent, '--') : '--';\n            cipher.notes = notes != null ?\n                this.getValueOrDefault(notes.textContent, '').split(notesDelimiter).join('\\n') : null;\n            cipher.login.username = username != null ? this.getValueOrDefault(username.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n                cipher.login.username = this.getValueOrDefault(email.textContent);\n            } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n                cipher.notes = this.isNullOrWhitespace(cipher.notes) ? 'Email: ' + email.textContent\n                    : (cipher.notes + '\\n' + 'Email: ' + email.textContent);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 1) {\n                return;\n            }\n            if (value.length > 5) {\n                this.processFolder(result, value[5]);\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            if (value.length > 4) {\n                cipher.notes = this.getValueOrDefault(value[4], '').split('¬').join('\\n');\n            }\n            if (value.length > 2) {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n            }\n            if (value.length > 3) {\n                cipher.login.password = this.getValueOrDefault(value[3]);\n            }\n            if (value.length > 1) {\n                cipher.login.uris = this.makeUriArray(value[1]);\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.trash === 'true') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.notes);\n            if (value.type === 'LoginItem') {\n                cipher.login.uris = this.makeUriArray(value.website);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            } else if (value.type === 'CreditCardItem') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.verification);\n\n                try {\n                    const expMonth = this.getValueOrDefault(value.expiryMonth);\n                    if (expMonth != null) {\n                        const expMonthNumber = parseInt(expMonth, null);\n                        if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\n                            cipher.card.expMonth = expMonthNumber.toString();\n                        }\n                    }\n                } catch { }\n                try {\n                    const expYear = this.getValueOrDefault(value.expiryYear);\n                    if (expYear != null) {\n                        const expYearNumber = parseInt(expYear, null);\n                        if (expYearNumber != null) {\n                            cipher.card.expYear = expYearNumber.toString();\n                        }\n                    }\n                } catch { }\n\n                const pin = this.getValueOrDefault(value.pin);\n                if (pin != null) {\n                    this.processKvp(cipher, 'PIN', pin);\n                }\n                const zip = this.getValueOrDefault(value.zipCode);\n                if (zip != null) {\n                    this.processKvp(cipher, 'Zip Code', zip);\n                }\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let i = 1;\n        results.forEach(value => {\n            const folder = !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith('/') ?\n                value.Folder.replace('/', '') : value.Folder;\n            const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value.Login);\n            cipher.login.password = this.getValueOrDefault(value.Pwd);\n            cipher.login.uris = this.makeUriArray(value.Url);\n\n            if (!this.isNullOrWhitespace(value.Rf_fields)) {\n                let fields: string[] = [value.Rf_fields];\n                if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                    fields = fields.concat(value.__parsed_extra);\n                }\n                fields.forEach((field: string) => {\n                    const parts = field.split(':');\n                    if (parts.length < 3) {\n                        return;\n                    }\n                    const key = parts[0] === '-no-name-' ? null : parts[0];\n                    const val = parts.length === 4 && parts[2] === 'rck' ? parts[1] : parts[2];\n                    this.processKvp(cipher, key, val);\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n\n            if (i === results.length && cipher.name === '--' && this.isNullOrWhitespace(cipher.login.password)) {\n                return;\n            }\n\n            result.ciphers.push(cipher);\n            i++;\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { FieldType } from '../enums/fieldType';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const db = doc.querySelector('database');\n        if (db == null) {\n            result.errorMessage = 'Missing `database` node.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, number>();\n\n        Array.from(doc.querySelectorAll('database > label')).forEach(labelEl => {\n            const name = labelEl.getAttribute('name');\n            const id = labelEl.getAttribute('id');\n            if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n                foldersMap.set(id, result.folders.length);\n                const folder = new FolderView();\n                folder.name = name;\n                result.folders.push(folder);\n            }\n        });\n\n        Array.from(doc.querySelectorAll('database > card')).forEach(cardEl => {\n            if (cardEl.getAttribute('template') === 'true' || cardEl.getAttribute('deleted') === 'true') {\n                return;\n            }\n\n            const labelIdEl = this.querySelectorDirectChild(cardEl, 'label_id');\n            if (labelIdEl != null) {\n                const labelId = labelIdEl.textContent;\n                if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n                    result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(cardEl.getAttribute('title'), '--');\n\n            if (cardEl.getAttribute('star') === 'true') {\n                cipher.favorite = true;\n            }\n\n            const cardType = cardEl.getAttribute('type');\n            if (cardType === 'note') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            } else {\n                Array.from(this.querySelectorAllDirectChild(cardEl, 'field')).forEach(fieldEl => {\n                    const text = fieldEl.textContent;\n                    if (this.isNullOrWhitespace(text)) {\n                        return;\n                    }\n                    const name = fieldEl.getAttribute('name');\n                    const fieldType = this.getValueOrDefault(fieldEl.getAttribute('type'), '').toLowerCase();\n                    if (fieldType === 'login') {\n                        cipher.login.username = text;\n                    } else if (fieldType === 'password' || fieldType === 'secret') {\n                        // safeInCloud allows for more than one password. we just insert them here and find the one used as password later\n                        this.processKvp(cipher, name, text, FieldType.Hidden);\n                    } else if (fieldType === 'one_time_password') {\n                        cipher.login.totp = text;\n                    } else if (fieldType === 'notes') {\n                        cipher.notes += (text + '\\n');\n                    } else if (fieldType === 'weblogin' || fieldType === 'website') {\n                        cipher.login.uris = this.makeUriArray(text);\n                    }\n                    else {\n                        this.processKvp(cipher, name, text);\n                    }\n                });\n            }\n\n            Array.from(this.querySelectorAllDirectChild(cardEl, 'notes')).forEach(notesEl => {\n                cipher.notes += (notesEl.textContent + '\\n');\n            });\n\n            this.setPassword(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    // Choose a password from all passwords. Take one that has password in its name, or the first one if there is no such entry\n    // if its name is password, we can safely remove it form the fields. otherwise, it would maybe be best to keep it as a hidden field\n    setPassword(cipher: CipherView) {\n        const candidates = cipher.fields.filter(field => field.type === FieldType.Hidden);\n        if (!candidates.length) {\n            return;\n        }\n\n        let choice: FieldView;\n        for (const field of candidates) {\n            if (this.passwordFieldNames.includes(field.name.toLowerCase())) {\n                choice = field;\n                cipher.fields = cipher.fields.filter(f => f !== choice);\n                break;\n            }\n        }\n\n        if (!choice) {\n            choice = candidates[0];\n        }\n\n        cipher.login.password = choice.value;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), '--');\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Title);\n            cipher.notes = this.getValueOrDefault(value.Comment);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view/cipherView';\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 3) {\n                return;\n            }\n\n            this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 2], '');\n            cipher.name = this.getValueOrDefault(value[1], '--');\n\n            if (value[0] === 'Web Logins' || value[0] === 'Servers' || value[0] === 'Email Accounts') {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n                cipher.login.password = this.getValueOrDefault(value[3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n                this.parseFieldsToNotes(cipher, 5, value);\n            } else {\n                this.parseFieldsToNotes(cipher, 2, value);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n        // last 3 rows do not get parsed\n        for (let i = startIndex; i < value.length - 3; i++) {\n            if (this.isNullOrWhitespace(value[i])) {\n                continue;\n            }\n            cipher.notes += (value[i] + '\\n');\n        }\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const loginNodes = doc.querySelectorAll('root > Database > Logins > Login');\n        Array.from(loginNodes).forEach(loginNode => {\n            const accountId = loginNode.getAttribute('ID');\n            if (this.isNullOrWhitespace(accountId)) {\n                return;\n            }\n\n            const usernameText = loginNode.getAttribute('Name');\n            const passwordText = loginNode.getAttribute('Password');\n            let titleText: string = null;\n            let linkText: string = null;\n            let notesText: string = null;\n            let groupId: string = null;\n            let groupText: string = null;\n\n            const accountLogin = doc.querySelector('root > Database > Accounts > Account > ' +\n                'LoginLinks > Login[SourceLoginID=\"' + accountId + '\"]');\n            if (accountLogin != null) {\n                const account = accountLogin.parentElement.parentElement;\n                if (account != null) {\n                    titleText = account.getAttribute('Name');\n                    linkText = account.getAttribute('Link');\n                    groupId = account.getAttribute('ParentID');\n                    notesText = account.getAttribute('Comments');\n                    if (!this.isNullOrWhitespace(notesText)) {\n                        notesText = notesText.split('/n').join('\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(groupId)) {\n                groupText = this.buildGroupText(doc, groupId, '');\n                this.processFolder(result, groupText);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(titleText, '--');\n            cipher.notes = this.getValueOrDefault(notesText);\n            cipher.login.username = this.getValueOrDefault(usernameText);\n            cipher.login.password = this.getValueOrDefault(passwordText);\n            cipher.login.uris = this.makeUriArray(linkText);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    buildGroupText(doc: Document, groupId: string, groupText: string): string {\n        const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n        if (group == null) {\n            return groupText;\n        }\n        if (!this.isNullOrWhitespace(groupText)) {\n            groupText = '/' + groupText;\n        }\n        groupText = group.getAttribute('Name') + groupText;\n        return this.buildGroupText(doc, group.getAttribute('ParentID'), groupText);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst PropertiesToIgnore = ['kind', 'autologin', 'favorite', 'hexcolor', 'protectedwithpassword', 'subdomainonly',\n    'type', 'tk_export_version', 'note', 'title', 'document_content',\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.favorite, '').toLowerCase() === 'true';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.notes = this.getValueOrDefault(value.memo, '');\n            cipher.login.username = this.getValueOrDefault(value.login);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n\n            if (value.kind !== 'login') {\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.note, '');\n            }\n\n            if (value.kind === 'cc') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (!this.isNullOrWhitespace(value.expiryDate)) {\n                    try {\n                        const expDate = new Date(value.expiryDate);\n                        cipher.card.expYear = expDate.getFullYear().toString();\n                        cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                    } catch { }\n                }\n            } else if (value.kind !== 'login') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = this.getValueOrDefault(value.document_content, '');\n                }\n                for (const property in value) {\n                    if (value.hasOwnProperty(property) && PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n                        !this.isNullOrWhitespace(value[property])) {\n                        this.processKvp(cipher, property, value[property]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length !== 5) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.notes = this.getValueOrDefault(value[4]);\n            cipher.login.username = this.getValueOrDefault(value[1]);\n            cipher.login.password = this.getValueOrDefault(value[2]);\n            cipher.login.uris = this.makeUriArray(value[3]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class YotiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value['User name']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view/cipherView';\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(value['Password Name']) && this.isNullOrWhitespace(value['Secret Name'])) {\n                return;\n            }\n            this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite, '0') === '1';\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(\n                value['Password Name'], this.getValueOrDefault(value['Secret Name'], '--'));\n            cipher.login.uris = this.makeUriArray(\n                this.getValueOrDefault(value['Password URL'], this.getValueOrDefault(value['Secret URL'])));\n            this.parseData(cipher, value.SecretData);\n            this.parseData(cipher, value.CustomData);\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseData(cipher: CipherView, data: string) {\n        if (this.isNullOrWhitespace(data)) {\n            return;\n        }\n        const dataLines = this.splitNewLine(data);\n        dataLines.forEach(line => {\n            const delimPosition = line.indexOf(':');\n            if (delimPosition < 0) {\n                return;\n            }\n            const field = line.substring(0, delimPosition);\n            const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n            if (this.isNullOrWhitespace(field) || this.isNullOrWhitespace(value) || field === 'SecretType') {\n                return;\n            }\n            const fieldLower = field.toLowerCase();\n            if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.username = value;\n            } else if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.password = value;\n            } else {\n                this.processKvp(cipher, field, value);\n            }\n        });\n    }\n}\n","import * as signalR from '@microsoft/signalr';\nimport * as signalRMsgPack from '@microsoft/signalr-protocol-msgpack';\n\nimport { NotificationType } from '../enums/notificationType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { EnvironmentService } from '../abstractions/environment.service';\nimport { LogService } from '../abstractions/log.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from '../abstractions/notifications.service';\nimport { SyncService } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\n\nimport {\n    NotificationResponse,\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n    private signalrConnection: signalR.HubConnection;\n    private url: string;\n    private connected = false;\n    private inited = false;\n    private inactive = false;\n    private reconnectTimer: any = null;\n\n    constructor(private userService: UserService, private syncService: SyncService,\n        private appIdService: AppIdService, private apiService: ApiService,\n        private vaultTimeoutService: VaultTimeoutService, private environmentService: EnvironmentService,\n        private logoutCallback: () => Promise<void>, private logService: LogService) {\n        this.environmentService.urls.subscribe(() => {\n            if (!this.inited) {\n                return;\n            }\n\n            this.init();\n        });\n    }\n\n    async init(): Promise<void> {\n        this.inited = false;\n        this.url = this.environmentService.getNotificationsUrl();\n\n        // Set notifications server URL to `https://-` to effectively disable communication\n        // with the notifications server from the client app\n        if (this.url === 'https://-') {\n            return;\n        }\n\n        if (this.signalrConnection != null) {\n            this.signalrConnection.off('ReceiveMessage');\n            this.signalrConnection.off('Heartbeat');\n            await this.signalrConnection.stop();\n            this.connected = false;\n            this.signalrConnection = null;\n        }\n\n        this.signalrConnection = new signalR.HubConnectionBuilder()\n            .withUrl(this.url + '/hub', {\n                accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n                skipNegotiation: true,\n                transport: signalR.HttpTransportType.WebSockets,\n            })\n            .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n            // .configureLogging(signalR.LogLevel.Trace)\n            .build();\n\n        this.signalrConnection.on('ReceiveMessage',\n            (data: any) => this.processNotification(new NotificationResponse(data)));\n        this.signalrConnection.on('Heartbeat',\n            (data: any) => { /*console.log('Heartbeat!');*/ });\n        this.signalrConnection.onclose(() => {\n            this.connected = false;\n            this.reconnect(true);\n        });\n        this.inited = true;\n        if (await this.isAuthedAndUnlocked()) {\n            await this.reconnect(false);\n        }\n    }\n\n    async updateConnection(sync = false): Promise<void> {\n        if (!this.inited) {\n            return;\n        }\n        try {\n            if (await this.isAuthedAndUnlocked()) {\n                await this.reconnect(sync);\n            } else {\n                await this.signalrConnection.stop();\n            }\n        } catch (e) {\n            this.logService.error(e.toString());\n        }\n    }\n\n    async reconnectFromActivity(): Promise<void> {\n        this.inactive = false;\n        if (this.inited && !this.connected) {\n            await this.reconnect(true);\n        }\n    }\n\n    async disconnectFromInactivity(): Promise<void> {\n        this.inactive = true;\n        if (this.inited && this.connected) {\n            await this.signalrConnection.stop();\n        }\n    }\n\n    private async processNotification(notification: NotificationResponse) {\n        const appId = await this.appIdService.getAppId();\n        if (notification == null || notification.contextId === appId) {\n            return;\n        }\n\n        const isAuthenticated = await this.userService.isAuthenticated();\n        const payloadUserId = notification.payload.userId || notification.payload.UserId;\n        const myUserId = await this.userService.getUserId();\n        if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n            return;\n        }\n\n        switch (notification.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherUpdate:\n                await this.syncService.syncUpsertCipher(notification.payload as SyncCipherNotification,\n                    notification.type === NotificationType.SyncCipherUpdate);\n                break;\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncLoginDelete:\n                await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderUpdate:\n                await this.syncService.syncUpsertFolder(notification.payload as SyncFolderNotification,\n                    notification.type === NotificationType.SyncFolderUpdate);\n                break;\n            case NotificationType.SyncFolderDelete:\n                await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncSettings:\n                if (isAuthenticated) {\n                    await this.syncService.fullSync(false);\n                }\n                break;\n            case NotificationType.SyncOrgKeys:\n                if (isAuthenticated) {\n                    await this.syncService.fullSync(true);\n                    // Stop so a reconnect can be made\n                    await this.signalrConnection.stop();\n                }\n                break;\n            case NotificationType.LogOut:\n                if (isAuthenticated) {\n                    this.logoutCallback();\n                }\n                break;\n            case NotificationType.SyncSendCreate:\n            case NotificationType.SyncSendUpdate:\n                await this.syncService.syncUpsertSend(notification.payload as SyncSendNotification,\n                    notification.type === NotificationType.SyncSendUpdate);\n                break;\n            case NotificationType.SyncSendDelete:\n                await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n            default:\n                break;\n        }\n    }\n\n    private async reconnect(sync: boolean) {\n        if (this.reconnectTimer != null) {\n            clearTimeout(this.reconnectTimer);\n            this.reconnectTimer = null;\n        }\n        if (this.connected || !this.inited || this.inactive) {\n            return;\n        }\n        const authedAndUnlocked = await this.isAuthedAndUnlocked();\n        if (!authedAndUnlocked) {\n            return;\n        }\n\n        try {\n            await this.signalrConnection.start();\n            this.connected = true;\n            if (sync) {\n                await this.syncService.fullSync(false);\n            }\n        } catch { }\n\n        if (!this.connected) {\n            this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n        }\n    }\n\n    private async isAuthedAndUnlocked() {\n        if (await this.userService.isAuthenticated()) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            return !locked;\n        }\n        return false;\n    }\n\n    private random(min: number, max: number) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { NotificationType } from '../../enums/notificationType';\n\nexport class NotificationResponse extends BaseResponse {\n    contextId: string;\n    type: NotificationType;\n    payload: any;\n\n    constructor(response: any) {\n        super(response);\n        this.contextId = this.getResponseProperty('ContextId');\n        this.type = this.getResponseProperty('Type');\n\n        const payload = this.getResponseProperty('Payload');\n        switch (this.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncCipherUpdate:\n            case NotificationType.SyncLoginDelete:\n                this.payload = new SyncCipherNotification(payload);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderDelete:\n            case NotificationType.SyncFolderUpdate:\n                this.payload = new SyncFolderNotification(payload);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncOrgKeys:\n            case NotificationType.SyncSettings:\n            case NotificationType.LogOut:\n                this.payload = new UserNotification(payload);\n                break;\n            case NotificationType.SyncSendCreate:\n            case NotificationType.SyncSendUpdate:\n            case NotificationType.SyncSendDelete:\n                this.payload = new SyncSendNotification(payload);\n            default:\n                break;\n        }\n    }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    organizationId: string;\n    collectionIds: string[];\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class UserNotification extends BaseResponse {\n    userId: string;\n    date: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.date = new Date(this.getResponseProperty('Date'));\n    }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n","import * as zxcvbn from 'zxcvbn';\n\nimport { EncString } from '../models/domain/encString';\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\nimport { Policy } from '../models/domain/policy';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from '../abstractions/passwordGeneration.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { EEFLongWordList } from '../misc/wordlist';\n\nimport { PolicyType } from '../enums/policyType';\n\nconst DefaultOptions = {\n    length: 14,\n    ambiguous: false,\n    number: true,\n    minNumber: 1,\n    uppercase: true,\n    minUppercase: 0,\n    lowercase: true,\n    minLowercase: 0,\n    special: false,\n    minSpecial: 1,\n    type: 'password',\n    numWords: 3,\n    wordSeparator: '-',\n    capitalize: false,\n    includeNumber: false,\n};\n\nconst Keys = {\n    options: 'passwordGenerationOptions',\n    history: 'generatedPasswordHistory',\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n    private optionsCache: any;\n    private history: GeneratedPasswordHistory[];\n\n    constructor(private cryptoService: CryptoService, private storageService: StorageService,\n        private policyService: PolicyService) { }\n\n    async generatePassword(options: any): Promise<string> {\n        // overload defaults with given options\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.type === 'passphrase') {\n            return this.generatePassphrase(options);\n        }\n\n        // sanitize\n        this.sanitizePasswordLength(o, true);\n\n        const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n        if (o.length < minLength) {\n            o.length = minLength;\n        }\n\n        const positions: string[] = [];\n        if (o.lowercase && o.minLowercase > 0) {\n            for (let i = 0; i < o.minLowercase; i++) {\n                positions.push('l');\n            }\n        }\n        if (o.uppercase && o.minUppercase > 0) {\n            for (let i = 0; i < o.minUppercase; i++) {\n                positions.push('u');\n            }\n        }\n        if (o.number && o.minNumber > 0) {\n            for (let i = 0; i < o.minNumber; i++) {\n                positions.push('n');\n            }\n        }\n        if (o.special && o.minSpecial > 0) {\n            for (let i = 0; i < o.minSpecial; i++) {\n                positions.push('s');\n            }\n        }\n        while (positions.length < o.length) {\n            positions.push('a');\n        }\n\n        // shuffle\n        await this.shuffleArray(positions);\n\n        // build out the char sets\n        let allCharSet = '';\n\n        let lowercaseCharSet = 'abcdefghijkmnopqrstuvwxyz';\n        if (o.ambiguous) {\n            lowercaseCharSet += 'l';\n        }\n        if (o.lowercase) {\n            allCharSet += lowercaseCharSet;\n        }\n\n        let uppercaseCharSet = 'ABCDEFGHJKLMNPQRSTUVWXYZ';\n        if (o.ambiguous) {\n            uppercaseCharSet += 'IO';\n        }\n        if (o.uppercase) {\n            allCharSet += uppercaseCharSet;\n        }\n\n        let numberCharSet = '23456789';\n        if (o.ambiguous) {\n            numberCharSet += '01';\n        }\n        if (o.number) {\n            allCharSet += numberCharSet;\n        }\n\n        const specialCharSet = '!@#$%^&*';\n        if (o.special) {\n            allCharSet += specialCharSet;\n        }\n\n        let password = '';\n        for (let i = 0; i < o.length; i++) {\n            let positionChars: string;\n            switch (positions[i]) {\n                case 'l':\n                    positionChars = lowercaseCharSet;\n                    break;\n                case 'u':\n                    positionChars = uppercaseCharSet;\n                    break;\n                case 'n':\n                    positionChars = numberCharSet;\n                    break;\n                case 's':\n                    positionChars = specialCharSet;\n                    break;\n                case 'a':\n                    positionChars = allCharSet;\n                    break;\n                default:\n                    break;\n            }\n\n            const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n            password += positionChars.charAt(randomCharIndex);\n        }\n\n        return password;\n    }\n\n    async generatePassphrase(options: any): Promise<string> {\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.numWords == null || o.numWords <= 2) {\n            o.numWords = DefaultOptions.numWords;\n        }\n        if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n            o.wordSeparator = ' ';\n        }\n        if (o.capitalize == null) {\n            o.capitalize = false;\n        }\n        if (o.includeNumber == null) {\n            o.includeNumber = false;\n        }\n\n        const listLength = EEFLongWordList.length - 1;\n        const wordList = new Array(o.numWords);\n        for (let i = 0; i < o.numWords; i++) {\n            const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n            if (o.capitalize) {\n                wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n            } else {\n                wordList[i] = EEFLongWordList[wordIndex];\n            }\n        }\n\n        if (o.includeNumber) {\n            await this.appendRandomNumberToRandomWord(wordList);\n        }\n        return wordList.join(o.wordSeparator);\n    }\n\n    async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n        if (this.optionsCache == null) {\n            const options = await this.storageService.get(Keys.options);\n            if (options == null) {\n                this.optionsCache = DefaultOptions;\n            } else {\n                this.optionsCache = Object.assign({}, DefaultOptions, options);\n            }\n        }\n        const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(this.optionsCache);\n        this.optionsCache = enforcedOptions[0];\n        return [this.optionsCache, enforcedOptions[1]];\n    }\n\n    async enforcePasswordGeneratorPoliciesOnOptions(options: any): Promise<[any, PasswordGeneratorPolicyOptions]> {\n        let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n        if (enforcedPolicyOptions != null) {\n            if (options.length < enforcedPolicyOptions.minLength) {\n                options.length = enforcedPolicyOptions.minLength;\n            }\n\n            if (enforcedPolicyOptions.useUppercase) {\n                options.uppercase = true;\n            }\n\n            if (enforcedPolicyOptions.useLowercase) {\n                options.lowercase = true;\n            }\n\n            if (enforcedPolicyOptions.useNumbers) {\n                options.number = true;\n            }\n\n            if (options.minNumber < enforcedPolicyOptions.numberCount) {\n                options.minNumber = enforcedPolicyOptions.numberCount;\n            }\n\n            if (enforcedPolicyOptions.useSpecial) {\n                options.special = true;\n            }\n\n            if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n                options.minSpecial = enforcedPolicyOptions.specialCount;\n            }\n\n            // Must normalize these fields because the receiving call expects all options to pass the current rules\n            if (options.minSpecial + options.minNumber > options.length) {\n                options.minSpecial = options.length - options.minNumber;\n            }\n\n            if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n                options.numWords = enforcedPolicyOptions.minNumberWords;\n            }\n\n            if (enforcedPolicyOptions.capitalize) {\n                options.capitalize = true;\n            }\n\n            if (enforcedPolicyOptions.includeNumber) {\n                options.includeNumber = true;\n            }\n\n            // Force default type if password/passphrase selected via policy\n            if (enforcedPolicyOptions.defaultType === 'password' ||\n                enforcedPolicyOptions.defaultType === 'passphrase') {\n                options.type = enforcedPolicyOptions.defaultType;\n            }\n        } else { // UI layer expects an instantiated object to prevent more explicit null checks\n            enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n        }\n        return [options, enforcedPolicyOptions];\n    }\n\n    async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n        const policies: Policy[] = this.policyService == null ? null :\n            await this.policyService.getAll(PolicyType.PasswordGenerator);\n        let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n        if (policies == null || policies.length === 0) {\n            return enforcedOptions;\n        }\n\n        policies.forEach(currentPolicy => {\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\n                return;\n            }\n\n            if (enforcedOptions == null) {\n                enforcedOptions = new PasswordGeneratorPolicyOptions();\n            }\n\n            // Password wins in multi-org collisions\n            if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== 'password') {\n                enforcedOptions.defaultType = currentPolicy.data.defaultType;\n            }\n\n            if (currentPolicy.data.minLength != null\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\n                enforcedOptions.minLength = currentPolicy.data.minLength;\n            }\n\n            if (currentPolicy.data.useUpper) {\n                enforcedOptions.useUppercase = true;\n            }\n\n            if (currentPolicy.data.useLower) {\n                enforcedOptions.useLowercase = true;\n            }\n\n            if (currentPolicy.data.useNumbers) {\n                enforcedOptions.useNumbers = true;\n            }\n\n            if (currentPolicy.data.minNumbers != null\n                && currentPolicy.data.minNumbers > enforcedOptions.numberCount) {\n                enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n            }\n\n            if (currentPolicy.data.useSpecial) {\n                enforcedOptions.useSpecial = true;\n            }\n\n            if (currentPolicy.data.minSpecial != null\n                && currentPolicy.data.minSpecial > enforcedOptions.specialCount) {\n                enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n            }\n\n            if (currentPolicy.data.minNumberWords != null\n                && currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords) {\n                enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n            }\n\n            if (currentPolicy.data.capitalize) {\n                enforcedOptions.capitalize = true;\n            }\n\n            if (currentPolicy.data.includeNumber) {\n                enforcedOptions.includeNumber = true;\n            }\n        });\n\n        return enforcedOptions;\n    }\n\n    async saveOptions(options: any) {\n        await this.storageService.save(Keys.options, options);\n        this.optionsCache = options;\n    }\n\n    async getHistory(): Promise<GeneratedPasswordHistory[]> {\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return new Array<GeneratedPasswordHistory>();\n        }\n\n        if (!this.history) {\n            const encrypted = await this.storageService.get<GeneratedPasswordHistory[]>(Keys.history);\n            this.history = await this.decryptHistory(encrypted);\n        }\n\n        return this.history || new Array<GeneratedPasswordHistory>();\n    }\n\n    async addHistory(password: string): Promise<any> {\n        // Cannot add new history if no key is available\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return;\n        }\n\n        const currentHistory = await this.getHistory();\n\n        // Prevent duplicates\n        if (this.matchesPrevious(password, currentHistory)) {\n            return;\n        }\n\n        currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n        // Remove old items.\n        if (currentHistory.length > MaxPasswordsInHistory) {\n            currentHistory.pop();\n        }\n\n        const newHistory = await this.encryptHistory(currentHistory);\n        return await this.storageService.save(Keys.history, newHistory);\n    }\n\n    async clear(): Promise<any> {\n        this.history = [];\n        return await this.storageService.remove(Keys.history);\n    }\n\n    passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n        if (password == null || password.length === 0) {\n            return null;\n        }\n        let globalUserInputs = ['bitwarden', 'bit', 'warden'];\n        if (userInputs != null && userInputs.length > 0) {\n            globalUserInputs = globalUserInputs.concat(userInputs);\n        }\n        // Use a hash set to get rid of any duplicate user inputs\n        const finalUserInputs = Array.from(new Set(globalUserInputs));\n        const result = zxcvbn(password, finalUserInputs);\n        return result;\n    }\n\n    normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n        options.minLowercase = 0;\n        options.minUppercase = 0;\n\n        if (!options.length || options.length < 5) {\n            options.length = 5;\n        } else if (options.length > 128) {\n            options.length = 128;\n        }\n\n        if (options.length < enforcedPolicyOptions.minLength) {\n            options.length = enforcedPolicyOptions.minLength;\n        }\n\n        if (!options.minNumber) {\n            options.minNumber = 0;\n        } else if (options.minNumber > options.length) {\n            options.minNumber = options.length;\n        } else if (options.minNumber > 9) {\n            options.minNumber = 9;\n        }\n\n        if (options.minNumber < enforcedPolicyOptions.numberCount) {\n            options.minNumber = enforcedPolicyOptions.numberCount;\n        }\n\n        if (!options.minSpecial) {\n            options.minSpecial = 0;\n        } else if (options.minSpecial > options.length) {\n            options.minSpecial = options.length;\n        } else if (options.minSpecial > 9) {\n            options.minSpecial = 9;\n        }\n\n        if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n            options.minSpecial = enforcedPolicyOptions.specialCount;\n        }\n\n        if (options.minSpecial + options.minNumber > options.length) {\n            options.minSpecial = options.length - options.minNumber;\n        }\n\n        if (options.numWords == null || options.length < 3) {\n            options.numWords = 3;\n        } else if (options.numWords > 20) {\n            options.numWords = 20;\n        }\n\n        if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n            options.numWords = enforcedPolicyOptions.minNumberWords;\n        }\n\n        if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n            options.wordSeparator = options.wordSeparator[0];\n        }\n\n        this.sanitizePasswordLength(options, false);\n    }\n\n    private capitalize(str: string) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    private async appendRandomNumberToRandomWord(wordList: string[]) {\n        if (wordList == null || wordList.length <= 0) {\n            return;\n        }\n        const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n        const num = await this.cryptoService.randomNumber(0, 9);\n        wordList[index] = wordList[index] + num;\n    }\n\n    private async encryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async item => {\n            const encrypted = await this.cryptoService.encrypt(item.password);\n            return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private async decryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async item => {\n            const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n            return new GeneratedPasswordHistory(decrypted, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n        if (history == null || history.length === 0) {\n            return false;\n        }\n\n        return history[history.length - 1].password === password;\n    }\n\n    // ref: https://stackoverflow.com/a/12646864/1090359\n    private async shuffleArray(array: string[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = await this.cryptoService.randomNumber(0, i);\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    private sanitizePasswordLength(options: any, forGeneration: boolean) {\n        let minUppercaseCalc = 0;\n        let minLowercaseCalc = 0;\n        let minNumberCalc: number = options.minNumber;\n        let minSpecialCalc: number = options.minSpecial;\n\n        if (options.uppercase && options.minUppercase <= 0) {\n            minUppercaseCalc = 1;\n        } else if (!options.uppercase) {\n            minUppercaseCalc = 0;\n        }\n\n        if (options.lowercase && options.minLowercase <= 0) {\n            minLowercaseCalc = 1;\n        } else if (!options.lowercase) {\n            minLowercaseCalc = 0;\n        }\n\n        if (options.number && options.minNumber <= 0) {\n            minNumberCalc = 1;\n        } else if (!options.number) {\n            minNumberCalc = 0;\n        }\n\n        if (options.special && options.minSpecial <= 0) {\n            minSpecialCalc = 1;\n        } else if (!options.special) {\n            minSpecialCalc = 0;\n        }\n\n        // This should never happen but is a final safety net\n        if (!options.length || options.length < 1) {\n            options.length = 10;\n        }\n\n        const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n        // Normalize and Generation both require this modification\n        if (options.length < minLength) {\n            options.length = minLength;\n        }\n\n        // Apply other changes if the options object passed in is for generation\n        if (forGeneration) {\n            options.minUppercase = minUppercaseCalc;\n            options.minLowercase = minLowercaseCalc;\n            options.minNumber = minNumberCalc;\n            options.minSpecial = minSpecialCalc;\n        }\n    }\n}\n","export class GeneratedPasswordHistory {\n    password: string;\n    date: number;\n\n    constructor(password: string, date: number) {\n        this.password = password;\n        this.date = date;\n    }\n}\n","import Domain from './domainBase';\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n    defaultType: string = '';\n    minLength: number = 0;\n    useUppercase: boolean = false;\n    useLowercase: boolean = false;\n    useNumbers: boolean = false;\n    numberCount: number = 0;\n    useSpecial: boolean = false;\n    specialCount: number = 0;\n    minNumberWords: number = 0;\n    capitalize: boolean = false;\n    includeNumber: boolean = false;\n\n    inEffect() {\n        return this.defaultType !== '' ||\n            this.minLength > 0 ||\n            this.numberCount > 0 ||\n            this.specialCount > 0 ||\n            this.useUppercase ||\n            this.useLowercase ||\n            this.useNumbers ||\n            this.useSpecial ||\n            this.minNumberWords > 0 ||\n            this.capitalize ||\n            this.includeNumber;\n    }\n}\n","import { PolicyService as PolicyServiceAbstraction } from '../abstractions/policy.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { PolicyData } from '../models/data/policyData';\n\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\nimport { Organization } from '../models/domain/organization';\nimport { Policy } from '../models/domain/policy';\nimport { ResetPasswordPolicyOptions } from '../models/domain/resetPasswordPolicyOptions';\n\nimport { OrganizationUserStatusType } from '../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../enums/organizationUserType';\nimport { PolicyType } from '../enums/policyType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { ListResponse } from '../models/response/listResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\n\nconst Keys = {\n    policiesPrefix: 'policies_',\n};\n\nexport class PolicyService implements PolicyServiceAbstraction {\n    policyCache: Policy[];\n\n    constructor(private userService: UserService, private storageService: StorageService,\n        private apiService: ApiService) {\n    }\n\n    clearCache(): void {\n        this.policyCache = null;\n    }\n\n    async getAll(type?: PolicyType): Promise<Policy[]> {\n        if (this.policyCache == null) {\n            const userId = await this.userService.getUserId();\n            const policies = await this.storageService.get<{ [id: string]: PolicyData; }>(\n                Keys.policiesPrefix + userId);\n            const response: Policy[] = [];\n            for (const id in policies) {\n                if (policies.hasOwnProperty(id)) {\n                    response.push(new Policy(policies[id]));\n                }\n            }\n            this.policyCache = response;\n        }\n        if (type != null) {\n            return this.policyCache.filter(p => p.type === type);\n        } else {\n            return this.policyCache;\n        }\n    }\n\n    async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n        const org = await this.userService.getOrganization(organizationId);\n        if (org?.isProviderUser) {\n            const orgPolicies = await this.apiService.getPolicies(organizationId);\n            const policy = orgPolicies.data.find(p => p.organizationId === organizationId);\n\n            if (policy == null) {\n                return null;\n            }\n\n            return new Policy(new PolicyData(policy));\n        }\n\n        const policies = await this.getAll(policyType);\n        return policies.find(p => p.organizationId === organizationId);\n    }\n\n    async replace(policies: { [id: string]: PolicyData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.policiesPrefix + userId, policies);\n        this.policyCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.policiesPrefix + userId);\n        this.policyCache = null;\n    }\n\n    async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n        if (policies == null) {\n            policies = await this.getAll(PolicyType.MasterPassword);\n        } else {\n            policies = policies.filter(p => p.type === PolicyType.MasterPassword);\n        }\n\n        if (policies == null || policies.length === 0) {\n            return enforcedOptions;\n        }\n\n        policies.forEach(currentPolicy => {\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\n                return;\n            }\n\n            if (enforcedOptions == null) {\n                enforcedOptions = new MasterPasswordPolicyOptions();\n            }\n\n            if (currentPolicy.data.minComplexity != null\n                && currentPolicy.data.minComplexity > enforcedOptions.minComplexity) {\n                enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n            }\n\n            if (currentPolicy.data.minLength != null\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\n                enforcedOptions.minLength = currentPolicy.data.minLength;\n            }\n\n            if (currentPolicy.data.requireUpper) {\n                enforcedOptions.requireUpper = true;\n            }\n\n            if (currentPolicy.data.requireLower) {\n                enforcedOptions.requireLower = true;\n            }\n\n            if (currentPolicy.data.requireNumbers) {\n                enforcedOptions.requireNumbers = true;\n            }\n\n            if (currentPolicy.data.requireSpecial) {\n                enforcedOptions.requireSpecial = true;\n            }\n        });\n\n        return enforcedOptions;\n    }\n\n    evaluateMasterPassword(passwordStrength: number, newPassword: string,\n        enforcedPolicyOptions: MasterPasswordPolicyOptions): boolean {\n        if (enforcedPolicyOptions == null) {\n            return true;\n        }\n\n        if (enforcedPolicyOptions.minComplexity > 0 && enforcedPolicyOptions.minComplexity > passwordStrength) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.minLength > 0 && enforcedPolicyOptions.minLength > newPassword.length) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireNumbers && !(/[0-9]/.test(newPassword))) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireSpecial && !(/[!@#$%\\^&*]/g.test(newPassword))) {\n            return false;\n        }\n\n        return true;\n    }\n\n    getResetPasswordPolicyOptions(policies: Policy[], orgId: string): [ResetPasswordPolicyOptions, boolean] {\n        const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n        if (policies == null || orgId == null) {\n            return [resetPasswordPolicyOptions, false];\n        }\n\n        const policy = policies.find(p => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled);\n        resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n        return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n    }\n\n    mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n        if (policiesResponse == null || policiesResponse.data == null) {\n            return null;\n        }\n\n        const policiesData = policiesResponse.data.map(p => new PolicyData(p));\n        return policiesData.map(p => new Policy(p));\n    }\n\n    async policyAppliesToUser(policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) {\n        const policies = await this.getAll(policyType);\n        const organizations = await this.userService.getAllOrganizations();\n        let filteredPolicies;\n\n        if (policyFilter != null) {\n            filteredPolicies = policies.filter(p => p.enabled && policyFilter(p));\n        }\n        else {\n            filteredPolicies = policies.filter(p => p.enabled);\n        }\n\n        const policySet = new Set(filteredPolicies.map(p => p.organizationId));\n\n        return organizations.some(o =>\n            o.enabled &&\n            o.status >= OrganizationUserStatusType.Accepted &&\n            o.usePolicies &&\n            !this.isExcemptFromPolicies(o, policyType) &&\n            policySet.has(o.id));\n    }\n\n    private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n        if (policyType === PolicyType.MaximumVaultTimeout) {\n            return organization.type === OrganizationUserType.Owner;\n        }\n\n        return organization.isExemptFromPolicies;\n    }\n}\n","import Domain from './domainBase';\n\nexport class ResetPasswordPolicyOptions extends Domain {\n    autoEnrollEnabled: boolean = false;\n}\n","import * as lunr from 'lunr';\n\nimport { CipherView } from '../models/view/cipherView';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { LogService } from '../abstractions/log.service';\nimport { SearchService as SearchServiceAbstraction } from '../abstractions/search.service';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\nimport { SendView } from '../models/view/sendView';\n\nexport class SearchService implements SearchServiceAbstraction {\n    indexedEntityId?: string = null;\n    private indexing = false;\n    private index: lunr.Index = null;\n    private searchableMinLength = 2;\n\n    constructor(private cipherService: CipherService, private logService: LogService,\n        private i18nService: I18nService) {\n        if (['zh-CN', 'zh-TW'].indexOf(i18nService.locale) !== -1) {\n            this.searchableMinLength = 1;\n        }\n    }\n\n    clearIndex(): void {\n        this.indexedEntityId = null;\n        this.index = null;\n    }\n\n    isSearchable(query: string): boolean {\n        const notSearchable = query == null || (this.index == null && query.length < this.searchableMinLength) ||\n            (this.index != null && query.length < this.searchableMinLength && query.indexOf('>') !== 0);\n        return !notSearchable;\n    }\n\n    async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n        if (this.indexing) {\n            return;\n        }\n\n        this.logService.time('search indexing');\n        this.indexing = true;\n        this.indexedEntityId = indexedEntityId;\n        this.index = null;\n        const builder = new lunr.Builder();\n        builder.ref('id');\n        builder.field('shortid', { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n        builder.field('name', { boost: 10 });\n        builder.field('subtitle', {\n            boost: 5,\n            extractor: (c: CipherView) => {\n                if (c.subTitle != null && c.type === CipherType.Card) {\n                    return c.subTitle.replace(/\\*/g, '');\n                }\n                return c.subTitle;\n            },\n        });\n        builder.field('notes');\n        builder.field('login.username', {\n            extractor: (c: CipherView) => c.type === CipherType.Login && c.login != null ? c.login.username : null,\n        });\n        builder.field('login.uris', { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n        builder.field('fields', { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n        builder.field('fields_joined', { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n        builder.field('attachments', { extractor: (c: CipherView) => this.attachmentExtractor(c, false) });\n        builder.field('attachments_joined',\n            { extractor: (c: CipherView) => this.attachmentExtractor(c, true) });\n        builder.field('organizationid', { extractor: (c: CipherView) => c.organizationId });\n        ciphers = ciphers || await this.cipherService.getAllDecrypted();\n        ciphers.forEach(c => builder.add(c));\n        this.index = builder.build();\n\n        this.indexing = false;\n\n        this.logService.timeEnd('search indexing');\n    }\n\n    async searchCiphers(query: string,\n        filter: (((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[])) = null,\n        ciphers: CipherView[] = null):\n        Promise<CipherView[]> {\n        const results: CipherView[] = [];\n        if (query != null) {\n            query = query.trim().toLowerCase();\n        }\n        if (query === '') {\n            query = null;\n        }\n\n        if (ciphers == null) {\n            ciphers = await this.cipherService.getAllDecrypted();\n        }\n\n        if (filter != null && Array.isArray(filter) && filter.length > 0) {\n            ciphers = ciphers.filter(c => filter.every(f => f == null || f(c)));\n        } else if (filter != null) {\n            ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n        }\n\n        if (!this.isSearchable(query)) {\n            return ciphers;\n        }\n\n        if (this.indexing) {\n            await new Promise(r => setTimeout(r, 250));\n            if (this.indexing) {\n                await new Promise(r => setTimeout(r, 500));\n            }\n        }\n\n        const index = this.getIndexForSearch();\n        if (index == null) {\n            // Fall back to basic search if index is not available\n            return this.searchCiphersBasic(ciphers, query);\n        }\n\n        const ciphersMap = new Map<string, CipherView>();\n        ciphers.forEach(c => ciphersMap.set(c.id, c));\n\n        let searchResults: lunr.Index.Result[] = null;\n        const isQueryString = query != null && query.length > 1 && query.indexOf('>') === 0;\n        if (isQueryString) {\n            try {\n                searchResults = index.search(query.substr(1).trim());\n            } catch { }\n        } else {\n            // tslint:disable-next-line\n            const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n            searchResults = index.query(q => {\n                lunr.tokenizer(query).forEach(token => {\n                    const t = token.toString();\n                    q.term(t, { fields: ['name'], wildcard: soWild });\n                    q.term(t, { fields: ['subtitle'], wildcard: soWild });\n                    q.term(t, { fields: ['login.uris'], wildcard: soWild });\n                    q.term(t, {});\n                });\n            });\n        }\n\n        if (searchResults != null) {\n            searchResults.forEach(r => {\n                if (ciphersMap.has(r.ref)) {\n                    results.push(ciphersMap.get(r.ref));\n                }\n            });\n        }\n        return results;\n    }\n\n    searchCiphersBasic(ciphers: CipherView[], query: string, deleted: boolean = false) {\n        query = query.trim().toLowerCase();\n        return ciphers.filter(c => {\n            if (deleted !== c.isDeleted) {\n                return false;\n            }\n            if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (query.length >= 8 && c.id.startsWith(query)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n\n    searchSends(sends: SendView[], query: string) {\n        query = query.trim().toLocaleLowerCase();\n\n        return sends.filter(s => {\n            if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (query.length >= 8 && (s.id.startsWith(query) || s.accessId.toLocaleLowerCase().startsWith(query) || (s.file?.id != null && s.file.id.startsWith(query)))) {\n                return true;\n            }\n            if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n        });\n    }\n\n    getIndexForSearch(): lunr.Index {\n        return this.index;\n    }\n\n    private fieldExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasFields) {\n            return null;\n        }\n        let fields: string[] = [];\n        c.fields.forEach(f => {\n            if (f.name != null) {\n                fields.push(f.name);\n            }\n            if (f.type === FieldType.Text && f.value != null) {\n                fields.push(f.value);\n            }\n        });\n        fields = fields.filter(f => f.trim() !== '');\n        if (fields.length === 0) {\n            return null;\n        }\n        return joined ? fields.join(' ') : fields;\n    }\n\n    private attachmentExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasAttachments) {\n            return null;\n        }\n        let attachments: string[] = [];\n        c.attachments.forEach(a => {\n            if (a != null && a.fileName != null) {\n                if (joined && a.fileName.indexOf('.') > -1) {\n                    attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf('.')));\n                } else {\n                    attachments.push(a.fileName);\n                }\n            }\n        });\n        attachments = attachments.filter(f => f.trim() !== '');\n        if (attachments.length === 0) {\n            return null;\n        }\n        return joined ? attachments.join(' ') : attachments;\n    }\n\n    private uriExtractor(c: CipherView) {\n        if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n            return null;\n        }\n        const uris: string[] = [];\n        c.login.uris.forEach(u => {\n            if (u.uri == null || u.uri === '') {\n                return;\n            }\n            if (u.hostname != null) {\n                uris.push(u.hostname);\n                return;\n            }\n            let uri = u.uri;\n            if (u.match !== UriMatchType.RegularExpression) {\n                const protocolIndex = uri.indexOf('://');\n                if (protocolIndex > -1) {\n                    uri = uri.substr(protocolIndex + 3);\n                }\n                const queryIndex = uri.search(/\\?|&|#/);\n                if (queryIndex > -1) {\n                    uri = uri.substring(0, queryIndex);\n                }\n            }\n            uris.push(uri);\n        });\n        return uris.length > 0 ? uris : null;\n    }\n}\n","import { SendData } from '../models/data/sendData';\n\nimport { SendRequest } from '../models/request/sendRequest';\n\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { SendResponse } from '../models/response/sendResponse';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { Send } from '../models/domain/send';\nimport { SendFile } from '../models/domain/sendFile';\nimport { SendText } from '../models/domain/sendText';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { FileUploadType } from '../enums/fileUploadType';\nimport { SendType } from '../enums/sendType';\n\nimport { SendView } from '../models/view/sendView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { FileUploadService } from '../abstractions/fileUpload.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { SendService as SendServiceAbstraction } from '../abstractions/send.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    sendsPrefix: 'sends_',\n};\n\nexport class SendService implements SendServiceAbstraction {\n    decryptedSendCache: SendView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private fileUploadService: FileUploadService,\n        private storageService: StorageService, private i18nService: I18nService,\n        private cryptoFunctionService: CryptoFunctionService) { }\n\n    clearCache(): void {\n        this.decryptedSendCache = null;\n    }\n\n    async encrypt(model: SendView, file: File | ArrayBuffer, password: string,\n        key?: SymmetricCryptoKey): Promise<[Send, EncArrayBuffer]> {\n        let fileData: EncArrayBuffer = null;\n        const send = new Send();\n        send.id = model.id;\n        send.type = model.type;\n        send.disabled = model.disabled;\n        send.hideEmail = model.hideEmail;\n        send.maxAccessCount = model.maxAccessCount;\n        if (model.key == null) {\n            model.key = await this.cryptoFunctionService.randomBytes(16);\n            model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n        }\n        if (password != null) {\n            const passwordHash = await this.cryptoFunctionService.pbkdf2(password, model.key, 'sha256', 100000);\n            send.password = Utils.fromBufferToB64(passwordHash);\n        }\n        send.key = await this.cryptoService.encrypt(model.key, key);\n        send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n        send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n        if (send.type === SendType.Text) {\n            send.text = new SendText();\n            send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n            send.text.hidden = model.text.hidden;\n        } else if (send.type === SendType.File) {\n            send.file = new SendFile();\n            if (file != null) {\n                if (file instanceof ArrayBuffer) {\n                    const [name, data] = await this.encryptFileData(model.file.fileName, file, model.cryptoKey);\n                    send.file.fileName = name;\n                    fileData = data;\n                } else {\n                    fileData = await this.parseFile(send, file, model.cryptoKey);\n                }\n            }\n        }\n\n        return [send, fileData];\n    }\n\n    async get(id: string): Promise<Send> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null || !sends.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Send(sends[id]);\n    }\n\n    async getAll(): Promise<Send[]> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        const response: Send[] = [];\n        for (const id in sends) {\n            if (sends.hasOwnProperty(id)) {\n                response.push(new Send(sends[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<SendView[]> {\n        if (this.decryptedSendCache != null) {\n            return this.decryptedSendCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decSends: SendView[] = [];\n        const promises: Promise<any>[] = [];\n        const sends = await this.getAll();\n        sends.forEach(send => {\n            promises.push(send.decrypt().then(f => decSends.push(f)));\n        });\n\n        await Promise.all(promises);\n        decSends.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        this.decryptedSendCache = decSends;\n        return this.decryptedSendCache;\n    }\n\n    async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n        const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n        let response: SendResponse;\n        if (sendData[0].id == null) {\n            if (sendData[0].type === SendType.Text) {\n                response = await this.apiService.postSend(request);\n            } else {\n                try {\n                    const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n                    response = uploadDataResponse.sendResponse;\n\n                    await this.fileUploadService.uploadSendFile(uploadDataResponse, sendData[0].file.fileName, sendData[1]);\n                } catch (e) {\n                    if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n                        response = await this.legacyServerSendFileUpload(sendData, request);\n                    } else if (e instanceof ErrorResponse) {\n                        throw new Error((e as ErrorResponse).getSingleMessage());\n                    } else {\n                        throw e;\n                    }\n                }\n            }\n            sendData[0].id = response.id;\n            sendData[0].accessId = response.accessId;\n        } else {\n            response = await this.apiService.putSend(sendData[0].id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new SendData(response, userId);\n        await this.upsert(data);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async legacyServerSendFileUpload(sendData: [Send, EncArrayBuffer], request: SendRequest): Promise<SendResponse>\n    {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([sendData[1].buffer], { type: 'application/octet-stream' });\n            fd.append('model', JSON.stringify(request));\n            fd.append('data', blob, sendData[0].file.fileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('model', JSON.stringify(request));\n                fd.append('data', Buffer.from(sendData[1].buffer) as any, {\n                    filepath: sendData[0].file.fileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n        return await this.apiService.postSendFileLegacy(fd);\n    }\n\n    async upsert(send: SendData | SendData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null) {\n            sends = {};\n        }\n\n        if (send instanceof SendData) {\n            const s = send as SendData;\n            sends[s.id] = s;\n        } else {\n            (send as SendData[]).forEach(s => {\n                sends[s.id] = s;\n            });\n        }\n\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async replace(sends: { [id: string]: SendData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.sendsPrefix + userId);\n        this.decryptedSendCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (sends[id] == null) {\n                return;\n            }\n            delete sends[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete sends[i];\n            });\n        }\n\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteSend(id);\n        await this.delete(id);\n    }\n\n    async removePasswordWithServer(id: string): Promise<any> {\n        const response = await this.apiService.putSendRemovePassword(id);\n        const userId = await this.userService.getUserId();\n        const data = new SendData(response, userId);\n        await this.upsert(data);\n    }\n\n    private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(file);\n            reader.onload = async evt => {\n                try {\n                    const [name, data] = await this.encryptFileData(file.name, evt.target.result as ArrayBuffer, key);\n                    send.file.fileName = name;\n                    resolve(data);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = evt => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    private async encryptFileData(fileName: string, data: ArrayBuffer,\n        key: SymmetricCryptoKey): Promise<[EncString, EncArrayBuffer]> {\n        const encFileName = await this.cryptoService.encrypt(fileName, key);\n        const encFileData = await this.cryptoService.encryptToBytes(data, key);\n        return [encFileName, encFileData];\n    }\n}\n","import { SendFileApi } from '../api/sendFileApi';\n\nexport class SendFileData {\n    id: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(data?: SendFileApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.id = data.id;\n        this.fileName = data.fileName;\n        this.key = data.key;\n        this.size = data.size;\n        this.sizeName = data.sizeName;\n    }\n}\n","import { SendTextApi } from '../api/sendTextApi';\n\nexport class SendTextData {\n    text: string;\n    hidden: boolean;\n\n    constructor(data?: SendTextApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.text = data.text;\n        this.hidden = data.hidden;\n    }\n}\n","import { CryptoService } from '../../abstractions/crypto.service';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { Utils } from '../../misc/utils';\n\nimport { SendData } from '../data/sendData';\n\nimport { SendView } from '../view/sendView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SendFile } from './sendFile';\nimport { SendText } from './sendText';\n\nexport class Send extends Domain {\n    id: string;\n    accessId: string;\n    userId: string;\n    type: SendType;\n    name: EncString;\n    notes: EncString;\n    file: SendFile;\n    text: SendText;\n    key: EncString;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: Date;\n    expirationDate: Date;\n    deletionDate: Date;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(obj?: SendData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            accessId: null,\n            userId: null,\n            name: null,\n            notes: null,\n            key: null,\n        }, alreadyEncrypted, ['id', 'accessId', 'userId']);\n\n        this.type = obj.type;\n        this.maxAccessCount = obj.maxAccessCount;\n        this.accessCount = obj.accessCount;\n        this.password = obj.password;\n        this.disabled = obj.disabled;\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n        this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n        this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n        this.hideEmail = obj.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendText(obj.text, alreadyEncrypted);\n                break;\n            case SendType.File:\n                this.file = new SendFile(obj.file, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n    }\n\n    async decrypt(): Promise<SendView> {\n        const model = new SendView(this);\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            model.key = await cryptoService.decryptToBytes(this.key, null);\n            model.cryptoKey = await cryptoService.makeSendKey(model.key);\n        } catch (e) {\n            // TODO: error?\n        }\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, null, model.cryptoKey);\n\n        switch (this.type) {\n            case SendType.File:\n                model.file = await this.file.decrypt(model.cryptoKey);\n                break;\n            case SendType.Text:\n                model.text = await this.text.decrypt(model.cryptoKey);\n                break;\n            default:\n                break;\n        }\n\n        return model;\n    }\n}\n","import { SettingsService as SettingsServiceAbstraction } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nconst Keys = {\n    settingsPrefix: 'settings_',\n    equivalentDomains: 'equivalentDomains',\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n    private settingsCache: any;\n\n    constructor(private userService: UserService, private storageService: StorageService) {\n    }\n\n    clearCache(): void {\n        this.settingsCache = null;\n    }\n\n    getEquivalentDomains(): Promise<any> {\n        return this.getSettingsKey(Keys.equivalentDomains);\n    }\n\n    async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n        await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n    }\n\n    async clear(userId: string): Promise<void> {\n        await this.storageService.remove(Keys.settingsPrefix + userId);\n        this.clearCache();\n    }\n\n    // Helpers\n\n    private async getSettings(): Promise<any> {\n        if (this.settingsCache == null) {\n            const userId = await this.userService.getUserId();\n            this.settingsCache = this.storageService.get(Keys.settingsPrefix + userId);\n        }\n        return this.settingsCache;\n    }\n\n    private async getSettingsKey(key: string): Promise<any> {\n        const settings = await this.getSettings();\n        if (settings != null && settings[key]) {\n            return settings[key];\n        }\n        return null;\n    }\n\n    private async setSettingsKey(key: string, value: any): Promise<void> {\n        const userId = await this.userService.getUserId();\n        let settings = await this.getSettings();\n        if (!settings) {\n            settings = {};\n        }\n\n        settings[key] = value;\n        await this.storageService.save(Keys.settingsPrefix + userId, settings);\n        this.settingsCache = settings;\n    }\n}\n","import { StateService as StateServiceAbstraction } from '../abstractions/state.service';\n\nexport class StateService implements StateServiceAbstraction {\n    private state: any = {};\n\n    get<T>(key: string): Promise<T> {\n        if (this.state.hasOwnProperty(key)) {\n            return Promise.resolve(this.state[key]);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        this.state[key] = obj;\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        delete this.state[key];\n        return Promise.resolve();\n    }\n\n    purge(): Promise<any> {\n        this.state = {};\n        return Promise.resolve();\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { SendService } from '../abstractions/send.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { FolderData } from '../models/data/folderData';\nimport { OrganizationData } from '../models/data/organizationData';\nimport { PolicyData } from '../models/data/policyData';\nimport { ProviderData } from '../models/data/providerData';\nimport { SendData } from '../models/data/sendData';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SendResponse } from '../models/response/sendResponse';\n\nconst Keys = {\n    lastSyncPrefix: 'lastSync_',\n};\n\nexport class SyncService implements SyncServiceAbstraction {\n    syncInProgress: boolean = false;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private settingsService: SettingsService, private folderService: FolderService,\n        private cipherService: CipherService, private cryptoService: CryptoService,\n        private collectionService: CollectionService, private storageService: StorageService,\n        private messagingService: MessagingService, private policyService: PolicyService,\n        private sendService: SendService, private logoutCallback: (expired: boolean) => Promise<void>) {\n    }\n\n    async getLastSync(): Promise<Date> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return null;\n        }\n\n        const lastSync = await this.storageService.get<any>(Keys.lastSyncPrefix + userId);\n        if (lastSync) {\n            return new Date(lastSync);\n        }\n\n        return null;\n    }\n\n    async setLastSync(date: Date): Promise<any> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.lastSyncPrefix + userId, date.toJSON());\n    }\n\n    async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n        this.syncStarted();\n        const isAuthenticated = await this.userService.isAuthenticated();\n        if (!isAuthenticated) {\n            return this.syncCompleted(false);\n        }\n\n        const now = new Date();\n        let needsSync = false;\n        try {\n            needsSync = await this.needsSyncing(forceSync);\n        } catch (e) {\n            if (allowThrowOnError) {\n                throw e;\n            }\n        }\n\n        if (!needsSync) {\n            await this.setLastSync(now);\n            return this.syncCompleted(false);\n        }\n\n        const userId = await this.userService.getUserId();\n        try {\n            await this.apiService.refreshIdentityToken();\n            const response = await this.apiService.getSync();\n\n            await this.syncProfile(response.profile);\n            await this.syncFolders(userId, response.folders);\n            await this.syncCollections(response.collections);\n            await this.syncCiphers(userId, response.ciphers);\n            await this.syncSends(userId, response.sends);\n            await this.syncSettings(userId, response.domains);\n            await this.syncPolicies(response.policies);\n\n            await this.setLastSync(now);\n            return this.syncCompleted(true);\n        } catch (e) {\n            if (allowThrowOnError) {\n                throw e;\n            } else {\n                return this.syncCompleted(false);\n            }\n        }\n    }\n\n    async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                const localFolder = await this.folderService.get(notification.id);\n                if ((!isEdit && localFolder == null) ||\n                    (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)) {\n                    const remoteFolder = await this.apiService.getFolder(notification.id);\n                    if (remoteFolder != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.folderService.upsert(new FolderData(remoteFolder, userId));\n                        this.messagingService.send('syncedUpsertedFolder', { folderId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch { }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.folderService.delete(notification.id);\n            this.messagingService.send('syncedDeletedFolder', { folderId: notification.id });\n            this.syncCompleted(true);\n            return true;\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                let shouldUpdate = true;\n                const localCipher = await this.cipherService.get(notification.id);\n                if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n                    shouldUpdate = false;\n                }\n\n                let checkCollections = false;\n                if (shouldUpdate) {\n                    if (isEdit) {\n                        shouldUpdate = localCipher != null;\n                        checkCollections = true;\n                    } else {\n                        if (notification.collectionIds == null || notification.organizationId == null) {\n                            shouldUpdate = localCipher == null;\n                        } else {\n                            shouldUpdate = false;\n                            checkCollections = true;\n                        }\n                    }\n                }\n\n                if (!shouldUpdate && checkCollections && notification.organizationId != null &&\n                    notification.collectionIds != null && notification.collectionIds.length > 0) {\n                    const collections = await this.collectionService.getAll();\n                    if (collections != null) {\n                        for (let i = 0; i < collections.length; i++) {\n                            if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                                shouldUpdate = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (shouldUpdate) {\n                    const remoteCipher = await this.apiService.getCipher(notification.id);\n                    if (remoteCipher != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n                        this.messagingService.send('syncedUpsertedCipher', { cipherId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch (e) {\n                if (e != null && e.statusCode === 404 && isEdit) {\n                    await this.cipherService.delete(notification.id);\n                    this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n                    return this.syncCompleted(true);\n                }\n            }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.cipherService.delete(notification.id);\n            this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n            return this.syncCompleted(true);\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                const localSend = await this.sendService.get(notification.id);\n                if ((!isEdit && localSend == null) ||\n                    (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)) {\n                    const remoteSend = await this.apiService.getSend(notification.id);\n                    if (remoteSend != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.sendService.upsert(new SendData(remoteSend, userId));\n                        this.messagingService.send('syncedUpsertedSend', { sendId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch { }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.sendService.delete(notification.id);\n            this.messagingService.send('syncedDeletedSend', { sendId: notification.id });\n            this.syncCompleted(true);\n            return true;\n        }\n        return this.syncCompleted(false);\n    }\n\n    // Helpers\n\n    private syncStarted() {\n        this.syncInProgress = true;\n        this.messagingService.send('syncStarted');\n    }\n\n    private syncCompleted(successfully: boolean): boolean {\n        this.syncInProgress = false;\n        this.messagingService.send('syncCompleted', { successfully: successfully });\n        return successfully;\n    }\n\n    private async needsSyncing(forceSync: boolean) {\n        if (forceSync) {\n            return true;\n        }\n\n        const lastSync = await this.getLastSync();\n        if (lastSync == null || lastSync.getTime() === 0) {\n            return true;\n        }\n\n        const response = await this.apiService.getAccountRevisionDate();\n        if (new Date(response) <= lastSync) {\n            return false;\n        }\n        return true;\n    }\n\n    private async syncProfile(response: ProfileResponse) {\n        const stamp = await this.userService.getSecurityStamp();\n        if (stamp != null && stamp !== response.securityStamp) {\n            if (this.logoutCallback != null) {\n                await this.logoutCallback(true);\n            }\n\n            throw new Error('Stamp has changed');\n        }\n\n        await this.cryptoService.setEncKey(response.key);\n        await this.cryptoService.setEncPrivateKey(response.privateKey);\n        await this.cryptoService.setProviderKeys(response.providers);\n        await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n        await this.userService.setSecurityStamp(response.securityStamp);\n        await this.userService.setEmailVerified(response.emailVerified);\n        await this.userService.setForcePasswordReset(response.forcePasswordReset);\n\n        const organizations: { [id: string]: OrganizationData; } = {};\n        response.organizations.forEach(o => {\n            organizations[o.id] = new OrganizationData(o);\n        });\n\n        const providers: { [id: string]: ProviderData; } = {};\n        response.providers.forEach(p => {\n            providers[p.id] = new ProviderData(p);\n        });\n\n        response.providerOrganizations.forEach(o => {\n            if (organizations[o.id] == null) {\n                organizations[o.id] = new OrganizationData(o);\n                organizations[o.id].isProviderUser = true;\n            }\n        });\n        return Promise.all([\n            this.userService.replaceOrganizations(organizations),\n            this.userService.replaceProviders(providers),\n        ]);\n    }\n\n    private async syncFolders(userId: string, response: FolderResponse[]) {\n        const folders: { [id: string]: FolderData; } = {};\n        response.forEach(f => {\n            folders[f.id] = new FolderData(f, userId);\n        });\n        return await this.folderService.replace(folders);\n    }\n\n    private async syncCollections(response: CollectionDetailsResponse[]) {\n        const collections: { [id: string]: CollectionData; } = {};\n        response.forEach(c => {\n            collections[c.id] = new CollectionData(c);\n        });\n        return await this.collectionService.replace(collections);\n    }\n\n    private async syncCiphers(userId: string, response: CipherResponse[]) {\n        const ciphers: { [id: string]: CipherData; } = {};\n        response.forEach(c => {\n            ciphers[c.id] = new CipherData(c, userId);\n        });\n        return await this.cipherService.replace(ciphers);\n    }\n\n    private async syncSends(userId: string, response: SendResponse[]) {\n        const sends: { [id: string]: SendData; } = {};\n        response.forEach(s => {\n            sends[s.id] = new SendData(s, userId);\n        });\n        return await this.sendService.replace(sends);\n    }\n\n    private async syncSettings(userId: string, response: DomainsResponse) {\n        let eqDomains: string[][] = [];\n        if (response != null && response.equivalentDomains != null) {\n            eqDomains = eqDomains.concat(response.equivalentDomains);\n        }\n\n        if (response != null && response.globalEquivalentDomains != null) {\n            response.globalEquivalentDomains.forEach(global => {\n                if (global.domains.length > 0) {\n                    eqDomains.push(global.domains);\n                }\n            });\n        }\n\n        return this.settingsService.setEquivalentDomains(eqDomains);\n    }\n\n    private async syncPolicies(response: PolicyResponse[]) {\n        const policies: { [id: string]: PolicyData; } = {};\n        if (response != null) {\n            response.forEach(p => {\n                policies[p.id] = new PolicyData(p);\n            });\n        }\n        return await this.policyService.replace(policies);\n    }\n}\n","import { ProfileOrganizationResponse } from '../response/profileOrganizationResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationData {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    hasPublicAndPrivateKeys: boolean;\n    providerId: string;\n    providerName: string;\n    isProviderUser: boolean;\n\n    constructor(response: ProfileOrganizationResponse) {\n        this.id = response.id;\n        this.name = response.name;\n        this.status = response.status;\n        this.type = response.type;\n        this.enabled = response.enabled;\n        this.usePolicies = response.usePolicies;\n        this.useGroups = response.useGroups;\n        this.useDirectory = response.useDirectory;\n        this.useEvents = response.useEvents;\n        this.useTotp = response.useTotp;\n        this.use2fa = response.use2fa;\n        this.useApi = response.useApi;\n        this.useSso = response.useSso;\n        this.useResetPassword = response.useResetPassword;\n        this.selfHost = response.selfHost;\n        this.usersGetPremium = response.usersGetPremium;\n        this.seats = response.seats;\n        this.maxCollections = response.maxCollections;\n        this.maxStorageGb = response.maxStorageGb;\n        this.ssoBound = response.ssoBound;\n        this.identifier = response.identifier;\n        this.permissions = response.permissions;\n        this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n        this.userId = response.userId;\n        this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n        this.providerId = response.providerId;\n        this.providerName = response.providerName;\n    }\n}\n","import { ProfileProviderResponse } from '../response/profileProviderResponse';\n\nimport { ProviderUserStatusType } from '../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../enums/providerUserType';\n\nexport class ProviderData {\n    id: string;\n    name: string;\n    status: ProviderUserStatusType;\n    type: ProviderUserType;\n    enabled: boolean;\n    userId: string;\n    useEvents: boolean;\n\n    constructor(response: ProfileProviderResponse) {\n        this.id = response.id;\n        this.name = response.name;\n        this.status = response.status;\n        this.type = response.type;\n        this.enabled = response.enabled;\n        this.userId = response.userId;\n        this.useEvents = response.useEvents;\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService as TokenServiceAbstraction } from '../abstractions/token.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    accessToken: 'accessToken',\n    refreshToken: 'refreshToken',\n    twoFactorTokenPrefix: 'twoFactorToken_',\n    clientId: 'apikey_clientId',\n    clientSecret: 'apikey_clientSecret',\n};\n\nexport class TokenService implements TokenServiceAbstraction {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n    clientId: string;\n    clientSecret: string;\n\n    constructor(private storageService: StorageService) {\n    }\n\n    async setTokens(accessToken: string, refreshToken: string, clientIdClientSecret: [string, string]): Promise<any> {\n        await this.setToken(accessToken);\n        await this.setRefreshToken(refreshToken);\n        if (clientIdClientSecret != null) {\n            await this.setClientId(clientIdClientSecret[0]);\n            await this.setClientSecret(clientIdClientSecret[1]);\n        }\n    }\n\n    async setClientId(clientId: string): Promise<any> {\n        this.clientId = clientId;\n        return this.storeTokenValue(Keys.clientId, clientId);\n    }\n\n    async getClientId(): Promise<string> {\n        if (this.clientId != null) {\n            return this.clientId;\n        }\n\n        this.clientId = await this.storageService.get<string>(Keys.clientId);\n        return this.clientId;\n    }\n\n    async setClientSecret(clientSecret: string): Promise<any> {\n        this.clientSecret = clientSecret;\n        return this.storeTokenValue(Keys.clientSecret, clientSecret);\n    }\n\n    async getClientSecret(): Promise<string> {\n        if (this.clientSecret != null) {\n            return this.clientSecret;\n        }\n\n        this.clientSecret = await this.storageService.get<string>(Keys.clientSecret);\n        return this.clientSecret;\n    }\n\n    async setToken(token: string): Promise<any> {\n        this.token = token;\n        this.decodedToken = null;\n        return this.storeTokenValue(Keys.accessToken, token);\n    }\n\n    async getToken(): Promise<string> {\n        if (this.token != null) {\n            return this.token;\n        }\n\n        this.token = await this.storageService.get<string>(Keys.accessToken);\n        return this.token;\n    }\n\n    async setRefreshToken(refreshToken: string): Promise<any> {\n        this.refreshToken = refreshToken;\n        return this.storeTokenValue(Keys.refreshToken, refreshToken);\n    }\n\n    async getRefreshToken(): Promise<string> {\n        if (this.refreshToken != null) {\n            return this.refreshToken;\n        }\n\n        this.refreshToken = await this.storageService.get<string>(Keys.refreshToken);\n        return this.refreshToken;\n    }\n\n    async toggleTokens(): Promise<any> {\n        const token = await this.getToken();\n        const refreshToken = await this.getRefreshToken();\n        const clientId = await this.getClientId();\n        const clientSecret = await this.getClientSecret();\n        const timeout = await this.storageService.get(ConstantsService.vaultTimeoutKey);\n        const action = await this.storageService.get(ConstantsService.vaultTimeoutActionKey);\n        if ((timeout != null || timeout === 0) && action === 'logOut') {\n            // if we have a vault timeout and the action is log out, reset tokens\n            await this.clearToken();\n            this.token = token;\n            this.refreshToken = refreshToken;\n            this.clientId = clientId;\n            this.clientSecret = clientSecret;\n            return;\n        }\n\n        await this.setToken(token);\n        await this.setRefreshToken(refreshToken);\n        await this.setClientId(clientId);\n        await this.setClientSecret(clientSecret);\n    }\n\n    setTwoFactorToken(token: string, email: string): Promise<any> {\n        return this.storageService.save(Keys.twoFactorTokenPrefix + email, token);\n    }\n\n    getTwoFactorToken(email: string): Promise<string> {\n        return this.storageService.get<string>(Keys.twoFactorTokenPrefix + email);\n    }\n\n    clearTwoFactorToken(email: string): Promise<any> {\n        return this.storageService.remove(Keys.twoFactorTokenPrefix + email);\n    }\n\n    async clearToken(): Promise<any> {\n        this.token = null;\n        this.decodedToken = null;\n        this.refreshToken = null;\n        this.clientId = null;\n        this.clientSecret = null;\n\n        await this.storageService.remove(Keys.accessToken);\n        await this.storageService.remove(Keys.refreshToken);\n        await this.storageService.remove(Keys.clientId);\n        await this.storageService.remove(Keys.clientSecret);\n    }\n\n    // jwthelper methods\n    // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n    decodeToken(): any {\n        if (this.decodedToken) {\n            return this.decodedToken;\n        }\n\n        if (this.token == null) {\n            throw new Error('Token not found.');\n        }\n\n        const parts = this.token.split('.');\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n        if (decoded == null) {\n            throw new Error('Cannot decode the token');\n        }\n\n        this.decodedToken = JSON.parse(decoded);\n        return this.decodedToken;\n    }\n\n    getTokenExpirationDate(): Date {\n        const decoded = this.decodeToken();\n        if (typeof decoded.exp === 'undefined') {\n            return null;\n        }\n\n        const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        d.setUTCSeconds(decoded.exp);\n        return d;\n    }\n\n    tokenSecondsRemaining(offsetSeconds: number = 0): number {\n        const d = this.getTokenExpirationDate();\n        if (d == null) {\n            return 0;\n        }\n\n        const msRemaining = d.valueOf() - (new Date().valueOf() + (offsetSeconds * 1000));\n        return Math.round(msRemaining / 1000);\n    }\n\n    tokenNeedsRefresh(minutes: number = 5): boolean {\n        const sRemaining = this.tokenSecondsRemaining();\n        return sRemaining < (60 * minutes);\n    }\n\n    getUserId(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.sub === 'undefined') {\n            throw new Error('No user id found');\n        }\n\n        return decoded.sub as string;\n    }\n\n    getEmail(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email === 'undefined') {\n            throw new Error('No email found');\n        }\n\n        return decoded.email as string;\n    }\n\n    getEmailVerified(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email_verified === 'undefined') {\n            throw new Error('No email verification found');\n        }\n\n        return decoded.email_verified as boolean;\n    }\n\n    getName(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.name === 'undefined') {\n            return null;\n        }\n\n        return decoded.name as string;\n    }\n\n    getPremium(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.premium === 'undefined') {\n            return false;\n        }\n\n        return decoded.premium as boolean;\n    }\n\n    getIssuer(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.iss === 'undefined') {\n            throw new Error('No issuer found');\n        }\n\n        return decoded.iss as string;\n    }\n\n    private async storeTokenValue(key: string, value: string) {\n        if (await this.skipTokenStorage()) {\n            // if we have a vault timeout and the action is log out, don't store token\n            return;\n        }\n\n        return this.storageService.save(key, value);\n    }\n\n    private async skipTokenStorage(): Promise<boolean> {\n        const timeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        const action = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n        return timeout != null && action === 'logOut';\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TotpService as TotpServiceAbstraction } from '../abstractions/totp.service';\n\nimport { Utils } from '../misc/utils';\n\nconst B32Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\nconst SteamChars = '23456789BCDFGHJKMNPQRTVWXY';\n\nexport class TotpService implements TotpServiceAbstraction {\n    constructor(private storageService: StorageService, private cryptoFunctionService: CryptoFunctionService) { }\n\n    async getCode(key: string): Promise<string> {\n        if (key == null) {\n            return null;\n        }\n        let period = 30;\n        let alg: 'sha1' | 'sha256' | 'sha512' = 'sha1';\n        let digits = 6;\n        let keyB32 = key;\n        const isOtpAuth = key.toLowerCase().indexOf('otpauth://') === 0;\n        const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf('steam://') === 0;\n        if (isOtpAuth) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('digits') && params.get('digits') != null) {\n                try {\n                    const digitParams = parseInt(params.get('digits').trim(), null);\n                    if (digitParams > 10) {\n                        digits = 10;\n                    } else if (digitParams > 0) {\n                        digits = digitParams;\n                    }\n                } catch { }\n            }\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    const periodParam = parseInt(params.get('period').trim(), null);\n                    if (periodParam > 0) {\n                        period = periodParam;\n                    }\n                } catch { }\n            }\n            if (params.has('secret') && params.get('secret') != null) {\n                keyB32 = params.get('secret');\n            }\n            if (params.has('algorithm') && params.get('algorithm') != null) {\n                const algParam = params.get('algorithm').toLowerCase();\n                if (algParam === 'sha1' || algParam === 'sha256' || algParam === 'sha512') {\n                    alg = algParam;\n                }\n            }\n        } else if (isSteamAuth) {\n            keyB32 = key.substr('steam://'.length);\n            digits = 5;\n        }\n\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, '0');\n        const timeBytes = Utils.fromHexToArray(timeHex);\n        const keyBytes = this.b32ToBytes(keyB32);\n\n        if (!keyBytes.length || !timeBytes.length) {\n            return null;\n        }\n\n        const hash = await this.sign(keyBytes, timeBytes, alg);\n        if (hash.length === 0) {\n            return null;\n        }\n\n        /* tslint:disable */\n        const offset = (hash[hash.length - 1] & 0xf);\n        const binary = ((hash[offset] & 0x7f) << 24) | ((hash[offset + 1] & 0xff) << 16) |\n            ((hash[offset + 2] & 0xff) << 8) | (hash[offset + 3] & 0xff);\n        /* tslint:enable */\n\n        let otp = '';\n        if (isSteamAuth) {\n            // tslint:disable-next-line\n            let fullCode = binary & 0x7fffffff;\n            for (let i = 0; i < digits; i++) {\n                otp += SteamChars[fullCode % SteamChars.length];\n                fullCode = Math.trunc(fullCode / SteamChars.length);\n            }\n        } else {\n            otp = (binary % Math.pow(10, digits)).toString();\n            otp = this.leftPad(otp, digits, '0');\n        }\n\n        return otp;\n    }\n\n    getTimeInterval(key: string): number {\n        let period = 30;\n        if (key != null && key.toLowerCase().indexOf('otpauth://') === 0) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    period = parseInt(params.get('period').trim(), null);\n                } catch { }\n            }\n        }\n        return period;\n    }\n\n    async isAutoCopyEnabled(): Promise<boolean> {\n        return !(await this.storageService.get<boolean>(ConstantsService.disableAutoTotpCopyKey));\n    }\n\n    // Helpers\n\n    private leftPad(s: string, l: number, p: string): string {\n        if (l + 1 >= s.length) {\n            s = Array(l + 1 - s.length).join(p) + s;\n        }\n        return s;\n    }\n\n    private decToHex(d: number): string {\n        return (d < 15.5 ? '0' : '') + Math.round(d).toString(16);\n    }\n\n    private b32ToHex(s: string): string {\n        s = s.toUpperCase();\n        let cleanedInput = '';\n\n        for (let i = 0; i < s.length; i++) {\n            if (B32Chars.indexOf(s[i]) < 0) {\n                continue;\n            }\n\n            cleanedInput += s[i];\n        }\n        s = cleanedInput;\n\n        let bits = '';\n        let hex = '';\n        for (let i = 0; i < s.length; i++) {\n            const byteIndex = B32Chars.indexOf(s.charAt(i));\n            if (byteIndex < 0) {\n                continue;\n            }\n            bits += this.leftPad(byteIndex.toString(2), 5, '0');\n        }\n        for (let i = 0; i + 4 <= bits.length; i += 4) {\n            const chunk = bits.substr(i, 4);\n            hex = hex + parseInt(chunk, 2).toString(16);\n        }\n        return hex;\n    }\n\n    private b32ToBytes(s: string): Uint8Array {\n        return Utils.fromHexToArray(this.b32ToHex(s));\n    }\n\n    private async sign(keyBytes: Uint8Array, timeBytes: Uint8Array, alg: 'sha1' | 'sha256' | 'sha512') {\n        const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n        return new Uint8Array(signature);\n    }\n}\n","import { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService as UserServiceAbstraction } from '../abstractions/user.service';\n\nimport { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nimport { KdfType } from '../enums/kdfType';\nimport { ProviderData } from '../models/data/providerData';\nimport { Provider } from '../models/domain/provider';\n\nconst Keys = {\n    userId: 'userId',\n    userEmail: 'userEmail',\n    stamp: 'securityStamp',\n    kdf: 'kdf',\n    kdfIterations: 'kdfIterations',\n    organizationsPrefix: 'organizations_',\n    providersPrefix: 'providers_',\n    emailVerified: 'emailVerified',\n    forcePasswordReset: 'forcePasswordReset',\n};\n\nexport class UserService implements UserServiceAbstraction {\n    private userId: string;\n    private email: string;\n    private stamp: string;\n    private kdf: KdfType;\n    private kdfIterations: number;\n    private emailVerified: boolean;\n    private forcePasswordReset: boolean;\n\n    constructor(private tokenService: TokenService, private storageService: StorageService) { }\n\n    async setInformation(userId: string, email: string, kdf: KdfType, kdfIterations: number): Promise<any> {\n        this.email = email;\n        this.userId = userId;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n\n        await this.storageService.save(Keys.userEmail, email);\n        await this.storageService.save(Keys.userId, userId);\n        await this.storageService.save(Keys.kdf, kdf);\n        await this.storageService.save(Keys.kdfIterations, kdfIterations);\n    }\n\n    setSecurityStamp(stamp: string): Promise<any> {\n        this.stamp = stamp;\n        return this.storageService.save(Keys.stamp, stamp);\n    }\n\n    setEmailVerified(emailVerified: boolean) {\n        this.emailVerified = emailVerified;\n        return this.storageService.save(Keys.emailVerified, emailVerified);\n    }\n\n    setForcePasswordReset(forcePasswordReset: boolean) {\n        this.forcePasswordReset = forcePasswordReset;\n        return this.storageService.save(Keys.forcePasswordReset, forcePasswordReset);\n    }\n\n    async getUserId(): Promise<string> {\n        if (this.userId == null) {\n            this.userId = await this.storageService.get<string>(Keys.userId);\n        }\n        return this.userId;\n    }\n\n    async getEmail(): Promise<string> {\n        if (this.email == null) {\n            this.email = await this.storageService.get<string>(Keys.userEmail);\n        }\n        return this.email;\n    }\n\n    async getSecurityStamp(): Promise<string> {\n        if (this.stamp == null) {\n            this.stamp = await this.storageService.get<string>(Keys.stamp);\n        }\n        return this.stamp;\n    }\n\n    async getKdf(): Promise<KdfType> {\n        if (this.kdf == null) {\n            this.kdf = await this.storageService.get<KdfType>(Keys.kdf);\n        }\n        return this.kdf;\n    }\n\n    async getKdfIterations(): Promise<number> {\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.storageService.get<number>(Keys.kdfIterations);\n        }\n        return this.kdfIterations;\n    }\n\n    async getEmailVerified(): Promise<boolean> {\n        if (this.emailVerified == null) {\n            this.emailVerified = await this.storageService.get<boolean>(Keys.emailVerified);\n        }\n        return this.emailVerified;\n    }\n\n    async getForcePasswordReset(): Promise<boolean> {\n        if (this.forcePasswordReset == null) {\n            this.forcePasswordReset = await this.storageService.get<boolean>(Keys.forcePasswordReset);\n        }\n        return this.forcePasswordReset;\n    }\n\n    async clear(): Promise<any> {\n        const userId = await this.getUserId();\n\n        await this.storageService.remove(Keys.userId);\n        await this.storageService.remove(Keys.userEmail);\n        await this.storageService.remove(Keys.stamp);\n        await this.storageService.remove(Keys.kdf);\n        await this.storageService.remove(Keys.kdfIterations);\n        await this.storageService.remove(Keys.forcePasswordReset);\n        await this.clearOrganizations(userId);\n        await this.clearProviders(userId);\n\n        this.userId = this.email = this.stamp = null;\n        this.kdf = null;\n        this.kdfIterations = null;\n    }\n\n    async isAuthenticated(): Promise<boolean> {\n        const token = await this.tokenService.getToken();\n        if (token == null) {\n            return false;\n        }\n\n        const userId = await this.getUserId();\n        return userId != null;\n    }\n\n    async canAccessPremium(): Promise<boolean> {\n        const authed = await this.isAuthenticated();\n        if (!authed) {\n            return false;\n        }\n\n        const tokenPremium = this.tokenService.getPremium();\n        if (tokenPremium) {\n            return true;\n        }\n\n        const orgs = await this.getAllOrganizations();\n        for (let i = 0; i < orgs.length; i++) {\n            if (orgs[i].usersGetPremium && orgs[i].enabled) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async getOrganization(id: string): Promise<Organization> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        if (organizations == null || !organizations.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Organization(organizations[id]);\n    }\n\n    async getOrganizationByIdentifier(identifier: string): Promise<Organization> {\n        const organizations = await this.getAllOrganizations();\n        if (organizations == null || organizations.length === 0) {\n            return null;\n        }\n\n        return organizations.find(o => o.identifier === identifier);\n    }\n\n    async getAllOrganizations(): Promise<Organization[]> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        const response: Organization[] = [];\n        for (const id in organizations) {\n            if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n                response.push(new Organization(organizations[id]));\n            }\n        }\n        return response;\n    }\n\n    async replaceOrganizations(organizations: { [id: string]: OrganizationData; }): Promise<any> {\n        const userId = await this.getUserId();\n        await this.storageService.save(Keys.organizationsPrefix + userId, organizations);\n    }\n\n    async clearOrganizations(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.organizationsPrefix + userId);\n    }\n\n    async getProvider(id: string): Promise<Provider> {\n        const userId = await this.getUserId();\n        const providers = await this.storageService.get<{ [id: string]: ProviderData; }>(\n            Keys.providersPrefix + userId);\n        if (providers == null || !providers.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Provider(providers[id]);\n    }\n\n    async getAllProviders(): Promise<Provider[]> {\n        const userId = await this.getUserId();\n        const providers = await this.storageService.get<{ [id: string]: ProviderData; }>(\n            Keys.providersPrefix + userId);\n        const response: Provider[] = [];\n        for (const id in providers) {\n            if (providers.hasOwnProperty(id)) {\n                response.push(new Provider(providers[id]));\n            }\n        }\n        return response;\n    }\n\n    async replaceProviders(providers: { [id: string]: ProviderData; }): Promise<any> {\n        const userId = await this.getUserId();\n        await this.storageService.save(Keys.providersPrefix + userId, providers);\n    }\n\n    async clearProviders(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.providersPrefix + userId);\n    }\n}\n","import { ProviderUserStatusType } from '../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../enums/providerUserType';\nimport { ProviderData } from '../data/providerData';\n\nexport class Provider {\n    id: string;\n    name: string;\n    status: ProviderUserStatusType;\n    type: ProviderUserType;\n    enabled: boolean;\n    userId: string;\n    useEvents: boolean;\n\n    constructor(obj?: ProviderData) {\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.name = obj.name;\n        this.status = obj.status;\n        this.type = obj.type;\n        this.enabled = obj.enabled;\n        this.userId = obj.userId;\n        this.useEvents = obj.useEvents;\n    }\n\n    get canAccess() {\n        if (this.isProviderAdmin) {\n            return true;\n        }\n        return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n    }\n\n    get canCreateOrganizations() {\n        return this.enabled && this.isProviderAdmin;\n    }\n\n    get canManageUsers() {\n        return this.isProviderAdmin;\n    }\n\n    get canAccessEventLogs() {\n        return this.isProviderAdmin;\n    }\n\n    get isProviderAdmin() {\n        return this.type === ProviderUserType.ProviderAdmin;\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from '../abstractions/vaultTimeout.service';\n\nimport { PolicyType } from '../enums/policyType';\nimport { EncString } from '../models/domain/encString';\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n    pinProtectedKey: EncString = null;\n    biometricLocked: boolean = true;\n    everBeenUnlocked: boolean = false;\n\n    private inited = false;\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private collectionService: CollectionService, private cryptoService: CryptoService,\n        protected platformUtilsService: PlatformUtilsService, private storageService: StorageService,\n        private messagingService: MessagingService, private searchService: SearchService,\n        private userService: UserService, private tokenService: TokenService, private policyService: PolicyService,\n        private lockedCallback: () => Promise<void> = null, private loggedOutCallback: () => Promise<void> = null) {\n    }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.startCheck();\n        }\n    }\n\n    startCheck() {\n        this.checkVaultTimeout();\n        setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n\n    // Keys aren't stored for a device that is locked or logged out.\n    async isLocked(): Promise<boolean> {\n        // Handle never lock startup situation\n        if (await this.cryptoService.hasKeyStored('auto') && !this.everBeenUnlocked) {\n            await this.cryptoService.getKey('auto');\n        }\n\n        return !this.cryptoService.hasKeyInMemory();\n    }\n\n    async checkVaultTimeout(): Promise<void> {\n        if (await this.platformUtilsService.isViewOpen()) {\n            // Do not lock\n            return;\n        }\n\n        // \"is logged out check\" - similar to isLocked, below\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        if (await this.isLocked()) {\n            return;\n        }\n\n        const vaultTimeout = await this.getVaultTimeout();\n        if (vaultTimeout == null || vaultTimeout < 0) {\n            return;\n        }\n\n        const lastActive = await this.storageService.get<number>(ConstantsService.lastActiveKey);\n        if (lastActive == null) {\n            return;\n        }\n\n        const vaultTimeoutSeconds = vaultTimeout * 60;\n        const diffSeconds = ((new Date()).getTime() - lastActive) / 1000;\n        if (diffSeconds >= vaultTimeoutSeconds) {\n            // Pivot based on the saved vault timeout action\n            const timeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n            timeoutAction === 'logOut' ? await this.logOut() : await this.lock(true);\n        }\n    }\n\n    async lock(allowSoftLock = false): Promise<void> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        this.biometricLocked = true;\n        this.everBeenUnlocked = true;\n        await this.cryptoService.clearKey(false);\n        await this.cryptoService.clearOrgKeys(true);\n        await this.cryptoService.clearKeyPair(true);\n        await this.cryptoService.clearEncKey(true);\n\n        this.folderService.clearCache();\n        this.cipherService.clearCache();\n        this.collectionService.clearCache();\n        this.searchService.clearIndex();\n        this.messagingService.send('locked');\n        if (this.lockedCallback != null) {\n            await this.lockedCallback();\n        }\n    }\n\n    async logOut(): Promise<void> {\n        if (this.loggedOutCallback != null) {\n            await this.loggedOutCallback();\n        }\n    }\n\n    async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n        await this.storageService.save(ConstantsService.vaultTimeoutKey, timeout);\n        await this.storageService.save(ConstantsService.vaultTimeoutActionKey, action);\n        await this.cryptoService.toggleKey();\n        await this.tokenService.toggleTokens();\n    }\n\n    async isPinLockSet(): Promise<[boolean, boolean]> {\n        const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n        const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n        return [protectedPin != null, pinProtectedKey != null];\n    }\n\n    async isBiometricLockSet(): Promise<boolean> {\n        return await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\n    }\n\n    async getVaultTimeout(): Promise<number> {\n        const vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n\n        if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n            const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n            // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n            let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n            if (vaultTimeout == null || timeout < 0) {\n                timeout = policy[0].data.minutes;\n            }\n\n            // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n            if (vaultTimeout !== timeout) {\n                await this.storageService.save(ConstantsService.vaultTimeoutKey, timeout);\n            }\n\n            return timeout;\n        }\n\n        return vaultTimeout;\n    }\n\n    clear(): Promise<any> {\n        this.everBeenUnlocked = false;\n        this.pinProtectedKey = null;\n        return this.storageService.remove(ConstantsService.protectedPin);\n    }\n}\n","import * as forge from 'node-forge';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n    private crypto: Crypto;\n    private subtle: SubtleCrypto;\n    private isIE: boolean;\n    private isOldSafari: boolean;\n\n    constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n        this.crypto = typeof win.crypto !== 'undefined' ? win.crypto : null;\n        this.subtle = (!!this.crypto && typeof win.crypto.subtle !== 'undefined') ? win.crypto.subtle : null;\n        this.isIE = platformUtilsService.isIE();\n        const ua = win.navigator.userAgent;\n        this.isOldSafari = platformUtilsService.isSafari() &&\n            (ua.indexOf(' Version/10.') > -1 || ua.indexOf(' Version/9.') > -1);\n    }\n\n    async pbkdf2(password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number): Promise<ArrayBuffer> {\n        if (this.isIE || this.isOldSafari) {\n            const forgeLen = algorithm === 'sha256' ? 32 : 64;\n            const passwordBytes = this.toByteString(password);\n            const saltBytes = this.toByteString(salt);\n            const derivedKeyBytes = (forge as any).pbkdf2(passwordBytes, saltBytes, iterations, forgeLen, algorithm);\n            return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n        }\n\n        const wcLen = algorithm === 'sha256' ? 256 : 512;\n        const passwordBuf = this.toBuf(password);\n        const saltBuf = this.toBuf(salt);\n\n        const pbkdf2Params: Pbkdf2Params = {\n            name: 'PBKDF2',\n            salt: saltBuf,\n            iterations: iterations,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', passwordBuf, { name: 'PBKDF2' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n    }\n\n    async hkdf(ikm: ArrayBuffer, salt: string | ArrayBuffer, info: string | ArrayBuffer,\n        outputByteSize: number, algorithm: 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        const saltBuf = this.toBuf(salt);\n        const infoBuf = this.toBuf(info);\n\n        const hkdfParams: HkdfParams = {\n            name: 'HKDF',\n            salt: saltBuf,\n            info: infoBuf,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', ikm, { name: 'HKDF' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n    }\n\n    // ref: https://tools.ietf.org/html/rfc5869\n    async hkdfExpand(prk: ArrayBuffer, info: string | ArrayBuffer, outputByteSize: number,\n        algorithm: 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        const hashLen = algorithm === 'sha256' ? 32 : 64;\n        if (outputByteSize > 255 * hashLen) {\n            throw new Error('outputByteSize is too large.');\n        }\n        const prkArr = new Uint8Array(prk);\n        if (prkArr.length < hashLen) {\n            throw new Error('prk is too small.');\n        }\n        const infoBuf = this.toBuf(info);\n        const infoArr = new Uint8Array(infoBuf);\n        let runningOkmLength = 0;\n        let previousT = new Uint8Array(0);\n        const n = Math.ceil(outputByteSize / hashLen);\n        const okm = new Uint8Array(n * hashLen);\n        for (let i = 0; i < n; i++) {\n            const t = new Uint8Array(previousT.length + infoArr.length + 1);\n            t.set(previousT);\n            t.set(infoArr, previousT.length);\n            t.set([i + 1], t.length - 1);\n            previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n            okm.set(previousT, runningOkmLength);\n            runningOkmLength += previousT.length;\n            if (runningOkmLength >= outputByteSize) {\n                break;\n            }\n        }\n        return okm.slice(0, outputByteSize).buffer;\n    }\n\n    async hash(value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): Promise<ArrayBuffer> {\n        if ((this.isIE && algorithm === 'sha1') || algorithm === 'md5') {\n            const md = algorithm === 'md5' ? forge.md.md5.create() : forge.md.sha1.create();\n            const valueBytes = this.toByteString(value);\n            md.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(md.digest().data).buffer;\n        }\n\n        const valueBuf = this.toBuf(value);\n        return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n    }\n\n    async hmac(value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        if (this.isIE && algorithm === 'sha512') {\n            const hmac = (forge as any).hmac.create();\n            const keyBytes = this.toByteString(key);\n            const valueBytes = this.toByteString(value);\n            hmac.start(algorithm, keyBytes);\n            hmac.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n        }\n\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', key, signingAlgorithm, false, ['sign']);\n        return await this.subtle.sign(signingAlgorithm, impKey, value);\n    }\n\n    // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n    // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n    // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n    async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n        const macKey = await this.randomBytes(32);\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        };\n        const impKey = await this.subtle.importKey('raw', macKey, signingAlgorithm, false, ['sign']);\n        const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n        const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n        if (mac1.byteLength !== mac2.byteLength) {\n            return false;\n        }\n\n        const arr1 = new Uint8Array(mac1);\n        const arr2 = new Uint8Array(mac2);\n        for (let i = 0; i < arr2.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hmacFast(value: string, key: string, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<string> {\n        const hmac = (forge as any).hmac.create();\n        hmac.start(algorithm, key);\n        hmac.update(value);\n        const bytes = hmac.digest().getBytes();\n        return Promise.resolve(bytes);\n    }\n\n    async compareFast(a: string, b: string): Promise<boolean> {\n        const rand = await this.randomBytes(32);\n        const bytes = new Uint32Array(rand);\n        const buffer = forge.util.createBuffer();\n        for (let i = 0; i < bytes.length; i++) {\n            buffer.putInt32(bytes[i]);\n        }\n        const macKey = buffer.getBytes();\n\n        const hmac = (forge as any).hmac.create();\n        hmac.start('sha256', macKey);\n        hmac.update(a);\n        const mac1 = hmac.digest().getBytes();\n\n        hmac.start(null, null);\n        hmac.update(b);\n        const mac2 = hmac.digest().getBytes();\n\n        const equals = mac1 === mac2;\n        return equals;\n    }\n\n    async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['encrypt']);\n        return await this.subtle.encrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    aesDecryptFastParameters(data: string, iv: string, mac: string, key: SymmetricCryptoKey):\n        DecryptParameters<string> {\n        const p = new DecryptParameters<string>();\n        if (key.meta != null) {\n            p.encKey = key.meta.encKeyByteString;\n            p.macKey = key.meta.macKeyByteString;\n        }\n\n        if (p.encKey == null) {\n            p.encKey = forge.util.decode64(key.encKeyB64);\n        }\n        p.data = forge.util.decode64(data);\n        p.iv = forge.util.decode64(iv);\n        p.macData = p.iv + p.data;\n        if (p.macKey == null && key.macKeyB64 != null) {\n            p.macKey = forge.util.decode64(key.macKeyB64);\n        }\n        if (mac != null) {\n            p.mac = forge.util.decode64(mac);\n        }\n\n        // cache byte string keys for later\n        if (key.meta == null) {\n            key.meta = {};\n        }\n        if (key.meta.encKeyByteString == null) {\n            key.meta.encKeyByteString = p.encKey;\n        }\n        if (p.macKey != null && key.meta.macKeyByteString == null) {\n            key.meta.macKeyByteString = p.macKey;\n        }\n\n        return p;\n    }\n\n    aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n        const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n        const decipher = (forge as any).cipher.createDecipher('AES-CBC', parameters.encKey);\n        decipher.start({ iv: parameters.iv });\n        decipher.update(dataBuffer);\n        decipher.finish();\n        const val = decipher.output.toString('utf8');\n        return Promise.resolve(val);\n    }\n\n    async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['decrypt']);\n        return await this.subtle.decrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('spki', publicKey, rsaParams, false, ['encrypt']);\n        return await this.subtle.encrypt(rsaParams, impKey, data);\n    }\n\n    async rsaDecrypt(data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, false, ['decrypt']);\n        return await this.subtle.decrypt(rsaParams, impKey, data);\n    }\n\n    async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const impPrivateKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, true, ['decrypt']);\n        const jwkPrivateKey = await this.subtle.exportKey('jwk', impPrivateKey);\n        const jwkPublicKeyParams = {\n            kty: 'RSA',\n            e: jwkPrivateKey.e,\n            n: jwkPrivateKey.n,\n            alg: 'RSA-OAEP',\n            ext: true,\n        };\n        const impPublicKey = await this.subtle.importKey('jwk', jwkPublicKeyParams, rsaParams, true, ['encrypt']);\n        return await this.subtle.exportKey('spki', impPublicKey);\n    }\n\n    async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            modulusLength: length,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const keyPair = (await this.subtle.generateKey(rsaParams, true, ['encrypt', 'decrypt'])) as CryptoKeyPair;\n        const publicKey = await this.subtle.exportKey('spki', keyPair.publicKey);\n        const privateKey = await this.subtle.exportKey('pkcs8', keyPair.privateKey);\n        return [publicKey, privateKey];\n    }\n\n    randomBytes(length: number): Promise<ArrayBuffer> {\n        const arr = new Uint8Array(length);\n        this.crypto.getRandomValues(arr);\n        return Promise.resolve(arr.buffer);\n    }\n\n    private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n        let buf: ArrayBuffer;\n        if (typeof (value) === 'string') {\n            buf = Utils.fromUtf8ToArray(value).buffer;\n        } else {\n            buf = value;\n        }\n        return buf;\n    }\n\n    private toByteString(value: string | ArrayBuffer): string {\n        let bytes: string;\n        if (typeof (value) === 'string') {\n            bytes = forge.util.encodeUtf8(value);\n        } else {\n            bytes = Utils.fromBufferToByteString(value);\n        }\n        return bytes;\n    }\n\n    private toWebCryptoAlgorithm(algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): string {\n        if (algorithm === 'md5') {\n            throw new Error('MD5 is not supported in WebCrypto.');\n        }\n        return algorithm === 'sha1' ? 'SHA-1' : algorithm === 'sha256' ? 'SHA-256' : 'SHA-512';\n    }\n}\n","export class DecryptParameters<T> {\n    encKey: T;\n    data: T;\n    iv: T;\n    macKey: T;\n    mac: T;\n    macData: T;\n}\n","import { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\n\nexport abstract class FileUploadService {\n    uploadSendFile: (uploadData: SendFileUploadDataResponse, fileName: EncString,\n        encryptedFileData: EncArrayBuffer) => Promise<any>;\n    uploadCipherAttachment: (admin: boolean, uploadData: AttachmentUploadDataResponse, fileName: EncString,\n        encryptedFileData: EncArrayBuffer) => Promise<any>;\n}\n","import {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    Injectable,\n    Injector,\n} from '@angular/core';\nimport * as jq from 'jquery';\nimport { first } from 'rxjs/operators';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { ModalRef } from 'jslib-angular/components/modal/modal.ref';\nimport { ModalService as BaseModalService } from 'jslib-angular/services/modal.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n    el: any = null;\n    modalOpen: boolean = false;\n\n    constructor(componentFactoryResolver: ComponentFactoryResolver, applicationRef: ApplicationRef,\n        injector: Injector, private messagingService: MessagingService) {\n        super(componentFactoryResolver, applicationRef, injector);\n    }\n\n    protected setupHandlers(modalRef: ModalRef) {\n        modalRef.onCreated.pipe(first()).subscribe(() => {\n            const modals = Array.from(document.querySelectorAll('.modal'));\n            if (modals.length > 0) {\n                this.el = jq(modals[0]);\n                this.el.modal('show');\n\n                this.el.on('show.bs.modal', () => {\n                    modalRef.show();\n                    this.messagingService.send('modalShow');\n                });\n                this.el.on('shown.bs.modal', () => {\n                    modalRef.shown();\n                    this.messagingService.send('modalShown');\n                    if (!Utils.isMobileBrowser) {\n                        this.el.find('*[appAutoFocus]').focus();\n                    }\n                });\n                this.el.on('hide.bs.modal', () => {\n                    this.messagingService.send('modalClose');\n                });\n                this.el.on('hidden.bs.modal', () => {\n                    modalRef.closed();\n                    this.messagingService.send('modalClosed');\n                });\n            }\n        });\n\n        modalRef.onClose.pipe(first()).subscribe(() => {\n            if (this.el != null) {\n                this.el.modal('hide');\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class WildcardRoutingModule { }\n"],"sourceRoot":""}